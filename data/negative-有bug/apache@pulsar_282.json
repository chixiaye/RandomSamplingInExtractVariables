{
  "id" : 282,
  "expression" : "Whitebox",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarAvroTableSinkTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Whitebox",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 97,
      "startColumnNumber" : 8,
      "endLineNumber" : 97,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Whitebox.setInternalState(sink,\"fieldNames\",fieldNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Whitebox.setInternalState(sink,\"fieldNames\",fieldNames);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 898,
        "startLineNumber" : 85,
        "startColumnNumber" : 59,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PulsarAvroTableSink sink=new PulsarAvroTableSink(SERVICE_URL,TOPIC_NAME,ROUTING_KEY,NasaMission.class);\n  FlinkPulsarProducer producer=Mockito.mock(FlinkPulsarProducer.class);\n  PowerMockito.whenNew(FlinkPulsarProducer.class).withArguments(Mockito.anyString(),Mockito.anyString(),Mockito.any(SerializationSchema.class),Mockito.any(PulsarKeyExtractor.class)).thenReturn(producer);\n  Whitebox.setInternalState(sink,\"fieldNames\",fieldNames);\n  Whitebox.setInternalState(sink,\"fieldTypes\",typeInformations);\n  Whitebox.setInternalState(sink,\"serializationSchema\",Mockito.mock(SerializationSchema.class));\n  Whitebox.setInternalState(sink,\"keyExtractor\",Mockito.mock(PulsarKeyExtractor.class));\n  return sink;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private PulsarAvroTableSink spySink() throws Exception {\n  PulsarAvroTableSink sink=new PulsarAvroTableSink(SERVICE_URL,TOPIC_NAME,ROUTING_KEY,NasaMission.class);\n  FlinkPulsarProducer producer=Mockito.mock(FlinkPulsarProducer.class);\n  PowerMockito.whenNew(FlinkPulsarProducer.class).withArguments(Mockito.anyString(),Mockito.anyString(),Mockito.any(SerializationSchema.class),Mockito.any(PulsarKeyExtractor.class)).thenReturn(producer);\n  Whitebox.setInternalState(sink,\"fieldNames\",fieldNames);\n  Whitebox.setInternalState(sink,\"fieldTypes\",typeInformations);\n  Whitebox.setInternalState(sink,\"serializationSchema\",Mockito.mock(SerializationSchema.class));\n  Whitebox.setInternalState(sink,\"keyExtractor\",Mockito.mock(PulsarKeyExtractor.class));\n  return sink;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Whitebox.setInternalState(sink,\"fieldNames\",fieldNames);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Whitebox",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 98,
      "startColumnNumber" : 8,
      "endLineNumber" : 98,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Whitebox.setInternalState(sink,\"fieldTypes\",typeInformations)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Whitebox.setInternalState(sink,\"fieldTypes\",typeInformations);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 898,
        "startLineNumber" : 85,
        "startColumnNumber" : 59,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PulsarAvroTableSink sink=new PulsarAvroTableSink(SERVICE_URL,TOPIC_NAME,ROUTING_KEY,NasaMission.class);\n  FlinkPulsarProducer producer=Mockito.mock(FlinkPulsarProducer.class);\n  PowerMockito.whenNew(FlinkPulsarProducer.class).withArguments(Mockito.anyString(),Mockito.anyString(),Mockito.any(SerializationSchema.class),Mockito.any(PulsarKeyExtractor.class)).thenReturn(producer);\n  Whitebox.setInternalState(sink,\"fieldNames\",fieldNames);\n  Whitebox.setInternalState(sink,\"fieldTypes\",typeInformations);\n  Whitebox.setInternalState(sink,\"serializationSchema\",Mockito.mock(SerializationSchema.class));\n  Whitebox.setInternalState(sink,\"keyExtractor\",Mockito.mock(PulsarKeyExtractor.class));\n  return sink;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private PulsarAvroTableSink spySink() throws Exception {\n  PulsarAvroTableSink sink=new PulsarAvroTableSink(SERVICE_URL,TOPIC_NAME,ROUTING_KEY,NasaMission.class);\n  FlinkPulsarProducer producer=Mockito.mock(FlinkPulsarProducer.class);\n  PowerMockito.whenNew(FlinkPulsarProducer.class).withArguments(Mockito.anyString(),Mockito.anyString(),Mockito.any(SerializationSchema.class),Mockito.any(PulsarKeyExtractor.class)).thenReturn(producer);\n  Whitebox.setInternalState(sink,\"fieldNames\",fieldNames);\n  Whitebox.setInternalState(sink,\"fieldTypes\",typeInformations);\n  Whitebox.setInternalState(sink,\"serializationSchema\",Mockito.mock(SerializationSchema.class));\n  Whitebox.setInternalState(sink,\"keyExtractor\",Mockito.mock(PulsarKeyExtractor.class));\n  return sink;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Whitebox.setInternalState(sink,\"fieldTypes\",typeInformations);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Whitebox",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 99,
      "startColumnNumber" : 8,
      "endLineNumber" : 99,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 103
      },
      "nodeContext" : "Whitebox.setInternalState(sink,\"serializationSchema\",Mockito.mock(SerializationSchema.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 104
      },
      "nodeContext" : "Whitebox.setInternalState(sink,\"serializationSchema\",Mockito.mock(SerializationSchema.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 898,
        "startLineNumber" : 85,
        "startColumnNumber" : 59,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PulsarAvroTableSink sink=new PulsarAvroTableSink(SERVICE_URL,TOPIC_NAME,ROUTING_KEY,NasaMission.class);\n  FlinkPulsarProducer producer=Mockito.mock(FlinkPulsarProducer.class);\n  PowerMockito.whenNew(FlinkPulsarProducer.class).withArguments(Mockito.anyString(),Mockito.anyString(),Mockito.any(SerializationSchema.class),Mockito.any(PulsarKeyExtractor.class)).thenReturn(producer);\n  Whitebox.setInternalState(sink,\"fieldNames\",fieldNames);\n  Whitebox.setInternalState(sink,\"fieldTypes\",typeInformations);\n  Whitebox.setInternalState(sink,\"serializationSchema\",Mockito.mock(SerializationSchema.class));\n  Whitebox.setInternalState(sink,\"keyExtractor\",Mockito.mock(PulsarKeyExtractor.class));\n  return sink;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private PulsarAvroTableSink spySink() throws Exception {\n  PulsarAvroTableSink sink=new PulsarAvroTableSink(SERVICE_URL,TOPIC_NAME,ROUTING_KEY,NasaMission.class);\n  FlinkPulsarProducer producer=Mockito.mock(FlinkPulsarProducer.class);\n  PowerMockito.whenNew(FlinkPulsarProducer.class).withArguments(Mockito.anyString(),Mockito.anyString(),Mockito.any(SerializationSchema.class),Mockito.any(PulsarKeyExtractor.class)).thenReturn(producer);\n  Whitebox.setInternalState(sink,\"fieldNames\",fieldNames);\n  Whitebox.setInternalState(sink,\"fieldTypes\",typeInformations);\n  Whitebox.setInternalState(sink,\"serializationSchema\",Mockito.mock(SerializationSchema.class));\n  Whitebox.setInternalState(sink,\"keyExtractor\",Mockito.mock(PulsarKeyExtractor.class));\n  return sink;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 104
      },
      "nodeContext" : "Whitebox.setInternalState(sink,\"serializationSchema\",Mockito.mock(SerializationSchema.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Whitebox",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 100,
      "startColumnNumber" : 8,
      "endLineNumber" : 100,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 95
      },
      "nodeContext" : "Whitebox.setInternalState(sink,\"keyExtractor\",Mockito.mock(PulsarKeyExtractor.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Whitebox.setInternalState(sink,\"keyExtractor\",Mockito.mock(PulsarKeyExtractor.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 898,
        "startLineNumber" : 85,
        "startColumnNumber" : 59,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PulsarAvroTableSink sink=new PulsarAvroTableSink(SERVICE_URL,TOPIC_NAME,ROUTING_KEY,NasaMission.class);\n  FlinkPulsarProducer producer=Mockito.mock(FlinkPulsarProducer.class);\n  PowerMockito.whenNew(FlinkPulsarProducer.class).withArguments(Mockito.anyString(),Mockito.anyString(),Mockito.any(SerializationSchema.class),Mockito.any(PulsarKeyExtractor.class)).thenReturn(producer);\n  Whitebox.setInternalState(sink,\"fieldNames\",fieldNames);\n  Whitebox.setInternalState(sink,\"fieldTypes\",typeInformations);\n  Whitebox.setInternalState(sink,\"serializationSchema\",Mockito.mock(SerializationSchema.class));\n  Whitebox.setInternalState(sink,\"keyExtractor\",Mockito.mock(PulsarKeyExtractor.class));\n  return sink;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private PulsarAvroTableSink spySink() throws Exception {\n  PulsarAvroTableSink sink=new PulsarAvroTableSink(SERVICE_URL,TOPIC_NAME,ROUTING_KEY,NasaMission.class);\n  FlinkPulsarProducer producer=Mockito.mock(FlinkPulsarProducer.class);\n  PowerMockito.whenNew(FlinkPulsarProducer.class).withArguments(Mockito.anyString(),Mockito.anyString(),Mockito.any(SerializationSchema.class),Mockito.any(PulsarKeyExtractor.class)).thenReturn(producer);\n  Whitebox.setInternalState(sink,\"fieldNames\",fieldNames);\n  Whitebox.setInternalState(sink,\"fieldTypes\",typeInformations);\n  Whitebox.setInternalState(sink,\"serializationSchema\",Mockito.mock(SerializationSchema.class));\n  Whitebox.setInternalState(sink,\"keyExtractor\",Mockito.mock(PulsarKeyExtractor.class));\n  return sink;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Whitebox.setInternalState(sink,\"keyExtractor\",Mockito.mock(PulsarKeyExtractor.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 97,
    "startColumnNumber" : 8,
    "endLineNumber" : 97,
    "endColumnNumber" : 16
  }, {
    "charLength" : 8,
    "startLineNumber" : 98,
    "startColumnNumber" : 8,
    "endLineNumber" : 98,
    "endColumnNumber" : 16
  }, {
    "charLength" : 8,
    "startLineNumber" : 99,
    "startColumnNumber" : 8,
    "endLineNumber" : 99,
    "endColumnNumber" : 16
  }, {
    "charLength" : 8,
    "startLineNumber" : 100,
    "startColumnNumber" : 8,
    "endLineNumber" : 100,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}