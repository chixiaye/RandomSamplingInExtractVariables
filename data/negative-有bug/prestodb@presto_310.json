{
  "id" : 310,
  "expression" : "boolean.class",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/operator/scalar/ElementToArrayConcatFunction.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "boolean.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 84,
      "startColumnNumber" : 34,
      "endLineNumber" : 84,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 47
      },
      "nodeContext" : "type.getJavaType() == boolean.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type.getJavaType() == boolean.class) {\n  methodHandle=METHOD_HANDLE_BOOLEAN;\n}\n else if (type.getJavaType() == long.class) {\n  methodHandle=METHOD_HANDLE_LONG;\n}\n else if (type.getJavaType() == double.class) {\n  methodHandle=METHOD_HANDLE_DOUBLE;\n}\n else if (type.getJavaType() == Slice.class) {\n  methodHandle=METHOD_HANDLE_SLICE;\n}\n else {\n  methodHandle=METHOD_HANDLE_OBJECT;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 960,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Type type=boundVariables.getTypeVariable(\"E\");\n  MethodHandle methodHandle;\n  if (type.getJavaType() == boolean.class) {\n    methodHandle=METHOD_HANDLE_BOOLEAN;\n  }\n else   if (type.getJavaType() == long.class) {\n    methodHandle=METHOD_HANDLE_LONG;\n  }\n else   if (type.getJavaType() == double.class) {\n    methodHandle=METHOD_HANDLE_DOUBLE;\n  }\n else   if (type.getJavaType() == Slice.class) {\n    methodHandle=METHOD_HANDLE_SLICE;\n  }\n else {\n    methodHandle=METHOD_HANDLE_OBJECT;\n  }\n  methodHandle=methodHandle.bindTo(type);\n  return new BuiltInScalarFunctionImplementation(false,ImmutableList.of(valueTypeArgumentProperty(RETURN_NULL_ON_NULL),valueTypeArgumentProperty(RETURN_NULL_ON_NULL)),methodHandle);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public BuiltInScalarFunctionImplementation specialize(BoundVariables boundVariables,int arity,FunctionAndTypeManager functionAndTypeManager){\n  Type type=boundVariables.getTypeVariable(\"E\");\n  MethodHandle methodHandle;\n  if (type.getJavaType() == boolean.class) {\n    methodHandle=METHOD_HANDLE_BOOLEAN;\n  }\n else   if (type.getJavaType() == long.class) {\n    methodHandle=METHOD_HANDLE_LONG;\n  }\n else   if (type.getJavaType() == double.class) {\n    methodHandle=METHOD_HANDLE_DOUBLE;\n  }\n else   if (type.getJavaType() == Slice.class) {\n    methodHandle=METHOD_HANDLE_SLICE;\n  }\n else {\n    methodHandle=METHOD_HANDLE_OBJECT;\n  }\n  methodHandle=methodHandle.bindTo(type);\n  return new BuiltInScalarFunctionImplementation(false,ImmutableList.of(valueTypeArgumentProperty(RETURN_NULL_ON_NULL),valueTypeArgumentProperty(RETURN_NULL_ON_NULL)),methodHandle);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 47
      },
      "nodeContext" : "type.getJavaType() == boolean.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Boolean>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 84,
    "startColumnNumber" : 34,
    "endLineNumber" : 84,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}