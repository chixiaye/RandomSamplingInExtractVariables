{
  "id" : 240,
  "expression" : "maxPendingRecords < 1",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-io/hdfs2/src/main/java/org/apache/pulsar/io/hdfs2/sink/HdfsSinkConfig.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "maxPendingRecords < 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 108,
      "startColumnNumber" : 12,
      "endLineNumber" : 108,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (maxPendingRecords < 1) {\n  throw new IllegalArgumentException(\"Max Pending Records must be a positive integer\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 97,
        "startColumnNumber" : 27,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.validate();\n  if ((StringUtils.isEmpty(fileExtension) && getCompression() == null) || StringUtils.isEmpty(filenamePrefix)) {\n    throw new IllegalArgumentException(\"Required property not set.\");\n  }\n  if (syncInterval < 0) {\n    throw new IllegalArgumentException(\"Sync Interval cannot be negative\");\n  }\n  if (maxPendingRecords < 1) {\n    throw new IllegalArgumentException(\"Max Pending Records must be a positive integer\");\n  }\n  if (subdirectoryPattern != null) {\n    try {\n      LocalDateTime.of(2020,1,1,12,0).format(DateTimeFormatter.ofPattern(subdirectoryPattern));\n    }\n catch (    Exception e) {\n      throw new IllegalArgumentException(subdirectoryPattern + \" is not a valid pattern: \" + e.getMessage());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 918,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void validate(){\n  super.validate();\n  if ((StringUtils.isEmpty(fileExtension) && getCompression() == null) || StringUtils.isEmpty(filenamePrefix)) {\n    throw new IllegalArgumentException(\"Required property not set.\");\n  }\n  if (syncInterval < 0) {\n    throw new IllegalArgumentException(\"Sync Interval cannot be negative\");\n  }\n  if (maxPendingRecords < 1) {\n    throw new IllegalArgumentException(\"Max Pending Records must be a positive integer\");\n  }\n  if (subdirectoryPattern != null) {\n    try {\n      LocalDateTime.of(2020,1,1,12,0).format(DateTimeFormatter.ofPattern(subdirectoryPattern));\n    }\n catch (    Exception e) {\n      throw new IllegalArgumentException(subdirectoryPattern + \" is not a valid pattern: \" + e.getMessage());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (maxPendingRecords < 1) {\n  throw new IllegalArgumentException(\"Max Pending Records must be a positive integer\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 108,
    "startColumnNumber" : 12,
    "endLineNumber" : 108,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}