{
  "id" : 288,
  "expression" : "noWordSep == null",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/syntax/TextUtilities.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "noWordSep == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 136,
      "startColumnNumber" : 19,
      "endLineNumber" : 136,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 136,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 39
      },
      "nodeContext" : "if (noWordSep == null) noWordSep=\"\";\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char ch=line.charAt(pos - 1);\n  if (noWordSep == null)   noWordSep=\"\";\n  boolean selectNoLetter=(!Character.isLetterOrDigit(ch) && noWordSep.indexOf(ch) == -1);\n  int wordStart=0;\n  for (int i=pos - 1; i >= 0; i--) {\n    ch=line.charAt(i);\n    if (selectNoLetter ^ (!Character.isLetterOrDigit(ch) && noWordSep.indexOf(ch) == -1)) {\n      wordStart=i + 1;\n      break;\n    }\n  }\n  return wordStart;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * Locates the start of the word at the specified position.\n * @param line The text\n * @param pos The position\n */\npublic static int findWordStart(String line,int pos,String noWordSep){\n  char ch=line.charAt(pos - 1);\n  if (noWordSep == null)   noWordSep=\"\";\n  boolean selectNoLetter=(!Character.isLetterOrDigit(ch) && noWordSep.indexOf(ch) == -1);\n  int wordStart=0;\n  for (int i=pos - 1; i >= 0; i--) {\n    ch=line.charAt(i);\n    if (selectNoLetter ^ (!Character.isLetterOrDigit(ch) && noWordSep.indexOf(ch) == -1)) {\n      wordStart=i + 1;\n      break;\n    }\n  }\n  return wordStart;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 136,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 39
      },
      "nodeContext" : "if (noWordSep == null) noWordSep=\"\";\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 136,
    "startColumnNumber" : 19,
    "endLineNumber" : 136,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}