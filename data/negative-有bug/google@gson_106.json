{
  "id" : 106,
  "expression" : "Integer",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/ParameterizedTypeFixtures.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 163,
      "startColumnNumber" : 20,
      "endLineNumber" : 163,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 163,
        "startColumnNumber" : 20,
        "endLineNumber" : 163,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Integer.valueOf(jsonElement.getAsInt())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 163,
        "startColumnNumber" : 16,
        "endLineNumber" : 163,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(T)Integer.valueOf(jsonElement.getAsInt())",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 59
      },
      "nodeContext" : "value=(T)Integer.valueOf(jsonElement.getAsInt())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 60
      },
      "nodeContext" : "value=(T)Integer.valueOf(jsonElement.getAsInt());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 162,
        "startColumnNumber" : 41,
        "endLineNumber" : 164,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  value=(T)Integer.valueOf(jsonElement.getAsInt());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 162,
        "startColumnNumber" : 6,
        "endLineNumber" : 168,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (genericClass == Integer.class) {\n  value=(T)Integer.valueOf(jsonElement.getAsInt());\n}\n else if (genericClass == String.class) {\n  value=(T)jsonElement.getAsString();\n}\n else {\n  value=(T)jsonElement;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 155,
        "startColumnNumber" : 70,
        "endLineNumber" : 175,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Type genericClass=((ParameterizedType)typeOfT).getActualTypeArguments()[0];\n  Class<?> rawType=$Gson$Types.getRawType(genericClass);\n  String className=rawType.getSimpleName();\n  JsonElement jsonElement=json.getAsJsonObject().get(className);\n  T value;\n  if (genericClass == Integer.class) {\n    value=(T)Integer.valueOf(jsonElement.getAsInt());\n  }\n else   if (genericClass == String.class) {\n    value=(T)jsonElement.getAsString();\n  }\n else {\n    value=(T)jsonElement;\n  }\n  if (Primitives.isPrimitive(genericClass)) {\n    PrimitiveTypeAdapter typeAdapter=new PrimitiveTypeAdapter();\n    value=(T)typeAdapter.adaptType(value,rawType);\n  }\n  return new MyParameterizedType<T>(value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 964,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 175,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public MyParameterizedType<T> deserialize(JsonElement json,Type typeOfT,JsonDeserializationContext context) throws JsonParseException {\n  Type genericClass=((ParameterizedType)typeOfT).getActualTypeArguments()[0];\n  Class<?> rawType=$Gson$Types.getRawType(genericClass);\n  String className=rawType.getSimpleName();\n  JsonElement jsonElement=json.getAsJsonObject().get(className);\n  T value;\n  if (genericClass == Integer.class) {\n    value=(T)Integer.valueOf(jsonElement.getAsInt());\n  }\n else   if (genericClass == String.class) {\n    value=(T)jsonElement.getAsString();\n  }\n else {\n    value=(T)jsonElement;\n  }\n  if (Primitives.isPrimitive(genericClass)) {\n    PrimitiveTypeAdapter typeAdapter=new PrimitiveTypeAdapter();\n    value=(T)typeAdapter.adaptType(value,rawType);\n  }\n  return new MyParameterizedType<T>(value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 60
      },
      "nodeContext" : "value=(T)Integer.valueOf(jsonElement.getAsInt());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 163,
    "startColumnNumber" : 20,
    "endLineNumber" : 163,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}