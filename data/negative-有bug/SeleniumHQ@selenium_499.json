{
  "id" : 499,
  "expression" : "Json.MAP_TYPE",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/remote/server/commandhandler/GetLogsOfType.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Json.MAP_TYPE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 54,
      "startColumnNumber" : 60,
      "endLineNumber" : 54,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 54,
        "startColumnNumber" : 31,
        "endLineNumber" : 54,
        "endColumnNumber" : 74
      },
      "nodeContext" : "json.toType(originalPayload,Json.MAP_TYPE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 54,
        "startColumnNumber" : 24,
        "endLineNumber" : 54,
        "endColumnNumber" : 74
      },
      "nodeContext" : "args=json.toType(originalPayload,Json.MAP_TYPE)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Map<String,Object> args=json.toType(originalPayload,Json.MAP_TYPE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 889,
        "startLineNumber" : 51,
        "startColumnNumber" : 75,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String originalPayload=string(req);\n  Map<String,Object> args=json.toType(originalPayload,Json.MAP_TYPE);\n  String type=(String)args.get(\"type\");\n  if (!LogType.SERVER.equals(type)) {\n    HttpRequest upReq=new HttpRequest(POST,String.format(\"/session/%s/log\",session.getId()));\n    upReq.setContent(utf8String(originalPayload));\n    return session.execute(upReq);\n  }\n  LogEntries entries=null;\n  try {\n    entries=LoggingManager.perSessionLogHandler().getSessionLog(session.getId());\n  }\n catch (  IOException e) {\n    throw new UncheckedIOException(e);\n  }\n  Response response=new Response(session.getId());\n  response.setStatus(ErrorCodes.SUCCESS);\n  response.setValue(entries);\n  HttpResponse resp=new HttpResponse();\n  session.getDownstreamDialect().getResponseCodec().encode(() -> resp,response);\n  return resp;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 974,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public HttpResponse execute(HttpRequest req) throws UncheckedIOException {\n  String originalPayload=string(req);\n  Map<String,Object> args=json.toType(originalPayload,Json.MAP_TYPE);\n  String type=(String)args.get(\"type\");\n  if (!LogType.SERVER.equals(type)) {\n    HttpRequest upReq=new HttpRequest(POST,String.format(\"/session/%s/log\",session.getId()));\n    upReq.setContent(utf8String(originalPayload));\n    return session.execute(upReq);\n  }\n  LogEntries entries=null;\n  try {\n    entries=LoggingManager.perSessionLogHandler().getSessionLog(session.getId());\n  }\n catch (  IOException e) {\n    throw new UncheckedIOException(e);\n  }\n  Response response=new Response(session.getId());\n  response.setStatus(ErrorCodes.SUCCESS);\n  response.setValue(entries);\n  HttpResponse resp=new HttpResponse();\n  session.getDownstreamDialect().getResponseCodec().encode(() -> resp,response);\n  return resp;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Map<String,Object> args=json.toType(originalPayload,Json.MAP_TYPE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.reflect.Type"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 54,
    "startColumnNumber" : 60,
    "endLineNumber" : 54,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}