{
  "id" : 256,
  "expression" : "0",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-cron/src/main/java/cn/hutool/cron/pattern/matcher/ValueMatcherBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 36,
      "startColumnNumber" : 23,
      "endLineNumber" : 36,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 36,
        "startColumnNumber" : 6,
        "endLineNumber" : 36,
        "endColumnNumber" : 24
      },
      "nodeContext" : "values.size() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 38,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (values.size() == 0) {\n  throw new CronException(\"Invalid field: [{}]\",value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 29,
        "startColumnNumber" : 68,
        "endLineNumber" : 49,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isMatchAllStr(value)) {\n    return new AlwaysTrueValueMatcher();\n  }\n  List<Integer> values=parseArray(value,parser);\n  if (values.size() == 0) {\n    throw new CronException(\"Invalid field: [{}]\",value);\n  }\n  if (parser instanceof DayOfMonthValueParser) {\n    return new DayOfMonthValueMatcher(values);\n  }\n else   if (parser instanceof YearValueParser) {\n    return new YearValueMatcher(values);\n  }\n else {\n    return new BoolArrayValueMatcher(values);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 791,
        "startLineNumber" : 21,
        "startColumnNumber" : 1,
        "endLineNumber" : 49,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 处理定时任务表达式每个时间字段<br> 多个时间使用逗号分隔\n * @param value 某个时间字段\n * @param parser 针对这个时间字段的解析器\n * @return List\n */\npublic static ValueMatcher build(String value,ValueParser parser){\n  if (isMatchAllStr(value)) {\n    return new AlwaysTrueValueMatcher();\n  }\n  List<Integer> values=parseArray(value,parser);\n  if (values.size() == 0) {\n    throw new CronException(\"Invalid field: [{}]\",value);\n  }\n  if (parser instanceof DayOfMonthValueParser) {\n    return new DayOfMonthValueMatcher(values);\n  }\n else   if (parser instanceof YearValueParser) {\n    return new YearValueMatcher(values);\n  }\n else {\n    return new BoolArrayValueMatcher(values);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 36,
        "startColumnNumber" : 6,
        "endLineNumber" : 36,
        "endColumnNumber" : 24
      },
      "nodeContext" : "values.size() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 36,
    "startColumnNumber" : 23,
    "endLineNumber" : 36,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}