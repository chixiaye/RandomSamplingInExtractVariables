{
  "id" : 240,
  "expression" : "results.observeOnThread.get().getName().startsWith(\"HystrixTimer\")",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/HystrixObservableCommandTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "results.observeOnThread.get().getName().startsWith(\"HystrixTimer\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 66,
      "startLineNumber" : 4176,
      "startColumnNumber" : 19,
      "endLineNumber" : 4176,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 10,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 4176,
        "startColumnNumber" : 8,
        "endLineNumber" : 4176,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertTrue(results.observeOnThread.get().getName().startsWith(\"HystrixTimer\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 4176,
        "startColumnNumber" : 8,
        "endLineNumber" : 4176,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertTrue(results.observeOnThread.get().getName().startsWith(\"HystrixTimer\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 666,
        "startLineNumber" : 4169,
        "startColumnNumber" : 86,
        "endLineNumber" : 4182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RequestContextTestResults results=testRequestContextOnTimeout(ExecutionIsolationStrategy.SEMAPHORE,Schedulers.immediate());\n  assertTrue(results.isContextInitialized.get());\n  assertTrue(results.originThread.get().equals(Thread.currentThread()));\n  assertTrue(results.isContextInitializedObserveOn.get());\n  assertTrue(results.observeOnThread.get().getName().startsWith(\"HystrixTimer\"));\n  assertFalse(results.command.isExecutedInThread());\n  HystrixCircuitBreaker.Factory.reset();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 869,
        "startLineNumber" : 4165,
        "startColumnNumber" : 4,
        "endLineNumber" : 4182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Synchronous Observable and semaphore isolation. Only [Main] thread is involved in this.\n */\n@Test public void testTimeoutRequestContextWithSemaphoreIsolatedSynchronousObservable(){\n  RequestContextTestResults results=testRequestContextOnTimeout(ExecutionIsolationStrategy.SEMAPHORE,Schedulers.immediate());\n  assertTrue(results.isContextInitialized.get());\n  assertTrue(results.originThread.get().equals(Thread.currentThread()));\n  assertTrue(results.isContextInitializedObserveOn.get());\n  assertTrue(results.observeOnThread.get().getName().startsWith(\"HystrixTimer\"));\n  assertFalse(results.command.isExecutedInThread());\n  HystrixCircuitBreaker.Factory.reset();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 4176,
        "startColumnNumber" : 8,
        "endLineNumber" : 4176,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertTrue(results.observeOnThread.get().getName().startsWith(\"HystrixTimer\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 66,
    "startLineNumber" : 4176,
    "startColumnNumber" : 19,
    "endLineNumber" : 4176,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}