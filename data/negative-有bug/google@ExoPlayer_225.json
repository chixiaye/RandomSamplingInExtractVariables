{
  "id" : 225,
  "expression" : "itemNamespacePrefix + \":Semantic\"",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/main/java/com/google/android/exoplayer2/extractor/jpeg/XmpMotionPhotoDescriptionParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "itemNamespacePrefix + \":Semantic\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 170,
      "startColumnNumber" : 39,
      "endLineNumber" : 170,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 170,
        "startColumnNumber" : 15,
        "endLineNumber" : 170,
        "endColumnNumber" : 72
      },
      "nodeContext" : "semanticAttributeName=itemNamespacePrefix + \":Semantic\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 73
      },
      "nodeContext" : "String semanticAttributeName=itemNamespacePrefix + \":Semantic\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1076,
        "startLineNumber" : 168,
        "startColumnNumber" : 58,
        "endLineNumber" : 187,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String mimeAttributeName=itemNamespacePrefix + \":Mime\";\n  String semanticAttributeName=itemNamespacePrefix + \":Semantic\";\n  String lengthAttributeName=itemNamespacePrefix + \":Length\";\n  String paddinghAttributeName=itemNamespacePrefix + \":Padding\";\n  @Nullable String mime=XmlPullParserUtil.getAttributeValue(xpp,mimeAttributeName);\n  @Nullable String semantic=XmlPullParserUtil.getAttributeValue(xpp,semanticAttributeName);\n  @Nullable String length=XmlPullParserUtil.getAttributeValue(xpp,lengthAttributeName);\n  @Nullable String padding=XmlPullParserUtil.getAttributeValue(xpp,paddinghAttributeName);\n  if (mime == null || semantic == null) {\n    return ImmutableList.of();\n  }\n  containerItems.add(new MotionPhotoDescription.ContainerItem(mime,semantic,length != null ? Long.parseLong(length) : 0,padding != null ? Long.parseLong(padding) : 0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 168,
        "startColumnNumber" : 6,
        "endLineNumber" : 187,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (XmlPullParserUtil.isStartTag(xpp,itemTagName)) {\n  String mimeAttributeName=itemNamespacePrefix + \":Mime\";\n  String semanticAttributeName=itemNamespacePrefix + \":Semantic\";\n  String lengthAttributeName=itemNamespacePrefix + \":Length\";\n  String paddinghAttributeName=itemNamespacePrefix + \":Padding\";\n  @Nullable String mime=XmlPullParserUtil.getAttributeValue(xpp,mimeAttributeName);\n  @Nullable String semantic=XmlPullParserUtil.getAttributeValue(xpp,semanticAttributeName);\n  @Nullable String length=XmlPullParserUtil.getAttributeValue(xpp,lengthAttributeName);\n  @Nullable String padding=XmlPullParserUtil.getAttributeValue(xpp,paddinghAttributeName);\n  if (mime == null || semantic == null) {\n    return ImmutableList.of();\n  }\n  containerItems.add(new MotionPhotoDescription.ContainerItem(mime,semantic,length != null ? Long.parseLong(length) : 0,padding != null ? Long.parseLong(padding) : 0));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 129,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 1160,
        "startLineNumber" : 166,
        "startColumnNumber" : 7,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  xpp.next();\n  if (XmlPullParserUtil.isStartTag(xpp,itemTagName)) {\n    String mimeAttributeName=itemNamespacePrefix + \":Mime\";\n    String semanticAttributeName=itemNamespacePrefix + \":Semantic\";\n    String lengthAttributeName=itemNamespacePrefix + \":Length\";\n    String paddinghAttributeName=itemNamespacePrefix + \":Padding\";\n    @Nullable String mime=XmlPullParserUtil.getAttributeValue(xpp,mimeAttributeName);\n    @Nullable String semantic=XmlPullParserUtil.getAttributeValue(xpp,semanticAttributeName);\n    @Nullable String length=XmlPullParserUtil.getAttributeValue(xpp,lengthAttributeName);\n    @Nullable String padding=XmlPullParserUtil.getAttributeValue(xpp,paddinghAttributeName);\n    if (mime == null || semantic == null) {\n      return ImmutableList.of();\n    }\n    containerItems.add(new MotionPhotoDescription.ContainerItem(mime,semantic,length != null ? Long.parseLong(length) : 0,padding != null ? Long.parseLong(padding) : 0));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1223,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 188,
        "endColumnNumber" : 65
      },
      "nodeContext" : "do {\n  xpp.next();\n  if (XmlPullParserUtil.isStartTag(xpp,itemTagName)) {\n    String mimeAttributeName=itemNamespacePrefix + \":Mime\";\n    String semanticAttributeName=itemNamespacePrefix + \":Semantic\";\n    String lengthAttributeName=itemNamespacePrefix + \":Length\";\n    String paddinghAttributeName=itemNamespacePrefix + \":Padding\";\n    @Nullable String mime=XmlPullParserUtil.getAttributeValue(xpp,mimeAttributeName);\n    @Nullable String semantic=XmlPullParserUtil.getAttributeValue(xpp,semanticAttributeName);\n    @Nullable String length=XmlPullParserUtil.getAttributeValue(xpp,lengthAttributeName);\n    @Nullable String padding=XmlPullParserUtil.getAttributeValue(xpp,paddinghAttributeName);\n    if (mime == null || semantic == null) {\n      return ImmutableList.of();\n    }\n    containerItems.add(new MotionPhotoDescription.ContainerItem(mime,semantic,length != null ? Long.parseLong(length) : 0,padding != null ? Long.parseLong(padding) : 0));\n  }\n}\n while (!XmlPullParserUtil.isEndTag(xpp,directoryTagName));\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1514,
        "startLineNumber" : 161,
        "startColumnNumber" : 49,
        "endLineNumber" : 190,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ImmutableList.Builder<MotionPhotoDescription.ContainerItem> containerItems=ImmutableList.builder();\n  String itemTagName=containerNamespacePrefix + \":Item\";\n  String directoryTagName=containerNamespacePrefix + \":Directory\";\n  do {\n    xpp.next();\n    if (XmlPullParserUtil.isStartTag(xpp,itemTagName)) {\n      String mimeAttributeName=itemNamespacePrefix + \":Mime\";\n      String semanticAttributeName=itemNamespacePrefix + \":Semantic\";\n      String lengthAttributeName=itemNamespacePrefix + \":Length\";\n      String paddinghAttributeName=itemNamespacePrefix + \":Padding\";\n      @Nullable String mime=XmlPullParserUtil.getAttributeValue(xpp,mimeAttributeName);\n      @Nullable String semantic=XmlPullParserUtil.getAttributeValue(xpp,semanticAttributeName);\n      @Nullable String length=XmlPullParserUtil.getAttributeValue(xpp,lengthAttributeName);\n      @Nullable String padding=XmlPullParserUtil.getAttributeValue(xpp,paddinghAttributeName);\n      if (mime == null || semantic == null) {\n        return ImmutableList.of();\n      }\n      containerItems.add(new MotionPhotoDescription.ContainerItem(mime,semantic,length != null ? Long.parseLong(length) : 0,padding != null ? Long.parseLong(padding) : 0));\n    }\n  }\n while (!XmlPullParserUtil.isEndTag(xpp,directoryTagName));\n  return containerItems.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1745,
        "startLineNumber" : 159,
        "startColumnNumber" : 2,
        "endLineNumber" : 190,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static ImmutableList<MotionPhotoDescription.ContainerItem> parseMotionPhotoV1Directory(XmlPullParser xpp,String containerNamespacePrefix,String itemNamespacePrefix) throws XmlPullParserException, IOException {\n  ImmutableList.Builder<MotionPhotoDescription.ContainerItem> containerItems=ImmutableList.builder();\n  String itemTagName=containerNamespacePrefix + \":Item\";\n  String directoryTagName=containerNamespacePrefix + \":Directory\";\n  do {\n    xpp.next();\n    if (XmlPullParserUtil.isStartTag(xpp,itemTagName)) {\n      String mimeAttributeName=itemNamespacePrefix + \":Mime\";\n      String semanticAttributeName=itemNamespacePrefix + \":Semantic\";\n      String lengthAttributeName=itemNamespacePrefix + \":Length\";\n      String paddinghAttributeName=itemNamespacePrefix + \":Padding\";\n      @Nullable String mime=XmlPullParserUtil.getAttributeValue(xpp,mimeAttributeName);\n      @Nullable String semantic=XmlPullParserUtil.getAttributeValue(xpp,semanticAttributeName);\n      @Nullable String length=XmlPullParserUtil.getAttributeValue(xpp,lengthAttributeName);\n      @Nullable String padding=XmlPullParserUtil.getAttributeValue(xpp,paddinghAttributeName);\n      if (mime == null || semantic == null) {\n        return ImmutableList.of();\n      }\n      containerItems.add(new MotionPhotoDescription.ContainerItem(mime,semantic,length != null ? Long.parseLong(length) : 0,padding != null ? Long.parseLong(padding) : 0));\n    }\n  }\n while (!XmlPullParserUtil.isEndTag(xpp,directoryTagName));\n  return containerItems.build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 73
      },
      "nodeContext" : "String semanticAttributeName=itemNamespacePrefix + \":Semantic\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 170,
    "startColumnNumber" : 39,
    "endLineNumber" : 170,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}