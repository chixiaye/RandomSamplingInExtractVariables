{
  "id" : 45,
  "expression" : "InsnType.IPUT",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/visitors/ExtractFieldInit.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "InsnType.IPUT",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 135,
      "startColumnNumber" : 26,
      "endLineNumber" : 135,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 39
      },
      "nodeContext" : "insn.getType() == InsnType.IPUT",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 58
      },
      "nodeContext" : "insn.getType() == InsnType.IPUT && checkInsn(insn)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 135,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (insn.getType() == InsnType.IPUT && checkInsn(insn)) {\n  info.getPutInsns().add(insn);\n}\n else if (!info.getPutInsns().isEmpty()) {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 134,
        "startColumnNumber" : 53,
        "endLineNumber" : 140,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (insn.getType() == InsnType.IPUT && checkInsn(insn)) {\n    info.getPutInsns().add(insn);\n  }\n else   if (!info.getPutInsns().isEmpty()) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 134,
        "startColumnNumber" : 3,
        "endLineNumber" : 140,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (InsnNode insn : blockNode.getInstructions()) {\n  if (insn.getType() == InsnType.IPUT && checkInsn(insn)) {\n    info.getPutInsns().add(insn);\n  }\n else   if (!info.getPutInsns().isEmpty()) {\n    break;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 126,
        "startColumnNumber" : 42,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (constrMth.isNoCode() || constrMth.getBasicBlocks().isEmpty()) {\n    return;\n  }\n  InitInfo info=new InitInfo(constrMth);\n  infoList.add(info);\n  BlockNode blockNode=constrMth.getBasicBlocks().get(0);\n  for (  InsnNode insn : blockNode.getInstructions()) {\n    if (insn.getType() == InsnType.IPUT && checkInsn(insn)) {\n      info.getPutInsns().add(insn);\n    }\n else     if (!info.getPutInsns().isEmpty()) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (MethodNode constrMth : constrList) {\n  if (constrMth.isNoCode() || constrMth.getBasicBlocks().isEmpty()) {\n    return;\n  }\n  InitInfo info=new InitInfo(constrMth);\n  infoList.add(info);\n  BlockNode blockNode=constrMth.getBasicBlocks().get(0);\n  for (  InsnNode insn : blockNode.getInstructions()) {\n    if (insn.getType() == InsnType.IPUT && checkInsn(insn)) {\n      info.getPutInsns().add(insn);\n    }\n else     if (!info.getPutInsns().isEmpty()) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 82,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1696,
        "startLineNumber" : 120,
        "startColumnNumber" : 57,
        "endLineNumber" : 176,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<MethodNode> constrList=getConstructorsList(cls);\n  if (constrList.isEmpty()) {\n    return;\n  }\n  List<InitInfo> infoList=new ArrayList<>(constrList.size());\n  for (  MethodNode constrMth : constrList) {\n    if (constrMth.isNoCode() || constrMth.getBasicBlocks().isEmpty()) {\n      return;\n    }\n    InitInfo info=new InitInfo(constrMth);\n    infoList.add(info);\n    BlockNode blockNode=constrMth.getBasicBlocks().get(0);\n    for (    InsnNode insn : blockNode.getInstructions()) {\n      if (insn.getType() == InsnType.IPUT && checkInsn(insn)) {\n        info.getPutInsns().add(insn);\n      }\n else       if (!info.getPutInsns().isEmpty()) {\n        break;\n      }\n    }\n  }\n  InitInfo common=null;\n  for (  InitInfo info : infoList) {\n    if (common == null) {\n      common=info;\n    }\n else     if (!compareInsns(common.getPutInsns(),info.getPutInsns())) {\n      return;\n    }\n  }\n  if (common == null) {\n    return;\n  }\n  Set<FieldInfo> fields=new HashSet<>();\n  for (  InsnNode insn : common.getPutInsns()) {\n    FieldInfo fieldInfo=(FieldInfo)((IndexInsnNode)insn).getIndex();\n    FieldNode field=cls.dex().resolveField(fieldInfo);\n    if (field == null) {\n      return;\n    }\n    if (!fields.add(fieldInfo)) {\n      return;\n    }\n  }\n  for (  InitInfo info : infoList) {\n    for (    InsnNode putInsn : info.getPutInsns()) {\n      InstructionRemover.remove(info.getConstrMth(),putInsn);\n    }\n  }\n  for (  InsnNode insn : common.getPutInsns()) {\n    FieldInfo fieldInfo=(FieldInfo)((IndexInsnNode)insn).getIndex();\n    FieldNode field=cls.dex().resolveField(fieldInfo);\n    addFieldInitAttr(common.getConstrMth(),field,insn);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1752,
        "startLineNumber" : 120,
        "startColumnNumber" : 1,
        "endLineNumber" : 176,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void moveCommonFieldsInit(ClassNode cls){\n  List<MethodNode> constrList=getConstructorsList(cls);\n  if (constrList.isEmpty()) {\n    return;\n  }\n  List<InitInfo> infoList=new ArrayList<>(constrList.size());\n  for (  MethodNode constrMth : constrList) {\n    if (constrMth.isNoCode() || constrMth.getBasicBlocks().isEmpty()) {\n      return;\n    }\n    InitInfo info=new InitInfo(constrMth);\n    infoList.add(info);\n    BlockNode blockNode=constrMth.getBasicBlocks().get(0);\n    for (    InsnNode insn : blockNode.getInstructions()) {\n      if (insn.getType() == InsnType.IPUT && checkInsn(insn)) {\n        info.getPutInsns().add(insn);\n      }\n else       if (!info.getPutInsns().isEmpty()) {\n        break;\n      }\n    }\n  }\n  InitInfo common=null;\n  for (  InitInfo info : infoList) {\n    if (common == null) {\n      common=info;\n    }\n else     if (!compareInsns(common.getPutInsns(),info.getPutInsns())) {\n      return;\n    }\n  }\n  if (common == null) {\n    return;\n  }\n  Set<FieldInfo> fields=new HashSet<>();\n  for (  InsnNode insn : common.getPutInsns()) {\n    FieldInfo fieldInfo=(FieldInfo)((IndexInsnNode)insn).getIndex();\n    FieldNode field=cls.dex().resolveField(fieldInfo);\n    if (field == null) {\n      return;\n    }\n    if (!fields.add(fieldInfo)) {\n      return;\n    }\n  }\n  for (  InitInfo info : infoList) {\n    for (    InsnNode putInsn : info.getPutInsns()) {\n      InstructionRemover.remove(info.getConstrMth(),putInsn);\n    }\n  }\n  for (  InsnNode insn : common.getPutInsns()) {\n    FieldInfo fieldInfo=(FieldInfo)((IndexInsnNode)insn).getIndex();\n    FieldNode field=cls.dex().resolveField(fieldInfo);\n    addFieldInitAttr(common.getConstrMth(),field,insn);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 292,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 58
      },
      "nodeContext" : "insn.getType() == InsnType.IPUT && checkInsn(insn)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "jadx.core.dex.instructions.InsnType"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 135,
    "startColumnNumber" : 26,
    "endLineNumber" : 135,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}