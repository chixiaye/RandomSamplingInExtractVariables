{
  "id" : 374,
  "expression" : "value",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/zxingorg/src/main/java/com/google/zxing/web/OutputUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "value",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 37,
      "startColumnNumber" : 28,
      "endLineNumber" : 37,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 37,
        "startColumnNumber" : 28,
        "endLineNumber" : 37,
        "endColumnNumber" : 38
      },
      "nodeContext" : "value / 16",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 37,
        "startColumnNumber" : 20,
        "endLineNumber" : 37,
        "endColumnNumber" : 39
      },
      "nodeContext" : "hexChar(value / 16)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 37,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 40
      },
      "nodeContext" : "result.append(hexChar(value / 16))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 37,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 41
      },
      "nodeContext" : "result.append(hexChar(value / 16));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 35,
        "startColumnNumber" : 29,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int value=bytes[i] & 0xFF;\n  result.append(hexChar(value / 16));\n  result.append(hexChar(value % 16));\n  i++;\n  if (i % BYTES_PER_LINE == 0) {\n    result.append('\\n');\n  }\n else   if (i % HALF_BYTES_PER_LINE == 0) {\n    result.append(\"   \");\n  }\n else {\n    result.append(' ');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (i < bytes.length) {\n  int value=bytes[i] & 0xFF;\n  result.append(hexChar(value / 16));\n  result.append(hexChar(value % 16));\n  i++;\n  if (i % BYTES_PER_LINE == 0) {\n    result.append('\\n');\n  }\n else   if (i % HALF_BYTES_PER_LINE == 0) {\n    result.append(\"   \");\n  }\n else {\n    result.append(' ');\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 32,
        "startColumnNumber" : 51,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder result=new StringBuilder(bytes.length * 4);\n  int i=0;\n  while (i < bytes.length) {\n    int value=bytes[i] & 0xFF;\n    result.append(hexChar(value / 16));\n    result.append(hexChar(value % 16));\n    i++;\n    if (i % BYTES_PER_LINE == 0) {\n      result.append('\\n');\n    }\n else     if (i % HALF_BYTES_PER_LINE == 0) {\n      result.append(\"   \");\n    }\n else {\n      result.append(' ');\n    }\n  }\n  return result.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static String arrayToString(byte[] bytes){\n  StringBuilder result=new StringBuilder(bytes.length * 4);\n  int i=0;\n  while (i < bytes.length) {\n    int value=bytes[i] & 0xFF;\n    result.append(hexChar(value / 16));\n    result.append(hexChar(value % 16));\n    i++;\n    if (i % BYTES_PER_LINE == 0) {\n      result.append('\\n');\n    }\n else     if (i % HALF_BYTES_PER_LINE == 0) {\n      result.append(\"   \");\n    }\n else {\n      result.append(' ');\n    }\n  }\n  return result.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 37,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 41
      },
      "nodeContext" : "result.append(hexChar(value / 16));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "value",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 38,
      "startColumnNumber" : 28,
      "endLineNumber" : 38,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 38,
        "startColumnNumber" : 28,
        "endLineNumber" : 38,
        "endColumnNumber" : 38
      },
      "nodeContext" : "value % 16",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 38,
        "startColumnNumber" : 20,
        "endLineNumber" : 38,
        "endColumnNumber" : 39
      },
      "nodeContext" : "hexChar(value % 16)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 38,
        "startColumnNumber" : 6,
        "endLineNumber" : 38,
        "endColumnNumber" : 40
      },
      "nodeContext" : "result.append(hexChar(value % 16))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 38,
        "startColumnNumber" : 6,
        "endLineNumber" : 38,
        "endColumnNumber" : 41
      },
      "nodeContext" : "result.append(hexChar(value % 16));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 35,
        "startColumnNumber" : 29,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int value=bytes[i] & 0xFF;\n  result.append(hexChar(value / 16));\n  result.append(hexChar(value % 16));\n  i++;\n  if (i % BYTES_PER_LINE == 0) {\n    result.append('\\n');\n  }\n else   if (i % HALF_BYTES_PER_LINE == 0) {\n    result.append(\"   \");\n  }\n else {\n    result.append(' ');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (i < bytes.length) {\n  int value=bytes[i] & 0xFF;\n  result.append(hexChar(value / 16));\n  result.append(hexChar(value % 16));\n  i++;\n  if (i % BYTES_PER_LINE == 0) {\n    result.append('\\n');\n  }\n else   if (i % HALF_BYTES_PER_LINE == 0) {\n    result.append(\"   \");\n  }\n else {\n    result.append(' ');\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 32,
        "startColumnNumber" : 51,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder result=new StringBuilder(bytes.length * 4);\n  int i=0;\n  while (i < bytes.length) {\n    int value=bytes[i] & 0xFF;\n    result.append(hexChar(value / 16));\n    result.append(hexChar(value % 16));\n    i++;\n    if (i % BYTES_PER_LINE == 0) {\n      result.append('\\n');\n    }\n else     if (i % HALF_BYTES_PER_LINE == 0) {\n      result.append(\"   \");\n    }\n else {\n      result.append(' ');\n    }\n  }\n  return result.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static String arrayToString(byte[] bytes){\n  StringBuilder result=new StringBuilder(bytes.length * 4);\n  int i=0;\n  while (i < bytes.length) {\n    int value=bytes[i] & 0xFF;\n    result.append(hexChar(value / 16));\n    result.append(hexChar(value % 16));\n    i++;\n    if (i % BYTES_PER_LINE == 0) {\n      result.append('\\n');\n    }\n else     if (i % HALF_BYTES_PER_LINE == 0) {\n      result.append(\"   \");\n    }\n else {\n      result.append(' ');\n    }\n  }\n  return result.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 38,
        "startColumnNumber" : 6,
        "endLineNumber" : 38,
        "endColumnNumber" : 41
      },
      "nodeContext" : "result.append(hexChar(value % 16));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 37,
    "startColumnNumber" : 28,
    "endLineNumber" : 37,
    "endColumnNumber" : 33
  }, {
    "charLength" : 5,
    "startLineNumber" : 38,
    "startColumnNumber" : 28,
    "endLineNumber" : 38,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}