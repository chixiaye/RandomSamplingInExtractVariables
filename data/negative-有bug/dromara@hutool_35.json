{
  "id" : 35,
  "expression" : "1",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/util/RuntimeUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 82,
      "startColumnNumber" : 6,
      "endLineNumber" : 82,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 82,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 22
      },
      "nodeContext" : "1 == cmds.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (1 == cmds.length) {\n  final String cmd=cmds[0];\n  if (StrUtil.isBlank(cmd)) {\n    throw new NullPointerException(\"Command is empty !\");\n  }\n  cmds=StrUtil.splitToArray(cmd,StrUtil.C_SPACE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 529,
        "startLineNumber" : 76,
        "startColumnNumber" : 44,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (ArrayUtil.isEmpty(cmds)) {\n    throw new NullPointerException(\"Command is empty !\");\n  }\n  if (1 == cmds.length) {\n    final String cmd=cmds[0];\n    if (StrUtil.isBlank(cmd)) {\n      throw new NullPointerException(\"Command is empty !\");\n    }\n    cmds=StrUtil.splitToArray(cmd,StrUtil.C_SPACE);\n  }\n  Process process;\n  try {\n    process=new ProcessBuilder(cmds).redirectErrorStream(true).start();\n  }\n catch (  IOException e) {\n    throw new IORuntimeException(e);\n  }\n  return process;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 69,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 执行命令<br> 命令带参数时参数可作为其中一个参数，也可以将命令和参数组合为一个字符串传入\n * @param cmds 命令\n * @return {@link Process}\n */\npublic static Process exec(String... cmds){\n  if (ArrayUtil.isEmpty(cmds)) {\n    throw new NullPointerException(\"Command is empty !\");\n  }\n  if (1 == cmds.length) {\n    final String cmd=cmds[0];\n    if (StrUtil.isBlank(cmd)) {\n      throw new NullPointerException(\"Command is empty !\");\n    }\n    cmds=StrUtil.splitToArray(cmd,StrUtil.C_SPACE);\n  }\n  Process process;\n  try {\n    process=new ProcessBuilder(cmds).redirectErrorStream(true).start();\n  }\n catch (  IOException e) {\n    throw new IORuntimeException(e);\n  }\n  return process;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 82,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 22
      },
      "nodeContext" : "1 == cmds.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 82,
    "startColumnNumber" : 6,
    "endLineNumber" : 82,
    "endColumnNumber" : 7
  } ],
  "layoutRelationDataList" : [ ]
}