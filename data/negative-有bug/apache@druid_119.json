{
  "id" : 119,
  "expression" : "hashCode",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/query/groupby/epinephelinae/collection/HashTableUtils.java",
  "occurrences" : 8,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "hashCode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 88,
      "startColumnNumber" : 26,
      "endLineNumber" : 88,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 88,
        "startColumnNumber" : 21,
        "endLineNumber" : 88,
        "endColumnNumber" : 34
      },
      "nodeContext" : "31 * hashCode",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 88,
        "startColumnNumber" : 21,
        "endLineNumber" : 88,
        "endColumnNumber" : 55
      },
      "nodeContext" : "31 * hashCode + memory.getInt(pos)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 88,
        "startColumnNumber" : 10,
        "endLineNumber" : 88,
        "endColumnNumber" : 55
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getInt(pos)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 88,
        "startColumnNumber" : 10,
        "endLineNumber" : 88,
        "endColumnNumber" : 56
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getInt(pos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 87,
        "startColumnNumber" : 48,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  hashCode=31 * hashCode + memory.getInt(pos);\n  remainingBytes-=Integer.BYTES;\n  pos+=Integer.BYTES;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (remainingBytes >= Integer.BYTES) {\n  hashCode=31 * hashCode + memory.getInt(pos);\n  remainingBytes-=Integer.BYTES;\n  pos+=Integer.BYTES;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (length) {\ncase 4:  return memory.getInt(position);\ncase 8:return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 333,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2168,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2503,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Compute a simple, fast hash code of some memory range.\n * @param memory   a region of memory\n * @param position position within the memory region\n * @param length   length of memory to hash, starting at the position\n */\npublic static int hashMemory(final Memory memory,final long position,final int length){\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 353,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 88,
        "startColumnNumber" : 10,
        "endLineNumber" : 88,
        "endColumnNumber" : 56
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getInt(pos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "hashCode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 94,
      "startColumnNumber" : 26,
      "endLineNumber" : 94,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 94,
        "startColumnNumber" : 21,
        "endLineNumber" : 94,
        "endColumnNumber" : 34
      },
      "nodeContext" : "31 * hashCode",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 94,
        "startColumnNumber" : 21,
        "endLineNumber" : 94,
        "endColumnNumber" : 56
      },
      "nodeContext" : "31 * hashCode + memory.getByte(pos)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 94,
        "startColumnNumber" : 10,
        "endLineNumber" : 94,
        "endColumnNumber" : 56
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 94,
        "startColumnNumber" : 10,
        "endLineNumber" : 94,
        "endColumnNumber" : 57
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 93,
        "startColumnNumber" : 33,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  hashCode=31 * hashCode + memory.getByte(pos);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 1) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (length) {\ncase 4:  return memory.getInt(position);\ncase 8:return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 333,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2168,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2503,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Compute a simple, fast hash code of some memory range.\n * @param memory   a region of memory\n * @param position position within the memory region\n * @param length   length of memory to hash, starting at the position\n */\npublic static int hashMemory(final Memory memory,final long position,final int length){\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 353,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 94,
        "startColumnNumber" : 10,
        "endLineNumber" : 94,
        "endColumnNumber" : 57
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "hashCode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 96,
      "startColumnNumber" : 26,
      "endLineNumber" : 96,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 96,
        "startColumnNumber" : 21,
        "endLineNumber" : 96,
        "endColumnNumber" : 34
      },
      "nodeContext" : "31 * hashCode",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 96,
        "startColumnNumber" : 21,
        "endLineNumber" : 96,
        "endColumnNumber" : 56
      },
      "nodeContext" : "31 * hashCode + memory.getByte(pos)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 96,
        "startColumnNumber" : 10,
        "endLineNumber" : 96,
        "endColumnNumber" : 56
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 96,
        "startColumnNumber" : 10,
        "endLineNumber" : 96,
        "endColumnNumber" : 57
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 95,
        "startColumnNumber" : 40,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 95,
        "startColumnNumber" : 15,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 2) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 1) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (length) {\ncase 4:  return memory.getInt(position);\ncase 8:return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 333,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2168,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2503,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Compute a simple, fast hash code of some memory range.\n * @param memory   a region of memory\n * @param position position within the memory region\n * @param length   length of memory to hash, starting at the position\n */\npublic static int hashMemory(final Memory memory,final long position,final int length){\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 353,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 96,
        "startColumnNumber" : 10,
        "endLineNumber" : 96,
        "endColumnNumber" : 57
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "hashCode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 97,
      "startColumnNumber" : 26,
      "endLineNumber" : 97,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 97,
        "startColumnNumber" : 21,
        "endLineNumber" : 97,
        "endColumnNumber" : 34
      },
      "nodeContext" : "31 * hashCode",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 97,
        "startColumnNumber" : 21,
        "endLineNumber" : 97,
        "endColumnNumber" : 60
      },
      "nodeContext" : "31 * hashCode + memory.getByte(pos + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 97,
        "startColumnNumber" : 10,
        "endLineNumber" : 97,
        "endColumnNumber" : 60
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos + 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 97,
        "startColumnNumber" : 10,
        "endLineNumber" : 97,
        "endColumnNumber" : 61
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 95,
        "startColumnNumber" : 40,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 95,
        "startColumnNumber" : 15,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 2) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 1) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (length) {\ncase 4:  return memory.getInt(position);\ncase 8:return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 333,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2168,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2503,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Compute a simple, fast hash code of some memory range.\n * @param memory   a region of memory\n * @param position position within the memory region\n * @param length   length of memory to hash, starting at the position\n */\npublic static int hashMemory(final Memory memory,final long position,final int length){\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 353,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 97,
        "startColumnNumber" : 10,
        "endLineNumber" : 97,
        "endColumnNumber" : 61
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "hashCode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 99,
      "startColumnNumber" : 26,
      "endLineNumber" : 99,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 99,
        "startColumnNumber" : 21,
        "endLineNumber" : 99,
        "endColumnNumber" : 34
      },
      "nodeContext" : "31 * hashCode",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 99,
        "startColumnNumber" : 21,
        "endLineNumber" : 99,
        "endColumnNumber" : 56
      },
      "nodeContext" : "31 * hashCode + memory.getByte(pos)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 99,
        "startColumnNumber" : 10,
        "endLineNumber" : 99,
        "endColumnNumber" : 56
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 99,
        "startColumnNumber" : 10,
        "endLineNumber" : 99,
        "endColumnNumber" : 57
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 98,
        "startColumnNumber" : 40,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 98,
        "startColumnNumber" : 15,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 95,
        "startColumnNumber" : 15,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 2) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 1) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (length) {\ncase 4:  return memory.getInt(position);\ncase 8:return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 333,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2168,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2503,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Compute a simple, fast hash code of some memory range.\n * @param memory   a region of memory\n * @param position position within the memory region\n * @param length   length of memory to hash, starting at the position\n */\npublic static int hashMemory(final Memory memory,final long position,final int length){\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 353,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 99,
        "startColumnNumber" : 10,
        "endLineNumber" : 99,
        "endColumnNumber" : 57
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "hashCode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 100,
      "startColumnNumber" : 26,
      "endLineNumber" : 100,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 100,
        "startColumnNumber" : 21,
        "endLineNumber" : 100,
        "endColumnNumber" : 34
      },
      "nodeContext" : "31 * hashCode",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 100,
        "startColumnNumber" : 21,
        "endLineNumber" : 100,
        "endColumnNumber" : 60
      },
      "nodeContext" : "31 * hashCode + memory.getByte(pos + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 100,
        "startColumnNumber" : 10,
        "endLineNumber" : 100,
        "endColumnNumber" : 60
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos + 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 100,
        "startColumnNumber" : 10,
        "endLineNumber" : 100,
        "endColumnNumber" : 61
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 98,
        "startColumnNumber" : 40,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 98,
        "startColumnNumber" : 15,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 95,
        "startColumnNumber" : 15,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 2) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 1) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (length) {\ncase 4:  return memory.getInt(position);\ncase 8:return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 333,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2168,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2503,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Compute a simple, fast hash code of some memory range.\n * @param memory   a region of memory\n * @param position position within the memory region\n * @param length   length of memory to hash, starting at the position\n */\npublic static int hashMemory(final Memory memory,final long position,final int length){\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 353,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 100,
        "startColumnNumber" : 10,
        "endLineNumber" : 100,
        "endColumnNumber" : 61
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "hashCode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 101,
      "startColumnNumber" : 26,
      "endLineNumber" : 101,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 101,
        "startColumnNumber" : 21,
        "endLineNumber" : 101,
        "endColumnNumber" : 34
      },
      "nodeContext" : "31 * hashCode",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 101,
        "startColumnNumber" : 21,
        "endLineNumber" : 101,
        "endColumnNumber" : 60
      },
      "nodeContext" : "31 * hashCode + memory.getByte(pos + 2)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 101,
        "startColumnNumber" : 10,
        "endLineNumber" : 101,
        "endColumnNumber" : 60
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos + 2)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 101,
        "startColumnNumber" : 10,
        "endLineNumber" : 101,
        "endColumnNumber" : 61
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos + 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 98,
        "startColumnNumber" : 40,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 98,
        "startColumnNumber" : 15,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 95,
        "startColumnNumber" : 15,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 2) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remainingBytes == 1) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\n  hashCode=31 * hashCode + memory.getByte(pos);\n  hashCode=31 * hashCode + memory.getByte(pos + 1);\n  hashCode=31 * hashCode + memory.getByte(pos + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (length) {\ncase 4:  return memory.getInt(position);\ncase 8:return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 333,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2168,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2503,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Compute a simple, fast hash code of some memory range.\n * @param memory   a region of memory\n * @param position position within the memory region\n * @param length   length of memory to hash, starting at the position\n */\npublic static int hashMemory(final Memory memory,final long position,final int length){\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 353,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 101,
        "startColumnNumber" : 10,
        "endLineNumber" : 101,
        "endColumnNumber" : 61
      },
      "nodeContext" : "hashCode=31 * hashCode + memory.getByte(pos + 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "hashCode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 104,
      "startColumnNumber" : 15,
      "endLineNumber" : 104,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 24
      },
      "nodeContext" : "return hashCode;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (length) {\ncase 4:  return memory.getInt(position);\ncase 8:return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 333,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2168,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2503,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Compute a simple, fast hash code of some memory range.\n * @param memory   a region of memory\n * @param position position within the memory region\n * @param length   length of memory to hash, starting at the position\n */\npublic static int hashMemory(final Memory memory,final long position,final int length){\nswitch (length) {\ncase 4:    return memory.getInt(position);\ncase 8:  return 31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES);\ncase 9:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getByte(position + 2L * Integer.BYTES);\ncase 12:return 31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES);\ncase 13:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getByte(position + 3L * Integer.BYTES);\ncase 16:return 31 * (31 * (31 * (31 + memory.getInt(position)) + memory.getInt(position + Integer.BYTES)) + memory.getInt(position + 2L * Integer.BYTES)) + memory.getInt(position + 3L * Integer.BYTES);\ndefault:int hashCode=1;\nint remainingBytes=length;\nlong pos=position;\nwhile (remainingBytes >= Integer.BYTES) {\nhashCode=31 * hashCode + memory.getInt(pos);\nremainingBytes-=Integer.BYTES;\npos+=Integer.BYTES;\n}\nif (remainingBytes == 1) {\nhashCode=31 * hashCode + memory.getByte(pos);\n}\n else if (remainingBytes == 2) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\n}\n else if (remainingBytes == 3) {\nhashCode=31 * hashCode + memory.getByte(pos);\nhashCode=31 * hashCode + memory.getByte(pos + 1);\nhashCode=31 * hashCode + memory.getByte(pos + 2);\n}\nreturn hashCode;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 353,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 24
      },
      "nodeContext" : "return hashCode;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 88,
    "startColumnNumber" : 26,
    "endLineNumber" : 88,
    "endColumnNumber" : 34
  }, {
    "charLength" : 8,
    "startLineNumber" : 94,
    "startColumnNumber" : 26,
    "endLineNumber" : 94,
    "endColumnNumber" : 34
  }, {
    "charLength" : 8,
    "startLineNumber" : 96,
    "startColumnNumber" : 26,
    "endLineNumber" : 96,
    "endColumnNumber" : 34
  }, {
    "charLength" : 8,
    "startLineNumber" : 97,
    "startColumnNumber" : 26,
    "endLineNumber" : 97,
    "endColumnNumber" : 34
  }, {
    "charLength" : 8,
    "startLineNumber" : 99,
    "startColumnNumber" : 26,
    "endLineNumber" : 99,
    "endColumnNumber" : 34
  }, {
    "charLength" : 8,
    "startLineNumber" : 100,
    "startColumnNumber" : 26,
    "endLineNumber" : 100,
    "endColumnNumber" : 34
  }, {
    "charLength" : 8,
    "startLineNumber" : 101,
    "startColumnNumber" : 26,
    "endLineNumber" : 101,
    "endColumnNumber" : 34
  }, {
    "charLength" : 8,
    "startLineNumber" : 104,
    "startColumnNumber" : 15,
    "endLineNumber" : 104,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 1
  } ]
}