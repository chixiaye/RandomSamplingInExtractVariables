{
  "id" : 313,
  "expression" : "dataMap.entrySet().iterator().next()",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-core/src/main/java/com/netflix/eureka2/registry/NotifyingInstanceInfoHolder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dataMap.entrySet().iterator().next()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 202,
      "startColumnNumber" : 81,
      "endLineNumber" : 202,
      "endColumnNumber" : 117
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 202,
        "startColumnNumber" : 54,
        "endLineNumber" : 202,
        "endColumnNumber" : 117
      },
      "nodeContext" : "dataMap.isEmpty() ? null : dataMap.entrySet().iterator().next()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 202,
        "startColumnNumber" : 44,
        "endLineNumber" : 202,
        "endColumnNumber" : 117
      },
      "nodeContext" : "newHead=dataMap.isEmpty() ? null : dataMap.entrySet().iterator().next()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 202,
        "endColumnNumber" : 118
      },
      "nodeContext" : "Map.Entry<Source,InstanceInfo> newHead=dataMap.isEmpty() ? null : dataMap.entrySet().iterator().next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1466,
        "startLineNumber" : 201,
        "startColumnNumber" : 60,
        "endLineNumber" : 225,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map.Entry<Source,InstanceInfo> newHead=dataMap.isEmpty() ? null : dataMap.entrySet().iterator().next();\n  if (newHead == null) {\n    snapshot=null;\n    ChangeNotification<InstanceInfo> deleteNotification=new SourcedChangeNotification<>(ChangeNotification.Kind.Delete,removed,source);\n    notificationSubject.onNext(deleteNotification);\n    holderStoreAccessor.remove(id);\n    result=Status.RemovedLast;\n  }\n else {\n    Snapshot<InstanceInfo> newSnapshot=new Snapshot<>(newHead.getKey(),newHead.getValue());\n    snapshot=newSnapshot;\n    Set<Delta<?>> delta=newSnapshot.getData().diffOlder(currSnapshot.getData());\n    if (!delta.isEmpty()) {\n      ChangeNotification<InstanceInfo> modifyNotification=new SourcedModifyNotification<>(newSnapshot.getData(),delta,newSnapshot.getSource());\n      notificationSubject.onNext(modifyNotification);\n    }\n else {\n      logger.debug(\"No-change update for {}#{}\",currSnapshot.getSource(),currSnapshot.getData().getId());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1695,
        "startLineNumber" : 201,
        "startColumnNumber" : 15,
        "endLineNumber" : 227,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (source.equals(currSnapshot.getSource())) {\n  Map.Entry<Source,InstanceInfo> newHead=dataMap.isEmpty() ? null : dataMap.entrySet().iterator().next();\n  if (newHead == null) {\n    snapshot=null;\n    ChangeNotification<InstanceInfo> deleteNotification=new SourcedChangeNotification<>(ChangeNotification.Kind.Delete,removed,source);\n    notificationSubject.onNext(deleteNotification);\n    holderStoreAccessor.remove(id);\n    result=Status.RemovedLast;\n  }\n else {\n    Snapshot<InstanceInfo> newSnapshot=new Snapshot<>(newHead.getKey(),newHead.getValue());\n    snapshot=newSnapshot;\n    Set<Delta<?>> delta=newSnapshot.getData().diffOlder(currSnapshot.getData());\n    if (!delta.isEmpty()) {\n      ChangeNotification<InstanceInfo> modifyNotification=new SourcedModifyNotification<>(newSnapshot.getData(),delta,newSnapshot.getSource());\n      notificationSubject.onNext(modifyNotification);\n    }\n else {\n      logger.debug(\"No-change update for {}#{}\",currSnapshot.getSource(),currSnapshot.getData().getId());\n    }\n  }\n}\n else {\n  logger.debug(\"removed non-head (head={}, received={})\",currSnapshot.getSource(),source);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 171,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1866,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 227,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (removed == null) {\n  logger.debug(\"source:data does not exist, no-op\");\n  result=Status.RemoveExpired;\n}\n else if (source.equals(currSnapshot.getSource())) {\n  Map.Entry<Source,InstanceInfo> newHead=dataMap.isEmpty() ? null : dataMap.entrySet().iterator().next();\n  if (newHead == null) {\n    snapshot=null;\n    ChangeNotification<InstanceInfo> deleteNotification=new SourcedChangeNotification<>(ChangeNotification.Kind.Delete,removed,source);\n    notificationSubject.onNext(deleteNotification);\n    holderStoreAccessor.remove(id);\n    result=Status.RemovedLast;\n  }\n else {\n    Snapshot<InstanceInfo> newSnapshot=new Snapshot<>(newHead.getKey(),newHead.getValue());\n    snapshot=newSnapshot;\n    Set<Delta<?>> delta=newSnapshot.getData().diffOlder(currSnapshot.getData());\n    if (!delta.isEmpty()) {\n      ChangeNotification<InstanceInfo> modifyNotification=new SourcedModifyNotification<>(newSnapshot.getData(),delta,newSnapshot.getSource());\n      notificationSubject.onNext(modifyNotification);\n    }\n else {\n      logger.debug(\"No-change update for {}#{}\",currSnapshot.getSource(),currSnapshot.getData().getId());\n    }\n  }\n}\n else {\n  logger.debug(\"removed non-head (head={}, received={})\",currSnapshot.getSource(),source);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 187,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2154,
        "startLineNumber" : 193,
        "startColumnNumber" : 61,
        "endLineNumber" : 231,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InstanceInfo removed=dataMap.remove(source);\n  Snapshot<InstanceInfo> currSnapshot=snapshot;\n  Status result=Status.RemovedFragment;\n  if (removed == null) {\n    logger.debug(\"source:data does not exist, no-op\");\n    result=Status.RemoveExpired;\n  }\n else   if (source.equals(currSnapshot.getSource())) {\n    Map.Entry<Source,InstanceInfo> newHead=dataMap.isEmpty() ? null : dataMap.entrySet().iterator().next();\n    if (newHead == null) {\n      snapshot=null;\n      ChangeNotification<InstanceInfo> deleteNotification=new SourcedChangeNotification<>(ChangeNotification.Kind.Delete,removed,source);\n      notificationSubject.onNext(deleteNotification);\n      holderStoreAccessor.remove(id);\n      result=Status.RemovedLast;\n    }\n else {\n      Snapshot<InstanceInfo> newSnapshot=new Snapshot<>(newHead.getKey(),newHead.getValue());\n      snapshot=newSnapshot;\n      Set<Delta<?>> delta=newSnapshot.getData().diffOlder(currSnapshot.getData());\n      if (!delta.isEmpty()) {\n        ChangeNotification<InstanceInfo> modifyNotification=new SourcedModifyNotification<>(newSnapshot.getData(),delta,newSnapshot.getSource());\n        notificationSubject.onNext(modifyNotification);\n      }\n else {\n        logger.debug(\"No-change update for {}#{}\",currSnapshot.getSource(),currSnapshot.getData().getId());\n      }\n    }\n  }\n else {\n    logger.debug(\"removed non-head (head={}, received={})\",currSnapshot.getSource(),source);\n  }\n  logger.debug(\"REMOVE result: {}, source: {}\",result,source);\n  return Observable.just(result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2211,
        "startLineNumber" : 193,
        "startColumnNumber" : 4,
        "endLineNumber" : 231,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Observable<Status> doRemove(final Source source){\n  InstanceInfo removed=dataMap.remove(source);\n  Snapshot<InstanceInfo> currSnapshot=snapshot;\n  Status result=Status.RemovedFragment;\n  if (removed == null) {\n    logger.debug(\"source:data does not exist, no-op\");\n    result=Status.RemoveExpired;\n  }\n else   if (source.equals(currSnapshot.getSource())) {\n    Map.Entry<Source,InstanceInfo> newHead=dataMap.isEmpty() ? null : dataMap.entrySet().iterator().next();\n    if (newHead == null) {\n      snapshot=null;\n      ChangeNotification<InstanceInfo> deleteNotification=new SourcedChangeNotification<>(ChangeNotification.Kind.Delete,removed,source);\n      notificationSubject.onNext(deleteNotification);\n      holderStoreAccessor.remove(id);\n      result=Status.RemovedLast;\n    }\n else {\n      Snapshot<InstanceInfo> newSnapshot=new Snapshot<>(newHead.getKey(),newHead.getValue());\n      snapshot=newSnapshot;\n      Set<Delta<?>> delta=newSnapshot.getData().diffOlder(currSnapshot.getData());\n      if (!delta.isEmpty()) {\n        ChangeNotification<InstanceInfo> modifyNotification=new SourcedModifyNotification<>(newSnapshot.getData(),delta,newSnapshot.getSource());\n        notificationSubject.onNext(modifyNotification);\n      }\n else {\n        logger.debug(\"No-change update for {}#{}\",currSnapshot.getSource(),currSnapshot.getData().getId());\n      }\n    }\n  }\n else {\n    logger.debug(\"removed non-head (head={}, received={})\",currSnapshot.getSource(),source);\n  }\n  logger.debug(\"REMOVE result: {}, source: {}\",result,source);\n  return Observable.just(result);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 202,
        "endColumnNumber" : 118
      },
      "nodeContext" : "Map.Entry<Source,InstanceInfo> newHead=dataMap.isEmpty() ? null : dataMap.entrySet().iterator().next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "java.util.Map.Entry<com.netflix.eureka2.registry.Source,com.netflix.eureka2.registry.instance.InstanceInfo>"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 202,
    "startColumnNumber" : 81,
    "endLineNumber" : 202,
    "endColumnNumber" : 117
  } ],
  "layoutRelationDataList" : [ ]
}