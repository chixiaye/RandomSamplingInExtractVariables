{
  "id" : 396,
  "expression" : "2",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/RectangleContent.java",
  "occurrences" : 8,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 87,
      "startColumnNumber" : 40,
      "endLineNumber" : 87,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 87,
        "startColumnNumber" : 40,
        "endLineNumber" : 87,
        "endColumnNumber" : 50
      },
      "nodeContext" : "2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 87,
        "startColumnNumber" : 15,
        "endLineNumber" : 87,
        "endColumnNumber" : 50
      },
      "nodeContext" : "position.x + halfWidth - 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 87,
        "startColumnNumber" : 6,
        "endLineNumber" : 90,
        "endColumnNumber" : 34
      },
      "nodeContext" : "rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 87,
        "startColumnNumber" : 6,
        "endLineNumber" : 90,
        "endColumnNumber" : 35
      },
      "nodeContext" : "rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n  path.arcTo(rect,0,90,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (radius > 0) {\n  rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n  path.arcTo(rect,0,90,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1943,
        "startLineNumber" : 63,
        "startColumnNumber" : 34,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1975,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Path getPath(){\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 87,
        "startColumnNumber" : 15,
        "endLineNumber" : 87,
        "endColumnNumber" : 50
      },
      "nodeContext" : "position.x + halfWidth - 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 88,
      "startColumnNumber" : 36,
      "endLineNumber" : 88,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 88,
        "startColumnNumber" : 36,
        "endLineNumber" : 88,
        "endColumnNumber" : 46
      },
      "nodeContext" : "2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 88,
        "startColumnNumber" : 10,
        "endLineNumber" : 88,
        "endColumnNumber" : 46
      },
      "nodeContext" : "position.y + halfHeight - 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 87,
        "startColumnNumber" : 6,
        "endLineNumber" : 90,
        "endColumnNumber" : 34
      },
      "nodeContext" : "rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 87,
        "startColumnNumber" : 6,
        "endLineNumber" : 90,
        "endColumnNumber" : 35
      },
      "nodeContext" : "rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n  path.arcTo(rect,0,90,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (radius > 0) {\n  rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n  path.arcTo(rect,0,90,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1943,
        "startLineNumber" : 63,
        "startColumnNumber" : 34,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1975,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Path getPath(){\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 88,
        "startColumnNumber" : 10,
        "endLineNumber" : 88,
        "endColumnNumber" : 46
      },
      "nodeContext" : "position.y + halfHeight - 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 98,
      "startColumnNumber" : 36,
      "endLineNumber" : 98,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 98,
        "startColumnNumber" : 36,
        "endLineNumber" : 98,
        "endColumnNumber" : 46
      },
      "nodeContext" : "2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 98,
        "startColumnNumber" : 10,
        "endLineNumber" : 98,
        "endColumnNumber" : 46
      },
      "nodeContext" : "position.y + halfHeight - 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 100,
        "endColumnNumber" : 34
      },
      "nodeContext" : "rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 100,
        "endColumnNumber" : 35
      },
      "nodeContext" : "rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 96,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n  path.arcTo(rect,90,90,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (radius > 0) {\n  rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n  path.arcTo(rect,90,90,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1943,
        "startLineNumber" : 63,
        "startColumnNumber" : 34,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1975,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Path getPath(){\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 98,
        "startColumnNumber" : 10,
        "endLineNumber" : 98,
        "endColumnNumber" : 46
      },
      "nodeContext" : "position.y + halfHeight - 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 99,
      "startColumnNumber" : 35,
      "endLineNumber" : 99,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 99,
        "startColumnNumber" : 35,
        "endLineNumber" : 99,
        "endColumnNumber" : 45
      },
      "nodeContext" : "2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 99,
        "startColumnNumber" : 10,
        "endLineNumber" : 99,
        "endColumnNumber" : 45
      },
      "nodeContext" : "position.x - halfWidth + 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 100,
        "endColumnNumber" : 34
      },
      "nodeContext" : "rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 100,
        "endColumnNumber" : 35
      },
      "nodeContext" : "rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 96,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n  path.arcTo(rect,90,90,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (radius > 0) {\n  rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n  path.arcTo(rect,90,90,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1943,
        "startLineNumber" : 63,
        "startColumnNumber" : 34,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1975,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Path getPath(){\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 99,
        "startColumnNumber" : 10,
        "endLineNumber" : 99,
        "endColumnNumber" : 45
      },
      "nodeContext" : "position.x - halfWidth + 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 109,
      "startColumnNumber" : 35,
      "endLineNumber" : 109,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 109,
        "startColumnNumber" : 35,
        "endLineNumber" : 109,
        "endColumnNumber" : 45
      },
      "nodeContext" : "2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 109,
        "startColumnNumber" : 10,
        "endLineNumber" : 109,
        "endColumnNumber" : 45
      },
      "nodeContext" : "position.x - halfWidth + 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 110,
        "endColumnNumber" : 47
      },
      "nodeContext" : "rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 110,
        "endColumnNumber" : 48
      },
      "nodeContext" : "rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 106,
        "startColumnNumber" : 20,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n  path.arcTo(rect,180,90,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (radius > 0) {\n  rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n  path.arcTo(rect,180,90,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1943,
        "startLineNumber" : 63,
        "startColumnNumber" : 34,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1975,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Path getPath(){\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 109,
        "startColumnNumber" : 10,
        "endLineNumber" : 109,
        "endColumnNumber" : 45
      },
      "nodeContext" : "position.x - halfWidth + 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 110,
      "startColumnNumber" : 36,
      "endLineNumber" : 110,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 110,
        "startColumnNumber" : 36,
        "endLineNumber" : 110,
        "endColumnNumber" : 46
      },
      "nodeContext" : "2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 110,
        "startColumnNumber" : 10,
        "endLineNumber" : 110,
        "endColumnNumber" : 46
      },
      "nodeContext" : "position.y - halfHeight + 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 110,
        "endColumnNumber" : 47
      },
      "nodeContext" : "rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 110,
        "endColumnNumber" : 48
      },
      "nodeContext" : "rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 106,
        "startColumnNumber" : 20,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n  path.arcTo(rect,180,90,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (radius > 0) {\n  rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n  path.arcTo(rect,180,90,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1943,
        "startLineNumber" : 63,
        "startColumnNumber" : 34,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1975,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Path getPath(){\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 110,
        "startColumnNumber" : 10,
        "endLineNumber" : 110,
        "endColumnNumber" : 46
      },
      "nodeContext" : "position.y - halfHeight + 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 117,
      "startColumnNumber" : 40,
      "endLineNumber" : 117,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 117,
        "startColumnNumber" : 40,
        "endLineNumber" : 117,
        "endColumnNumber" : 50
      },
      "nodeContext" : "2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 117,
        "startColumnNumber" : 15,
        "endLineNumber" : 117,
        "endColumnNumber" : 50
      },
      "nodeContext" : "position.x + halfWidth - 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 117,
        "startColumnNumber" : 6,
        "endLineNumber" : 120,
        "endColumnNumber" : 47
      },
      "nodeContext" : "rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 117,
        "startColumnNumber" : 6,
        "endLineNumber" : 120,
        "endColumnNumber" : 48
      },
      "nodeContext" : "rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 116,
        "startColumnNumber" : 20,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n  path.arcTo(rect,270,90,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (radius > 0) {\n  rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n  path.arcTo(rect,270,90,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1943,
        "startLineNumber" : 63,
        "startColumnNumber" : 34,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1975,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Path getPath(){\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 117,
        "startColumnNumber" : 15,
        "endLineNumber" : 117,
        "endColumnNumber" : 50
      },
      "nodeContext" : "position.x + halfWidth - 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 120,
      "startColumnNumber" : 36,
      "endLineNumber" : 120,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 120,
        "startColumnNumber" : 36,
        "endLineNumber" : 120,
        "endColumnNumber" : 46
      },
      "nodeContext" : "2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 120,
        "startColumnNumber" : 10,
        "endLineNumber" : 120,
        "endColumnNumber" : 46
      },
      "nodeContext" : "position.y - halfHeight + 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 117,
        "startColumnNumber" : 6,
        "endLineNumber" : 120,
        "endColumnNumber" : 47
      },
      "nodeContext" : "rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 117,
        "startColumnNumber" : 6,
        "endLineNumber" : 120,
        "endColumnNumber" : 48
      },
      "nodeContext" : "rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 116,
        "startColumnNumber" : 20,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n  path.arcTo(rect,270,90,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (radius > 0) {\n  rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n  path.arcTo(rect,270,90,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1943,
        "startLineNumber" : 63,
        "startColumnNumber" : 34,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1975,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Path getPath(){\n  if (isPathValid) {\n    return path;\n  }\n  path.reset();\n  PointF size=sizeAnimation.getValue();\n  float halfWidth=size.x / 2f;\n  float halfHeight=size.y / 2f;\n  float radius=cornerRadiusAnimation == null ? 0f : cornerRadiusAnimation.getValue();\n  float maxRadius=Math.min(halfWidth,halfHeight);\n  if (radius > maxRadius) {\n    radius=maxRadius;\n  }\n  PointF position=positionAnimation.getValue();\n  path.moveTo(position.x + halfWidth,position.y - halfHeight + radius);\n  path.lineTo(position.x + halfWidth,position.y + halfHeight - radius);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y + halfHeight - 2 * radius,position.x + halfWidth,position.y + halfHeight);\n    path.arcTo(rect,0,90,false);\n  }\n  path.lineTo(position.x - halfWidth + radius,position.y + halfHeight);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y + halfHeight - 2 * radius,position.x - halfWidth + 2 * radius,position.y + halfHeight);\n    path.arcTo(rect,90,90,false);\n  }\n  path.lineTo(position.x - halfWidth,position.y - halfHeight + radius);\n  if (radius > 0) {\n    rect.set(position.x - halfWidth,position.y - halfHeight,position.x - halfWidth + 2 * radius,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,180,90,false);\n  }\n  path.lineTo(position.x + halfWidth - radius,position.y - halfHeight);\n  if (radius > 0) {\n    rect.set(position.x + halfWidth - 2 * radius,position.y - halfHeight,position.x + halfWidth,position.y - halfHeight + 2 * radius);\n    path.arcTo(rect,270,90,false);\n  }\n  path.close();\n  Utils.applyTrimPathIfNeeded(path,trimPath);\n  isPathValid=true;\n  return path;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 120,
        "startColumnNumber" : 10,
        "endLineNumber" : 120,
        "endColumnNumber" : 46
      },
      "nodeContext" : "position.y - halfHeight + 2 * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 87,
    "startColumnNumber" : 40,
    "endLineNumber" : 87,
    "endColumnNumber" : 41
  }, {
    "charLength" : 1,
    "startLineNumber" : 88,
    "startColumnNumber" : 36,
    "endLineNumber" : 88,
    "endColumnNumber" : 37
  }, {
    "charLength" : 1,
    "startLineNumber" : 98,
    "startColumnNumber" : 36,
    "endLineNumber" : 98,
    "endColumnNumber" : 37
  }, {
    "charLength" : 1,
    "startLineNumber" : 99,
    "startColumnNumber" : 35,
    "endLineNumber" : 99,
    "endColumnNumber" : 36
  }, {
    "charLength" : 1,
    "startLineNumber" : 109,
    "startColumnNumber" : 35,
    "endLineNumber" : 109,
    "endColumnNumber" : 36
  }, {
    "charLength" : 1,
    "startLineNumber" : 110,
    "startColumnNumber" : 36,
    "endLineNumber" : 110,
    "endColumnNumber" : 37
  }, {
    "charLength" : 1,
    "startLineNumber" : 117,
    "startColumnNumber" : 40,
    "endLineNumber" : 117,
    "endColumnNumber" : 41
  }, {
    "charLength" : 1,
    "startLineNumber" : 120,
    "startColumnNumber" : 36,
    "endLineNumber" : 120,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 2
  } ]
}