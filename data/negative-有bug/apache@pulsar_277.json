{
  "id" : 277,
  "expression" : "pulsarClient.newConsumer().topic(topicName)",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/SubscribeDispatchLimiterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pulsarClient.newConsumer().topic(topicName)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 57,
      "startLineNumber" : 57,
      "startColumnNumber" : 36,
      "endLineNumber" : 58,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 57,
        "startColumnNumber" : 36,
        "endLineNumber" : 59,
        "endColumnNumber" : 44
      },
      "nodeContext" : "pulsarClient.newConsumer().topic(topicName).subscriptionName(subscribeName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 57,
        "startColumnNumber" : 36,
        "endLineNumber" : 60,
        "endColumnNumber" : 24
      },
      "nodeContext" : "pulsarClient.newConsumer().topic(topicName).subscriptionName(subscribeName).subscribe()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 57,
        "startColumnNumber" : 25,
        "endLineNumber" : 60,
        "endColumnNumber" : 24
      },
      "nodeContext" : "consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subscribeName).subscribe()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 25
      },
      "nodeContext" : "@Cleanup Consumer<byte[]> consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subscribeName).subscribe();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1280,
        "startLineNumber" : 52,
        "startColumnNumber" : 94,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String topicName=\"persistent://\" + newTopicName();\n  final String subscribeName=\"cg_testDispatchRateLimiterPerSubscriptionInMsgOnlyBrokerLevel\";\n  @Cleanup Consumer<byte[]> consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subscribeName).subscribe();\n  PersistentTopic topic=(PersistentTopic)pulsar.getBrokerService().getOrCreateTopic(topicName).get();\n  assertNotNull(topic);\n  PersistentSubscription subscription=topic.getSubscriptions().get(subscribeName);\n  assertNotNull(subscription);\n  assertFalse(subscription.getDispatcher().getRateLimiter().isPresent());\n  admin.brokers().updateDynamicConfiguration(\"dispatchThrottlingRatePerSubscriptionInMsg\",\"100\");\n  Awaitility.await().untilAsserted(() -> assertEquals(pulsar.getConfig().getDispatchThrottlingRatePerSubscriptionInMsg(),100));\n  Awaitility.await().untilAsserted(() -> {\n    Optional<DispatchRateLimiter> limiterOpt=subscription.getDispatcher().getRateLimiter();\n    assertTrue(limiterOpt.isPresent());\n    assertEquals(limiterOpt.get().getDispatchRateOnMsg(),100);\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDispatchRateLimiterPerSubscriptionInMsgOnlyBrokerLevel() throws Exception {\n  final String topicName=\"persistent://\" + newTopicName();\n  final String subscribeName=\"cg_testDispatchRateLimiterPerSubscriptionInMsgOnlyBrokerLevel\";\n  @Cleanup Consumer<byte[]> consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subscribeName).subscribe();\n  PersistentTopic topic=(PersistentTopic)pulsar.getBrokerService().getOrCreateTopic(topicName).get();\n  assertNotNull(topic);\n  PersistentSubscription subscription=topic.getSubscriptions().get(subscribeName);\n  assertNotNull(subscription);\n  assertFalse(subscription.getDispatcher().getRateLimiter().isPresent());\n  admin.brokers().updateDynamicConfiguration(\"dispatchThrottlingRatePerSubscriptionInMsg\",\"100\");\n  Awaitility.await().untilAsserted(() -> assertEquals(pulsar.getConfig().getDispatchThrottlingRatePerSubscriptionInMsg(),100));\n  Awaitility.await().untilAsserted(() -> {\n    Optional<DispatchRateLimiter> limiterOpt=subscription.getDispatcher().getRateLimiter();\n    assertTrue(limiterOpt.isPresent());\n    assertEquals(limiterOpt.get().getDispatchRateOnMsg(),100);\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 57,
        "startColumnNumber" : 36,
        "endLineNumber" : 59,
        "endColumnNumber" : 44
      },
      "nodeContext" : "pulsarClient.newConsumer().topic(topicName).subscriptionName(subscribeName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "org.apache.pulsar.client.api.ConsumerBuilder<byte[]>"
  } ],
  "positionList" : [ {
    "charLength" : 57,
    "startLineNumber" : 57,
    "startColumnNumber" : 36,
    "endLineNumber" : 58,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}