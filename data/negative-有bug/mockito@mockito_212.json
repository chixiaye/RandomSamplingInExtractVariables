{
  "id" : 212,
  "expression" : "\"Special reason\"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/annotation/DoNotMockTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Special reason\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 94,
      "startColumnNumber" : 38,
      "endLineNumber" : 94,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThatThrownBy(() -> {\n  NotMockableWithReason notMockable=mock(NotMockableWithReason.class);\n}\n).isInstanceOf(DoNotMockException.class).hasMessageContaining(\"Special reason\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 295,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertThatThrownBy(() -> {\n  NotMockableWithReason notMockable=mock(NotMockableWithReason.class);\n}\n).isInstanceOf(DoNotMockException.class).hasMessageContaining(\"Special reason\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 88,
        "startColumnNumber" : 72,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThatThrownBy(() -> {\n    NotMockableWithReason notMockable=mock(NotMockableWithReason.class);\n  }\n).isInstanceOf(DoNotMockException.class).hasMessageContaining(\"Special reason\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void thrown_exception_includes_special_non_mockable_reason(){\n  assertThatThrownBy(() -> {\n    NotMockableWithReason notMockable=mock(NotMockableWithReason.class);\n  }\n).isInstanceOf(DoNotMockException.class).hasMessageContaining(\"Special reason\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 30,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThatThrownBy(() -> {\n  NotMockableWithReason notMockable=mock(NotMockableWithReason.class);\n}\n).isInstanceOf(DoNotMockException.class).hasMessageContaining(\"Special reason\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 11
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 94,
    "startColumnNumber" : 38,
    "endLineNumber" : 94,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}