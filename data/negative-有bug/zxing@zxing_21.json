{
  "id" : 21,
  "expression" : "time1 == null",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/zxing.appspot.com/src/main/java/com/google/zxing/web/generator/client/CalendarEventGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "time1 == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 262,
      "startColumnNumber" : 42,
      "endLineNumber" : 262,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 262,
        "startColumnNumber" : 8,
        "endLineNumber" : 262,
        "endColumnNumber" : 55
      },
      "nodeContext" : "date1 == null || date2 == null || time1 == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 262,
        "startColumnNumber" : 8,
        "endLineNumber" : 262,
        "endColumnNumber" : 72
      },
      "nodeContext" : "date1 == null || date2 == null || time1 == null || time2 == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 262,
        "startColumnNumber" : 4,
        "endLineNumber" : 264,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (date1 == null || date2 == null || time1 == null || time2 == null) {\n  throw new GeneratorException(\"Start and end dates/times must be set.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1088,
        "startLineNumber" : 257,
        "startColumnNumber" : 63,
        "endLineNumber" : 278,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Date date1=datePicker1.getValue();\n  Date date2=datePicker2.getValue();\n  Date time1=getDateFromTextBox(timePicker1);\n  Date time2=getDateFromTextBox(timePicker2);\n  if (date1 == null || date2 == null || time1 == null || time2 == null) {\n    throw new GeneratorException(\"Start and end dates/times must be set.\");\n  }\n  String timezoneDelta=timeZones.getValue(timeZones.getSelectedIndex());\n  long diffTimeZone=Long.parseLong(timezoneDelta);\n  if (summerTime.getValue()) {\n    diffTimeZone+=ONE_HOUR;\n  }\n  Date dateTime1=addMilliseconds(mergeDateAndTime(date1,time1),-diffTimeZone);\n  Date dateTime2=addMilliseconds(mergeDateAndTime(date2,time2),-diffTimeZone);\n  if (dateTime1.after(dateTime2)) {\n    throw new GeneratorException(\"Ending date/time cannot be before starting date/time.\");\n  }\n  DateTimeFormat isoFormatter=DateTimeFormat.getFormat(\"yyyyMMdd'T'HHmmss'Z'\");\n  return \"DTSTART:\" + isoFormatter.format(dateTime1) + \"\\r\\n\"+ \"DTEND:\"+ isoFormatter.format(dateTime2)+ \"\\r\\n\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 257,
        "startColumnNumber" : 2,
        "endLineNumber" : 278,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private String getDateTimeValues() throws GeneratorException {\n  Date date1=datePicker1.getValue();\n  Date date2=datePicker2.getValue();\n  Date time1=getDateFromTextBox(timePicker1);\n  Date time2=getDateFromTextBox(timePicker2);\n  if (date1 == null || date2 == null || time1 == null || time2 == null) {\n    throw new GeneratorException(\"Start and end dates/times must be set.\");\n  }\n  String timezoneDelta=timeZones.getValue(timeZones.getSelectedIndex());\n  long diffTimeZone=Long.parseLong(timezoneDelta);\n  if (summerTime.getValue()) {\n    diffTimeZone+=ONE_HOUR;\n  }\n  Date dateTime1=addMilliseconds(mergeDateAndTime(date1,time1),-diffTimeZone);\n  Date dateTime2=addMilliseconds(mergeDateAndTime(date2,time2),-diffTimeZone);\n  if (dateTime1.after(dateTime2)) {\n    throw new GeneratorException(\"Ending date/time cannot be before starting date/time.\");\n  }\n  DateTimeFormat isoFormatter=DateTimeFormat.getFormat(\"yyyyMMdd'T'HHmmss'Z'\");\n  return \"DTSTART:\" + isoFormatter.format(dateTime1) + \"\\r\\n\"+ \"DTEND:\"+ isoFormatter.format(dateTime2)+ \"\\r\\n\";\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 262,
        "startColumnNumber" : 8,
        "endLineNumber" : 262,
        "endColumnNumber" : 72
      },
      "nodeContext" : "date1 == null || date2 == null || time1 == null || time2 == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 262,
    "startColumnNumber" : 42,
    "endLineNumber" : 262,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}