{
  "id" : 87,
  "expression" : "\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\"",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/util/VersionChecker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 115,
      "startLineNumber" : 190,
      "startColumnNumber" : 36,
      "endLineNumber" : 191,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 190,
        "startColumnNumber" : 9,
        "endLineNumber" : 191,
        "endColumnNumber" : 53
      },
      "nodeContext" : "BytecodeViewer.showMessage(\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 190,
        "startColumnNumber" : 9,
        "endLineNumber" : 191,
        "endColumnNumber" : 54
      },
      "nodeContext" : "BytecodeViewer.showMessage(\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 189,
        "startColumnNumber" : 43,
        "endLineNumber" : 192,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  BytecodeViewer.showMessage(\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 189,
        "startColumnNumber" : 10,
        "endLineNumber" : 192,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (FileNotFoundException ex) {\n  BytecodeViewer.showMessage(\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1841,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  InputStream is=new URL(\"https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".jar\").openConnection().getInputStream();\n  FileOutputStream fos=new FileOutputStream(finalFile);\n  try {\n    System.out.println(\"Downloading from https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".jar\");\n    byte[] buffer=new byte[8192];\n    int len;\n    int downloaded=0;\n    boolean flag=false;\n    BytecodeViewer.showMessage(\"Downloading the jar in the background, when it's \" + \"finished you will be alerted with another message box.\" + nl + nl+ \"Expect this to take several minutes.\");\n    while ((len=is.read(buffer)) > 0) {\n      fos.write(buffer,0,len);\n      fos.flush();\n      downloaded+=8192;\n      int mbs=downloaded / 1048576;\n      if (mbs % 5 == 0 && mbs != 0) {\n        if (!flag)         System.out.println(\"Downloaded \" + mbs + \"MBs so far\");\n        flag=true;\n      }\n else       flag=false;\n    }\n  }\n  finally {\n    try {\n      if (is != null) {\n        is.close();\n      }\n    }\n  finally {\n      fos.flush();\n      fos.close();\n    }\n  }\n  System.out.println(\"Download finished!\");\n  BytecodeViewer.showMessage(\"Download successful! You can find the updated program at \" + finalFile.getAbsolutePath());\n}\n catch (FileNotFoundException ex) {\n  BytecodeViewer.showMessage(\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\");\n}\ncatch (Exception ex) {\n  BytecodeViewer.handleException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 205,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 152,
        "startColumnNumber" : 41,
        "endLineNumber" : 196,
        "endColumnNumber" : 8
      },
      "nodeContext" : "{\n  try {\n    InputStream is=new URL(\"https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".jar\").openConnection().getInputStream();\n    FileOutputStream fos=new FileOutputStream(finalFile);\n    try {\n      System.out.println(\"Downloading from https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".jar\");\n      byte[] buffer=new byte[8192];\n      int len;\n      int downloaded=0;\n      boolean flag=false;\n      BytecodeViewer.showMessage(\"Downloading the jar in the background, when it's \" + \"finished you will be alerted with another message box.\" + nl + nl+ \"Expect this to take several minutes.\");\n      while ((len=is.read(buffer)) > 0) {\n        fos.write(buffer,0,len);\n        fos.flush();\n        downloaded+=8192;\n        int mbs=downloaded / 1048576;\n        if (mbs % 5 == 0 && mbs != 0) {\n          if (!flag)           System.out.println(\"Downloaded \" + mbs + \"MBs so far\");\n          flag=true;\n        }\n else         flag=false;\n      }\n    }\n  finally {\n      try {\n        if (is != null) {\n          is.close();\n        }\n      }\n  finally {\n        fos.flush();\n        fos.close();\n      }\n    }\n    System.out.println(\"Download finished!\");\n    BytecodeViewer.showMessage(\"Download successful! You can find the updated program at \" + finalFile.getAbsolutePath());\n  }\n catch (  FileNotFoundException ex) {\n    BytecodeViewer.showMessage(\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\");\n  }\ncatch (  Exception ex) {\n    BytecodeViewer.handleException(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 1901,
        "startLineNumber" : 152,
        "startColumnNumber" : 9,
        "endLineNumber" : 196,
        "endColumnNumber" : 8
      },
      "nodeContext" : "catch (FileNotFoundException e) {\n  try {\n    InputStream is=new URL(\"https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".jar\").openConnection().getInputStream();\n    FileOutputStream fos=new FileOutputStream(finalFile);\n    try {\n      System.out.println(\"Downloading from https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".jar\");\n      byte[] buffer=new byte[8192];\n      int len;\n      int downloaded=0;\n      boolean flag=false;\n      BytecodeViewer.showMessage(\"Downloading the jar in the background, when it's \" + \"finished you will be alerted with another message box.\" + nl + nl+ \"Expect this to take several minutes.\");\n      while ((len=is.read(buffer)) > 0) {\n        fos.write(buffer,0,len);\n        fos.flush();\n        downloaded+=8192;\n        int mbs=downloaded / 1048576;\n        if (mbs % 5 == 0 && mbs != 0) {\n          if (!flag)           System.out.println(\"Downloaded \" + mbs + \"MBs so far\");\n          flag=true;\n        }\n else         flag=false;\n      }\n    }\n  finally {\n      try {\n        if (is != null) {\n          is.close();\n        }\n      }\n  finally {\n        fos.flush();\n        fos.close();\n      }\n    }\n    System.out.println(\"Download finished!\");\n    BytecodeViewer.showMessage(\"Download successful! You can find the updated program at \" + finalFile.getAbsolutePath());\n  }\n catch (  FileNotFoundException ex) {\n    BytecodeViewer.showMessage(\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\");\n  }\ncatch (  Exception ex) {\n    BytecodeViewer.handleException(ex);\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 211,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3535,
        "startLineNumber" : 113,
        "startColumnNumber" : 7,
        "endLineNumber" : 198,
        "endColumnNumber" : 8
      },
      "nodeContext" : "try {\n  InputStream is=new URL(\"https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".zip\").openConnection().getInputStream();\n  FileOutputStream fos=new FileOutputStream(finalFile);\n  try {\n    System.out.println(\"Downloading from https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".zip\");\n    byte[] buffer=new byte[8192];\n    int len;\n    int downloaded=0;\n    boolean flag=false;\n    BytecodeViewer.showMessage(\"Downloading the jar in the background, when it's finished \" + \"you will be alerted with another message box.\" + nl + nl+ \"Expect this to take several minutes.\");\n    while ((len=is.read(buffer)) > 0) {\n      fos.write(buffer,0,len);\n      fos.flush();\n      downloaded+=8192;\n      int mbs=downloaded / 1048576;\n      if (mbs % 5 == 0 && mbs != 0) {\n        if (!flag)         System.out.println(\"Downloaded \" + mbs + \"MBs so far\");\n        flag=true;\n      }\n else       flag=false;\n    }\n  }\n  finally {\n    try {\n      if (is != null) {\n        is.close();\n      }\n    }\n  finally {\n      fos.flush();\n      fos.close();\n    }\n  }\n  System.out.println(\"Download finished!\");\n  BytecodeViewer.showMessage(\"Download successful! You can find the updated program at \" + finalFile.getAbsolutePath());\n}\n catch (FileNotFoundException e) {\n  try {\n    InputStream is=new URL(\"https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".jar\").openConnection().getInputStream();\n    FileOutputStream fos=new FileOutputStream(finalFile);\n    try {\n      System.out.println(\"Downloading from https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".jar\");\n      byte[] buffer=new byte[8192];\n      int len;\n      int downloaded=0;\n      boolean flag=false;\n      BytecodeViewer.showMessage(\"Downloading the jar in the background, when it's \" + \"finished you will be alerted with another message box.\" + nl + nl+ \"Expect this to take several minutes.\");\n      while ((len=is.read(buffer)) > 0) {\n        fos.write(buffer,0,len);\n        fos.flush();\n        downloaded+=8192;\n        int mbs=downloaded / 1048576;\n        if (mbs % 5 == 0 && mbs != 0) {\n          if (!flag)           System.out.println(\"Downloaded \" + mbs + \"MBs so far\");\n          flag=true;\n        }\n else         flag=false;\n      }\n    }\n  finally {\n      try {\n        if (is != null) {\n          is.close();\n        }\n      }\n  finally {\n        fos.flush();\n        fos.close();\n      }\n    }\n    System.out.println(\"Download finished!\");\n    BytecodeViewer.showMessage(\"Download successful! You can find the updated program at \" + finalFile.getAbsolutePath());\n  }\n catch (  FileNotFoundException ex) {\n    BytecodeViewer.showMessage(\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\");\n  }\ncatch (  Exception ex) {\n    BytecodeViewer.handleException(ex);\n  }\n}\ncatch (Exception e) {\n  BytecodeViewer.handleException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 403,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 3560,
        "startLineNumber" : 112,
        "startColumnNumber" : 47,
        "endLineNumber" : 200,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    InputStream is=new URL(\"https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".zip\").openConnection().getInputStream();\n    FileOutputStream fos=new FileOutputStream(finalFile);\n    try {\n      System.out.println(\"Downloading from https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".zip\");\n      byte[] buffer=new byte[8192];\n      int len;\n      int downloaded=0;\n      boolean flag=false;\n      BytecodeViewer.showMessage(\"Downloading the jar in the background, when it's finished \" + \"you will be alerted with another message box.\" + nl + nl+ \"Expect this to take several minutes.\");\n      while ((len=is.read(buffer)) > 0) {\n        fos.write(buffer,0,len);\n        fos.flush();\n        downloaded+=8192;\n        int mbs=downloaded / 1048576;\n        if (mbs % 5 == 0 && mbs != 0) {\n          if (!flag)           System.out.println(\"Downloaded \" + mbs + \"MBs so far\");\n          flag=true;\n        }\n else         flag=false;\n      }\n    }\n  finally {\n      try {\n        if (is != null) {\n          is.close();\n        }\n      }\n  finally {\n        fos.flush();\n        fos.close();\n      }\n    }\n    System.out.println(\"Download finished!\");\n    BytecodeViewer.showMessage(\"Download successful! You can find the updated program at \" + finalFile.getAbsolutePath());\n  }\n catch (  FileNotFoundException e) {\n    try {\n      InputStream is=new URL(\"https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".jar\").openConnection().getInputStream();\n      FileOutputStream fos=new FileOutputStream(finalFile);\n      try {\n        System.out.println(\"Downloading from https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".jar\");\n        byte[] buffer=new byte[8192];\n        int len;\n        int downloaded=0;\n        boolean flag=false;\n        BytecodeViewer.showMessage(\"Downloading the jar in the background, when it's \" + \"finished you will be alerted with another message box.\" + nl + nl+ \"Expect this to take several minutes.\");\n        while ((len=is.read(buffer)) > 0) {\n          fos.write(buffer,0,len);\n          fos.flush();\n          downloaded+=8192;\n          int mbs=downloaded / 1048576;\n          if (mbs % 5 == 0 && mbs != 0) {\n            if (!flag)             System.out.println(\"Downloaded \" + mbs + \"MBs so far\");\n            flag=true;\n          }\n else           flag=false;\n        }\n      }\n  finally {\n        try {\n          if (is != null) {\n            is.close();\n          }\n        }\n  finally {\n          fos.flush();\n          fos.close();\n        }\n      }\n      System.out.println(\"Download finished!\");\n      BytecodeViewer.showMessage(\"Download successful! You can find the updated program at \" + finalFile.getAbsolutePath());\n    }\n catch (    FileNotFoundException ex) {\n      BytecodeViewer.showMessage(\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\");\n    }\ncatch (    Exception ex) {\n      BytecodeViewer.handleException(ex);\n    }\n  }\ncatch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 404,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 3566,
        "startLineNumber" : 112,
        "startColumnNumber" : 41,
        "endLineNumber" : 200,
        "endColumnNumber" : 7
      },
      "nodeContext" : "() -> {\n  try {\n    InputStream is=new URL(\"https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".zip\").openConnection().getInputStream();\n    FileOutputStream fos=new FileOutputStream(finalFile);\n    try {\n      System.out.println(\"Downloading from https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".zip\");\n      byte[] buffer=new byte[8192];\n      int len;\n      int downloaded=0;\n      boolean flag=false;\n      BytecodeViewer.showMessage(\"Downloading the jar in the background, when it's finished \" + \"you will be alerted with another message box.\" + nl + nl+ \"Expect this to take several minutes.\");\n      while ((len=is.read(buffer)) > 0) {\n        fos.write(buffer,0,len);\n        fos.flush();\n        downloaded+=8192;\n        int mbs=downloaded / 1048576;\n        if (mbs % 5 == 0 && mbs != 0) {\n          if (!flag)           System.out.println(\"Downloaded \" + mbs + \"MBs so far\");\n          flag=true;\n        }\n else         flag=false;\n      }\n    }\n  finally {\n      try {\n        if (is != null) {\n          is.close();\n        }\n      }\n  finally {\n        fos.flush();\n        fos.close();\n      }\n    }\n    System.out.println(\"Download finished!\");\n    BytecodeViewer.showMessage(\"Download successful! You can find the updated program at \" + finalFile.getAbsolutePath());\n  }\n catch (  FileNotFoundException e) {\n    try {\n      InputStream is=new URL(\"https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".jar\").openConnection().getInputStream();\n      FileOutputStream fos=new FileOutputStream(finalFile);\n      try {\n        System.out.println(\"Downloading from https://github.com/Konloch/bytecode-viewer/releases/download/v\" + version + \"/BytecodeViewer.\"+ version+ \".jar\");\n        byte[] buffer=new byte[8192];\n        int len;\n        int downloaded=0;\n        boolean flag=false;\n        BytecodeViewer.showMessage(\"Downloading the jar in the background, when it's \" + \"finished you will be alerted with another message box.\" + nl + nl+ \"Expect this to take several minutes.\");\n        while ((len=is.read(buffer)) > 0) {\n          fos.write(buffer,0,len);\n          fos.flush();\n          downloaded+=8192;\n          int mbs=downloaded / 1048576;\n          if (mbs % 5 == 0 && mbs != 0) {\n            if (!flag)             System.out.println(\"Downloaded \" + mbs + \"MBs so far\");\n            flag=true;\n          }\n else           flag=false;\n        }\n      }\n  finally {\n        try {\n          if (is != null) {\n            is.close();\n          }\n        }\n  finally {\n          fos.flush();\n          fos.close();\n        }\n      }\n      System.out.println(\"Download finished!\");\n      BytecodeViewer.showMessage(\"Download successful! You can find the updated program at \" + finalFile.getAbsolutePath());\n    }\n catch (    FileNotFoundException ex) {\n      BytecodeViewer.showMessage(\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\");\n    }\ncatch (    Exception ex) {\n      BytecodeViewer.handleException(ex);\n    }\n  }\ncatch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 405,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 190,
        "startColumnNumber" : 9,
        "endLineNumber" : 191,
        "endColumnNumber" : 54
      },
      "nodeContext" : "BytecodeViewer.showMessage(\"Unable to download, the zip file has not been uploaded yet, \" + \"please try again in about 10 minutes.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 18,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 115,
    "startLineNumber" : 190,
    "startColumnNumber" : 36,
    "endLineNumber" : 191,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}