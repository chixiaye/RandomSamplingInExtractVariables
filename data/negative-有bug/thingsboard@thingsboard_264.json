{
  "id" : 264,
  "expression" : "ctx.getUserService()",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/rule-engine/rule-engine-components/src/main/java/org/thingsboard/rule/engine/util/EntitiesCustomerIdAsyncLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ctx.getUserService()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 39,
      "startColumnNumber" : 40,
      "endLineNumber" : 39,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 39,
        "startColumnNumber" : 40,
        "endLineNumber" : 39,
        "endColumnNumber" : 116
      },
      "nodeContext" : "ctx.getUserService().findUserByIdAsync(ctx.getTenantId(),(UserId)original)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 39,
        "startColumnNumber" : 23,
        "endLineNumber" : 39,
        "endColumnNumber" : 117
      },
      "nodeContext" : "getCustomerAsync(ctx.getUserService().findUserByIdAsync(ctx.getTenantId(),(UserId)original))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 39,
        "startColumnNumber" : 16,
        "endLineNumber" : 39,
        "endColumnNumber" : 118
      },
      "nodeContext" : "return getCustomerAsync(ctx.getUserService().findUserByIdAsync(ctx.getTenantId(),(UserId)original));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 739,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (original.getEntityType()) {\ncase CUSTOMER:  return Futures.immediateFuture((CustomerId)original);\ncase USER:return getCustomerAsync(ctx.getUserService().findUserByIdAsync(ctx.getTenantId(),(UserId)original));\ncase ASSET:return getCustomerAsync(ctx.getAssetService().findAssetByIdAsync(ctx.getTenantId(),(AssetId)original));\ncase DEVICE:return getCustomerAsync(ctx.getDeviceService().findDeviceByIdAsync(ctx.getTenantId(),(DeviceId)original));\ndefault:return Futures.immediateFailedFuture(new TbNodeException(\"Unexpected original EntityType \" + original.getEntityType()));\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 78,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 756,
        "startLineNumber" : 33,
        "startColumnNumber" : 99,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (original.getEntityType()) {\ncase CUSTOMER:    return Futures.immediateFuture((CustomerId)original);\ncase USER:  return getCustomerAsync(ctx.getUserService().findUserByIdAsync(ctx.getTenantId(),(UserId)original));\ncase ASSET:return getCustomerAsync(ctx.getAssetService().findAssetByIdAsync(ctx.getTenantId(),(AssetId)original));\ncase DEVICE:return getCustomerAsync(ctx.getDeviceService().findDeviceByIdAsync(ctx.getTenantId(),(DeviceId)original));\ndefault:return Futures.immediateFailedFuture(new TbNodeException(\"Unexpected original EntityType \" + original.getEntityType()));\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static ListenableFuture<CustomerId> findEntityIdAsync(TbContext ctx,EntityId original){\nswitch (original.getEntityType()) {\ncase CUSTOMER:    return Futures.immediateFuture((CustomerId)original);\ncase USER:  return getCustomerAsync(ctx.getUserService().findUserByIdAsync(ctx.getTenantId(),(UserId)original));\ncase ASSET:return getCustomerAsync(ctx.getAssetService().findAssetByIdAsync(ctx.getTenantId(),(AssetId)original));\ncase DEVICE:return getCustomerAsync(ctx.getDeviceService().findDeviceByIdAsync(ctx.getTenantId(),(DeviceId)original));\ndefault:return Futures.immediateFailedFuture(new TbNodeException(\"Unexpected original EntityType \" + original.getEntityType()));\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 39,
        "startColumnNumber" : 16,
        "endLineNumber" : 39,
        "endColumnNumber" : 118
      },
      "nodeContext" : "return getCustomerAsync(ctx.getUserService().findUserByIdAsync(ctx.getTenantId(),(UserId)original));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "org.thingsboard.server.dao.user.UserService"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 39,
    "startColumnNumber" : 40,
    "endLineNumber" : 39,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}