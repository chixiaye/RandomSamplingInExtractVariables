{
  "id" : 365,
  "expression" : "error",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/cc/arduino/packages/Uploader.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "error",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 125,
      "startColumnNumber" : 8,
      "endLineNumber" : 125,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 21
      },
      "nodeContext" : "error != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (error != null) {\n  RunnerException exception=new RunnerException(error);\n  exception.hideStackTrace();\n  throw exception;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 101,
        "startColumnNumber" : 76,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (command == null || command.length == 0)   return true;\n  notFoundError=false;\n  int result=-1;\n  try {\n    if (verbose) {\n      for (      String c : command)       System.out.print(c + \" \");\n      System.out.println();\n    }\n    Process process=ProcessUtils.exec(command);\n    new MessageSiphon(process.getInputStream(),this,100);\n    new MessageSiphon(process.getErrorStream(),this,100);\n    result=process.waitFor();\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  if (error != null) {\n    RunnerException exception=new RunnerException(error);\n    exception.hideStackTrace();\n    throw exception;\n  }\n  return result == 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected boolean executeUploadCommand(String command[]) throws Exception {\n  if (command == null || command.length == 0)   return true;\n  notFoundError=false;\n  int result=-1;\n  try {\n    if (verbose) {\n      for (      String c : command)       System.out.print(c + \" \");\n      System.out.println();\n    }\n    Process process=ProcessUtils.exec(command);\n    new MessageSiphon(process.getInputStream(),this,100);\n    new MessageSiphon(process.getErrorStream(),this,100);\n    result=process.waitFor();\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  if (error != null) {\n    RunnerException exception=new RunnerException(error);\n    exception.hideStackTrace();\n    throw exception;\n  }\n  return result == 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 21
      },
      "nodeContext" : "error != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "error",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 126,
      "startColumnNumber" : 54,
      "endLineNumber" : 126,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 126,
        "startColumnNumber" : 34,
        "endLineNumber" : 126,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new RunnerException(error)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 126,
        "startColumnNumber" : 22,
        "endLineNumber" : 126,
        "endColumnNumber" : 60
      },
      "nodeContext" : "exception=new RunnerException(error)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 61
      },
      "nodeContext" : "RunnerException exception=new RunnerException(error);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 125,
        "startColumnNumber" : 23,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RunnerException exception=new RunnerException(error);\n  exception.hideStackTrace();\n  throw exception;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (error != null) {\n  RunnerException exception=new RunnerException(error);\n  exception.hideStackTrace();\n  throw exception;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 101,
        "startColumnNumber" : 76,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (command == null || command.length == 0)   return true;\n  notFoundError=false;\n  int result=-1;\n  try {\n    if (verbose) {\n      for (      String c : command)       System.out.print(c + \" \");\n      System.out.println();\n    }\n    Process process=ProcessUtils.exec(command);\n    new MessageSiphon(process.getInputStream(),this,100);\n    new MessageSiphon(process.getErrorStream(),this,100);\n    result=process.waitFor();\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  if (error != null) {\n    RunnerException exception=new RunnerException(error);\n    exception.hideStackTrace();\n    throw exception;\n  }\n  return result == 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected boolean executeUploadCommand(String command[]) throws Exception {\n  if (command == null || command.length == 0)   return true;\n  notFoundError=false;\n  int result=-1;\n  try {\n    if (verbose) {\n      for (      String c : command)       System.out.print(c + \" \");\n      System.out.println();\n    }\n    Process process=ProcessUtils.exec(command);\n    new MessageSiphon(process.getInputStream(),this,100);\n    new MessageSiphon(process.getErrorStream(),this,100);\n    result=process.waitFor();\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  if (error != null) {\n    RunnerException exception=new RunnerException(error);\n    exception.hideStackTrace();\n    throw exception;\n  }\n  return result == 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 61
      },
      "nodeContext" : "RunnerException exception=new RunnerException(error);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 125,
    "startColumnNumber" : 8,
    "endLineNumber" : 125,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 126,
    "startColumnNumber" : 54,
    "endLineNumber" : 126,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}