{
  "id" : 269,
  "expression" : "currentTransaction()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaProducer.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "currentTransaction()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 933,
      "startColumnNumber" : 61,
      "endLineNumber" : 933,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 933,
        "startColumnNumber" : 40,
        "endLineNumber" : 933,
        "endColumnNumber" : 81
      },
      "nodeContext" : "currentTransaction=currentTransaction()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 933,
        "startColumnNumber" : 12,
        "endLineNumber" : 933,
        "endColumnNumber" : 82
      },
      "nodeContext" : "final KafkaTransactionState currentTransaction=currentTransaction();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 932,
        "startColumnNumber" : 12,
        "endLineNumber" : 952,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final KafkaTransactionState currentTransaction=currentTransaction();\n  if (currentTransaction != null) {\n    flush(currentTransaction);\nswitch (semantic) {\ncase EXACTLY_ONCE:      break;\ncase AT_LEAST_ONCE:case NONE:    currentTransaction.producer.flush();\n  currentTransaction.producer.close(Duration.ofSeconds(0));\nbreak;\n}\n}\nsuper.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 932,
        "startColumnNumber" : 8,
        "endLineNumber" : 977,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  final KafkaTransactionState currentTransaction=currentTransaction();\n  if (currentTransaction != null) {\n    flush(currentTransaction);\nswitch (semantic) {\ncase EXACTLY_ONCE:      break;\ncase AT_LEAST_ONCE:case NONE:    currentTransaction.producer.flush();\n  currentTransaction.producer.close(Duration.ofSeconds(0));\nbreak;\n}\n}\nsuper.close();\n}\n catch (Exception e) {\nasyncException=ExceptionUtils.firstOrSuppressed(e,asyncException);\n}\n finally {\nif (currentTransaction() != null) {\ntry {\ncurrentTransaction().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\npendingTransactions().forEach(transaction -> {\ntry {\ntransaction.getValue().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\n);\ncheckErroneous();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 132,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2151,
        "startLineNumber" : 930,
        "startColumnNumber" : 51,
        "endLineNumber" : 978,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    final KafkaTransactionState currentTransaction=currentTransaction();\n    if (currentTransaction != null) {\n      flush(currentTransaction);\nswitch (semantic) {\ncase EXACTLY_ONCE:        break;\ncase AT_LEAST_ONCE:case NONE:      currentTransaction.producer.flush();\n    currentTransaction.producer.close(Duration.ofSeconds(0));\n  break;\n}\n}\nsuper.close();\n}\n catch (Exception e) {\nasyncException=ExceptionUtils.firstOrSuppressed(e,asyncException);\n}\n finally {\nif (currentTransaction() != null) {\ntry {\ncurrentTransaction().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\npendingTransactions().forEach(transaction -> {\ntry {\ntransaction.getValue().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\n);\ncheckErroneous();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2212,
        "startLineNumber" : 929,
        "startColumnNumber" : 4,
        "endLineNumber" : 978,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void close() throws FlinkKafkaException {\n  try {\n    final KafkaTransactionState currentTransaction=currentTransaction();\n    if (currentTransaction != null) {\n      flush(currentTransaction);\nswitch (semantic) {\ncase EXACTLY_ONCE:        break;\ncase AT_LEAST_ONCE:case NONE:      currentTransaction.producer.flush();\n    currentTransaction.producer.close(Duration.ofSeconds(0));\n  break;\n}\n}\nsuper.close();\n}\n catch (Exception e) {\nasyncException=ExceptionUtils.firstOrSuppressed(e,asyncException);\n}\n finally {\nif (currentTransaction() != null) {\ntry {\ncurrentTransaction().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\npendingTransactions().forEach(transaction -> {\ntry {\ntransaction.getValue().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\n);\ncheckErroneous();\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 933,
        "startColumnNumber" : 12,
        "endLineNumber" : 933,
        "endColumnNumber" : 82
      },
      "nodeContext" : "final KafkaTransactionState currentTransaction=currentTransaction();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer.KafkaTransactionState"
  }, {
    "nodeContext" : "currentTransaction()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 958,
      "startColumnNumber" : 16,
      "endLineNumber" : 958,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 958,
        "startColumnNumber" : 16,
        "endLineNumber" : 958,
        "endColumnNumber" : 44
      },
      "nodeContext" : "currentTransaction() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 958,
        "startColumnNumber" : 12,
        "endLineNumber" : 964,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (currentTransaction() != null) {\n  try {\n    currentTransaction().producer.close(Duration.ofSeconds(0));\n  }\n catch (  Throwable t) {\n    LOG.warn(\"Error closing producer.\",t);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 1077,
        "startLineNumber" : 954,
        "startColumnNumber" : 18,
        "endLineNumber" : 977,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (currentTransaction() != null) {\n    try {\n      currentTransaction().producer.close(Duration.ofSeconds(0));\n    }\n catch (    Throwable t) {\n      LOG.warn(\"Error closing producer.\",t);\n    }\n  }\n  pendingTransactions().forEach(transaction -> {\n    try {\n      transaction.getValue().producer.close(Duration.ofSeconds(0));\n    }\n catch (    Throwable t) {\n      LOG.warn(\"Error closing producer.\",t);\n    }\n  }\n);\n  checkErroneous();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 932,
        "startColumnNumber" : 8,
        "endLineNumber" : 977,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  final KafkaTransactionState currentTransaction=currentTransaction();\n  if (currentTransaction != null) {\n    flush(currentTransaction);\nswitch (semantic) {\ncase EXACTLY_ONCE:      break;\ncase AT_LEAST_ONCE:case NONE:    currentTransaction.producer.flush();\n  currentTransaction.producer.close(Duration.ofSeconds(0));\nbreak;\n}\n}\nsuper.close();\n}\n catch (Exception e) {\nasyncException=ExceptionUtils.firstOrSuppressed(e,asyncException);\n}\n finally {\nif (currentTransaction() != null) {\ntry {\ncurrentTransaction().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\npendingTransactions().forEach(transaction -> {\ntry {\ntransaction.getValue().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\n);\ncheckErroneous();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 132,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2151,
        "startLineNumber" : 930,
        "startColumnNumber" : 51,
        "endLineNumber" : 978,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    final KafkaTransactionState currentTransaction=currentTransaction();\n    if (currentTransaction != null) {\n      flush(currentTransaction);\nswitch (semantic) {\ncase EXACTLY_ONCE:        break;\ncase AT_LEAST_ONCE:case NONE:      currentTransaction.producer.flush();\n    currentTransaction.producer.close(Duration.ofSeconds(0));\n  break;\n}\n}\nsuper.close();\n}\n catch (Exception e) {\nasyncException=ExceptionUtils.firstOrSuppressed(e,asyncException);\n}\n finally {\nif (currentTransaction() != null) {\ntry {\ncurrentTransaction().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\npendingTransactions().forEach(transaction -> {\ntry {\ntransaction.getValue().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\n);\ncheckErroneous();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2212,
        "startLineNumber" : 929,
        "startColumnNumber" : 4,
        "endLineNumber" : 978,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void close() throws FlinkKafkaException {\n  try {\n    final KafkaTransactionState currentTransaction=currentTransaction();\n    if (currentTransaction != null) {\n      flush(currentTransaction);\nswitch (semantic) {\ncase EXACTLY_ONCE:        break;\ncase AT_LEAST_ONCE:case NONE:      currentTransaction.producer.flush();\n    currentTransaction.producer.close(Duration.ofSeconds(0));\n  break;\n}\n}\nsuper.close();\n}\n catch (Exception e) {\nasyncException=ExceptionUtils.firstOrSuppressed(e,asyncException);\n}\n finally {\nif (currentTransaction() != null) {\ntry {\ncurrentTransaction().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\npendingTransactions().forEach(transaction -> {\ntry {\ntransaction.getValue().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\n);\ncheckErroneous();\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 958,
        "startColumnNumber" : 16,
        "endLineNumber" : 958,
        "endColumnNumber" : 44
      },
      "nodeContext" : "currentTransaction() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer.KafkaTransactionState"
  }, {
    "nodeContext" : "currentTransaction()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 960,
      "startColumnNumber" : 20,
      "endLineNumber" : 960,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 960,
        "startColumnNumber" : 20,
        "endLineNumber" : 960,
        "endColumnNumber" : 49
      },
      "nodeContext" : "currentTransaction().producer",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 960,
        "startColumnNumber" : 20,
        "endLineNumber" : 960,
        "endColumnNumber" : 78
      },
      "nodeContext" : "currentTransaction().producer.close(Duration.ofSeconds(0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 960,
        "startColumnNumber" : 20,
        "endLineNumber" : 960,
        "endColumnNumber" : 79
      },
      "nodeContext" : "currentTransaction().producer.close(Duration.ofSeconds(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 959,
        "startColumnNumber" : 20,
        "endLineNumber" : 961,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  currentTransaction().producer.close(Duration.ofSeconds(0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 959,
        "startColumnNumber" : 16,
        "endLineNumber" : 963,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  currentTransaction().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\n  LOG.warn(\"Error closing producer.\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 958,
        "startColumnNumber" : 46,
        "endLineNumber" : 964,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try {\n    currentTransaction().producer.close(Duration.ofSeconds(0));\n  }\n catch (  Throwable t) {\n    LOG.warn(\"Error closing producer.\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 958,
        "startColumnNumber" : 12,
        "endLineNumber" : 964,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (currentTransaction() != null) {\n  try {\n    currentTransaction().producer.close(Duration.ofSeconds(0));\n  }\n catch (  Throwable t) {\n    LOG.warn(\"Error closing producer.\",t);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 1077,
        "startLineNumber" : 954,
        "startColumnNumber" : 18,
        "endLineNumber" : 977,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (currentTransaction() != null) {\n    try {\n      currentTransaction().producer.close(Duration.ofSeconds(0));\n    }\n catch (    Throwable t) {\n      LOG.warn(\"Error closing producer.\",t);\n    }\n  }\n  pendingTransactions().forEach(transaction -> {\n    try {\n      transaction.getValue().producer.close(Duration.ofSeconds(0));\n    }\n catch (    Throwable t) {\n      LOG.warn(\"Error closing producer.\",t);\n    }\n  }\n);\n  checkErroneous();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 932,
        "startColumnNumber" : 8,
        "endLineNumber" : 977,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  final KafkaTransactionState currentTransaction=currentTransaction();\n  if (currentTransaction != null) {\n    flush(currentTransaction);\nswitch (semantic) {\ncase EXACTLY_ONCE:      break;\ncase AT_LEAST_ONCE:case NONE:    currentTransaction.producer.flush();\n  currentTransaction.producer.close(Duration.ofSeconds(0));\nbreak;\n}\n}\nsuper.close();\n}\n catch (Exception e) {\nasyncException=ExceptionUtils.firstOrSuppressed(e,asyncException);\n}\n finally {\nif (currentTransaction() != null) {\ntry {\ncurrentTransaction().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\npendingTransactions().forEach(transaction -> {\ntry {\ntransaction.getValue().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\n);\ncheckErroneous();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 132,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2151,
        "startLineNumber" : 930,
        "startColumnNumber" : 51,
        "endLineNumber" : 978,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    final KafkaTransactionState currentTransaction=currentTransaction();\n    if (currentTransaction != null) {\n      flush(currentTransaction);\nswitch (semantic) {\ncase EXACTLY_ONCE:        break;\ncase AT_LEAST_ONCE:case NONE:      currentTransaction.producer.flush();\n    currentTransaction.producer.close(Duration.ofSeconds(0));\n  break;\n}\n}\nsuper.close();\n}\n catch (Exception e) {\nasyncException=ExceptionUtils.firstOrSuppressed(e,asyncException);\n}\n finally {\nif (currentTransaction() != null) {\ntry {\ncurrentTransaction().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\npendingTransactions().forEach(transaction -> {\ntry {\ntransaction.getValue().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\n);\ncheckErroneous();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2212,
        "startLineNumber" : 929,
        "startColumnNumber" : 4,
        "endLineNumber" : 978,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void close() throws FlinkKafkaException {\n  try {\n    final KafkaTransactionState currentTransaction=currentTransaction();\n    if (currentTransaction != null) {\n      flush(currentTransaction);\nswitch (semantic) {\ncase EXACTLY_ONCE:        break;\ncase AT_LEAST_ONCE:case NONE:      currentTransaction.producer.flush();\n    currentTransaction.producer.close(Duration.ofSeconds(0));\n  break;\n}\n}\nsuper.close();\n}\n catch (Exception e) {\nasyncException=ExceptionUtils.firstOrSuppressed(e,asyncException);\n}\n finally {\nif (currentTransaction() != null) {\ntry {\ncurrentTransaction().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\npendingTransactions().forEach(transaction -> {\ntry {\ntransaction.getValue().producer.close(Duration.ofSeconds(0));\n}\n catch (Throwable t) {\nLOG.warn(\"Error closing producer.\",t);\n}\n}\n);\ncheckErroneous();\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 960,
        "startColumnNumber" : 20,
        "endLineNumber" : 960,
        "endColumnNumber" : 79
      },
      "nodeContext" : "currentTransaction().producer.close(Duration.ofSeconds(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer.KafkaTransactionState"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 933,
    "startColumnNumber" : 61,
    "endLineNumber" : 933,
    "endColumnNumber" : 81
  }, {
    "charLength" : 20,
    "startLineNumber" : 958,
    "startColumnNumber" : 16,
    "endLineNumber" : 958,
    "endColumnNumber" : 36
  }, {
    "charLength" : 20,
    "startLineNumber" : 960,
    "startColumnNumber" : 20,
    "endLineNumber" : 960,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  } ]
}