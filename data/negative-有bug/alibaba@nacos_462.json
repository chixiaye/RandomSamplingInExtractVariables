{
  "id" : 462,
  "expression" : "((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast()",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HealthCheckTask.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 89,
      "startLineNumber" : 101,
      "startColumnNumber" : 28,
      "endLineNumber" : 101,
      "endColumnNumber" : 117
    },
    "astNodeNumber" : 15,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 100,
        "startColumnNumber" : 25,
        "endLineNumber" : 101,
        "endColumnNumber" : 117
      },
      "nodeContext" : "diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 118
      },
      "nodeContext" : "long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 930,
        "startLineNumber" : 98,
        "startColumnNumber" : 85,
        "endLineNumber" : 113,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast();\n  this.setCheckRtLastLast(this.getCheckRtLast());\n  Cluster cluster=this.getCluster();\n  if (Loggers.CHECK_RT.isDebugEnabled()) {\n    Loggers.CHECK_RT.debug(\"{}:{}@{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",cluster.getService().getName(),cluster.getName(),cluster.getHealthChecker().getType(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1115,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 113,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (this.getCheckRtWorst() > 0 && switchDomain.isHealthCheckEnabled(cluster.getService().getName()) && distroMapper.responsible(cluster.getService().getName())) {\n  long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast();\n  this.setCheckRtLastLast(this.getCheckRtLast());\n  Cluster cluster=this.getCluster();\n  if (Loggers.CHECK_RT.isDebugEnabled()) {\n    Loggers.CHECK_RT.debug(\"{}:{}@{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",cluster.getService().getName(),cluster.getName(),cluster.getHealthChecker().getType(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 99,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1270,
        "startLineNumber" : 93,
        "startColumnNumber" : 28,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  HealthCheckReactor.scheduleCheck(this);\n  if (this.getCheckRtWorst() > 0 && switchDomain.isHealthCheckEnabled(cluster.getService().getName()) && distroMapper.responsible(cluster.getService().getName())) {\n    long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast();\n    this.setCheckRtLastLast(this.getCheckRtLast());\n    Cluster cluster=this.getCluster();\n    if (Loggers.CHECK_RT.isDebugEnabled()) {\n      Loggers.CHECK_RT.debug(\"{}:{}@{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",cluster.getService().getName(),cluster.getName(),cluster.getHealthChecker().getType(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1286,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!cancelled) {\n  HealthCheckReactor.scheduleCheck(this);\n  if (this.getCheckRtWorst() > 0 && switchDomain.isHealthCheckEnabled(cluster.getService().getName()) && distroMapper.responsible(cluster.getService().getName())) {\n    long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast();\n    this.setCheckRtLastLast(this.getCheckRtLast());\n    Cluster cluster=this.getCluster();\n    if (Loggers.CHECK_RT.isDebugEnabled()) {\n      Loggers.CHECK_RT.debug(\"{}:{}@{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",cluster.getService().getName(),cluster.getName(),cluster.getHealthChecker().getType(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 1310,
        "startLineNumber" : 92,
        "startColumnNumber" : 18,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!cancelled) {\n    HealthCheckReactor.scheduleCheck(this);\n    if (this.getCheckRtWorst() > 0 && switchDomain.isHealthCheckEnabled(cluster.getService().getName()) && distroMapper.responsible(cluster.getService().getName())) {\n      long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast();\n      this.setCheckRtLastLast(this.getCheckRtLast());\n      Cluster cluster=this.getCluster();\n      if (Loggers.CHECK_RT.isDebugEnabled()) {\n        Loggers.CHECK_RT.debug(\"{}:{}@{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",cluster.getService().getName(),cluster.getName(),cluster.getHealthChecker().getType(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2024,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (distroMapper.responsible(cluster.getService().getName()) && switchDomain.isHealthCheckEnabled(cluster.getService().getName())) {\n    healthCheckProcessor.process(this);\n    if (Loggers.EVT_LOG.isDebugEnabled()) {\n      Loggers.EVT_LOG.debug(\"[HEALTH-CHECK] schedule health check task: {}\",cluster.getService().getName());\n    }\n  }\n}\n catch (Throwable e) {\n  Loggers.SRV_LOG.error(\"[HEALTH-CHECK] error while process health check for {}:{}\",cluster.getService().getName(),cluster.getName(),e);\n}\n finally {\n  if (!cancelled) {\n    HealthCheckReactor.scheduleCheck(this);\n    if (this.getCheckRtWorst() > 0 && switchDomain.isHealthCheckEnabled(cluster.getService().getName()) && distroMapper.responsible(cluster.getService().getName())) {\n      long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast();\n      this.setCheckRtLastLast(this.getCheckRtLast());\n      Cluster cluster=this.getCluster();\n      if (Loggers.CHECK_RT.isDebugEnabled()) {\n        Loggers.CHECK_RT.debug(\"{}:{}@{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",cluster.getService().getName(),cluster.getName(),cluster.getHealthChecker().getType(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n      }\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 176,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2049,
        "startLineNumber" : 77,
        "startColumnNumber" : 22,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (distroMapper.responsible(cluster.getService().getName()) && switchDomain.isHealthCheckEnabled(cluster.getService().getName())) {\n      healthCheckProcessor.process(this);\n      if (Loggers.EVT_LOG.isDebugEnabled()) {\n        Loggers.EVT_LOG.debug(\"[HEALTH-CHECK] schedule health check task: {}\",cluster.getService().getName());\n      }\n    }\n  }\n catch (  Throwable e) {\n    Loggers.SRV_LOG.error(\"[HEALTH-CHECK] error while process health check for {}:{}\",cluster.getService().getName(),cluster.getName(),e);\n  }\n finally {\n    if (!cancelled) {\n      HealthCheckReactor.scheduleCheck(this);\n      if (this.getCheckRtWorst() > 0 && switchDomain.isHealthCheckEnabled(cluster.getService().getName()) && distroMapper.responsible(cluster.getService().getName())) {\n        long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast();\n        this.setCheckRtLastLast(this.getCheckRtLast());\n        Cluster cluster=this.getCluster();\n        if (Loggers.CHECK_RT.isDebugEnabled()) {\n          Loggers.CHECK_RT.debug(\"{}:{}@{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",cluster.getService().getName(),cluster.getName(),cluster.getHealthChecker().getType(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2081,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void run(){\n  try {\n    if (distroMapper.responsible(cluster.getService().getName()) && switchDomain.isHealthCheckEnabled(cluster.getService().getName())) {\n      healthCheckProcessor.process(this);\n      if (Loggers.EVT_LOG.isDebugEnabled()) {\n        Loggers.EVT_LOG.debug(\"[HEALTH-CHECK] schedule health check task: {}\",cluster.getService().getName());\n      }\n    }\n  }\n catch (  Throwable e) {\n    Loggers.SRV_LOG.error(\"[HEALTH-CHECK] error while process health check for {}:{}\",cluster.getService().getName(),cluster.getName(),e);\n  }\n finally {\n    if (!cancelled) {\n      HealthCheckReactor.scheduleCheck(this);\n      if (this.getCheckRtWorst() > 0 && switchDomain.isHealthCheckEnabled(cluster.getService().getName()) && distroMapper.responsible(cluster.getService().getName())) {\n        long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast();\n        this.setCheckRtLastLast(this.getCheckRtLast());\n        Cluster cluster=this.getCluster();\n        if (Loggers.CHECK_RT.isDebugEnabled()) {\n          Loggers.CHECK_RT.debug(\"{}:{}@{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",cluster.getService().getName(),cluster.getName(),cluster.getHealthChecker().getType(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 100,
        "startColumnNumber" : 25,
        "endLineNumber" : 101,
        "endColumnNumber" : 117
      },
      "nodeContext" : "diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / this.getCheckRtLastLast()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 8
    },
    "tokenLength" : 7,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 89,
    "startLineNumber" : 101,
    "startColumnNumber" : 28,
    "endLineNumber" : 101,
    "endColumnNumber" : 117
  } ],
  "layoutRelationDataList" : [ ]
}