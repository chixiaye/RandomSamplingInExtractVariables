{
  "id" : 89,
  "expression" : "(InetSocketAddress)socketAddress",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/proxy/src/main/java/org/apache/rocketmq/proxy/grpc/interceptor/HeaderInterceptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(InetSocketAddress)socketAddress",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 48,
      "startColumnNumber" : 50,
      "endLineNumber" : 48,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 48,
        "startColumnNumber" : 30,
        "endLineNumber" : 48,
        "endColumnNumber" : 83
      },
      "nodeContext" : "inetSocketAddress=(InetSocketAddress)socketAddress",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 84
      },
      "nodeContext" : "InetSocketAddress inetSocketAddress=(InetSocketAddress)socketAddress;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 47,
        "startColumnNumber" : 56,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  InetSocketAddress inetSocketAddress=(InetSocketAddress)socketAddress;\n  return HostAndPort.fromParts(inetSocketAddress.getAddress().getHostAddress(),inetSocketAddress.getPort()).toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (socketAddress instanceof InetSocketAddress) {\n  InetSocketAddress inetSocketAddress=(InetSocketAddress)socketAddress;\n  return HostAndPort.fromParts(inetSocketAddress.getAddress().getHostAddress(),inetSocketAddress.getPort()).toString();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 46,
        "startColumnNumber" : 67,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (socketAddress instanceof InetSocketAddress) {\n    InetSocketAddress inetSocketAddress=(InetSocketAddress)socketAddress;\n    return HostAndPort.fromParts(inetSocketAddress.getAddress().getHostAddress(),inetSocketAddress.getPort()).toString();\n  }\n  return \"\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private String parseSocketAddress(SocketAddress socketAddress){\n  if (socketAddress instanceof InetSocketAddress) {\n    InetSocketAddress inetSocketAddress=(InetSocketAddress)socketAddress;\n    return HostAndPort.fromParts(inetSocketAddress.getAddress().getHostAddress(),inetSocketAddress.getPort()).toString();\n  }\n  return \"\";\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 41,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 84
      },
      "nodeContext" : "InetSocketAddress inetSocketAddress=(InetSocketAddress)socketAddress;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.net.InetSocketAddress"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 48,
    "startColumnNumber" : 50,
    "endLineNumber" : 48,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}