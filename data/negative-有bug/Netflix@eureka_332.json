{
  "id" : 332,
  "expression" : "format(\"This is integration test and requires that system property %s is set\",KafkaAuditConfig.KAFKA_SERVERS_KEY)",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-contrib/eureka-kafka/src/test/java/com/netflix/eureka2/server/audit/kafka/KafkaAuditServiceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "format(\"This is integration test and requires that system property %s is set\",KafkaAuditConfig.KAFKA_SERVERS_KEY)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 114,
      "startLineNumber" : 48,
      "startColumnNumber" : 17,
      "endLineNumber" : 48,
      "endColumnNumber" : 131
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 132
      },
      "nodeContext" : "fail(format(\"This is integration test and requires that system property %s is set\",KafkaAuditConfig.KAFKA_SERVERS_KEY))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 133
      },
      "nodeContext" : "fail(format(\"This is integration test and requires that system property %s is set\",KafkaAuditConfig.KAFKA_SERVERS_KEY));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 47,
        "startColumnNumber" : 40,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  fail(format(\"This is integration test and requires that system property %s is set\",KafkaAuditConfig.KAFKA_SERVERS_KEY));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (kafkaPropertyValue == null) {\n  fail(format(\"This is integration test and requires that system property %s is set\",KafkaAuditConfig.KAFKA_SERVERS_KEY));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1099,
        "startLineNumber" : 41,
        "startColumnNumber" : 53,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExtensionContext context=new ExtensionContextBuilder().withEurekaClusterName(\"eureka2-test\").build();\n  String kafkaPropertyValue=System.getProperty(KafkaAuditConfig.KAFKA_SERVERS_KEY);\n  if (kafkaPropertyValue == null) {\n    fail(format(\"This is integration test and requires that system property %s is set\",KafkaAuditConfig.KAFKA_SERVERS_KEY));\n  }\n  String kafkaTopic=System.getProperty(KafkaAuditConfig.KAFKA_TOPIC_KEY);\n  if (kafkaTopic == null) {\n    fail(format(\"This is integration test and requires that system property %s is set\",KafkaAuditConfig.KAFKA_TOPIC_KEY));\n  }\n  KafkaAuditConfig config=new KafkaAuditConfig(kafkaPropertyValue,null,-1,kafkaTopic,KafkaAuditConfig.DEFAULT_RETRY_INTERVAL_MS,KafkaAuditConfig.DEFAULT_MAX_QUEUE_SIZE);\n  KafkaServersProvider kafkaServersProvider=new KafkaServersProvider(context,config);\n  auditService=new KafkaAuditService(context,config,kafkaServersProvider);\n  auditService.start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1148,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setUpAuditService() throws Exception {\n  ExtensionContext context=new ExtensionContextBuilder().withEurekaClusterName(\"eureka2-test\").build();\n  String kafkaPropertyValue=System.getProperty(KafkaAuditConfig.KAFKA_SERVERS_KEY);\n  if (kafkaPropertyValue == null) {\n    fail(format(\"This is integration test and requires that system property %s is set\",KafkaAuditConfig.KAFKA_SERVERS_KEY));\n  }\n  String kafkaTopic=System.getProperty(KafkaAuditConfig.KAFKA_TOPIC_KEY);\n  if (kafkaTopic == null) {\n    fail(format(\"This is integration test and requires that system property %s is set\",KafkaAuditConfig.KAFKA_TOPIC_KEY));\n  }\n  KafkaAuditConfig config=new KafkaAuditConfig(kafkaPropertyValue,null,-1,kafkaTopic,KafkaAuditConfig.DEFAULT_RETRY_INTERVAL_MS,KafkaAuditConfig.DEFAULT_MAX_QUEUE_SIZE);\n  KafkaServersProvider kafkaServersProvider=new KafkaServersProvider(context,config);\n  auditService=new KafkaAuditService(context,config,kafkaServersProvider);\n  auditService.start();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 133
      },
      "nodeContext" : "fail(format(\"This is integration test and requires that system property %s is set\",KafkaAuditConfig.KAFKA_SERVERS_KEY));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 17,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 114,
    "startLineNumber" : 48,
    "startColumnNumber" : 17,
    "endLineNumber" : 48,
    "endColumnNumber" : 131
  } ],
  "layoutRelationDataList" : [ ]
}