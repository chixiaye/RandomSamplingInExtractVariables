{
  "id" : 227,
  "expression" : "true",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/flowable/FlowableOnErrorReturn.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 83,
      "startColumnNumber" : 19,
      "endLineNumber" : 83,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 23
      },
      "nodeContext" : "done=true",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 24
      },
      "nodeContext" : "done=true;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1720,
        "startLineNumber" : 82,
        "startColumnNumber" : 41,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  done=true;\n  T v;\n  try {\n    v=valueSupplier.apply(t);\n  }\n catch (  Throwable e) {\n    state.lazySet(HAS_REQUEST_HAS_VALUE);\n    actual.onError(new CompositeException(e,t));\n    return;\n  }\n  if (v == null) {\n    state.lazySet(HAS_REQUEST_HAS_VALUE);\n    NullPointerException npe=new NullPointerException(\"The supplied value is null\");\n    npe.initCause(t);\n    actual.onError(npe);\n    return;\n  }\n  if (get() != 0L) {\n    state.lazySet(HAS_REQUEST_HAS_VALUE);\n    actual.onNext(v);\n    actual.onComplete();\n  }\n else {\n    for (; ; ) {\n      int s=state.get();\n      if (s == HAS_REQUEST_NO_VALUE) {\n        if (state.compareAndSet(s,HAS_REQUEST_HAS_VALUE)) {\n          actual.onNext(v);\n          actual.onComplete();\n          return;\n        }\n      }\n else       if (s == NO_REQUEST_HAS_VALUE) {\n        return;\n      }\n else       if (s == HAS_REQUEST_HAS_VALUE) {\n        value=null;\n        return;\n      }\n else {\n        value=v;\n        if (state.compareAndSet(s,NO_REQUEST_HAS_VALUE)) {\n          return;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1772,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void onError(Throwable t){\n  done=true;\n  T v;\n  try {\n    v=valueSupplier.apply(t);\n  }\n catch (  Throwable e) {\n    state.lazySet(HAS_REQUEST_HAS_VALUE);\n    actual.onError(new CompositeException(e,t));\n    return;\n  }\n  if (v == null) {\n    state.lazySet(HAS_REQUEST_HAS_VALUE);\n    NullPointerException npe=new NullPointerException(\"The supplied value is null\");\n    npe.initCause(t);\n    actual.onError(npe);\n    return;\n  }\n  if (get() != 0L) {\n    state.lazySet(HAS_REQUEST_HAS_VALUE);\n    actual.onNext(v);\n    actual.onComplete();\n  }\n else {\n    for (; ; ) {\n      int s=state.get();\n      if (s == HAS_REQUEST_NO_VALUE) {\n        if (state.compareAndSet(s,HAS_REQUEST_HAS_VALUE)) {\n          actual.onNext(v);\n          actual.onComplete();\n          return;\n        }\n      }\n else       if (s == NO_REQUEST_HAS_VALUE) {\n        return;\n      }\n else       if (s == HAS_REQUEST_HAS_VALUE) {\n        value=null;\n        return;\n      }\n else {\n        value=v;\n        if (state.compareAndSet(s,NO_REQUEST_HAS_VALUE)) {\n          return;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 24
      },
      "nodeContext" : "done=true;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 83,
    "startColumnNumber" : 19,
    "endLineNumber" : 83,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}