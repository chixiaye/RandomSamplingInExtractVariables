{
  "id" : 514,
  "expression" : "System",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/main/java/org/redisson/executor/ScheduledTasksService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 58,
      "startColumnNumber" : 25,
      "endLineNumber" : 58,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 58,
        "startColumnNumber" : 25,
        "endLineNumber" : 58,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.currentTimeMillis()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 58,
        "startColumnNumber" : 25,
        "endLineNumber" : 58,
        "endColumnNumber" : 69
      },
      "nodeContext" : "System.currentTimeMillis() + params.getTtl()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 69
      },
      "nodeContext" : "expireTime=System.currentTimeMillis() + params.getTtl()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 70
      },
      "nodeContext" : "expireTime=System.currentTimeMillis() + params.getTtl();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 57,
        "startColumnNumber" : 33,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  expireTime=System.currentTimeMillis() + params.getTtl();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (params.getTtl() > 0) {\n  expireTime=System.currentTimeMillis() + params.getTtl();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2213,
        "startLineNumber" : 52,
        "startColumnNumber" : 95,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ScheduledParameters params=(ScheduledParameters)request.getArgs()[0];\n  params.setRequestId(request.getId());\n  long expireTime=0;\n  if (params.getTtl() > 0) {\n    expireTime=System.currentTimeMillis() + params.getTtl();\n  }\n  return commandExecutor.evalWriteAsync(name,LongCodec.INSTANCE,RedisCommands.EVAL_BOOLEAN,\"if redis.call('exists', KEYS[2]) == 0 then \" + \"local retryInterval = redis.call('get', KEYS[6]); \" + \"if retryInterval ~= false then \"+ \"local time = tonumber(ARGV[1]) + tonumber(retryInterval);\"+ \"redis.call('zadd', KEYS[3], time, 'ff' .. ARGV[2]);\"+ \"elseif tonumber(ARGV[4]) > 0 then \"+ \"redis.call('set', KEYS[6], ARGV[4]);\"+ \"local time = tonumber(ARGV[1]) + tonumber(ARGV[4]);\"+ \"redis.call('zadd', KEYS[3], time, 'ff' .. ARGV[2]);\"+ \"end; \"+ \"if tonumber(ARGV[5]) > 0 then \"+ \"redis.call('zadd', KEYS[7], ARGV[5], ARGV[2]);\"+ \"end; \"+ \"redis.call('zadd', KEYS[3], ARGV[1], ARGV[2]);\"+ \"redis.call('hset', KEYS[5], ARGV[2], ARGV[3]);\"+ \"redis.call('incr', KEYS[1]);\"+ \"local v = redis.call('zrange', KEYS[3], 0, 0); \"+ \"if v[1] == ARGV[2] then \"+ \"redis.call('publish', KEYS[4], ARGV[1]); \"+ \"end \"+ \"return 1;\"+ \"end;\"+ \"return 0;\",Arrays.asList(tasksCounterName,statusName,schedulerQueueName,schedulerChannelName,tasksName,tasksRetryIntervalName,tasksExpirationTimeName),params.getStartTime(),request.getId(),encode(request),tasksRetryInterval,expireTime);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2318,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected RFuture<Boolean> addAsync(String requestQueueName,RemoteServiceRequest request){\n  ScheduledParameters params=(ScheduledParameters)request.getArgs()[0];\n  params.setRequestId(request.getId());\n  long expireTime=0;\n  if (params.getTtl() > 0) {\n    expireTime=System.currentTimeMillis() + params.getTtl();\n  }\n  return commandExecutor.evalWriteAsync(name,LongCodec.INSTANCE,RedisCommands.EVAL_BOOLEAN,\"if redis.call('exists', KEYS[2]) == 0 then \" + \"local retryInterval = redis.call('get', KEYS[6]); \" + \"if retryInterval ~= false then \"+ \"local time = tonumber(ARGV[1]) + tonumber(retryInterval);\"+ \"redis.call('zadd', KEYS[3], time, 'ff' .. ARGV[2]);\"+ \"elseif tonumber(ARGV[4]) > 0 then \"+ \"redis.call('set', KEYS[6], ARGV[4]);\"+ \"local time = tonumber(ARGV[1]) + tonumber(ARGV[4]);\"+ \"redis.call('zadd', KEYS[3], time, 'ff' .. ARGV[2]);\"+ \"end; \"+ \"if tonumber(ARGV[5]) > 0 then \"+ \"redis.call('zadd', KEYS[7], ARGV[5], ARGV[2]);\"+ \"end; \"+ \"redis.call('zadd', KEYS[3], ARGV[1], ARGV[2]);\"+ \"redis.call('hset', KEYS[5], ARGV[2], ARGV[3]);\"+ \"redis.call('incr', KEYS[1]);\"+ \"local v = redis.call('zrange', KEYS[3], 0, 0); \"+ \"if v[1] == ARGV[2] then \"+ \"redis.call('publish', KEYS[4], ARGV[1]); \"+ \"end \"+ \"return 1;\"+ \"end;\"+ \"return 0;\",Arrays.asList(tasksCounterName,statusName,schedulerQueueName,schedulerChannelName,tasksName,tasksRetryIntervalName,tasksExpirationTimeName),params.getStartTime(),request.getId(),encode(request),tasksRetryInterval,expireTime);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 70
      },
      "nodeContext" : "expireTime=System.currentTimeMillis() + params.getTtl();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 58,
    "startColumnNumber" : 25,
    "endLineNumber" : 58,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}