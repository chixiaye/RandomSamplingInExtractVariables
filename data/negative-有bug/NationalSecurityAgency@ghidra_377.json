{
  "id" : 377,
  "expression" : "\"dr3\"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/threadcommand/DebugStateX86_64.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"dr3\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 53,
      "startColumnNumber" : 20,
      "endLineNumber" : 53,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 32
      },
      "nodeContext" : "struct.add(QWORD,\"dr3\",null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 33
      },
      "nodeContext" : "struct.add(QWORD,\"dr3\",null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 459,
        "startLineNumber" : 48,
        "startColumnNumber" : 73,
        "endLineNumber" : 60,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  StructureDataType struct=new StructureDataType(\"x86_debug_state64\",0);\n  struct.add(QWORD,\"dr0\",null);\n  struct.add(QWORD,\"dr1\",null);\n  struct.add(QWORD,\"dr2\",null);\n  struct.add(QWORD,\"dr3\",null);\n  struct.add(QWORD,\"dr4\",null);\n  struct.add(QWORD,\"dr5\",null);\n  struct.add(QWORD,\"dr6\",null);\n  struct.add(QWORD,\"dr7\",null);\n  struct.setCategoryPath(new CategoryPath(MachConstants.DATA_TYPE_CATEGORY));\n  return struct;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 60,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public DataType toDataType() throws DuplicateNameException, IOException {\n  StructureDataType struct=new StructureDataType(\"x86_debug_state64\",0);\n  struct.add(QWORD,\"dr0\",null);\n  struct.add(QWORD,\"dr1\",null);\n  struct.add(QWORD,\"dr2\",null);\n  struct.add(QWORD,\"dr3\",null);\n  struct.add(QWORD,\"dr4\",null);\n  struct.add(QWORD,\"dr5\",null);\n  struct.add(QWORD,\"dr6\",null);\n  struct.add(QWORD,\"dr7\",null);\n  struct.setCategoryPath(new CategoryPath(MachConstants.DATA_TYPE_CATEGORY));\n  return struct;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 33
      },
      "nodeContext" : "struct.add(QWORD,\"dr3\",null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 53,
    "startColumnNumber" : 20,
    "endLineNumber" : 53,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}