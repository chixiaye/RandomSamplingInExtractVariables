{
  "id" : 307,
  "expression" : "1",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/tools/src/main/java/com/navercorp/pinpoint/tools/NetworkAvailabilityChecker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 44,
      "startColumnNumber" : 27,
      "endLineNumber" : 44,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 28
      },
      "nodeContext" : "args.length != 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (args.length != 1) {\n  System.out.println(\"usage : \" + NetworkAvailabilityChecker.class.getSimpleName() + \" AGENT_CONFIG_FILE\");\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 43,
        "startColumnNumber" : 43,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (args.length != 1) {\n    System.out.println(\"usage : \" + NetworkAvailabilityChecker.class.getSimpleName() + \" AGENT_CONFIG_FILE\");\n    return;\n  }\n  String configPath=args[0];\n  ProfilerConfig profilerConfig=null;\n  try {\n    profilerConfig=DefaultProfilerConfig.load(configPath);\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n    return;\n  }\n  try {\n    checkUDPStat(profilerConfig);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  try {\n    checkUDPSpan(profilerConfig);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  try {\n    checkTCP(profilerConfig);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  if (args.length != 1) {\n    System.out.println(\"usage : \" + NetworkAvailabilityChecker.class.getSimpleName() + \" AGENT_CONFIG_FILE\");\n    return;\n  }\n  String configPath=args[0];\n  ProfilerConfig profilerConfig=null;\n  try {\n    profilerConfig=DefaultProfilerConfig.load(configPath);\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n    return;\n  }\n  try {\n    checkUDPStat(profilerConfig);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  try {\n    checkUDPSpan(profilerConfig);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  try {\n    checkTCP(profilerConfig);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 28
      },
      "nodeContext" : "args.length != 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 44,
    "startColumnNumber" : 27,
    "endLineNumber" : 44,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}