{
  "id" : 42,
  "expression" : "originName",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
  "occurrences" : 15,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 106,
      "startColumnNumber" : 59,
      "endLineNumber" : 106,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 106,
        "startColumnNumber" : 30,
        "endLineNumber" : 106,
        "endColumnNumber" : 89
      },
      "nodeContext" : "new ConnectionPoolConfigImpl(originName,this.clientConfig)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 89
      },
      "nodeContext" : "this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 90
      },
      "nodeContext" : "this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 90
      },
      "nodeContext" : "this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 108,
      "startColumnNumber" : 89,
      "endLineNumber" : 108,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 108,
        "startColumnNumber" : 36,
        "endLineNumber" : 108,
        "endColumnNumber" : 100
      },
      "nodeContext" : "SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 100
      },
      "nodeContext" : "this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 101
      },
      "nodeContext" : "this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 101
      },
      "nodeContext" : "this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 109,
      "startColumnNumber" : 103,
      "endLineNumber" : 109,
      "endColumnNumber" : 113
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 109,
        "startColumnNumber" : 42,
        "endLineNumber" : 109,
        "endColumnNumber" : 114
      },
      "nodeContext" : "SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 114
      },
      "nodeContext" : "this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 115
      },
      "nodeContext" : "this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 115
      },
      "nodeContext" : "this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 110,
      "startColumnNumber" : 97,
      "endLineNumber" : 110,
      "endColumnNumber" : 107
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 110,
        "startColumnNumber" : 39,
        "endLineNumber" : 110,
        "endColumnNumber" : 108
      },
      "nodeContext" : "SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 108
      },
      "nodeContext" : "this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 109
      },
      "nodeContext" : "this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 109
      },
      "nodeContext" : "this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 112,
      "startColumnNumber" : 84,
      "endLineNumber" : 112,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 112,
        "startColumnNumber" : 32,
        "endLineNumber" : 112,
        "endColumnNumber" : 95
      },
      "nodeContext" : "SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 95
      },
      "nodeContext" : "this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 96
      },
      "nodeContext" : "this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 96
      },
      "nodeContext" : "this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 113,
      "startColumnNumber" : 88,
      "endLineNumber" : 113,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 113,
        "startColumnNumber" : 34,
        "endLineNumber" : 113,
        "endColumnNumber" : 99
      },
      "nodeContext" : "SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 99
      },
      "nodeContext" : "this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 100
      },
      "nodeContext" : "this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 100
      },
      "nodeContext" : "this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 114,
      "startColumnNumber" : 84,
      "endLineNumber" : 114,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 114,
        "startColumnNumber" : 32,
        "endLineNumber" : 114,
        "endColumnNumber" : 95
      },
      "nodeContext" : "SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 95
      },
      "nodeContext" : "this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 96
      },
      "nodeContext" : "this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 96
      },
      "nodeContext" : "this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 115,
      "startColumnNumber" : 88,
      "endLineNumber" : 115,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 115,
        "startColumnNumber" : 34,
        "endLineNumber" : 115,
        "endColumnNumber" : 99
      },
      "nodeContext" : "SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 99
      },
      "nodeContext" : "this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 100
      },
      "nodeContext" : "this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 100
      },
      "nodeContext" : "this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 116,
      "startColumnNumber" : 96,
      "endLineNumber" : 116,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 116,
        "startColumnNumber" : 36,
        "endLineNumber" : 116,
        "endColumnNumber" : 107
      },
      "nodeContext" : "SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 107
      },
      "nodeContext" : "this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 108
      },
      "nodeContext" : "this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 108
      },
      "nodeContext" : "this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 117,
      "startColumnNumber" : 105,
      "endLineNumber" : 117,
      "endColumnNumber" : 115
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 117,
        "startColumnNumber" : 42,
        "endLineNumber" : 117,
        "endColumnNumber" : 116
      },
      "nodeContext" : "SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 116
      },
      "nodeContext" : "this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 117
      },
      "nodeContext" : "this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 117
      },
      "nodeContext" : "this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 118,
      "startColumnNumber" : 116,
      "endLineNumber" : 118,
      "endColumnNumber" : 126
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 118,
        "startColumnNumber" : 46,
        "endLineNumber" : 118,
        "endColumnNumber" : 127
      },
      "nodeContext" : "SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 127
      },
      "nodeContext" : "this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 128
      },
      "nodeContext" : "this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 128
      },
      "nodeContext" : "this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 119,
      "startColumnNumber" : 109,
      "endLineNumber" : 119,
      "endColumnNumber" : 119
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 119,
        "startColumnNumber" : 39,
        "endLineNumber" : 119,
        "endColumnNumber" : 120
      },
      "nodeContext" : "SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 120
      },
      "nodeContext" : "this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 121
      },
      "nodeContext" : "this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 121
      },
      "nodeContext" : "this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 120,
      "startColumnNumber" : 139,
      "endLineNumber" : 120,
      "endColumnNumber" : 149
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 120,
        "startColumnNumber" : 73,
        "endLineNumber" : 120,
        "endColumnNumber" : 150
      },
      "nodeContext" : "spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 120,
        "startColumnNumber" : 34,
        "endLineNumber" : 120,
        "endColumnNumber" : 151
      },
      "nodeContext" : "PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 151
      },
      "nodeContext" : "this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 152
      },
      "nodeContext" : "this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 152
      },
      "nodeContext" : "this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 121,
      "startColumnNumber" : 78,
      "endLineNumber" : 121,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 121,
        "startColumnNumber" : 27,
        "endLineNumber" : 121,
        "endColumnNumber" : 110
      },
      "nodeContext" : "SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 110
      },
      "nodeContext" : "this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 111
      },
      "nodeContext" : "this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 111
      },
      "nodeContext" : "this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 122,
      "startColumnNumber" : 76,
      "endLineNumber" : 122,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 122,
        "startColumnNumber" : 26,
        "endLineNumber" : 122,
        "endColumnNumber" : 108
      },
      "nodeContext" : "SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 108
      },
      "nodeContext" : "this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 109
      },
      "nodeContext" : "this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 109
      },
      "nodeContext" : "this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 106,
    "startColumnNumber" : 59,
    "endLineNumber" : 106,
    "endColumnNumber" : 69
  }, {
    "charLength" : 10,
    "startLineNumber" : 108,
    "startColumnNumber" : 89,
    "endLineNumber" : 108,
    "endColumnNumber" : 99
  }, {
    "charLength" : 10,
    "startLineNumber" : 109,
    "startColumnNumber" : 103,
    "endLineNumber" : 109,
    "endColumnNumber" : 113
  }, {
    "charLength" : 10,
    "startLineNumber" : 110,
    "startColumnNumber" : 97,
    "endLineNumber" : 110,
    "endColumnNumber" : 107
  }, {
    "charLength" : 10,
    "startLineNumber" : 112,
    "startColumnNumber" : 84,
    "endLineNumber" : 112,
    "endColumnNumber" : 94
  }, {
    "charLength" : 10,
    "startLineNumber" : 113,
    "startColumnNumber" : 88,
    "endLineNumber" : 113,
    "endColumnNumber" : 98
  }, {
    "charLength" : 10,
    "startLineNumber" : 114,
    "startColumnNumber" : 84,
    "endLineNumber" : 114,
    "endColumnNumber" : 94
  }, {
    "charLength" : 10,
    "startLineNumber" : 115,
    "startColumnNumber" : 88,
    "endLineNumber" : 115,
    "endColumnNumber" : 98
  }, {
    "charLength" : 10,
    "startLineNumber" : 116,
    "startColumnNumber" : 96,
    "endLineNumber" : 116,
    "endColumnNumber" : 106
  }, {
    "charLength" : 10,
    "startLineNumber" : 117,
    "startColumnNumber" : 105,
    "endLineNumber" : 117,
    "endColumnNumber" : 115
  }, {
    "charLength" : 10,
    "startLineNumber" : 118,
    "startColumnNumber" : 116,
    "endLineNumber" : 118,
    "endColumnNumber" : 126
  }, {
    "charLength" : 10,
    "startLineNumber" : 119,
    "startColumnNumber" : 109,
    "endLineNumber" : 119,
    "endColumnNumber" : 119
  }, {
    "charLength" : 10,
    "startLineNumber" : 120,
    "startColumnNumber" : 139,
    "endLineNumber" : 120,
    "endColumnNumber" : 149
  }, {
    "charLength" : 10,
    "startLineNumber" : 121,
    "startColumnNumber" : 78,
    "endLineNumber" : 121,
    "endColumnNumber" : 88
  }, {
    "charLength" : 10,
    "startLineNumber" : 122,
    "startColumnNumber" : 76,
    "endLineNumber" : 122,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 3
  } ]
}