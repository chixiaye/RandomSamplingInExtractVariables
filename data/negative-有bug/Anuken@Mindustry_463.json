{
  "id" : 463,
  "expression" : "Short",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/io/SaveFileReader.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Short",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 105,
      "startColumnNumber" : 24,
      "endLineNumber" : 105,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 105,
        "startColumnNumber" : 24,
        "endLineNumber" : 105,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Short.MAX_VALUE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 105,
        "startColumnNumber" : 15,
        "endLineNumber" : 105,
        "endColumnNumber" : 39
      },
      "nodeContext" : "length > Short.MAX_VALUE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (length > Short.MAX_VALUE) {\n  throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 104,
        "startColumnNumber" : 13,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (length > Short.MAX_VALUE) {\n    throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n  }\n  output.writeShort(length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!isByte) {\n  output.writeInt(length);\n}\n else {\n  if (length > Short.MAX_VALUE) {\n    throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n  }\n  output.writeShort(length);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 670,
        "startLineNumber" : 94,
        "startColumnNumber" : 109,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ReusableByteOutStream dout=isByte ? byteOutputSmall : byteOutput;\n  dout.reset();\n  runner.accept(isByte ? dataBytesSmall : dataBytes);\n  int length=dout.size();\n  if (!isByte) {\n    output.writeInt(length);\n  }\n else {\n    if (length > Short.MAX_VALUE) {\n      throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n    }\n    output.writeShort(length);\n  }\n  output.write(dout.getBytes(),0,length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 890,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Write a chunk of input to the stream. An integer of some length is written first, followed by the data. \n */\npublic void writeChunk(DataOutput output,boolean isByte,IORunner<DataOutput> runner) throws IOException {\n  ReusableByteOutStream dout=isByte ? byteOutputSmall : byteOutput;\n  dout.reset();\n  runner.accept(isByte ? dataBytesSmall : dataBytes);\n  int length=dout.size();\n  if (!isByte) {\n    output.writeInt(length);\n  }\n else {\n    if (length > Short.MAX_VALUE) {\n      throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n    }\n    output.writeShort(length);\n  }\n  output.write(dout.getBytes(),0,length);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 105,
        "startColumnNumber" : 15,
        "endLineNumber" : 105,
        "endColumnNumber" : 39
      },
      "nodeContext" : "length > Short.MAX_VALUE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Short"
  }, {
    "nodeContext" : "Short",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 106,
      "startColumnNumber" : 88,
      "endLineNumber" : 106,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 106,
        "startColumnNumber" : 88,
        "endLineNumber" : 106,
        "endColumnNumber" : 103
      },
      "nodeContext" : "Short.MAX_VALUE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 106,
        "startColumnNumber" : 38,
        "endLineNumber" : 106,
        "endColumnNumber" : 103
      },
      "nodeContext" : "\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 106,
        "startColumnNumber" : 22,
        "endLineNumber" : 106,
        "endColumnNumber" : 104
      },
      "nodeContext" : "new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 105
      },
      "nodeContext" : "throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 105,
        "startColumnNumber" : 40,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (length > Short.MAX_VALUE) {\n  throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 104,
        "startColumnNumber" : 13,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (length > Short.MAX_VALUE) {\n    throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n  }\n  output.writeShort(length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!isByte) {\n  output.writeInt(length);\n}\n else {\n  if (length > Short.MAX_VALUE) {\n    throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n  }\n  output.writeShort(length);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 670,
        "startLineNumber" : 94,
        "startColumnNumber" : 109,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ReusableByteOutStream dout=isByte ? byteOutputSmall : byteOutput;\n  dout.reset();\n  runner.accept(isByte ? dataBytesSmall : dataBytes);\n  int length=dout.size();\n  if (!isByte) {\n    output.writeInt(length);\n  }\n else {\n    if (length > Short.MAX_VALUE) {\n      throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n    }\n    output.writeShort(length);\n  }\n  output.write(dout.getBytes(),0,length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 890,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Write a chunk of input to the stream. An integer of some length is written first, followed by the data. \n */\npublic void writeChunk(DataOutput output,boolean isByte,IORunner<DataOutput> runner) throws IOException {\n  ReusableByteOutStream dout=isByte ? byteOutputSmall : byteOutput;\n  dout.reset();\n  runner.accept(isByte ? dataBytesSmall : dataBytes);\n  int length=dout.size();\n  if (!isByte) {\n    output.writeInt(length);\n  }\n else {\n    if (length > Short.MAX_VALUE) {\n      throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n    }\n    output.writeShort(length);\n  }\n  output.write(dout.getBytes(),0,length);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 105
      },
      "nodeContext" : "throw new IOException(\"Byte write length exceeded: \" + length + \" > \"+ Short.MAX_VALUE);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Short"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 105,
    "startColumnNumber" : 24,
    "endLineNumber" : 105,
    "endColumnNumber" : 29
  }, {
    "charLength" : 5,
    "startLineNumber" : 106,
    "startColumnNumber" : 88,
    "endLineNumber" : 106,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}