{
  "id" : 61,
  "expression" : "value instanceof CharSequence",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/convert/AbstractConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "value instanceof CharSequence",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 97,
      "startColumnNumber" : 6,
      "endLineNumber" : 97,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value instanceof CharSequence) {\n  return value.toString();\n}\n else if (ArrayUtil.isArray(value)) {\n  return ArrayUtil.toString(value);\n}\n else if (CharUtil.isChar(value)) {\n  return CharUtil.toString((char)value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 93,
        "startColumnNumber" : 45,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (null == value) {\n    return null;\n  }\n  if (value instanceof CharSequence) {\n    return value.toString();\n  }\n else   if (ArrayUtil.isArray(value)) {\n    return ArrayUtil.toString(value);\n  }\n else   if (CharUtil.isChar(value)) {\n    return CharUtil.toString((char)value);\n  }\n  return value.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 601,
        "startLineNumber" : 80,
        "startColumnNumber" : 1,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 值转为String，用于内部转换中需要使用String中转的情况<br> 转换规则为： <pre> 1、字符串类型将被强转 2、数组将被转换为逗号分隔的字符串 3、其它类型将调用默认的toString()方法 </pre>\n * @param value 值\n * @return String\n */\nprotected String convertToStr(Object value){\n  if (null == value) {\n    return null;\n  }\n  if (value instanceof CharSequence) {\n    return value.toString();\n  }\n else   if (ArrayUtil.isArray(value)) {\n    return ArrayUtil.toString(value);\n  }\n else   if (CharUtil.isChar(value)) {\n    return CharUtil.toString((char)value);\n  }\n  return value.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value instanceof CharSequence) {\n  return value.toString();\n}\n else if (ArrayUtil.isArray(value)) {\n  return ArrayUtil.toString(value);\n}\n else if (CharUtil.isChar(value)) {\n  return CharUtil.toString((char)value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 97,
    "startColumnNumber" : 6,
    "endLineNumber" : 97,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}