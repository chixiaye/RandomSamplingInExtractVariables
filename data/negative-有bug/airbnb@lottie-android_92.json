{
  "id" : 92,
  "expression" : "gc2.colors.length",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/GradientColor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "gc2.colors.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 25,
      "startColumnNumber" : 29,
      "endLineNumber" : 25,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 46
      },
      "nodeContext" : "gc1.colors.length != gc2.colors.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (gc1.colors.length != gc2.colors.length) {\n  throw new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 24,
        "startColumnNumber" : 66,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (gc1.colors.length != gc2.colors.length) {\n    throw new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\");\n  }\n  for (int i=0; i < gc1.colors.length; i++) {\n    positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n    colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 511,
        "startLineNumber" : 24,
        "startColumnNumber" : 2,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "void lerp(GradientColor gc1,GradientColor gc2,float progress){\n  if (gc1.colors.length != gc2.colors.length) {\n    throw new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\");\n  }\n  for (int i=0; i < gc1.colors.length; i++) {\n    positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n    colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 46
      },
      "nodeContext" : "gc1.colors.length != gc2.colors.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "gc2.colors.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 27,
      "startColumnNumber" : 39,
      "endLineNumber" : 27,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 26,
        "startColumnNumber" : 41,
        "endLineNumber" : 27,
        "endColumnNumber" : 62
      },
      "nodeContext" : "\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 26,
        "startColumnNumber" : 12,
        "endLineNumber" : 27,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 26,
        "startColumnNumber" : 6,
        "endLineNumber" : 27,
        "endColumnNumber" : 64
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 25,
        "startColumnNumber" : 48,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (gc1.colors.length != gc2.colors.length) {\n  throw new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 24,
        "startColumnNumber" : 66,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (gc1.colors.length != gc2.colors.length) {\n    throw new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\");\n  }\n  for (int i=0; i < gc1.colors.length; i++) {\n    positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n    colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 511,
        "startLineNumber" : 24,
        "startColumnNumber" : 2,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "void lerp(GradientColor gc1,GradientColor gc2,float progress){\n  if (gc1.colors.length != gc2.colors.length) {\n    throw new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\");\n  }\n  for (int i=0; i < gc1.colors.length; i++) {\n    positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n    colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 26,
        "startColumnNumber" : 41,
        "endLineNumber" : 27,
        "endColumnNumber" : 62
      },
      "nodeContext" : "\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 25,
    "startColumnNumber" : 29,
    "endLineNumber" : 25,
    "endColumnNumber" : 46
  }, {
    "charLength" : 17,
    "startLineNumber" : 27,
    "startColumnNumber" : 39,
    "endLineNumber" : 27,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}