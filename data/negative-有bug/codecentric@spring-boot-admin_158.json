{
  "id" : 158,
  "expression" : "registerPeriod",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-starter-client/src/main/java/de/codecentric/boot/admin/client/registration/RegistrationApplicationListener.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "registerPeriod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 82,
      "startColumnNumber" : 5,
      "endLineNumber" : 82,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 77,
        "startColumnNumber" : 18,
        "endLineNumber" : 82,
        "endColumnNumber" : 20
      },
      "nodeContext" : "taskScheduler.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    registrator.register();\n  }\n}\n,registerPeriod)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 82,
        "endColumnNumber" : 20
      },
      "nodeContext" : "scheduledTask=taskScheduler.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    registrator.register();\n  }\n}\n,registerPeriod)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 82,
        "endColumnNumber" : 21
      },
      "nodeContext" : "scheduledTask=taskScheduler.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    registrator.register();\n  }\n}\n,registerPeriod);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 72,
        "startColumnNumber" : 33,
        "endLineNumber" : 84,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (scheduledTask != null && !scheduledTask.isDone()) {\n    return;\n  }\n  scheduledTask=taskScheduler.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      registrator.register();\n    }\n  }\n,registerPeriod);\n  LOGGER.debug(\"Scheduled registration task for every {}ms\",registerPeriod);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 72,
        "startColumnNumber" : 1,
        "endLineNumber" : 84,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void startRegisterTask(){\n  if (scheduledTask != null && !scheduledTask.isDone()) {\n    return;\n  }\n  scheduledTask=taskScheduler.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      registrator.register();\n    }\n  }\n,registerPeriod);\n  LOGGER.debug(\"Scheduled registration task for every {}ms\",registerPeriod);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 77,
        "startColumnNumber" : 18,
        "endLineNumber" : 82,
        "endColumnNumber" : 20
      },
      "nodeContext" : "taskScheduler.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    registrator.register();\n  }\n}\n,registerPeriod)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "registerPeriod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 83,
      "startColumnNumber" : 61,
      "endLineNumber" : 83,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 76
      },
      "nodeContext" : "LOGGER.debug(\"Scheduled registration task for every {}ms\",registerPeriod)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 77
      },
      "nodeContext" : "LOGGER.debug(\"Scheduled registration task for every {}ms\",registerPeriod);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 72,
        "startColumnNumber" : 33,
        "endLineNumber" : 84,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (scheduledTask != null && !scheduledTask.isDone()) {\n    return;\n  }\n  scheduledTask=taskScheduler.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      registrator.register();\n    }\n  }\n,registerPeriod);\n  LOGGER.debug(\"Scheduled registration task for every {}ms\",registerPeriod);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 72,
        "startColumnNumber" : 1,
        "endLineNumber" : 84,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void startRegisterTask(){\n  if (scheduledTask != null && !scheduledTask.isDone()) {\n    return;\n  }\n  scheduledTask=taskScheduler.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      registrator.register();\n    }\n  }\n,registerPeriod);\n  LOGGER.debug(\"Scheduled registration task for every {}ms\",registerPeriod);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 77
      },
      "nodeContext" : "LOGGER.debug(\"Scheduled registration task for every {}ms\",registerPeriod);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 82,
    "startColumnNumber" : 5,
    "endLineNumber" : 82,
    "endColumnNumber" : 19
  }, {
    "charLength" : 14,
    "startLineNumber" : 83,
    "startColumnNumber" : 61,
    "endLineNumber" : 83,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}