{
  "id" : 348,
  "expression" : "eventLoopGroup",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/oap-server/server-tools/data-generator/src/main/java/org/apache/skywalking/restapi/SegmentGeneratorHandler.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "eventLoopGroup",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 81,
      "startColumnNumber" : 21,
      "endLineNumber" : 81,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 81,
        "startColumnNumber" : 21,
        "endLineNumber" : 83,
        "endColumnNumber" : 36
      },
      "nodeContext" : "eventLoopGroup.submit(() -> IntStream.range(0,size).forEach(generator))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 36
      },
      "nodeContext" : "future=eventLoopGroup.submit(() -> IntStream.range(0,size).forEach(generator))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 37
      },
      "nodeContext" : "future=eventLoopGroup.submit(() -> IntStream.range(0,size).forEach(generator));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 80,
        "startColumnNumber" : 22,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  future=eventLoopGroup.submit(() -> IntStream.range(0,size).forEach(generator));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (size > 0) {\n  future=eventLoopGroup.submit(() -> IntStream.range(0,size).forEach(generator));\n}\n else {\n  future=eventLoopGroup.scheduleAtFixedRate(() -> IntStream.range(0,qps).forEach(generator),0,1,TimeUnit.SECONDS);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1536,
        "startLineNumber" : 63,
        "startColumnNumber" : 47,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (size > 0 && qps > 0) {\n    return HttpResponse.of(HttpStatus.BAD_REQUEST,MediaType.PLAIN_TEXT,\"size and qps can't be both set\");\n  }\n  log.info(\"Generate {} mock segments, qps: {}, template: {}\",size,qps,request);\n  final IntConsumer generator=unused -> {\n    final Segment segment=request.next();\n    log.debug(\"Generating segment: {}\",segment);\n    sourceReceiver.receive(segment);\n  }\n;\n  final String requestId=UUID.randomUUID().toString();\n  final Future<?> future;\n  if (size > 0) {\n    future=eventLoopGroup.submit(() -> IntStream.range(0,size).forEach(generator));\n  }\n else {\n    future=eventLoopGroup.scheduleAtFixedRate(() -> IntStream.range(0,qps).forEach(generator),0,1,TimeUnit.SECONDS);\n  }\n  futures.put(requestId,future);\n  future.addListener(f -> {\n    if (f.isDone()) {\n      futures.remove(requestId);\n      log.info(\"Generate mock segments finished: {}, requestId: {}\",f.isSuccess(),requestId);\n    }\n    if (f.cause() != null && !(f.cause() instanceof CancellationException)) {\n      log.error(\"Exception in future: \",f.cause());\n    }\n  }\n);\n  return HttpResponse.of(MediaType.PLAIN_TEXT,requestId);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1760,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Post(\"/mock-data/segments/tasks\") public HttpResponse generateMockSegments(@Default(\"0\") @Param(\"size\") int size,@Default(\"0\") @Param(\"qps\") int qps,@RequestObject SegmentRequest request){\n  if (size > 0 && qps > 0) {\n    return HttpResponse.of(HttpStatus.BAD_REQUEST,MediaType.PLAIN_TEXT,\"size and qps can't be both set\");\n  }\n  log.info(\"Generate {} mock segments, qps: {}, template: {}\",size,qps,request);\n  final IntConsumer generator=unused -> {\n    final Segment segment=request.next();\n    log.debug(\"Generating segment: {}\",segment);\n    sourceReceiver.receive(segment);\n  }\n;\n  final String requestId=UUID.randomUUID().toString();\n  final Future<?> future;\n  if (size > 0) {\n    future=eventLoopGroup.submit(() -> IntStream.range(0,size).forEach(generator));\n  }\n else {\n    future=eventLoopGroup.scheduleAtFixedRate(() -> IntStream.range(0,qps).forEach(generator),0,1,TimeUnit.SECONDS);\n  }\n  futures.put(requestId,future);\n  future.addListener(f -> {\n    if (f.isDone()) {\n      futures.remove(requestId);\n      log.info(\"Generate mock segments finished: {}, requestId: {}\",f.isSuccess(),requestId);\n    }\n    if (f.cause() != null && !(f.cause() instanceof CancellationException)) {\n      log.error(\"Exception in future: \",f.cause());\n    }\n  }\n);\n  return HttpResponse.of(MediaType.PLAIN_TEXT,requestId);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 81,
        "startColumnNumber" : 21,
        "endLineNumber" : 83,
        "endColumnNumber" : 36
      },
      "nodeContext" : "eventLoopGroup.submit(() -> IntStream.range(0,size).forEach(generator))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.restapi.EventLoopGroup"
  }, {
    "nodeContext" : "eventLoopGroup",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 85,
      "startColumnNumber" : 21,
      "endLineNumber" : 85,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 85,
        "startColumnNumber" : 21,
        "endLineNumber" : 87,
        "endColumnNumber" : 60
      },
      "nodeContext" : "eventLoopGroup.scheduleAtFixedRate(() -> IntStream.range(0,qps).forEach(generator),0,1,TimeUnit.SECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 60
      },
      "nodeContext" : "future=eventLoopGroup.scheduleAtFixedRate(() -> IntStream.range(0,qps).forEach(generator),0,1,TimeUnit.SECONDS)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 61
      },
      "nodeContext" : "future=eventLoopGroup.scheduleAtFixedRate(() -> IntStream.range(0,qps).forEach(generator),0,1,TimeUnit.SECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 84,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  future=eventLoopGroup.scheduleAtFixedRate(() -> IntStream.range(0,qps).forEach(generator),0,1,TimeUnit.SECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (size > 0) {\n  future=eventLoopGroup.submit(() -> IntStream.range(0,size).forEach(generator));\n}\n else {\n  future=eventLoopGroup.scheduleAtFixedRate(() -> IntStream.range(0,qps).forEach(generator),0,1,TimeUnit.SECONDS);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1536,
        "startLineNumber" : 63,
        "startColumnNumber" : 47,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (size > 0 && qps > 0) {\n    return HttpResponse.of(HttpStatus.BAD_REQUEST,MediaType.PLAIN_TEXT,\"size and qps can't be both set\");\n  }\n  log.info(\"Generate {} mock segments, qps: {}, template: {}\",size,qps,request);\n  final IntConsumer generator=unused -> {\n    final Segment segment=request.next();\n    log.debug(\"Generating segment: {}\",segment);\n    sourceReceiver.receive(segment);\n  }\n;\n  final String requestId=UUID.randomUUID().toString();\n  final Future<?> future;\n  if (size > 0) {\n    future=eventLoopGroup.submit(() -> IntStream.range(0,size).forEach(generator));\n  }\n else {\n    future=eventLoopGroup.scheduleAtFixedRate(() -> IntStream.range(0,qps).forEach(generator),0,1,TimeUnit.SECONDS);\n  }\n  futures.put(requestId,future);\n  future.addListener(f -> {\n    if (f.isDone()) {\n      futures.remove(requestId);\n      log.info(\"Generate mock segments finished: {}, requestId: {}\",f.isSuccess(),requestId);\n    }\n    if (f.cause() != null && !(f.cause() instanceof CancellationException)) {\n      log.error(\"Exception in future: \",f.cause());\n    }\n  }\n);\n  return HttpResponse.of(MediaType.PLAIN_TEXT,requestId);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1760,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Post(\"/mock-data/segments/tasks\") public HttpResponse generateMockSegments(@Default(\"0\") @Param(\"size\") int size,@Default(\"0\") @Param(\"qps\") int qps,@RequestObject SegmentRequest request){\n  if (size > 0 && qps > 0) {\n    return HttpResponse.of(HttpStatus.BAD_REQUEST,MediaType.PLAIN_TEXT,\"size and qps can't be both set\");\n  }\n  log.info(\"Generate {} mock segments, qps: {}, template: {}\",size,qps,request);\n  final IntConsumer generator=unused -> {\n    final Segment segment=request.next();\n    log.debug(\"Generating segment: {}\",segment);\n    sourceReceiver.receive(segment);\n  }\n;\n  final String requestId=UUID.randomUUID().toString();\n  final Future<?> future;\n  if (size > 0) {\n    future=eventLoopGroup.submit(() -> IntStream.range(0,size).forEach(generator));\n  }\n else {\n    future=eventLoopGroup.scheduleAtFixedRate(() -> IntStream.range(0,qps).forEach(generator),0,1,TimeUnit.SECONDS);\n  }\n  futures.put(requestId,future);\n  future.addListener(f -> {\n    if (f.isDone()) {\n      futures.remove(requestId);\n      log.info(\"Generate mock segments finished: {}, requestId: {}\",f.isSuccess(),requestId);\n    }\n    if (f.cause() != null && !(f.cause() instanceof CancellationException)) {\n      log.error(\"Exception in future: \",f.cause());\n    }\n  }\n);\n  return HttpResponse.of(MediaType.PLAIN_TEXT,requestId);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 85,
        "startColumnNumber" : 21,
        "endLineNumber" : 87,
        "endColumnNumber" : 60
      },
      "nodeContext" : "eventLoopGroup.scheduleAtFixedRate(() -> IntStream.range(0,qps).forEach(generator),0,1,TimeUnit.SECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.restapi.EventLoopGroup"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 81,
    "startColumnNumber" : 21,
    "endLineNumber" : 81,
    "endColumnNumber" : 35
  }, {
    "charLength" : 14,
    "startLineNumber" : 85,
    "startColumnNumber" : 21,
    "endLineNumber" : 85,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}