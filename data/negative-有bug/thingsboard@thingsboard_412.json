{
  "id" : 412,
  "expression" : "33",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/dao/src/test/java/org/thingsboard/server/dao/service/BaseQueueServiceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "33",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 511,
      "startColumnNumber" : 32,
      "endLineNumber" : 511,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 511,
        "startColumnNumber" : 19,
        "endLineNumber" : 511,
        "endColumnNumber" : 35
      },
      "nodeContext" : "new PageLink(33)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 511,
        "startColumnNumber" : 8,
        "endLineNumber" : 511,
        "endColumnNumber" : 35
      },
      "nodeContext" : "pageLink=new PageLink(33)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 511,
        "startColumnNumber" : 8,
        "endLineNumber" : 511,
        "endColumnNumber" : 36
      },
      "nodeContext" : "pageLink=new PageLink(33);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1743,
        "startLineNumber" : 469,
        "startColumnNumber" : 43,
        "endLineNumber" : 515,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Queue> queues=new ArrayList<>();\n  for (int i=1; i < 10; i++) {\n    Queue queue=new Queue();\n    queue.setTenantId(tenantId);\n    queue.setName(\"Test\" + i);\n    queue.setTopic(\"tb_rule_engine.test\" + i);\n    queue.setPollInterval(25);\n    queue.setPartitions(1);\n    queue.setPackProcessingTimeout(2000);\n    queue.setSubmitStrategy(createTestSubmitStrategy());\n    queue.setProcessingStrategy(createTestProcessingStrategy());\n    queues.add(queueService.saveQueue(queue));\n  }\n  List<Queue> loadedQueues=new ArrayList<>();\n  PageLink pageLink=new PageLink(3);\n  PageData<Queue> pageData=null;\n  do {\n    pageData=queueService.findQueuesByTenantId(tenantId,pageLink);\n    loadedQueues.addAll(pageData.getData());\n    if (pageData.hasNext()) {\n      pageLink=pageLink.nextPageLink();\n    }\n  }\n while (pageData.hasNext());\n  for (int i=0; i < loadedQueues.size(); i++) {\n    Queue queue=loadedQueues.get(i);\n    if (queue.getName().equals(\"Main\")) {\n      loadedQueues.remove(queue);\n      break;\n    }\n  }\n  Collections.sort(queues,idComparator);\n  Collections.sort(loadedQueues,idComparator);\n  Assert.assertEquals(queues,loadedQueues);\n  queueService.deleteQueuesByTenantId(tenantId);\n  pageLink=new PageLink(33);\n  pageData=queueService.findQueuesByTenantId(tenantId,pageLink);\n  Assert.assertFalse(pageData.hasNext());\n  Assert.assertTrue(pageData.getData().isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 239,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1793,
        "startLineNumber" : 468,
        "startColumnNumber" : 4,
        "endLineNumber" : 515,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFindQueuesByTenantId(){\n  List<Queue> queues=new ArrayList<>();\n  for (int i=1; i < 10; i++) {\n    Queue queue=new Queue();\n    queue.setTenantId(tenantId);\n    queue.setName(\"Test\" + i);\n    queue.setTopic(\"tb_rule_engine.test\" + i);\n    queue.setPollInterval(25);\n    queue.setPartitions(1);\n    queue.setPackProcessingTimeout(2000);\n    queue.setSubmitStrategy(createTestSubmitStrategy());\n    queue.setProcessingStrategy(createTestProcessingStrategy());\n    queues.add(queueService.saveQueue(queue));\n  }\n  List<Queue> loadedQueues=new ArrayList<>();\n  PageLink pageLink=new PageLink(3);\n  PageData<Queue> pageData=null;\n  do {\n    pageData=queueService.findQueuesByTenantId(tenantId,pageLink);\n    loadedQueues.addAll(pageData.getData());\n    if (pageData.hasNext()) {\n      pageLink=pageLink.nextPageLink();\n    }\n  }\n while (pageData.hasNext());\n  for (int i=0; i < loadedQueues.size(); i++) {\n    Queue queue=loadedQueues.get(i);\n    if (queue.getName().equals(\"Main\")) {\n      loadedQueues.remove(queue);\n      break;\n    }\n  }\n  Collections.sort(queues,idComparator);\n  Collections.sort(loadedQueues,idComparator);\n  Assert.assertEquals(queues,loadedQueues);\n  queueService.deleteQueuesByTenantId(tenantId);\n  pageLink=new PageLink(33);\n  pageData=queueService.findQueuesByTenantId(tenantId,pageLink);\n  Assert.assertFalse(pageData.hasNext());\n  Assert.assertTrue(pageData.getData().isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 245,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 511,
        "startColumnNumber" : 8,
        "endLineNumber" : 511,
        "endColumnNumber" : 36
      },
      "nodeContext" : "pageLink=new PageLink(33);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 511,
    "startColumnNumber" : 32,
    "endLineNumber" : 511,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}