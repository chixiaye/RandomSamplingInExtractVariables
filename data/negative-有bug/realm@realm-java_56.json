{
  "id" : 56,
  "expression" : "allTypes.columnString",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/androidTest/java/io/realm/BulkInsertTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "allTypes.columnString",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 167,
      "startColumnNumber" : 21,
      "endLineNumber" : 167,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertEquals(allTypes.columnString,first.columnString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertEquals(allTypes.columnString,first.columnString);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1599,
        "startLineNumber" : 147,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AllTypesRealmModel allTypes=new AllTypesRealmModel();\n  allTypes.columnLong=10;\n  allTypes.columnBoolean=false;\n  allTypes.columnBinary=new byte[]{1,2,3};\n  allTypes.columnDate=new Date();\n  allTypes.columnDouble=Math.PI;\n  allTypes.columnFloat=1.234567f;\n  allTypes.columnString=\"test data\";\n  allTypes.columnByte=0x2A;\n  allTypes.columnDecimal128=new Decimal128(BigDecimal.TEN);\n  allTypes.columnObjectId=new ObjectId(TestHelper.generateObjectIdHexString(7));\n  allTypes.columnUUID=UUID.fromString(TestHelper.generateUUIDString(7));\n  realm.beginTransaction();\n  realm.insert(allTypes);\n  realm.commitTransaction();\n  AllTypesRealmModel first=realm.where(AllTypesRealmModel.class).findFirst();\n  assertNotNull(first);\n  assertEquals(allTypes.columnString,first.columnString);\n  assertEquals(allTypes.columnLong,first.columnLong);\n  assertEquals(allTypes.columnBoolean,first.columnBoolean);\n  assertArrayEquals(allTypes.columnBinary,first.columnBinary);\n  assertEquals(allTypes.columnDate,first.columnDate);\n  assertEquals(allTypes.columnDouble,first.columnDouble,0.0000001);\n  assertEquals(allTypes.columnFloat,first.columnFloat,0.0000001);\n  assertEquals(allTypes.columnByte,first.columnByte);\n  assertEquals(allTypes.columnDecimal128,first.columnDecimal128);\n  assertEquals(allTypes.columnObjectId,first.columnObjectId);\n  assertEquals(allTypes.columnUUID,first.columnUUID);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1641,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 178,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void insert_realmModel(){\n  AllTypesRealmModel allTypes=new AllTypesRealmModel();\n  allTypes.columnLong=10;\n  allTypes.columnBoolean=false;\n  allTypes.columnBinary=new byte[]{1,2,3};\n  allTypes.columnDate=new Date();\n  allTypes.columnDouble=Math.PI;\n  allTypes.columnFloat=1.234567f;\n  allTypes.columnString=\"test data\";\n  allTypes.columnByte=0x2A;\n  allTypes.columnDecimal128=new Decimal128(BigDecimal.TEN);\n  allTypes.columnObjectId=new ObjectId(TestHelper.generateObjectIdHexString(7));\n  allTypes.columnUUID=UUID.fromString(TestHelper.generateUUIDString(7));\n  realm.beginTransaction();\n  realm.insert(allTypes);\n  realm.commitTransaction();\n  AllTypesRealmModel first=realm.where(AllTypesRealmModel.class).findFirst();\n  assertNotNull(first);\n  assertEquals(allTypes.columnString,first.columnString);\n  assertEquals(allTypes.columnLong,first.columnLong);\n  assertEquals(allTypes.columnBoolean,first.columnBoolean);\n  assertArrayEquals(allTypes.columnBinary,first.columnBinary);\n  assertEquals(allTypes.columnDate,first.columnDate);\n  assertEquals(allTypes.columnDouble,first.columnDouble,0.0000001);\n  assertEquals(allTypes.columnFloat,first.columnFloat,0.0000001);\n  assertEquals(allTypes.columnByte,first.columnByte);\n  assertEquals(allTypes.columnDecimal128,first.columnDecimal128);\n  assertEquals(allTypes.columnObjectId,first.columnObjectId);\n  assertEquals(allTypes.columnUUID,first.columnUUID);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertEquals(allTypes.columnString,first.columnString);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 167,
    "startColumnNumber" : 21,
    "endLineNumber" : 167,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}