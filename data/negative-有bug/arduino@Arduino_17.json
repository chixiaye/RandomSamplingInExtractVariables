{
  "id" : 17,
  "expression" : "imageH",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/EditorHeader.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "imageH",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 135,
      "startColumnNumber" : 50,
      "endLineNumber" : 135,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 135,
        "startColumnNumber" : 36,
        "endLineNumber" : 135,
        "endColumnNumber" : 56
      },
      "nodeContext" : "size.height > imageH",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 135,
        "startColumnNumber" : 35,
        "endLineNumber" : 135,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(size.height > imageH)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 135,
        "startColumnNumber" : 10,
        "endLineNumber" : 135,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(size.width > imageW) || (size.height > imageH)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 135,
        "startColumnNumber" : 6,
        "endLineNumber" : 143,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((size.width > imageW) || (size.height > imageH)) {\n  offscreen=null;\n}\n else {\n  sizeW=size.width;\n  sizeH=size.height;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 300,
        "startLineNumber" : 132,
        "startColumnNumber" : 57,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if ((size.width > imageW) || (size.height > imageH)) {\n    offscreen=null;\n  }\n else {\n    sizeW=size.width;\n    sizeH=size.height;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if ((size.width != sizeW) || (size.height != sizeH)) {\n  if ((size.width > imageW) || (size.height > imageH)) {\n    offscreen=null;\n  }\n else {\n    sizeW=size.width;\n    sizeH=size.height;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3095,
        "startLineNumber" : 125,
        "startColumnNumber" : 46,
        "endLineNumber" : 223,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (screen == null)   return;\n  Sketch sketch=editor.getSketch();\n  if (sketch == null)   return;\n  Dimension size=getSize();\n  if ((size.width != sizeW) || (size.height != sizeH)) {\n    if ((size.width > imageW) || (size.height > imageH)) {\n      offscreen=null;\n    }\n else {\n      sizeW=size.width;\n      sizeH=size.height;\n    }\n  }\n  if (offscreen == null) {\n    sizeW=size.width;\n    sizeH=size.height;\n    imageW=sizeW;\n    imageH=sizeH;\n    offscreen=createImage(imageW,imageH);\n  }\n  Graphics g=offscreen.getGraphics();\n  if (font == null) {\n    font=Theme.getFont(\"header.text.font\");\n  }\n  g.setFont(font);\n  metrics=g.getFontMetrics();\n  fontAscent=metrics.getAscent();\n  g.setColor(backgroundColor);\n  g.fillRect(0,0,imageW,imageH);\n  int codeCount=sketch.getCodeCount();\n  if ((tabLeft == null) || (tabLeft.length < codeCount)) {\n    tabLeft=new int[codeCount];\n    tabRight=new int[codeCount];\n  }\n  int x=6;\n  for (int i=0; i < sketch.getCodeCount(); i++) {\n    SketchCode code=sketch.getCode(i);\n    String codeName=code.isExtension(sketch.getHiddenExtensions()) ? code.getPrettyName() : code.getFileName();\n    String text=\"  \" + codeName + (code.isModified() ? \" \\u00A7\" : \"  \");\n    Graphics2D g2=(Graphics2D)g;\n    int textWidth=(int)font.getStringBounds(text,g2.getFontRenderContext()).getWidth();\n    int pieceCount=2 + (textWidth / PIECE_WIDTH);\n    int pieceWidth=pieceCount * PIECE_WIDTH;\n    int state=(code == sketch.getCurrentCode()) ? SELECTED : UNSELECTED;\n    g.drawImage(pieces[state][LEFT],x,0,null);\n    x+=PIECE_WIDTH;\n    int contentLeft=x;\n    tabLeft[i]=x;\n    for (int j=0; j < pieceCount; j++) {\n      g.drawImage(pieces[state][MIDDLE],x,0,null);\n      x+=PIECE_WIDTH;\n    }\n    tabRight[i]=x;\n    int textLeft=contentLeft + (pieceWidth - textWidth) / 2;\n    g.setColor(textColor[state]);\n    int baseline=(sizeH + fontAscent) / 2;\n    g.drawString(text,textLeft,baseline);\n    g.drawImage(pieces[state][RIGHT],x,0,null);\n    x+=PIECE_WIDTH - 1;\n  }\n  menuLeft=sizeW - (16 + pieces[0][MENU].getWidth(this));\n  menuRight=sizeW - 16;\n  g.drawImage(pieces[popup.isVisible() ? SELECTED : UNSELECTED][MENU],menuLeft,0,null);\n  screen.drawImage(offscreen,0,0,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3139,
        "startLineNumber" : 125,
        "startColumnNumber" : 2,
        "endLineNumber" : 223,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void paintComponent(Graphics screen){\n  if (screen == null)   return;\n  Sketch sketch=editor.getSketch();\n  if (sketch == null)   return;\n  Dimension size=getSize();\n  if ((size.width != sizeW) || (size.height != sizeH)) {\n    if ((size.width > imageW) || (size.height > imageH)) {\n      offscreen=null;\n    }\n else {\n      sizeW=size.width;\n      sizeH=size.height;\n    }\n  }\n  if (offscreen == null) {\n    sizeW=size.width;\n    sizeH=size.height;\n    imageW=sizeW;\n    imageH=sizeH;\n    offscreen=createImage(imageW,imageH);\n  }\n  Graphics g=offscreen.getGraphics();\n  if (font == null) {\n    font=Theme.getFont(\"header.text.font\");\n  }\n  g.setFont(font);\n  metrics=g.getFontMetrics();\n  fontAscent=metrics.getAscent();\n  g.setColor(backgroundColor);\n  g.fillRect(0,0,imageW,imageH);\n  int codeCount=sketch.getCodeCount();\n  if ((tabLeft == null) || (tabLeft.length < codeCount)) {\n    tabLeft=new int[codeCount];\n    tabRight=new int[codeCount];\n  }\n  int x=6;\n  for (int i=0; i < sketch.getCodeCount(); i++) {\n    SketchCode code=sketch.getCode(i);\n    String codeName=code.isExtension(sketch.getHiddenExtensions()) ? code.getPrettyName() : code.getFileName();\n    String text=\"  \" + codeName + (code.isModified() ? \" \\u00A7\" : \"  \");\n    Graphics2D g2=(Graphics2D)g;\n    int textWidth=(int)font.getStringBounds(text,g2.getFontRenderContext()).getWidth();\n    int pieceCount=2 + (textWidth / PIECE_WIDTH);\n    int pieceWidth=pieceCount * PIECE_WIDTH;\n    int state=(code == sketch.getCurrentCode()) ? SELECTED : UNSELECTED;\n    g.drawImage(pieces[state][LEFT],x,0,null);\n    x+=PIECE_WIDTH;\n    int contentLeft=x;\n    tabLeft[i]=x;\n    for (int j=0; j < pieceCount; j++) {\n      g.drawImage(pieces[state][MIDDLE],x,0,null);\n      x+=PIECE_WIDTH;\n    }\n    tabRight[i]=x;\n    int textLeft=contentLeft + (pieceWidth - textWidth) / 2;\n    g.setColor(textColor[state]);\n    int baseline=(sizeH + fontAscent) / 2;\n    g.drawString(text,textLeft,baseline);\n    g.drawImage(pieces[state][RIGHT],x,0,null);\n    x+=PIECE_WIDTH - 1;\n  }\n  menuLeft=sizeW - (16 + pieces[0][MENU].getWidth(this));\n  menuRight=sizeW - 16;\n  g.drawImage(pieces[popup.isVisible() ? SELECTED : UNSELECTED][MENU],menuLeft,0,null);\n  screen.drawImage(offscreen,0,0,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 476,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 135,
        "startColumnNumber" : 10,
        "endLineNumber" : 135,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(size.width > imageW) || (size.height > imageH)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "imageH",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 151,
      "startColumnNumber" : 38,
      "endLineNumber" : 151,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 151,
        "startColumnNumber" : 18,
        "endLineNumber" : 151,
        "endColumnNumber" : 45
      },
      "nodeContext" : "createImage(imageW,imageH)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 45
      },
      "nodeContext" : "offscreen=createImage(imageW,imageH)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 46
      },
      "nodeContext" : "offscreen=createImage(imageW,imageH);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 146,
        "startColumnNumber" : 27,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  sizeW=size.width;\n  sizeH=size.height;\n  imageW=sizeW;\n  imageH=sizeH;\n  offscreen=createImage(imageW,imageH);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (offscreen == null) {\n  sizeW=size.width;\n  sizeH=size.height;\n  imageW=sizeW;\n  imageH=sizeH;\n  offscreen=createImage(imageW,imageH);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3095,
        "startLineNumber" : 125,
        "startColumnNumber" : 46,
        "endLineNumber" : 223,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (screen == null)   return;\n  Sketch sketch=editor.getSketch();\n  if (sketch == null)   return;\n  Dimension size=getSize();\n  if ((size.width != sizeW) || (size.height != sizeH)) {\n    if ((size.width > imageW) || (size.height > imageH)) {\n      offscreen=null;\n    }\n else {\n      sizeW=size.width;\n      sizeH=size.height;\n    }\n  }\n  if (offscreen == null) {\n    sizeW=size.width;\n    sizeH=size.height;\n    imageW=sizeW;\n    imageH=sizeH;\n    offscreen=createImage(imageW,imageH);\n  }\n  Graphics g=offscreen.getGraphics();\n  if (font == null) {\n    font=Theme.getFont(\"header.text.font\");\n  }\n  g.setFont(font);\n  metrics=g.getFontMetrics();\n  fontAscent=metrics.getAscent();\n  g.setColor(backgroundColor);\n  g.fillRect(0,0,imageW,imageH);\n  int codeCount=sketch.getCodeCount();\n  if ((tabLeft == null) || (tabLeft.length < codeCount)) {\n    tabLeft=new int[codeCount];\n    tabRight=new int[codeCount];\n  }\n  int x=6;\n  for (int i=0; i < sketch.getCodeCount(); i++) {\n    SketchCode code=sketch.getCode(i);\n    String codeName=code.isExtension(sketch.getHiddenExtensions()) ? code.getPrettyName() : code.getFileName();\n    String text=\"  \" + codeName + (code.isModified() ? \" \\u00A7\" : \"  \");\n    Graphics2D g2=(Graphics2D)g;\n    int textWidth=(int)font.getStringBounds(text,g2.getFontRenderContext()).getWidth();\n    int pieceCount=2 + (textWidth / PIECE_WIDTH);\n    int pieceWidth=pieceCount * PIECE_WIDTH;\n    int state=(code == sketch.getCurrentCode()) ? SELECTED : UNSELECTED;\n    g.drawImage(pieces[state][LEFT],x,0,null);\n    x+=PIECE_WIDTH;\n    int contentLeft=x;\n    tabLeft[i]=x;\n    for (int j=0; j < pieceCount; j++) {\n      g.drawImage(pieces[state][MIDDLE],x,0,null);\n      x+=PIECE_WIDTH;\n    }\n    tabRight[i]=x;\n    int textLeft=contentLeft + (pieceWidth - textWidth) / 2;\n    g.setColor(textColor[state]);\n    int baseline=(sizeH + fontAscent) / 2;\n    g.drawString(text,textLeft,baseline);\n    g.drawImage(pieces[state][RIGHT],x,0,null);\n    x+=PIECE_WIDTH - 1;\n  }\n  menuLeft=sizeW - (16 + pieces[0][MENU].getWidth(this));\n  menuRight=sizeW - 16;\n  g.drawImage(pieces[popup.isVisible() ? SELECTED : UNSELECTED][MENU],menuLeft,0,null);\n  screen.drawImage(offscreen,0,0,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3139,
        "startLineNumber" : 125,
        "startColumnNumber" : 2,
        "endLineNumber" : 223,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void paintComponent(Graphics screen){\n  if (screen == null)   return;\n  Sketch sketch=editor.getSketch();\n  if (sketch == null)   return;\n  Dimension size=getSize();\n  if ((size.width != sizeW) || (size.height != sizeH)) {\n    if ((size.width > imageW) || (size.height > imageH)) {\n      offscreen=null;\n    }\n else {\n      sizeW=size.width;\n      sizeH=size.height;\n    }\n  }\n  if (offscreen == null) {\n    sizeW=size.width;\n    sizeH=size.height;\n    imageW=sizeW;\n    imageH=sizeH;\n    offscreen=createImage(imageW,imageH);\n  }\n  Graphics g=offscreen.getGraphics();\n  if (font == null) {\n    font=Theme.getFont(\"header.text.font\");\n  }\n  g.setFont(font);\n  metrics=g.getFontMetrics();\n  fontAscent=metrics.getAscent();\n  g.setColor(backgroundColor);\n  g.fillRect(0,0,imageW,imageH);\n  int codeCount=sketch.getCodeCount();\n  if ((tabLeft == null) || (tabLeft.length < codeCount)) {\n    tabLeft=new int[codeCount];\n    tabRight=new int[codeCount];\n  }\n  int x=6;\n  for (int i=0; i < sketch.getCodeCount(); i++) {\n    SketchCode code=sketch.getCode(i);\n    String codeName=code.isExtension(sketch.getHiddenExtensions()) ? code.getPrettyName() : code.getFileName();\n    String text=\"  \" + codeName + (code.isModified() ? \" \\u00A7\" : \"  \");\n    Graphics2D g2=(Graphics2D)g;\n    int textWidth=(int)font.getStringBounds(text,g2.getFontRenderContext()).getWidth();\n    int pieceCount=2 + (textWidth / PIECE_WIDTH);\n    int pieceWidth=pieceCount * PIECE_WIDTH;\n    int state=(code == sketch.getCurrentCode()) ? SELECTED : UNSELECTED;\n    g.drawImage(pieces[state][LEFT],x,0,null);\n    x+=PIECE_WIDTH;\n    int contentLeft=x;\n    tabLeft[i]=x;\n    for (int j=0; j < pieceCount; j++) {\n      g.drawImage(pieces[state][MIDDLE],x,0,null);\n      x+=PIECE_WIDTH;\n    }\n    tabRight[i]=x;\n    int textLeft=contentLeft + (pieceWidth - textWidth) / 2;\n    g.setColor(textColor[state]);\n    int baseline=(sizeH + fontAscent) / 2;\n    g.drawString(text,textLeft,baseline);\n    g.drawImage(pieces[state][RIGHT],x,0,null);\n    x+=PIECE_WIDTH - 1;\n  }\n  menuLeft=sizeW - (16 + pieces[0][MENU].getWidth(this));\n  menuRight=sizeW - 16;\n  g.drawImage(pieces[popup.isVisible() ? SELECTED : UNSELECTED][MENU],menuLeft,0,null);\n  screen.drawImage(offscreen,0,0,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 476,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 46
      },
      "nodeContext" : "offscreen=createImage(imageW,imageH);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "imageH",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 169,
      "startColumnNumber" : 29,
      "endLineNumber" : 169,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 169,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 36
      },
      "nodeContext" : "g.fillRect(0,0,imageW,imageH)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 169,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 37
      },
      "nodeContext" : "g.fillRect(0,0,imageW,imageH);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3095,
        "startLineNumber" : 125,
        "startColumnNumber" : 46,
        "endLineNumber" : 223,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (screen == null)   return;\n  Sketch sketch=editor.getSketch();\n  if (sketch == null)   return;\n  Dimension size=getSize();\n  if ((size.width != sizeW) || (size.height != sizeH)) {\n    if ((size.width > imageW) || (size.height > imageH)) {\n      offscreen=null;\n    }\n else {\n      sizeW=size.width;\n      sizeH=size.height;\n    }\n  }\n  if (offscreen == null) {\n    sizeW=size.width;\n    sizeH=size.height;\n    imageW=sizeW;\n    imageH=sizeH;\n    offscreen=createImage(imageW,imageH);\n  }\n  Graphics g=offscreen.getGraphics();\n  if (font == null) {\n    font=Theme.getFont(\"header.text.font\");\n  }\n  g.setFont(font);\n  metrics=g.getFontMetrics();\n  fontAscent=metrics.getAscent();\n  g.setColor(backgroundColor);\n  g.fillRect(0,0,imageW,imageH);\n  int codeCount=sketch.getCodeCount();\n  if ((tabLeft == null) || (tabLeft.length < codeCount)) {\n    tabLeft=new int[codeCount];\n    tabRight=new int[codeCount];\n  }\n  int x=6;\n  for (int i=0; i < sketch.getCodeCount(); i++) {\n    SketchCode code=sketch.getCode(i);\n    String codeName=code.isExtension(sketch.getHiddenExtensions()) ? code.getPrettyName() : code.getFileName();\n    String text=\"  \" + codeName + (code.isModified() ? \" \\u00A7\" : \"  \");\n    Graphics2D g2=(Graphics2D)g;\n    int textWidth=(int)font.getStringBounds(text,g2.getFontRenderContext()).getWidth();\n    int pieceCount=2 + (textWidth / PIECE_WIDTH);\n    int pieceWidth=pieceCount * PIECE_WIDTH;\n    int state=(code == sketch.getCurrentCode()) ? SELECTED : UNSELECTED;\n    g.drawImage(pieces[state][LEFT],x,0,null);\n    x+=PIECE_WIDTH;\n    int contentLeft=x;\n    tabLeft[i]=x;\n    for (int j=0; j < pieceCount; j++) {\n      g.drawImage(pieces[state][MIDDLE],x,0,null);\n      x+=PIECE_WIDTH;\n    }\n    tabRight[i]=x;\n    int textLeft=contentLeft + (pieceWidth - textWidth) / 2;\n    g.setColor(textColor[state]);\n    int baseline=(sizeH + fontAscent) / 2;\n    g.drawString(text,textLeft,baseline);\n    g.drawImage(pieces[state][RIGHT],x,0,null);\n    x+=PIECE_WIDTH - 1;\n  }\n  menuLeft=sizeW - (16 + pieces[0][MENU].getWidth(this));\n  menuRight=sizeW - 16;\n  g.drawImage(pieces[popup.isVisible() ? SELECTED : UNSELECTED][MENU],menuLeft,0,null);\n  screen.drawImage(offscreen,0,0,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3139,
        "startLineNumber" : 125,
        "startColumnNumber" : 2,
        "endLineNumber" : 223,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void paintComponent(Graphics screen){\n  if (screen == null)   return;\n  Sketch sketch=editor.getSketch();\n  if (sketch == null)   return;\n  Dimension size=getSize();\n  if ((size.width != sizeW) || (size.height != sizeH)) {\n    if ((size.width > imageW) || (size.height > imageH)) {\n      offscreen=null;\n    }\n else {\n      sizeW=size.width;\n      sizeH=size.height;\n    }\n  }\n  if (offscreen == null) {\n    sizeW=size.width;\n    sizeH=size.height;\n    imageW=sizeW;\n    imageH=sizeH;\n    offscreen=createImage(imageW,imageH);\n  }\n  Graphics g=offscreen.getGraphics();\n  if (font == null) {\n    font=Theme.getFont(\"header.text.font\");\n  }\n  g.setFont(font);\n  metrics=g.getFontMetrics();\n  fontAscent=metrics.getAscent();\n  g.setColor(backgroundColor);\n  g.fillRect(0,0,imageW,imageH);\n  int codeCount=sketch.getCodeCount();\n  if ((tabLeft == null) || (tabLeft.length < codeCount)) {\n    tabLeft=new int[codeCount];\n    tabRight=new int[codeCount];\n  }\n  int x=6;\n  for (int i=0; i < sketch.getCodeCount(); i++) {\n    SketchCode code=sketch.getCode(i);\n    String codeName=code.isExtension(sketch.getHiddenExtensions()) ? code.getPrettyName() : code.getFileName();\n    String text=\"  \" + codeName + (code.isModified() ? \" \\u00A7\" : \"  \");\n    Graphics2D g2=(Graphics2D)g;\n    int textWidth=(int)font.getStringBounds(text,g2.getFontRenderContext()).getWidth();\n    int pieceCount=2 + (textWidth / PIECE_WIDTH);\n    int pieceWidth=pieceCount * PIECE_WIDTH;\n    int state=(code == sketch.getCurrentCode()) ? SELECTED : UNSELECTED;\n    g.drawImage(pieces[state][LEFT],x,0,null);\n    x+=PIECE_WIDTH;\n    int contentLeft=x;\n    tabLeft[i]=x;\n    for (int j=0; j < pieceCount; j++) {\n      g.drawImage(pieces[state][MIDDLE],x,0,null);\n      x+=PIECE_WIDTH;\n    }\n    tabRight[i]=x;\n    int textLeft=contentLeft + (pieceWidth - textWidth) / 2;\n    g.setColor(textColor[state]);\n    int baseline=(sizeH + fontAscent) / 2;\n    g.drawString(text,textLeft,baseline);\n    g.drawImage(pieces[state][RIGHT],x,0,null);\n    x+=PIECE_WIDTH - 1;\n  }\n  menuLeft=sizeW - (16 + pieces[0][MENU].getWidth(this));\n  menuRight=sizeW - 16;\n  g.drawImage(pieces[popup.isVisible() ? SELECTED : UNSELECTED][MENU],menuLeft,0,null);\n  screen.drawImage(offscreen,0,0,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 476,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 169,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 37
      },
      "nodeContext" : "g.fillRect(0,0,imageW,imageH);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 135,
    "startColumnNumber" : 50,
    "endLineNumber" : 135,
    "endColumnNumber" : 56
  }, {
    "charLength" : 6,
    "startLineNumber" : 151,
    "startColumnNumber" : 38,
    "endLineNumber" : 151,
    "endColumnNumber" : 44
  }, {
    "charLength" : 6,
    "startLineNumber" : 169,
    "startColumnNumber" : 29,
    "endLineNumber" : 169,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}