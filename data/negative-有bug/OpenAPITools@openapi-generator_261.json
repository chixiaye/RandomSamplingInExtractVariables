{
  "id" : 261,
  "expression" : "this.additionalProperties.get(SPEC_DIR)",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AsciidocDocumentationCodegen.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.additionalProperties.get(SPEC_DIR)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 328,
      "startColumnNumber" : 40,
      "endLineNumber" : 328,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 328,
        "startColumnNumber" : 25,
        "endLineNumber" : 328,
        "endColumnNumber" : 80
      },
      "nodeContext" : "String.valueOf(this.additionalProperties.get(SPEC_DIR))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 328,
        "startColumnNumber" : 15,
        "endLineNumber" : 328,
        "endColumnNumber" : 80
      },
      "nodeContext" : "specDir=String.valueOf(this.additionalProperties.get(SPEC_DIR))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 328,
        "startColumnNumber" : 8,
        "endLineNumber" : 328,
        "endColumnNumber" : 81
      },
      "nodeContext" : "String specDir=String.valueOf(this.additionalProperties.get(SPEC_DIR));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1437,
        "startLineNumber" : 325,
        "startColumnNumber" : 30,
        "endLineNumber" : 352,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.processOpts();\n  String specDir=String.valueOf(this.additionalProperties.get(SPEC_DIR));\n  if (!Files.isDirectory(Paths.get(specDir))) {\n    LOGGER.warn(\"base part for include markup lambda not found: {} as {}\",specDir,Paths.get(specDir).toAbsolutePath());\n  }\n  this.includeSpecMarkupLambda=new IncludeMarkupLambda(SPEC_DIR,specDir);\n  additionalProperties.put(\"specinclude\",this.includeSpecMarkupLambda);\n  String snippetDir=String.valueOf(this.additionalProperties.get(SNIPPET_DIR));\n  if (!Files.isDirectory(Paths.get(snippetDir))) {\n    LOGGER.warn(\"base part for include markup lambda not found: {} as {}\",snippetDir,Paths.get(snippetDir).toAbsolutePath());\n  }\n  this.includeSnippetMarkupLambda=new IncludeMarkupLambda(SNIPPET_DIR,snippetDir);\n  additionalProperties.put(\"snippetinclude\",this.includeSnippetMarkupLambda);\n  this.linkSnippetMarkupLambda=new LinkMarkupLambda(snippetDir);\n  additionalProperties.put(\"snippetlink\",this.linkSnippetMarkupLambda);\n  processBooleanFlag(HEADER_ATTRIBUTES_FLAG,headerAttributes);\n  processBooleanFlag(USE_INTRODUCTION_FLAG,useIntroduction);\n  processBooleanFlag(SKIP_EXAMPLES_FLAG,skipExamples);\n  processBooleanFlag(USE_METHOD_AND_PATH_FLAG,useMethodAndPath);\n  processBooleanFlag(USE_TABLE_TITLES_FLAG,useTableTitles);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1477,
        "startLineNumber" : 324,
        "startColumnNumber" : 4,
        "endLineNumber" : 352,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void processOpts(){\n  super.processOpts();\n  String specDir=String.valueOf(this.additionalProperties.get(SPEC_DIR));\n  if (!Files.isDirectory(Paths.get(specDir))) {\n    LOGGER.warn(\"base part for include markup lambda not found: {} as {}\",specDir,Paths.get(specDir).toAbsolutePath());\n  }\n  this.includeSpecMarkupLambda=new IncludeMarkupLambda(SPEC_DIR,specDir);\n  additionalProperties.put(\"specinclude\",this.includeSpecMarkupLambda);\n  String snippetDir=String.valueOf(this.additionalProperties.get(SNIPPET_DIR));\n  if (!Files.isDirectory(Paths.get(snippetDir))) {\n    LOGGER.warn(\"base part for include markup lambda not found: {} as {}\",snippetDir,Paths.get(snippetDir).toAbsolutePath());\n  }\n  this.includeSnippetMarkupLambda=new IncludeMarkupLambda(SNIPPET_DIR,snippetDir);\n  additionalProperties.put(\"snippetinclude\",this.includeSnippetMarkupLambda);\n  this.linkSnippetMarkupLambda=new LinkMarkupLambda(snippetDir);\n  additionalProperties.put(\"snippetlink\",this.linkSnippetMarkupLambda);\n  processBooleanFlag(HEADER_ATTRIBUTES_FLAG,headerAttributes);\n  processBooleanFlag(USE_INTRODUCTION_FLAG,useIntroduction);\n  processBooleanFlag(SKIP_EXAMPLES_FLAG,skipExamples);\n  processBooleanFlag(USE_METHOD_AND_PATH_FLAG,useMethodAndPath);\n  processBooleanFlag(USE_TABLE_TITLES_FLAG,useTableTitles);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 328,
        "startColumnNumber" : 8,
        "endLineNumber" : 328,
        "endColumnNumber" : 81
      },
      "nodeContext" : "String specDir=String.valueOf(this.additionalProperties.get(SPEC_DIR));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 328,
    "startColumnNumber" : 40,
    "endLineNumber" : 328,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}