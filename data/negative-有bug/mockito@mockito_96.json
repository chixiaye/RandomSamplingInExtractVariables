{
  "id" : 96,
  "expression" : "mock.listReturningMethod().isEmpty()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/stubbing/SmartNullsStubbingTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mock.listReturningMethod().isEmpty()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 105,
      "startColumnNumber" : 27,
      "endLineNumber" : 105,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertEquals(true,mock.listReturningMethod().isEmpty())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertEquals(true,mock.listReturningMethod().isEmpty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 100,
        "startColumnNumber" : 83,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  IMethods mock=mock(IMethods.class,RETURNS_SMART_NULLS);\n  assertEquals(\"\",mock.stringReturningMethod());\n  assertEquals(0,mock.intReturningMethod());\n  assertEquals(true,mock.listReturningMethod().isEmpty());\n  assertEquals(0,mock.arrayReturningMethod().length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnOrdinaryEmptyValuesForOrdinaryTypes() throws Exception {\n  IMethods mock=mock(IMethods.class,RETURNS_SMART_NULLS);\n  assertEquals(\"\",mock.stringReturningMethod());\n  assertEquals(0,mock.intReturningMethod());\n  assertEquals(true,mock.listReturningMethod().isEmpty());\n  assertEquals(0,mock.arrayReturningMethod().length);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertEquals(true,mock.listReturningMethod().isEmpty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 105,
    "startColumnNumber" : 27,
    "endLineNumber" : 105,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}