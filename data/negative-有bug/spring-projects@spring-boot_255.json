{
  "id" : 255,
  "expression" : "\"@MockBean can only be used on bean factories that \" + \"implement BeanDefinitionRegistry\"",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/mock/mockito/MockitoPostProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"@MockBean can only be used on bean factories that \" + \"implement BeanDefinitionRegistry\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 95,
      "startLineNumber" : 129,
      "startColumnNumber" : 4,
      "endLineNumber" : 130,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 130,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Assert.isInstanceOf(BeanDefinitionRegistry.class,beanFactory,\"@MockBean can only be used on bean factories that \" + \"implement BeanDefinitionRegistry\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 130,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Assert.isInstanceOf(BeanDefinitionRegistry.class,beanFactory,\"@MockBean can only be used on bean factories that \" + \"implement BeanDefinitionRegistry\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 127,
        "startColumnNumber" : 25,
        "endLineNumber" : 132,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.isInstanceOf(BeanDefinitionRegistry.class,beanFactory,\"@MockBean can only be used on bean factories that \" + \"implement BeanDefinitionRegistry\");\n  postProcessBeanFactory(beanFactory,(BeanDefinitionRegistry)beanFactory);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 125,
        "startColumnNumber" : 1,
        "endLineNumber" : 132,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {\n  Assert.isInstanceOf(BeanDefinitionRegistry.class,beanFactory,\"@MockBean can only be used on bean factories that \" + \"implement BeanDefinitionRegistry\");\n  postProcessBeanFactory(beanFactory,(BeanDefinitionRegistry)beanFactory);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 32,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 130,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Assert.isInstanceOf(BeanDefinitionRegistry.class,beanFactory,\"@MockBean can only be used on bean factories that \" + \"implement BeanDefinitionRegistry\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 12,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 95,
    "startLineNumber" : 129,
    "startColumnNumber" : 4,
    "endLineNumber" : 130,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}