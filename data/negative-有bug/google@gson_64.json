{
  "id" : 64,
  "expression" : "sb.append('[').append(startValue).append(',')",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/functional/ArrayTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sb.append('[').append(startValue).append(',')",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 154,
      "startColumnNumber" : 6,
      "endLineNumber" : 154,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 154,
        "startColumnNumber" : 6,
        "endLineNumber" : 154,
        "endColumnNumber" : 74
      },
      "nodeContext" : "sb.append('[').append(startValue).append(',').append(startValue + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 154,
        "startColumnNumber" : 6,
        "endLineNumber" : 154,
        "endColumnNumber" : 86
      },
      "nodeContext" : "sb.append('[').append(startValue).append(',').append(startValue + 1).append(']')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 154,
        "startColumnNumber" : 6,
        "endLineNumber" : 154,
        "endColumnNumber" : 87
      },
      "nodeContext" : "sb.append('[').append(startValue).append(',').append(startValue + 1).append(']');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 152,
        "startColumnNumber" : 40,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int startValue=(3 * i) + 1;\n  sb.append('[').append(startValue).append(',').append(startValue + 1).append(']');\n  ArrayList<Integer> tmpList=new ArrayList<Integer>();\n  tmpList.add(startValue);\n  tmpList.add(startValue + 1);\n  arrayOfCollection[i]=tmpList;\n  if (i < arraySize - 1) {\n    sb.append(',');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < arraySize; ++i) {\n  int startValue=(3 * i) + 1;\n  sb.append('[').append(startValue).append(',').append(startValue + 1).append(']');\n  ArrayList<Integer> tmpList=new ArrayList<Integer>();\n  tmpList.add(startValue);\n  tmpList.add(startValue + 1);\n  arrayOfCollection[i]=tmpList;\n  if (i < arraySize - 1) {\n    sb.append(',');\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 85,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 756,
        "startLineNumber" : 146,
        "startColumnNumber" : 68,
        "endLineNumber" : 168,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder(\"[\");\n  int arraySize=3;\n  Type typeToSerialize=new TypeToken<Collection<Integer>[]>(){\n  }\n.getType();\n  Collection<Integer>[] arrayOfCollection=new ArrayList[arraySize];\n  for (int i=0; i < arraySize; ++i) {\n    int startValue=(3 * i) + 1;\n    sb.append('[').append(startValue).append(',').append(startValue + 1).append(']');\n    ArrayList<Integer> tmpList=new ArrayList<Integer>();\n    tmpList.add(startValue);\n    tmpList.add(startValue + 1);\n    arrayOfCollection[i]=tmpList;\n    if (i < arraySize - 1) {\n      sb.append(',');\n    }\n  }\n  sb.append(']');\n  String json=gson.toJson(arrayOfCollection,typeToSerialize);\n  assertEquals(sb.toString(),json);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 855,
        "startLineNumber" : 145,
        "startColumnNumber" : 2,
        "endLineNumber" : 168,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public void testArrayOfCollectionSerialization() throws Exception {\n  StringBuilder sb=new StringBuilder(\"[\");\n  int arraySize=3;\n  Type typeToSerialize=new TypeToken<Collection<Integer>[]>(){\n  }\n.getType();\n  Collection<Integer>[] arrayOfCollection=new ArrayList[arraySize];\n  for (int i=0; i < arraySize; ++i) {\n    int startValue=(3 * i) + 1;\n    sb.append('[').append(startValue).append(',').append(startValue + 1).append(']');\n    ArrayList<Integer> tmpList=new ArrayList<Integer>();\n    tmpList.add(startValue);\n    tmpList.add(startValue + 1);\n    arrayOfCollection[i]=tmpList;\n    if (i < arraySize - 1) {\n      sb.append(',');\n    }\n  }\n  sb.append(']');\n  String json=gson.toJson(arrayOfCollection,typeToSerialize);\n  assertEquals(sb.toString(),json);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 154,
        "startColumnNumber" : 6,
        "endLineNumber" : 154,
        "endColumnNumber" : 87
      },
      "nodeContext" : "sb.append('[').append(startValue).append(',').append(startValue + 1).append(']');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 154,
    "startColumnNumber" : 6,
    "endLineNumber" : 154,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}