{
  "id" : 487,
  "expression" : "patchOperationList",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/dexpatcher/DexPatchGenerator.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "patchOperationList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 569,
      "startColumnNumber" : 55,
      "endLineNumber" : 569,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 569,
        "startColumnNumber" : 55,
        "endLineNumber" : 569,
        "endColumnNumber" : 80
      },
      "nodeContext" : "patchOperationList.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 569,
        "startColumnNumber" : 39,
        "endLineNumber" : 569,
        "endColumnNumber" : 81
      },
      "nodeContext" : "new ArrayList<>(patchOperationList.size())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 569,
        "startColumnNumber" : 22,
        "endLineNumber" : 569,
        "endColumnNumber" : 81
      },
      "nodeContext" : "delOpIndexList=new ArrayList<>(patchOperationList.size())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 569,
        "startColumnNumber" : 8,
        "endLineNumber" : 569,
        "endColumnNumber" : 82
      },
      "nodeContext" : "List<Integer> delOpIndexList=new ArrayList<>(patchOperationList.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4053,
        "startLineNumber" : 568,
        "startColumnNumber" : 6,
        "endLineNumber" : 672,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Integer> delOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> addOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> replaceOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<T> newItemList=new ArrayList<>(patchOperationList.size());\n  for (  PatchOperation<T> patchOperation : patchOperationList) {\nswitch (patchOperation.op) {\ncase PatchOperation.OP_DEL:{\n        delOpIndexList.add(patchOperation.index);\n        break;\n      }\ncase PatchOperation.OP_ADD:{\n      addOpIndexList.add(patchOperation.index);\n      newItemList.add(patchOperation.newItem);\n      break;\n    }\ncase PatchOperation.OP_REPLACE:{\n    replaceOpIndexList.add(patchOperation.index);\n    newItemList.add(patchOperation.newItem);\n    break;\n  }\ndefault:break;\n}\n}\nbuffer.writeUleb128(delOpIndexList.size());\nint lastIndex=0;\nfor (Integer index : delOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(addOpIndexList.size());\nlastIndex=0;\nfor (Integer index : addOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(replaceOpIndexList.size());\nlastIndex=0;\nfor (Integer index : replaceOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nfor (T newItem : newItemList) {\nif (newItem instanceof StringData) {\nbuffer.writeStringData((StringData)newItem);\n}\n else if (newItem instanceof Integer) {\nbuffer.writeInt((Integer)newItem);\n}\n else if (newItem instanceof TypeList) {\nbuffer.writeTypeList((TypeList)newItem);\n}\n else if (newItem instanceof ProtoId) {\nbuffer.writeProtoId((ProtoId)newItem);\n}\n else if (newItem instanceof FieldId) {\nbuffer.writeFieldId((FieldId)newItem);\n}\n else if (newItem instanceof MethodId) {\nbuffer.writeMethodId((MethodId)newItem);\n}\n else if (newItem instanceof Annotation) {\nbuffer.writeAnnotation((Annotation)newItem);\n}\n else if (newItem instanceof AnnotationSet) {\nbuffer.writeAnnotationSet((AnnotationSet)newItem);\n}\n else if (newItem instanceof AnnotationSetRefList) {\nbuffer.writeAnnotationSetRefList((AnnotationSetRefList)newItem);\n}\n else if (newItem instanceof AnnotationsDirectory) {\nbuffer.writeAnnotationsDirectory((AnnotationsDirectory)newItem);\n}\n else if (newItem instanceof DebugInfoItem) {\nbuffer.writeDebugInfoItem((DebugInfoItem)newItem);\n}\n else if (newItem instanceof Code) {\nbuffer.writeCode((Code)newItem);\n}\n else if (newItem instanceof ClassData) {\nbuffer.writeClassData((ClassData)newItem);\n}\n else if (newItem instanceof EncodedValue) {\nbuffer.writeEncodedArray((EncodedValue)newItem);\n}\n else if (newItem instanceof ClassDef) {\nbuffer.writeClassDef((ClassDef)newItem);\n}\n else {\nthrow new IllegalStateException(\"Unknown item type: \" + newItem.getClass());\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 445,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4197,
        "startLineNumber" : 566,
        "startColumnNumber" : 4,
        "endLineNumber" : 672,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private <T extends Comparable<T>>void writePatchOperations(DexDataBuffer buffer,List<PatchOperation<T>> patchOperationList){\n  List<Integer> delOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> addOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> replaceOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<T> newItemList=new ArrayList<>(patchOperationList.size());\n  for (  PatchOperation<T> patchOperation : patchOperationList) {\nswitch (patchOperation.op) {\ncase PatchOperation.OP_DEL:{\n        delOpIndexList.add(patchOperation.index);\n        break;\n      }\ncase PatchOperation.OP_ADD:{\n      addOpIndexList.add(patchOperation.index);\n      newItemList.add(patchOperation.newItem);\n      break;\n    }\ncase PatchOperation.OP_REPLACE:{\n    replaceOpIndexList.add(patchOperation.index);\n    newItemList.add(patchOperation.newItem);\n    break;\n  }\ndefault:break;\n}\n}\nbuffer.writeUleb128(delOpIndexList.size());\nint lastIndex=0;\nfor (Integer index : delOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(addOpIndexList.size());\nlastIndex=0;\nfor (Integer index : addOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(replaceOpIndexList.size());\nlastIndex=0;\nfor (Integer index : replaceOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nfor (T newItem : newItemList) {\nif (newItem instanceof StringData) {\nbuffer.writeStringData((StringData)newItem);\n}\n else if (newItem instanceof Integer) {\nbuffer.writeInt((Integer)newItem);\n}\n else if (newItem instanceof TypeList) {\nbuffer.writeTypeList((TypeList)newItem);\n}\n else if (newItem instanceof ProtoId) {\nbuffer.writeProtoId((ProtoId)newItem);\n}\n else if (newItem instanceof FieldId) {\nbuffer.writeFieldId((FieldId)newItem);\n}\n else if (newItem instanceof MethodId) {\nbuffer.writeMethodId((MethodId)newItem);\n}\n else if (newItem instanceof Annotation) {\nbuffer.writeAnnotation((Annotation)newItem);\n}\n else if (newItem instanceof AnnotationSet) {\nbuffer.writeAnnotationSet((AnnotationSet)newItem);\n}\n else if (newItem instanceof AnnotationSetRefList) {\nbuffer.writeAnnotationSetRefList((AnnotationSetRefList)newItem);\n}\n else if (newItem instanceof AnnotationsDirectory) {\nbuffer.writeAnnotationsDirectory((AnnotationsDirectory)newItem);\n}\n else if (newItem instanceof DebugInfoItem) {\nbuffer.writeDebugInfoItem((DebugInfoItem)newItem);\n}\n else if (newItem instanceof Code) {\nbuffer.writeCode((Code)newItem);\n}\n else if (newItem instanceof ClassData) {\nbuffer.writeClassData((ClassData)newItem);\n}\n else if (newItem instanceof EncodedValue) {\nbuffer.writeEncodedArray((EncodedValue)newItem);\n}\n else if (newItem instanceof ClassDef) {\nbuffer.writeClassDef((ClassDef)newItem);\n}\n else {\nthrow new IllegalStateException(\"Unknown item type: \" + newItem.getClass());\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 470,
      "astHeight" : 25
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 569,
        "startColumnNumber" : 8,
        "endLineNumber" : 569,
        "endColumnNumber" : 82
      },
      "nodeContext" : "List<Integer> delOpIndexList=new ArrayList<>(patchOperationList.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.tencent.tinker.commons.dexpatcher.struct.PatchOperation<T>>"
  }, {
    "nodeContext" : "patchOperationList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 570,
      "startColumnNumber" : 55,
      "endLineNumber" : 570,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 570,
        "startColumnNumber" : 55,
        "endLineNumber" : 570,
        "endColumnNumber" : 80
      },
      "nodeContext" : "patchOperationList.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 570,
        "startColumnNumber" : 39,
        "endLineNumber" : 570,
        "endColumnNumber" : 81
      },
      "nodeContext" : "new ArrayList<>(patchOperationList.size())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 570,
        "startColumnNumber" : 22,
        "endLineNumber" : 570,
        "endColumnNumber" : 81
      },
      "nodeContext" : "addOpIndexList=new ArrayList<>(patchOperationList.size())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 570,
        "startColumnNumber" : 8,
        "endLineNumber" : 570,
        "endColumnNumber" : 82
      },
      "nodeContext" : "List<Integer> addOpIndexList=new ArrayList<>(patchOperationList.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4053,
        "startLineNumber" : 568,
        "startColumnNumber" : 6,
        "endLineNumber" : 672,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Integer> delOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> addOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> replaceOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<T> newItemList=new ArrayList<>(patchOperationList.size());\n  for (  PatchOperation<T> patchOperation : patchOperationList) {\nswitch (patchOperation.op) {\ncase PatchOperation.OP_DEL:{\n        delOpIndexList.add(patchOperation.index);\n        break;\n      }\ncase PatchOperation.OP_ADD:{\n      addOpIndexList.add(patchOperation.index);\n      newItemList.add(patchOperation.newItem);\n      break;\n    }\ncase PatchOperation.OP_REPLACE:{\n    replaceOpIndexList.add(patchOperation.index);\n    newItemList.add(patchOperation.newItem);\n    break;\n  }\ndefault:break;\n}\n}\nbuffer.writeUleb128(delOpIndexList.size());\nint lastIndex=0;\nfor (Integer index : delOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(addOpIndexList.size());\nlastIndex=0;\nfor (Integer index : addOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(replaceOpIndexList.size());\nlastIndex=0;\nfor (Integer index : replaceOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nfor (T newItem : newItemList) {\nif (newItem instanceof StringData) {\nbuffer.writeStringData((StringData)newItem);\n}\n else if (newItem instanceof Integer) {\nbuffer.writeInt((Integer)newItem);\n}\n else if (newItem instanceof TypeList) {\nbuffer.writeTypeList((TypeList)newItem);\n}\n else if (newItem instanceof ProtoId) {\nbuffer.writeProtoId((ProtoId)newItem);\n}\n else if (newItem instanceof FieldId) {\nbuffer.writeFieldId((FieldId)newItem);\n}\n else if (newItem instanceof MethodId) {\nbuffer.writeMethodId((MethodId)newItem);\n}\n else if (newItem instanceof Annotation) {\nbuffer.writeAnnotation((Annotation)newItem);\n}\n else if (newItem instanceof AnnotationSet) {\nbuffer.writeAnnotationSet((AnnotationSet)newItem);\n}\n else if (newItem instanceof AnnotationSetRefList) {\nbuffer.writeAnnotationSetRefList((AnnotationSetRefList)newItem);\n}\n else if (newItem instanceof AnnotationsDirectory) {\nbuffer.writeAnnotationsDirectory((AnnotationsDirectory)newItem);\n}\n else if (newItem instanceof DebugInfoItem) {\nbuffer.writeDebugInfoItem((DebugInfoItem)newItem);\n}\n else if (newItem instanceof Code) {\nbuffer.writeCode((Code)newItem);\n}\n else if (newItem instanceof ClassData) {\nbuffer.writeClassData((ClassData)newItem);\n}\n else if (newItem instanceof EncodedValue) {\nbuffer.writeEncodedArray((EncodedValue)newItem);\n}\n else if (newItem instanceof ClassDef) {\nbuffer.writeClassDef((ClassDef)newItem);\n}\n else {\nthrow new IllegalStateException(\"Unknown item type: \" + newItem.getClass());\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 445,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4197,
        "startLineNumber" : 566,
        "startColumnNumber" : 4,
        "endLineNumber" : 672,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private <T extends Comparable<T>>void writePatchOperations(DexDataBuffer buffer,List<PatchOperation<T>> patchOperationList){\n  List<Integer> delOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> addOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> replaceOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<T> newItemList=new ArrayList<>(patchOperationList.size());\n  for (  PatchOperation<T> patchOperation : patchOperationList) {\nswitch (patchOperation.op) {\ncase PatchOperation.OP_DEL:{\n        delOpIndexList.add(patchOperation.index);\n        break;\n      }\ncase PatchOperation.OP_ADD:{\n      addOpIndexList.add(patchOperation.index);\n      newItemList.add(patchOperation.newItem);\n      break;\n    }\ncase PatchOperation.OP_REPLACE:{\n    replaceOpIndexList.add(patchOperation.index);\n    newItemList.add(patchOperation.newItem);\n    break;\n  }\ndefault:break;\n}\n}\nbuffer.writeUleb128(delOpIndexList.size());\nint lastIndex=0;\nfor (Integer index : delOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(addOpIndexList.size());\nlastIndex=0;\nfor (Integer index : addOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(replaceOpIndexList.size());\nlastIndex=0;\nfor (Integer index : replaceOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nfor (T newItem : newItemList) {\nif (newItem instanceof StringData) {\nbuffer.writeStringData((StringData)newItem);\n}\n else if (newItem instanceof Integer) {\nbuffer.writeInt((Integer)newItem);\n}\n else if (newItem instanceof TypeList) {\nbuffer.writeTypeList((TypeList)newItem);\n}\n else if (newItem instanceof ProtoId) {\nbuffer.writeProtoId((ProtoId)newItem);\n}\n else if (newItem instanceof FieldId) {\nbuffer.writeFieldId((FieldId)newItem);\n}\n else if (newItem instanceof MethodId) {\nbuffer.writeMethodId((MethodId)newItem);\n}\n else if (newItem instanceof Annotation) {\nbuffer.writeAnnotation((Annotation)newItem);\n}\n else if (newItem instanceof AnnotationSet) {\nbuffer.writeAnnotationSet((AnnotationSet)newItem);\n}\n else if (newItem instanceof AnnotationSetRefList) {\nbuffer.writeAnnotationSetRefList((AnnotationSetRefList)newItem);\n}\n else if (newItem instanceof AnnotationsDirectory) {\nbuffer.writeAnnotationsDirectory((AnnotationsDirectory)newItem);\n}\n else if (newItem instanceof DebugInfoItem) {\nbuffer.writeDebugInfoItem((DebugInfoItem)newItem);\n}\n else if (newItem instanceof Code) {\nbuffer.writeCode((Code)newItem);\n}\n else if (newItem instanceof ClassData) {\nbuffer.writeClassData((ClassData)newItem);\n}\n else if (newItem instanceof EncodedValue) {\nbuffer.writeEncodedArray((EncodedValue)newItem);\n}\n else if (newItem instanceof ClassDef) {\nbuffer.writeClassDef((ClassDef)newItem);\n}\n else {\nthrow new IllegalStateException(\"Unknown item type: \" + newItem.getClass());\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 470,
      "astHeight" : 25
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 570,
        "startColumnNumber" : 8,
        "endLineNumber" : 570,
        "endColumnNumber" : 82
      },
      "nodeContext" : "List<Integer> addOpIndexList=new ArrayList<>(patchOperationList.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.tencent.tinker.commons.dexpatcher.struct.PatchOperation<T>>"
  }, {
    "nodeContext" : "patchOperationList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 571,
      "startColumnNumber" : 59,
      "endLineNumber" : 571,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 571,
        "startColumnNumber" : 59,
        "endLineNumber" : 571,
        "endColumnNumber" : 84
      },
      "nodeContext" : "patchOperationList.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 571,
        "startColumnNumber" : 43,
        "endLineNumber" : 571,
        "endColumnNumber" : 85
      },
      "nodeContext" : "new ArrayList<>(patchOperationList.size())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 571,
        "startColumnNumber" : 22,
        "endLineNumber" : 571,
        "endColumnNumber" : 85
      },
      "nodeContext" : "replaceOpIndexList=new ArrayList<>(patchOperationList.size())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 571,
        "startColumnNumber" : 8,
        "endLineNumber" : 571,
        "endColumnNumber" : 86
      },
      "nodeContext" : "List<Integer> replaceOpIndexList=new ArrayList<>(patchOperationList.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4053,
        "startLineNumber" : 568,
        "startColumnNumber" : 6,
        "endLineNumber" : 672,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Integer> delOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> addOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> replaceOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<T> newItemList=new ArrayList<>(patchOperationList.size());\n  for (  PatchOperation<T> patchOperation : patchOperationList) {\nswitch (patchOperation.op) {\ncase PatchOperation.OP_DEL:{\n        delOpIndexList.add(patchOperation.index);\n        break;\n      }\ncase PatchOperation.OP_ADD:{\n      addOpIndexList.add(patchOperation.index);\n      newItemList.add(patchOperation.newItem);\n      break;\n    }\ncase PatchOperation.OP_REPLACE:{\n    replaceOpIndexList.add(patchOperation.index);\n    newItemList.add(patchOperation.newItem);\n    break;\n  }\ndefault:break;\n}\n}\nbuffer.writeUleb128(delOpIndexList.size());\nint lastIndex=0;\nfor (Integer index : delOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(addOpIndexList.size());\nlastIndex=0;\nfor (Integer index : addOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(replaceOpIndexList.size());\nlastIndex=0;\nfor (Integer index : replaceOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nfor (T newItem : newItemList) {\nif (newItem instanceof StringData) {\nbuffer.writeStringData((StringData)newItem);\n}\n else if (newItem instanceof Integer) {\nbuffer.writeInt((Integer)newItem);\n}\n else if (newItem instanceof TypeList) {\nbuffer.writeTypeList((TypeList)newItem);\n}\n else if (newItem instanceof ProtoId) {\nbuffer.writeProtoId((ProtoId)newItem);\n}\n else if (newItem instanceof FieldId) {\nbuffer.writeFieldId((FieldId)newItem);\n}\n else if (newItem instanceof MethodId) {\nbuffer.writeMethodId((MethodId)newItem);\n}\n else if (newItem instanceof Annotation) {\nbuffer.writeAnnotation((Annotation)newItem);\n}\n else if (newItem instanceof AnnotationSet) {\nbuffer.writeAnnotationSet((AnnotationSet)newItem);\n}\n else if (newItem instanceof AnnotationSetRefList) {\nbuffer.writeAnnotationSetRefList((AnnotationSetRefList)newItem);\n}\n else if (newItem instanceof AnnotationsDirectory) {\nbuffer.writeAnnotationsDirectory((AnnotationsDirectory)newItem);\n}\n else if (newItem instanceof DebugInfoItem) {\nbuffer.writeDebugInfoItem((DebugInfoItem)newItem);\n}\n else if (newItem instanceof Code) {\nbuffer.writeCode((Code)newItem);\n}\n else if (newItem instanceof ClassData) {\nbuffer.writeClassData((ClassData)newItem);\n}\n else if (newItem instanceof EncodedValue) {\nbuffer.writeEncodedArray((EncodedValue)newItem);\n}\n else if (newItem instanceof ClassDef) {\nbuffer.writeClassDef((ClassDef)newItem);\n}\n else {\nthrow new IllegalStateException(\"Unknown item type: \" + newItem.getClass());\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 445,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4197,
        "startLineNumber" : 566,
        "startColumnNumber" : 4,
        "endLineNumber" : 672,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private <T extends Comparable<T>>void writePatchOperations(DexDataBuffer buffer,List<PatchOperation<T>> patchOperationList){\n  List<Integer> delOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> addOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> replaceOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<T> newItemList=new ArrayList<>(patchOperationList.size());\n  for (  PatchOperation<T> patchOperation : patchOperationList) {\nswitch (patchOperation.op) {\ncase PatchOperation.OP_DEL:{\n        delOpIndexList.add(patchOperation.index);\n        break;\n      }\ncase PatchOperation.OP_ADD:{\n      addOpIndexList.add(patchOperation.index);\n      newItemList.add(patchOperation.newItem);\n      break;\n    }\ncase PatchOperation.OP_REPLACE:{\n    replaceOpIndexList.add(patchOperation.index);\n    newItemList.add(patchOperation.newItem);\n    break;\n  }\ndefault:break;\n}\n}\nbuffer.writeUleb128(delOpIndexList.size());\nint lastIndex=0;\nfor (Integer index : delOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(addOpIndexList.size());\nlastIndex=0;\nfor (Integer index : addOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(replaceOpIndexList.size());\nlastIndex=0;\nfor (Integer index : replaceOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nfor (T newItem : newItemList) {\nif (newItem instanceof StringData) {\nbuffer.writeStringData((StringData)newItem);\n}\n else if (newItem instanceof Integer) {\nbuffer.writeInt((Integer)newItem);\n}\n else if (newItem instanceof TypeList) {\nbuffer.writeTypeList((TypeList)newItem);\n}\n else if (newItem instanceof ProtoId) {\nbuffer.writeProtoId((ProtoId)newItem);\n}\n else if (newItem instanceof FieldId) {\nbuffer.writeFieldId((FieldId)newItem);\n}\n else if (newItem instanceof MethodId) {\nbuffer.writeMethodId((MethodId)newItem);\n}\n else if (newItem instanceof Annotation) {\nbuffer.writeAnnotation((Annotation)newItem);\n}\n else if (newItem instanceof AnnotationSet) {\nbuffer.writeAnnotationSet((AnnotationSet)newItem);\n}\n else if (newItem instanceof AnnotationSetRefList) {\nbuffer.writeAnnotationSetRefList((AnnotationSetRefList)newItem);\n}\n else if (newItem instanceof AnnotationsDirectory) {\nbuffer.writeAnnotationsDirectory((AnnotationsDirectory)newItem);\n}\n else if (newItem instanceof DebugInfoItem) {\nbuffer.writeDebugInfoItem((DebugInfoItem)newItem);\n}\n else if (newItem instanceof Code) {\nbuffer.writeCode((Code)newItem);\n}\n else if (newItem instanceof ClassData) {\nbuffer.writeClassData((ClassData)newItem);\n}\n else if (newItem instanceof EncodedValue) {\nbuffer.writeEncodedArray((EncodedValue)newItem);\n}\n else if (newItem instanceof ClassDef) {\nbuffer.writeClassDef((ClassDef)newItem);\n}\n else {\nthrow new IllegalStateException(\"Unknown item type: \" + newItem.getClass());\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 470,
      "astHeight" : 25
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 571,
        "startColumnNumber" : 8,
        "endLineNumber" : 571,
        "endColumnNumber" : 86
      },
      "nodeContext" : "List<Integer> replaceOpIndexList=new ArrayList<>(patchOperationList.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.tencent.tinker.commons.dexpatcher.struct.PatchOperation<T>>"
  }, {
    "nodeContext" : "patchOperationList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 572,
      "startColumnNumber" : 46,
      "endLineNumber" : 572,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 572,
        "startColumnNumber" : 46,
        "endLineNumber" : 572,
        "endColumnNumber" : 71
      },
      "nodeContext" : "patchOperationList.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 572,
        "startColumnNumber" : 30,
        "endLineNumber" : 572,
        "endColumnNumber" : 72
      },
      "nodeContext" : "new ArrayList<>(patchOperationList.size())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 572,
        "startColumnNumber" : 16,
        "endLineNumber" : 572,
        "endColumnNumber" : 72
      },
      "nodeContext" : "newItemList=new ArrayList<>(patchOperationList.size())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 572,
        "startColumnNumber" : 8,
        "endLineNumber" : 572,
        "endColumnNumber" : 73
      },
      "nodeContext" : "List<T> newItemList=new ArrayList<>(patchOperationList.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4053,
        "startLineNumber" : 568,
        "startColumnNumber" : 6,
        "endLineNumber" : 672,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Integer> delOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> addOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> replaceOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<T> newItemList=new ArrayList<>(patchOperationList.size());\n  for (  PatchOperation<T> patchOperation : patchOperationList) {\nswitch (patchOperation.op) {\ncase PatchOperation.OP_DEL:{\n        delOpIndexList.add(patchOperation.index);\n        break;\n      }\ncase PatchOperation.OP_ADD:{\n      addOpIndexList.add(patchOperation.index);\n      newItemList.add(patchOperation.newItem);\n      break;\n    }\ncase PatchOperation.OP_REPLACE:{\n    replaceOpIndexList.add(patchOperation.index);\n    newItemList.add(patchOperation.newItem);\n    break;\n  }\ndefault:break;\n}\n}\nbuffer.writeUleb128(delOpIndexList.size());\nint lastIndex=0;\nfor (Integer index : delOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(addOpIndexList.size());\nlastIndex=0;\nfor (Integer index : addOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(replaceOpIndexList.size());\nlastIndex=0;\nfor (Integer index : replaceOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nfor (T newItem : newItemList) {\nif (newItem instanceof StringData) {\nbuffer.writeStringData((StringData)newItem);\n}\n else if (newItem instanceof Integer) {\nbuffer.writeInt((Integer)newItem);\n}\n else if (newItem instanceof TypeList) {\nbuffer.writeTypeList((TypeList)newItem);\n}\n else if (newItem instanceof ProtoId) {\nbuffer.writeProtoId((ProtoId)newItem);\n}\n else if (newItem instanceof FieldId) {\nbuffer.writeFieldId((FieldId)newItem);\n}\n else if (newItem instanceof MethodId) {\nbuffer.writeMethodId((MethodId)newItem);\n}\n else if (newItem instanceof Annotation) {\nbuffer.writeAnnotation((Annotation)newItem);\n}\n else if (newItem instanceof AnnotationSet) {\nbuffer.writeAnnotationSet((AnnotationSet)newItem);\n}\n else if (newItem instanceof AnnotationSetRefList) {\nbuffer.writeAnnotationSetRefList((AnnotationSetRefList)newItem);\n}\n else if (newItem instanceof AnnotationsDirectory) {\nbuffer.writeAnnotationsDirectory((AnnotationsDirectory)newItem);\n}\n else if (newItem instanceof DebugInfoItem) {\nbuffer.writeDebugInfoItem((DebugInfoItem)newItem);\n}\n else if (newItem instanceof Code) {\nbuffer.writeCode((Code)newItem);\n}\n else if (newItem instanceof ClassData) {\nbuffer.writeClassData((ClassData)newItem);\n}\n else if (newItem instanceof EncodedValue) {\nbuffer.writeEncodedArray((EncodedValue)newItem);\n}\n else if (newItem instanceof ClassDef) {\nbuffer.writeClassDef((ClassDef)newItem);\n}\n else {\nthrow new IllegalStateException(\"Unknown item type: \" + newItem.getClass());\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 445,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4197,
        "startLineNumber" : 566,
        "startColumnNumber" : 4,
        "endLineNumber" : 672,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private <T extends Comparable<T>>void writePatchOperations(DexDataBuffer buffer,List<PatchOperation<T>> patchOperationList){\n  List<Integer> delOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> addOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> replaceOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<T> newItemList=new ArrayList<>(patchOperationList.size());\n  for (  PatchOperation<T> patchOperation : patchOperationList) {\nswitch (patchOperation.op) {\ncase PatchOperation.OP_DEL:{\n        delOpIndexList.add(patchOperation.index);\n        break;\n      }\ncase PatchOperation.OP_ADD:{\n      addOpIndexList.add(patchOperation.index);\n      newItemList.add(patchOperation.newItem);\n      break;\n    }\ncase PatchOperation.OP_REPLACE:{\n    replaceOpIndexList.add(patchOperation.index);\n    newItemList.add(patchOperation.newItem);\n    break;\n  }\ndefault:break;\n}\n}\nbuffer.writeUleb128(delOpIndexList.size());\nint lastIndex=0;\nfor (Integer index : delOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(addOpIndexList.size());\nlastIndex=0;\nfor (Integer index : addOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(replaceOpIndexList.size());\nlastIndex=0;\nfor (Integer index : replaceOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nfor (T newItem : newItemList) {\nif (newItem instanceof StringData) {\nbuffer.writeStringData((StringData)newItem);\n}\n else if (newItem instanceof Integer) {\nbuffer.writeInt((Integer)newItem);\n}\n else if (newItem instanceof TypeList) {\nbuffer.writeTypeList((TypeList)newItem);\n}\n else if (newItem instanceof ProtoId) {\nbuffer.writeProtoId((ProtoId)newItem);\n}\n else if (newItem instanceof FieldId) {\nbuffer.writeFieldId((FieldId)newItem);\n}\n else if (newItem instanceof MethodId) {\nbuffer.writeMethodId((MethodId)newItem);\n}\n else if (newItem instanceof Annotation) {\nbuffer.writeAnnotation((Annotation)newItem);\n}\n else if (newItem instanceof AnnotationSet) {\nbuffer.writeAnnotationSet((AnnotationSet)newItem);\n}\n else if (newItem instanceof AnnotationSetRefList) {\nbuffer.writeAnnotationSetRefList((AnnotationSetRefList)newItem);\n}\n else if (newItem instanceof AnnotationsDirectory) {\nbuffer.writeAnnotationsDirectory((AnnotationsDirectory)newItem);\n}\n else if (newItem instanceof DebugInfoItem) {\nbuffer.writeDebugInfoItem((DebugInfoItem)newItem);\n}\n else if (newItem instanceof Code) {\nbuffer.writeCode((Code)newItem);\n}\n else if (newItem instanceof ClassData) {\nbuffer.writeClassData((ClassData)newItem);\n}\n else if (newItem instanceof EncodedValue) {\nbuffer.writeEncodedArray((EncodedValue)newItem);\n}\n else if (newItem instanceof ClassDef) {\nbuffer.writeClassDef((ClassDef)newItem);\n}\n else {\nthrow new IllegalStateException(\"Unknown item type: \" + newItem.getClass());\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 470,
      "astHeight" : 25
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 572,
        "startColumnNumber" : 8,
        "endLineNumber" : 572,
        "endColumnNumber" : 73
      },
      "nodeContext" : "List<T> newItemList=new ArrayList<>(patchOperationList.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.tencent.tinker.commons.dexpatcher.struct.PatchOperation<T>>"
  }, {
    "nodeContext" : "patchOperationList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 574,
      "startColumnNumber" : 48,
      "endLineNumber" : 574,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 574,
        "startColumnNumber" : 8,
        "endLineNumber" : 593,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (PatchOperation<T> patchOperation : patchOperationList) {\nswitch (patchOperation.op) {\ncase PatchOperation.OP_DEL:{\n      delOpIndexList.add(patchOperation.index);\n      break;\n    }\ncase PatchOperation.OP_ADD:{\n    addOpIndexList.add(patchOperation.index);\n    newItemList.add(patchOperation.newItem);\n    break;\n  }\ncase PatchOperation.OP_REPLACE:{\n  replaceOpIndexList.add(patchOperation.index);\n  newItemList.add(patchOperation.newItem);\n  break;\n}\ndefault:break;\n}\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4053,
        "startLineNumber" : 568,
        "startColumnNumber" : 6,
        "endLineNumber" : 672,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Integer> delOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> addOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> replaceOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<T> newItemList=new ArrayList<>(patchOperationList.size());\n  for (  PatchOperation<T> patchOperation : patchOperationList) {\nswitch (patchOperation.op) {\ncase PatchOperation.OP_DEL:{\n        delOpIndexList.add(patchOperation.index);\n        break;\n      }\ncase PatchOperation.OP_ADD:{\n      addOpIndexList.add(patchOperation.index);\n      newItemList.add(patchOperation.newItem);\n      break;\n    }\ncase PatchOperation.OP_REPLACE:{\n    replaceOpIndexList.add(patchOperation.index);\n    newItemList.add(patchOperation.newItem);\n    break;\n  }\ndefault:break;\n}\n}\nbuffer.writeUleb128(delOpIndexList.size());\nint lastIndex=0;\nfor (Integer index : delOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(addOpIndexList.size());\nlastIndex=0;\nfor (Integer index : addOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(replaceOpIndexList.size());\nlastIndex=0;\nfor (Integer index : replaceOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nfor (T newItem : newItemList) {\nif (newItem instanceof StringData) {\nbuffer.writeStringData((StringData)newItem);\n}\n else if (newItem instanceof Integer) {\nbuffer.writeInt((Integer)newItem);\n}\n else if (newItem instanceof TypeList) {\nbuffer.writeTypeList((TypeList)newItem);\n}\n else if (newItem instanceof ProtoId) {\nbuffer.writeProtoId((ProtoId)newItem);\n}\n else if (newItem instanceof FieldId) {\nbuffer.writeFieldId((FieldId)newItem);\n}\n else if (newItem instanceof MethodId) {\nbuffer.writeMethodId((MethodId)newItem);\n}\n else if (newItem instanceof Annotation) {\nbuffer.writeAnnotation((Annotation)newItem);\n}\n else if (newItem instanceof AnnotationSet) {\nbuffer.writeAnnotationSet((AnnotationSet)newItem);\n}\n else if (newItem instanceof AnnotationSetRefList) {\nbuffer.writeAnnotationSetRefList((AnnotationSetRefList)newItem);\n}\n else if (newItem instanceof AnnotationsDirectory) {\nbuffer.writeAnnotationsDirectory((AnnotationsDirectory)newItem);\n}\n else if (newItem instanceof DebugInfoItem) {\nbuffer.writeDebugInfoItem((DebugInfoItem)newItem);\n}\n else if (newItem instanceof Code) {\nbuffer.writeCode((Code)newItem);\n}\n else if (newItem instanceof ClassData) {\nbuffer.writeClassData((ClassData)newItem);\n}\n else if (newItem instanceof EncodedValue) {\nbuffer.writeEncodedArray((EncodedValue)newItem);\n}\n else if (newItem instanceof ClassDef) {\nbuffer.writeClassDef((ClassDef)newItem);\n}\n else {\nthrow new IllegalStateException(\"Unknown item type: \" + newItem.getClass());\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 445,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4197,
        "startLineNumber" : 566,
        "startColumnNumber" : 4,
        "endLineNumber" : 672,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private <T extends Comparable<T>>void writePatchOperations(DexDataBuffer buffer,List<PatchOperation<T>> patchOperationList){\n  List<Integer> delOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> addOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<Integer> replaceOpIndexList=new ArrayList<>(patchOperationList.size());\n  List<T> newItemList=new ArrayList<>(patchOperationList.size());\n  for (  PatchOperation<T> patchOperation : patchOperationList) {\nswitch (patchOperation.op) {\ncase PatchOperation.OP_DEL:{\n        delOpIndexList.add(patchOperation.index);\n        break;\n      }\ncase PatchOperation.OP_ADD:{\n      addOpIndexList.add(patchOperation.index);\n      newItemList.add(patchOperation.newItem);\n      break;\n    }\ncase PatchOperation.OP_REPLACE:{\n    replaceOpIndexList.add(patchOperation.index);\n    newItemList.add(patchOperation.newItem);\n    break;\n  }\ndefault:break;\n}\n}\nbuffer.writeUleb128(delOpIndexList.size());\nint lastIndex=0;\nfor (Integer index : delOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(addOpIndexList.size());\nlastIndex=0;\nfor (Integer index : addOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nbuffer.writeUleb128(replaceOpIndexList.size());\nlastIndex=0;\nfor (Integer index : replaceOpIndexList) {\nbuffer.writeSleb128(index - lastIndex);\nlastIndex=index;\n}\nfor (T newItem : newItemList) {\nif (newItem instanceof StringData) {\nbuffer.writeStringData((StringData)newItem);\n}\n else if (newItem instanceof Integer) {\nbuffer.writeInt((Integer)newItem);\n}\n else if (newItem instanceof TypeList) {\nbuffer.writeTypeList((TypeList)newItem);\n}\n else if (newItem instanceof ProtoId) {\nbuffer.writeProtoId((ProtoId)newItem);\n}\n else if (newItem instanceof FieldId) {\nbuffer.writeFieldId((FieldId)newItem);\n}\n else if (newItem instanceof MethodId) {\nbuffer.writeMethodId((MethodId)newItem);\n}\n else if (newItem instanceof Annotation) {\nbuffer.writeAnnotation((Annotation)newItem);\n}\n else if (newItem instanceof AnnotationSet) {\nbuffer.writeAnnotationSet((AnnotationSet)newItem);\n}\n else if (newItem instanceof AnnotationSetRefList) {\nbuffer.writeAnnotationSetRefList((AnnotationSetRefList)newItem);\n}\n else if (newItem instanceof AnnotationsDirectory) {\nbuffer.writeAnnotationsDirectory((AnnotationsDirectory)newItem);\n}\n else if (newItem instanceof DebugInfoItem) {\nbuffer.writeDebugInfoItem((DebugInfoItem)newItem);\n}\n else if (newItem instanceof Code) {\nbuffer.writeCode((Code)newItem);\n}\n else if (newItem instanceof ClassData) {\nbuffer.writeClassData((ClassData)newItem);\n}\n else if (newItem instanceof EncodedValue) {\nbuffer.writeEncodedArray((EncodedValue)newItem);\n}\n else if (newItem instanceof ClassDef) {\nbuffer.writeClassDef((ClassDef)newItem);\n}\n else {\nthrow new IllegalStateException(\"Unknown item type: \" + newItem.getClass());\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 470,
      "astHeight" : 25
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 574,
        "startColumnNumber" : 8,
        "endLineNumber" : 593,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (PatchOperation<T> patchOperation : patchOperationList) {\nswitch (patchOperation.op) {\ncase PatchOperation.OP_DEL:{\n      delOpIndexList.add(patchOperation.index);\n      break;\n    }\ncase PatchOperation.OP_ADD:{\n    addOpIndexList.add(patchOperation.index);\n    newItemList.add(patchOperation.newItem);\n    break;\n  }\ncase PatchOperation.OP_REPLACE:{\n  replaceOpIndexList.add(patchOperation.index);\n  newItemList.add(patchOperation.newItem);\n  break;\n}\ndefault:break;\n}\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 69,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.tencent.tinker.commons.dexpatcher.struct.PatchOperation<T>>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 569,
    "startColumnNumber" : 55,
    "endLineNumber" : 569,
    "endColumnNumber" : 73
  }, {
    "charLength" : 18,
    "startLineNumber" : 570,
    "startColumnNumber" : 55,
    "endLineNumber" : 570,
    "endColumnNumber" : 73
  }, {
    "charLength" : 18,
    "startLineNumber" : 571,
    "startColumnNumber" : 59,
    "endLineNumber" : 571,
    "endColumnNumber" : 77
  }, {
    "charLength" : 18,
    "startLineNumber" : 572,
    "startColumnNumber" : 46,
    "endLineNumber" : 572,
    "endColumnNumber" : 64
  }, {
    "charLength" : 18,
    "startLineNumber" : 574,
    "startColumnNumber" : 48,
    "endLineNumber" : 574,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 1
  } ]
}