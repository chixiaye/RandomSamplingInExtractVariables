{
  "id" : 309,
  "expression" : "t.label().equals(e.label())",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime/Java/src/org/antlr/v4/runtime/atn/ATNState.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "t.label().equals(e.label())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 173,
      "startColumnNumber" : 47,
      "endLineNumber" : 173,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 173,
        "startColumnNumber" : 9,
        "endLineNumber" : 173,
        "endColumnNumber" : 74
      },
      "nodeContext" : "t.label() != null && e.label() != null && t.label().equals(e.label())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 439,
        "startLineNumber" : 173,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (t.label() != null && e.label() != null && t.label().equals(e.label())) {\n  alreadyPresent=true;\n  break;\n}\n else if (t.isEpsilon() && e.isEpsilon()) {\n  alreadyPresent=true;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 172,
        "startColumnNumber" : 55,
        "endLineNumber" : 183,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (t.label() != null && e.label() != null && t.label().equals(e.label())) {\n    alreadyPresent=true;\n    break;\n  }\n else   if (t.isEpsilon() && e.isEpsilon()) {\n    alreadyPresent=true;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 172,
        "startColumnNumber" : 3,
        "endLineNumber" : 183,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (t.target.stateNumber == e.target.stateNumber) {\n  if (t.label() != null && e.label() != null && t.label().equals(e.label())) {\n    alreadyPresent=true;\n    break;\n  }\n else   if (t.isEpsilon() && e.isEpsilon()) {\n    alreadyPresent=true;\n    break;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 515,
        "startLineNumber" : 171,
        "startColumnNumber" : 35,
        "endLineNumber" : 184,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (t.target.stateNumber == e.target.stateNumber) {\n    if (t.label() != null && e.label() != null && t.label().equals(e.label())) {\n      alreadyPresent=true;\n      break;\n    }\n else     if (t.isEpsilon() && e.isEpsilon()) {\n      alreadyPresent=true;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 171,
        "startColumnNumber" : 2,
        "endLineNumber" : 184,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Transition t : transitions) {\n  if (t.target.stateNumber == e.target.stateNumber) {\n    if (t.label() != null && e.label() != null && t.label().equals(e.label())) {\n      alreadyPresent=true;\n      break;\n    }\n else     if (t.isEpsilon() && e.isEpsilon()) {\n      alreadyPresent=true;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 161,
        "startColumnNumber" : 52,
        "endLineNumber" : 188,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (transitions.isEmpty()) {\n    epsilonOnlyTransitions=e.isEpsilon();\n  }\n else   if (epsilonOnlyTransitions != e.isEpsilon()) {\n    System.err.format(Locale.getDefault(),\"ATN state %d has both epsilon and non-epsilon transitions.\\n\",stateNumber);\n    epsilonOnlyTransitions=false;\n  }\n  boolean alreadyPresent=false;\n  for (  Transition t : transitions) {\n    if (t.target.stateNumber == e.target.stateNumber) {\n      if (t.label() != null && e.label() != null && t.label().equals(e.label())) {\n        alreadyPresent=true;\n        break;\n      }\n else       if (t.isEpsilon() && e.isEpsilon()) {\n        alreadyPresent=true;\n        break;\n      }\n    }\n  }\n  if (!alreadyPresent) {\n    transitions.add(index,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1007,
        "startLineNumber" : 161,
        "startColumnNumber" : 1,
        "endLineNumber" : 188,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void addTransition(int index,Transition e){\n  if (transitions.isEmpty()) {\n    epsilonOnlyTransitions=e.isEpsilon();\n  }\n else   if (epsilonOnlyTransitions != e.isEpsilon()) {\n    System.err.format(Locale.getDefault(),\"ATN state %d has both epsilon and non-epsilon transitions.\\n\",stateNumber);\n    epsilonOnlyTransitions=false;\n  }\n  boolean alreadyPresent=false;\n  for (  Transition t : transitions) {\n    if (t.target.stateNumber == e.target.stateNumber) {\n      if (t.label() != null && e.label() != null && t.label().equals(e.label())) {\n        alreadyPresent=true;\n        break;\n      }\n else       if (t.isEpsilon() && e.isEpsilon()) {\n        alreadyPresent=true;\n        break;\n      }\n    }\n  }\n  if (!alreadyPresent) {\n    transitions.add(index,e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 173,
        "startColumnNumber" : 9,
        "endLineNumber" : 173,
        "endColumnNumber" : 74
      },
      "nodeContext" : "t.label() != null && e.label() != null && t.label().equals(e.label())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 173,
    "startColumnNumber" : 47,
    "endLineNumber" : 173,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}