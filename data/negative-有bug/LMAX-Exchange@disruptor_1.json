{
  "id" : 1,
  "expression" : "\"com.lmax.runQueueTests\"",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/perftest/java/com/lmax/disruptor/ThrottledOnePublisherToThreeProcessorPipelineLatencyTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"com.lmax.runQueueTests\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 175,
      "startColumnNumber" : 55,
      "endLineNumber" : 175,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 175,
        "startColumnNumber" : 36,
        "endLineNumber" : 175,
        "endColumnNumber" : 88
      },
      "nodeContext" : "System.getProperty(\"com.lmax.runQueueTests\",\"true\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 175,
        "startColumnNumber" : 12,
        "endLineNumber" : 175,
        "endColumnNumber" : 89
      },
      "nodeContext" : "\"true\".equalsIgnoreCase(System.getProperty(\"com.lmax.runQueueTests\",\"true\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 765,
        "startLineNumber" : 175,
        "startColumnNumber" : 8,
        "endLineNumber" : 197,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(System.getProperty(\"com.lmax.runQueueTests\",\"true\"))) {\n  for (int i=0; i < RUNS; i++) {\n    System.gc();\n    histogram.clear();\n    runQueuePass();\n    assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n    queueMeanLatency[i]=histogram.getMean();\n    System.out.format(\"%s run %d BlockingQueue %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n    dumpHistogram(System.out);\n  }\n}\n else {\n  for (int i=0; i < RUNS; i++) {\n    queueMeanLatency[i]=new BigDecimal(Long.MAX_VALUE);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1537,
        "startLineNumber" : 169,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int RUNS=3;\n  BigDecimal queueMeanLatency[]=new BigDecimal[RUNS];\n  BigDecimal disruptorMeanLatency[]=new BigDecimal[RUNS];\n  if (\"true\".equalsIgnoreCase(System.getProperty(\"com.lmax.runQueueTests\",\"true\"))) {\n    for (int i=0; i < RUNS; i++) {\n      System.gc();\n      histogram.clear();\n      runQueuePass();\n      assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n      queueMeanLatency[i]=histogram.getMean();\n      System.out.format(\"%s run %d BlockingQueue %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n      dumpHistogram(System.out);\n    }\n  }\n else {\n    for (int i=0; i < RUNS; i++) {\n      queueMeanLatency[i]=new BigDecimal(Long.MAX_VALUE);\n    }\n  }\n  for (int i=0; i < RUNS; i++) {\n    System.gc();\n    histogram.clear();\n    runDisruptorPass();\n    assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n    disruptorMeanLatency[i]=histogram.getMean();\n    System.out.format(\"%s run %d Disruptor %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n    dumpHistogram(System.out);\n  }\n  for (int i=0; i < RUNS; i++) {\n    assertTrue(queueMeanLatency[i].compareTo(disruptorMeanLatency[i]) > 0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1613,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldCompareDisruptorVsQueues() throws Exception {\n  final int RUNS=3;\n  BigDecimal queueMeanLatency[]=new BigDecimal[RUNS];\n  BigDecimal disruptorMeanLatency[]=new BigDecimal[RUNS];\n  if (\"true\".equalsIgnoreCase(System.getProperty(\"com.lmax.runQueueTests\",\"true\"))) {\n    for (int i=0; i < RUNS; i++) {\n      System.gc();\n      histogram.clear();\n      runQueuePass();\n      assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n      queueMeanLatency[i]=histogram.getMean();\n      System.out.format(\"%s run %d BlockingQueue %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n      dumpHistogram(System.out);\n    }\n  }\n else {\n    for (int i=0; i < RUNS; i++) {\n      queueMeanLatency[i]=new BigDecimal(Long.MAX_VALUE);\n    }\n  }\n  for (int i=0; i < RUNS; i++) {\n    System.gc();\n    histogram.clear();\n    runDisruptorPass();\n    assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n    disruptorMeanLatency[i]=histogram.getMean();\n    System.out.format(\"%s run %d Disruptor %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n    dumpHistogram(System.out);\n  }\n  for (int i=0; i < RUNS; i++) {\n    assertTrue(queueMeanLatency[i].compareTo(disruptorMeanLatency[i]) > 0);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 234,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 175,
        "startColumnNumber" : 12,
        "endLineNumber" : 175,
        "endColumnNumber" : 89
      },
      "nodeContext" : "\"true\".equalsIgnoreCase(System.getProperty(\"com.lmax.runQueueTests\",\"true\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 175,
    "startColumnNumber" : 55,
    "endLineNumber" : 175,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}