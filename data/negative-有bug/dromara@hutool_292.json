{
  "id" : 292,
  "expression" : "matchAll",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-dfa/src/test/java/cn/hutool/dfa/test/DfaTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "matchAll",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 32,
      "startColumnNumber" : 22,
      "endLineNumber" : 32,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Assert.assertEquals(matchAll,CollectionUtil.newArrayList(\"大\",\"土^豆\",\"刚出锅\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Assert.assertEquals(matchAll,CollectionUtil.newArrayList(\"大\",\"土^豆\",\"刚出锅\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 479,
        "startLineNumber" : 23,
        "startColumnNumber" : 28,
        "endLineNumber" : 33,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  WordTree tree=buildWordTree();\n  List<String> matchAll=tree.matchAll(text,-1,false,false);\n  Assert.assertEquals(matchAll,CollectionUtil.newArrayList(\"大\",\"土^豆\",\"刚出锅\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 514,
        "startLineNumber" : 22,
        "startColumnNumber" : 1,
        "endLineNumber" : 33,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void matchAllTest(){\n  WordTree tree=buildWordTree();\n  List<String> matchAll=tree.matchAll(text,-1,false,false);\n  Assert.assertEquals(matchAll,CollectionUtil.newArrayList(\"大\",\"土^豆\",\"刚出锅\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 41,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Assert.assertEquals(matchAll,CollectionUtil.newArrayList(\"大\",\"土^豆\",\"刚出锅\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 32,
    "startColumnNumber" : 22,
    "endLineNumber" : 32,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}