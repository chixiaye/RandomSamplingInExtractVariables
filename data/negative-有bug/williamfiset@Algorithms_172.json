{
  "id" : 172,
  "expression" : "text.charAt(R - L)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/strings/ZAlgorithm.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "text.charAt(R - L)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 25,
      "startColumnNumber" : 27,
      "endLineNumber" : 25,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 25,
        "startColumnNumber" : 27,
        "endLineNumber" : 25,
        "endColumnNumber" : 63
      },
      "nodeContext" : "text.charAt(R - L) == text.charAt(R)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 25,
        "startColumnNumber" : 15,
        "endLineNumber" : 25,
        "endColumnNumber" : 63
      },
      "nodeContext" : "R < size && text.charAt(R - L) == text.charAt(R)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 69
      },
      "nodeContext" : "while (R < size && text.charAt(R - L) == text.charAt(R)) R++;\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 23,
        "startColumnNumber" : 22,
        "endLineNumber" : 28,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  L=R=i;\n  while (R < size && text.charAt(R - L) == text.charAt(R))   R++;\n  Z[i]=R - L;\n  R--;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 23,
        "startColumnNumber" : 11,
        "endLineNumber" : 37,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (i > R) {\n  L=R=i;\n  while (R < size && text.charAt(R - L) == text.charAt(R))   R++;\n  Z[i]=R - L;\n  R--;\n}\n else {\n  k=i - L;\n  if (Z[k] < R - i + 1)   Z[i]=Z[k];\n else {\n    L=i;\n    while (R < size && text.charAt(R - L) == text.charAt(R))     R++;\n    Z[i]=R - L;\n    R--;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 101,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 22,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (i == 0) Z[i]=size;\n else if (i > R) {\n  L=R=i;\n  while (R < size && text.charAt(R - L) == text.charAt(R))   R++;\n  Z[i]=R - L;\n  R--;\n}\n else {\n  k=i - L;\n  if (Z[k] < R - i + 1)   Z[i]=Z[k];\n else {\n    L=i;\n    while (R < size && text.charAt(R - L) == text.charAt(R))     R++;\n    Z[i]=R - L;\n    R--;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 21,
        "startColumnNumber" : 35,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (i == 0)   Z[i]=size;\n else   if (i > R) {\n    L=R=i;\n    while (R < size && text.charAt(R - L) == text.charAt(R))     R++;\n    Z[i]=R - L;\n    R--;\n  }\n else {\n    k=i - L;\n    if (Z[k] < R - i + 1)     Z[i]=Z[k];\n else {\n      L=i;\n      while (R < size && text.charAt(R - L) == text.charAt(R))       R++;\n      Z[i]=R - L;\n      R--;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  if (i == 0)   Z[i]=size;\n else   if (i > R) {\n    L=R=i;\n    while (R < size && text.charAt(R - L) == text.charAt(R))     R++;\n    Z[i]=R - L;\n    R--;\n  }\n else {\n    k=i - L;\n    if (Z[k] < R - i + 1)     Z[i]=Z[k];\n else {\n      L=i;\n      while (R < size && text.charAt(R - L) == text.charAt(R))       R++;\n      Z[i]=R - L;\n      R--;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 123,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 627,
        "startLineNumber" : 13,
        "startColumnNumber" : 39,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isNull(text)) {\n    return new int[]{};\n  }\n  int size=text.length();\n  int[] Z=new int[size];\n  int L, R, k;\n  L=R=0;\n  for (int i=0; i < size; i++) {\n    if (i == 0)     Z[i]=size;\n else     if (i > R) {\n      L=R=i;\n      while (R < size && text.charAt(R - L) == text.charAt(R))       R++;\n      Z[i]=R - L;\n      R--;\n    }\n else {\n      k=i - L;\n      if (Z[k] < R - i + 1)       Z[i]=Z[k];\n else {\n        L=i;\n        while (R < size && text.charAt(R - L) == text.charAt(R))         R++;\n        Z[i]=R - L;\n        R--;\n      }\n    }\n  }\n  return Z;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 7,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Calculates the Z-array of a given string\n * @param text the string on which Z-array is computed\n * @return An int-array which is the Z-array of text\n */\npublic int[] calculateZ(String text){\n  if (isNull(text)) {\n    return new int[]{};\n  }\n  int size=text.length();\n  int[] Z=new int[size];\n  int L, R, k;\n  L=R=0;\n  for (int i=0; i < size; i++) {\n    if (i == 0)     Z[i]=size;\n else     if (i > R) {\n      L=R=i;\n      while (R < size && text.charAt(R - L) == text.charAt(R))       R++;\n      Z[i]=R - L;\n      R--;\n    }\n else {\n      k=i - L;\n      if (Z[k] < R - i + 1)       Z[i]=Z[k];\n else {\n        L=i;\n        while (R < size && text.charAt(R - L) == text.charAt(R))         R++;\n        Z[i]=R - L;\n        R--;\n      }\n    }\n  }\n  return Z;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 69
      },
      "nodeContext" : "while (R < size && text.charAt(R - L) == text.charAt(R)) R++;\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "char"
  }, {
    "nodeContext" : "text.charAt(R - L)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 33,
      "startColumnNumber" : 29,
      "endLineNumber" : 33,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 33,
        "startColumnNumber" : 29,
        "endLineNumber" : 33,
        "endColumnNumber" : 65
      },
      "nodeContext" : "text.charAt(R - L) == text.charAt(R)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 33,
        "startColumnNumber" : 17,
        "endLineNumber" : 33,
        "endColumnNumber" : 65
      },
      "nodeContext" : "R < size && text.charAt(R - L) == text.charAt(R)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 33,
        "startColumnNumber" : 10,
        "endLineNumber" : 33,
        "endColumnNumber" : 71
      },
      "nodeContext" : "while (R < size && text.charAt(R - L) == text.charAt(R)) R++;\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 31,
        "startColumnNumber" : 13,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  L=i;\n  while (R < size && text.charAt(R - L) == text.charAt(R))   R++;\n  Z[i]=R - L;\n  R--;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Z[k] < R - i + 1) Z[i]=Z[k];\n else {\n  L=i;\n  while (R < size && text.charAt(R - L) == text.charAt(R))   R++;\n  Z[i]=R - L;\n  R--;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 28,
        "startColumnNumber" : 13,
        "endLineNumber" : 37,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  k=i - L;\n  if (Z[k] < R - i + 1)   Z[i]=Z[k];\n else {\n    L=i;\n    while (R < size && text.charAt(R - L) == text.charAt(R))     R++;\n    Z[i]=R - L;\n    R--;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 23,
        "startColumnNumber" : 11,
        "endLineNumber" : 37,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (i > R) {\n  L=R=i;\n  while (R < size && text.charAt(R - L) == text.charAt(R))   R++;\n  Z[i]=R - L;\n  R--;\n}\n else {\n  k=i - L;\n  if (Z[k] < R - i + 1)   Z[i]=Z[k];\n else {\n    L=i;\n    while (R < size && text.charAt(R - L) == text.charAt(R))     R++;\n    Z[i]=R - L;\n    R--;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 101,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 22,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (i == 0) Z[i]=size;\n else if (i > R) {\n  L=R=i;\n  while (R < size && text.charAt(R - L) == text.charAt(R))   R++;\n  Z[i]=R - L;\n  R--;\n}\n else {\n  k=i - L;\n  if (Z[k] < R - i + 1)   Z[i]=Z[k];\n else {\n    L=i;\n    while (R < size && text.charAt(R - L) == text.charAt(R))     R++;\n    Z[i]=R - L;\n    R--;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 21,
        "startColumnNumber" : 35,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (i == 0)   Z[i]=size;\n else   if (i > R) {\n    L=R=i;\n    while (R < size && text.charAt(R - L) == text.charAt(R))     R++;\n    Z[i]=R - L;\n    R--;\n  }\n else {\n    k=i - L;\n    if (Z[k] < R - i + 1)     Z[i]=Z[k];\n else {\n      L=i;\n      while (R < size && text.charAt(R - L) == text.charAt(R))       R++;\n      Z[i]=R - L;\n      R--;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  if (i == 0)   Z[i]=size;\n else   if (i > R) {\n    L=R=i;\n    while (R < size && text.charAt(R - L) == text.charAt(R))     R++;\n    Z[i]=R - L;\n    R--;\n  }\n else {\n    k=i - L;\n    if (Z[k] < R - i + 1)     Z[i]=Z[k];\n else {\n      L=i;\n      while (R < size && text.charAt(R - L) == text.charAt(R))       R++;\n      Z[i]=R - L;\n      R--;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 123,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 627,
        "startLineNumber" : 13,
        "startColumnNumber" : 39,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isNull(text)) {\n    return new int[]{};\n  }\n  int size=text.length();\n  int[] Z=new int[size];\n  int L, R, k;\n  L=R=0;\n  for (int i=0; i < size; i++) {\n    if (i == 0)     Z[i]=size;\n else     if (i > R) {\n      L=R=i;\n      while (R < size && text.charAt(R - L) == text.charAt(R))       R++;\n      Z[i]=R - L;\n      R--;\n    }\n else {\n      k=i - L;\n      if (Z[k] < R - i + 1)       Z[i]=Z[k];\n else {\n        L=i;\n        while (R < size && text.charAt(R - L) == text.charAt(R))         R++;\n        Z[i]=R - L;\n        R--;\n      }\n    }\n  }\n  return Z;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 7,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Calculates the Z-array of a given string\n * @param text the string on which Z-array is computed\n * @return An int-array which is the Z-array of text\n */\npublic int[] calculateZ(String text){\n  if (isNull(text)) {\n    return new int[]{};\n  }\n  int size=text.length();\n  int[] Z=new int[size];\n  int L, R, k;\n  L=R=0;\n  for (int i=0; i < size; i++) {\n    if (i == 0)     Z[i]=size;\n else     if (i > R) {\n      L=R=i;\n      while (R < size && text.charAt(R - L) == text.charAt(R))       R++;\n      Z[i]=R - L;\n      R--;\n    }\n else {\n      k=i - L;\n      if (Z[k] < R - i + 1)       Z[i]=Z[k];\n else {\n        L=i;\n        while (R < size && text.charAt(R - L) == text.charAt(R))         R++;\n        Z[i]=R - L;\n        R--;\n      }\n    }\n  }\n  return Z;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 33,
        "startColumnNumber" : 10,
        "endLineNumber" : 33,
        "endColumnNumber" : 71
      },
      "nodeContext" : "while (R < size && text.charAt(R - L) == text.charAt(R)) R++;\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 25,
    "startColumnNumber" : 27,
    "endLineNumber" : 25,
    "endColumnNumber" : 45
  }, {
    "charLength" : 18,
    "startLineNumber" : 33,
    "startColumnNumber" : 29,
    "endLineNumber" : 33,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}