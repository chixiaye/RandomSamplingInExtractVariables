{
  "id" : 121,
  "expression" : "org",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-test/src/test/java/org/springframework/test/web/client/UnorderedRequestExpectationManagerTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "org",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 125,
      "startColumnNumber" : 14,
      "endLineNumber" : 125,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 125,
        "startColumnNumber" : 14,
        "endLineNumber" : 125,
        "endColumnNumber" : 33
      },
      "nodeContext" : "org.springframework",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 125,
        "startColumnNumber" : 14,
        "endLineNumber" : 125,
        "endColumnNumber" : 38
      },
      "nodeContext" : "org.springframework.mock",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 125,
        "startColumnNumber" : 14,
        "endLineNumber" : 125,
        "endColumnNumber" : 43
      },
      "nodeContext" : "org.springframework.mock.http",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 125,
        "startColumnNumber" : 14,
        "endLineNumber" : 125,
        "endColumnNumber" : 50
      },
      "nodeContext" : "org.springframework.mock.http.client",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 125,
        "startColumnNumber" : 14,
        "endLineNumber" : 125,
        "endColumnNumber" : 77
      },
      "nodeContext" : "org.springframework.mock.http.client.MockAsyncClientHttpRequest",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 125,
        "startColumnNumber" : 14,
        "endLineNumber" : 125,
        "endColumnNumber" : 77
      },
      "nodeContext" : "org.springframework.mock.http.client.MockAsyncClientHttpRequest",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 125,
        "startColumnNumber" : 10,
        "endLineNumber" : 125,
        "endColumnNumber" : 100
      },
      "nodeContext" : "new org.springframework.mock.http.client.MockAsyncClientHttpRequest(method,new URI(url))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 125,
        "startColumnNumber" : 3,
        "endLineNumber" : 125,
        "endColumnNumber" : 101
      },
      "nodeContext" : "return new org.springframework.mock.http.client.MockAsyncClientHttpRequest(method,new URI(url));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 19,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 124,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return new org.springframework.mock.http.client.MockAsyncClientHttpRequest(method,new URI(url));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 124,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  return new org.springframework.mock.http.client.MockAsyncClientHttpRequest(method,new URI(url));\n}\n catch (URISyntaxException ex) {\n  throw new IllegalStateException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 32,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 123,
        "startColumnNumber" : 72,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    return new org.springframework.mock.http.client.MockAsyncClientHttpRequest(method,new URI(url));\n  }\n catch (  URISyntaxException ex) {\n    throw new IllegalStateException(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 122,
        "startColumnNumber" : 1,
        "endLineNumber" : 130,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@SuppressWarnings(\"deprecation\") private ClientHttpRequest createRequest(HttpMethod method,String url){\n  try {\n    return new org.springframework.mock.http.client.MockAsyncClientHttpRequest(method,new URI(url));\n  }\n catch (  URISyntaxException ex) {\n    throw new IllegalStateException(ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 125,
        "startColumnNumber" : 3,
        "endLineNumber" : 125,
        "endColumnNumber" : 101
      },
      "nodeContext" : "return new org.springframework.mock.http.client.MockAsyncClientHttpRequest(method,new URI(url));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 19,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 125,
    "startColumnNumber" : 14,
    "endLineNumber" : 125,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}