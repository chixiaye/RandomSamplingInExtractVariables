{
  "id" : 15,
  "expression" : "SonicJavaScriptInterface",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "/sonic-android/sample/src/main/java/com/tencent/sonic/demo/BrowserActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SonicJavaScriptInterface",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 156,
      "startColumnNumber" : 24,
      "endLineNumber" : 156,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 156,
        "startColumnNumber" : 24,
        "endLineNumber" : 156,
        "endColumnNumber" : 68
      },
      "nodeContext" : "SonicJavaScriptInterface.PARAM_LOAD_URL_TIME",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 156,
        "startColumnNumber" : 8,
        "endLineNumber" : 156,
        "endColumnNumber" : 97
      },
      "nodeContext" : "intent.putExtra(SonicJavaScriptInterface.PARAM_LOAD_URL_TIME,System.currentTimeMillis())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 156,
        "startColumnNumber" : 8,
        "endLineNumber" : 156,
        "endColumnNumber" : 98
      },
      "nodeContext" : "intent.putExtra(SonicJavaScriptInterface.PARAM_LOAD_URL_TIME,System.currentTimeMillis());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4952,
        "startLineNumber" : 66,
        "startColumnNumber" : 55,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onCreate(savedInstanceState);\n  Intent intent=getIntent();\n  String url=intent.getStringExtra(PARAM_URL);\n  int mode=intent.getIntExtra(PARAM_MODE,-1);\n  if (TextUtils.isEmpty(url) || -1 == mode) {\n    finish();\n    return;\n  }\n  getWindow().addFlags(WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED);\n  if (!SonicEngine.isGetInstanceAllowed()) {\n    SonicEngine.createInstance(new SonicRuntimeImpl(getApplication()),new SonicConfig.Builder().build());\n  }\n  SonicSessionClientImpl sonicSessionClient=null;\n  if (MainActivity.MODE_DEFAULT != mode) {\n    SonicSessionConfig.Builder sessionConfigBuilder=new SonicSessionConfig.Builder();\n    if (MainActivity.MODE_SONIC_WITH_OFFLINE_CACHE == mode) {\n      sessionConfigBuilder.setCacheInterceptor(new SonicCacheInterceptor(null){\n        @Override public String getCacheData(        SonicSession session){\n          return null;\n        }\n      }\n);\n      sessionConfigBuilder.setConnectionIntercepter(new SonicSessionConnectionInterceptor(){\n        @Override public SonicSessionConnection getConnection(        SonicSession session,        Intent intent){\n          return new OfflinePkgSessionConnection(BrowserActivity.this,session,intent);\n        }\n      }\n);\n    }\n    sonicSession=SonicEngine.getInstance().createSession(url,sessionConfigBuilder.build());\n    if (null != sonicSession) {\n      sonicSession.bindClient(sonicSessionClient=new SonicSessionClientImpl());\n    }\n else {\n      throw new UnknownError(\"create session fail!\");\n    }\n  }\n  setContentView(R.layout.activity_browser);\n  WebView webView=(WebView)findViewById(R.id.webview);\n  webView.setWebViewClient(new WebViewClient(){\n    @Override public void onPageFinished(    WebView view,    String url){\n      super.onPageFinished(view,url);\n      if (sonicSession != null) {\n        sonicSession.getSessionClient().pageFinish(url);\n      }\n    }\n    @TargetApi(21) @Override public WebResourceResponse shouldInterceptRequest(    WebView view,    WebResourceRequest request){\n      return shouldInterceptRequest(view,request.getUrl().toString());\n    }\n    @Override public WebResourceResponse shouldInterceptRequest(    WebView view,    String url){\n      if (sonicSession != null) {\n        return (WebResourceResponse)sonicSession.getSessionClient().requestResource(url);\n      }\n      return null;\n    }\n  }\n);\n  WebSettings webSettings=webView.getSettings();\n  webSettings.setJavaScriptEnabled(true);\n  webView.removeJavascriptInterface(\"searchBoxJavaBridge_\");\n  intent.putExtra(SonicJavaScriptInterface.PARAM_LOAD_URL_TIME,System.currentTimeMillis());\n  webView.addJavascriptInterface(new SonicJavaScriptInterface(sonicSessionClient,intent),\"sonic\");\n  webSettings.setAllowContentAccess(true);\n  webSettings.setDatabaseEnabled(true);\n  webSettings.setDomStorageEnabled(true);\n  webSettings.setAppCacheEnabled(true);\n  webSettings.setSavePassword(false);\n  webSettings.setSaveFormData(false);\n  webSettings.setUseWideViewPort(true);\n  webSettings.setLoadWithOverviewMode(true);\n  if (sonicSessionClient != null) {\n    sonicSessionClient.bindWebView(webView);\n    sonicSessionClient.clientReady();\n  }\n else {\n    webView.loadUrl(url);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 419,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5017,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  Intent intent=getIntent();\n  String url=intent.getStringExtra(PARAM_URL);\n  int mode=intent.getIntExtra(PARAM_MODE,-1);\n  if (TextUtils.isEmpty(url) || -1 == mode) {\n    finish();\n    return;\n  }\n  getWindow().addFlags(WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED);\n  if (!SonicEngine.isGetInstanceAllowed()) {\n    SonicEngine.createInstance(new SonicRuntimeImpl(getApplication()),new SonicConfig.Builder().build());\n  }\n  SonicSessionClientImpl sonicSessionClient=null;\n  if (MainActivity.MODE_DEFAULT != mode) {\n    SonicSessionConfig.Builder sessionConfigBuilder=new SonicSessionConfig.Builder();\n    if (MainActivity.MODE_SONIC_WITH_OFFLINE_CACHE == mode) {\n      sessionConfigBuilder.setCacheInterceptor(new SonicCacheInterceptor(null){\n        @Override public String getCacheData(        SonicSession session){\n          return null;\n        }\n      }\n);\n      sessionConfigBuilder.setConnectionIntercepter(new SonicSessionConnectionInterceptor(){\n        @Override public SonicSessionConnection getConnection(        SonicSession session,        Intent intent){\n          return new OfflinePkgSessionConnection(BrowserActivity.this,session,intent);\n        }\n      }\n);\n    }\n    sonicSession=SonicEngine.getInstance().createSession(url,sessionConfigBuilder.build());\n    if (null != sonicSession) {\n      sonicSession.bindClient(sonicSessionClient=new SonicSessionClientImpl());\n    }\n else {\n      throw new UnknownError(\"create session fail!\");\n    }\n  }\n  setContentView(R.layout.activity_browser);\n  WebView webView=(WebView)findViewById(R.id.webview);\n  webView.setWebViewClient(new WebViewClient(){\n    @Override public void onPageFinished(    WebView view,    String url){\n      super.onPageFinished(view,url);\n      if (sonicSession != null) {\n        sonicSession.getSessionClient().pageFinish(url);\n      }\n    }\n    @TargetApi(21) @Override public WebResourceResponse shouldInterceptRequest(    WebView view,    WebResourceRequest request){\n      return shouldInterceptRequest(view,request.getUrl().toString());\n    }\n    @Override public WebResourceResponse shouldInterceptRequest(    WebView view,    String url){\n      if (sonicSession != null) {\n        return (WebResourceResponse)sonicSession.getSessionClient().requestResource(url);\n      }\n      return null;\n    }\n  }\n);\n  WebSettings webSettings=webView.getSettings();\n  webSettings.setJavaScriptEnabled(true);\n  webView.removeJavascriptInterface(\"searchBoxJavaBridge_\");\n  intent.putExtra(SonicJavaScriptInterface.PARAM_LOAD_URL_TIME,System.currentTimeMillis());\n  webView.addJavascriptInterface(new SonicJavaScriptInterface(sonicSessionClient,intent),\"sonic\");\n  webSettings.setAllowContentAccess(true);\n  webSettings.setDatabaseEnabled(true);\n  webSettings.setDomStorageEnabled(true);\n  webSettings.setAppCacheEnabled(true);\n  webSettings.setSavePassword(false);\n  webSettings.setSaveFormData(false);\n  webSettings.setUseWideViewPort(true);\n  webSettings.setLoadWithOverviewMode(true);\n  if (sonicSessionClient != null) {\n    sonicSessionClient.bindWebView(webView);\n    sonicSessionClient.clientReady();\n  }\n else {\n    webView.loadUrl(url);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 429,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 156,
        "startColumnNumber" : 8,
        "endLineNumber" : 156,
        "endColumnNumber" : 98
      },
      "nodeContext" : "intent.putExtra(SonicJavaScriptInterface.PARAM_LOAD_URL_TIME,System.currentTimeMillis());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.sonic.demo.SonicJavaScriptInterface"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 156,
    "startColumnNumber" : 24,
    "endLineNumber" : 156,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}