{
  "id" : 197,
  "expression" : "\"no instance in service {}\"",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alibaba-nacos-discovery/src/main/java/com/alibaba/cloud/nacos/ribbon/NacosRule.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"no instance in service {}\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 45,
      "startColumnNumber" : 16,
      "endLineNumber" : 45,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 50
      },
      "nodeContext" : "LOGGER.warn(\"no instance in service {}\",name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 51
      },
      "nodeContext" : "LOGGER.warn(\"no instance in service {}\",name);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 44,
        "startColumnNumber" : 43,
        "endLineNumber" : 47,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  LOGGER.warn(\"no instance in service {}\",name);\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 44,
        "startColumnNumber" : 3,
        "endLineNumber" : 47,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (CollectionUtils.isEmpty(instances)) {\n  LOGGER.warn(\"no instance in service {}\",name);\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1178,
        "startLineNumber" : 36,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String clusterName=this.nacosDiscoveryProperties.getClusterName();\n  DynamicServerListLoadBalancer loadBalancer=(DynamicServerListLoadBalancer)getLoadBalancer();\n  String name=loadBalancer.getName();\n  NamingService namingService=this.nacosDiscoveryProperties.namingServiceInstance();\n  List<Instance> instances=namingService.selectInstances(name,true);\n  if (CollectionUtils.isEmpty(instances)) {\n    LOGGER.warn(\"no instance in service {}\",name);\n    return null;\n  }\n  List<Instance> instancesToChoose=instances;\n  if (StringUtils.isNotBlank(clusterName)) {\n    List<Instance> sameClusterInstances=instances.stream().filter(instance -> Objects.equals(clusterName,instance.getClusterName())).collect(Collectors.toList());\n    if (!CollectionUtils.isEmpty(sameClusterInstances)) {\n      instancesToChoose=sameClusterInstances;\n    }\n else {\n      LOGGER.warn(\"A cross-cluster call occurs，name = {}, clusterName = {}, instance = {}\",name,clusterName,instances);\n    }\n  }\n  Instance instance=ExtendBalancer.getHostByRandomWeight2(instancesToChoose);\n  return new NacosServer(instance);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1264,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  String clusterName=this.nacosDiscoveryProperties.getClusterName();\n  DynamicServerListLoadBalancer loadBalancer=(DynamicServerListLoadBalancer)getLoadBalancer();\n  String name=loadBalancer.getName();\n  NamingService namingService=this.nacosDiscoveryProperties.namingServiceInstance();\n  List<Instance> instances=namingService.selectInstances(name,true);\n  if (CollectionUtils.isEmpty(instances)) {\n    LOGGER.warn(\"no instance in service {}\",name);\n    return null;\n  }\n  List<Instance> instancesToChoose=instances;\n  if (StringUtils.isNotBlank(clusterName)) {\n    List<Instance> sameClusterInstances=instances.stream().filter(instance -> Objects.equals(clusterName,instance.getClusterName())).collect(Collectors.toList());\n    if (!CollectionUtils.isEmpty(sameClusterInstances)) {\n      instancesToChoose=sameClusterInstances;\n    }\n else {\n      LOGGER.warn(\"A cross-cluster call occurs，name = {}, clusterName = {}, instance = {}\",name,clusterName,instances);\n    }\n  }\n  Instance instance=ExtendBalancer.getHostByRandomWeight2(instancesToChoose);\n  return new NacosServer(instance);\n}\n catch (Exception e) {\n  LOGGER.warn(\"NacosRule error\",e);\n  return null;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 158,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1271,
        "startLineNumber" : 35,
        "startColumnNumber" : 34,
        "endLineNumber" : 73,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    String clusterName=this.nacosDiscoveryProperties.getClusterName();\n    DynamicServerListLoadBalancer loadBalancer=(DynamicServerListLoadBalancer)getLoadBalancer();\n    String name=loadBalancer.getName();\n    NamingService namingService=this.nacosDiscoveryProperties.namingServiceInstance();\n    List<Instance> instances=namingService.selectInstances(name,true);\n    if (CollectionUtils.isEmpty(instances)) {\n      LOGGER.warn(\"no instance in service {}\",name);\n      return null;\n    }\n    List<Instance> instancesToChoose=instances;\n    if (StringUtils.isNotBlank(clusterName)) {\n      List<Instance> sameClusterInstances=instances.stream().filter(instance -> Objects.equals(clusterName,instance.getClusterName())).collect(Collectors.toList());\n      if (!CollectionUtils.isEmpty(sameClusterInstances)) {\n        instancesToChoose=sameClusterInstances;\n      }\n else {\n        LOGGER.warn(\"A cross-cluster call occurs，name = {}, clusterName = {}, instance = {}\",name,clusterName,instances);\n      }\n    }\n    Instance instance=ExtendBalancer.getHostByRandomWeight2(instancesToChoose);\n    return new NacosServer(instance);\n  }\n catch (  Exception e) {\n    LOGGER.warn(\"NacosRule error\",e);\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1315,
        "startLineNumber" : 34,
        "startColumnNumber" : 1,
        "endLineNumber" : 73,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Server choose(Object key){\n  try {\n    String clusterName=this.nacosDiscoveryProperties.getClusterName();\n    DynamicServerListLoadBalancer loadBalancer=(DynamicServerListLoadBalancer)getLoadBalancer();\n    String name=loadBalancer.getName();\n    NamingService namingService=this.nacosDiscoveryProperties.namingServiceInstance();\n    List<Instance> instances=namingService.selectInstances(name,true);\n    if (CollectionUtils.isEmpty(instances)) {\n      LOGGER.warn(\"no instance in service {}\",name);\n      return null;\n    }\n    List<Instance> instancesToChoose=instances;\n    if (StringUtils.isNotBlank(clusterName)) {\n      List<Instance> sameClusterInstances=instances.stream().filter(instance -> Objects.equals(clusterName,instance.getClusterName())).collect(Collectors.toList());\n      if (!CollectionUtils.isEmpty(sameClusterInstances)) {\n        instancesToChoose=sameClusterInstances;\n      }\n else {\n        LOGGER.warn(\"A cross-cluster call occurs，name = {}, clusterName = {}, instance = {}\",name,clusterName,instances);\n      }\n    }\n    Instance instance=ExtendBalancer.getHostByRandomWeight2(instancesToChoose);\n    return new NacosServer(instance);\n  }\n catch (  Exception e) {\n    LOGGER.warn(\"NacosRule error\",e);\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 51
      },
      "nodeContext" : "LOGGER.warn(\"no instance in service {}\",name);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 45,
    "startColumnNumber" : 16,
    "endLineNumber" : 45,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}