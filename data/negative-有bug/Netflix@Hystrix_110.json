{
  "id" : 110,
  "expression" : "isResponseDuplicate",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-examples/src/main/java/com/netflix/hystrix/examples/demo/CreditCardAuthorizationResult.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "isResponseDuplicate",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 53,
      "startColumnNumber" : 27,
      "endLineNumber" : 53,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 46
      },
      "nodeContext" : "this.isDuplicate=isResponseDuplicate",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 47
      },
      "nodeContext" : "this.isDuplicate=isResponseDuplicate;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 51,
        "startColumnNumber" : 117,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.success=success;\n  this.isDuplicate=isResponseDuplicate;\n  if (success) {\n    this.transactionID=value;\n    this.authorizationCode=value2;\n    this.errorMessage=null;\n  }\n else {\n    this.transactionID=null;\n    this.errorMessage=value;\n    this.authorizationCode=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Private constructor that normally would be a horrible API as it re-uses different arguments for different state.\n * @param success\n * @param value\n * @param isResponseDuplicate boolean whether the response is the result of a duplicate transaction returning a previously submitted transaction result <p> This is for handling the idempotent double-posting scenario, such as retries after timeouts.\n */\nprivate CreditCardAuthorizationResult(boolean success,String value,String value2,boolean isResponseDuplicate){\n  this.success=success;\n  this.isDuplicate=isResponseDuplicate;\n  if (success) {\n    this.transactionID=value;\n    this.authorizationCode=value2;\n    this.errorMessage=null;\n  }\n else {\n    this.transactionID=null;\n    this.errorMessage=value;\n    this.authorizationCode=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 47
      },
      "nodeContext" : "this.isDuplicate=isResponseDuplicate;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 53,
    "startColumnNumber" : 27,
    "endLineNumber" : 53,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}