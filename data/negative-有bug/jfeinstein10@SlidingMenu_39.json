{
  "id" : 39,
  "expression" : "fadeDeg",
  "projectName" : "jfeinstein10@SlidingMenu",
  "commitID" : "2e55ca5b4ff0f935f915d81b9a3f21eeb4647a26",
  "filePath" : "/example/src/com/jeremyfeinstein/slidingmenu/example/PropertiesActivity.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fadeDeg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 154,
      "startColumnNumber" : 2,
      "endLineNumber" : 154,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 154,
        "startColumnNumber" : 2,
        "endLineNumber" : 154,
        "endColumnNumber" : 22
      },
      "nodeContext" : "fadeDeg.setMax(1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 154,
        "startColumnNumber" : 2,
        "endLineNumber" : 154,
        "endColumnNumber" : 23
      },
      "nodeContext" : "fadeDeg.setMax(1000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5199,
        "startLineNumber" : 23,
        "startColumnNumber" : 49,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super.onCreate(savedInstanceState);\n  setSlidingActionBarEnabled(true);\n  setContentView(R.layout.properties);\n  RadioGroup mode=(RadioGroup)findViewById(R.id.mode);\n  mode.check(R.id.left);\n  mode.setOnCheckedChangeListener(new OnCheckedChangeListener(){\n    @Override public void onCheckedChanged(    RadioGroup group,    int checkedId){\n      SlidingMenu sm=getSlidingMenu();\nswitch (checkedId) {\ncase R.id.left:        sm.setMode(SlidingMenu.LEFT);\n      sm.setShadowDrawable(R.drawable.shadow);\n    break;\ncase R.id.right:  sm.setMode(SlidingMenu.RIGHT);\nsm.setShadowDrawable(R.drawable.shadowright);\nbreak;\ncase R.id.left_right:sm.setMode(SlidingMenu.LEFT_RIGHT);\nsm.setSecondaryMenu(R.layout.menu_frame_two);\ngetSupportFragmentManager().beginTransaction().replace(R.id.menu_frame_two,new SampleListFragment()).commit();\nsm.setSecondaryShadowDrawable(R.drawable.shadowright);\nsm.setShadowDrawable(R.drawable.shadow);\n}\n}\n}\n);\nRadioGroup touchAbove=(RadioGroup)findViewById(R.id.touch_above);\ntouchAbove.check(R.id.touch_above_full);\ntouchAbove.setOnCheckedChangeListener(new OnCheckedChangeListener(){\n@Override public void onCheckedChanged(RadioGroup group,int checkedId){\nswitch (checkedId) {\ncase R.id.touch_above_full:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_FULLSCREEN);\nbreak;\ncase R.id.touch_above_margin:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_MARGIN);\nbreak;\ncase R.id.touch_above_none:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_NONE);\nbreak;\n}\n}\n}\n);\nSeekBar scrollScale=(SeekBar)findViewById(R.id.scroll_scale);\nscrollScale.setMax(1000);\nscrollScale.setProgress(333);\nscrollScale.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\ngetSlidingMenu().setBehindScrollScale((float)seekBar.getProgress() / seekBar.getMax());\n}\n}\n);\nSeekBar behindWidth=(SeekBar)findViewById(R.id.behind_width);\nbehindWidth.setMax(1000);\nbehindWidth.setProgress(750);\nbehindWidth.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\nfloat percent=(float)seekBar.getProgress() / seekBar.getMax();\ngetSlidingMenu().setBehindWidth((int)(percent * getSlidingMenu().getWidth()));\ngetSlidingMenu().requestLayout();\n}\n}\n);\nCheckBox shadowEnabled=(CheckBox)findViewById(R.id.shadow_enabled);\nshadowEnabled.setChecked(true);\nshadowEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){\npublic void onCheckedChanged(CompoundButton buttonView,boolean isChecked){\nif (isChecked) getSlidingMenu().setShadowDrawable(getSlidingMenu().getMode() == SlidingMenu.LEFT ? R.drawable.shadow : R.drawable.shadowright);\n else getSlidingMenu().setShadowDrawable(null);\n}\n}\n);\nSeekBar shadowWidth=(SeekBar)findViewById(R.id.shadow_width);\nshadowWidth.setMax(1000);\nshadowWidth.setProgress(75);\nshadowWidth.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar arg0,int arg1,boolean arg2){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\nfloat percent=(float)seekBar.getProgress() / (float)seekBar.getMax();\nint width=(int)(percent * (float)getSlidingMenu().getWidth());\ngetSlidingMenu().setShadowWidth(width);\ngetSlidingMenu().invalidate();\n}\n}\n);\nCheckBox fadeEnabled=(CheckBox)findViewById(R.id.fade_enabled);\nfadeEnabled.setChecked(true);\nfadeEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){\n@Override public void onCheckedChanged(CompoundButton buttonView,boolean isChecked){\ngetSlidingMenu().setFadeEnabled(isChecked);\n}\n}\n);\nSeekBar fadeDeg=(SeekBar)findViewById(R.id.fade_degree);\nfadeDeg.setMax(1000);\nfadeDeg.setProgress(666);\nfadeDeg.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\ngetSlidingMenu().setFadeDegree((float)seekBar.getProgress() / seekBar.getMax());\n}\n}\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 781,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5259,
        "startLineNumber" : 22,
        "startColumnNumber" : 1,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  setSlidingActionBarEnabled(true);\n  setContentView(R.layout.properties);\n  RadioGroup mode=(RadioGroup)findViewById(R.id.mode);\n  mode.check(R.id.left);\n  mode.setOnCheckedChangeListener(new OnCheckedChangeListener(){\n    @Override public void onCheckedChanged(    RadioGroup group,    int checkedId){\n      SlidingMenu sm=getSlidingMenu();\nswitch (checkedId) {\ncase R.id.left:        sm.setMode(SlidingMenu.LEFT);\n      sm.setShadowDrawable(R.drawable.shadow);\n    break;\ncase R.id.right:  sm.setMode(SlidingMenu.RIGHT);\nsm.setShadowDrawable(R.drawable.shadowright);\nbreak;\ncase R.id.left_right:sm.setMode(SlidingMenu.LEFT_RIGHT);\nsm.setSecondaryMenu(R.layout.menu_frame_two);\ngetSupportFragmentManager().beginTransaction().replace(R.id.menu_frame_two,new SampleListFragment()).commit();\nsm.setSecondaryShadowDrawable(R.drawable.shadowright);\nsm.setShadowDrawable(R.drawable.shadow);\n}\n}\n}\n);\nRadioGroup touchAbove=(RadioGroup)findViewById(R.id.touch_above);\ntouchAbove.check(R.id.touch_above_full);\ntouchAbove.setOnCheckedChangeListener(new OnCheckedChangeListener(){\n@Override public void onCheckedChanged(RadioGroup group,int checkedId){\nswitch (checkedId) {\ncase R.id.touch_above_full:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_FULLSCREEN);\nbreak;\ncase R.id.touch_above_margin:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_MARGIN);\nbreak;\ncase R.id.touch_above_none:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_NONE);\nbreak;\n}\n}\n}\n);\nSeekBar scrollScale=(SeekBar)findViewById(R.id.scroll_scale);\nscrollScale.setMax(1000);\nscrollScale.setProgress(333);\nscrollScale.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\ngetSlidingMenu().setBehindScrollScale((float)seekBar.getProgress() / seekBar.getMax());\n}\n}\n);\nSeekBar behindWidth=(SeekBar)findViewById(R.id.behind_width);\nbehindWidth.setMax(1000);\nbehindWidth.setProgress(750);\nbehindWidth.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\nfloat percent=(float)seekBar.getProgress() / seekBar.getMax();\ngetSlidingMenu().setBehindWidth((int)(percent * getSlidingMenu().getWidth()));\ngetSlidingMenu().requestLayout();\n}\n}\n);\nCheckBox shadowEnabled=(CheckBox)findViewById(R.id.shadow_enabled);\nshadowEnabled.setChecked(true);\nshadowEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){\npublic void onCheckedChanged(CompoundButton buttonView,boolean isChecked){\nif (isChecked) getSlidingMenu().setShadowDrawable(getSlidingMenu().getMode() == SlidingMenu.LEFT ? R.drawable.shadow : R.drawable.shadowright);\n else getSlidingMenu().setShadowDrawable(null);\n}\n}\n);\nSeekBar shadowWidth=(SeekBar)findViewById(R.id.shadow_width);\nshadowWidth.setMax(1000);\nshadowWidth.setProgress(75);\nshadowWidth.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar arg0,int arg1,boolean arg2){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\nfloat percent=(float)seekBar.getProgress() / (float)seekBar.getMax();\nint width=(int)(percent * (float)getSlidingMenu().getWidth());\ngetSlidingMenu().setShadowWidth(width);\ngetSlidingMenu().invalidate();\n}\n}\n);\nCheckBox fadeEnabled=(CheckBox)findViewById(R.id.fade_enabled);\nfadeEnabled.setChecked(true);\nfadeEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){\n@Override public void onCheckedChanged(CompoundButton buttonView,boolean isChecked){\ngetSlidingMenu().setFadeEnabled(isChecked);\n}\n}\n);\nSeekBar fadeDeg=(SeekBar)findViewById(R.id.fade_degree);\nfadeDeg.setMax(1000);\nfadeDeg.setProgress(666);\nfadeDeg.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\ngetSlidingMenu().setFadeDegree((float)seekBar.getProgress() / seekBar.getMax());\n}\n}\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 154,
        "startColumnNumber" : 2,
        "endLineNumber" : 154,
        "endColumnNumber" : 23
      },
      "nodeContext" : "fadeDeg.setMax(1000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.jeremyfeinstein.slidingmenu.example.SeekBar"
  }, {
    "nodeContext" : "fadeDeg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 155,
      "startColumnNumber" : 2,
      "endLineNumber" : 155,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 155,
        "endColumnNumber" : 26
      },
      "nodeContext" : "fadeDeg.setProgress(666)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 155,
        "endColumnNumber" : 27
      },
      "nodeContext" : "fadeDeg.setProgress(666);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5199,
        "startLineNumber" : 23,
        "startColumnNumber" : 49,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super.onCreate(savedInstanceState);\n  setSlidingActionBarEnabled(true);\n  setContentView(R.layout.properties);\n  RadioGroup mode=(RadioGroup)findViewById(R.id.mode);\n  mode.check(R.id.left);\n  mode.setOnCheckedChangeListener(new OnCheckedChangeListener(){\n    @Override public void onCheckedChanged(    RadioGroup group,    int checkedId){\n      SlidingMenu sm=getSlidingMenu();\nswitch (checkedId) {\ncase R.id.left:        sm.setMode(SlidingMenu.LEFT);\n      sm.setShadowDrawable(R.drawable.shadow);\n    break;\ncase R.id.right:  sm.setMode(SlidingMenu.RIGHT);\nsm.setShadowDrawable(R.drawable.shadowright);\nbreak;\ncase R.id.left_right:sm.setMode(SlidingMenu.LEFT_RIGHT);\nsm.setSecondaryMenu(R.layout.menu_frame_two);\ngetSupportFragmentManager().beginTransaction().replace(R.id.menu_frame_two,new SampleListFragment()).commit();\nsm.setSecondaryShadowDrawable(R.drawable.shadowright);\nsm.setShadowDrawable(R.drawable.shadow);\n}\n}\n}\n);\nRadioGroup touchAbove=(RadioGroup)findViewById(R.id.touch_above);\ntouchAbove.check(R.id.touch_above_full);\ntouchAbove.setOnCheckedChangeListener(new OnCheckedChangeListener(){\n@Override public void onCheckedChanged(RadioGroup group,int checkedId){\nswitch (checkedId) {\ncase R.id.touch_above_full:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_FULLSCREEN);\nbreak;\ncase R.id.touch_above_margin:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_MARGIN);\nbreak;\ncase R.id.touch_above_none:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_NONE);\nbreak;\n}\n}\n}\n);\nSeekBar scrollScale=(SeekBar)findViewById(R.id.scroll_scale);\nscrollScale.setMax(1000);\nscrollScale.setProgress(333);\nscrollScale.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\ngetSlidingMenu().setBehindScrollScale((float)seekBar.getProgress() / seekBar.getMax());\n}\n}\n);\nSeekBar behindWidth=(SeekBar)findViewById(R.id.behind_width);\nbehindWidth.setMax(1000);\nbehindWidth.setProgress(750);\nbehindWidth.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\nfloat percent=(float)seekBar.getProgress() / seekBar.getMax();\ngetSlidingMenu().setBehindWidth((int)(percent * getSlidingMenu().getWidth()));\ngetSlidingMenu().requestLayout();\n}\n}\n);\nCheckBox shadowEnabled=(CheckBox)findViewById(R.id.shadow_enabled);\nshadowEnabled.setChecked(true);\nshadowEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){\npublic void onCheckedChanged(CompoundButton buttonView,boolean isChecked){\nif (isChecked) getSlidingMenu().setShadowDrawable(getSlidingMenu().getMode() == SlidingMenu.LEFT ? R.drawable.shadow : R.drawable.shadowright);\n else getSlidingMenu().setShadowDrawable(null);\n}\n}\n);\nSeekBar shadowWidth=(SeekBar)findViewById(R.id.shadow_width);\nshadowWidth.setMax(1000);\nshadowWidth.setProgress(75);\nshadowWidth.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar arg0,int arg1,boolean arg2){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\nfloat percent=(float)seekBar.getProgress() / (float)seekBar.getMax();\nint width=(int)(percent * (float)getSlidingMenu().getWidth());\ngetSlidingMenu().setShadowWidth(width);\ngetSlidingMenu().invalidate();\n}\n}\n);\nCheckBox fadeEnabled=(CheckBox)findViewById(R.id.fade_enabled);\nfadeEnabled.setChecked(true);\nfadeEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){\n@Override public void onCheckedChanged(CompoundButton buttonView,boolean isChecked){\ngetSlidingMenu().setFadeEnabled(isChecked);\n}\n}\n);\nSeekBar fadeDeg=(SeekBar)findViewById(R.id.fade_degree);\nfadeDeg.setMax(1000);\nfadeDeg.setProgress(666);\nfadeDeg.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\ngetSlidingMenu().setFadeDegree((float)seekBar.getProgress() / seekBar.getMax());\n}\n}\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 781,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5259,
        "startLineNumber" : 22,
        "startColumnNumber" : 1,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  setSlidingActionBarEnabled(true);\n  setContentView(R.layout.properties);\n  RadioGroup mode=(RadioGroup)findViewById(R.id.mode);\n  mode.check(R.id.left);\n  mode.setOnCheckedChangeListener(new OnCheckedChangeListener(){\n    @Override public void onCheckedChanged(    RadioGroup group,    int checkedId){\n      SlidingMenu sm=getSlidingMenu();\nswitch (checkedId) {\ncase R.id.left:        sm.setMode(SlidingMenu.LEFT);\n      sm.setShadowDrawable(R.drawable.shadow);\n    break;\ncase R.id.right:  sm.setMode(SlidingMenu.RIGHT);\nsm.setShadowDrawable(R.drawable.shadowright);\nbreak;\ncase R.id.left_right:sm.setMode(SlidingMenu.LEFT_RIGHT);\nsm.setSecondaryMenu(R.layout.menu_frame_two);\ngetSupportFragmentManager().beginTransaction().replace(R.id.menu_frame_two,new SampleListFragment()).commit();\nsm.setSecondaryShadowDrawable(R.drawable.shadowright);\nsm.setShadowDrawable(R.drawable.shadow);\n}\n}\n}\n);\nRadioGroup touchAbove=(RadioGroup)findViewById(R.id.touch_above);\ntouchAbove.check(R.id.touch_above_full);\ntouchAbove.setOnCheckedChangeListener(new OnCheckedChangeListener(){\n@Override public void onCheckedChanged(RadioGroup group,int checkedId){\nswitch (checkedId) {\ncase R.id.touch_above_full:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_FULLSCREEN);\nbreak;\ncase R.id.touch_above_margin:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_MARGIN);\nbreak;\ncase R.id.touch_above_none:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_NONE);\nbreak;\n}\n}\n}\n);\nSeekBar scrollScale=(SeekBar)findViewById(R.id.scroll_scale);\nscrollScale.setMax(1000);\nscrollScale.setProgress(333);\nscrollScale.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\ngetSlidingMenu().setBehindScrollScale((float)seekBar.getProgress() / seekBar.getMax());\n}\n}\n);\nSeekBar behindWidth=(SeekBar)findViewById(R.id.behind_width);\nbehindWidth.setMax(1000);\nbehindWidth.setProgress(750);\nbehindWidth.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\nfloat percent=(float)seekBar.getProgress() / seekBar.getMax();\ngetSlidingMenu().setBehindWidth((int)(percent * getSlidingMenu().getWidth()));\ngetSlidingMenu().requestLayout();\n}\n}\n);\nCheckBox shadowEnabled=(CheckBox)findViewById(R.id.shadow_enabled);\nshadowEnabled.setChecked(true);\nshadowEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){\npublic void onCheckedChanged(CompoundButton buttonView,boolean isChecked){\nif (isChecked) getSlidingMenu().setShadowDrawable(getSlidingMenu().getMode() == SlidingMenu.LEFT ? R.drawable.shadow : R.drawable.shadowright);\n else getSlidingMenu().setShadowDrawable(null);\n}\n}\n);\nSeekBar shadowWidth=(SeekBar)findViewById(R.id.shadow_width);\nshadowWidth.setMax(1000);\nshadowWidth.setProgress(75);\nshadowWidth.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar arg0,int arg1,boolean arg2){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\nfloat percent=(float)seekBar.getProgress() / (float)seekBar.getMax();\nint width=(int)(percent * (float)getSlidingMenu().getWidth());\ngetSlidingMenu().setShadowWidth(width);\ngetSlidingMenu().invalidate();\n}\n}\n);\nCheckBox fadeEnabled=(CheckBox)findViewById(R.id.fade_enabled);\nfadeEnabled.setChecked(true);\nfadeEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){\n@Override public void onCheckedChanged(CompoundButton buttonView,boolean isChecked){\ngetSlidingMenu().setFadeEnabled(isChecked);\n}\n}\n);\nSeekBar fadeDeg=(SeekBar)findViewById(R.id.fade_degree);\nfadeDeg.setMax(1000);\nfadeDeg.setProgress(666);\nfadeDeg.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\ngetSlidingMenu().setFadeDegree((float)seekBar.getProgress() / seekBar.getMax());\n}\n}\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 155,
        "endColumnNumber" : 27
      },
      "nodeContext" : "fadeDeg.setProgress(666);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.jeremyfeinstein.slidingmenu.example.SeekBar"
  }, {
    "nodeContext" : "fadeDeg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 156,
      "startColumnNumber" : 2,
      "endLineNumber" : 156,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 156,
        "startColumnNumber" : 2,
        "endLineNumber" : 166,
        "endColumnNumber" : 4
      },
      "nodeContext" : "fadeDeg.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n  @Override public void onProgressChanged(  SeekBar seekBar,  int progress,  boolean fromUser){\n  }\n  @Override public void onStartTrackingTouch(  SeekBar seekBar){\n  }\n  @Override public void onStopTrackingTouch(  SeekBar seekBar){\n    getSlidingMenu().setFadeDegree((float)seekBar.getProgress() / seekBar.getMax());\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 156,
        "startColumnNumber" : 2,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "fadeDeg.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n  @Override public void onProgressChanged(  SeekBar seekBar,  int progress,  boolean fromUser){\n  }\n  @Override public void onStartTrackingTouch(  SeekBar seekBar){\n  }\n  @Override public void onStopTrackingTouch(  SeekBar seekBar){\n    getSlidingMenu().setFadeDegree((float)seekBar.getProgress() / seekBar.getMax());\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 61,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5199,
        "startLineNumber" : 23,
        "startColumnNumber" : 49,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super.onCreate(savedInstanceState);\n  setSlidingActionBarEnabled(true);\n  setContentView(R.layout.properties);\n  RadioGroup mode=(RadioGroup)findViewById(R.id.mode);\n  mode.check(R.id.left);\n  mode.setOnCheckedChangeListener(new OnCheckedChangeListener(){\n    @Override public void onCheckedChanged(    RadioGroup group,    int checkedId){\n      SlidingMenu sm=getSlidingMenu();\nswitch (checkedId) {\ncase R.id.left:        sm.setMode(SlidingMenu.LEFT);\n      sm.setShadowDrawable(R.drawable.shadow);\n    break;\ncase R.id.right:  sm.setMode(SlidingMenu.RIGHT);\nsm.setShadowDrawable(R.drawable.shadowright);\nbreak;\ncase R.id.left_right:sm.setMode(SlidingMenu.LEFT_RIGHT);\nsm.setSecondaryMenu(R.layout.menu_frame_two);\ngetSupportFragmentManager().beginTransaction().replace(R.id.menu_frame_two,new SampleListFragment()).commit();\nsm.setSecondaryShadowDrawable(R.drawable.shadowright);\nsm.setShadowDrawable(R.drawable.shadow);\n}\n}\n}\n);\nRadioGroup touchAbove=(RadioGroup)findViewById(R.id.touch_above);\ntouchAbove.check(R.id.touch_above_full);\ntouchAbove.setOnCheckedChangeListener(new OnCheckedChangeListener(){\n@Override public void onCheckedChanged(RadioGroup group,int checkedId){\nswitch (checkedId) {\ncase R.id.touch_above_full:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_FULLSCREEN);\nbreak;\ncase R.id.touch_above_margin:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_MARGIN);\nbreak;\ncase R.id.touch_above_none:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_NONE);\nbreak;\n}\n}\n}\n);\nSeekBar scrollScale=(SeekBar)findViewById(R.id.scroll_scale);\nscrollScale.setMax(1000);\nscrollScale.setProgress(333);\nscrollScale.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\ngetSlidingMenu().setBehindScrollScale((float)seekBar.getProgress() / seekBar.getMax());\n}\n}\n);\nSeekBar behindWidth=(SeekBar)findViewById(R.id.behind_width);\nbehindWidth.setMax(1000);\nbehindWidth.setProgress(750);\nbehindWidth.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\nfloat percent=(float)seekBar.getProgress() / seekBar.getMax();\ngetSlidingMenu().setBehindWidth((int)(percent * getSlidingMenu().getWidth()));\ngetSlidingMenu().requestLayout();\n}\n}\n);\nCheckBox shadowEnabled=(CheckBox)findViewById(R.id.shadow_enabled);\nshadowEnabled.setChecked(true);\nshadowEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){\npublic void onCheckedChanged(CompoundButton buttonView,boolean isChecked){\nif (isChecked) getSlidingMenu().setShadowDrawable(getSlidingMenu().getMode() == SlidingMenu.LEFT ? R.drawable.shadow : R.drawable.shadowright);\n else getSlidingMenu().setShadowDrawable(null);\n}\n}\n);\nSeekBar shadowWidth=(SeekBar)findViewById(R.id.shadow_width);\nshadowWidth.setMax(1000);\nshadowWidth.setProgress(75);\nshadowWidth.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar arg0,int arg1,boolean arg2){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\nfloat percent=(float)seekBar.getProgress() / (float)seekBar.getMax();\nint width=(int)(percent * (float)getSlidingMenu().getWidth());\ngetSlidingMenu().setShadowWidth(width);\ngetSlidingMenu().invalidate();\n}\n}\n);\nCheckBox fadeEnabled=(CheckBox)findViewById(R.id.fade_enabled);\nfadeEnabled.setChecked(true);\nfadeEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){\n@Override public void onCheckedChanged(CompoundButton buttonView,boolean isChecked){\ngetSlidingMenu().setFadeEnabled(isChecked);\n}\n}\n);\nSeekBar fadeDeg=(SeekBar)findViewById(R.id.fade_degree);\nfadeDeg.setMax(1000);\nfadeDeg.setProgress(666);\nfadeDeg.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\ngetSlidingMenu().setFadeDegree((float)seekBar.getProgress() / seekBar.getMax());\n}\n}\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 781,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5259,
        "startLineNumber" : 22,
        "startColumnNumber" : 1,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  setSlidingActionBarEnabled(true);\n  setContentView(R.layout.properties);\n  RadioGroup mode=(RadioGroup)findViewById(R.id.mode);\n  mode.check(R.id.left);\n  mode.setOnCheckedChangeListener(new OnCheckedChangeListener(){\n    @Override public void onCheckedChanged(    RadioGroup group,    int checkedId){\n      SlidingMenu sm=getSlidingMenu();\nswitch (checkedId) {\ncase R.id.left:        sm.setMode(SlidingMenu.LEFT);\n      sm.setShadowDrawable(R.drawable.shadow);\n    break;\ncase R.id.right:  sm.setMode(SlidingMenu.RIGHT);\nsm.setShadowDrawable(R.drawable.shadowright);\nbreak;\ncase R.id.left_right:sm.setMode(SlidingMenu.LEFT_RIGHT);\nsm.setSecondaryMenu(R.layout.menu_frame_two);\ngetSupportFragmentManager().beginTransaction().replace(R.id.menu_frame_two,new SampleListFragment()).commit();\nsm.setSecondaryShadowDrawable(R.drawable.shadowright);\nsm.setShadowDrawable(R.drawable.shadow);\n}\n}\n}\n);\nRadioGroup touchAbove=(RadioGroup)findViewById(R.id.touch_above);\ntouchAbove.check(R.id.touch_above_full);\ntouchAbove.setOnCheckedChangeListener(new OnCheckedChangeListener(){\n@Override public void onCheckedChanged(RadioGroup group,int checkedId){\nswitch (checkedId) {\ncase R.id.touch_above_full:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_FULLSCREEN);\nbreak;\ncase R.id.touch_above_margin:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_MARGIN);\nbreak;\ncase R.id.touch_above_none:getSlidingMenu().setTouchModeAbove(SlidingMenu.TOUCHMODE_NONE);\nbreak;\n}\n}\n}\n);\nSeekBar scrollScale=(SeekBar)findViewById(R.id.scroll_scale);\nscrollScale.setMax(1000);\nscrollScale.setProgress(333);\nscrollScale.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\ngetSlidingMenu().setBehindScrollScale((float)seekBar.getProgress() / seekBar.getMax());\n}\n}\n);\nSeekBar behindWidth=(SeekBar)findViewById(R.id.behind_width);\nbehindWidth.setMax(1000);\nbehindWidth.setProgress(750);\nbehindWidth.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\nfloat percent=(float)seekBar.getProgress() / seekBar.getMax();\ngetSlidingMenu().setBehindWidth((int)(percent * getSlidingMenu().getWidth()));\ngetSlidingMenu().requestLayout();\n}\n}\n);\nCheckBox shadowEnabled=(CheckBox)findViewById(R.id.shadow_enabled);\nshadowEnabled.setChecked(true);\nshadowEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){\npublic void onCheckedChanged(CompoundButton buttonView,boolean isChecked){\nif (isChecked) getSlidingMenu().setShadowDrawable(getSlidingMenu().getMode() == SlidingMenu.LEFT ? R.drawable.shadow : R.drawable.shadowright);\n else getSlidingMenu().setShadowDrawable(null);\n}\n}\n);\nSeekBar shadowWidth=(SeekBar)findViewById(R.id.shadow_width);\nshadowWidth.setMax(1000);\nshadowWidth.setProgress(75);\nshadowWidth.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar arg0,int arg1,boolean arg2){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\nfloat percent=(float)seekBar.getProgress() / (float)seekBar.getMax();\nint width=(int)(percent * (float)getSlidingMenu().getWidth());\ngetSlidingMenu().setShadowWidth(width);\ngetSlidingMenu().invalidate();\n}\n}\n);\nCheckBox fadeEnabled=(CheckBox)findViewById(R.id.fade_enabled);\nfadeEnabled.setChecked(true);\nfadeEnabled.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){\n@Override public void onCheckedChanged(CompoundButton buttonView,boolean isChecked){\ngetSlidingMenu().setFadeEnabled(isChecked);\n}\n}\n);\nSeekBar fadeDeg=(SeekBar)findViewById(R.id.fade_degree);\nfadeDeg.setMax(1000);\nfadeDeg.setProgress(666);\nfadeDeg.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n@Override public void onProgressChanged(SeekBar seekBar,int progress,boolean fromUser){\n}\n@Override public void onStartTrackingTouch(SeekBar seekBar){\n}\n@Override public void onStopTrackingTouch(SeekBar seekBar){\ngetSlidingMenu().setFadeDegree((float)seekBar.getProgress() / seekBar.getMax());\n}\n}\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 156,
        "startColumnNumber" : 2,
        "endLineNumber" : 166,
        "endColumnNumber" : 4
      },
      "nodeContext" : "fadeDeg.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){\n  @Override public void onProgressChanged(  SeekBar seekBar,  int progress,  boolean fromUser){\n  }\n  @Override public void onStartTrackingTouch(  SeekBar seekBar){\n  }\n  @Override public void onStopTrackingTouch(  SeekBar seekBar){\n    getSlidingMenu().setFadeDegree((float)seekBar.getProgress() / seekBar.getMax());\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 60,
      "astHeight" : 11
    },
    "tokenLength" : 1,
    "type" : "com.jeremyfeinstein.slidingmenu.example.SeekBar"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 154,
    "startColumnNumber" : 2,
    "endLineNumber" : 154,
    "endColumnNumber" : 9
  }, {
    "charLength" : 7,
    "startLineNumber" : 155,
    "startColumnNumber" : 2,
    "endLineNumber" : 155,
    "endColumnNumber" : 9
  }, {
    "charLength" : 7,
    "startLineNumber" : 156,
    "startColumnNumber" : 2,
    "endLineNumber" : 156,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}