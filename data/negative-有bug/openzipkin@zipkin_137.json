{
  "id" : 137,
  "expression" : "0b0000_0011",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-tests/src/test/java/zipkin2/internal/WriteBufferTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0b0000_0011",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 225,
      "startColumnNumber" : 49,
      "endLineNumber" : 225,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 224,
        "startColumnNumber" : 4,
        "endLineNumber" : 225,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertThat(bytes).containsExactly(0b1111_1111,0b1111_1111,0b0000_0011)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 224,
        "startColumnNumber" : 4,
        "endLineNumber" : 225,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(bytes).containsExactly(0b1111_1111,0b1111_1111,0b0000_0011);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 205,
        "startColumnNumber" : 40,
        "endLineNumber" : 234,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] bytes=new byte[WriteBuffer.varintSizeInBytes(80)];\n  WriteBuffer.wrap(bytes).writeVarint(80);\n  assertThat(bytes).containsExactly(0b0101_0000);\n  bytes=new byte[WriteBuffer.varintSizeInBytes(16383)];\n  WriteBuffer.wrap(bytes).writeVarint(16383);\n  assertThat(bytes).containsExactly(0b1111_1111,0b0111_1111);\n  bytes=new byte[WriteBuffer.varintSizeInBytes(65535)];\n  WriteBuffer.wrap(bytes).writeVarint(65535);\n  assertThat(bytes).containsExactly(0b1111_1111,0b1111_1111,0b0000_0011);\n  bytes=new byte[WriteBuffer.varintSizeInBytes(0xFFFFFFFF)];\n  WriteBuffer.wrap(bytes).writeVarint(0xFFFFFFFF);\n  assertThat(bytes).containsExactly(0b1111_1111,0b1111_1111,0b1111_1111,0b1111_1111,0b0000_1111);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1015,
        "startLineNumber" : 205,
        "startColumnNumber" : 2,
        "endLineNumber" : 234,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void writeVarint_ports(){\n  byte[] bytes=new byte[WriteBuffer.varintSizeInBytes(80)];\n  WriteBuffer.wrap(bytes).writeVarint(80);\n  assertThat(bytes).containsExactly(0b0101_0000);\n  bytes=new byte[WriteBuffer.varintSizeInBytes(16383)];\n  WriteBuffer.wrap(bytes).writeVarint(16383);\n  assertThat(bytes).containsExactly(0b1111_1111,0b0111_1111);\n  bytes=new byte[WriteBuffer.varintSizeInBytes(65535)];\n  WriteBuffer.wrap(bytes).writeVarint(65535);\n  assertThat(bytes).containsExactly(0b1111_1111,0b1111_1111,0b0000_0011);\n  bytes=new byte[WriteBuffer.varintSizeInBytes(0xFFFFFFFF)];\n  WriteBuffer.wrap(bytes).writeVarint(0xFFFFFFFF);\n  assertThat(bytes).containsExactly(0b1111_1111,0b1111_1111,0b1111_1111,0b1111_1111,0b0000_1111);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 224,
        "startColumnNumber" : 4,
        "endLineNumber" : 225,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertThat(bytes).containsExactly(0b1111_1111,0b1111_1111,0b0000_0011)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 225,
    "startColumnNumber" : 49,
    "endLineNumber" : 225,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}