{
  "id" : 415,
  "expression" : "0",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/store/src/test/java/org/apache/rocketmq/store/timer/TimerLogTest.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 53,
      "startColumnNumber" : 26,
      "endLineNumber" : 53,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 28
      },
      "nodeContext" : "byteBuffer.putInt(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 29
      },
      "nodeContext" : "byteBuffer.putInt(0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1428,
        "startLineNumber" : 48,
        "startColumnNumber" : 62,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1497,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAppendRollSelectDelete() throws Exception {\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 29
      },
      "nodeContext" : "byteBuffer.putInt(0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 55,
      "startColumnNumber" : 26,
      "endLineNumber" : 55,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 28
      },
      "nodeContext" : "byteBuffer.putInt(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 29
      },
      "nodeContext" : "byteBuffer.putInt(0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1428,
        "startLineNumber" : 48,
        "startColumnNumber" : 62,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1497,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAppendRollSelectDelete() throws Exception {\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 29
      },
      "nodeContext" : "byteBuffer.putInt(0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 59,
      "startColumnNumber" : 26,
      "endLineNumber" : 59,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 28
      },
      "nodeContext" : "byteBuffer.putInt(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 29
      },
      "nodeContext" : "byteBuffer.putInt(0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1428,
        "startLineNumber" : 48,
        "startColumnNumber" : 62,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1497,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAppendRollSelectDelete() throws Exception {\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 29
      },
      "nodeContext" : "byteBuffer.putInt(0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 61,
      "startColumnNumber" : 21,
      "endLineNumber" : 61,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 61,
        "startColumnNumber" : 17,
        "endLineNumber" : 61,
        "endColumnNumber" : 22
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 61,
        "startColumnNumber" : 13,
        "endLineNumber" : 61,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n  assertEquals(i * TimerLog.UNIT_SIZE,ret);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1428,
        "startLineNumber" : 48,
        "startColumnNumber" : 62,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1497,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAppendRollSelectDelete() throws Exception {\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 61,
        "startColumnNumber" : 13,
        "endLineNumber" : 61,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 62,
      "startColumnNumber" : 54,
      "endLineNumber" : 62,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 62,
        "startColumnNumber" : 18,
        "endLineNumber" : 62,
        "endColumnNumber" : 76
      },
      "nodeContext" : "timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 76
      },
      "nodeContext" : "ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 77
      },
      "nodeContext" : "ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 61,
        "startColumnNumber" : 37,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n  assertEquals(i * TimerLog.UNIT_SIZE,ret);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n  assertEquals(i * TimerLog.UNIT_SIZE,ret);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1428,
        "startLineNumber" : 48,
        "startColumnNumber" : 62,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1497,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAppendRollSelectDelete() throws Exception {\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 77
      },
      "nodeContext" : "ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 65,
      "startColumnNumber" : 21,
      "endLineNumber" : 65,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 65,
        "startColumnNumber" : 17,
        "endLineNumber" : 65,
        "endColumnNumber" : 22
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 65,
        "startColumnNumber" : 13,
        "endLineNumber" : 65,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 100; i++) {\n  timerLog.append(byteBuffer.array());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1428,
        "startLineNumber" : 48,
        "startColumnNumber" : 62,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1497,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAppendRollSelectDelete() throws Exception {\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 65,
        "startColumnNumber" : 13,
        "endLineNumber" : 65,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 74,
      "startColumnNumber" : 21,
      "endLineNumber" : 74,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals(0,wholeSbr.getStartOffset())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(0,wholeSbr.getStartOffset());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1428,
        "startLineNumber" : 48,
        "startColumnNumber" : 62,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1497,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAppendRollSelectDelete() throws Exception {\n  TimerLog timerLog=createTimerLog(null);\n  ByteBuffer byteBuffer=ByteBuffer.allocate(TimerLog.UNIT_SIZE);\n  byteBuffer.putInt(TimerLog.UNIT_SIZE);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(Long.MAX_VALUE);\n  byteBuffer.putInt(0);\n  byteBuffer.putLong(1000);\n  byteBuffer.putInt(10);\n  byteBuffer.putInt(123);\n  byteBuffer.putInt(0);\n  long ret=-1;\n  for (int i=0; i < 10; i++) {\n    ret=timerLog.append(byteBuffer.array(),0,TimerLog.UNIT_SIZE);\n    assertEquals(i * TimerLog.UNIT_SIZE,ret);\n  }\n  for (int i=0; i < 100; i++) {\n    timerLog.append(byteBuffer.array());\n  }\n  assertEquals(6,timerLog.getMappedFileQueue().getMappedFiles().size());\n  SelectMappedBufferResult sbr=timerLog.getTimerMessage(ret);\n  assertNotNull(sbr);\n  assertEquals(TimerLog.UNIT_SIZE,sbr.getByteBuffer().getInt());\n  sbr.release();\n  SelectMappedBufferResult wholeSbr=timerLog.getWholeBuffer(ret);\n  assertEquals(0,wholeSbr.getStartOffset());\n  wholeSbr.release();\n  timerLog.getMappedFileQueue().deleteExpiredFileByOffsetForTimerLog(1024,timerLog.getOffsetForLastUnit(),TimerLog.UNIT_SIZE);\n  assertEquals(1,timerLog.getMappedFileQueue().getMappedFiles().size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(0,wholeSbr.getStartOffset());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 53,
    "startColumnNumber" : 26,
    "endLineNumber" : 53,
    "endColumnNumber" : 27
  }, {
    "charLength" : 1,
    "startLineNumber" : 55,
    "startColumnNumber" : 26,
    "endLineNumber" : 55,
    "endColumnNumber" : 27
  }, {
    "charLength" : 1,
    "startLineNumber" : 59,
    "startColumnNumber" : 26,
    "endLineNumber" : 59,
    "endColumnNumber" : 27
  }, {
    "charLength" : 1,
    "startLineNumber" : 61,
    "startColumnNumber" : 21,
    "endLineNumber" : 61,
    "endColumnNumber" : 22
  }, {
    "charLength" : 1,
    "startLineNumber" : 62,
    "startColumnNumber" : 54,
    "endLineNumber" : 62,
    "endColumnNumber" : 55
  }, {
    "charLength" : 1,
    "startLineNumber" : 65,
    "startColumnNumber" : 21,
    "endLineNumber" : 65,
    "endColumnNumber" : 22
  }, {
    "charLength" : 1,
    "startLineNumber" : 74,
    "startColumnNumber" : 21,
    "endLineNumber" : 74,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  } ]
}