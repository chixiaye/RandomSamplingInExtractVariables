{
  "id" : 455,
  "expression" : "\"true\"",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/test/java/com/navercorp/pinpoint/profiler/instrument/ASMMethodNodeAdapterAddInterceptorTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"true\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 146,
      "startColumnNumber" : 118,
      "endLineNumber" : 146,
      "endColumnNumber" : 124
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 146,
        "startColumnNumber" : 97,
        "endLineNumber" : 146,
        "endColumnNumber" : 125
      },
      "nodeContext" : "Boolean.parseBoolean(\"true\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 146,
        "startColumnNumber" : 96,
        "endLineNumber" : 146,
        "endColumnNumber" : 126
      },
      "nodeContext" : "{Boolean.parseBoolean(\"true\")}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 146,
        "startColumnNumber" : 84,
        "endLineNumber" : 146,
        "endColumnNumber" : 126
      },
      "nodeContext" : "new Object[]{Boolean.parseBoolean(\"true\")}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 140
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 141
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8556,
        "startLineNumber" : 137,
        "startColumnNumber" : 94,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class clazz=addInterceptor(interceptorId,\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass\",interceptorClass);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[0],new Object[0],null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort(\"0\"),Short.parseShort(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort(\"0\"),Short.parseShort(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class},new Object[]{\"foo\"},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short.class},new Object[]{new Short(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{\"foo\",\"bar\"}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte(\"0\"),new Byte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short(\"0\"),new Short(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{\"foo\",\"bar\"}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte(\"0\"),new Byte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short(\"0\"),new Short(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{\"foo\",1,Byte.parseByte(\"0\"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1903,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8646,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void checkConstructor(int interceptorId,Class interceptorClass) throws Exception {\n  Class clazz=addInterceptor(interceptorId,\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass\",interceptorClass);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[0],new Object[0],null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort(\"0\"),Short.parseShort(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort(\"0\"),Short.parseShort(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class},new Object[]{\"foo\"},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short.class},new Object[]{new Short(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{\"foo\",\"bar\"}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte(\"0\"),new Byte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short(\"0\"),new Short(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{\"foo\",\"bar\"}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte(\"0\"),new Byte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short(\"0\"),new Short(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{\"foo\",1,Byte.parseByte(\"0\"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1916,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 141
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"true\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 154,
      "startColumnNumber" : 134,
      "endLineNumber" : 154,
      "endColumnNumber" : 140
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 154,
        "startColumnNumber" : 113,
        "endLineNumber" : 154,
        "endColumnNumber" : 141
      },
      "nodeContext" : "Boolean.parseBoolean(\"true\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 154,
        "startColumnNumber" : 112,
        "endLineNumber" : 154,
        "endColumnNumber" : 173
      },
      "nodeContext" : "{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 154,
        "startColumnNumber" : 99,
        "endLineNumber" : 154,
        "endColumnNumber" : 173
      },
      "nodeContext" : "new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 154,
        "startColumnNumber" : 98,
        "endLineNumber" : 154,
        "endColumnNumber" : 174
      },
      "nodeContext" : "{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 154,
        "startColumnNumber" : 86,
        "endLineNumber" : 154,
        "endColumnNumber" : 174
      },
      "nodeContext" : "new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 188
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 189
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8556,
        "startLineNumber" : 137,
        "startColumnNumber" : 94,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class clazz=addInterceptor(interceptorId,\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass\",interceptorClass);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[0],new Object[0],null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort(\"0\"),Short.parseShort(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort(\"0\"),Short.parseShort(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class},new Object[]{\"foo\"},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short.class},new Object[]{new Short(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{\"foo\",\"bar\"}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte(\"0\"),new Byte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short(\"0\"),new Short(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{\"foo\",\"bar\"}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte(\"0\"),new Byte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short(\"0\"),new Short(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{\"foo\",1,Byte.parseByte(\"0\"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1903,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8646,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void checkConstructor(int interceptorId,Class interceptorClass) throws Exception {\n  Class clazz=addInterceptor(interceptorId,\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass\",interceptorClass);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[0],new Object[0],null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort(\"0\"),Short.parseShort(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort(\"0\"),Short.parseShort(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class},new Object[]{\"foo\"},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short.class},new Object[]{new Short(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{\"foo\",\"bar\"}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte(\"0\"),new Byte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short(\"0\"),new Short(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{\"foo\",\"bar\"}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte(\"0\"),new Byte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short(\"0\"),new Short(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{\"foo\",1,Byte.parseByte(\"0\"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1916,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 189
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"true\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 162,
      "startColumnNumber" : 139,
      "endLineNumber" : 162,
      "endColumnNumber" : 145
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 162,
        "startColumnNumber" : 118,
        "endLineNumber" : 162,
        "endColumnNumber" : 146
      },
      "nodeContext" : "Boolean.parseBoolean(\"true\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 162,
        "startColumnNumber" : 117,
        "endLineNumber" : 162,
        "endColumnNumber" : 178
      },
      "nodeContext" : "{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 162,
        "startColumnNumber" : 116,
        "endLineNumber" : 162,
        "endColumnNumber" : 179
      },
      "nodeContext" : "{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 162,
        "startColumnNumber" : 101,
        "endLineNumber" : 162,
        "endColumnNumber" : 179
      },
      "nodeContext" : "new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 162,
        "startColumnNumber" : 100,
        "endLineNumber" : 162,
        "endColumnNumber" : 180
      },
      "nodeContext" : "{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 162,
        "startColumnNumber" : 88,
        "endLineNumber" : 162,
        "endColumnNumber" : 180
      },
      "nodeContext" : "new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 162,
        "endColumnNumber" : 194
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 162,
        "endColumnNumber" : 195
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8556,
        "startLineNumber" : 137,
        "startColumnNumber" : 94,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class clazz=addInterceptor(interceptorId,\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass\",interceptorClass);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[0],new Object[0],null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort(\"0\"),Short.parseShort(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort(\"0\"),Short.parseShort(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class},new Object[]{\"foo\"},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short.class},new Object[]{new Short(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{\"foo\",\"bar\"}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte(\"0\"),new Byte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short(\"0\"),new Short(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{\"foo\",\"bar\"}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte(\"0\"),new Byte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short(\"0\"),new Short(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{\"foo\",1,Byte.parseByte(\"0\"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1903,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8646,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void checkConstructor(int interceptorId,Class interceptorClass) throws Exception {\n  Class clazz=addInterceptor(interceptorId,\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass\",interceptorClass);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[0],new Object[0],null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort(\"0\"),Short.parseShort(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort(\"0\"),Short.parseShort(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class},new Object[]{\"foo\"},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short.class},new Object[]{new Short(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{\"foo\",\"bar\"}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte(\"0\"),new Byte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short(\"0\"),new Short(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{\"foo\",\"bar\"}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte(\"0\"),new Byte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short(\"0\"),new Short(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{\"foo\",1,Byte.parseByte(\"0\"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1916,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 162,
        "endColumnNumber" : 195
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"true\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 173,
      "startColumnNumber" : 109,
      "endLineNumber" : 173,
      "endColumnNumber" : 115
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 173,
        "startColumnNumber" : 97,
        "endLineNumber" : 173,
        "endColumnNumber" : 116
      },
      "nodeContext" : "new Boolean(\"true\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 173,
        "startColumnNumber" : 96,
        "endLineNumber" : 173,
        "endColumnNumber" : 117
      },
      "nodeContext" : "{new Boolean(\"true\")}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 173,
        "startColumnNumber" : 84,
        "endLineNumber" : 173,
        "endColumnNumber" : 117
      },
      "nodeContext" : "new Object[]{new Boolean(\"true\")}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 131
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 132
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8556,
        "startLineNumber" : 137,
        "startColumnNumber" : 94,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class clazz=addInterceptor(interceptorId,\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass\",interceptorClass);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[0],new Object[0],null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort(\"0\"),Short.parseShort(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort(\"0\"),Short.parseShort(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class},new Object[]{\"foo\"},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short.class},new Object[]{new Short(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{\"foo\",\"bar\"}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte(\"0\"),new Byte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short(\"0\"),new Short(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{\"foo\",\"bar\"}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte(\"0\"),new Byte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short(\"0\"),new Short(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{\"foo\",1,Byte.parseByte(\"0\"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1903,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8646,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void checkConstructor(int interceptorId,Class interceptorClass) throws Exception {\n  Class clazz=addInterceptor(interceptorId,\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass\",interceptorClass);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[0],new Object[0],null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort(\"0\"),Short.parseShort(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort(\"0\"),Short.parseShort(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class},new Object[]{\"foo\"},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short.class},new Object[]{new Short(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{\"foo\",\"bar\"}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte(\"0\"),new Byte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short(\"0\"),new Short(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{\"foo\",\"bar\"}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte(\"0\"),new Byte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short(\"0\"),new Short(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{\"foo\",1,Byte.parseByte(\"0\"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1916,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 132
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"true\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 184,
      "startColumnNumber" : 125,
      "endLineNumber" : 184,
      "endColumnNumber" : 131
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 184,
        "startColumnNumber" : 113,
        "endLineNumber" : 184,
        "endColumnNumber" : 132
      },
      "nodeContext" : "new Boolean(\"true\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 184,
        "startColumnNumber" : 112,
        "endLineNumber" : 184,
        "endColumnNumber" : 155
      },
      "nodeContext" : "{new Boolean(\"true\"),new Boolean(\"false\")}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 184,
        "startColumnNumber" : 99,
        "endLineNumber" : 184,
        "endColumnNumber" : 155
      },
      "nodeContext" : "new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 184,
        "startColumnNumber" : 98,
        "endLineNumber" : 184,
        "endColumnNumber" : 156
      },
      "nodeContext" : "{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 184,
        "startColumnNumber" : 86,
        "endLineNumber" : 184,
        "endColumnNumber" : 156
      },
      "nodeContext" : "new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 184,
        "startColumnNumber" : 8,
        "endLineNumber" : 184,
        "endColumnNumber" : 170
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 184,
        "startColumnNumber" : 8,
        "endLineNumber" : 184,
        "endColumnNumber" : 171
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8556,
        "startLineNumber" : 137,
        "startColumnNumber" : 94,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class clazz=addInterceptor(interceptorId,\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass\",interceptorClass);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[0],new Object[0],null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort(\"0\"),Short.parseShort(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort(\"0\"),Short.parseShort(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class},new Object[]{\"foo\"},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short.class},new Object[]{new Short(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{\"foo\",\"bar\"}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte(\"0\"),new Byte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short(\"0\"),new Short(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{\"foo\",\"bar\"}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte(\"0\"),new Byte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short(\"0\"),new Short(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{\"foo\",1,Byte.parseByte(\"0\"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1903,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8646,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void checkConstructor(int interceptorId,Class interceptorClass) throws Exception {\n  Class clazz=addInterceptor(interceptorId,\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass\",interceptorClass);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[0],new Object[0],null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort(\"0\"),Short.parseShort(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort(\"0\"),Short.parseShort(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class},new Object[]{\"foo\"},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short.class},new Object[]{new Short(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{\"foo\",\"bar\"}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte(\"0\"),new Byte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short(\"0\"),new Short(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{\"foo\",\"bar\"}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte(\"0\"),new Byte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short(\"0\"),new Short(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{\"foo\",1,Byte.parseByte(\"0\"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1916,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 184,
        "startColumnNumber" : 8,
        "endLineNumber" : 184,
        "endColumnNumber" : 171
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"true\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 195,
      "startColumnNumber" : 130,
      "endLineNumber" : 195,
      "endColumnNumber" : 136
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 195,
        "startColumnNumber" : 118,
        "endLineNumber" : 195,
        "endColumnNumber" : 137
      },
      "nodeContext" : "new Boolean(\"true\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 195,
        "startColumnNumber" : 117,
        "endLineNumber" : 195,
        "endColumnNumber" : 160
      },
      "nodeContext" : "{new Boolean(\"true\"),new Boolean(\"false\")}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 195,
        "startColumnNumber" : 116,
        "endLineNumber" : 195,
        "endColumnNumber" : 161
      },
      "nodeContext" : "{{new Boolean(\"true\"),new Boolean(\"false\")}}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 195,
        "startColumnNumber" : 101,
        "endLineNumber" : 195,
        "endColumnNumber" : 161
      },
      "nodeContext" : "new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 195,
        "startColumnNumber" : 100,
        "endLineNumber" : 195,
        "endColumnNumber" : 162
      },
      "nodeContext" : "{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 195,
        "startColumnNumber" : 88,
        "endLineNumber" : 195,
        "endColumnNumber" : 162
      },
      "nodeContext" : "new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 176
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 177
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 42,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8556,
        "startLineNumber" : 137,
        "startColumnNumber" : 94,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class clazz=addInterceptor(interceptorId,\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass\",interceptorClass);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[0],new Object[0],null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort(\"0\"),Short.parseShort(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort(\"0\"),Short.parseShort(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class},new Object[]{\"foo\"},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short.class},new Object[]{new Short(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{\"foo\",\"bar\"}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte(\"0\"),new Byte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short(\"0\"),new Short(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{\"foo\",\"bar\"}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte(\"0\"),new Byte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short(\"0\"),new Short(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{\"foo\",1,Byte.parseByte(\"0\"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1903,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8646,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void checkConstructor(int interceptorId,Class interceptorClass) throws Exception {\n  Class clazz=addInterceptor(interceptorId,\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorClass\",interceptorClass);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[0],new Object[0],null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte.class},new Object[]{Byte.parseByte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short.class},new Object[]{Short.parseShort(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int.class},new Object[]{Integer.parseInt(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float.class},new Object[]{Float.parseFloat(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double.class},new Object[]{Double.parseDouble(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean.class},new Object[]{Boolean.parseBoolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char.class},new Object[]{Character.forDigit(0,0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[].class},new Object[]{new byte[]{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[].class},new Object[]{new short[]{Short.parseShort(\"0\"),Short.parseShort(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[].class},new Object[]{new int[]{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[].class},new Object[]{new float[]{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[].class},new Object[]{new double[]{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[].class},new Object[]{new boolean[]{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[].class},new Object[]{new char[]{Character.forDigit(0,0),Character.forDigit(1,1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{byte[][].class},new Object[]{new byte[][]{{Byte.parseByte(\"0\"),Byte.parseByte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{short[][].class},new Object[]{new short[][]{{Short.parseShort(\"0\"),Short.parseShort(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{int[][].class},new Object[]{new int[][]{{Integer.parseInt(\"0\"),Integer.parseInt(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{float[][].class},new Object[]{new float[][]{{Float.parseFloat(\"0\"),Float.parseFloat(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{double[][].class},new Object[]{new double[][]{{Double.parseDouble(\"0\"),Double.parseDouble(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{boolean[][].class},new Object[]{new boolean[][]{{Boolean.parseBoolean(\"true\"),Boolean.parseBoolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{char[][].class},new Object[]{new char[][]{{Character.forDigit(0,0),Character.forDigit(1,1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class},new Object[]{\"foo\"},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object.class},new Object[]{new Object()},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte.class},new Object[]{new Byte(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short.class},new Object[]{new Short(\"0\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer.class},new Object[]{new Integer(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long.class},new Object[]{new Long(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float.class},new Object[]{new Float(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double.class},new Object[]{new Double(0)},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean.class},new Object[]{new Boolean(\"true\")},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character.class},new Object[]{new Character('0')},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[].class},new Object[]{new String[]{\"foo\",\"bar\"}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[].class},new Object[]{new Object[]{new Object(),new Object()}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[].class},new Object[]{new Byte[]{new Byte(\"0\"),new Byte(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[].class},new Object[]{new Short[]{new Short(\"0\"),new Short(\"1\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[].class},new Object[]{new Integer[]{new Integer(0),new Integer(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[].class},new Object[]{new Long[]{new Long(0),new Long(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[].class},new Object[]{new Float[]{new Float(0),new Float(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[].class},new Object[]{new Double[]{new Double(0),new Double(1)}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[].class},new Object[]{new Boolean[]{new Boolean(\"true\"),new Boolean(\"false\")}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[].class},new Object[]{new Character[]{new Character('0'),new Character('1')}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String[][].class},new Object[]{new String[][]{{\"foo\",\"bar\"}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Object[][].class},new Object[]{new Object[][]{{new Object(),new Object()}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Byte[][].class},new Object[]{new Byte[][]{{new Byte(\"0\"),new Byte(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Short[][].class},new Object[]{new Short[][]{{new Short(\"0\"),new Short(\"1\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Integer[][].class},new Object[]{new Integer[][]{{new Integer(0),new Integer(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Long[][].class},new Object[]{new Long[][]{{new Long(0),new Long(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Float[][].class},new Object[]{new Float[][]{{new Float(0),new Float(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Double[][].class},new Object[]{new Double[][]{{new Double(0),new Double(1)}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Character[][].class},new Object[]{new Character[][]{{new Character('0'),new Character('1')}}},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Class.class,Method.class,Field.class},new Object[]{null,null,null},null,false);\n  invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{String.class,int.class,byte.class,Object.class,Enum.class,char.class,float.class,long.class},new Object[]{\"foo\",1,Byte.parseByte(\"0\"),new Object(),BaseEnum.AGENT,'a',1.1f,1l},null,false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1916,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 177
      },
      "nodeContext" : "invokeMethod(clazz,\"<init>\",interceptorClass,new Class[]{Boolean[][].class},new Object[]{new Boolean[][]{{new Boolean(\"true\"),new Boolean(\"false\")}}},null,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 42,
      "astHeight" : 10
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 146,
    "startColumnNumber" : 118,
    "endLineNumber" : 146,
    "endColumnNumber" : 124
  }, {
    "charLength" : 6,
    "startLineNumber" : 154,
    "startColumnNumber" : 134,
    "endLineNumber" : 154,
    "endColumnNumber" : 140
  }, {
    "charLength" : 6,
    "startLineNumber" : 162,
    "startColumnNumber" : 139,
    "endLineNumber" : 162,
    "endColumnNumber" : 145
  }, {
    "charLength" : 6,
    "startLineNumber" : 173,
    "startColumnNumber" : 109,
    "endLineNumber" : 173,
    "endColumnNumber" : 115
  }, {
    "charLength" : 6,
    "startLineNumber" : 184,
    "startColumnNumber" : 125,
    "endLineNumber" : 184,
    "endColumnNumber" : 131
  }, {
    "charLength" : 6,
    "startLineNumber" : 195,
    "startColumnNumber" : 130,
    "endLineNumber" : 195,
    "endColumnNumber" : 136
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 8
  } ]
}