{
  "id" : 192,
  "expression" : "cache.getUnchecked(new Object())",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/cache/AbstractLoadingCacheTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cache.getUnchecked(new Object())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 63,
      "startColumnNumber" : 25,
      "endLineNumber" : 63,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertSame(newValue,cache.getUnchecked(new Object()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertSame(newValue,cache.getUnchecked(new Object()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 938,
        "startLineNumber" : 34,
        "startColumnNumber" : 41,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Exception cause=new Exception();\n  final AtomicReference<Object> valueRef=new AtomicReference<>();\n  LoadingCache<Object,Object> cache=new AbstractLoadingCache<Object,Object>(){\n    @Override public Object get(    Object key) throws ExecutionException {\n      Object v=valueRef.get();\n      if (v == null) {\n        throw new ExecutionException(cause);\n      }\n      return v;\n    }\n    @Override public Object getIfPresent(    Object key){\n      return valueRef.get();\n    }\n  }\n;\n  try {\n    cache.getUnchecked(new Object());\n    fail();\n  }\n catch (  UncheckedExecutionException expected) {\n    assertThat(expected).hasCauseThat().isEqualTo(cause);\n  }\n  Object newValue=new Object();\n  valueRef.set(newValue);\n  assertSame(newValue,cache.getUnchecked(new Object()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testGetUnchecked_checked(){\n  final Exception cause=new Exception();\n  final AtomicReference<Object> valueRef=new AtomicReference<>();\n  LoadingCache<Object,Object> cache=new AbstractLoadingCache<Object,Object>(){\n    @Override public Object get(    Object key) throws ExecutionException {\n      Object v=valueRef.get();\n      if (v == null) {\n        throw new ExecutionException(cause);\n      }\n      return v;\n    }\n    @Override public Object getIfPresent(    Object key){\n      return valueRef.get();\n    }\n  }\n;\n  try {\n    cache.getUnchecked(new Object());\n    fail();\n  }\n catch (  UncheckedExecutionException expected) {\n    assertThat(expected).hasCauseThat().isEqualTo(cause);\n  }\n  Object newValue=new Object();\n  valueRef.set(newValue);\n  assertSame(newValue,cache.getUnchecked(new Object()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertSame(newValue,cache.getUnchecked(new Object()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 63,
    "startColumnNumber" : 25,
    "endLineNumber" : 63,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}