{
  "id" : 290,
  "expression" : "visitedToken",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/FordFulkersonDFSAdjacencyMatrix.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "visitedToken",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 53,
      "startColumnNumber" : 20,
      "endLineNumber" : 53,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 32
      },
      "nodeContext" : "visited[node]=visitedToken",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 33
      },
      "nodeContext" : "visited[node]=visitedToken;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 47,
        "startColumnNumber" : 84,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (node == sink)   return flow;\n  int[] cap=caps[node];\n  visited[node]=visitedToken;\n  for (int i=0; i < cap.length; i++) {\n    if (visited[i] != visitedToken && cap[i] > 0) {\n      if (cap[i] < flow)       flow=cap[i];\n      int dfsFlow=dfs(caps,visited,i,sink,flow);\n      if (dfsFlow > 0) {\n        caps[node][i]-=dfsFlow;\n        caps[i][node]+=dfsFlow;\n        return dfsFlow;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static int dfs(int[][] caps,int[] visited,int node,int sink,int flow){\n  if (node == sink)   return flow;\n  int[] cap=caps[node];\n  visited[node]=visitedToken;\n  for (int i=0; i < cap.length; i++) {\n    if (visited[i] != visitedToken && cap[i] > 0) {\n      if (cap[i] < flow)       flow=cap[i];\n      int dfsFlow=dfs(caps,visited,i,sink,flow);\n      if (dfsFlow > 0) {\n        caps[node][i]-=dfsFlow;\n        caps[i][node]+=dfsFlow;\n        return dfsFlow;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 33
      },
      "nodeContext" : "visited[node]=visitedToken;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "visitedToken",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 56,
      "startColumnNumber" : 24,
      "endLineNumber" : 56,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 56,
        "endColumnNumber" : 36
      },
      "nodeContext" : "visited[i] != visitedToken",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 56,
        "endColumnNumber" : 50
      },
      "nodeContext" : "visited[i] != visitedToken && cap[i] > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 291,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (visited[i] != visitedToken && cap[i] > 0) {\n  if (cap[i] < flow)   flow=cap[i];\n  int dfsFlow=dfs(caps,visited,i,sink,flow);\n  if (dfsFlow > 0) {\n    caps[node][i]-=dfsFlow;\n    caps[i][node]+=dfsFlow;\n    return dfsFlow;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 55,
        "startColumnNumber" : 41,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (visited[i] != visitedToken && cap[i] > 0) {\n    if (cap[i] < flow)     flow=cap[i];\n    int dfsFlow=dfs(caps,visited,i,sink,flow);\n    if (dfsFlow > 0) {\n      caps[node][i]-=dfsFlow;\n      caps[i][node]+=dfsFlow;\n      return dfsFlow;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 342,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < cap.length; i++) {\n  if (visited[i] != visitedToken && cap[i] > 0) {\n    if (cap[i] < flow)     flow=cap[i];\n    int dfsFlow=dfs(caps,visited,i,sink,flow);\n    if (dfsFlow > 0) {\n      caps[node][i]-=dfsFlow;\n      caps[i][node]+=dfsFlow;\n      return dfsFlow;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 73,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 47,
        "startColumnNumber" : 84,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (node == sink)   return flow;\n  int[] cap=caps[node];\n  visited[node]=visitedToken;\n  for (int i=0; i < cap.length; i++) {\n    if (visited[i] != visitedToken && cap[i] > 0) {\n      if (cap[i] < flow)       flow=cap[i];\n      int dfsFlow=dfs(caps,visited,i,sink,flow);\n      if (dfsFlow > 0) {\n        caps[node][i]-=dfsFlow;\n        caps[i][node]+=dfsFlow;\n        return dfsFlow;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static int dfs(int[][] caps,int[] visited,int node,int sink,int flow){\n  if (node == sink)   return flow;\n  int[] cap=caps[node];\n  visited[node]=visitedToken;\n  for (int i=0; i < cap.length; i++) {\n    if (visited[i] != visitedToken && cap[i] > 0) {\n      if (cap[i] < flow)       flow=cap[i];\n      int dfsFlow=dfs(caps,visited,i,sink,flow);\n      if (dfsFlow > 0) {\n        caps[node][i]-=dfsFlow;\n        caps[i][node]+=dfsFlow;\n        return dfsFlow;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 56,
        "endColumnNumber" : 50
      },
      "nodeContext" : "visited[i] != visitedToken && cap[i] > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 53,
    "startColumnNumber" : 20,
    "endLineNumber" : 53,
    "endColumnNumber" : 32
  }, {
    "charLength" : 12,
    "startLineNumber" : 56,
    "startColumnNumber" : 24,
    "endLineNumber" : 56,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}