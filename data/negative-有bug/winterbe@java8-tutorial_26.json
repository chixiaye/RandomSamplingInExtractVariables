{
  "id" : 26,
  "expression" : "Long",
  "projectName" : "winterbe@java8-tutorial",
  "commitID" : "89a257129873974e4beb658115e854649b9204b2",
  "filePath" : "/src/com/winterbe/java8/samples/misc/Math1.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Long",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 52,
      "startColumnNumber" : 28,
      "endLineNumber" : 52,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 52,
        "startColumnNumber" : 28,
        "endLineNumber" : 52,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Long.MAX_VALUE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Math.toIntExact(Long.MAX_VALUE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Math.toIntExact(Long.MAX_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Math.toIntExact(Long.MAX_VALUE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Math.toIntExact(Long.MAX_VALUE);\n}\n catch (ArithmeticException e) {\n  System.err.println(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 40,
        "startColumnNumber" : 40,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(Integer.MAX_VALUE);\n  System.out.println(Integer.MAX_VALUE + 1);\n  try {\n    Math.addExact(Integer.MAX_VALUE,1);\n  }\n catch (  ArithmeticException e) {\n    System.err.println(e.getMessage());\n  }\n  try {\n    Math.toIntExact(Long.MAX_VALUE);\n  }\n catch (  ArithmeticException e) {\n    System.err.println(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 481,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void testMathExact(){\n  System.out.println(Integer.MAX_VALUE);\n  System.out.println(Integer.MAX_VALUE + 1);\n  try {\n    Math.addExact(Integer.MAX_VALUE,1);\n  }\n catch (  ArithmeticException e) {\n    System.err.println(e.getMessage());\n  }\n  try {\n    Math.toIntExact(Long.MAX_VALUE);\n  }\n catch (  ArithmeticException e) {\n    System.err.println(e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Math.toIntExact(Long.MAX_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Long"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 52,
    "startColumnNumber" : 28,
    "endLineNumber" : 52,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}