{
  "id" : 262,
  "expression" : "someId",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/NotificationControllerV2Test.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "someId",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 273,
      "startColumnNumber" : 29,
      "endLineNumber" : 273,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 273,
        "startColumnNumber" : 4,
        "endLineNumber" : 273,
        "endColumnNumber" : 36
      },
      "nodeContext" : "someReleaseMessage.setId(someId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 273,
        "startColumnNumber" : 4,
        "endLineNumber" : 273,
        "endColumnNumber" : 37
      },
      "nodeContext" : "someReleaseMessage.setId(someId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1750,
        "startLineNumber" : 245,
        "startColumnNumber" : 92,
        "endLineNumber" : 284,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String someWatchKey=\"someKey\";\n  String anotherWatchKey=Joiner.on(ConfigConsts.CLUSTER_NAMESPACE_SEPARATOR).join(someAppId,someCluster,somePublicNamespace);\n  Multimap<String,String> watchKeysMap=assembleMultiMap(defaultNamespace,Lists.newArrayList(someWatchKey));\n  watchKeysMap.putAll(assembleMultiMap(somePublicNamespace,Lists.newArrayList(anotherWatchKey)));\n  when(watchKeysUtil.assembleAllWatchKeys(someAppId,someCluster,Sets.newHashSet(defaultNamespace,somePublicNamespace),someDataCenter)).thenReturn(watchKeysMap);\n  String notificationAsString=transformApolloConfigNotificationsToString(defaultNamespace,someNotificationId,somePublicNamespace,someNotificationId);\n  DeferredResult<ResponseEntity<List<ApolloConfigNotification>>> deferredResult=controller.pollNotification(someAppId,someCluster,notificationAsString,someDataCenter,someClientIp);\n  assertEquals(watchKeysMap.size(),deferredResults.size());\n  long someId=1;\n  ReleaseMessage someReleaseMessage=new ReleaseMessage(anotherWatchKey);\n  someReleaseMessage.setId(someId);\n  controller.handleMessage(someReleaseMessage,Topics.APOLLO_RELEASE_TOPIC);\n  ResponseEntity<List<ApolloConfigNotification>> response=(ResponseEntity<List<ApolloConfigNotification>>)deferredResult.getResult();\n  assertEquals(1,response.getBody().size());\n  ApolloConfigNotification notification=response.getBody().get(0);\n  assertEquals(HttpStatus.OK,response.getStatusCode());\n  assertEquals(somePublicNamespace,notification.getNamespaceName());\n  assertEquals(someId,notification.getNotificationId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1848,
        "startLineNumber" : 244,
        "startColumnNumber" : 2,
        "endLineNumber" : 284,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPollNotificationWithMultipleNamespacesAndHandleMessage() throws Exception {\n  String someWatchKey=\"someKey\";\n  String anotherWatchKey=Joiner.on(ConfigConsts.CLUSTER_NAMESPACE_SEPARATOR).join(someAppId,someCluster,somePublicNamespace);\n  Multimap<String,String> watchKeysMap=assembleMultiMap(defaultNamespace,Lists.newArrayList(someWatchKey));\n  watchKeysMap.putAll(assembleMultiMap(somePublicNamespace,Lists.newArrayList(anotherWatchKey)));\n  when(watchKeysUtil.assembleAllWatchKeys(someAppId,someCluster,Sets.newHashSet(defaultNamespace,somePublicNamespace),someDataCenter)).thenReturn(watchKeysMap);\n  String notificationAsString=transformApolloConfigNotificationsToString(defaultNamespace,someNotificationId,somePublicNamespace,someNotificationId);\n  DeferredResult<ResponseEntity<List<ApolloConfigNotification>>> deferredResult=controller.pollNotification(someAppId,someCluster,notificationAsString,someDataCenter,someClientIp);\n  assertEquals(watchKeysMap.size(),deferredResults.size());\n  long someId=1;\n  ReleaseMessage someReleaseMessage=new ReleaseMessage(anotherWatchKey);\n  someReleaseMessage.setId(someId);\n  controller.handleMessage(someReleaseMessage,Topics.APOLLO_RELEASE_TOPIC);\n  ResponseEntity<List<ApolloConfigNotification>> response=(ResponseEntity<List<ApolloConfigNotification>>)deferredResult.getResult();\n  assertEquals(1,response.getBody().size());\n  ApolloConfigNotification notification=response.getBody().get(0);\n  assertEquals(HttpStatus.OK,response.getStatusCode());\n  assertEquals(somePublicNamespace,notification.getNamespaceName());\n  assertEquals(someId,notification.getNotificationId());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 273,
        "startColumnNumber" : 4,
        "endLineNumber" : 273,
        "endColumnNumber" : 37
      },
      "nodeContext" : "someReleaseMessage.setId(someId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "someId",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 283,
      "startColumnNumber" : 17,
      "endLineNumber" : 283,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 283,
        "startColumnNumber" : 4,
        "endLineNumber" : 283,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(someId,notification.getNotificationId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 283,
        "startColumnNumber" : 4,
        "endLineNumber" : 283,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertEquals(someId,notification.getNotificationId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1750,
        "startLineNumber" : 245,
        "startColumnNumber" : 92,
        "endLineNumber" : 284,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String someWatchKey=\"someKey\";\n  String anotherWatchKey=Joiner.on(ConfigConsts.CLUSTER_NAMESPACE_SEPARATOR).join(someAppId,someCluster,somePublicNamespace);\n  Multimap<String,String> watchKeysMap=assembleMultiMap(defaultNamespace,Lists.newArrayList(someWatchKey));\n  watchKeysMap.putAll(assembleMultiMap(somePublicNamespace,Lists.newArrayList(anotherWatchKey)));\n  when(watchKeysUtil.assembleAllWatchKeys(someAppId,someCluster,Sets.newHashSet(defaultNamespace,somePublicNamespace),someDataCenter)).thenReturn(watchKeysMap);\n  String notificationAsString=transformApolloConfigNotificationsToString(defaultNamespace,someNotificationId,somePublicNamespace,someNotificationId);\n  DeferredResult<ResponseEntity<List<ApolloConfigNotification>>> deferredResult=controller.pollNotification(someAppId,someCluster,notificationAsString,someDataCenter,someClientIp);\n  assertEquals(watchKeysMap.size(),deferredResults.size());\n  long someId=1;\n  ReleaseMessage someReleaseMessage=new ReleaseMessage(anotherWatchKey);\n  someReleaseMessage.setId(someId);\n  controller.handleMessage(someReleaseMessage,Topics.APOLLO_RELEASE_TOPIC);\n  ResponseEntity<List<ApolloConfigNotification>> response=(ResponseEntity<List<ApolloConfigNotification>>)deferredResult.getResult();\n  assertEquals(1,response.getBody().size());\n  ApolloConfigNotification notification=response.getBody().get(0);\n  assertEquals(HttpStatus.OK,response.getStatusCode());\n  assertEquals(somePublicNamespace,notification.getNamespaceName());\n  assertEquals(someId,notification.getNotificationId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1848,
        "startLineNumber" : 244,
        "startColumnNumber" : 2,
        "endLineNumber" : 284,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPollNotificationWithMultipleNamespacesAndHandleMessage() throws Exception {\n  String someWatchKey=\"someKey\";\n  String anotherWatchKey=Joiner.on(ConfigConsts.CLUSTER_NAMESPACE_SEPARATOR).join(someAppId,someCluster,somePublicNamespace);\n  Multimap<String,String> watchKeysMap=assembleMultiMap(defaultNamespace,Lists.newArrayList(someWatchKey));\n  watchKeysMap.putAll(assembleMultiMap(somePublicNamespace,Lists.newArrayList(anotherWatchKey)));\n  when(watchKeysUtil.assembleAllWatchKeys(someAppId,someCluster,Sets.newHashSet(defaultNamespace,somePublicNamespace),someDataCenter)).thenReturn(watchKeysMap);\n  String notificationAsString=transformApolloConfigNotificationsToString(defaultNamespace,someNotificationId,somePublicNamespace,someNotificationId);\n  DeferredResult<ResponseEntity<List<ApolloConfigNotification>>> deferredResult=controller.pollNotification(someAppId,someCluster,notificationAsString,someDataCenter,someClientIp);\n  assertEquals(watchKeysMap.size(),deferredResults.size());\n  long someId=1;\n  ReleaseMessage someReleaseMessage=new ReleaseMessage(anotherWatchKey);\n  someReleaseMessage.setId(someId);\n  controller.handleMessage(someReleaseMessage,Topics.APOLLO_RELEASE_TOPIC);\n  ResponseEntity<List<ApolloConfigNotification>> response=(ResponseEntity<List<ApolloConfigNotification>>)deferredResult.getResult();\n  assertEquals(1,response.getBody().size());\n  ApolloConfigNotification notification=response.getBody().get(0);\n  assertEquals(HttpStatus.OK,response.getStatusCode());\n  assertEquals(somePublicNamespace,notification.getNamespaceName());\n  assertEquals(someId,notification.getNotificationId());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 283,
        "startColumnNumber" : 4,
        "endLineNumber" : 283,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertEquals(someId,notification.getNotificationId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 273,
    "startColumnNumber" : 29,
    "endLineNumber" : 273,
    "endColumnNumber" : 35
  }, {
    "charLength" : 6,
    "startLineNumber" : 283,
    "startColumnNumber" : 17,
    "endLineNumber" : 283,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}