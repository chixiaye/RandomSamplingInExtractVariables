{
  "id" : 304,
  "expression" : "2",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/test/java/com/google/zxing/qrcode/encoder/MaskUtilTestCase.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 33,
      "startColumnNumber" : 15,
      "endLineNumber" : 33,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 23
      },
      "nodeContext" : "matrix.set(2,0,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 24
      },
      "nodeContext" : "matrix.set(2,0,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 29,
        "startColumnNumber" : 42,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ByteMatrix matrix=new ByteMatrix(4,1);\n  matrix.set(0,0,0);\n  matrix.set(1,0,0);\n  matrix.set(2,0,0);\n  matrix.set(3,0,0);\n  assertEquals(0,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix=new ByteMatrix(6,1);\n  matrix.set(0,0,0);\n  matrix.set(1,0,0);\n  matrix.set(2,0,0);\n  matrix.set(3,0,0);\n  matrix.set(4,0,0);\n  matrix.set(5,0,1);\n  assertEquals(3,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix.set(5,0,0);\n  assertEquals(4,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix=new ByteMatrix(1,6);\n  matrix.set(0,0,0);\n  matrix.set(0,1,0);\n  matrix.set(0,2,0);\n  matrix.set(0,3,0);\n  matrix.set(0,4,0);\n  matrix.set(0,5,1);\n  assertEquals(3,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix.set(0,5,0);\n  assertEquals(4,MaskUtil.applyMaskPenaltyRule1(matrix));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testApplyMaskPenaltyRule1(){\n  ByteMatrix matrix=new ByteMatrix(4,1);\n  matrix.set(0,0,0);\n  matrix.set(1,0,0);\n  matrix.set(2,0,0);\n  matrix.set(3,0,0);\n  assertEquals(0,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix=new ByteMatrix(6,1);\n  matrix.set(0,0,0);\n  matrix.set(1,0,0);\n  matrix.set(2,0,0);\n  matrix.set(3,0,0);\n  matrix.set(4,0,0);\n  matrix.set(5,0,1);\n  assertEquals(3,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix.set(5,0,0);\n  assertEquals(4,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix=new ByteMatrix(1,6);\n  matrix.set(0,0,0);\n  matrix.set(0,1,0);\n  matrix.set(0,2,0);\n  matrix.set(0,3,0);\n  matrix.set(0,4,0);\n  matrix.set(0,5,1);\n  assertEquals(3,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix.set(0,5,0);\n  assertEquals(4,MaskUtil.applyMaskPenaltyRule1(matrix));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 24
      },
      "nodeContext" : "matrix.set(2,0,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 40,
      "startColumnNumber" : 15,
      "endLineNumber" : 40,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 23
      },
      "nodeContext" : "matrix.set(2,0,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 24
      },
      "nodeContext" : "matrix.set(2,0,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 29,
        "startColumnNumber" : 42,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ByteMatrix matrix=new ByteMatrix(4,1);\n  matrix.set(0,0,0);\n  matrix.set(1,0,0);\n  matrix.set(2,0,0);\n  matrix.set(3,0,0);\n  assertEquals(0,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix=new ByteMatrix(6,1);\n  matrix.set(0,0,0);\n  matrix.set(1,0,0);\n  matrix.set(2,0,0);\n  matrix.set(3,0,0);\n  matrix.set(4,0,0);\n  matrix.set(5,0,1);\n  assertEquals(3,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix.set(5,0,0);\n  assertEquals(4,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix=new ByteMatrix(1,6);\n  matrix.set(0,0,0);\n  matrix.set(0,1,0);\n  matrix.set(0,2,0);\n  matrix.set(0,3,0);\n  matrix.set(0,4,0);\n  matrix.set(0,5,1);\n  assertEquals(3,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix.set(0,5,0);\n  assertEquals(4,MaskUtil.applyMaskPenaltyRule1(matrix));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testApplyMaskPenaltyRule1(){\n  ByteMatrix matrix=new ByteMatrix(4,1);\n  matrix.set(0,0,0);\n  matrix.set(1,0,0);\n  matrix.set(2,0,0);\n  matrix.set(3,0,0);\n  assertEquals(0,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix=new ByteMatrix(6,1);\n  matrix.set(0,0,0);\n  matrix.set(1,0,0);\n  matrix.set(2,0,0);\n  matrix.set(3,0,0);\n  matrix.set(4,0,0);\n  matrix.set(5,0,1);\n  assertEquals(3,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix.set(5,0,0);\n  assertEquals(4,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix=new ByteMatrix(1,6);\n  matrix.set(0,0,0);\n  matrix.set(0,1,0);\n  matrix.set(0,2,0);\n  matrix.set(0,3,0);\n  matrix.set(0,4,0);\n  matrix.set(0,5,1);\n  assertEquals(3,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix.set(0,5,0);\n  assertEquals(4,MaskUtil.applyMaskPenaltyRule1(matrix));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 24
      },
      "nodeContext" : "matrix.set(2,0,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 51,
      "startColumnNumber" : 18,
      "endLineNumber" : 51,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 23
      },
      "nodeContext" : "matrix.set(0,2,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 24
      },
      "nodeContext" : "matrix.set(0,2,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 29,
        "startColumnNumber" : 42,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ByteMatrix matrix=new ByteMatrix(4,1);\n  matrix.set(0,0,0);\n  matrix.set(1,0,0);\n  matrix.set(2,0,0);\n  matrix.set(3,0,0);\n  assertEquals(0,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix=new ByteMatrix(6,1);\n  matrix.set(0,0,0);\n  matrix.set(1,0,0);\n  matrix.set(2,0,0);\n  matrix.set(3,0,0);\n  matrix.set(4,0,0);\n  matrix.set(5,0,1);\n  assertEquals(3,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix.set(5,0,0);\n  assertEquals(4,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix=new ByteMatrix(1,6);\n  matrix.set(0,0,0);\n  matrix.set(0,1,0);\n  matrix.set(0,2,0);\n  matrix.set(0,3,0);\n  matrix.set(0,4,0);\n  matrix.set(0,5,1);\n  assertEquals(3,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix.set(0,5,0);\n  assertEquals(4,MaskUtil.applyMaskPenaltyRule1(matrix));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testApplyMaskPenaltyRule1(){\n  ByteMatrix matrix=new ByteMatrix(4,1);\n  matrix.set(0,0,0);\n  matrix.set(1,0,0);\n  matrix.set(2,0,0);\n  matrix.set(3,0,0);\n  assertEquals(0,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix=new ByteMatrix(6,1);\n  matrix.set(0,0,0);\n  matrix.set(1,0,0);\n  matrix.set(2,0,0);\n  matrix.set(3,0,0);\n  matrix.set(4,0,0);\n  matrix.set(5,0,1);\n  assertEquals(3,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix.set(5,0,0);\n  assertEquals(4,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix=new ByteMatrix(1,6);\n  matrix.set(0,0,0);\n  matrix.set(0,1,0);\n  matrix.set(0,2,0);\n  matrix.set(0,3,0);\n  matrix.set(0,4,0);\n  matrix.set(0,5,1);\n  assertEquals(3,MaskUtil.applyMaskPenaltyRule1(matrix));\n  matrix.set(0,5,0);\n  assertEquals(4,MaskUtil.applyMaskPenaltyRule1(matrix));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 24
      },
      "nodeContext" : "matrix.set(0,2,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 33,
    "startColumnNumber" : 15,
    "endLineNumber" : 33,
    "endColumnNumber" : 16
  }, {
    "charLength" : 1,
    "startLineNumber" : 40,
    "startColumnNumber" : 15,
    "endLineNumber" : 40,
    "endColumnNumber" : 16
  }, {
    "charLength" : 1,
    "startLineNumber" : 51,
    "startColumnNumber" : 18,
    "endLineNumber" : 51,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}