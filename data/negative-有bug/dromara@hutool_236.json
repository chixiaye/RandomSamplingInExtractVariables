{
  "id" : 236,
  "expression" : "interner.intern(a1)",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/test/java/cn/hutool/core/lang/intern/InternUtilTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "interner.intern(a1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 21,
      "startColumnNumber" : 20,
      "endLineNumber" : 21,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 21,
        "startColumnNumber" : 2,
        "endLineNumber" : 21,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assert.assertSame(interner.intern(a1),interner.intern(a2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 21,
        "startColumnNumber" : 2,
        "endLineNumber" : 21,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Assert.assertSame(interner.intern(a1),interner.intern(a2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 274,
        "startLineNumber" : 14,
        "startColumnNumber" : 23,
        "endLineNumber" : 22,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final Interner<String> interner=InternUtil.createWeakInterner();\n  String a1=RandomUtil.randomString(RandomUtil.randomInt(100));\n  String a2=new String(a1);\n  Assert.assertNotSame(a1,a2);\n  Assert.assertSame(interner.intern(a1),interner.intern(a2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 9,
        "startColumnNumber" : 1,
        "endLineNumber" : 22,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 检查规范字符串是否相同\n */\n@SuppressWarnings(\"StringOperationCanBeSimplified\") @Test public void weakTest(){\n  final Interner<String> interner=InternUtil.createWeakInterner();\n  String a1=RandomUtil.randomString(RandomUtil.randomInt(100));\n  String a2=new String(a1);\n  Assert.assertNotSame(a1,a2);\n  Assert.assertSame(interner.intern(a1),interner.intern(a2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 21,
        "startColumnNumber" : 2,
        "endLineNumber" : 21,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Assert.assertSame(interner.intern(a1),interner.intern(a2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 21,
    "startColumnNumber" : 20,
    "endLineNumber" : 21,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}