{
  "id" : 84,
  "expression" : "targetClass",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/client/src/main/java/com/alibaba/nacos/client/env/convert/CompositeConverter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "targetClass",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 45,
      "startColumnNumber" : 77,
      "endLineNumber" : 45,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 45,
        "startColumnNumber" : 55,
        "endLineNumber" : 45,
        "endColumnNumber" : 89
      },
      "nodeContext" : "converterRegistry.get(targetClass)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 45,
        "startColumnNumber" : 43,
        "endLineNumber" : 45,
        "endColumnNumber" : 89
      },
      "nodeContext" : "converter=converterRegistry.get(targetClass)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 90
      },
      "nodeContext" : "final AbstractPropertyConverter<?> converter=converterRegistry.get(targetClass);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 44,
        "startColumnNumber" : 64,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AbstractPropertyConverter<?> converter=converterRegistry.get(targetClass);\n  if (converter == null) {\n    throw new MissingFormatArgumentException(\"converter not found, can't convert from String to \" + targetClass.getCanonicalName());\n  }\n  return (T)converter.convert(property);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 635,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * convert property to target type.\n * @param property the property gets from environments\n * @param targetClass target class object\n * @param < T > target type\n * @return the object of target type\n */\npublic <T>T convert(String property,Class<T> targetClass){\n  final AbstractPropertyConverter<?> converter=converterRegistry.get(targetClass);\n  if (converter == null) {\n    throw new MissingFormatArgumentException(\"converter not found, can't convert from String to \" + targetClass.getCanonicalName());\n  }\n  return (T)converter.convert(property);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 90
      },
      "nodeContext" : "final AbstractPropertyConverter<?> converter=converterRegistry.get(targetClass);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<T>"
  }, {
    "nodeContext" : "targetClass",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 47,
      "startColumnNumber" : 108,
      "endLineNumber" : 47,
      "endColumnNumber" : 119
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 47,
        "startColumnNumber" : 108,
        "endLineNumber" : 47,
        "endColumnNumber" : 138
      },
      "nodeContext" : "targetClass.getCanonicalName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 47,
        "startColumnNumber" : 53,
        "endLineNumber" : 47,
        "endColumnNumber" : 138
      },
      "nodeContext" : "\"converter not found, can't convert from String to \" + targetClass.getCanonicalName()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 47,
        "startColumnNumber" : 18,
        "endLineNumber" : 47,
        "endColumnNumber" : 139
      },
      "nodeContext" : "new MissingFormatArgumentException(\"converter not found, can't convert from String to \" + targetClass.getCanonicalName())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 140
      },
      "nodeContext" : "throw new MissingFormatArgumentException(\"converter not found, can't convert from String to \" + targetClass.getCanonicalName());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 46,
        "startColumnNumber" : 31,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new MissingFormatArgumentException(\"converter not found, can't convert from String to \" + targetClass.getCanonicalName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (converter == null) {\n  throw new MissingFormatArgumentException(\"converter not found, can't convert from String to \" + targetClass.getCanonicalName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 44,
        "startColumnNumber" : 64,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AbstractPropertyConverter<?> converter=converterRegistry.get(targetClass);\n  if (converter == null) {\n    throw new MissingFormatArgumentException(\"converter not found, can't convert from String to \" + targetClass.getCanonicalName());\n  }\n  return (T)converter.convert(property);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 635,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * convert property to target type.\n * @param property the property gets from environments\n * @param targetClass target class object\n * @param < T > target type\n * @return the object of target type\n */\npublic <T>T convert(String property,Class<T> targetClass){\n  final AbstractPropertyConverter<?> converter=converterRegistry.get(targetClass);\n  if (converter == null) {\n    throw new MissingFormatArgumentException(\"converter not found, can't convert from String to \" + targetClass.getCanonicalName());\n  }\n  return (T)converter.convert(property);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 140
      },
      "nodeContext" : "throw new MissingFormatArgumentException(\"converter not found, can't convert from String to \" + targetClass.getCanonicalName());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<T>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 45,
    "startColumnNumber" : 77,
    "endLineNumber" : 45,
    "endColumnNumber" : 88
  }, {
    "charLength" : 11,
    "startLineNumber" : 47,
    "startColumnNumber" : 108,
    "endLineNumber" : 47,
    "endColumnNumber" : 119
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}