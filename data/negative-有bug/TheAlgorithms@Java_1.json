{
  "id" : 1,
  "expression" : "str2",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/dynamicprogramming/LongestCommonSubsequence.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "str2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 8,
      "startColumnNumber" : 28,
      "endLineNumber" : 8,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 8,
        "startColumnNumber" : 28,
        "endLineNumber" : 8,
        "endColumnNumber" : 40
      },
      "nodeContext" : "str2 == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 8,
        "startColumnNumber" : 12,
        "endLineNumber" : 8,
        "endColumnNumber" : 40
      },
      "nodeContext" : "str1 == null || str2 == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 8,
        "startColumnNumber" : 8,
        "endLineNumber" : 10,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (str1 == null || str2 == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1227,
        "startLineNumber" : 5,
        "startColumnNumber" : 58,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (str1 == null || str2 == null) {\n    return null;\n  }\n  if (str1.length() == 0 || str2.length() == 0) {\n    return \"\";\n  }\n  String[] arr1=str1.split(\"\");\n  String[] arr2=str2.split(\"\");\n  int[][] lcsMatrix=new int[arr1.length + 1][arr2.length + 1];\n  for (int i=0; i < arr1.length + 1; i++) {\n    lcsMatrix[i][0]=0;\n  }\n  for (int j=1; j < arr2.length + 1; j++) {\n    lcsMatrix[0][j]=0;\n  }\n  for (int i=1; i < arr1.length + 1; i++) {\n    for (int j=1; j < arr2.length + 1; j++) {\n      if (arr1[i - 1].equals(arr2[j - 1])) {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j - 1] + 1;\n      }\n else {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j] > lcsMatrix[i][j - 1] ? lcsMatrix[i - 1][j] : lcsMatrix[i][j - 1];\n      }\n    }\n  }\n  return lcsString(str1,str2,lcsMatrix);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1281,
        "startLineNumber" : 5,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String getLCS(String str1,String str2){\n  if (str1 == null || str2 == null) {\n    return null;\n  }\n  if (str1.length() == 0 || str2.length() == 0) {\n    return \"\";\n  }\n  String[] arr1=str1.split(\"\");\n  String[] arr2=str2.split(\"\");\n  int[][] lcsMatrix=new int[arr1.length + 1][arr2.length + 1];\n  for (int i=0; i < arr1.length + 1; i++) {\n    lcsMatrix[i][0]=0;\n  }\n  for (int j=1; j < arr2.length + 1; j++) {\n    lcsMatrix[0][j]=0;\n  }\n  for (int i=1; i < arr1.length + 1; i++) {\n    for (int j=1; j < arr2.length + 1; j++) {\n      if (arr1[i - 1].equals(arr2[j - 1])) {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j - 1] + 1;\n      }\n else {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j] > lcsMatrix[i][j - 1] ? lcsMatrix[i - 1][j] : lcsMatrix[i][j - 1];\n      }\n    }\n  }\n  return lcsString(str1,str2,lcsMatrix);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 8,
        "startColumnNumber" : 12,
        "endLineNumber" : 8,
        "endColumnNumber" : 40
      },
      "nodeContext" : "str1 == null || str2 == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "str2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 13,
      "startColumnNumber" : 34,
      "endLineNumber" : 13,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 13,
        "startColumnNumber" : 34,
        "endLineNumber" : 13,
        "endColumnNumber" : 47
      },
      "nodeContext" : "str2.length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 13,
        "startColumnNumber" : 34,
        "endLineNumber" : 13,
        "endColumnNumber" : 52
      },
      "nodeContext" : "str2.length() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 13,
        "startColumnNumber" : 12,
        "endLineNumber" : 13,
        "endColumnNumber" : 52
      },
      "nodeContext" : "str1.length() == 0 || str2.length() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (str1.length() == 0 || str2.length() == 0) {\n  return \"\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1227,
        "startLineNumber" : 5,
        "startColumnNumber" : 58,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (str1 == null || str2 == null) {\n    return null;\n  }\n  if (str1.length() == 0 || str2.length() == 0) {\n    return \"\";\n  }\n  String[] arr1=str1.split(\"\");\n  String[] arr2=str2.split(\"\");\n  int[][] lcsMatrix=new int[arr1.length + 1][arr2.length + 1];\n  for (int i=0; i < arr1.length + 1; i++) {\n    lcsMatrix[i][0]=0;\n  }\n  for (int j=1; j < arr2.length + 1; j++) {\n    lcsMatrix[0][j]=0;\n  }\n  for (int i=1; i < arr1.length + 1; i++) {\n    for (int j=1; j < arr2.length + 1; j++) {\n      if (arr1[i - 1].equals(arr2[j - 1])) {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j - 1] + 1;\n      }\n else {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j] > lcsMatrix[i][j - 1] ? lcsMatrix[i - 1][j] : lcsMatrix[i][j - 1];\n      }\n    }\n  }\n  return lcsString(str1,str2,lcsMatrix);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1281,
        "startLineNumber" : 5,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String getLCS(String str1,String str2){\n  if (str1 == null || str2 == null) {\n    return null;\n  }\n  if (str1.length() == 0 || str2.length() == 0) {\n    return \"\";\n  }\n  String[] arr1=str1.split(\"\");\n  String[] arr2=str2.split(\"\");\n  int[][] lcsMatrix=new int[arr1.length + 1][arr2.length + 1];\n  for (int i=0; i < arr1.length + 1; i++) {\n    lcsMatrix[i][0]=0;\n  }\n  for (int j=1; j < arr2.length + 1; j++) {\n    lcsMatrix[0][j]=0;\n  }\n  for (int i=1; i < arr1.length + 1; i++) {\n    for (int j=1; j < arr2.length + 1; j++) {\n      if (arr1[i - 1].equals(arr2[j - 1])) {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j - 1] + 1;\n      }\n else {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j] > lcsMatrix[i][j - 1] ? lcsMatrix[i - 1][j] : lcsMatrix[i][j - 1];\n      }\n    }\n  }\n  return lcsString(str1,str2,lcsMatrix);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 13,
        "startColumnNumber" : 12,
        "endLineNumber" : 13,
        "endColumnNumber" : 52
      },
      "nodeContext" : "str1.length() == 0 || str2.length() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "str2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 18,
      "startColumnNumber" : 24,
      "endLineNumber" : 18,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 18,
        "startColumnNumber" : 24,
        "endLineNumber" : 18,
        "endColumnNumber" : 38
      },
      "nodeContext" : "str2.split(\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 18,
        "startColumnNumber" : 17,
        "endLineNumber" : 18,
        "endColumnNumber" : 38
      },
      "nodeContext" : "arr2=str2.split(\"\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 39
      },
      "nodeContext" : "String[] arr2=str2.split(\"\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1227,
        "startLineNumber" : 5,
        "startColumnNumber" : 58,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (str1 == null || str2 == null) {\n    return null;\n  }\n  if (str1.length() == 0 || str2.length() == 0) {\n    return \"\";\n  }\n  String[] arr1=str1.split(\"\");\n  String[] arr2=str2.split(\"\");\n  int[][] lcsMatrix=new int[arr1.length + 1][arr2.length + 1];\n  for (int i=0; i < arr1.length + 1; i++) {\n    lcsMatrix[i][0]=0;\n  }\n  for (int j=1; j < arr2.length + 1; j++) {\n    lcsMatrix[0][j]=0;\n  }\n  for (int i=1; i < arr1.length + 1; i++) {\n    for (int j=1; j < arr2.length + 1; j++) {\n      if (arr1[i - 1].equals(arr2[j - 1])) {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j - 1] + 1;\n      }\n else {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j] > lcsMatrix[i][j - 1] ? lcsMatrix[i - 1][j] : lcsMatrix[i][j - 1];\n      }\n    }\n  }\n  return lcsString(str1,str2,lcsMatrix);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1281,
        "startLineNumber" : 5,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String getLCS(String str1,String str2){\n  if (str1 == null || str2 == null) {\n    return null;\n  }\n  if (str1.length() == 0 || str2.length() == 0) {\n    return \"\";\n  }\n  String[] arr1=str1.split(\"\");\n  String[] arr2=str2.split(\"\");\n  int[][] lcsMatrix=new int[arr1.length + 1][arr2.length + 1];\n  for (int i=0; i < arr1.length + 1; i++) {\n    lcsMatrix[i][0]=0;\n  }\n  for (int j=1; j < arr2.length + 1; j++) {\n    lcsMatrix[0][j]=0;\n  }\n  for (int i=1; i < arr1.length + 1; i++) {\n    for (int j=1; j < arr2.length + 1; j++) {\n      if (arr1[i - 1].equals(arr2[j - 1])) {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j - 1] + 1;\n      }\n else {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j] > lcsMatrix[i][j - 1] ? lcsMatrix[i - 1][j] : lcsMatrix[i][j - 1];\n      }\n    }\n  }\n  return lcsString(str1,str2,lcsMatrix);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 39
      },
      "nodeContext" : "String[] arr2=str2.split(\"\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "str2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 39,
      "startColumnNumber" : 31,
      "endLineNumber" : 39,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 39,
        "startColumnNumber" : 15,
        "endLineNumber" : 39,
        "endColumnNumber" : 47
      },
      "nodeContext" : "lcsString(str1,str2,lcsMatrix)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 48
      },
      "nodeContext" : "return lcsString(str1,str2,lcsMatrix);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1227,
        "startLineNumber" : 5,
        "startColumnNumber" : 58,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (str1 == null || str2 == null) {\n    return null;\n  }\n  if (str1.length() == 0 || str2.length() == 0) {\n    return \"\";\n  }\n  String[] arr1=str1.split(\"\");\n  String[] arr2=str2.split(\"\");\n  int[][] lcsMatrix=new int[arr1.length + 1][arr2.length + 1];\n  for (int i=0; i < arr1.length + 1; i++) {\n    lcsMatrix[i][0]=0;\n  }\n  for (int j=1; j < arr2.length + 1; j++) {\n    lcsMatrix[0][j]=0;\n  }\n  for (int i=1; i < arr1.length + 1; i++) {\n    for (int j=1; j < arr2.length + 1; j++) {\n      if (arr1[i - 1].equals(arr2[j - 1])) {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j - 1] + 1;\n      }\n else {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j] > lcsMatrix[i][j - 1] ? lcsMatrix[i - 1][j] : lcsMatrix[i][j - 1];\n      }\n    }\n  }\n  return lcsString(str1,str2,lcsMatrix);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1281,
        "startLineNumber" : 5,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String getLCS(String str1,String str2){\n  if (str1 == null || str2 == null) {\n    return null;\n  }\n  if (str1.length() == 0 || str2.length() == 0) {\n    return \"\";\n  }\n  String[] arr1=str1.split(\"\");\n  String[] arr2=str2.split(\"\");\n  int[][] lcsMatrix=new int[arr1.length + 1][arr2.length + 1];\n  for (int i=0; i < arr1.length + 1; i++) {\n    lcsMatrix[i][0]=0;\n  }\n  for (int j=1; j < arr2.length + 1; j++) {\n    lcsMatrix[0][j]=0;\n  }\n  for (int i=1; i < arr1.length + 1; i++) {\n    for (int j=1; j < arr2.length + 1; j++) {\n      if (arr1[i - 1].equals(arr2[j - 1])) {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j - 1] + 1;\n      }\n else {\n        lcsMatrix[i][j]=lcsMatrix[i - 1][j] > lcsMatrix[i][j - 1] ? lcsMatrix[i - 1][j] : lcsMatrix[i][j - 1];\n      }\n    }\n  }\n  return lcsString(str1,str2,lcsMatrix);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 48
      },
      "nodeContext" : "return lcsString(str1,str2,lcsMatrix);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 8,
    "startColumnNumber" : 28,
    "endLineNumber" : 8,
    "endColumnNumber" : 32
  }, {
    "charLength" : 4,
    "startLineNumber" : 13,
    "startColumnNumber" : 34,
    "endLineNumber" : 13,
    "endColumnNumber" : 38
  }, {
    "charLength" : 4,
    "startLineNumber" : 18,
    "startColumnNumber" : 24,
    "endLineNumber" : 18,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 39,
    "startColumnNumber" : 31,
    "endLineNumber" : 39,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}