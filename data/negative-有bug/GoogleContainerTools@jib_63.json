{
  "id" : 63,
  "expression" : "Collectors.toList()",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryAliasGroup.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collectors.toList()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 47,
      "startColumnNumber" : 56,
      "endLineNumber" : 47,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 47,
        "startColumnNumber" : 15,
        "endLineNumber" : 47,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Stream.concat(self,withoutSelf).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 77
      },
      "nodeContext" : "return Stream.concat(self,withoutSelf).collect(Collectors.toList());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 327,
        "startLineNumber" : 43,
        "startColumnNumber" : 41,
        "endLineNumber" : 48,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Stream<String> self=Stream.of(registry);\n  Stream<String> withoutSelf=aliasGroup.stream().filter(alias -> !registry.equals(alias));\n  return Stream.concat(self,withoutSelf).collect(Collectors.toList());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 48,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (aliasGroup.contains(registry)) {\n  Stream<String> self=Stream.of(registry);\n  Stream<String> withoutSelf=aliasGroup.stream().filter(alias -> !registry.equals(alias));\n  return Stream.concat(self,withoutSelf).collect(Collectors.toList());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 376,
        "startLineNumber" : 42,
        "startColumnNumber" : 66,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (aliasGroup.contains(registry)) {\n    Stream<String> self=Stream.of(registry);\n    Stream<String> withoutSelf=aliasGroup.stream().filter(alias -> !registry.equals(alias));\n    return Stream.concat(self,withoutSelf).collect(Collectors.toList());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 438,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (ImmutableSet<String> aliasGroup : REGISTRY_ALIAS_GROUPS) {\n  if (aliasGroup.contains(registry)) {\n    Stream<String> self=Stream.of(registry);\n    Stream<String> withoutSelf=aliasGroup.stream().filter(alias -> !registry.equals(alias));\n    return Stream.concat(self,withoutSelf).collect(Collectors.toList());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 41,
        "startColumnNumber" : 62,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  ImmutableSet<String> aliasGroup : REGISTRY_ALIAS_GROUPS) {\n    if (aliasGroup.contains(registry)) {\n      Stream<String> self=Stream.of(registry);\n      Stream<String> withoutSelf=aliasGroup.stream().filter(alias -> !registry.equals(alias));\n      return Stream.concat(self,withoutSelf).collect(Collectors.toList());\n    }\n  }\n  return Collections.singletonList(registry);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 861,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the list of registry aliases for the given  {@code registry}, including  {@code registry}as the first element.\n * @param registry the registry for which the alias group is requested\n * @return non-empty list of registries where {@code registry} is the first element\n */\npublic static List<String> getAliasesGroup(String registry){\n  for (  ImmutableSet<String> aliasGroup : REGISTRY_ALIAS_GROUPS) {\n    if (aliasGroup.contains(registry)) {\n      Stream<String> self=Stream.of(registry);\n      Stream<String> withoutSelf=aliasGroup.stream().filter(alias -> !registry.equals(alias));\n      return Stream.concat(self,withoutSelf).collect(Collectors.toList());\n    }\n  }\n  return Collections.singletonList(registry);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 77
      },
      "nodeContext" : "return Stream.concat(self,withoutSelf).collect(Collectors.toList());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.stream.Collector<java.lang.String,,java.util.List<java.lang.String>>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 47,
    "startColumnNumber" : 56,
    "endLineNumber" : 47,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}