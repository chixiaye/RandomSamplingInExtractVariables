{
  "id" : 236,
  "expression" : "i < line.getElementCount()",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-gui/src/main/java/jadx/gui/ui/codearea/LineNumbers.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < line.getElementCount()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 196,
      "startColumnNumber" : 19,
      "endLineNumber" : 196,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 196,
        "startColumnNumber" : 3,
        "endLineNumber" : 207,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int i=0; i < line.getElementCount(); i++) {\n  Element child=line.getElement(i);\n  AttributeSet as=child.getAttributes();\n  String fontFamily=(String)as.getAttribute(StyleConstants.FontFamily);\n  Integer fontSize=(Integer)as.getAttribute(StyleConstants.FontSize);\n  String key=fontFamily + fontSize;\n  FontMetrics fm=fonts.computeIfAbsent(key,k -> {\n    Font font=new Font(fontFamily,Font.PLAIN,fontSize);\n    return codeArea.getFontMetrics(font);\n  }\n);\n  descent=Math.max(descent,fm.getDescent());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 189,
        "startColumnNumber" : 9,
        "endLineNumber" : 208,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (fonts == null) {\n    fonts=new HashMap<>();\n  }\n  Element root=codeArea.getDocument().getDefaultRootElement();\n  int index=root.getElementIndex(rowStartOffset);\n  Element line=root.getElement(index);\n  for (int i=0; i < line.getElementCount(); i++) {\n    Element child=line.getElement(i);\n    AttributeSet as=child.getAttributes();\n    String fontFamily=(String)as.getAttribute(StyleConstants.FontFamily);\n    Integer fontSize=(Integer)as.getAttribute(StyleConstants.FontSize);\n    String key=fontFamily + fontSize;\n    FontMetrics fm=fonts.computeIfAbsent(key,k -> {\n      Font font=new Font(fontFamily,Font.PLAIN,fontSize);\n      return codeArea.getFontMetrics(font);\n    }\n);\n    descent=Math.max(descent,fm.getDescent());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 855,
        "startLineNumber" : 187,
        "startColumnNumber" : 2,
        "endLineNumber" : 208,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (r.height == lineHeight) {\n  descent=fontMetrics.getDescent();\n}\n else {\n  if (fonts == null) {\n    fonts=new HashMap<>();\n  }\n  Element root=codeArea.getDocument().getDefaultRootElement();\n  int index=root.getElementIndex(rowStartOffset);\n  Element line=root.getElement(index);\n  for (int i=0; i < line.getElementCount(); i++) {\n    Element child=line.getElement(i);\n    AttributeSet as=child.getAttributes();\n    String fontFamily=(String)as.getAttribute(StyleConstants.FontFamily);\n    Integer fontSize=(Integer)as.getAttribute(StyleConstants.FontSize);\n    String key=fontFamily + fontSize;\n    FontMetrics fm=fonts.computeIfAbsent(key,k -> {\n      Font font=new Font(fontFamily,Font.PLAIN,fontSize);\n      return codeArea.getFontMetrics(font);\n    }\n);\n    descent=Math.max(descent,fm.getDescent());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 161,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1123,
        "startLineNumber" : 179,
        "startColumnNumber" : 97,
        "endLineNumber" : 210,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Rectangle r=codeArea.modelToView(rowStartOffset);\n  if (r == null) {\n    throw new BadLocationException(\"Can't get Y offset\",rowStartOffset);\n  }\n  int lineHeight=fontMetrics.getHeight();\n  int y=r.y + r.height;\n  int descent=0;\n  if (r.height == lineHeight) {\n    descent=fontMetrics.getDescent();\n  }\n else {\n    if (fonts == null) {\n      fonts=new HashMap<>();\n    }\n    Element root=codeArea.getDocument().getDefaultRootElement();\n    int index=root.getElementIndex(rowStartOffset);\n    Element line=root.getElement(index);\n    for (int i=0; i < line.getElementCount(); i++) {\n      Element child=line.getElement(i);\n      AttributeSet as=child.getAttributes();\n      String fontFamily=(String)as.getAttribute(StyleConstants.FontFamily);\n      Integer fontSize=(Integer)as.getAttribute(StyleConstants.FontSize);\n      String key=fontFamily + fontSize;\n      FontMetrics fm=fonts.computeIfAbsent(key,k -> {\n        Font font=new Font(fontFamily,Font.PLAIN,fontSize);\n        return codeArea.getFontMetrics(font);\n      }\n);\n      descent=Math.max(descent,fm.getDescent());\n    }\n  }\n  return y - descent;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 179,
        "startColumnNumber" : 1,
        "endLineNumber" : 210,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private int getOffsetY(int rowStartOffset,FontMetrics fontMetrics) throws BadLocationException {\n  Rectangle r=codeArea.modelToView(rowStartOffset);\n  if (r == null) {\n    throw new BadLocationException(\"Can't get Y offset\",rowStartOffset);\n  }\n  int lineHeight=fontMetrics.getHeight();\n  int y=r.y + r.height;\n  int descent=0;\n  if (r.height == lineHeight) {\n    descent=fontMetrics.getDescent();\n  }\n else {\n    if (fonts == null) {\n      fonts=new HashMap<>();\n    }\n    Element root=codeArea.getDocument().getDefaultRootElement();\n    int index=root.getElementIndex(rowStartOffset);\n    Element line=root.getElement(index);\n    for (int i=0; i < line.getElementCount(); i++) {\n      Element child=line.getElement(i);\n      AttributeSet as=child.getAttributes();\n      String fontFamily=(String)as.getAttribute(StyleConstants.FontFamily);\n      Integer fontSize=(Integer)as.getAttribute(StyleConstants.FontSize);\n      String key=fontFamily + fontSize;\n      FontMetrics fm=fonts.computeIfAbsent(key,k -> {\n        Font font=new Font(fontFamily,Font.PLAIN,fontSize);\n        return codeArea.getFontMetrics(font);\n      }\n);\n      descent=Math.max(descent,fm.getDescent());\n    }\n  }\n  return y - descent;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 196,
        "startColumnNumber" : 3,
        "endLineNumber" : 207,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int i=0; i < line.getElementCount(); i++) {\n  Element child=line.getElement(i);\n  AttributeSet as=child.getAttributes();\n  String fontFamily=(String)as.getAttribute(StyleConstants.FontFamily);\n  Integer fontSize=(Integer)as.getAttribute(StyleConstants.FontSize);\n  String key=fontFamily + fontSize;\n  FontMetrics fm=fonts.computeIfAbsent(key,k -> {\n    Font font=new Font(fontFamily,Font.PLAIN,fontSize);\n    return codeArea.getFontMetrics(font);\n  }\n);\n  descent=Math.max(descent,fm.getDescent());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 12
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 196,
    "startColumnNumber" : 19,
    "endLineNumber" : 196,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}