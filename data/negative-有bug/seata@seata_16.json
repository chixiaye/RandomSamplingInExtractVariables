{
  "id" : 16,
  "expression" : "decodeBranchReportRequest.getApplicationData()",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/core/src/test/java/io/seata/core/message/BranchReportRequestTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "decodeBranchReportRequest.getApplicationData()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 76,
      "startColumnNumber" : 74,
      "endLineNumber" : 76,
      "endColumnNumber" : 120
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 121
      },
      "nodeContext" : "Assertions.assertEquals(branchReportRequest.getApplicationData(),decodeBranchReportRequest.getApplicationData())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 122
      },
      "nodeContext" : "Assertions.assertEquals(branchReportRequest.getApplicationData(),decodeBranchReportRequest.getApplicationData());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1441,
        "startLineNumber" : 56,
        "startColumnNumber" : 29,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BranchReportRequest branchReportRequest=new BranchReportRequest();\n  branchReportRequest.setXid(\"127.0.0.1:8091:1249853\");\n  branchReportRequest.setBranchId(3);\n  branchReportRequest.setResourceId(\"resource003\");\n  branchReportRequest.setStatus(BranchStatus.PhaseOne_Timeout);\n  branchReportRequest.setApplicationData(\"test app data\");\n  branchReportRequest.setBranchType(BranchType.AT);\n  byte[] encodeResult=branchReportRequest.encode();\n  ByteBuffer byteBuffer=ByteBuffer.allocate(encodeResult.length);\n  byteBuffer.put(encodeResult);\n  byteBuffer.flip();\n  BranchReportRequest decodeBranchReportRequest=new BranchReportRequest();\n  decodeBranchReportRequest.decode(byteBuffer);\n  Assertions.assertEquals(branchReportRequest.getXid(),decodeBranchReportRequest.getXid());\n  Assertions.assertEquals(branchReportRequest.getBranchId(),decodeBranchReportRequest.getBranchId());\n  Assertions.assertEquals(branchReportRequest.getResourceId(),decodeBranchReportRequest.getResourceId());\n  Assertions.assertEquals(branchReportRequest.getStatus(),decodeBranchReportRequest.getStatus());\n  Assertions.assertEquals(branchReportRequest.getApplicationData(),decodeBranchReportRequest.getApplicationData());\n  Assertions.assertEquals(branchReportRequest.getBranchType(),decodeBranchReportRequest.getBranchType());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1558,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test decode.\n * @throws Exception the exception\n */\n@Test public void testDecode(){\n  BranchReportRequest branchReportRequest=new BranchReportRequest();\n  branchReportRequest.setXid(\"127.0.0.1:8091:1249853\");\n  branchReportRequest.setBranchId(3);\n  branchReportRequest.setResourceId(\"resource003\");\n  branchReportRequest.setStatus(BranchStatus.PhaseOne_Timeout);\n  branchReportRequest.setApplicationData(\"test app data\");\n  branchReportRequest.setBranchType(BranchType.AT);\n  byte[] encodeResult=branchReportRequest.encode();\n  ByteBuffer byteBuffer=ByteBuffer.allocate(encodeResult.length);\n  byteBuffer.put(encodeResult);\n  byteBuffer.flip();\n  BranchReportRequest decodeBranchReportRequest=new BranchReportRequest();\n  decodeBranchReportRequest.decode(byteBuffer);\n  Assertions.assertEquals(branchReportRequest.getXid(),decodeBranchReportRequest.getXid());\n  Assertions.assertEquals(branchReportRequest.getBranchId(),decodeBranchReportRequest.getBranchId());\n  Assertions.assertEquals(branchReportRequest.getResourceId(),decodeBranchReportRequest.getResourceId());\n  Assertions.assertEquals(branchReportRequest.getStatus(),decodeBranchReportRequest.getStatus());\n  Assertions.assertEquals(branchReportRequest.getApplicationData(),decodeBranchReportRequest.getApplicationData());\n  Assertions.assertEquals(branchReportRequest.getBranchType(),decodeBranchReportRequest.getBranchType());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 122
      },
      "nodeContext" : "Assertions.assertEquals(branchReportRequest.getApplicationData(),decodeBranchReportRequest.getApplicationData());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 76,
    "startColumnNumber" : 74,
    "endLineNumber" : 76,
    "endColumnNumber" : 120
  } ],
  "layoutRelationDataList" : [ ]
}