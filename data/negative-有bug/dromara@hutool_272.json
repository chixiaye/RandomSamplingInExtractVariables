{
  "id" : 272,
  "expression" : "maxDepth",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/io/file/PathUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "maxDepth",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 79,
      "startColumnNumber" : 18,
      "endLineNumber" : 79,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 89,
        "endColumnNumber" : 4
      },
      "nodeContext" : "walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n  @Override public FileVisitResult visitFile(  Path path,  BasicFileAttributes attrs){\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return FileVisitResult.CONTINUE;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n  @Override public FileVisitResult visitFile(  Path path,  BasicFileAttributes attrs){\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return FileVisitResult.CONTINUE;\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 56,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 66,
        "startColumnNumber" : 84,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final List<File> fileList=new ArrayList<>();\n  if (null == path || false == Files.exists(path)) {\n    return fileList;\n  }\n else   if (false == isDirectory(path)) {\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return fileList;\n  }\n  walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n    @Override public FileVisitResult visitFile(    Path path,    BasicFileAttributes attrs){\n      final File file=path.toFile();\n      if (null == fileFilter || fileFilter.accept(file)) {\n        fileList.add(file);\n      }\n      return FileVisitResult.CONTINUE;\n    }\n  }\n);\n  return fileList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 递归遍历目录以及子目录中的所有文件<br> 如果提供path为文件，直接返回过滤结果\n * @param path       当前遍历文件或目录\n * @param maxDepth   遍历最大深度，-1表示遍历到没有目录为止\n * @param fileFilter 文件过滤规则对象，选择要保留的文件，只对文件有效，不过滤目录，null表示接收全部文件\n * @return 文件列表\n * @since 5.4.1\n */\npublic static List<File> loopFiles(Path path,int maxDepth,FileFilter fileFilter){\n  final List<File> fileList=new ArrayList<>();\n  if (null == path || false == Files.exists(path)) {\n    return fileList;\n  }\n else   if (false == isDirectory(path)) {\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return fileList;\n  }\n  walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n    @Override public FileVisitResult visitFile(    Path path,    BasicFileAttributes attrs){\n      final File file=path.toFile();\n      if (null == fileFilter || fileFilter.accept(file)) {\n        fileList.add(file);\n      }\n      return FileVisitResult.CONTINUE;\n    }\n  }\n);\n  return fileList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 89,
        "endColumnNumber" : 4
      },
      "nodeContext" : "walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n  @Override public FileVisitResult visitFile(  Path path,  BasicFileAttributes attrs){\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return FileVisitResult.CONTINUE;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 55,
      "astHeight" : 10
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 79,
    "startColumnNumber" : 18,
    "endLineNumber" : 79,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}