{
  "id" : 421,
  "expression" : "c",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/geometry/ConvexPolygonArea.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "c",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 46,
      "startColumnNumber" : 26,
      "endLineNumber" : 46,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 46,
        "startColumnNumber" : 22,
        "endLineNumber" : 46,
        "endColumnNumber" : 27
      },
      "nodeContext" : "b * c",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 46,
        "startColumnNumber" : 14,
        "endLineNumber" : 46,
        "endColumnNumber" : 27
      },
      "nodeContext" : "a * d - b * c",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 46,
        "startColumnNumber" : 6,
        "endLineNumber" : 46,
        "endColumnNumber" : 27
      },
      "nodeContext" : "area+=a * d - b * c",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 46,
        "startColumnNumber" : 6,
        "endLineNumber" : 46,
        "endColumnNumber" : 28
      },
      "nodeContext" : "area+=a * d - b * c;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 30,
        "startColumnNumber" : 32,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Point2D pt1=points[i];\n  Point2D pt2=points[i + 1];\n  double a=pt1.getX() - fpx;\n  double b=pt2.getX() - fpx;\n  double c=pt1.getY() - fpy;\n  double d=pt2.getY() - fpy;\n  area+=a * d - b * c;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 591,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=1; i < N; i++) {\n  Point2D pt1=points[i];\n  Point2D pt2=points[i + 1];\n  double a=pt1.getX() - fpx;\n  double b=pt2.getX() - fpx;\n  double c=pt1.getY() - fpy;\n  double d=pt2.getY() - fpy;\n  area+=a * d - b * c;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 76,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1047,
        "startLineNumber" : 18,
        "startColumnNumber" : 59,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int N=points.length - 1;\n  if (N < 3 || points[0] != points[N])   throw new IllegalArgumentException(\"Make sure N >= 3 and that the points array has n+1 points and points[0] = points[N]\");\n  Point2D fp=points[0];\n  double area=0, fpx=fp.getX(), fpy=fp.getY();\n  for (int i=1; i < N; i++) {\n    Point2D pt1=points[i];\n    Point2D pt2=points[i + 1];\n    double a=pt1.getX() - fpx;\n    double b=pt2.getX() - fpx;\n    double c=pt1.getY() - fpy;\n    double d=pt2.getY() - fpy;\n    area+=a * d - b * c;\n  }\n  return Math.abs(area) / 2.0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1104,
        "startLineNumber" : 18,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static double convexPolygonArea(Point2D[] points){\n  int N=points.length - 1;\n  if (N < 3 || points[0] != points[N])   throw new IllegalArgumentException(\"Make sure N >= 3 and that the points array has n+1 points and points[0] = points[N]\");\n  Point2D fp=points[0];\n  double area=0, fpx=fp.getX(), fpy=fp.getY();\n  for (int i=1; i < N; i++) {\n    Point2D pt1=points[i];\n    Point2D pt2=points[i + 1];\n    double a=pt1.getX() - fpx;\n    double b=pt2.getX() - fpx;\n    double c=pt1.getY() - fpy;\n    double d=pt2.getY() - fpy;\n    area+=a * d - b * c;\n  }\n  return Math.abs(area) / 2.0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 46,
        "startColumnNumber" : 6,
        "endLineNumber" : 46,
        "endColumnNumber" : 28
      },
      "nodeContext" : "area+=a * d - b * c;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 46,
    "startColumnNumber" : 26,
    "endLineNumber" : 46,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}