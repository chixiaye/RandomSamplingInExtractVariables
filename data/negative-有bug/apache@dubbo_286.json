{
  "id" : 286,
  "expression" : "new AppResponse()",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/CompatibleFilterFilterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AppResponse()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 60,
      "startColumnNumber" : 29,
      "endLineNumber" : 60,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 60,
        "endColumnNumber" : 46
      },
      "nodeContext" : "result=new AppResponse()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 47
      },
      "nodeContext" : "AppResponse result=new AppResponse();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 51,
        "startColumnNumber" : 37,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  invocation=mock(Invocation.class);\n  given(invocation.getMethodName()).willReturn(\"$enumlength\");\n  given(invocation.getParameterTypes()).willReturn(new Class<?>[]{Enum.class});\n  given(invocation.getArguments()).willReturn(new Object[]{\"hello\"});\n  invoker=mock(Invoker.class);\n  given(invoker.isAvailable()).willReturn(true);\n  given(invoker.getInterface()).willReturn(DemoService.class);\n  AppResponse result=new AppResponse();\n  result.setValue(\"High\");\n  given(invoker.invoke(invocation)).willReturn(result);\n  URL url=URL.valueOf(\"test://test:11/test?group=dubbo&version=1.1\");\n  given(invoker.getUrl()).willReturn(url);\n  Result filterResult=compatibleFilter.invoke(invoker,invocation);\n  assertEquals(filterResult,result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInvokerGeneric(){\n  invocation=mock(Invocation.class);\n  given(invocation.getMethodName()).willReturn(\"$enumlength\");\n  given(invocation.getParameterTypes()).willReturn(new Class<?>[]{Enum.class});\n  given(invocation.getArguments()).willReturn(new Object[]{\"hello\"});\n  invoker=mock(Invoker.class);\n  given(invoker.isAvailable()).willReturn(true);\n  given(invoker.getInterface()).willReturn(DemoService.class);\n  AppResponse result=new AppResponse();\n  result.setValue(\"High\");\n  given(invoker.invoke(invocation)).willReturn(result);\n  URL url=URL.valueOf(\"test://test:11/test?group=dubbo&version=1.1\");\n  given(invoker.getUrl()).willReturn(url);\n  Result filterResult=compatibleFilter.invoke(invoker,invocation);\n  assertEquals(filterResult,result);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 47
      },
      "nodeContext" : "AppResponse result=new AppResponse();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.rpc.AppResponse"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 60,
    "startColumnNumber" : 29,
    "endLineNumber" : 60,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}