{
  "id" : 60,
  "expression" : "result",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/others/Luhn.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 135,
      "startColumnNumber" : 20,
      "endLineNumber" : 135,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 135,
        "startColumnNumber" : 20,
        "endLineNumber" : 135,
        "endColumnNumber" : 38
      },
      "nodeContext" : "result.append(\" \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 135,
        "startColumnNumber" : 20,
        "endLineNumber" : 135,
        "endColumnNumber" : 39
      },
      "nodeContext" : "result.append(\" \");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 134,
        "startColumnNumber" : 42,
        "endLineNumber" : 136,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.append(\" \");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 134,
        "startColumnNumber" : 16,
        "endLineNumber" : 136,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i % 4 == 0 && i != 0) {\n  result.append(\" \");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 133,
        "startColumnNumber" : 51,
        "endLineNumber" : 138,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i % 4 == 0 && i != 0) {\n    result.append(\" \");\n  }\n  result.append(digits[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 138,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < DIGITS_COUNT; i++) {\n  if (i % 4 == 0 && i != 0) {\n    result.append(\" \");\n  }\n  result.append(digits[i]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 131,
        "startColumnNumber" : 31,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  StringBuilder result=new StringBuilder();\n  for (int i=0; i < DIGITS_COUNT; i++) {\n    if (i % 4 == 0 && i != 0) {\n      result.append(\" \");\n    }\n    result.append(digits[i]);\n  }\n  return result.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1983,
        "startLineNumber" : 100,
        "startColumnNumber" : 44,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  private static final int DIGITS_COUNT=16;\n  public static CreditCard fromString;\n  String cardNumber;\n{\n    Objects.requireNonNull(cardNumber);\n    String trimmedCardNumber=cardNumber.replaceAll(\" \",\"\");\n    if (trimmedCardNumber.length() != DIGITS_COUNT || !trimmedCardNumber.matches(\"\\\\d+\")) {\n      throw new IllegalArgumentException(\"{\" + cardNumber + \"} - is not a card number\");\n    }\n    int[] cardNumbers=toIntArray(trimmedCardNumber);\n    boolean isValid=luhnCheck(cardNumbers);\n    if (!isValid) {\n      throw new IllegalArgumentException(\"Credit card number {\" + cardNumber + \"} - have a typo\");\n    }\n    return new CreditCard(cardNumbers);\n  }\n  String;\n  number();\n{\n    StringBuilder result=new StringBuilder();\n    for (int i=0; i < DIGITS_COUNT; i++) {\n      if (i % 4 == 0 && i != 0) {\n        result.append(\" \");\n      }\n      result.append(digits[i]);\n    }\n    return result.toString();\n  }\n  String;\n  toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2087,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Object representation of credit card.\n */\nprivate record CreditCard(int[] digits){\n  private static final int DIGITS_COUNT=16;\n  public static CreditCard fromString;\n  String cardNumber;\n{\n    Objects.requireNonNull(cardNumber);\n    String trimmedCardNumber=cardNumber.replaceAll(\" \",\"\");\n    if (trimmedCardNumber.length() != DIGITS_COUNT || !trimmedCardNumber.matches(\"\\\\d+\")) {\n      throw new IllegalArgumentException(\"{\" + cardNumber + \"} - is not a card number\");\n    }\n    int[] cardNumbers=toIntArray(trimmedCardNumber);\n    boolean isValid=luhnCheck(cardNumbers);\n    if (!isValid) {\n      throw new IllegalArgumentException(\"Credit card number {\" + cardNumber + \"} - have a typo\");\n    }\n    return new CreditCard(cardNumbers);\n  }\n  String;\n  number();\n{\n    StringBuilder result=new StringBuilder();\n    for (int i=0; i < DIGITS_COUNT; i++) {\n      if (i % 4 == 0 && i != 0) {\n        result.append(\" \");\n      }\n      result.append(digits[i]);\n    }\n    return result.toString();\n  }\n  String;\n  toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 135,
        "startColumnNumber" : 20,
        "endLineNumber" : 135,
        "endColumnNumber" : 39
      },
      "nodeContext" : "result.append(\" \");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 137,
      "startColumnNumber" : 16,
      "endLineNumber" : 137,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 40
      },
      "nodeContext" : "result.append(digits[i])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 41
      },
      "nodeContext" : "result.append(digits[i]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 133,
        "startColumnNumber" : 51,
        "endLineNumber" : 138,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i % 4 == 0 && i != 0) {\n    result.append(\" \");\n  }\n  result.append(digits[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 138,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < DIGITS_COUNT; i++) {\n  if (i % 4 == 0 && i != 0) {\n    result.append(\" \");\n  }\n  result.append(digits[i]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 131,
        "startColumnNumber" : 31,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  StringBuilder result=new StringBuilder();\n  for (int i=0; i < DIGITS_COUNT; i++) {\n    if (i % 4 == 0 && i != 0) {\n      result.append(\" \");\n    }\n    result.append(digits[i]);\n  }\n  return result.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1983,
        "startLineNumber" : 100,
        "startColumnNumber" : 44,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  private static final int DIGITS_COUNT=16;\n  public static CreditCard fromString;\n  String cardNumber;\n{\n    Objects.requireNonNull(cardNumber);\n    String trimmedCardNumber=cardNumber.replaceAll(\" \",\"\");\n    if (trimmedCardNumber.length() != DIGITS_COUNT || !trimmedCardNumber.matches(\"\\\\d+\")) {\n      throw new IllegalArgumentException(\"{\" + cardNumber + \"} - is not a card number\");\n    }\n    int[] cardNumbers=toIntArray(trimmedCardNumber);\n    boolean isValid=luhnCheck(cardNumbers);\n    if (!isValid) {\n      throw new IllegalArgumentException(\"Credit card number {\" + cardNumber + \"} - have a typo\");\n    }\n    return new CreditCard(cardNumbers);\n  }\n  String;\n  number();\n{\n    StringBuilder result=new StringBuilder();\n    for (int i=0; i < DIGITS_COUNT; i++) {\n      if (i % 4 == 0 && i != 0) {\n        result.append(\" \");\n      }\n      result.append(digits[i]);\n    }\n    return result.toString();\n  }\n  String;\n  toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2087,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Object representation of credit card.\n */\nprivate record CreditCard(int[] digits){\n  private static final int DIGITS_COUNT=16;\n  public static CreditCard fromString;\n  String cardNumber;\n{\n    Objects.requireNonNull(cardNumber);\n    String trimmedCardNumber=cardNumber.replaceAll(\" \",\"\");\n    if (trimmedCardNumber.length() != DIGITS_COUNT || !trimmedCardNumber.matches(\"\\\\d+\")) {\n      throw new IllegalArgumentException(\"{\" + cardNumber + \"} - is not a card number\");\n    }\n    int[] cardNumbers=toIntArray(trimmedCardNumber);\n    boolean isValid=luhnCheck(cardNumbers);\n    if (!isValid) {\n      throw new IllegalArgumentException(\"Credit card number {\" + cardNumber + \"} - have a typo\");\n    }\n    return new CreditCard(cardNumbers);\n  }\n  String;\n  number();\n{\n    StringBuilder result=new StringBuilder();\n    for (int i=0; i < DIGITS_COUNT; i++) {\n      if (i % 4 == 0 && i != 0) {\n        result.append(\" \");\n      }\n      result.append(digits[i]);\n    }\n    return result.toString();\n  }\n  String;\n  toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 41
      },
      "nodeContext" : "result.append(digits[i]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 139,
      "startColumnNumber" : 19,
      "endLineNumber" : 139,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 139,
        "startColumnNumber" : 19,
        "endLineNumber" : 139,
        "endColumnNumber" : 36
      },
      "nodeContext" : "result.toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 139,
        "startColumnNumber" : 12,
        "endLineNumber" : 139,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return result.toString();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 131,
        "startColumnNumber" : 31,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  StringBuilder result=new StringBuilder();\n  for (int i=0; i < DIGITS_COUNT; i++) {\n    if (i % 4 == 0 && i != 0) {\n      result.append(\" \");\n    }\n    result.append(digits[i]);\n  }\n  return result.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1983,
        "startLineNumber" : 100,
        "startColumnNumber" : 44,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  private static final int DIGITS_COUNT=16;\n  public static CreditCard fromString;\n  String cardNumber;\n{\n    Objects.requireNonNull(cardNumber);\n    String trimmedCardNumber=cardNumber.replaceAll(\" \",\"\");\n    if (trimmedCardNumber.length() != DIGITS_COUNT || !trimmedCardNumber.matches(\"\\\\d+\")) {\n      throw new IllegalArgumentException(\"{\" + cardNumber + \"} - is not a card number\");\n    }\n    int[] cardNumbers=toIntArray(trimmedCardNumber);\n    boolean isValid=luhnCheck(cardNumbers);\n    if (!isValid) {\n      throw new IllegalArgumentException(\"Credit card number {\" + cardNumber + \"} - have a typo\");\n    }\n    return new CreditCard(cardNumbers);\n  }\n  String;\n  number();\n{\n    StringBuilder result=new StringBuilder();\n    for (int i=0; i < DIGITS_COUNT; i++) {\n      if (i % 4 == 0 && i != 0) {\n        result.append(\" \");\n      }\n      result.append(digits[i]);\n    }\n    return result.toString();\n  }\n  String;\n  toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2087,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Object representation of credit card.\n */\nprivate record CreditCard(int[] digits){\n  private static final int DIGITS_COUNT=16;\n  public static CreditCard fromString;\n  String cardNumber;\n{\n    Objects.requireNonNull(cardNumber);\n    String trimmedCardNumber=cardNumber.replaceAll(\" \",\"\");\n    if (trimmedCardNumber.length() != DIGITS_COUNT || !trimmedCardNumber.matches(\"\\\\d+\")) {\n      throw new IllegalArgumentException(\"{\" + cardNumber + \"} - is not a card number\");\n    }\n    int[] cardNumbers=toIntArray(trimmedCardNumber);\n    boolean isValid=luhnCheck(cardNumbers);\n    if (!isValid) {\n      throw new IllegalArgumentException(\"Credit card number {\" + cardNumber + \"} - have a typo\");\n    }\n    return new CreditCard(cardNumbers);\n  }\n  String;\n  number();\n{\n    StringBuilder result=new StringBuilder();\n    for (int i=0; i < DIGITS_COUNT; i++) {\n      if (i % 4 == 0 && i != 0) {\n        result.append(\" \");\n      }\n      result.append(digits[i]);\n    }\n    return result.toString();\n  }\n  String;\n  toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 139,
        "startColumnNumber" : 12,
        "endLineNumber" : 139,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return result.toString();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 135,
    "startColumnNumber" : 20,
    "endLineNumber" : 135,
    "endColumnNumber" : 26
  }, {
    "charLength" : 6,
    "startLineNumber" : 137,
    "startColumnNumber" : 16,
    "endLineNumber" : 137,
    "endColumnNumber" : 22
  }, {
    "charLength" : 6,
    "startLineNumber" : 139,
    "startColumnNumber" : 19,
    "endLineNumber" : 139,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}