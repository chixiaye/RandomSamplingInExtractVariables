{
  "id" : 414,
  "expression" : "index",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/integration/KTableEfficientRangeQueryTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "index",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 106,
      "startColumnNumber" : 43,
      "endLineNumber" : 106,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 106,
        "startColumnNumber" : 34,
        "endLineNumber" : 106,
        "endColumnNumber" : 48
      },
      "nodeContext" : "\"key-\" + index",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 48
      },
      "nodeContext" : "innerLowBetween=\"key-\" + index",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 49
      },
      "nodeContext" : "innerLowBetween=\"key-\" + index;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 103,
        "startColumnNumber" : 24,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  innerLow=key;\n  final int index=i * 2 - 1;\n  innerLowBetween=\"key-\" + index;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (i == 1) {\n  innerLow=key;\n  final int index=i * 2 - 1;\n  innerLowBetween=\"key-\" + index;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 92,
        "startColumnNumber" : 44,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String key=\"key-\" + i * 2;\n  final String value=\"val-\" + i * 2;\n  records.add(new KeyValue<>(key,value));\n  high=key;\n  if (low == null) {\n    low=key;\n  }\n  if (i == m) {\n    middle=key;\n  }\n  if (i == 1) {\n    innerLow=key;\n    final int index=i * 2 - 1;\n    innerLowBetween=\"key-\" + index;\n  }\n  if (i == DATA_SIZE - 2) {\n    innerHigh=key;\n    final int index=i * 2 + 1;\n    innerHighBetween=\"key-\" + index;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 710,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < DATA_SIZE; i++) {\n  final String key=\"key-\" + i * 2;\n  final String value=\"val-\" + i * 2;\n  records.add(new KeyValue<>(key,value));\n  high=key;\n  if (low == null) {\n    low=key;\n  }\n  if (i == m) {\n    middle=key;\n  }\n  if (i == 1) {\n    innerLow=key;\n    final int index=i * 2 - 1;\n    innerLowBetween=\"key-\" + index;\n  }\n  if (i == DATA_SIZE - 2) {\n    innerHigh=key;\n    final int index=i * 2 + 1;\n    innerHighBetween=\"key-\" + index;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 118,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 84,
        "startColumnNumber" : 149,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.storeType=storeType;\n  this.enableLogging=enableLogging;\n  this.enableCaching=enableCaching;\n  this.forward=forward;\n  this.records=new LinkedList<>();\n  final int m=DATA_SIZE / 2;\n  for (int i=0; i < DATA_SIZE; i++) {\n    final String key=\"key-\" + i * 2;\n    final String value=\"val-\" + i * 2;\n    records.add(new KeyValue<>(key,value));\n    high=key;\n    if (low == null) {\n      low=key;\n    }\n    if (i == m) {\n      middle=key;\n    }\n    if (i == 1) {\n      innerLow=key;\n      final int index=i * 2 - 1;\n      innerLowBetween=\"key-\" + index;\n    }\n    if (i == DATA_SIZE - 2) {\n      innerHigh=key;\n      final int index=i * 2 + 1;\n      innerHighBetween=\"key-\" + index;\n    }\n  }\n  Assert.assertNotNull(low);\n  Assert.assertNotNull(high);\n  Assert.assertNotNull(middle);\n  Assert.assertNotNull(innerLow);\n  Assert.assertNotNull(innerHigh);\n  Assert.assertNotNull(innerLowBetween);\n  Assert.assertNotNull(innerHighBetween);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1393,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public KTableEfficientRangeQueryTest(final StoreType storeType,final boolean enableLogging,final boolean enableCaching,final boolean forward){\n  this.storeType=storeType;\n  this.enableLogging=enableLogging;\n  this.enableCaching=enableCaching;\n  this.forward=forward;\n  this.records=new LinkedList<>();\n  final int m=DATA_SIZE / 2;\n  for (int i=0; i < DATA_SIZE; i++) {\n    final String key=\"key-\" + i * 2;\n    final String value=\"val-\" + i * 2;\n    records.add(new KeyValue<>(key,value));\n    high=key;\n    if (low == null) {\n      low=key;\n    }\n    if (i == m) {\n      middle=key;\n    }\n    if (i == 1) {\n      innerLow=key;\n      final int index=i * 2 - 1;\n      innerLowBetween=\"key-\" + index;\n    }\n    if (i == DATA_SIZE - 2) {\n      innerHigh=key;\n      final int index=i * 2 + 1;\n      innerHighBetween=\"key-\" + index;\n    }\n  }\n  Assert.assertNotNull(low);\n  Assert.assertNotNull(high);\n  Assert.assertNotNull(middle);\n  Assert.assertNotNull(innerLow);\n  Assert.assertNotNull(innerHigh);\n  Assert.assertNotNull(innerLowBetween);\n  Assert.assertNotNull(innerHighBetween);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 215,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 49
      },
      "nodeContext" : "innerLowBetween=\"key-\" + index;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "index",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 111,
      "startColumnNumber" : 44,
      "endLineNumber" : 111,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 111,
        "startColumnNumber" : 35,
        "endLineNumber" : 111,
        "endColumnNumber" : 49
      },
      "nodeContext" : "\"key-\" + index",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 111,
        "endColumnNumber" : 49
      },
      "nodeContext" : "innerHighBetween=\"key-\" + index",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 111,
        "endColumnNumber" : 50
      },
      "nodeContext" : "innerHighBetween=\"key-\" + index;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 108,
        "startColumnNumber" : 36,
        "endLineNumber" : 112,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  innerHigh=key;\n  final int index=i * 2 + 1;\n  innerHighBetween=\"key-\" + index;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 108,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (i == DATA_SIZE - 2) {\n  innerHigh=key;\n  final int index=i * 2 + 1;\n  innerHighBetween=\"key-\" + index;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 92,
        "startColumnNumber" : 44,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String key=\"key-\" + i * 2;\n  final String value=\"val-\" + i * 2;\n  records.add(new KeyValue<>(key,value));\n  high=key;\n  if (low == null) {\n    low=key;\n  }\n  if (i == m) {\n    middle=key;\n  }\n  if (i == 1) {\n    innerLow=key;\n    final int index=i * 2 - 1;\n    innerLowBetween=\"key-\" + index;\n  }\n  if (i == DATA_SIZE - 2) {\n    innerHigh=key;\n    final int index=i * 2 + 1;\n    innerHighBetween=\"key-\" + index;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 710,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < DATA_SIZE; i++) {\n  final String key=\"key-\" + i * 2;\n  final String value=\"val-\" + i * 2;\n  records.add(new KeyValue<>(key,value));\n  high=key;\n  if (low == null) {\n    low=key;\n  }\n  if (i == m) {\n    middle=key;\n  }\n  if (i == 1) {\n    innerLow=key;\n    final int index=i * 2 - 1;\n    innerLowBetween=\"key-\" + index;\n  }\n  if (i == DATA_SIZE - 2) {\n    innerHigh=key;\n    final int index=i * 2 + 1;\n    innerHighBetween=\"key-\" + index;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 118,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 84,
        "startColumnNumber" : 149,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.storeType=storeType;\n  this.enableLogging=enableLogging;\n  this.enableCaching=enableCaching;\n  this.forward=forward;\n  this.records=new LinkedList<>();\n  final int m=DATA_SIZE / 2;\n  for (int i=0; i < DATA_SIZE; i++) {\n    final String key=\"key-\" + i * 2;\n    final String value=\"val-\" + i * 2;\n    records.add(new KeyValue<>(key,value));\n    high=key;\n    if (low == null) {\n      low=key;\n    }\n    if (i == m) {\n      middle=key;\n    }\n    if (i == 1) {\n      innerLow=key;\n      final int index=i * 2 - 1;\n      innerLowBetween=\"key-\" + index;\n    }\n    if (i == DATA_SIZE - 2) {\n      innerHigh=key;\n      final int index=i * 2 + 1;\n      innerHighBetween=\"key-\" + index;\n    }\n  }\n  Assert.assertNotNull(low);\n  Assert.assertNotNull(high);\n  Assert.assertNotNull(middle);\n  Assert.assertNotNull(innerLow);\n  Assert.assertNotNull(innerHigh);\n  Assert.assertNotNull(innerLowBetween);\n  Assert.assertNotNull(innerHighBetween);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1393,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public KTableEfficientRangeQueryTest(final StoreType storeType,final boolean enableLogging,final boolean enableCaching,final boolean forward){\n  this.storeType=storeType;\n  this.enableLogging=enableLogging;\n  this.enableCaching=enableCaching;\n  this.forward=forward;\n  this.records=new LinkedList<>();\n  final int m=DATA_SIZE / 2;\n  for (int i=0; i < DATA_SIZE; i++) {\n    final String key=\"key-\" + i * 2;\n    final String value=\"val-\" + i * 2;\n    records.add(new KeyValue<>(key,value));\n    high=key;\n    if (low == null) {\n      low=key;\n    }\n    if (i == m) {\n      middle=key;\n    }\n    if (i == 1) {\n      innerLow=key;\n      final int index=i * 2 - 1;\n      innerLowBetween=\"key-\" + index;\n    }\n    if (i == DATA_SIZE - 2) {\n      innerHigh=key;\n      final int index=i * 2 + 1;\n      innerHighBetween=\"key-\" + index;\n    }\n  }\n  Assert.assertNotNull(low);\n  Assert.assertNotNull(high);\n  Assert.assertNotNull(middle);\n  Assert.assertNotNull(innerLow);\n  Assert.assertNotNull(innerHigh);\n  Assert.assertNotNull(innerLowBetween);\n  Assert.assertNotNull(innerHighBetween);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 215,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 111,
        "endColumnNumber" : 50
      },
      "nodeContext" : "innerHighBetween=\"key-\" + index;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 106,
    "startColumnNumber" : 43,
    "endLineNumber" : 106,
    "endColumnNumber" : 48
  }, {
    "charLength" : 5,
    "startLineNumber" : 111,
    "startColumnNumber" : 44,
    "endLineNumber" : 111,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}