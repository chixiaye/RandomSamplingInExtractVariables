{
  "id" : 273,
  "expression" : "(byte)0",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/stubbing/ReturningDefaultValuesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(byte)0",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 28,
      "startColumnNumber" : 21,
      "endLineNumber" : 28,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals((byte)0,mock.byteReturningMethod())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertEquals((byte)0,mock.byteReturningMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 27,
        "startColumnNumber" : 68,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals((byte)0,mock.byteReturningMethod());\n  assertEquals((short)0,mock.shortReturningMethod());\n  assertEquals(0,mock.intReturningMethod());\n  assertEquals(0L,mock.longReturningMethod());\n  assertEquals(0.0F,mock.floatReturningMethod(),0.0F);\n  assertEquals(0.0D,mock.doubleReturningMethod(),0.0D);\n  assertEquals((char)0,mock.charReturningMethod());\n  assertEquals(false,mock.booleanReturningMethod());\n  assertEquals(null,mock.objectReturningMethod());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 625,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnAllKindsOfPrimitives() throws Exception {\n  assertEquals((byte)0,mock.byteReturningMethod());\n  assertEquals((short)0,mock.shortReturningMethod());\n  assertEquals(0,mock.intReturningMethod());\n  assertEquals(0L,mock.longReturningMethod());\n  assertEquals(0.0F,mock.floatReturningMethod(),0.0F);\n  assertEquals(0.0D,mock.doubleReturningMethod(),0.0D);\n  assertEquals((char)0,mock.charReturningMethod());\n  assertEquals(false,mock.booleanReturningMethod());\n  assertEquals(null,mock.objectReturningMethod());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertEquals((byte)0,mock.byteReturningMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 28,
    "startColumnNumber" : 21,
    "endLineNumber" : 28,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}