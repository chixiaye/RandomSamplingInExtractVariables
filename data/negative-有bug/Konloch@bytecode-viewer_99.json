{
  "id" : 99,
  "expression" : "java",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/util/JarUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "java",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 94,
      "startColumnNumber" : 21,
      "endLineNumber" : 94,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 94,
        "startColumnNumber" : 21,
        "endLineNumber" : 94,
        "endColumnNumber" : 28
      },
      "nodeContext" : "java.io",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 94,
        "startColumnNumber" : 21,
        "endLineNumber" : 94,
        "endColumnNumber" : 41
      },
      "nodeContext" : "java.io.EOFException",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.UnionType,types]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 94,
        "startColumnNumber" : 21,
        "endLineNumber" : 94,
        "endColumnNumber" : 41
      },
      "nodeContext" : "java.io.EOFException",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SingleVariableDeclaration,type]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 94,
        "startColumnNumber" : 21,
        "endLineNumber" : 94,
        "endColumnNumber" : 56
      },
      "nodeContext" : "java.io.EOFException|ZipException",
      "nodeType" : "UnionType",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,exception]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 94,
        "startColumnNumber" : 21,
        "endLineNumber" : 94,
        "endColumnNumber" : 58
      },
      "nodeContext" : "java.io.EOFException|ZipException e",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 94,
        "startColumnNumber" : 14,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (java.io.EOFException|ZipException e) {\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1284,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  final String name=entry.getName();\n  final byte[] bytes=getBytes(jis);\n  if (!name.endsWith(\".class\")) {\n    if (!entry.isDirectory())     files.put(name,bytes);\n  }\n else {\n    if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n      try {\n        final ClassNode cn=getNode(bytes);\n        container.classes.add(cn);\n      }\n catch (      Exception e) {\n        System.err.println(\"Skipping: \" + name);\n        e.printStackTrace();\n      }\n    }\n else {\n      if (!entry.isDirectory())       files.put(name,bytes);\n    }\n  }\n}\n catch (java.io.EOFException|ZipException e) {\n}\ncatch (Exception e) {\n  BytecodeViewer.handleException(e);\n}\n finally {\n  jis.closeEntry();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 127,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 70,
        "startColumnNumber" : 53,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    final String name=entry.getName();\n    final byte[] bytes=getBytes(jis);\n    if (!name.endsWith(\".class\")) {\n      if (!entry.isDirectory())       files.put(name,bytes);\n    }\n else {\n      if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n        try {\n          final ClassNode cn=getNode(bytes);\n          container.classes.add(cn);\n        }\n catch (        Exception e) {\n          System.err.println(\"Skipping: \" + name);\n          e.printStackTrace();\n        }\n      }\n else {\n        if (!entry.isDirectory())         files.put(name,bytes);\n      }\n    }\n  }\n catch (  java.io.EOFException|ZipException e) {\n  }\ncatch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n finally {\n    jis.closeEntry();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1353,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while ((entry=jis.getNextEntry()) != null) {\n  try {\n    final String name=entry.getName();\n    final byte[] bytes=getBytes(jis);\n    if (!name.endsWith(\".class\")) {\n      if (!entry.isDirectory())       files.put(name,bytes);\n    }\n else {\n      if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n        try {\n          final ClassNode cn=getNode(bytes);\n          container.classes.add(cn);\n        }\n catch (        Exception e) {\n          System.err.println(\"Skipping: \" + name);\n          e.printStackTrace();\n        }\n      }\n else {\n        if (!entry.isDirectory())         files.put(name,bytes);\n      }\n    }\n  }\n catch (  java.io.EOFException|ZipException e) {\n  }\ncatch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n finally {\n    jis.closeEntry();\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 137,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1691,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FileContainer container=new FileContainer(jarFile);\n  HashMap<String,byte[]> files=new HashMap<>();\n  ZipInputStream jis=new ZipInputStream(new FileInputStream(jarFile));\n  ZipEntry entry;\n  while ((entry=jis.getNextEntry()) != null) {\n    try {\n      final String name=entry.getName();\n      final byte[] bytes=getBytes(jis);\n      if (!name.endsWith(\".class\")) {\n        if (!entry.isDirectory())         files.put(name,bytes);\n      }\n else {\n        if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n          try {\n            final ClassNode cn=getNode(bytes);\n            container.classes.add(cn);\n          }\n catch (          Exception e) {\n            System.err.println(\"Skipping: \" + name);\n            e.printStackTrace();\n          }\n        }\n else {\n          if (!entry.isDirectory())           files.put(name,bytes);\n        }\n      }\n    }\n catch (    java.io.EOFException|ZipException e) {\n    }\ncatch (    Exception e) {\n      BytecodeViewer.handleException(e);\n    }\n finally {\n      jis.closeEntry();\n    }\n  }\n  jis.close();\n  container.files=files;\n  BytecodeViewer.files.add(container);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1922,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Loads the classes and resources from the input jar file\n * @param jarFile the input jar file\n * @throws IOException\n */\npublic static void importArchiveA(final File jarFile) throws IOException {\n  FileContainer container=new FileContainer(jarFile);\n  HashMap<String,byte[]> files=new HashMap<>();\n  ZipInputStream jis=new ZipInputStream(new FileInputStream(jarFile));\n  ZipEntry entry;\n  while ((entry=jis.getNextEntry()) != null) {\n    try {\n      final String name=entry.getName();\n      final byte[] bytes=getBytes(jis);\n      if (!name.endsWith(\".class\")) {\n        if (!entry.isDirectory())         files.put(name,bytes);\n      }\n else {\n        if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n          try {\n            final ClassNode cn=getNode(bytes);\n            container.classes.add(cn);\n          }\n catch (          Exception e) {\n            System.err.println(\"Skipping: \" + name);\n            e.printStackTrace();\n          }\n        }\n else {\n          if (!entry.isDirectory())           files.put(name,bytes);\n        }\n      }\n    }\n catch (    java.io.EOFException|ZipException e) {\n    }\ncatch (    Exception e) {\n      BytecodeViewer.handleException(e);\n    }\n finally {\n      jis.closeEntry();\n    }\n  }\n  jis.close();\n  container.files=files;\n  BytecodeViewer.files.add(container);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,exception]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 94,
        "startColumnNumber" : 21,
        "endLineNumber" : 94,
        "endColumnNumber" : 58
      },
      "nodeContext" : "java.io.EOFException|ZipException e",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 94,
    "startColumnNumber" : 21,
    "endLineNumber" : 94,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}