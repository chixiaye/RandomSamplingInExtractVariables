{
  "id" : 74,
  "expression" : "reader.getAttributeValue(i).replace(\".\",\"/\")",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/service/indexer/XmlFileIndexerProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "reader.getAttributeValue(i).replace(\".\",\"/\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 60,
      "startColumnNumber" : 53,
      "endLineNumber" : 60,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 60,
        "startColumnNumber" : 32,
        "endLineNumber" : 60,
        "endColumnNumber" : 99
      },
      "nodeContext" : "typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 60,
        "startColumnNumber" : 32,
        "endLineNumber" : 60,
        "endColumnNumber" : 100
      },
      "nodeContext" : "typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 58,
        "startColumnNumber" : 75,
        "endLineNumber" : 61,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 58,
        "startColumnNumber" : 28,
        "endLineNumber" : 63,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (beanFlag && attributeName.equals(\"class\")) {\n  typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n}\n else {\n  stringSet.add(reader.getAttributeValue(i));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 560,
        "startLineNumber" : 53,
        "startColumnNumber" : 82,
        "endLineNumber" : 64,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  String attributeName=reader.getAttributeLocalName(i);\n  stringSet.add(attributeName);\n  if (beanFlag && attributeName.equals(\"class\")) {\n    typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n  }\n else {\n    stringSet.add(reader.getAttributeValue(i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 618,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 64,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  String attributeName=reader.getAttributeLocalName(i);\n  stringSet.add(attributeName);\n  if (beanFlag && attributeName.equals(\"class\")) {\n    typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n  }\n else {\n    stringSet.add(reader.getAttributeValue(i));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2905,
        "startLineNumber" : 48,
        "startColumnNumber" : 16,
        "endLineNumber" : 101,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  boolean beanFlag=reader.getLocalName().equals(\"bean\");\nstringSet.add(reader.getLocalName());\nfor (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\nString attributeName=reader.getAttributeLocalName(i);\nstringSet.add(attributeName);\nif (beanFlag && attributeName.equals(\"class\")) {\n  typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n}\n else {\n  stringSet.add(reader.getAttributeValue(i));\n}\n}\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 277,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2939,
        "startLineNumber" : 47,
        "startColumnNumber" : 37,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    boolean beanFlag=reader.getLocalName().equals(\"bean\");\n  stringSet.add(reader.getLocalName());\nfor (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  String attributeName=reader.getAttributeLocalName(i);\n  stringSet.add(attributeName);\n  if (beanFlag && attributeName.equals(\"class\")) {\n    typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n  }\n else {\n    stringSet.add(reader.getAttributeValue(i));\n  }\n}\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2964,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    boolean beanFlag=reader.getLocalName().equals(\"bean\");\n  stringSet.add(reader.getLocalName());\nfor (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n  String attributeName=reader.getAttributeLocalName(i);\n  stringSet.add(attributeName);\n  if (beanFlag && attributeName.equals(\"class\")) {\n    typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n  }\n else {\n    stringSet.add(reader.getAttributeValue(i));\n  }\n}\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 282,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3235,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      boolean beanFlag=reader.getLocalName().equals(\"bean\");\n    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    String attributeName=reader.getAttributeLocalName(i);\n    stringSet.add(attributeName);\n    if (beanFlag && attributeName.equals(\"class\")) {\n      typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n    }\n else {\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 313,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3588,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  reader=factory.createXMLStreamReader(entry.getInputStream());\n  stringSet.add(reader.getVersion());\n  stringSet.add(reader.getEncoding());\n  stringSet.add(reader.getCharacterEncodingScheme());\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      boolean beanFlag=reader.getLocalName().equals(\"bean\");\n    stringSet.add(reader.getLocalName());\n  for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n    String attributeName=reader.getAttributeLocalName(i);\n    stringSet.add(attributeName);\n    if (beanFlag && attributeName.equals(\"class\")) {\n      typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n    }\n else {\n      stringSet.add(reader.getAttributeValue(i));\n    }\n  }\nfor (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n  stringSet.add(reader.getNamespacePrefix(i));\n  stringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 348,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4297,
        "startLineNumber" : 35,
        "startColumnNumber" : 71,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashSet<String> stringSet=new HashSet<>();\n  HashSet<String> typeReferenceSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        boolean beanFlag=reader.getLocalName().equals(\"bean\");\n      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      String attributeName=reader.getAttributeLocalName(i);\n      stringSet.add(attributeName);\n      if (beanFlag && attributeName.equals(\"class\")) {\n        typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n      }\n else {\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nMap<String,Collection> typeReferenceIndex=indexes.getIndex(\"typeReferences\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\nfor (String ref : typeReferenceSet) {\nif ((ref != null) && !ref.isEmpty()) {\ntypeReferenceIndex.get(ref).add(entry);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 459,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4415,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public void index(API api,Container.Entry entry,Indexes indexes){\n  HashSet<String> stringSet=new HashSet<>();\n  HashSet<String> typeReferenceSet=new HashSet<>();\n  XMLStreamReader reader=null;\n  try {\n    reader=factory.createXMLStreamReader(entry.getInputStream());\n    stringSet.add(reader.getVersion());\n    stringSet.add(reader.getEncoding());\n    stringSet.add(reader.getCharacterEncodingScheme());\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        boolean beanFlag=reader.getLocalName().equals(\"bean\");\n      stringSet.add(reader.getLocalName());\n    for (int i=reader.getAttributeCount() - 1; i >= 0; i--) {\n      String attributeName=reader.getAttributeLocalName(i);\n      stringSet.add(attributeName);\n      if (beanFlag && attributeName.equals(\"class\")) {\n        typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n      }\n else {\n        stringSet.add(reader.getAttributeValue(i));\n      }\n    }\n  for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\n    stringSet.add(reader.getNamespacePrefix(i));\n    stringSet.add(reader.getNamespaceURI(i));\n  }\nbreak;\ncase XMLStreamConstants.PROCESSING_INSTRUCTION:stringSet.add(reader.getPITarget());\nstringSet.add(reader.getPIData());\nbreak;\ncase XMLStreamConstants.START_DOCUMENT:stringSet.add(reader.getVersion());\nstringSet.add(reader.getEncoding());\nstringSet.add(reader.getCharacterEncodingScheme());\nbreak;\ncase XMLStreamConstants.ENTITY_REFERENCE:stringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.ATTRIBUTE:stringSet.add(reader.getPrefix());\nstringSet.add(reader.getNamespaceURI());\nstringSet.add(reader.getLocalName());\nstringSet.add(reader.getText());\nbreak;\ncase XMLStreamConstants.COMMENT:case XMLStreamConstants.DTD:case XMLStreamConstants.CDATA:case XMLStreamConstants.CHARACTERS:stringSet.add(reader.getText().trim());\nbreak;\ncase XMLStreamConstants.NAMESPACE:for (int i=reader.getNamespaceCount() - 1; i >= 0; i--) {\nstringSet.add(reader.getNamespacePrefix(i));\nstringSet.add(reader.getNamespaceURI(i));\n}\nbreak;\n}\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n finally {\nif (reader != null) {\ntry {\nreader.close();\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n}\nMap<String,Collection> stringIndex=indexes.getIndex(\"strings\");\nMap<String,Collection> typeReferenceIndex=indexes.getIndex(\"typeReferences\");\nfor (String string : stringSet) {\nif ((string != null) && !string.isEmpty()) {\nstringIndex.get(string).add(entry);\n}\n}\nfor (String ref : typeReferenceSet) {\nif ((ref != null) && !ref.isEmpty()) {\ntypeReferenceIndex.get(ref).add(entry);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 482,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 60,
        "startColumnNumber" : 32,
        "endLineNumber" : 60,
        "endColumnNumber" : 100
      },
      "nodeContext" : "typeReferenceSet.add(reader.getAttributeValue(i).replace(\".\",\"/\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 60,
    "startColumnNumber" : 53,
    "endLineNumber" : 60,
    "endColumnNumber" : 98
  } ],
  "layoutRelationDataList" : [ ]
}