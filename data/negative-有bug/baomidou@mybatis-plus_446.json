{
  "id" : 446,
  "expression" : "t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-generate/src/main/java/com/baomidou/mybatisplus/generator/config/converts/MySqlTypeConvert.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 62,
      "startLineNumber" : 40,
      "startColumnNumber" : 19,
      "endLineNumber" : 40,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 13,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    },
    "tokenLength" : 11,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 62,
    "startLineNumber" : 40,
    "startColumnNumber" : 19,
    "endLineNumber" : 40,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}