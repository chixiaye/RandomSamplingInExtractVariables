{
  "id" : 431,
  "expression" : "!success",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/example/src/main/java/io/netty/example/dns/udp/DnsClient.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!success",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 100,
      "startColumnNumber" : 16,
      "endLineNumber" : 100,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!success) {\n  System.err.println(\"dns query timeout!\");\n  ch.close().sync();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1517,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Bootstrap b=new Bootstrap();\n  b.group(group).channel(NioDatagramChannel.class).handler(new ChannelInitializer<DatagramChannel>(){\n    @Override protected void initChannel(    DatagramChannel ch){\n      ChannelPipeline p=ch.pipeline();\n      p.addLast(new DatagramDnsQueryEncoder()).addLast(new DatagramDnsResponseDecoder()).addLast(new SimpleChannelInboundHandler<DatagramDnsResponse>(){\n        @Override protected void messageReceived(        ChannelHandlerContext ctx,        DatagramDnsResponse msg){\n          try {\n            handleQueryResp(msg);\n          }\n  finally {\n            ctx.close();\n          }\n        }\n      }\n);\n    }\n  }\n);\n  final Channel ch=b.bind(0).get();\n  DnsQuery query=new DatagramDnsQuery(null,addr,1).setRecord(DnsSection.QUESTION,new DefaultDnsQuestion(QUERY_DOMAIN,DnsRecordType.A));\n  ch.writeAndFlush(query).sync();\n  boolean success=ch.closeFuture().await(10,TimeUnit.SECONDS);\n  if (!success) {\n    System.err.println(\"dns query timeout!\");\n    ch.close().sync();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1583,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Bootstrap b=new Bootstrap();\n  b.group(group).channel(NioDatagramChannel.class).handler(new ChannelInitializer<DatagramChannel>(){\n    @Override protected void initChannel(    DatagramChannel ch){\n      ChannelPipeline p=ch.pipeline();\n      p.addLast(new DatagramDnsQueryEncoder()).addLast(new DatagramDnsResponseDecoder()).addLast(new SimpleChannelInboundHandler<DatagramDnsResponse>(){\n        @Override protected void messageReceived(        ChannelHandlerContext ctx,        DatagramDnsResponse msg){\n          try {\n            handleQueryResp(msg);\n          }\n  finally {\n            ctx.close();\n          }\n        }\n      }\n);\n    }\n  }\n);\n  final Channel ch=b.bind(0).get();\n  DnsQuery query=new DatagramDnsQuery(null,addr,1).setRecord(DnsSection.QUESTION,new DefaultDnsQuestion(QUERY_DOMAIN,DnsRecordType.A));\n  ch.writeAndFlush(query).sync();\n  boolean success=ch.closeFuture().await(10,TimeUnit.SECONDS);\n  if (!success) {\n    System.err.println(\"dns query timeout!\");\n    ch.close().sync();\n  }\n}\n  finally {\n  group.shutdownGracefully();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 172,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1780,
        "startLineNumber" : 69,
        "startColumnNumber" : 60,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InetSocketAddress addr=new InetSocketAddress(DNS_SERVER_HOST,DNS_SERVER_PORT);\n  EventLoopGroup group=new MultithreadEventLoopGroup(NioHandler.newFactory());\n  try {\n    Bootstrap b=new Bootstrap();\n    b.group(group).channel(NioDatagramChannel.class).handler(new ChannelInitializer<DatagramChannel>(){\n      @Override protected void initChannel(      DatagramChannel ch){\n        ChannelPipeline p=ch.pipeline();\n        p.addLast(new DatagramDnsQueryEncoder()).addLast(new DatagramDnsResponseDecoder()).addLast(new SimpleChannelInboundHandler<DatagramDnsResponse>(){\n          @Override protected void messageReceived(          ChannelHandlerContext ctx,          DatagramDnsResponse msg){\n            try {\n              handleQueryResp(msg);\n            }\n  finally {\n              ctx.close();\n            }\n          }\n        }\n);\n      }\n    }\n);\n    final Channel ch=b.bind(0).get();\n    DnsQuery query=new DatagramDnsQuery(null,addr,1).setRecord(DnsSection.QUESTION,new DefaultDnsQuestion(QUERY_DOMAIN,DnsRecordType.A));\n    ch.writeAndFlush(query).sync();\n    boolean success=ch.closeFuture().await(10,TimeUnit.SECONDS);\n    if (!success) {\n      System.err.println(\"dns query timeout!\");\n      ch.close().sync();\n    }\n  }\n  finally {\n    group.shutdownGracefully();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1836,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  InetSocketAddress addr=new InetSocketAddress(DNS_SERVER_HOST,DNS_SERVER_PORT);\n  EventLoopGroup group=new MultithreadEventLoopGroup(NioHandler.newFactory());\n  try {\n    Bootstrap b=new Bootstrap();\n    b.group(group).channel(NioDatagramChannel.class).handler(new ChannelInitializer<DatagramChannel>(){\n      @Override protected void initChannel(      DatagramChannel ch){\n        ChannelPipeline p=ch.pipeline();\n        p.addLast(new DatagramDnsQueryEncoder()).addLast(new DatagramDnsResponseDecoder()).addLast(new SimpleChannelInboundHandler<DatagramDnsResponse>(){\n          @Override protected void messageReceived(          ChannelHandlerContext ctx,          DatagramDnsResponse msg){\n            try {\n              handleQueryResp(msg);\n            }\n  finally {\n              ctx.close();\n            }\n          }\n        }\n);\n      }\n    }\n);\n    final Channel ch=b.bind(0).get();\n    DnsQuery query=new DatagramDnsQuery(null,addr,1).setRecord(DnsSection.QUESTION,new DefaultDnsQuestion(QUERY_DOMAIN,DnsRecordType.A));\n    ch.writeAndFlush(query).sync();\n    boolean success=ch.closeFuture().await(10,TimeUnit.SECONDS);\n    if (!success) {\n      System.err.println(\"dns query timeout!\");\n      ch.close().sync();\n    }\n  }\n  finally {\n    group.shutdownGracefully();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 207,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!success) {\n  System.err.println(\"dns query timeout!\");\n  ch.close().sync();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 100,
    "startColumnNumber" : 16,
    "endLineNumber" : 100,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}