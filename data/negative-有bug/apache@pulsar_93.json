{
  "id" : 93,
  "expression" : "Cleanup",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/client/api/TlsSniTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Cleanup",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 61,
      "startColumnNumber" : 9,
      "endLineNumber" : 61,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,modifiers]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 16
      },
      "nodeContext" : "@Cleanup",
      "nodeType" : "MarkerAnnotation",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 58
      },
      "nodeContext" : "@Cleanup PulsarClient pulsarClient=clientBuilder.build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1169,
        "startLineNumber" : 43,
        "startColumnNumber" : 67,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String topicName=\"persistent://my-property/use/my-ns/my-topic1\";\n  URI brokerServiceUrlTls=new URI(pulsar.getBrokerServiceUrlTls());\n  String brokerServiceIpAddressUrl=String.format(\"pulsar+ssl://%s:%d\",InetAddress.getByName(brokerServiceUrlTls.getHost()).getHostAddress(),brokerServiceUrlTls.getPort());\n  ClientBuilder clientBuilder=PulsarClient.builder().serviceUrl(brokerServiceIpAddressUrl).tlsTrustCertsFilePath(TLS_TRUST_CERT_FILE_PATH).allowTlsInsecureConnection(false).enableTlsHostnameVerification(false).operationTimeout(1000,TimeUnit.MILLISECONDS);\n  Map<String,String> authParams=new HashMap<>();\n  authParams.put(\"tlsCertFile\",TLS_CLIENT_CERT_FILE_PATH);\n  authParams.put(\"tlsKeyFile\",TLS_CLIENT_KEY_FILE_PATH);\n  clientBuilder.authentication(AuthenticationTls.class.getName(),authParams);\n  @Cleanup PulsarClient pulsarClient=clientBuilder.build();\n  pulsarClient.newProducer().topic(topicName).create();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1605,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Verify that using an IP-address in the broker service URL will work with using the SNI capabilities of the client. If we try to create an  {@link javax.net.ssl.SSLEngine} with a peer host that is anIP address, the peer host is ignored, see for example {@link io.netty.handler.ssl.ReferenceCountedOpenSslEngine}.\n */\n@Test public void testIpAddressInBrokerServiceUrl() throws Exception {\n  String topicName=\"persistent://my-property/use/my-ns/my-topic1\";\n  URI brokerServiceUrlTls=new URI(pulsar.getBrokerServiceUrlTls());\n  String brokerServiceIpAddressUrl=String.format(\"pulsar+ssl://%s:%d\",InetAddress.getByName(brokerServiceUrlTls.getHost()).getHostAddress(),brokerServiceUrlTls.getPort());\n  ClientBuilder clientBuilder=PulsarClient.builder().serviceUrl(brokerServiceIpAddressUrl).tlsTrustCertsFilePath(TLS_TRUST_CERT_FILE_PATH).allowTlsInsecureConnection(false).enableTlsHostnameVerification(false).operationTimeout(1000,TimeUnit.MILLISECONDS);\n  Map<String,String> authParams=new HashMap<>();\n  authParams.put(\"tlsCertFile\",TLS_CLIENT_CERT_FILE_PATH);\n  authParams.put(\"tlsKeyFile\",TLS_CLIENT_KEY_FILE_PATH);\n  clientBuilder.authentication(AuthenticationTls.class.getName(),authParams);\n  @Cleanup PulsarClient pulsarClient=clientBuilder.build();\n  pulsarClient.newProducer().topic(topicName).create();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,modifiers]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 16
      },
      "nodeContext" : "@Cleanup",
      "nodeType" : "MarkerAnnotation",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "Cleanup"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 61,
    "startColumnNumber" : 9,
    "endLineNumber" : 61,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}