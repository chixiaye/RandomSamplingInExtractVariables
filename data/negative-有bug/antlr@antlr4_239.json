{
  "id" : 239,
  "expression" : "_tokenStartCharIndex",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime/Java/src/org/antlr/v4/runtime/tree/xpath/XPathLexer.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "_tokenStartCharIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 129,
      "startColumnNumber" : 56,
      "endLineNumber" : 129,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 83
      },
      "nodeContext" : "new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 84
      },
      "nodeContext" : "throw new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 128,
        "startColumnNumber" : 10,
        "endLineNumber" : 130,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  throw new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 123,
        "startColumnNumber" : 5,
        "endLineNumber" : 130,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (isNameStartChar(_input.LA(1))) {\n  String id=matchID();\n  if (Character.isUpperCase(id.charAt(0)))   t=new CommonToken(TOKEN_REF,id);\n else   t=new CommonToken(RULE_REF,id);\n}\n else {\n  throw new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 929,
        "startLineNumber" : 97,
        "startColumnNumber" : 3,
        "endLineNumber" : 132,
        "endColumnNumber" : 4
      },
      "nodeContext" : "switch (_input.LA(1)) {\ncase '/':  consume();\nif (_input.LA(1) == '/') {\n  consume();\n  t=new CommonToken(ANYWHERE,\"//\");\n}\n else {\n  t=new CommonToken(ROOT,\"/\");\n}\nbreak;\ncase '*':consume();\nt=new CommonToken(WILDCARD,\"*\");\nbreak;\ncase '!':consume();\nt=new CommonToken(BANG,\"!\");\nbreak;\ncase '\\'':String s=matchString();\nt=new CommonToken(STRING,s);\nbreak;\ncase CharStream.EOF:return new CommonToken(EOF,\"<EOF>\");\ndefault:if (isNameStartChar(_input.LA(1))) {\nString id=matchID();\nif (Character.isUpperCase(id.charAt(0))) t=new CommonToken(TOKEN_REF,id);\n else t=new CommonToken(RULE_REF,id);\n}\n else {\nthrow new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 145,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 940,
        "startLineNumber" : 96,
        "startColumnNumber" : 20,
        "endLineNumber" : 133,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (_input.LA(1)) {\ncase '/':    consume();\n  if (_input.LA(1) == '/') {\n    consume();\n    t=new CommonToken(ANYWHERE,\"//\");\n  }\n else {\n    t=new CommonToken(ROOT,\"/\");\n  }\nbreak;\ncase '*':consume();\nt=new CommonToken(WILDCARD,\"*\");\nbreak;\ncase '!':consume();\nt=new CommonToken(BANG,\"!\");\nbreak;\ncase '\\'':String s=matchString();\nt=new CommonToken(STRING,s);\nbreak;\ncase CharStream.EOF:return new CommonToken(EOF,\"<EOF>\");\ndefault:if (isNameStartChar(_input.LA(1))) {\nString id=matchID();\nif (Character.isUpperCase(id.charAt(0))) t=new CommonToken(TOKEN_REF,id);\n else t=new CommonToken(RULE_REF,id);\n}\n else {\nthrow new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 133,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (t == null) {\nswitch (_input.LA(1)) {\ncase '/':    consume();\n  if (_input.LA(1) == '/') {\n    consume();\n    t=new CommonToken(ANYWHERE,\"//\");\n  }\n else {\n    t=new CommonToken(ROOT,\"/\");\n  }\nbreak;\ncase '*':consume();\nt=new CommonToken(WILDCARD,\"*\");\nbreak;\ncase '!':consume();\nt=new CommonToken(BANG,\"!\");\nbreak;\ncase '\\'':String s=matchString();\nt=new CommonToken(STRING,s);\nbreak;\ncase CharStream.EOF:return new CommonToken(EOF,\"<EOF>\");\ndefault:if (isNameStartChar(_input.LA(1))) {\nString id=matchID();\nif (Character.isUpperCase(id.charAt(0))) t=new CommonToken(TOKEN_REF,id);\n else t=new CommonToken(RULE_REF,id);\n}\n else {\nthrow new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 150,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1159,
        "startLineNumber" : 93,
        "startColumnNumber" : 26,
        "endLineNumber" : 138,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  _tokenStartCharIndex=_input.index();\n  CommonToken t=null;\n  while (t == null) {\nswitch (_input.LA(1)) {\ncase '/':      consume();\n    if (_input.LA(1) == '/') {\n      consume();\n      t=new CommonToken(ANYWHERE,\"//\");\n    }\n else {\n      t=new CommonToken(ROOT,\"/\");\n    }\n  break;\ncase '*':consume();\nt=new CommonToken(WILDCARD,\"*\");\nbreak;\ncase '!':consume();\nt=new CommonToken(BANG,\"!\");\nbreak;\ncase '\\'':String s=matchString();\nt=new CommonToken(STRING,s);\nbreak;\ncase CharStream.EOF:return new CommonToken(EOF,\"<EOF>\");\ndefault:if (isNameStartChar(_input.LA(1))) {\nString id=matchID();\nif (Character.isUpperCase(id.charAt(0))) t=new CommonToken(TOKEN_REF,id);\n else t=new CommonToken(RULE_REF,id);\n}\n else {\nthrow new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n}\nbreak;\n}\n}\nt.setStartIndex(_tokenStartCharIndex);\nt.setCharPositionInLine(_tokenStartCharIndex);\nt.setLine(line);\nreturn t;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1196,
        "startLineNumber" : 92,
        "startColumnNumber" : 1,
        "endLineNumber" : 138,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Token nextToken(){\n  _tokenStartCharIndex=_input.index();\n  CommonToken t=null;\n  while (t == null) {\nswitch (_input.LA(1)) {\ncase '/':      consume();\n    if (_input.LA(1) == '/') {\n      consume();\n      t=new CommonToken(ANYWHERE,\"//\");\n    }\n else {\n      t=new CommonToken(ROOT,\"/\");\n    }\n  break;\ncase '*':consume();\nt=new CommonToken(WILDCARD,\"*\");\nbreak;\ncase '!':consume();\nt=new CommonToken(BANG,\"!\");\nbreak;\ncase '\\'':String s=matchString();\nt=new CommonToken(STRING,s);\nbreak;\ncase CharStream.EOF:return new CommonToken(EOF,\"<EOF>\");\ndefault:if (isNameStartChar(_input.LA(1))) {\nString id=matchID();\nif (Character.isUpperCase(id.charAt(0))) t=new CommonToken(TOKEN_REF,id);\n else t=new CommonToken(RULE_REF,id);\n}\n else {\nthrow new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n}\nbreak;\n}\n}\nt.setStartIndex(_tokenStartCharIndex);\nt.setCharPositionInLine(_tokenStartCharIndex);\nt.setLine(line);\nreturn t;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 84
      },
      "nodeContext" : "throw new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "_tokenStartCharIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 134,
      "startColumnNumber" : 18,
      "endLineNumber" : 134,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 134,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 39
      },
      "nodeContext" : "t.setStartIndex(_tokenStartCharIndex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 134,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 40
      },
      "nodeContext" : "t.setStartIndex(_tokenStartCharIndex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1159,
        "startLineNumber" : 93,
        "startColumnNumber" : 26,
        "endLineNumber" : 138,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  _tokenStartCharIndex=_input.index();\n  CommonToken t=null;\n  while (t == null) {\nswitch (_input.LA(1)) {\ncase '/':      consume();\n    if (_input.LA(1) == '/') {\n      consume();\n      t=new CommonToken(ANYWHERE,\"//\");\n    }\n else {\n      t=new CommonToken(ROOT,\"/\");\n    }\n  break;\ncase '*':consume();\nt=new CommonToken(WILDCARD,\"*\");\nbreak;\ncase '!':consume();\nt=new CommonToken(BANG,\"!\");\nbreak;\ncase '\\'':String s=matchString();\nt=new CommonToken(STRING,s);\nbreak;\ncase CharStream.EOF:return new CommonToken(EOF,\"<EOF>\");\ndefault:if (isNameStartChar(_input.LA(1))) {\nString id=matchID();\nif (Character.isUpperCase(id.charAt(0))) t=new CommonToken(TOKEN_REF,id);\n else t=new CommonToken(RULE_REF,id);\n}\n else {\nthrow new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n}\nbreak;\n}\n}\nt.setStartIndex(_tokenStartCharIndex);\nt.setCharPositionInLine(_tokenStartCharIndex);\nt.setLine(line);\nreturn t;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1196,
        "startLineNumber" : 92,
        "startColumnNumber" : 1,
        "endLineNumber" : 138,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Token nextToken(){\n  _tokenStartCharIndex=_input.index();\n  CommonToken t=null;\n  while (t == null) {\nswitch (_input.LA(1)) {\ncase '/':      consume();\n    if (_input.LA(1) == '/') {\n      consume();\n      t=new CommonToken(ANYWHERE,\"//\");\n    }\n else {\n      t=new CommonToken(ROOT,\"/\");\n    }\n  break;\ncase '*':consume();\nt=new CommonToken(WILDCARD,\"*\");\nbreak;\ncase '!':consume();\nt=new CommonToken(BANG,\"!\");\nbreak;\ncase '\\'':String s=matchString();\nt=new CommonToken(STRING,s);\nbreak;\ncase CharStream.EOF:return new CommonToken(EOF,\"<EOF>\");\ndefault:if (isNameStartChar(_input.LA(1))) {\nString id=matchID();\nif (Character.isUpperCase(id.charAt(0))) t=new CommonToken(TOKEN_REF,id);\n else t=new CommonToken(RULE_REF,id);\n}\n else {\nthrow new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n}\nbreak;\n}\n}\nt.setStartIndex(_tokenStartCharIndex);\nt.setCharPositionInLine(_tokenStartCharIndex);\nt.setLine(line);\nreturn t;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 134,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 40
      },
      "nodeContext" : "t.setStartIndex(_tokenStartCharIndex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "_tokenStartCharIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 135,
      "startColumnNumber" : 26,
      "endLineNumber" : 135,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 135,
        "startColumnNumber" : 2,
        "endLineNumber" : 135,
        "endColumnNumber" : 47
      },
      "nodeContext" : "t.setCharPositionInLine(_tokenStartCharIndex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 135,
        "startColumnNumber" : 2,
        "endLineNumber" : 135,
        "endColumnNumber" : 48
      },
      "nodeContext" : "t.setCharPositionInLine(_tokenStartCharIndex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1159,
        "startLineNumber" : 93,
        "startColumnNumber" : 26,
        "endLineNumber" : 138,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  _tokenStartCharIndex=_input.index();\n  CommonToken t=null;\n  while (t == null) {\nswitch (_input.LA(1)) {\ncase '/':      consume();\n    if (_input.LA(1) == '/') {\n      consume();\n      t=new CommonToken(ANYWHERE,\"//\");\n    }\n else {\n      t=new CommonToken(ROOT,\"/\");\n    }\n  break;\ncase '*':consume();\nt=new CommonToken(WILDCARD,\"*\");\nbreak;\ncase '!':consume();\nt=new CommonToken(BANG,\"!\");\nbreak;\ncase '\\'':String s=matchString();\nt=new CommonToken(STRING,s);\nbreak;\ncase CharStream.EOF:return new CommonToken(EOF,\"<EOF>\");\ndefault:if (isNameStartChar(_input.LA(1))) {\nString id=matchID();\nif (Character.isUpperCase(id.charAt(0))) t=new CommonToken(TOKEN_REF,id);\n else t=new CommonToken(RULE_REF,id);\n}\n else {\nthrow new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n}\nbreak;\n}\n}\nt.setStartIndex(_tokenStartCharIndex);\nt.setCharPositionInLine(_tokenStartCharIndex);\nt.setLine(line);\nreturn t;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1196,
        "startLineNumber" : 92,
        "startColumnNumber" : 1,
        "endLineNumber" : 138,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Token nextToken(){\n  _tokenStartCharIndex=_input.index();\n  CommonToken t=null;\n  while (t == null) {\nswitch (_input.LA(1)) {\ncase '/':      consume();\n    if (_input.LA(1) == '/') {\n      consume();\n      t=new CommonToken(ANYWHERE,\"//\");\n    }\n else {\n      t=new CommonToken(ROOT,\"/\");\n    }\n  break;\ncase '*':consume();\nt=new CommonToken(WILDCARD,\"*\");\nbreak;\ncase '!':consume();\nt=new CommonToken(BANG,\"!\");\nbreak;\ncase '\\'':String s=matchString();\nt=new CommonToken(STRING,s);\nbreak;\ncase CharStream.EOF:return new CommonToken(EOF,\"<EOF>\");\ndefault:if (isNameStartChar(_input.LA(1))) {\nString id=matchID();\nif (Character.isUpperCase(id.charAt(0))) t=new CommonToken(TOKEN_REF,id);\n else t=new CommonToken(RULE_REF,id);\n}\n else {\nthrow new LexerNoViableAltException(this,_input,_tokenStartCharIndex,null);\n}\nbreak;\n}\n}\nt.setStartIndex(_tokenStartCharIndex);\nt.setCharPositionInLine(_tokenStartCharIndex);\nt.setLine(line);\nreturn t;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 135,
        "startColumnNumber" : 2,
        "endLineNumber" : 135,
        "endColumnNumber" : 48
      },
      "nodeContext" : "t.setCharPositionInLine(_tokenStartCharIndex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 129,
    "startColumnNumber" : 56,
    "endLineNumber" : 129,
    "endColumnNumber" : 76
  }, {
    "charLength" : 20,
    "startLineNumber" : 134,
    "startColumnNumber" : 18,
    "endLineNumber" : 134,
    "endColumnNumber" : 38
  }, {
    "charLength" : 20,
    "startLineNumber" : 135,
    "startColumnNumber" : 26,
    "endLineNumber" : 135,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}