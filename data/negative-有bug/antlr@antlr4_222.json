{
  "id" : 222,
  "expression" : "path.toString()",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime-testsuite/test/org/antlr/v4/test/runtime/javascript/BaseNodeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "path.toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 125,
      "startColumnNumber" : 43,
      "endLineNumber" : 125,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 125,
        "startColumnNumber" : 27,
        "endLineNumber" : 125,
        "endColumnNumber" : 59
      },
      "nodeContext" : "new PrintWriter(path.toString())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 125,
        "startColumnNumber" : 21,
        "endLineNumber" : 125,
        "endColumnNumber" : 59
      },
      "nodeContext" : "out=new PrintWriter(path.toString())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 125,
        "startColumnNumber" : 9,
        "endLineNumber" : 125,
        "endColumnNumber" : 59
      },
      "nodeContext" : "PrintWriter out=new PrintWriter(path.toString())",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (PrintWriter out=new PrintWriter(path.toString())){\n  out.println(newContent);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 292,
        "startLineNumber" : 122,
        "startColumnNumber" : 7,
        "endLineNumber" : 128,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  String content=new String(Files.readAllBytes(path),StandardCharsets.UTF_8);\n  String newContent=content.replaceAll(\"import antlr4 from 'antlr4';\",newImportAntlrString);\n  try (PrintWriter out=new PrintWriter(path.toString())){\n    out.println(newContent);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 122,
        "startColumnNumber" : 3,
        "endLineNumber" : 130,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  String content=new String(Files.readAllBytes(path),StandardCharsets.UTF_8);\n  String newContent=content.replaceAll(\"import antlr4 from 'antlr4';\",newImportAntlrString);\n  try (PrintWriter out=new PrintWriter(path.toString())){\n    out.println(newContent);\n  }\n }\n catch (IOException e) {\n  fail(\"File not found: \" + path);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 120,
        "startColumnNumber" : 28,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path path=Paths.get(getTempDirPath(),file);\n  try {\n    String content=new String(Files.readAllBytes(path),StandardCharsets.UTF_8);\n    String newContent=content.replaceAll(\"import antlr4 from 'antlr4';\",newImportAntlrString);\n    try (PrintWriter out=new PrintWriter(path.toString())){\n      out.println(newContent);\n    }\n   }\n catch (  IOException e) {\n    fail(\"File not found: \" + path);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 120,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (String file : files) {\n  Path path=Paths.get(getTempDirPath(),file);\n  try {\n    String content=new String(Files.readAllBytes(path),StandardCharsets.UTF_8);\n    String newContent=content.replaceAll(\"import antlr4 from 'antlr4';\",newImportAntlrString);\n    try (PrintWriter out=new PrintWriter(path.toString())){\n      out.println(newContent);\n    }\n   }\n catch (  IOException e) {\n    fail(\"File not found: \" + path);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1429,
        "startLineNumber" : 92,
        "startColumnNumber" : 98,
        "endLineNumber" : 134,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ErrorQueue equeue=antlrOnString(getTempDirPath(),\"JavaScript\",grammarFileName,grammarStr,defaultListener,extraOptions);\n  if (!equeue.errors.isEmpty()) {\n    return false;\n  }\n  List<String> files=new ArrayList<String>();\n  if (lexerName != null) {\n    files.add(lexerName + \".js\");\n  }\n  if (parserName != null) {\n    files.add(parserName + \".js\");\n    Set<String> optionsSet=new HashSet<String>(Arrays.asList(extraOptions));\n    if (!optionsSet.contains(\"-no-listener\")) {\n      files.add(grammarFileName.substring(0,grammarFileName.lastIndexOf('.')) + \"Listener.js\");\n    }\n    if (optionsSet.contains(\"-visitor\")) {\n      files.add(grammarFileName.substring(0,grammarFileName.lastIndexOf('.')) + \"Visitor.js\");\n    }\n  }\n  String newImportAntlrString=\"import antlr4 from 'file://\" + runtimeDir + \"/src/antlr4/index.js'\";\n  for (  String file : files) {\n    Path path=Paths.get(getTempDirPath(),file);\n    try {\n      String content=new String(Files.readAllBytes(path),StandardCharsets.UTF_8);\n      String newContent=content.replaceAll(\"import antlr4 from 'antlr4';\",newImportAntlrString);\n      try (PrintWriter out=new PrintWriter(path.toString())){\n        out.println(newContent);\n      }\n     }\n catch (    IOException e) {\n      fail(\"File not found: \" + path);\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 208,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1742,
        "startLineNumber" : 89,
        "startColumnNumber" : 1,
        "endLineNumber" : 134,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Return true if all is well \n */\nprotected boolean rawGenerateAndBuildRecognizer(String grammarFileName,String grammarStr,String parserName,String lexerName,boolean defaultListener,String... extraOptions){\n  ErrorQueue equeue=antlrOnString(getTempDirPath(),\"JavaScript\",grammarFileName,grammarStr,defaultListener,extraOptions);\n  if (!equeue.errors.isEmpty()) {\n    return false;\n  }\n  List<String> files=new ArrayList<String>();\n  if (lexerName != null) {\n    files.add(lexerName + \".js\");\n  }\n  if (parserName != null) {\n    files.add(parserName + \".js\");\n    Set<String> optionsSet=new HashSet<String>(Arrays.asList(extraOptions));\n    if (!optionsSet.contains(\"-no-listener\")) {\n      files.add(grammarFileName.substring(0,grammarFileName.lastIndexOf('.')) + \"Listener.js\");\n    }\n    if (optionsSet.contains(\"-visitor\")) {\n      files.add(grammarFileName.substring(0,grammarFileName.lastIndexOf('.')) + \"Visitor.js\");\n    }\n  }\n  String newImportAntlrString=\"import antlr4 from 'file://\" + runtimeDir + \"/src/antlr4/index.js'\";\n  for (  String file : files) {\n    Path path=Paths.get(getTempDirPath(),file);\n    try {\n      String content=new String(Files.readAllBytes(path),StandardCharsets.UTF_8);\n      String newContent=content.replaceAll(\"import antlr4 from 'antlr4';\",newImportAntlrString);\n      try (PrintWriter out=new PrintWriter(path.toString())){\n        out.println(newContent);\n      }\n     }\n catch (    IOException e) {\n      fail(\"File not found: \" + path);\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 125,
        "startColumnNumber" : 9,
        "endLineNumber" : 125,
        "endColumnNumber" : 59
      },
      "nodeContext" : "PrintWriter out=new PrintWriter(path.toString())",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 125,
    "startColumnNumber" : 43,
    "endLineNumber" : 125,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}