{
  "id" : 277,
  "expression" : "\"SELECT s._1, s._2, s._3 FROM S3Object s\"",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-hive/src/test/java/com/facebook/presto/hive/TestIonSqlQueryBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"SELECT s._1, s._2, s._3 FROM S3Object s\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 63,
      "startColumnNumber" : 21,
      "endLineNumber" : 63,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertEquals(\"SELECT s._1, s._2, s._3 FROM S3Object s\",queryBuilder.buildSql(columns,TupleDomain.all()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(\"SELECT s._1, s._2, s._3 FROM S3Object s\",queryBuilder.buildSql(columns,TupleDomain.all()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1130,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  IonSqlQueryBuilder queryBuilder=new IonSqlQueryBuilder(createTestFunctionAndTypeManager());\n  List<HiveColumnHandle> columns=ImmutableList.of(new HiveColumnHandle(\"n_nationkey\",HIVE_INT,parseTypeSignature(INTEGER),0,REGULAR,Optional.empty(),Optional.empty()),new HiveColumnHandle(\"n_name\",HIVE_STRING,parseTypeSignature(VARCHAR),1,REGULAR,Optional.empty(),Optional.empty()),new HiveColumnHandle(\"n_regionkey\",HIVE_INT,parseTypeSignature(INTEGER),2,REGULAR,Optional.empty(),Optional.empty()));\n  assertEquals(\"SELECT s._1, s._2, s._3 FROM S3Object s\",queryBuilder.buildSql(columns,TupleDomain.all()));\n  TupleDomain<HiveColumnHandle> tupleDomain=withColumnDomains(ImmutableMap.of(columns.get(2),Domain.create(SortedRangeSet.copyOf(BIGINT,ImmutableList.of(Range.equal(BIGINT,3L))),false)));\n  assertEquals(\"SELECT s._1, s._2, s._3 FROM S3Object s WHERE (case s._3 when '' then null else CAST(s._3 AS INT) end = 3)\",queryBuilder.buildSql(columns,tupleDomain));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBuildSQL(){\n  IonSqlQueryBuilder queryBuilder=new IonSqlQueryBuilder(createTestFunctionAndTypeManager());\n  List<HiveColumnHandle> columns=ImmutableList.of(new HiveColumnHandle(\"n_nationkey\",HIVE_INT,parseTypeSignature(INTEGER),0,REGULAR,Optional.empty(),Optional.empty()),new HiveColumnHandle(\"n_name\",HIVE_STRING,parseTypeSignature(VARCHAR),1,REGULAR,Optional.empty(),Optional.empty()),new HiveColumnHandle(\"n_regionkey\",HIVE_INT,parseTypeSignature(INTEGER),2,REGULAR,Optional.empty(),Optional.empty()));\n  assertEquals(\"SELECT s._1, s._2, s._3 FROM S3Object s\",queryBuilder.buildSql(columns,TupleDomain.all()));\n  TupleDomain<HiveColumnHandle> tupleDomain=withColumnDomains(ImmutableMap.of(columns.get(2),Domain.create(SortedRangeSet.copyOf(BIGINT,ImmutableList.of(Range.equal(BIGINT,3L))),false)));\n  assertEquals(\"SELECT s._1, s._2, s._3 FROM S3Object s WHERE (case s._3 when '' then null else CAST(s._3 AS INT) end = 3)\",queryBuilder.buildSql(columns,tupleDomain));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertEquals(\"SELECT s._1, s._2, s._3 FROM S3Object s\",queryBuilder.buildSql(columns,TupleDomain.all()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 10,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 63,
    "startColumnNumber" : 21,
    "endLineNumber" : 63,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}