{
  "id" : 252,
  "expression" : "mthDef",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/test/java/jadx/tests/integration/inline/TestOverrideBridgeMerge.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mthDef",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 39,
      "startColumnNumber" : 51,
      "endLineNumber" : 39,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertThat(cls).checkCodeAnnotationFor(\"apply(String str) {\",mthDef)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 11
      },
      "nodeContext" : "assertThat(cls).checkCodeAnnotationFor(\"apply(String str) {\",mthDef).code()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 41,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertThat(cls).checkCodeAnnotationFor(\"apply(String str) {\",mthDef).code().containsOne(\"@Override\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(cls).checkCodeAnnotationFor(\"apply(String str) {\",mthDef).code().containsOne(\"@Override\").containsOne(\"public Integer apply(String str) {\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertThat(cls).checkCodeAnnotationFor(\"apply(String str) {\",mthDef).code().containsOne(\"@Override\").containsOne(\"public Integer apply(String str) {\").doesNotContain(\"test(String str)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 40
      },
      "nodeContext" : "assertThat(cls).checkCodeAnnotationFor(\"apply(String str) {\",mthDef).code().containsOne(\"@Override\").containsOne(\"public Integer apply(String str) {\").doesNotContain(\"test(String str)\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 35,
        "startColumnNumber" : 25,
        "endLineNumber" : 44,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ClassNode cls=getClassNodeFromSmali();\n  ICodeAnnotation mthDef=new NodeDeclareRef(getMethod(cls,\"apply\"));\n  assertThat(cls).checkCodeAnnotationFor(\"apply(String str) {\",mthDef).code().containsOne(\"@Override\").containsOne(\"public Integer apply(String str) {\").doesNotContain(\"test(String str)\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 375,
        "startLineNumber" : 34,
        "startColumnNumber" : 1,
        "endLineNumber" : 44,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testSmali(){\n  ClassNode cls=getClassNodeFromSmali();\n  ICodeAnnotation mthDef=new NodeDeclareRef(getMethod(cls,\"apply\"));\n  assertThat(cls).checkCodeAnnotationFor(\"apply(String str) {\",mthDef).code().containsOne(\"@Override\").containsOne(\"public Integer apply(String str) {\").doesNotContain(\"test(String str)\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertThat(cls).checkCodeAnnotationFor(\"apply(String str) {\",mthDef)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "jadx.api.metadata.ICodeAnnotation"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 39,
    "startColumnNumber" : 51,
    "endLineNumber" : 39,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}