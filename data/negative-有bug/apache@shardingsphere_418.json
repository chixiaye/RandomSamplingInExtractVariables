{
  "id" : 418,
  "expression" : "expected",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/segment/type/TypeAssert.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 47,
      "startColumnNumber" : 67,
      "endLineNumber" : 47,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertNotNull(assertContext.getText(\"Type should exist.\"),expected)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertNotNull(assertContext.getText(\"Type should exist.\"),expected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 46,
        "startColumnNumber" : 129,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNotNull(assertContext.getText(\"Type should exist.\"),expected);\n  IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\");\n  if (null != expected.getOwner()) {\n    assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n    OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual owner should not exist.\"),actual.getOwner().isPresent());\n  }\n  SQLSegmentAssert.assertIs(assertContext,actual,expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert actual type segment is correct with expected type.\n * @param assertContext assert context\n * @param actual actual type segment\n * @param expected expected type\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final TypeSegment actual,final ExpectedType expected){\n  assertNotNull(assertContext.getText(\"Type should exist.\"),expected);\n  IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\");\n  if (null != expected.getOwner()) {\n    assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n    OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual owner should not exist.\"),actual.getOwner().isPresent());\n  }\n  SQLSegmentAssert.assertIs(assertContext,actual,expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertNotNull(assertContext.getText(\"Type should exist.\"),expected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.type.ExpectedType"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 48,
      "startColumnNumber" : 78,
      "endLineNumber" : 48,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 95
      },
      "nodeContext" : "IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 96
      },
      "nodeContext" : "IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 46,
        "startColumnNumber" : 129,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNotNull(assertContext.getText(\"Type should exist.\"),expected);\n  IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\");\n  if (null != expected.getOwner()) {\n    assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n    OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual owner should not exist.\"),actual.getOwner().isPresent());\n  }\n  SQLSegmentAssert.assertIs(assertContext,actual,expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert actual type segment is correct with expected type.\n * @param assertContext assert context\n * @param actual actual type segment\n * @param expected expected type\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final TypeSegment actual,final ExpectedType expected){\n  assertNotNull(assertContext.getText(\"Type should exist.\"),expected);\n  IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\");\n  if (null != expected.getOwner()) {\n    assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n    OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual owner should not exist.\"),actual.getOwner().isPresent());\n  }\n  SQLSegmentAssert.assertIs(assertContext,actual,expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 96
      },
      "nodeContext" : "IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.type.ExpectedType"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 49,
      "startColumnNumber" : 20,
      "endLineNumber" : 49,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 49,
        "startColumnNumber" : 20,
        "endLineNumber" : 49,
        "endColumnNumber" : 39
      },
      "nodeContext" : "expected.getOwner()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 39
      },
      "nodeContext" : "null != expected.getOwner()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != expected.getOwner()) {\n  assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n  OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n}\n else {\n  assertFalse(assertContext.getText(\"Actual owner should not exist.\"),actual.getOwner().isPresent());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 46,
        "startColumnNumber" : 129,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNotNull(assertContext.getText(\"Type should exist.\"),expected);\n  IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\");\n  if (null != expected.getOwner()) {\n    assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n    OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual owner should not exist.\"),actual.getOwner().isPresent());\n  }\n  SQLSegmentAssert.assertIs(assertContext,actual,expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert actual type segment is correct with expected type.\n * @param assertContext assert context\n * @param actual actual type segment\n * @param expected expected type\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final TypeSegment actual,final ExpectedType expected){\n  assertNotNull(assertContext.getText(\"Type should exist.\"),expected);\n  IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\");\n  if (null != expected.getOwner()) {\n    assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n    OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual owner should not exist.\"),actual.getOwner().isPresent());\n  }\n  SQLSegmentAssert.assertIs(assertContext,actual,expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 39
      },
      "nodeContext" : "null != expected.getOwner()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.type.ExpectedType"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 51,
      "startColumnNumber" : 73,
      "endLineNumber" : 51,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 51,
        "startColumnNumber" : 73,
        "endLineNumber" : 51,
        "endColumnNumber" : 92
      },
      "nodeContext" : "expected.getOwner()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 93
      },
      "nodeContext" : "OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 94
      },
      "nodeContext" : "OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 49,
        "startColumnNumber" : 41,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n  OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != expected.getOwner()) {\n  assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n  OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n}\n else {\n  assertFalse(assertContext.getText(\"Actual owner should not exist.\"),actual.getOwner().isPresent());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 46,
        "startColumnNumber" : 129,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNotNull(assertContext.getText(\"Type should exist.\"),expected);\n  IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\");\n  if (null != expected.getOwner()) {\n    assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n    OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual owner should not exist.\"),actual.getOwner().isPresent());\n  }\n  SQLSegmentAssert.assertIs(assertContext,actual,expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert actual type segment is correct with expected type.\n * @param assertContext assert context\n * @param actual actual type segment\n * @param expected expected type\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final TypeSegment actual,final ExpectedType expected){\n  assertNotNull(assertContext.getText(\"Type should exist.\"),expected);\n  IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\");\n  if (null != expected.getOwner()) {\n    assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n    OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual owner should not exist.\"),actual.getOwner().isPresent());\n  }\n  SQLSegmentAssert.assertIs(assertContext,actual,expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 94
      },
      "nodeContext" : "OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.type.ExpectedType"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 55,
      "startColumnNumber" : 57,
      "endLineNumber" : 55,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 66
      },
      "nodeContext" : "SQLSegmentAssert.assertIs(assertContext,actual,expected)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 67
      },
      "nodeContext" : "SQLSegmentAssert.assertIs(assertContext,actual,expected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 46,
        "startColumnNumber" : 129,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNotNull(assertContext.getText(\"Type should exist.\"),expected);\n  IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\");\n  if (null != expected.getOwner()) {\n    assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n    OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual owner should not exist.\"),actual.getOwner().isPresent());\n  }\n  SQLSegmentAssert.assertIs(assertContext,actual,expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert actual type segment is correct with expected type.\n * @param assertContext assert context\n * @param actual actual type segment\n * @param expected expected type\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final TypeSegment actual,final ExpectedType expected){\n  assertNotNull(assertContext.getText(\"Type should exist.\"),expected);\n  IdentifierValueAssert.assertIs(assertContext,actual.getIdentifier(),expected,\"Type\");\n  if (null != expected.getOwner()) {\n    assertTrue(assertContext.getText(\"Actual owner should exist.\"),actual.getOwner().isPresent());\n    OwnerAssert.assertIs(assertContext,actual.getOwner().get(),expected.getOwner());\n  }\n else {\n    assertFalse(assertContext.getText(\"Actual owner should not exist.\"),actual.getOwner().isPresent());\n  }\n  SQLSegmentAssert.assertIs(assertContext,actual,expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 67
      },
      "nodeContext" : "SQLSegmentAssert.assertIs(assertContext,actual,expected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.type.ExpectedType"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 47,
    "startColumnNumber" : 67,
    "endLineNumber" : 47,
    "endColumnNumber" : 75
  }, {
    "charLength" : 8,
    "startLineNumber" : 48,
    "startColumnNumber" : 78,
    "endLineNumber" : 48,
    "endColumnNumber" : 86
  }, {
    "charLength" : 8,
    "startLineNumber" : 49,
    "startColumnNumber" : 20,
    "endLineNumber" : 49,
    "endColumnNumber" : 28
  }, {
    "charLength" : 8,
    "startLineNumber" : 51,
    "startColumnNumber" : 73,
    "endLineNumber" : 51,
    "endColumnNumber" : 81
  }, {
    "charLength" : 8,
    "startLineNumber" : 55,
    "startColumnNumber" : 57,
    "endLineNumber" : 55,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}