{
  "id" : 331,
  "expression" : "ProcessorConstants.URI",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/PostProcessor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ProcessorConstants.URI",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 61,
      "startColumnNumber" : 35,
      "endLineNumber" : 61,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 61,
        "startColumnNumber" : 7,
        "endLineNumber" : 61,
        "endColumnNumber" : 58
      },
      "nodeContext" : "returnTypeString.startsWith(ProcessorConstants.URI)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 61,
        "startColumnNumber" : 3,
        "endLineNumber" : 74,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (returnTypeString.startsWith(ProcessorConstants.URI)) {\n  DeclaredType declaredReturnedType=(DeclaredType)returnType;\n  TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n  expectedClass=holder.refClass(typeParameter.toString());\n  generatedReturnType=holder.refClass(ProcessorConstants.URI);\n}\n else if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n  DeclaredType declaredReturnedType=(DeclaredType)returnType;\n  TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n  expectedClass=holder.refClass(typeParameter.toString());\n  generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n}\n else {\n  generatedReturnType=holder.refClass(returnTypeString);\n  expectedClass=generatedReturnType;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 853,
        "startLineNumber" : 60,
        "startColumnNumber" : 45,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (returnTypeString.startsWith(ProcessorConstants.URI)) {\n    DeclaredType declaredReturnedType=(DeclaredType)returnType;\n    TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n    expectedClass=holder.refClass(typeParameter.toString());\n    generatedReturnType=holder.refClass(ProcessorConstants.URI);\n  }\n else   if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n    DeclaredType declaredReturnedType=(DeclaredType)returnType;\n    TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n    expectedClass=holder.refClass(typeParameter.toString());\n    generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n  }\n else {\n    generatedReturnType=holder.refClass(returnTypeString);\n    expectedClass=generatedReturnType;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 896,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (returnType.getKind() != TypeKind.VOID) {\n  if (returnTypeString.startsWith(ProcessorConstants.URI)) {\n    DeclaredType declaredReturnedType=(DeclaredType)returnType;\n    TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n    expectedClass=holder.refClass(typeParameter.toString());\n    generatedReturnType=holder.refClass(ProcessorConstants.URI);\n  }\n else   if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n    DeclaredType declaredReturnedType=(DeclaredType)returnType;\n    TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n    expectedClass=holder.refClass(typeParameter.toString());\n    generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n  }\n else {\n    generatedReturnType=holder.refClass(returnTypeString);\n    expectedClass=generatedReturnType;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1529,
        "startLineNumber" : 49,
        "startColumnNumber" : 91,
        "endLineNumber" : 82,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  RestImplementationHolder holder=restImplementationsHolder.getEnclosingHolder(element);\n  ExecutableElement executableElement=(ExecutableElement)element;\n  TypeMirror returnType=executableElement.getReturnType();\n  JClass generatedReturnType=null;\n  String returnTypeString=returnType.toString();\n  JClass expectedClass=null;\n  if (returnType.getKind() != TypeKind.VOID) {\n    if (returnTypeString.startsWith(ProcessorConstants.URI)) {\n      DeclaredType declaredReturnedType=(DeclaredType)returnType;\n      TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n      expectedClass=holder.refClass(typeParameter.toString());\n      generatedReturnType=holder.refClass(ProcessorConstants.URI);\n    }\n else     if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n      DeclaredType declaredReturnedType=(DeclaredType)returnType;\n      TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n      expectedClass=holder.refClass(typeParameter.toString());\n      generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n    }\n else {\n      generatedReturnType=holder.refClass(returnTypeString);\n      expectedClass=generatedReturnType;\n    }\n  }\n  Post postAnnotation=element.getAnnotation(Post.class);\n  String urlSuffix=postAnnotation.value();\n  String url=holder.urlPrefix + urlSuffix;\n  generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement,url,expectedClass,generatedReturnType,codeModel));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1630,
        "startLineNumber" : 48,
        "startColumnNumber" : 1,
        "endLineNumber" : 82,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  RestImplementationHolder holder=restImplementationsHolder.getEnclosingHolder(element);\n  ExecutableElement executableElement=(ExecutableElement)element;\n  TypeMirror returnType=executableElement.getReturnType();\n  JClass generatedReturnType=null;\n  String returnTypeString=returnType.toString();\n  JClass expectedClass=null;\n  if (returnType.getKind() != TypeKind.VOID) {\n    if (returnTypeString.startsWith(ProcessorConstants.URI)) {\n      DeclaredType declaredReturnedType=(DeclaredType)returnType;\n      TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n      expectedClass=holder.refClass(typeParameter.toString());\n      generatedReturnType=holder.refClass(ProcessorConstants.URI);\n    }\n else     if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n      DeclaredType declaredReturnedType=(DeclaredType)returnType;\n      TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n      expectedClass=holder.refClass(typeParameter.toString());\n      generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n    }\n else {\n      generatedReturnType=holder.refClass(returnTypeString);\n      expectedClass=generatedReturnType;\n    }\n  }\n  Post postAnnotation=element.getAnnotation(Post.class);\n  String urlSuffix=postAnnotation.value();\n  String url=holder.urlPrefix + urlSuffix;\n  generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement,url,expectedClass,generatedReturnType,codeModel));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 61,
        "startColumnNumber" : 7,
        "endLineNumber" : 61,
        "endColumnNumber" : 58
      },
      "nodeContext" : "returnTypeString.startsWith(ProcessorConstants.URI)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "ProcessorConstants.URI",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 65,
      "startColumnNumber" : 42,
      "endLineNumber" : 65,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 65,
        "startColumnNumber" : 26,
        "endLineNumber" : 65,
        "endColumnNumber" : 65
      },
      "nodeContext" : "holder.refClass(ProcessorConstants.URI)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 65
      },
      "nodeContext" : "generatedReturnType=holder.refClass(ProcessorConstants.URI)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 66
      },
      "nodeContext" : "generatedReturnType=holder.refClass(ProcessorConstants.URI);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 61,
        "startColumnNumber" : 60,
        "endLineNumber" : 66,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  DeclaredType declaredReturnedType=(DeclaredType)returnType;\n  TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n  expectedClass=holder.refClass(typeParameter.toString());\n  generatedReturnType=holder.refClass(ProcessorConstants.URI);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 61,
        "startColumnNumber" : 3,
        "endLineNumber" : 74,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (returnTypeString.startsWith(ProcessorConstants.URI)) {\n  DeclaredType declaredReturnedType=(DeclaredType)returnType;\n  TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n  expectedClass=holder.refClass(typeParameter.toString());\n  generatedReturnType=holder.refClass(ProcessorConstants.URI);\n}\n else if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n  DeclaredType declaredReturnedType=(DeclaredType)returnType;\n  TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n  expectedClass=holder.refClass(typeParameter.toString());\n  generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n}\n else {\n  generatedReturnType=holder.refClass(returnTypeString);\n  expectedClass=generatedReturnType;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 853,
        "startLineNumber" : 60,
        "startColumnNumber" : 45,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (returnTypeString.startsWith(ProcessorConstants.URI)) {\n    DeclaredType declaredReturnedType=(DeclaredType)returnType;\n    TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n    expectedClass=holder.refClass(typeParameter.toString());\n    generatedReturnType=holder.refClass(ProcessorConstants.URI);\n  }\n else   if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n    DeclaredType declaredReturnedType=(DeclaredType)returnType;\n    TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n    expectedClass=holder.refClass(typeParameter.toString());\n    generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n  }\n else {\n    generatedReturnType=holder.refClass(returnTypeString);\n    expectedClass=generatedReturnType;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 896,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (returnType.getKind() != TypeKind.VOID) {\n  if (returnTypeString.startsWith(ProcessorConstants.URI)) {\n    DeclaredType declaredReturnedType=(DeclaredType)returnType;\n    TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n    expectedClass=holder.refClass(typeParameter.toString());\n    generatedReturnType=holder.refClass(ProcessorConstants.URI);\n  }\n else   if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n    DeclaredType declaredReturnedType=(DeclaredType)returnType;\n    TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n    expectedClass=holder.refClass(typeParameter.toString());\n    generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n  }\n else {\n    generatedReturnType=holder.refClass(returnTypeString);\n    expectedClass=generatedReturnType;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1529,
        "startLineNumber" : 49,
        "startColumnNumber" : 91,
        "endLineNumber" : 82,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  RestImplementationHolder holder=restImplementationsHolder.getEnclosingHolder(element);\n  ExecutableElement executableElement=(ExecutableElement)element;\n  TypeMirror returnType=executableElement.getReturnType();\n  JClass generatedReturnType=null;\n  String returnTypeString=returnType.toString();\n  JClass expectedClass=null;\n  if (returnType.getKind() != TypeKind.VOID) {\n    if (returnTypeString.startsWith(ProcessorConstants.URI)) {\n      DeclaredType declaredReturnedType=(DeclaredType)returnType;\n      TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n      expectedClass=holder.refClass(typeParameter.toString());\n      generatedReturnType=holder.refClass(ProcessorConstants.URI);\n    }\n else     if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n      DeclaredType declaredReturnedType=(DeclaredType)returnType;\n      TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n      expectedClass=holder.refClass(typeParameter.toString());\n      generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n    }\n else {\n      generatedReturnType=holder.refClass(returnTypeString);\n      expectedClass=generatedReturnType;\n    }\n  }\n  Post postAnnotation=element.getAnnotation(Post.class);\n  String urlSuffix=postAnnotation.value();\n  String url=holder.urlPrefix + urlSuffix;\n  generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement,url,expectedClass,generatedReturnType,codeModel));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1630,
        "startLineNumber" : 48,
        "startColumnNumber" : 1,
        "endLineNumber" : 82,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  RestImplementationHolder holder=restImplementationsHolder.getEnclosingHolder(element);\n  ExecutableElement executableElement=(ExecutableElement)element;\n  TypeMirror returnType=executableElement.getReturnType();\n  JClass generatedReturnType=null;\n  String returnTypeString=returnType.toString();\n  JClass expectedClass=null;\n  if (returnType.getKind() != TypeKind.VOID) {\n    if (returnTypeString.startsWith(ProcessorConstants.URI)) {\n      DeclaredType declaredReturnedType=(DeclaredType)returnType;\n      TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n      expectedClass=holder.refClass(typeParameter.toString());\n      generatedReturnType=holder.refClass(ProcessorConstants.URI);\n    }\n else     if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n      DeclaredType declaredReturnedType=(DeclaredType)returnType;\n      TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n      expectedClass=holder.refClass(typeParameter.toString());\n      generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n    }\n else {\n      generatedReturnType=holder.refClass(returnTypeString);\n      expectedClass=generatedReturnType;\n    }\n  }\n  Post postAnnotation=element.getAnnotation(Post.class);\n  String urlSuffix=postAnnotation.value();\n  String url=holder.urlPrefix + urlSuffix;\n  generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement,url,expectedClass,generatedReturnType,codeModel));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 66
      },
      "nodeContext" : "generatedReturnType=holder.refClass(ProcessorConstants.URI);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 61,
    "startColumnNumber" : 35,
    "endLineNumber" : 61,
    "endColumnNumber" : 57
  }, {
    "charLength" : 22,
    "startLineNumber" : 65,
    "startColumnNumber" : 42,
    "endLineNumber" : 65,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}