{
  "id" : 230,
  "expression" : "0",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/ghidra_scripts/FindFunctionsUsingTOCinPEFScript.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 58,
      "startColumnNumber" : 15,
      "endLineNumber" : 58,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 58,
        "startColumnNumber" : 11,
        "endLineNumber" : 58,
        "endColumnNumber" : 16
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 58,
        "startColumnNumber" : 7,
        "endLineNumber" : 58,
        "endColumnNumber" : 16
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 705,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < refs.getRowCount(); ++i) {\n  monitor.setMessage(\"Finding functions\");\n  if (monitor.isCancelled()) {\n    break;\n  }\n  Address refAddr=refs.getAddress(i);\n  listing.clearCodeUnits(refAddr,refAddr,false);\n  listing.createData(refAddr,new PointerDataType());\n  Address codeAddr=refAddr.subtract(addrSize);\n  listing.clearCodeUnits(codeAddr,codeAddr,false);\n  CreateDataCmd cmd=new CreateDataCmd(codeAddr,new PointerDataType());\n  cmd.applyTo(currentProgram);\n  currentProgram.flushEvents();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 86,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1545,
        "startLineNumber" : 35,
        "startColumnNumber" : 36,
        "endLineNumber" : 82,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  listing=currentProgram.getListing();\n  symbolTable=currentProgram.getSymbolTable();\n  Symbol toc=SymbolUtilities.getExpectedLabelOrFunctionSymbol(currentProgram,\".toc\",err -> Msg.error(this,err));\n  if (toc == null) {\n    return;\n  }\n  Address tocAddress=toc.getAddress();\n  monitor.setMessage(\"Finding references to .toc\");\n  FindReferencesTableModel refs=new FindReferencesTableModel(tocAddress,state.getTool(),currentProgram);\n  while (refs.isBusy()) {\n    if (monitor.isCancelled()) {\n      break;\n    }\n  }\n  for (int i=0; i < refs.getRowCount(); ++i) {\n    monitor.setMessage(\"Finding functions\");\n    if (monitor.isCancelled()) {\n      break;\n    }\n    Address refAddr=refs.getAddress(i);\n    listing.clearCodeUnits(refAddr,refAddr,false);\n    listing.createData(refAddr,new PointerDataType());\n    Address codeAddr=refAddr.subtract(addrSize);\n    listing.clearCodeUnits(codeAddr,codeAddr,false);\n    CreateDataCmd cmd=new CreateDataCmd(codeAddr,new PointerDataType());\n    cmd.applyTo(currentProgram);\n    currentProgram.flushEvents();\n  }\n  popup(\"Script complete.\\n\\nNote:  Auto analyzer may still be running.\\n\" + \"(Depending on the size of the binary, analysis may take a while...see Ghidra's progress bar.)\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 1,
        "endLineNumber" : 82,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void run() throws Exception {\n  listing=currentProgram.getListing();\n  symbolTable=currentProgram.getSymbolTable();\n  Symbol toc=SymbolUtilities.getExpectedLabelOrFunctionSymbol(currentProgram,\".toc\",err -> Msg.error(this,err));\n  if (toc == null) {\n    return;\n  }\n  Address tocAddress=toc.getAddress();\n  monitor.setMessage(\"Finding references to .toc\");\n  FindReferencesTableModel refs=new FindReferencesTableModel(tocAddress,state.getTool(),currentProgram);\n  while (refs.isBusy()) {\n    if (monitor.isCancelled()) {\n      break;\n    }\n  }\n  for (int i=0; i < refs.getRowCount(); ++i) {\n    monitor.setMessage(\"Finding functions\");\n    if (monitor.isCancelled()) {\n      break;\n    }\n    Address refAddr=refs.getAddress(i);\n    listing.clearCodeUnits(refAddr,refAddr,false);\n    listing.createData(refAddr,new PointerDataType());\n    Address codeAddr=refAddr.subtract(addrSize);\n    listing.clearCodeUnits(codeAddr,codeAddr,false);\n    CreateDataCmd cmd=new CreateDataCmd(codeAddr,new PointerDataType());\n    cmd.applyTo(currentProgram);\n    currentProgram.flushEvents();\n  }\n  popup(\"Script complete.\\n\\nNote:  Auto analyzer may still be running.\\n\" + \"(Depending on the size of the binary, analysis may take a while...see Ghidra's progress bar.)\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 58,
        "startColumnNumber" : 7,
        "endLineNumber" : 58,
        "endColumnNumber" : 16
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 58,
    "startColumnNumber" : 15,
    "endLineNumber" : 58,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}