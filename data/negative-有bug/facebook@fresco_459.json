{
  "id" : 459,
  "expression" : "\"Cannot copy two incompatible MemoryChunks\"",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/memory-types/simple/src/main/java/com/facebook/imagepipeline/memory/BufferMemoryChunk.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Cannot copy two incompatible MemoryChunks\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 155,
      "startColumnNumber" : 41,
      "endLineNumber" : 155,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 155,
        "startColumnNumber" : 12,
        "endLineNumber" : 155,
        "endColumnNumber" : 85
      },
      "nodeContext" : "new IllegalArgumentException(\"Cannot copy two incompatible MemoryChunks\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 155,
        "startColumnNumber" : 6,
        "endLineNumber" : 155,
        "endColumnNumber" : 86
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Cannot copy two incompatible MemoryChunks\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 154,
        "startColumnNumber" : 47,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Cannot copy two incompatible MemoryChunks\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!(other instanceof BufferMemoryChunk)) {\n  throw new IllegalArgumentException(\"Cannot copy two incompatible MemoryChunks\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 699,
        "startLineNumber" : 153,
        "startColumnNumber" : 89,
        "endLineNumber" : 168,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!(other instanceof BufferMemoryChunk)) {\n    throw new IllegalArgumentException(\"Cannot copy two incompatible MemoryChunks\");\n  }\n  Preconditions.checkState(!isClosed());\n  Preconditions.checkState(!other.isClosed());\n  MemoryChunkUtil.checkBounds(offset,other.getSize(),otherOffset,count,mSize);\n  mBuffer.position(offset);\n  other.getByteBuffer().position(otherOffset);\n  byte[] b=new byte[count];\n  mBuffer.get(b,0,count);\n  other.getByteBuffer().put(b,0,count);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 929,
        "startLineNumber" : 148,
        "startColumnNumber" : 2,
        "endLineNumber" : 168,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * This does actual copy. It should be called only when we hold locks on both this and other objects\n */\nprivate void doCopy(final int offset,final MemoryChunk other,final int otherOffset,final int count){\n  if (!(other instanceof BufferMemoryChunk)) {\n    throw new IllegalArgumentException(\"Cannot copy two incompatible MemoryChunks\");\n  }\n  Preconditions.checkState(!isClosed());\n  Preconditions.checkState(!other.isClosed());\n  MemoryChunkUtil.checkBounds(offset,other.getSize(),otherOffset,count,mSize);\n  mBuffer.position(offset);\n  other.getByteBuffer().position(otherOffset);\n  byte[] b=new byte[count];\n  mBuffer.get(b,0,count);\n  other.getByteBuffer().put(b,0,count);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 155,
        "startColumnNumber" : 6,
        "endLineNumber" : 155,
        "endColumnNumber" : 86
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Cannot copy two incompatible MemoryChunks\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 155,
    "startColumnNumber" : 41,
    "endLineNumber" : 155,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}