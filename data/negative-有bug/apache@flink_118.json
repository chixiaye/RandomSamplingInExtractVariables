{
  "id" : 118,
  "expression" : "new CheckpointedPosition(1234L,7566L)",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/FileSourceSplitStateTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new CheckpointedPosition(1234L,7566L)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 63,
      "startColumnNumber" : 21,
      "endLineNumber" : 63,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(new CheckpointedPosition(1234L,7566L),position.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertEquals(new CheckpointedPosition(1234L,7566L),position.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 54,
        "startColumnNumber" : 58,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final FileSourceSplit split=getTestSplit();\n  final FileSourceSplitState state=new FileSourceSplitState(split);\n  state.setPosition(1234L,7566L);\n  final Optional<CheckpointedPosition> position=state.toFileSourceSplit().getReaderPosition();\n  assertTrue(position.isPresent());\n  assertEquals(new CheckpointedPosition(1234L,7566L),position.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNewSplitTakesModifiedOffsetAndCount(){\n  final FileSourceSplit split=getTestSplit();\n  final FileSourceSplitState state=new FileSourceSplitState(split);\n  state.setPosition(1234L,7566L);\n  final Optional<CheckpointedPosition> position=state.toFileSourceSplit().getReaderPosition();\n  assertTrue(position.isPresent());\n  assertEquals(new CheckpointedPosition(1234L,7566L),position.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertEquals(new CheckpointedPosition(1234L,7566L),position.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "org.apache.flink.connector.file.src.util.CheckpointedPosition"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 63,
    "startColumnNumber" : 21,
    "endLineNumber" : 63,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}