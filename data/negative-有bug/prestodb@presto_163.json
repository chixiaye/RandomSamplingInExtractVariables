{
  "id" : 163,
  "expression" : "i < blocks.length",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/operator/RemoteProjectOperator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < blocks.length",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 109,
      "startColumnNumber" : 32,
      "endLineNumber" : 109,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 109,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0; i < blocks.length; i++) {\n  blocks[i]=result[i].get().getResult();\n  operatorContext.recordAdditionalCpu(MILLISECONDS.toNanos(result[i].get().getCpuTimeMs()));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 108,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (int i=0; i < blocks.length; i++) {\n    blocks[i]=result[i].get().getResult();\n    operatorContext.recordAdditionalCpu(MILLISECONDS.toNanos(result[i].get().getCpuTimeMs()));\n  }\n  output=new Page(blocks);\n  Arrays.fill(result,null);\n  return output;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 890,
        "startLineNumber" : 108,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  for (int i=0; i < blocks.length; i++) {\n    blocks[i]=result[i].get().getResult();\n    operatorContext.recordAdditionalCpu(MILLISECONDS.toNanos(result[i].get().getCpuTimeMs()));\n  }\n  output=new Page(blocks);\n  Arrays.fill(result,null);\n  return output;\n}\n catch (InterruptedException ie) {\n  currentThread().interrupt();\n  throw new RuntimeException(ie);\n}\ncatch (ExecutionException e) {\n  Throwable cause=e.getCause();\n  if (cause != null) {\n    throwIfUnchecked(cause);\n    throw new PrestoException(GENERIC_INTERNAL_ERROR,cause);\n  }\n  throw new PrestoException(GENERIC_INTERNAL_ERROR,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 108,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 105,
        "startColumnNumber" : 27,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Block[] blocks=new Block[result.length];\n  Page output;\n  try {\n    for (int i=0; i < blocks.length; i++) {\n      blocks[i]=result[i].get().getResult();\n      operatorContext.recordAdditionalCpu(MILLISECONDS.toNanos(result[i].get().getCpuTimeMs()));\n    }\n    output=new Page(blocks);\n    Arrays.fill(result,null);\n    return output;\n  }\n catch (  InterruptedException ie) {\n    currentThread().interrupt();\n    throw new RuntimeException(ie);\n  }\ncatch (  ExecutionException e) {\n    Throwable cause=e.getCause();\n    if (cause != null) {\n      throwIfUnchecked(cause);\n      throw new PrestoException(GENERIC_INTERNAL_ERROR,cause);\n    }\n    throw new PrestoException(GENERIC_INTERNAL_ERROR,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1013,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (resultReady()) {\n  Block[] blocks=new Block[result.length];\n  Page output;\n  try {\n    for (int i=0; i < blocks.length; i++) {\n      blocks[i]=result[i].get().getResult();\n      operatorContext.recordAdditionalCpu(MILLISECONDS.toNanos(result[i].get().getCpuTimeMs()));\n    }\n    output=new Page(blocks);\n    Arrays.fill(result,null);\n    return output;\n  }\n catch (  InterruptedException ie) {\n    currentThread().interrupt();\n    throw new RuntimeException(ie);\n  }\ncatch (  ExecutionException e) {\n    Throwable cause=e.getCause();\n    if (cause != null) {\n      throwIfUnchecked(cause);\n      throw new PrestoException(GENERIC_INTERNAL_ERROR,cause);\n    }\n    throw new PrestoException(GENERIC_INTERNAL_ERROR,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 132,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1050,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (resultReady()) {\n    Block[] blocks=new Block[result.length];\n    Page output;\n    try {\n      for (int i=0; i < blocks.length; i++) {\n        blocks[i]=result[i].get().getResult();\n        operatorContext.recordAdditionalCpu(MILLISECONDS.toNanos(result[i].get().getCpuTimeMs()));\n      }\n      output=new Page(blocks);\n      Arrays.fill(result,null);\n      return output;\n    }\n catch (    InterruptedException ie) {\n      currentThread().interrupt();\n      throw new RuntimeException(ie);\n    }\ncatch (    ExecutionException e) {\n      Throwable cause=e.getCause();\n      if (cause != null) {\n        throwIfUnchecked(cause);\n        throw new PrestoException(GENERIC_INTERNAL_ERROR,cause);\n      }\n      throw new PrestoException(GENERIC_INTERNAL_ERROR,e);\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1092,
        "startLineNumber" : 102,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Page getOutput(){\n  if (resultReady()) {\n    Block[] blocks=new Block[result.length];\n    Page output;\n    try {\n      for (int i=0; i < blocks.length; i++) {\n        blocks[i]=result[i].get().getResult();\n        operatorContext.recordAdditionalCpu(MILLISECONDS.toNanos(result[i].get().getCpuTimeMs()));\n      }\n      output=new Page(blocks);\n      Arrays.fill(result,null);\n      return output;\n    }\n catch (    InterruptedException ie) {\n      currentThread().interrupt();\n      throw new RuntimeException(ie);\n    }\ncatch (    ExecutionException e) {\n      Throwable cause=e.getCause();\n      if (cause != null) {\n        throwIfUnchecked(cause);\n        throw new PrestoException(GENERIC_INTERNAL_ERROR,cause);\n      }\n      throw new PrestoException(GENERIC_INTERNAL_ERROR,e);\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 109,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0; i < blocks.length; i++) {\n  blocks[i]=result[i].get().getResult();\n  operatorContext.recordAdditionalCpu(MILLISECONDS.toNanos(result[i].get().getCpuTimeMs()));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 109,
    "startColumnNumber" : 32,
    "endLineNumber" : 109,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}