{
  "id" : 125,
  "expression" : "\" 1 0 1 0 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 1 0\\n\"",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/test/src/com/google/zxing/qrcode/encoder/MatrixUtilTestCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" 1 0 1 0 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 1 0\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 236,
      "startColumnNumber" : 6,
      "endLineNumber" : 236,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 1166,
        "startLineNumber" : 225,
        "startColumnNumber" : 6,
        "endLineNumber" : 245,
        "endColumnNumber" : 52
      },
      "nodeContext" : "\" 1 1 1 1 1 1 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1\\n\" + \" 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1\\n\" + \" 1 0 1 1 1 0 1 0 0 0 0 1 0 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 1 1 1 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 1\\n\"+ \" 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1\\n\"+ \" 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0\\n\"+ \" 0 0 1 1 0 0 1 1 1 0 0 1 1 1 1 0 1 0 0 0 0\\n\"+ \" 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 1 0 1 1 1 0\\n\"+ \" 1 1 1 1 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 1 0\\n\"+ \" 1 0 1 0 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 1 0\\n\"+ \" 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 0 1 1 1 1 1\\n\"+ \" 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1\\n\"+ \" 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 1 0 1 1 0\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 0\\n\"+ \" 1 0 1 1 1 0 1 0 0 1 0 0 1 1 0 0 1 0 0 1 1\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1 1 1 0\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0\\n\"+ \" 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 0 0 1 0\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 22,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 1184,
        "startLineNumber" : 224,
        "startColumnNumber" : 11,
        "endLineNumber" : 245,
        "endColumnNumber" : 52
      },
      "nodeContext" : "expected=\" 1 1 1 1 1 1 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1\\n\" + \" 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1\\n\" + \" 1 0 1 1 1 0 1 0 0 0 0 1 0 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 1 1 1 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 1\\n\"+ \" 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1\\n\"+ \" 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0\\n\"+ \" 0 0 1 1 0 0 1 1 1 0 0 1 1 1 1 0 1 0 0 0 0\\n\"+ \" 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 1 0 1 1 1 0\\n\"+ \" 1 1 1 1 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 1 0\\n\"+ \" 1 0 1 0 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 1 0\\n\"+ \" 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 0 1 1 1 1 1\\n\"+ \" 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1\\n\"+ \" 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 1 0 1 1 0\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 0\\n\"+ \" 1 0 1 1 1 0 1 0 0 1 0 0 1 1 0 0 1 0 0 1 1\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1 1 1 0\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0\\n\"+ \" 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 0 0 1 0\\n\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 24,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1192,
        "startLineNumber" : 224,
        "startColumnNumber" : 4,
        "endLineNumber" : 245,
        "endColumnNumber" : 53
      },
      "nodeContext" : "String expected=\" 1 1 1 1 1 1 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1\\n\" + \" 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1\\n\" + \" 1 0 1 1 1 0 1 0 0 0 0 1 0 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 1 1 1 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 1\\n\"+ \" 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1\\n\"+ \" 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0\\n\"+ \" 0 0 1 1 0 0 1 1 1 0 0 1 1 1 1 0 1 0 0 0 0\\n\"+ \" 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 1 0 1 1 1 0\\n\"+ \" 1 1 1 1 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 1 0\\n\"+ \" 1 0 1 0 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 1 0\\n\"+ \" 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 0 1 1 1 1 1\\n\"+ \" 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1\\n\"+ \" 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 1 0 1 1 0\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 0\\n\"+ \" 1 0 1 1 1 0 1 0 0 1 0 0 1 1 0 0 1 0 0 1 1\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1 1 1 0\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0\\n\"+ \" 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 0 0 1 0\\n\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 222,
        "startColumnNumber" : 55,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expected=\" 1 1 1 1 1 1 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1\\n\" + \" 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1\\n\" + \" 1 0 1 1 1 0 1 0 0 0 0 1 0 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 1 1 1 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 1\\n\"+ \" 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1\\n\"+ \" 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0\\n\"+ \" 0 0 1 1 0 0 1 1 1 0 0 1 1 1 1 0 1 0 0 0 0\\n\"+ \" 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 1 0 1 1 1 0\\n\"+ \" 1 1 1 1 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 1 0\\n\"+ \" 1 0 1 0 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 1 0\\n\"+ \" 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 0 1 1 1 1 1\\n\"+ \" 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1\\n\"+ \" 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 1 0 1 1 0\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 0\\n\"+ \" 1 0 1 1 1 0 1 0 0 1 0 0 1 1 0 0 1 0 0 1 1\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1 1 1 0\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0\\n\"+ \" 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 0 0 1 0\\n\";\n  char[] bytes={32,65,205,69,41,220,46,128,236,42,159,74,221,244,169,239,150,138,70,237,85,224,96,74,219,61};\n  BitArray bits=new BitArray();\n  for (  char c : bytes) {\n    bits.appendBits(c,8);\n  }\n  ByteMatrix matrix=new ByteMatrix(21,21);\n  MatrixUtil.buildMatrix(bits,ErrorCorrectionLevel.H,1,3,matrix);\n  assertEquals(expected,matrix.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1889,
        "startLineNumber" : 221,
        "startColumnNumber" : 2,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuildMatrix() throws WriterException {\n  String expected=\" 1 1 1 1 1 1 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1\\n\" + \" 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1\\n\" + \" 1 0 1 1 1 0 1 0 0 0 0 1 0 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 1 1 1 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 1\\n\"+ \" 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1\\n\"+ \" 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0\\n\"+ \" 0 0 1 1 0 0 1 1 1 0 0 1 1 1 1 0 1 0 0 0 0\\n\"+ \" 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 1 0 1 1 1 0\\n\"+ \" 1 1 1 1 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 1 0\\n\"+ \" 1 0 1 0 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 1 0\\n\"+ \" 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 0 1 1 1 1 1\\n\"+ \" 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1\\n\"+ \" 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 1 0 1 1 0\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 0\\n\"+ \" 1 0 1 1 1 0 1 0 0 1 0 0 1 1 0 0 1 0 0 1 1\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1 1 1 0\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0\\n\"+ \" 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 0 0 1 0\\n\";\n  char[] bytes={32,65,205,69,41,220,46,128,236,42,159,74,221,244,169,239,150,138,70,237,85,224,96,74,219,61};\n  BitArray bits=new BitArray();\n  for (  char c : bytes) {\n    bits.appendBits(c,8);\n  }\n  ByteMatrix matrix=new ByteMatrix(21,21);\n  MatrixUtil.buildMatrix(bits,ErrorCorrectionLevel.H,1,3,matrix);\n  assertEquals(expected,matrix.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 1166,
        "startLineNumber" : 225,
        "startColumnNumber" : 6,
        "endLineNumber" : 245,
        "endColumnNumber" : 52
      },
      "nodeContext" : "\" 1 1 1 1 1 1 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1\\n\" + \" 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1\\n\" + \" 1 0 1 1 1 0 1 0 0 0 0 1 0 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 1 1 1 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 0 1 1 1 0 1\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 1\\n\"+ \" 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1\\n\"+ \" 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0\\n\"+ \" 0 0 1 1 0 0 1 1 1 0 0 1 1 1 1 0 1 0 0 0 0\\n\"+ \" 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 1 0 1 1 1 0\\n\"+ \" 1 1 1 1 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 1 0\\n\"+ \" 1 0 1 0 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 1 0\\n\"+ \" 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 0 1 1 1 1 1\\n\"+ \" 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1\\n\"+ \" 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 1 0 1 1 0\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 0\\n\"+ \" 1 0 1 1 1 0 1 0 0 1 0 0 1 1 0 0 1 0 0 1 1\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1 1 1 0\\n\"+ \" 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0\\n\"+ \" 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0\\n\"+ \" 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 0 0 1 0\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 22,
      "astHeight" : 2
    },
    "tokenLength" : 22,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 236,
    "startColumnNumber" : 6,
    "endLineNumber" : 236,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}