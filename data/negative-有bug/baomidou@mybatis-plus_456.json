{
  "id" : 456,
  "expression" : "params.entrySet()",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/mapper/Wrapper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "params.entrySet()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 348,
      "startColumnNumber" : 32,
      "endLineNumber" : 348,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 348,
        "startColumnNumber" : 32,
        "endLineNumber" : 348,
        "endColumnNumber" : 60
      },
      "nodeContext" : "params.entrySet().iterator()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 348,
        "startColumnNumber" : 21,
        "endLineNumber" : 348,
        "endColumnNumber" : 60
      },
      "nodeContext" : "iterator=params.entrySet().iterator()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 348,
        "startColumnNumber" : 12,
        "endLineNumber" : 348,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Iterator iterator=params.entrySet().iterator();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 347,
        "startColumnNumber" : 54,
        "endLineNumber" : 358,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Iterator iterator=params.entrySet().iterator();\n  while (iterator.hasNext()) {\n    Map.Entry<String,Object> entry=(Map.Entry<String,Object>)iterator.next();\n    Object value=entry.getValue();\n    if (StringUtils.checkValNotNull(value)) {\n      sql.WHERE(formatSql(String.format(\"%s = {0}\",entry.getKey()),entry.getValue()));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 499,
        "startLineNumber" : 347,
        "startColumnNumber" : 8,
        "endLineNumber" : 358,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (condition && MapUtils.isNotEmpty(params)) {\n  Iterator iterator=params.entrySet().iterator();\n  while (iterator.hasNext()) {\n    Map.Entry<String,Object> entry=(Map.Entry<String,Object>)iterator.next();\n    Object value=entry.getValue();\n    if (StringUtils.checkValNotNull(value)) {\n      sql.WHERE(formatSql(String.format(\"%s = {0}\",entry.getKey()),entry.getValue()));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 346,
        "startColumnNumber" : 75,
        "endLineNumber" : 360,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (condition && MapUtils.isNotEmpty(params)) {\n    Iterator iterator=params.entrySet().iterator();\n    while (iterator.hasNext()) {\n      Map.Entry<String,Object> entry=(Map.Entry<String,Object>)iterator.next();\n      Object value=entry.getValue();\n      if (StringUtils.checkValNotNull(value)) {\n        sql.WHERE(formatSql(String.format(\"%s = {0}\",entry.getKey()),entry.getValue()));\n      }\n    }\n  }\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 801,
        "startLineNumber" : 336,
        "startColumnNumber" : 4,
        "endLineNumber" : 360,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 等同于SQL的\"field=value\"表达式 </p>\n * @param condition 拼接的前置条件\n * @param params\n * @return\n */\n@SuppressWarnings({\"rawtypes\",\"unchecked\"}) public Wrapper<T> allEq(boolean condition,Map<String,Object> params){\n  if (condition && MapUtils.isNotEmpty(params)) {\n    Iterator iterator=params.entrySet().iterator();\n    while (iterator.hasNext()) {\n      Map.Entry<String,Object> entry=(Map.Entry<String,Object>)iterator.next();\n      Object value=entry.getValue();\n      if (StringUtils.checkValNotNull(value)) {\n        sql.WHERE(formatSql(String.format(\"%s = {0}\",entry.getKey()),entry.getValue()));\n      }\n    }\n  }\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 348,
        "startColumnNumber" : 12,
        "endLineNumber" : 348,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Iterator iterator=params.entrySet().iterator();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.Set<java.util.Map.Entry<java.lang.String,java.lang.Object>>"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 348,
    "startColumnNumber" : 32,
    "endLineNumber" : 348,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}