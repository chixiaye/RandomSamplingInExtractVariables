{
  "id" : 84,
  "expression" : "extractorOutput.track(idGenerator.getTrackId(),C.TRACK_TYPE_TEXT)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/main/java/com/google/android/exoplayer2/extractor/ts/SeiReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "extractorOutput.track(idGenerator.getTrackId(),C.TRACK_TYPE_TEXT)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 66,
      "startLineNumber" : 45,
      "startColumnNumber" : 27,
      "endLineNumber" : 45,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 45,
        "startColumnNumber" : 18,
        "endLineNumber" : 45,
        "endColumnNumber" : 93
      },
      "nodeContext" : "output=extractorOutput.track(idGenerator.getTrackId(),C.TRACK_TYPE_TEXT)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 94
      },
      "nodeContext" : "TrackOutput output=extractorOutput.track(idGenerator.getTrackId(),C.TRACK_TYPE_TEXT);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1050,
        "startLineNumber" : 43,
        "startColumnNumber" : 45,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  idGenerator.generateNewId();\n  TrackOutput output=extractorOutput.track(idGenerator.getTrackId(),C.TRACK_TYPE_TEXT);\n  Format channelFormat=closedCaptionFormats.get(i);\n  @Nullable String channelMimeType=channelFormat.sampleMimeType;\n  Assertions.checkArgument(MimeTypes.APPLICATION_CEA608.equals(channelMimeType) || MimeTypes.APPLICATION_CEA708.equals(channelMimeType),\"Invalid closed caption mime type provided: \" + channelMimeType);\n  String formatId=channelFormat.id != null ? channelFormat.id : idGenerator.getFormatId();\n  output.format(new Format.Builder().setId(formatId).setSampleMimeType(channelMimeType).setSelectionFlags(channelFormat.selectionFlags).setLanguage(channelFormat.language).setAccessibilityChannel(channelFormat.accessibilityChannel).setInitializationData(channelFormat.initializationData).build());\n  outputs[i]=output;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < outputs.length; i++) {\n  idGenerator.generateNewId();\n  TrackOutput output=extractorOutput.track(idGenerator.getTrackId(),C.TRACK_TYPE_TEXT);\n  Format channelFormat=closedCaptionFormats.get(i);\n  @Nullable String channelMimeType=channelFormat.sampleMimeType;\n  Assertions.checkArgument(MimeTypes.APPLICATION_CEA608.equals(channelMimeType) || MimeTypes.APPLICATION_CEA708.equals(channelMimeType),\"Invalid closed caption mime type provided: \" + channelMimeType);\n  String formatId=channelFormat.id != null ? channelFormat.id : idGenerator.getFormatId();\n  output.format(new Format.Builder().setId(formatId).setSampleMimeType(channelMimeType).setSelectionFlags(channelFormat.selectionFlags).setLanguage(channelFormat.language).setAccessibilityChannel(channelFormat.accessibilityChannel).setInitializationData(channelFormat.initializationData).build());\n  outputs[i]=output;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 131,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 42,
        "startColumnNumber" : 90,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < outputs.length; i++) {\n    idGenerator.generateNewId();\n    TrackOutput output=extractorOutput.track(idGenerator.getTrackId(),C.TRACK_TYPE_TEXT);\n    Format channelFormat=closedCaptionFormats.get(i);\n    @Nullable String channelMimeType=channelFormat.sampleMimeType;\n    Assertions.checkArgument(MimeTypes.APPLICATION_CEA608.equals(channelMimeType) || MimeTypes.APPLICATION_CEA708.equals(channelMimeType),\"Invalid closed caption mime type provided: \" + channelMimeType);\n    String formatId=channelFormat.id != null ? channelFormat.id : idGenerator.getFormatId();\n    output.format(new Format.Builder().setId(formatId).setSampleMimeType(channelMimeType).setSelectionFlags(channelFormat.selectionFlags).setLanguage(channelFormat.language).setAccessibilityChannel(channelFormat.accessibilityChannel).setInitializationData(channelFormat.initializationData).build());\n    outputs[i]=output;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1189,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void createTracks(ExtractorOutput extractorOutput,TrackIdGenerator idGenerator){\n  for (int i=0; i < outputs.length; i++) {\n    idGenerator.generateNewId();\n    TrackOutput output=extractorOutput.track(idGenerator.getTrackId(),C.TRACK_TYPE_TEXT);\n    Format channelFormat=closedCaptionFormats.get(i);\n    @Nullable String channelMimeType=channelFormat.sampleMimeType;\n    Assertions.checkArgument(MimeTypes.APPLICATION_CEA608.equals(channelMimeType) || MimeTypes.APPLICATION_CEA708.equals(channelMimeType),\"Invalid closed caption mime type provided: \" + channelMimeType);\n    String formatId=channelFormat.id != null ? channelFormat.id : idGenerator.getFormatId();\n    output.format(new Format.Builder().setId(formatId).setSampleMimeType(channelMimeType).setSelectionFlags(channelFormat.selectionFlags).setLanguage(channelFormat.language).setAccessibilityChannel(channelFormat.accessibilityChannel).setInitializationData(channelFormat.initializationData).build());\n    outputs[i]=output;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 94
      },
      "nodeContext" : "TrackOutput output=extractorOutput.track(idGenerator.getTrackId(),C.TRACK_TYPE_TEXT);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 8,
    "type" : "com.google.android.exoplayer2.extractor.TrackOutput"
  } ],
  "positionList" : [ {
    "charLength" : 66,
    "startLineNumber" : 45,
    "startColumnNumber" : 27,
    "endLineNumber" : 45,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}