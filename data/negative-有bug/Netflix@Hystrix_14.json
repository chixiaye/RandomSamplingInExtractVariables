{
  "id" : 14,
  "expression" : "30",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/util/HystrixRollingPercentileTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "30",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 317,
      "startColumnNumber" : 58,
      "endLineNumber" : 317,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 317,
        "startColumnNumber" : 31,
        "endLineNumber" : 317,
        "endColumnNumber" : 69
      },
      "nodeContext" : "getPercentileForValues(10,30,20,40)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 317,
        "startColumnNumber" : 27,
        "endLineNumber" : 317,
        "endColumnNumber" : 69
      },
      "nodeContext" : "p=getPercentileForValues(10,30,20,40)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 317,
        "startColumnNumber" : 8,
        "endLineNumber" : 317,
        "endColumnNumber" : 70
      },
      "nodeContext" : "PercentileSnapshot p=getPercentileForValues(10,30,20,40);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 316,
        "startColumnNumber" : 54,
        "endLineNumber" : 326,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PercentileSnapshot p=getPercentileForValues(10,30,20,40);\n  Assert.assertEquals(22,p.getPercentile(30),1.0e-5);\n  Assert.assertEquals(20,p.getPercentile(25),1.0e-5);\n  Assert.assertEquals(40,p.getPercentile(75),1.0e-5);\n  Assert.assertEquals(30,p.getPercentile(50),1.0e-5);\n  Assert.assertEquals(10,p.getPercentile(-1));\n  Assert.assertEquals(40,p.getPercentile(101));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 315,
        "startColumnNumber" : 4,
        "endLineNumber" : 326,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPercentileAlgorithm_Percentiles(){\n  PercentileSnapshot p=getPercentileForValues(10,30,20,40);\n  Assert.assertEquals(22,p.getPercentile(30),1.0e-5);\n  Assert.assertEquals(20,p.getPercentile(25),1.0e-5);\n  Assert.assertEquals(40,p.getPercentile(75),1.0e-5);\n  Assert.assertEquals(30,p.getPercentile(50),1.0e-5);\n  Assert.assertEquals(10,p.getPercentile(-1));\n  Assert.assertEquals(40,p.getPercentile(101));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 317,
        "startColumnNumber" : 8,
        "endLineNumber" : 317,
        "endColumnNumber" : 70
      },
      "nodeContext" : "PercentileSnapshot p=getPercentileForValues(10,30,20,40);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "30",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 318,
      "startColumnNumber" : 48,
      "endLineNumber" : 318,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 318,
        "startColumnNumber" : 32,
        "endLineNumber" : 318,
        "endColumnNumber" : 51
      },
      "nodeContext" : "p.getPercentile(30)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 318,
        "startColumnNumber" : 8,
        "endLineNumber" : 318,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Assert.assertEquals(22,p.getPercentile(30),1.0e-5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 318,
        "startColumnNumber" : 8,
        "endLineNumber" : 318,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assert.assertEquals(22,p.getPercentile(30),1.0e-5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 316,
        "startColumnNumber" : 54,
        "endLineNumber" : 326,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PercentileSnapshot p=getPercentileForValues(10,30,20,40);\n  Assert.assertEquals(22,p.getPercentile(30),1.0e-5);\n  Assert.assertEquals(20,p.getPercentile(25),1.0e-5);\n  Assert.assertEquals(40,p.getPercentile(75),1.0e-5);\n  Assert.assertEquals(30,p.getPercentile(50),1.0e-5);\n  Assert.assertEquals(10,p.getPercentile(-1));\n  Assert.assertEquals(40,p.getPercentile(101));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 315,
        "startColumnNumber" : 4,
        "endLineNumber" : 326,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPercentileAlgorithm_Percentiles(){\n  PercentileSnapshot p=getPercentileForValues(10,30,20,40);\n  Assert.assertEquals(22,p.getPercentile(30),1.0e-5);\n  Assert.assertEquals(20,p.getPercentile(25),1.0e-5);\n  Assert.assertEquals(40,p.getPercentile(75),1.0e-5);\n  Assert.assertEquals(30,p.getPercentile(50),1.0e-5);\n  Assert.assertEquals(10,p.getPercentile(-1));\n  Assert.assertEquals(40,p.getPercentile(101));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 318,
        "startColumnNumber" : 8,
        "endLineNumber" : 318,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assert.assertEquals(22,p.getPercentile(30),1.0e-5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "30",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 321,
      "startColumnNumber" : 28,
      "endLineNumber" : 321,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 321,
        "startColumnNumber" : 8,
        "endLineNumber" : 321,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Assert.assertEquals(30,p.getPercentile(50),1.0e-5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 321,
        "startColumnNumber" : 8,
        "endLineNumber" : 321,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assert.assertEquals(30,p.getPercentile(50),1.0e-5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 316,
        "startColumnNumber" : 54,
        "endLineNumber" : 326,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PercentileSnapshot p=getPercentileForValues(10,30,20,40);\n  Assert.assertEquals(22,p.getPercentile(30),1.0e-5);\n  Assert.assertEquals(20,p.getPercentile(25),1.0e-5);\n  Assert.assertEquals(40,p.getPercentile(75),1.0e-5);\n  Assert.assertEquals(30,p.getPercentile(50),1.0e-5);\n  Assert.assertEquals(10,p.getPercentile(-1));\n  Assert.assertEquals(40,p.getPercentile(101));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 315,
        "startColumnNumber" : 4,
        "endLineNumber" : 326,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPercentileAlgorithm_Percentiles(){\n  PercentileSnapshot p=getPercentileForValues(10,30,20,40);\n  Assert.assertEquals(22,p.getPercentile(30),1.0e-5);\n  Assert.assertEquals(20,p.getPercentile(25),1.0e-5);\n  Assert.assertEquals(40,p.getPercentile(75),1.0e-5);\n  Assert.assertEquals(30,p.getPercentile(50),1.0e-5);\n  Assert.assertEquals(10,p.getPercentile(-1));\n  Assert.assertEquals(40,p.getPercentile(101));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 321,
        "startColumnNumber" : 8,
        "endLineNumber" : 321,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assert.assertEquals(30,p.getPercentile(50),1.0e-5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 317,
    "startColumnNumber" : 58,
    "endLineNumber" : 317,
    "endColumnNumber" : 60
  }, {
    "charLength" : 2,
    "startLineNumber" : 318,
    "startColumnNumber" : 48,
    "endLineNumber" : 318,
    "endColumnNumber" : 50
  }, {
    "charLength" : 2,
    "startLineNumber" : 321,
    "startColumnNumber" : 28,
    "endLineNumber" : 321,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}