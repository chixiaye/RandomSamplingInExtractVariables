{
  "id" : 212,
  "expression" : "z == z.getRight()",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/datastructures/fibonacciheap/FibonacciHeap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "z == z.getRight()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 228,
      "startColumnNumber" : 8,
      "endLineNumber" : 228,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (z == z.getRight()) {\n  minimumNode=null;\n}\n else {\n  minimumNode=z.getRight();\n  consolidate();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1025,
        "startLineNumber" : 196,
        "startColumnNumber" : 18,
        "endLineNumber" : 245,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (isEmpty()) {\n    return null;\n  }\n  FibonacciHeapNode<E> z=minimumNode;\n  int numOfKids=z.getDegree();\n  FibonacciHeapNode<E> x=z.getChild();\n  FibonacciHeapNode<E> tempRight;\n  while (numOfKids > 0) {\n    tempRight=x.getRight();\n    moveToRoot(x);\n    x.setParent(null);\n    x=tempRight;\n    numOfKids--;\n  }\n  z.getLeft().setRight(z.getRight());\n  z.getRight().setLeft(z.getLeft());\n  if (z == z.getRight()) {\n    minimumNode=null;\n  }\n else {\n    minimumNode=z.getRight();\n    consolidate();\n  }\n  size--;\n  E minimum=z.getElement();\n  elementsIndex.remove(minimum);\n  return minimum;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1041,
        "startLineNumber" : 196,
        "startColumnNumber" : 2,
        "endLineNumber" : 245,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public E poll(){\n  if (isEmpty()) {\n    return null;\n  }\n  FibonacciHeapNode<E> z=minimumNode;\n  int numOfKids=z.getDegree();\n  FibonacciHeapNode<E> x=z.getChild();\n  FibonacciHeapNode<E> tempRight;\n  while (numOfKids > 0) {\n    tempRight=x.getRight();\n    moveToRoot(x);\n    x.setParent(null);\n    x=tempRight;\n    numOfKids--;\n  }\n  z.getLeft().setRight(z.getRight());\n  z.getRight().setLeft(z.getLeft());\n  if (z == z.getRight()) {\n    minimumNode=null;\n  }\n else {\n    minimumNode=z.getRight();\n    consolidate();\n  }\n  size--;\n  E minimum=z.getElement();\n  elementsIndex.remove(minimum);\n  return minimum;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (z == z.getRight()) {\n  minimumNode=null;\n}\n else {\n  minimumNode=z.getRight();\n  consolidate();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 228,
    "startColumnNumber" : 8,
    "endLineNumber" : 228,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}