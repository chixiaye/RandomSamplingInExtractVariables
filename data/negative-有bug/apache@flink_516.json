{
  "id" : 516,
  "expression" : "actual.getAddress()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/test/java/org/apache/flink/runtime/scheduler/exceptionhistory/ArchivedTaskManagerLocationMatcher.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "actual.getAddress()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 63,
      "startColumnNumber" : 28,
      "endLineNumber" : 63,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 63,
        "startColumnNumber" : 13,
        "endLineNumber" : 63,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Objects.equals(actual.getAddress(),expectedLocation.getAddress())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 79
      },
      "nodeContext" : "!Objects.equals(actual.getAddress(),expectedLocation.getAddress())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!Objects.equals(actual.getAddress(),expectedLocation.getAddress())) {\n  description.appendText(\" address=\").appendText(actual.getAddress());\n  match=false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 55,
        "startColumnNumber" : 97,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (actual == null) {\n    return expectedLocation == null;\n  }\n else   if (expectedLocation == null) {\n    return false;\n  }\n  boolean match=true;\n  if (!Objects.equals(actual.getAddress(),expectedLocation.getAddress())) {\n    description.appendText(\" address=\").appendText(actual.getAddress());\n    match=false;\n  }\n  if (!Objects.equals(actual.getFQDNHostname(),expectedLocation.getFQDNHostname())) {\n    description.appendText(\" FQDNHostname=\").appendText(actual.getFQDNHostname());\n    match=false;\n  }\n  if (!Objects.equals(actual.getHostname(),expectedLocation.getHostname())) {\n    description.appendText(\" hostname=\").appendText(actual.getHostname());\n    match=false;\n  }\n  if (!Objects.equals(actual.getResourceID(),expectedLocation.getResourceID())) {\n    description.appendText(\" resourceID=\").appendText(actual.getResourceID().toString());\n    match=false;\n  }\n  if (!Objects.equals(actual.getPort(),expectedLocation.getPort())) {\n    description.appendText(\" port=\").appendText(String.valueOf(actual.getPort()));\n    match=false;\n  }\n  return match;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected boolean matchesSafely(ArchivedTaskManagerLocation actual,Description description){\n  if (actual == null) {\n    return expectedLocation == null;\n  }\n else   if (expectedLocation == null) {\n    return false;\n  }\n  boolean match=true;\n  if (!Objects.equals(actual.getAddress(),expectedLocation.getAddress())) {\n    description.appendText(\" address=\").appendText(actual.getAddress());\n    match=false;\n  }\n  if (!Objects.equals(actual.getFQDNHostname(),expectedLocation.getFQDNHostname())) {\n    description.appendText(\" FQDNHostname=\").appendText(actual.getFQDNHostname());\n    match=false;\n  }\n  if (!Objects.equals(actual.getHostname(),expectedLocation.getHostname())) {\n    description.appendText(\" hostname=\").appendText(actual.getHostname());\n    match=false;\n  }\n  if (!Objects.equals(actual.getResourceID(),expectedLocation.getResourceID())) {\n    description.appendText(\" resourceID=\").appendText(actual.getResourceID().toString());\n    match=false;\n  }\n  if (!Objects.equals(actual.getPort(),expectedLocation.getPort())) {\n    description.appendText(\" port=\").appendText(String.valueOf(actual.getPort()));\n    match=false;\n  }\n  return match;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 79
      },
      "nodeContext" : "!Objects.equals(actual.getAddress(),expectedLocation.getAddress())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "actual.getAddress()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 64,
      "startColumnNumber" : 59,
      "endLineNumber" : 64,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 79
      },
      "nodeContext" : "description.appendText(\" address=\").appendText(actual.getAddress())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 80
      },
      "nodeContext" : "description.appendText(\" address=\").appendText(actual.getAddress());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 63,
        "startColumnNumber" : 81,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  description.appendText(\" address=\").appendText(actual.getAddress());\n  match=false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!Objects.equals(actual.getAddress(),expectedLocation.getAddress())) {\n  description.appendText(\" address=\").appendText(actual.getAddress());\n  match=false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1279,
        "startLineNumber" : 55,
        "startColumnNumber" : 97,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (actual == null) {\n    return expectedLocation == null;\n  }\n else   if (expectedLocation == null) {\n    return false;\n  }\n  boolean match=true;\n  if (!Objects.equals(actual.getAddress(),expectedLocation.getAddress())) {\n    description.appendText(\" address=\").appendText(actual.getAddress());\n    match=false;\n  }\n  if (!Objects.equals(actual.getFQDNHostname(),expectedLocation.getFQDNHostname())) {\n    description.appendText(\" FQDNHostname=\").appendText(actual.getFQDNHostname());\n    match=false;\n  }\n  if (!Objects.equals(actual.getHostname(),expectedLocation.getHostname())) {\n    description.appendText(\" hostname=\").appendText(actual.getHostname());\n    match=false;\n  }\n  if (!Objects.equals(actual.getResourceID(),expectedLocation.getResourceID())) {\n    description.appendText(\" resourceID=\").appendText(actual.getResourceID().toString());\n    match=false;\n  }\n  if (!Objects.equals(actual.getPort(),expectedLocation.getPort())) {\n    description.appendText(\" port=\").appendText(String.valueOf(actual.getPort()));\n    match=false;\n  }\n  return match;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected boolean matchesSafely(ArchivedTaskManagerLocation actual,Description description){\n  if (actual == null) {\n    return expectedLocation == null;\n  }\n else   if (expectedLocation == null) {\n    return false;\n  }\n  boolean match=true;\n  if (!Objects.equals(actual.getAddress(),expectedLocation.getAddress())) {\n    description.appendText(\" address=\").appendText(actual.getAddress());\n    match=false;\n  }\n  if (!Objects.equals(actual.getFQDNHostname(),expectedLocation.getFQDNHostname())) {\n    description.appendText(\" FQDNHostname=\").appendText(actual.getFQDNHostname());\n    match=false;\n  }\n  if (!Objects.equals(actual.getHostname(),expectedLocation.getHostname())) {\n    description.appendText(\" hostname=\").appendText(actual.getHostname());\n    match=false;\n  }\n  if (!Objects.equals(actual.getResourceID(),expectedLocation.getResourceID())) {\n    description.appendText(\" resourceID=\").appendText(actual.getResourceID().toString());\n    match=false;\n  }\n  if (!Objects.equals(actual.getPort(),expectedLocation.getPort())) {\n    description.appendText(\" port=\").appendText(String.valueOf(actual.getPort()));\n    match=false;\n  }\n  return match;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 80
      },
      "nodeContext" : "description.appendText(\" address=\").appendText(actual.getAddress());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 63,
    "startColumnNumber" : 28,
    "endLineNumber" : 63,
    "endColumnNumber" : 47
  }, {
    "charLength" : 19,
    "startLineNumber" : 64,
    "startColumnNumber" : 59,
    "endLineNumber" : 64,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}