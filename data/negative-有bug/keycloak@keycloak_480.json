{
  "id" : 480,
  "expression" : "evidenceVerifyCallback",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/adapters/oidc/wildfly-elytron/src/main/java/org/keycloak/adapters/elytron/SecurityIdentityUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "evidenceVerifyCallback",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 54,
      "startColumnNumber" : 50,
      "endLineNumber" : 54,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 54,
        "startColumnNumber" : 49,
        "endLineNumber" : 54,
        "endColumnNumber" : 73
      },
      "nodeContext" : "{evidenceVerifyCallback}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 54,
        "startColumnNumber" : 35,
        "endLineNumber" : 54,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new Callback[]{evidenceVerifyCallback}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 74
      },
      "nodeContext" : "callbackHandler.handle(new Callback[]{evidenceVerifyCallback})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 75
      },
      "nodeContext" : "callbackHandler.handle(new Callback[]{evidenceVerifyCallback});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1382,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  EvidenceVerifyCallback evidenceVerifyCallback=new EvidenceVerifyCallback(new Evidence(){\n    @Override public Principal getPrincipal(){\n      return principal;\n    }\n  }\n);\n  callbackHandler.handle(new Callback[]{evidenceVerifyCallback});\n  if (evidenceVerifyCallback.isVerified()) {\n    AuthorizeCallback authorizeCallback=new AuthorizeCallback(null,null);\n    try {\n      callbackHandler.handle(new Callback[]{authorizeCallback});\n      authorizeCallback.isAuthorized();\n    }\n catch (    Exception e) {\n      throw new HttpAuthenticationException(e);\n    }\n    SecurityIdentityCallback securityIdentityCallback=new SecurityIdentityCallback();\n    IdentityCredentialCallback credentialCallback=new IdentityCredentialCallback(new BearerTokenCredential(KeycloakPrincipal.class.cast(principal).getKeycloakSecurityContext().getTokenString()),true);\n    callbackHandler.handle(new Callback[]{credentialCallback,AuthenticationCompleteCallback.SUCCEEDED,securityIdentityCallback});\n    SecurityIdentity securityIdentity=securityIdentityCallback.getSecurityIdentity();\n    return securityIdentity;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1557,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  EvidenceVerifyCallback evidenceVerifyCallback=new EvidenceVerifyCallback(new Evidence(){\n    @Override public Principal getPrincipal(){\n      return principal;\n    }\n  }\n);\n  callbackHandler.handle(new Callback[]{evidenceVerifyCallback});\n  if (evidenceVerifyCallback.isVerified()) {\n    AuthorizeCallback authorizeCallback=new AuthorizeCallback(null,null);\n    try {\n      callbackHandler.handle(new Callback[]{authorizeCallback});\n      authorizeCallback.isAuthorized();\n    }\n catch (    Exception e) {\n      throw new HttpAuthenticationException(e);\n    }\n    SecurityIdentityCallback securityIdentityCallback=new SecurityIdentityCallback();\n    IdentityCredentialCallback credentialCallback=new IdentityCredentialCallback(new BearerTokenCredential(KeycloakPrincipal.class.cast(principal).getKeycloakSecurityContext().getTokenString()),true);\n    callbackHandler.handle(new Callback[]{credentialCallback,AuthenticationCompleteCallback.SUCCEEDED,securityIdentityCallback});\n    SecurityIdentity securityIdentity=securityIdentityCallback.getSecurityIdentity();\n    return securityIdentity;\n  }\n}\n catch (UnsupportedCallbackException e) {\n  throw new RuntimeException(e);\n}\ncatch (IOException e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1595,
        "startLineNumber" : 45,
        "startColumnNumber" : 98,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    EvidenceVerifyCallback evidenceVerifyCallback=new EvidenceVerifyCallback(new Evidence(){\n      @Override public Principal getPrincipal(){\n        return principal;\n      }\n    }\n);\n    callbackHandler.handle(new Callback[]{evidenceVerifyCallback});\n    if (evidenceVerifyCallback.isVerified()) {\n      AuthorizeCallback authorizeCallback=new AuthorizeCallback(null,null);\n      try {\n        callbackHandler.handle(new Callback[]{authorizeCallback});\n        authorizeCallback.isAuthorized();\n      }\n catch (      Exception e) {\n        throw new HttpAuthenticationException(e);\n      }\n      SecurityIdentityCallback securityIdentityCallback=new SecurityIdentityCallback();\n      IdentityCredentialCallback credentialCallback=new IdentityCredentialCallback(new BearerTokenCredential(KeycloakPrincipal.class.cast(principal).getKeycloakSecurityContext().getTokenString()),true);\n      callbackHandler.handle(new Callback[]{credentialCallback,AuthenticationCompleteCallback.SUCCEEDED,securityIdentityCallback});\n      SecurityIdentity securityIdentity=securityIdentityCallback.getSecurityIdentity();\n      return securityIdentity;\n    }\n  }\n catch (  UnsupportedCallbackException e) {\n    throw new RuntimeException(e);\n  }\ncatch (  IOException e) {\n    throw new RuntimeException(e);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1689,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static final SecurityIdentity authorize(CallbackHandler callbackHandler,Principal principal){\n  try {\n    EvidenceVerifyCallback evidenceVerifyCallback=new EvidenceVerifyCallback(new Evidence(){\n      @Override public Principal getPrincipal(){\n        return principal;\n      }\n    }\n);\n    callbackHandler.handle(new Callback[]{evidenceVerifyCallback});\n    if (evidenceVerifyCallback.isVerified()) {\n      AuthorizeCallback authorizeCallback=new AuthorizeCallback(null,null);\n      try {\n        callbackHandler.handle(new Callback[]{authorizeCallback});\n        authorizeCallback.isAuthorized();\n      }\n catch (      Exception e) {\n        throw new HttpAuthenticationException(e);\n      }\n      SecurityIdentityCallback securityIdentityCallback=new SecurityIdentityCallback();\n      IdentityCredentialCallback credentialCallback=new IdentityCredentialCallback(new BearerTokenCredential(KeycloakPrincipal.class.cast(principal).getKeycloakSecurityContext().getTokenString()),true);\n      callbackHandler.handle(new Callback[]{credentialCallback,AuthenticationCompleteCallback.SUCCEEDED,securityIdentityCallback});\n      SecurityIdentity securityIdentity=securityIdentityCallback.getSecurityIdentity();\n      return securityIdentity;\n    }\n  }\n catch (  UnsupportedCallbackException e) {\n    throw new RuntimeException(e);\n  }\ncatch (  IOException e) {\n    throw new RuntimeException(e);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 75
      },
      "nodeContext" : "callbackHandler.handle(new Callback[]{evidenceVerifyCallback});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.adapters.elytron.EvidenceVerifyCallback"
  }, {
    "nodeContext" : "evidenceVerifyCallback",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 56,
      "startColumnNumber" : 16,
      "endLineNumber" : 56,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 56,
        "startColumnNumber" : 16,
        "endLineNumber" : 56,
        "endColumnNumber" : 51
      },
      "nodeContext" : "evidenceVerifyCallback.isVerified()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1028,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (evidenceVerifyCallback.isVerified()) {\n  AuthorizeCallback authorizeCallback=new AuthorizeCallback(null,null);\n  try {\n    callbackHandler.handle(new Callback[]{authorizeCallback});\n    authorizeCallback.isAuthorized();\n  }\n catch (  Exception e) {\n    throw new HttpAuthenticationException(e);\n  }\n  SecurityIdentityCallback securityIdentityCallback=new SecurityIdentityCallback();\n  IdentityCredentialCallback credentialCallback=new IdentityCredentialCallback(new BearerTokenCredential(KeycloakPrincipal.class.cast(principal).getKeycloakSecurityContext().getTokenString()),true);\n  callbackHandler.handle(new Callback[]{credentialCallback,AuthenticationCompleteCallback.SUCCEEDED,securityIdentityCallback});\n  SecurityIdentity securityIdentity=securityIdentityCallback.getSecurityIdentity();\n  return securityIdentity;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 98,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1382,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  EvidenceVerifyCallback evidenceVerifyCallback=new EvidenceVerifyCallback(new Evidence(){\n    @Override public Principal getPrincipal(){\n      return principal;\n    }\n  }\n);\n  callbackHandler.handle(new Callback[]{evidenceVerifyCallback});\n  if (evidenceVerifyCallback.isVerified()) {\n    AuthorizeCallback authorizeCallback=new AuthorizeCallback(null,null);\n    try {\n      callbackHandler.handle(new Callback[]{authorizeCallback});\n      authorizeCallback.isAuthorized();\n    }\n catch (    Exception e) {\n      throw new HttpAuthenticationException(e);\n    }\n    SecurityIdentityCallback securityIdentityCallback=new SecurityIdentityCallback();\n    IdentityCredentialCallback credentialCallback=new IdentityCredentialCallback(new BearerTokenCredential(KeycloakPrincipal.class.cast(principal).getKeycloakSecurityContext().getTokenString()),true);\n    callbackHandler.handle(new Callback[]{credentialCallback,AuthenticationCompleteCallback.SUCCEEDED,securityIdentityCallback});\n    SecurityIdentity securityIdentity=securityIdentityCallback.getSecurityIdentity();\n    return securityIdentity;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1557,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  EvidenceVerifyCallback evidenceVerifyCallback=new EvidenceVerifyCallback(new Evidence(){\n    @Override public Principal getPrincipal(){\n      return principal;\n    }\n  }\n);\n  callbackHandler.handle(new Callback[]{evidenceVerifyCallback});\n  if (evidenceVerifyCallback.isVerified()) {\n    AuthorizeCallback authorizeCallback=new AuthorizeCallback(null,null);\n    try {\n      callbackHandler.handle(new Callback[]{authorizeCallback});\n      authorizeCallback.isAuthorized();\n    }\n catch (    Exception e) {\n      throw new HttpAuthenticationException(e);\n    }\n    SecurityIdentityCallback securityIdentityCallback=new SecurityIdentityCallback();\n    IdentityCredentialCallback credentialCallback=new IdentityCredentialCallback(new BearerTokenCredential(KeycloakPrincipal.class.cast(principal).getKeycloakSecurityContext().getTokenString()),true);\n    callbackHandler.handle(new Callback[]{credentialCallback,AuthenticationCompleteCallback.SUCCEEDED,securityIdentityCallback});\n    SecurityIdentity securityIdentity=securityIdentityCallback.getSecurityIdentity();\n    return securityIdentity;\n  }\n}\n catch (UnsupportedCallbackException e) {\n  throw new RuntimeException(e);\n}\ncatch (IOException e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1595,
        "startLineNumber" : 45,
        "startColumnNumber" : 98,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    EvidenceVerifyCallback evidenceVerifyCallback=new EvidenceVerifyCallback(new Evidence(){\n      @Override public Principal getPrincipal(){\n        return principal;\n      }\n    }\n);\n    callbackHandler.handle(new Callback[]{evidenceVerifyCallback});\n    if (evidenceVerifyCallback.isVerified()) {\n      AuthorizeCallback authorizeCallback=new AuthorizeCallback(null,null);\n      try {\n        callbackHandler.handle(new Callback[]{authorizeCallback});\n        authorizeCallback.isAuthorized();\n      }\n catch (      Exception e) {\n        throw new HttpAuthenticationException(e);\n      }\n      SecurityIdentityCallback securityIdentityCallback=new SecurityIdentityCallback();\n      IdentityCredentialCallback credentialCallback=new IdentityCredentialCallback(new BearerTokenCredential(KeycloakPrincipal.class.cast(principal).getKeycloakSecurityContext().getTokenString()),true);\n      callbackHandler.handle(new Callback[]{credentialCallback,AuthenticationCompleteCallback.SUCCEEDED,securityIdentityCallback});\n      SecurityIdentity securityIdentity=securityIdentityCallback.getSecurityIdentity();\n      return securityIdentity;\n    }\n  }\n catch (  UnsupportedCallbackException e) {\n    throw new RuntimeException(e);\n  }\ncatch (  IOException e) {\n    throw new RuntimeException(e);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1689,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static final SecurityIdentity authorize(CallbackHandler callbackHandler,Principal principal){\n  try {\n    EvidenceVerifyCallback evidenceVerifyCallback=new EvidenceVerifyCallback(new Evidence(){\n      @Override public Principal getPrincipal(){\n        return principal;\n      }\n    }\n);\n    callbackHandler.handle(new Callback[]{evidenceVerifyCallback});\n    if (evidenceVerifyCallback.isVerified()) {\n      AuthorizeCallback authorizeCallback=new AuthorizeCallback(null,null);\n      try {\n        callbackHandler.handle(new Callback[]{authorizeCallback});\n        authorizeCallback.isAuthorized();\n      }\n catch (      Exception e) {\n        throw new HttpAuthenticationException(e);\n      }\n      SecurityIdentityCallback securityIdentityCallback=new SecurityIdentityCallback();\n      IdentityCredentialCallback credentialCallback=new IdentityCredentialCallback(new BearerTokenCredential(KeycloakPrincipal.class.cast(principal).getKeycloakSecurityContext().getTokenString()),true);\n      callbackHandler.handle(new Callback[]{credentialCallback,AuthenticationCompleteCallback.SUCCEEDED,securityIdentityCallback});\n      SecurityIdentity securityIdentity=securityIdentityCallback.getSecurityIdentity();\n      return securityIdentity;\n    }\n  }\n catch (  UnsupportedCallbackException e) {\n    throw new RuntimeException(e);\n  }\ncatch (  IOException e) {\n    throw new RuntimeException(e);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 56,
        "startColumnNumber" : 16,
        "endLineNumber" : 56,
        "endColumnNumber" : 51
      },
      "nodeContext" : "evidenceVerifyCallback.isVerified()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.adapters.elytron.EvidenceVerifyCallback"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 54,
    "startColumnNumber" : 50,
    "endLineNumber" : 54,
    "endColumnNumber" : 72
  }, {
    "charLength" : 22,
    "startLineNumber" : 56,
    "startColumnNumber" : 16,
    "endLineNumber" : 56,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}