{
  "id" : 412,
  "expression" : "phyOffsets",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/store/src/test/java/org/apache/rocketmq/store/index/IndexFileTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "phyOffsets",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 66,
      "startColumnNumber" : 34,
      "endLineNumber" : 66,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 80
      },
      "nodeContext" : "indexFile.selectPhyOffset(phyOffsets,\"60\",10,0,Long.MAX_VALUE,true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 81
      },
      "nodeContext" : "indexFile.selectPhyOffset(phyOffsets,\"60\",10,0,Long.MAX_VALUE,true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 53,
        "startColumnNumber" : 55,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  IndexFile indexFile=new IndexFile(\"200\",HASH_SLOT_NUM,INDEX_NUM,0,0);\n  for (long i=0; i < (INDEX_NUM - 1); i++) {\n    boolean putResult=indexFile.putKey(Long.toString(i),i,System.currentTimeMillis());\n    assertThat(putResult).isTrue();\n  }\n  boolean putResult=indexFile.putKey(Long.toString(400),400,System.currentTimeMillis());\n  assertThat(putResult).isFalse();\n  final List<Long> phyOffsets=new ArrayList<Long>();\n  indexFile.selectPhyOffset(phyOffsets,\"60\",10,0,Long.MAX_VALUE,true);\n  assertThat(phyOffsets).isNotEmpty();\n  assertThat(phyOffsets.size()).isEqualTo(1);\n  indexFile.destroy(0);\n  File file=new File(\"200\");\n  UtilAll.deleteFile(file);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSelectPhyOffset() throws Exception {\n  IndexFile indexFile=new IndexFile(\"200\",HASH_SLOT_NUM,INDEX_NUM,0,0);\n  for (long i=0; i < (INDEX_NUM - 1); i++) {\n    boolean putResult=indexFile.putKey(Long.toString(i),i,System.currentTimeMillis());\n    assertThat(putResult).isTrue();\n  }\n  boolean putResult=indexFile.putKey(Long.toString(400),400,System.currentTimeMillis());\n  assertThat(putResult).isFalse();\n  final List<Long> phyOffsets=new ArrayList<Long>();\n  indexFile.selectPhyOffset(phyOffsets,\"60\",10,0,Long.MAX_VALUE,true);\n  assertThat(phyOffsets).isNotEmpty();\n  assertThat(phyOffsets.size()).isEqualTo(1);\n  indexFile.destroy(0);\n  File file=new File(\"200\");\n  UtilAll.deleteFile(file);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 81
      },
      "nodeContext" : "indexFile.selectPhyOffset(phyOffsets,\"60\",10,0,Long.MAX_VALUE,true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Long>"
  }, {
    "nodeContext" : "phyOffsets",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 67,
      "startColumnNumber" : 19,
      "endLineNumber" : 67,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 30
      },
      "nodeContext" : "assertThat(phyOffsets)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertThat(phyOffsets).isNotEmpty()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertThat(phyOffsets).isNotEmpty();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 53,
        "startColumnNumber" : 55,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  IndexFile indexFile=new IndexFile(\"200\",HASH_SLOT_NUM,INDEX_NUM,0,0);\n  for (long i=0; i < (INDEX_NUM - 1); i++) {\n    boolean putResult=indexFile.putKey(Long.toString(i),i,System.currentTimeMillis());\n    assertThat(putResult).isTrue();\n  }\n  boolean putResult=indexFile.putKey(Long.toString(400),400,System.currentTimeMillis());\n  assertThat(putResult).isFalse();\n  final List<Long> phyOffsets=new ArrayList<Long>();\n  indexFile.selectPhyOffset(phyOffsets,\"60\",10,0,Long.MAX_VALUE,true);\n  assertThat(phyOffsets).isNotEmpty();\n  assertThat(phyOffsets.size()).isEqualTo(1);\n  indexFile.destroy(0);\n  File file=new File(\"200\");\n  UtilAll.deleteFile(file);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSelectPhyOffset() throws Exception {\n  IndexFile indexFile=new IndexFile(\"200\",HASH_SLOT_NUM,INDEX_NUM,0,0);\n  for (long i=0; i < (INDEX_NUM - 1); i++) {\n    boolean putResult=indexFile.putKey(Long.toString(i),i,System.currentTimeMillis());\n    assertThat(putResult).isTrue();\n  }\n  boolean putResult=indexFile.putKey(Long.toString(400),400,System.currentTimeMillis());\n  assertThat(putResult).isFalse();\n  final List<Long> phyOffsets=new ArrayList<Long>();\n  indexFile.selectPhyOffset(phyOffsets,\"60\",10,0,Long.MAX_VALUE,true);\n  assertThat(phyOffsets).isNotEmpty();\n  assertThat(phyOffsets.size()).isEqualTo(1);\n  indexFile.destroy(0);\n  File file=new File(\"200\");\n  UtilAll.deleteFile(file);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertThat(phyOffsets).isNotEmpty();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Long>"
  }, {
    "nodeContext" : "phyOffsets",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 68,
      "startColumnNumber" : 19,
      "endLineNumber" : 68,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 68,
        "startColumnNumber" : 19,
        "endLineNumber" : 68,
        "endColumnNumber" : 36
      },
      "nodeContext" : "phyOffsets.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 37
      },
      "nodeContext" : "assertThat(phyOffsets.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(phyOffsets.size()).isEqualTo(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertThat(phyOffsets.size()).isEqualTo(1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 53,
        "startColumnNumber" : 55,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  IndexFile indexFile=new IndexFile(\"200\",HASH_SLOT_NUM,INDEX_NUM,0,0);\n  for (long i=0; i < (INDEX_NUM - 1); i++) {\n    boolean putResult=indexFile.putKey(Long.toString(i),i,System.currentTimeMillis());\n    assertThat(putResult).isTrue();\n  }\n  boolean putResult=indexFile.putKey(Long.toString(400),400,System.currentTimeMillis());\n  assertThat(putResult).isFalse();\n  final List<Long> phyOffsets=new ArrayList<Long>();\n  indexFile.selectPhyOffset(phyOffsets,\"60\",10,0,Long.MAX_VALUE,true);\n  assertThat(phyOffsets).isNotEmpty();\n  assertThat(phyOffsets.size()).isEqualTo(1);\n  indexFile.destroy(0);\n  File file=new File(\"200\");\n  UtilAll.deleteFile(file);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSelectPhyOffset() throws Exception {\n  IndexFile indexFile=new IndexFile(\"200\",HASH_SLOT_NUM,INDEX_NUM,0,0);\n  for (long i=0; i < (INDEX_NUM - 1); i++) {\n    boolean putResult=indexFile.putKey(Long.toString(i),i,System.currentTimeMillis());\n    assertThat(putResult).isTrue();\n  }\n  boolean putResult=indexFile.putKey(Long.toString(400),400,System.currentTimeMillis());\n  assertThat(putResult).isFalse();\n  final List<Long> phyOffsets=new ArrayList<Long>();\n  indexFile.selectPhyOffset(phyOffsets,\"60\",10,0,Long.MAX_VALUE,true);\n  assertThat(phyOffsets).isNotEmpty();\n  assertThat(phyOffsets.size()).isEqualTo(1);\n  indexFile.destroy(0);\n  File file=new File(\"200\");\n  UtilAll.deleteFile(file);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertThat(phyOffsets.size()).isEqualTo(1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Long>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 66,
    "startColumnNumber" : 34,
    "endLineNumber" : 66,
    "endColumnNumber" : 44
  }, {
    "charLength" : 10,
    "startLineNumber" : 67,
    "startColumnNumber" : 19,
    "endLineNumber" : 67,
    "endColumnNumber" : 29
  }, {
    "charLength" : 10,
    "startLineNumber" : 68,
    "startColumnNumber" : 19,
    "endLineNumber" : 68,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}