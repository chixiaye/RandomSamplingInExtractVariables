{
  "id" : 417,
  "expression" : "NewSessionPayload",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/org/openqa/selenium/remote/ProtocolHandshake.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "NewSessionPayload",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 69,
      "startColumnNumber" : 36,
      "endLineNumber" : 69,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 69,
        "startColumnNumber" : 36,
        "endLineNumber" : 69,
        "endColumnNumber" : 69
      },
      "nodeContext" : "NewSessionPayload.create(desired)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 69,
        "startColumnNumber" : 26,
        "endLineNumber" : 69,
        "endColumnNumber" : 69
      },
      "nodeContext" : "payload=NewSessionPayload.create(desired)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 69
      },
      "nodeContext" : "NewSessionPayload payload=NewSessionPayload.create(desired)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (CountingOutputStream counter=new CountingOutputStream(os);Writer writer=new OutputStreamWriter(counter,UTF_8);NewSessionPayload payload=NewSessionPayload.create(desired)){\n  payload.writeTo(writer);\n  try (InputStream rawIn=os.asByteSource().openBufferedStream();BufferedInputStream contentStream=new BufferedInputStream(rawIn)){\n    Optional<Result> result=createSession(client,contentStream,counter.getCount());\n    if (result.isPresent()) {\n      Result toReturn=result.get();\n      LOG.info(String.format(\"Detected dialect: %s\",toReturn.dialect));\n      return toReturn;\n    }\n  }\n }\n  finally {\n  os.reset();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 60,
        "startColumnNumber" : 25,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Capabilities desired=(Capabilities)command.getParameters().get(\"desiredCapabilities\");\n  desired=desired == null ? new ImmutableCapabilities() : desired;\n  int threshold=(int)Math.min(Runtime.getRuntime().freeMemory() / 10,Integer.MAX_VALUE);\n  FileBackedOutputStream os=new FileBackedOutputStream(threshold);\n  try (CountingOutputStream counter=new CountingOutputStream(os);Writer writer=new OutputStreamWriter(counter,UTF_8);NewSessionPayload payload=NewSessionPayload.create(desired)){\n    payload.writeTo(writer);\n    try (InputStream rawIn=os.asByteSource().openBufferedStream();BufferedInputStream contentStream=new BufferedInputStream(rawIn)){\n      Optional<Result> result=createSession(client,contentStream,counter.getCount());\n      if (result.isPresent()) {\n        Result toReturn=result.get();\n        LOG.info(String.format(\"Detected dialect: %s\",toReturn.dialect));\n        return toReturn;\n      }\n    }\n   }\n  finally {\n    os.reset();\n  }\n  throw new SessionNotCreatedException(String.format(\"Unable to create new remote session. \" + \"desired capabilities = %s\",desired));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1342,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public Result createSession(HttpClient client,Command command) throws IOException {\n  Capabilities desired=(Capabilities)command.getParameters().get(\"desiredCapabilities\");\n  desired=desired == null ? new ImmutableCapabilities() : desired;\n  int threshold=(int)Math.min(Runtime.getRuntime().freeMemory() / 10,Integer.MAX_VALUE);\n  FileBackedOutputStream os=new FileBackedOutputStream(threshold);\n  try (CountingOutputStream counter=new CountingOutputStream(os);Writer writer=new OutputStreamWriter(counter,UTF_8);NewSessionPayload payload=NewSessionPayload.create(desired)){\n    payload.writeTo(writer);\n    try (InputStream rawIn=os.asByteSource().openBufferedStream();BufferedInputStream contentStream=new BufferedInputStream(rawIn)){\n      Optional<Result> result=createSession(client,contentStream,counter.getCount());\n      if (result.isPresent()) {\n        Result toReturn=result.get();\n        LOG.info(String.format(\"Detected dialect: %s\",toReturn.dialect));\n        return toReturn;\n      }\n    }\n   }\n  finally {\n    os.reset();\n  }\n  throw new SessionNotCreatedException(String.format(\"Unable to create new remote session. \" + \"desired capabilities = %s\",desired));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 69
      },
      "nodeContext" : "NewSessionPayload payload=NewSessionPayload.create(desired)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.openqa.selenium.remote.NewSessionPayload"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 69,
    "startColumnNumber" : 36,
    "endLineNumber" : 69,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}