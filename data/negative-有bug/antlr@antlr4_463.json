{
  "id" : 463,
  "expression" : "defaultListener",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime-testsuite/test/org/antlr/v4/test/runtime/cpp/BaseCppTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "defaultListener",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 110,
      "startColumnNumber" : 71,
      "endLineNumber" : 110,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 110,
        "startColumnNumber" : 3,
        "endLineNumber" : 110,
        "endColumnNumber" : 101
      },
      "nodeContext" : "antlrOnString(getTempDirPath(),\"Cpp\",grammarFileName,grammarStr,defaultListener,extraOptions)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 109,
        "startColumnNumber" : 13,
        "endLineNumber" : 110,
        "endColumnNumber" : 101
      },
      "nodeContext" : "equeue=antlrOnString(getTempDirPath(),\"Cpp\",grammarFileName,grammarStr,defaultListener,extraOptions)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 102
      },
      "nodeContext" : "ErrorQueue equeue=antlrOnString(getTempDirPath(),\"Cpp\",grammarFileName,grammarStr,defaultListener,extraOptions);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 108,
        "startColumnNumber" : 1,
        "endLineNumber" : 134,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ErrorQueue equeue=antlrOnString(getTempDirPath(),\"Cpp\",grammarFileName,grammarStr,defaultListener,extraOptions);\n  if (!equeue.errors.isEmpty()) {\n    return false;\n  }\n  List<String> files=new ArrayList<String>();\n  if (lexerName != null) {\n    files.add(lexerName + \".cpp\");\n    files.add(lexerName + \".h\");\n  }\n  if (parserName != null) {\n    files.add(parserName + \".cpp\");\n    files.add(parserName + \".h\");\n    Set<String> optionsSet=new HashSet<String>(Arrays.asList(extraOptions));\n    if (!optionsSet.contains(\"-no-listener\")) {\n      files.add(grammarFileName.substring(0,grammarFileName.lastIndexOf('.')) + \"Listener.cpp\");\n      files.add(grammarFileName.substring(0,grammarFileName.lastIndexOf('.')) + \"Listener.h\");\n    }\n    if (optionsSet.contains(\"-visitor\")) {\n      files.add(grammarFileName.substring(0,grammarFileName.lastIndexOf('.')) + \"Visitor.cpp\");\n      files.add(grammarFileName.substring(0,grammarFileName.lastIndexOf('.')) + \"Visitor.h\");\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1500,
        "startLineNumber" : 101,
        "startColumnNumber" : 1,
        "endLineNumber" : 134,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Return true if all is well \n */\nprotected boolean rawGenerateAndBuildRecognizer(String grammarFileName,String grammarStr,String parserName,String lexerName,boolean defaultListener,String... extraOptions){\n  ErrorQueue equeue=antlrOnString(getTempDirPath(),\"Cpp\",grammarFileName,grammarStr,defaultListener,extraOptions);\n  if (!equeue.errors.isEmpty()) {\n    return false;\n  }\n  List<String> files=new ArrayList<String>();\n  if (lexerName != null) {\n    files.add(lexerName + \".cpp\");\n    files.add(lexerName + \".h\");\n  }\n  if (parserName != null) {\n    files.add(parserName + \".cpp\");\n    files.add(parserName + \".h\");\n    Set<String> optionsSet=new HashSet<String>(Arrays.asList(extraOptions));\n    if (!optionsSet.contains(\"-no-listener\")) {\n      files.add(grammarFileName.substring(0,grammarFileName.lastIndexOf('.')) + \"Listener.cpp\");\n      files.add(grammarFileName.substring(0,grammarFileName.lastIndexOf('.')) + \"Listener.h\");\n    }\n    if (optionsSet.contains(\"-visitor\")) {\n      files.add(grammarFileName.substring(0,grammarFileName.lastIndexOf('.')) + \"Visitor.cpp\");\n      files.add(grammarFileName.substring(0,grammarFileName.lastIndexOf('.')) + \"Visitor.h\");\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 110,
        "startColumnNumber" : 3,
        "endLineNumber" : 110,
        "endColumnNumber" : 101
      },
      "nodeContext" : "antlrOnString(getTempDirPath(),\"Cpp\",grammarFileName,grammarStr,defaultListener,extraOptions)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 110,
    "startColumnNumber" : 71,
    "endLineNumber" : 110,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}