{
  "id" : 128,
  "expression" : "new FileOutputStream(tempFile)",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.oracle/src/org/jkiss/dbeaver/ext/oracle/data/OracleContentBFILE.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new FileOutputStream(tempFile)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 159,
      "startColumnNumber" : 43,
      "endLineNumber" : 159,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 159,
        "startColumnNumber" : 38,
        "endLineNumber" : 159,
        "endColumnNumber" : 73
      },
      "nodeContext" : "os=new FileOutputStream(tempFile)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 159,
        "startColumnNumber" : 25,
        "endLineNumber" : 159,
        "endColumnNumber" : 73
      },
      "nodeContext" : "OutputStream os=new FileOutputStream(tempFile)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 625,
        "startLineNumber" : 159,
        "startColumnNumber" : 20,
        "endLineNumber" : 169,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try (OutputStream os=new FileOutputStream(tempFile)){\n  try (InputStream bs=getInputStream()){\n    ContentUtils.copyStreams(bs,contentLength,os,monitor);\n  }\n }\n catch (IOException e) {\n  ContentUtils.deleteTempFile(tempFile);\n  throw new DBCException(\"IO error while copying stream\",e);\n}\ncatch (Throwable e) {\n  ContentUtils.deleteTempFile(tempFile);\n  throw new DBCException(e,executionContext);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 151,
        "startColumnNumber" : 23,
        "endLineNumber" : 171,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  File tempFile;\n  try {\n    tempFile=ContentUtils.createTempContentFile(monitor,platform,\"blob\" + bfile.hashCode());\n  }\n catch (  IOException e) {\n    throw new DBCException(\"Can't create temporary file\",e);\n  }\n  try (OutputStream os=new FileOutputStream(tempFile)){\n    try (InputStream bs=getInputStream()){\n      ContentUtils.copyStreams(bs,contentLength,os,monitor);\n    }\n   }\n catch (  IOException e) {\n    ContentUtils.deleteTempFile(tempFile);\n    throw new DBCException(\"IO error while copying stream\",e);\n  }\ncatch (  Throwable e) {\n    ContentUtils.deleteTempFile(tempFile);\n    throw new DBCException(e,executionContext);\n  }\n  this.storage=new TemporaryContentStorage(platform,tempFile,getDefaultEncoding());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1757,
        "startLineNumber" : 140,
        "startColumnNumber" : 16,
        "endLineNumber" : 171,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (contentLength < platform.getPreferenceStore().getInt(ModelPreferences.MEMORY_CONTENT_MAX_SIZE)) {\n  try {\n    try (InputStream bs=getInputStream()){\n      storage=BytesContentStorage.createFromStream(bs,contentLength,getDefaultEncoding());\n    }\n   }\n catch (  IOException e) {\n    throw new DBCException(\"IO error while reading content\",e);\n  }\n}\n else {\n  File tempFile;\n  try {\n    tempFile=ContentUtils.createTempContentFile(monitor,platform,\"blob\" + bfile.hashCode());\n  }\n catch (  IOException e) {\n    throw new DBCException(\"Can't create temporary file\",e);\n  }\n  try (OutputStream os=new FileOutputStream(tempFile)){\n    try (InputStream bs=getInputStream()){\n      ContentUtils.copyStreams(bs,contentLength,os,monitor);\n    }\n   }\n catch (  IOException e) {\n    ContentUtils.deleteTempFile(tempFile);\n    throw new DBCException(\"IO error while copying stream\",e);\n  }\ncatch (  Throwable e) {\n    ContentUtils.deleteTempFile(tempFile);\n    throw new DBCException(e,executionContext);\n  }\n  this.storage=new TemporaryContentStorage(platform,tempFile,getDefaultEncoding());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 152,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2063,
        "startLineNumber" : 136,
        "startColumnNumber" : 16,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  openFile();\n  long contentLength=getContentLength();\n  DBPPlatform platform=executionContext.getDataSource().getContainer().getPlatform();\n  if (contentLength < platform.getPreferenceStore().getInt(ModelPreferences.MEMORY_CONTENT_MAX_SIZE)) {\n    try {\n      try (InputStream bs=getInputStream()){\n        storage=BytesContentStorage.createFromStream(bs,contentLength,getDefaultEncoding());\n      }\n     }\n catch (    IOException e) {\n      throw new DBCException(\"IO error while reading content\",e);\n    }\n  }\n else {\n    File tempFile;\n    try {\n      tempFile=ContentUtils.createTempContentFile(monitor,platform,\"blob\" + bfile.hashCode());\n    }\n catch (    IOException e) {\n      throw new DBCException(\"Can't create temporary file\",e);\n    }\n    try (OutputStream os=new FileOutputStream(tempFile)){\n      try (InputStream bs=getInputStream()){\n        ContentUtils.copyStreams(bs,contentLength,os,monitor);\n      }\n     }\n catch (    IOException e) {\n      ContentUtils.deleteTempFile(tempFile);\n      throw new DBCException(\"IO error while copying stream\",e);\n    }\ncatch (    Throwable e) {\n      ContentUtils.deleteTempFile(tempFile);\n      throw new DBCException(e,executionContext);\n    }\n    this.storage=new TemporaryContentStorage(platform,tempFile,getDefaultEncoding());\n  }\n  releaseBlob();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2132,
        "startLineNumber" : 136,
        "startColumnNumber" : 12,
        "endLineNumber" : 177,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  openFile();\n  long contentLength=getContentLength();\n  DBPPlatform platform=executionContext.getDataSource().getContainer().getPlatform();\n  if (contentLength < platform.getPreferenceStore().getInt(ModelPreferences.MEMORY_CONTENT_MAX_SIZE)) {\n    try {\n      try (InputStream bs=getInputStream()){\n        storage=BytesContentStorage.createFromStream(bs,contentLength,getDefaultEncoding());\n      }\n     }\n catch (    IOException e) {\n      throw new DBCException(\"IO error while reading content\",e);\n    }\n  }\n else {\n    File tempFile;\n    try {\n      tempFile=ContentUtils.createTempContentFile(monitor,platform,\"blob\" + bfile.hashCode());\n    }\n catch (    IOException e) {\n      throw new DBCException(\"Can't create temporary file\",e);\n    }\n    try (OutputStream os=new FileOutputStream(tempFile)){\n      try (InputStream bs=getInputStream()){\n        ContentUtils.copyStreams(bs,contentLength,os,monitor);\n      }\n     }\n catch (    IOException e) {\n      ContentUtils.deleteTempFile(tempFile);\n      throw new DBCException(\"IO error while copying stream\",e);\n    }\ncatch (    Throwable e) {\n      ContentUtils.deleteTempFile(tempFile);\n      throw new DBCException(e,executionContext);\n    }\n    this.storage=new TemporaryContentStorage(platform,tempFile,getDefaultEncoding());\n  }\n  releaseBlob();\n}\n  finally {\n  closeFile();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 182,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 135,
        "startColumnNumber" : 46,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    openFile();\n    long contentLength=getContentLength();\n    DBPPlatform platform=executionContext.getDataSource().getContainer().getPlatform();\n    if (contentLength < platform.getPreferenceStore().getInt(ModelPreferences.MEMORY_CONTENT_MAX_SIZE)) {\n      try {\n        try (InputStream bs=getInputStream()){\n          storage=BytesContentStorage.createFromStream(bs,contentLength,getDefaultEncoding());\n        }\n       }\n catch (      IOException e) {\n        throw new DBCException(\"IO error while reading content\",e);\n      }\n    }\n else {\n      File tempFile;\n      try {\n        tempFile=ContentUtils.createTempContentFile(monitor,platform,\"blob\" + bfile.hashCode());\n      }\n catch (      IOException e) {\n        throw new DBCException(\"Can't create temporary file\",e);\n      }\n      try (OutputStream os=new FileOutputStream(tempFile)){\n        try (InputStream bs=getInputStream()){\n          ContentUtils.copyStreams(bs,contentLength,os,monitor);\n        }\n       }\n catch (      IOException e) {\n        ContentUtils.deleteTempFile(tempFile);\n        throw new DBCException(\"IO error while copying stream\",e);\n      }\ncatch (      Throwable e) {\n        ContentUtils.deleteTempFile(tempFile);\n        throw new DBCException(e,executionContext);\n      }\n      this.storage=new TemporaryContentStorage(platform,tempFile,getDefaultEncoding());\n    }\n    releaseBlob();\n  }\n  finally {\n    closeFile();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2194,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (storage == null && bfile != null) {\n  try {\n    openFile();\n    long contentLength=getContentLength();\n    DBPPlatform platform=executionContext.getDataSource().getContainer().getPlatform();\n    if (contentLength < platform.getPreferenceStore().getInt(ModelPreferences.MEMORY_CONTENT_MAX_SIZE)) {\n      try {\n        try (InputStream bs=getInputStream()){\n          storage=BytesContentStorage.createFromStream(bs,contentLength,getDefaultEncoding());\n        }\n       }\n catch (      IOException e) {\n        throw new DBCException(\"IO error while reading content\",e);\n      }\n    }\n else {\n      File tempFile;\n      try {\n        tempFile=ContentUtils.createTempContentFile(monitor,platform,\"blob\" + bfile.hashCode());\n      }\n catch (      IOException e) {\n        throw new DBCException(\"Can't create temporary file\",e);\n      }\n      try (OutputStream os=new FileOutputStream(tempFile)){\n        try (InputStream bs=getInputStream()){\n          ContentUtils.copyStreams(bs,contentLength,os,monitor);\n        }\n       }\n catch (      IOException e) {\n        ContentUtils.deleteTempFile(tempFile);\n        throw new DBCException(\"IO error while copying stream\",e);\n      }\ncatch (      Throwable e) {\n        ContentUtils.deleteTempFile(tempFile);\n        throw new DBCException(e,executionContext);\n      }\n      this.storage=new TemporaryContentStorage(platform,tempFile,getDefaultEncoding());\n    }\n    releaseBlob();\n  }\n  finally {\n    closeFile();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 191,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2234,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 180,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (storage == null && bfile != null) {\n    try {\n      openFile();\n      long contentLength=getContentLength();\n      DBPPlatform platform=executionContext.getDataSource().getContainer().getPlatform();\n      if (contentLength < platform.getPreferenceStore().getInt(ModelPreferences.MEMORY_CONTENT_MAX_SIZE)) {\n        try {\n          try (InputStream bs=getInputStream()){\n            storage=BytesContentStorage.createFromStream(bs,contentLength,getDefaultEncoding());\n          }\n         }\n catch (        IOException e) {\n          throw new DBCException(\"IO error while reading content\",e);\n        }\n      }\n else {\n        File tempFile;\n        try {\n          tempFile=ContentUtils.createTempContentFile(monitor,platform,\"blob\" + bfile.hashCode());\n        }\n catch (        IOException e) {\n          throw new DBCException(\"Can't create temporary file\",e);\n        }\n        try (OutputStream os=new FileOutputStream(tempFile)){\n          try (InputStream bs=getInputStream()){\n            ContentUtils.copyStreams(bs,contentLength,os,monitor);\n          }\n         }\n catch (        IOException e) {\n          ContentUtils.deleteTempFile(tempFile);\n          throw new DBCException(\"IO error while copying stream\",e);\n        }\ncatch (        Throwable e) {\n          ContentUtils.deleteTempFile(tempFile);\n          throw new DBCException(e,executionContext);\n        }\n        this.storage=new TemporaryContentStorage(platform,tempFile,getDefaultEncoding());\n      }\n      releaseBlob();\n    }\n  finally {\n      closeFile();\n    }\n  }\n  return storage;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2345,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 180,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DBDContentStorage getContents(DBRProgressMonitor monitor) throws DBCException {\n  if (storage == null && bfile != null) {\n    try {\n      openFile();\n      long contentLength=getContentLength();\n      DBPPlatform platform=executionContext.getDataSource().getContainer().getPlatform();\n      if (contentLength < platform.getPreferenceStore().getInt(ModelPreferences.MEMORY_CONTENT_MAX_SIZE)) {\n        try {\n          try (InputStream bs=getInputStream()){\n            storage=BytesContentStorage.createFromStream(bs,contentLength,getDefaultEncoding());\n          }\n         }\n catch (        IOException e) {\n          throw new DBCException(\"IO error while reading content\",e);\n        }\n      }\n else {\n        File tempFile;\n        try {\n          tempFile=ContentUtils.createTempContentFile(monitor,platform,\"blob\" + bfile.hashCode());\n        }\n catch (        IOException e) {\n          throw new DBCException(\"Can't create temporary file\",e);\n        }\n        try (OutputStream os=new FileOutputStream(tempFile)){\n          try (InputStream bs=getInputStream()){\n            ContentUtils.copyStreams(bs,contentLength,os,monitor);\n          }\n         }\n catch (        IOException e) {\n          ContentUtils.deleteTempFile(tempFile);\n          throw new DBCException(\"IO error while copying stream\",e);\n        }\ncatch (        Throwable e) {\n          ContentUtils.deleteTempFile(tempFile);\n          throw new DBCException(e,executionContext);\n        }\n        this.storage=new TemporaryContentStorage(platform,tempFile,getDefaultEncoding());\n      }\n      releaseBlob();\n    }\n  finally {\n      closeFile();\n    }\n  }\n  return storage;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 207,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 159,
        "startColumnNumber" : 25,
        "endLineNumber" : 159,
        "endColumnNumber" : 73
      },
      "nodeContext" : "OutputStream os=new FileOutputStream(tempFile)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.io.FileOutputStream"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 159,
    "startColumnNumber" : 43,
    "endLineNumber" : 159,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}