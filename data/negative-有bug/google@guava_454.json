{
  "id" : 454,
  "expression" : "directExecutor()",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava/src/com/google/common/util/concurrent/AggregateFuture.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "directExecutor()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 160,
      "startColumnNumber" : 12,
      "endLineNumber" : 160,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 882,
        "startLineNumber" : 140,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 29
      },
      "nodeContext" : "future.addListener(() -> {\n  try {\n    if (future.isCancelled()) {\n      futures=null;\n      cancel(false);\n    }\n else {\n      collectValueFromNonCancelledFuture(index,future);\n    }\n  }\n  finally {\n    decrementCountAndMaybeComplete(null);\n  }\n}\n,directExecutor())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 140,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 30
      },
      "nodeContext" : "future.addListener(() -> {\n  try {\n    if (future.isCancelled()) {\n      futures=null;\n      cancel(false);\n    }\n else {\n      collectValueFromNonCancelledFuture(index,future);\n    }\n  }\n  finally {\n    decrementCountAndMaybeComplete(null);\n  }\n}\n,directExecutor());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 34,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 929,
        "startLineNumber" : 138,
        "startColumnNumber" : 64,
        "endLineNumber" : 161,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int index=i++;\n  future.addListener(() -> {\n    try {\n      if (future.isCancelled()) {\n        futures=null;\n        cancel(false);\n      }\n else {\n        collectValueFromNonCancelledFuture(index,future);\n      }\n    }\n  finally {\n      decrementCountAndMaybeComplete(null);\n    }\n  }\n,directExecutor());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 138,
        "startColumnNumber" : 6,
        "endLineNumber" : 161,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (ListenableFuture<? extends InputT> future : futures) {\n  int index=i++;\n  future.addListener(() -> {\n    try {\n      if (future.isCancelled()) {\n        futures=null;\n        cancel(false);\n      }\n else {\n        collectValueFromNonCancelledFuture(index,future);\n      }\n    }\n  finally {\n      decrementCountAndMaybeComplete(null);\n    }\n  }\n,directExecutor());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1632,
        "startLineNumber" : 127,
        "startColumnNumber" : 24,
        "endLineNumber" : 162,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int i=0;\n  for (  ListenableFuture<? extends InputT> future : futures) {\n    int index=i++;\n    future.addListener(() -> {\n      try {\n        if (future.isCancelled()) {\n          futures=null;\n          cancel(false);\n        }\n else {\n          collectValueFromNonCancelledFuture(index,future);\n        }\n      }\n  finally {\n        decrementCountAndMaybeComplete(null);\n      }\n    }\n,directExecutor());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3087,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (allMustSucceed) {\n  int i=0;\n  for (  ListenableFuture<? extends InputT> future : futures) {\n    int index=i++;\n    future.addListener(() -> {\n      try {\n        if (future.isCancelled()) {\n          futures=null;\n          cancel(false);\n        }\n else {\n          collectValueFromNonCancelledFuture(index,future);\n        }\n      }\n  finally {\n        decrementCountAndMaybeComplete(null);\n      }\n    }\n,directExecutor());\n  }\n}\n else {\n  ImmutableCollection<? extends Future<? extends InputT>> localFutures=collectsValues ? futures : null;\n  Runnable listener=() -> decrementCountAndMaybeComplete(localFutures);\n  for (  ListenableFuture<? extends InputT> future : futures) {\n    future.addListener(listener,directExecutor());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3706,
        "startLineNumber" : 110,
        "startColumnNumber" : 20,
        "endLineNumber" : 186,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  requireNonNull(futures);\n  if (futures.isEmpty()) {\n    handleAllCompleted();\n    return;\n  }\n  if (allMustSucceed) {\n    int i=0;\n    for (    ListenableFuture<? extends InputT> future : futures) {\n      int index=i++;\n      future.addListener(() -> {\n        try {\n          if (future.isCancelled()) {\n            futures=null;\n            cancel(false);\n          }\n else {\n            collectValueFromNonCancelledFuture(index,future);\n          }\n        }\n  finally {\n          decrementCountAndMaybeComplete(null);\n        }\n      }\n,directExecutor());\n    }\n  }\n else {\n    ImmutableCollection<? extends Future<? extends InputT>> localFutures=collectsValues ? futures : null;\n    Runnable listener=() -> decrementCountAndMaybeComplete(localFutures);\n    for (    ListenableFuture<? extends InputT> future : futures) {\n      future.addListener(listener,directExecutor());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4178,
        "startLineNumber" : 103,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Must be called at the end of each subclass's constructor. This method performs the \"real\" initialization; we can't put this in the constructor because, in the case where futures are already complete, we would not initialize the subclass before calling  {@link #collectValueFromNonCancelledFuture}. As this is called after the subclass is constructed, we're guaranteed to have properly initialized the subclass.\n */\nfinal void init(){\n  requireNonNull(futures);\n  if (futures.isEmpty()) {\n    handleAllCompleted();\n    return;\n  }\n  if (allMustSucceed) {\n    int i=0;\n    for (    ListenableFuture<? extends InputT> future : futures) {\n      int index=i++;\n      future.addListener(() -> {\n        try {\n          if (future.isCancelled()) {\n            futures=null;\n            cancel(false);\n          }\n else {\n            collectValueFromNonCancelledFuture(index,future);\n          }\n        }\n  finally {\n          decrementCountAndMaybeComplete(null);\n        }\n      }\n,directExecutor());\n    }\n  }\n else {\n    ImmutableCollection<? extends Future<? extends InputT>> localFutures=collectsValues ? futures : null;\n    Runnable listener=() -> decrementCountAndMaybeComplete(localFutures);\n    for (    ListenableFuture<? extends InputT> future : futures) {\n      future.addListener(listener,directExecutor());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 882,
        "startLineNumber" : 140,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 29
      },
      "nodeContext" : "future.addListener(() -> {\n  try {\n    if (future.isCancelled()) {\n      futures=null;\n      cancel(false);\n    }\n else {\n      collectValueFromNonCancelledFuture(index,future);\n    }\n  }\n  finally {\n    decrementCountAndMaybeComplete(null);\n  }\n}\n,directExecutor())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 10
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.Executor"
  }, {
    "nodeContext" : "directExecutor()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 183,
      "startColumnNumber" : 37,
      "endLineNumber" : 183,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 54
      },
      "nodeContext" : "future.addListener(listener,directExecutor())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 55
      },
      "nodeContext" : "future.addListener(listener,directExecutor());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 182,
        "startColumnNumber" : 64,
        "endLineNumber" : 184,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  future.addListener(listener,directExecutor());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 182,
        "startColumnNumber" : 6,
        "endLineNumber" : 184,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (ListenableFuture<? extends InputT> future : futures) {\n  future.addListener(listener,directExecutor());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1429,
        "startLineNumber" : 162,
        "startColumnNumber" : 11,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImmutableCollection<? extends Future<? extends InputT>> localFutures=collectsValues ? futures : null;\n  Runnable listener=() -> decrementCountAndMaybeComplete(localFutures);\n  for (  ListenableFuture<? extends InputT> future : futures) {\n    future.addListener(listener,directExecutor());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3087,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (allMustSucceed) {\n  int i=0;\n  for (  ListenableFuture<? extends InputT> future : futures) {\n    int index=i++;\n    future.addListener(() -> {\n      try {\n        if (future.isCancelled()) {\n          futures=null;\n          cancel(false);\n        }\n else {\n          collectValueFromNonCancelledFuture(index,future);\n        }\n      }\n  finally {\n        decrementCountAndMaybeComplete(null);\n      }\n    }\n,directExecutor());\n  }\n}\n else {\n  ImmutableCollection<? extends Future<? extends InputT>> localFutures=collectsValues ? futures : null;\n  Runnable listener=() -> decrementCountAndMaybeComplete(localFutures);\n  for (  ListenableFuture<? extends InputT> future : futures) {\n    future.addListener(listener,directExecutor());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3706,
        "startLineNumber" : 110,
        "startColumnNumber" : 20,
        "endLineNumber" : 186,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  requireNonNull(futures);\n  if (futures.isEmpty()) {\n    handleAllCompleted();\n    return;\n  }\n  if (allMustSucceed) {\n    int i=0;\n    for (    ListenableFuture<? extends InputT> future : futures) {\n      int index=i++;\n      future.addListener(() -> {\n        try {\n          if (future.isCancelled()) {\n            futures=null;\n            cancel(false);\n          }\n else {\n            collectValueFromNonCancelledFuture(index,future);\n          }\n        }\n  finally {\n          decrementCountAndMaybeComplete(null);\n        }\n      }\n,directExecutor());\n    }\n  }\n else {\n    ImmutableCollection<? extends Future<? extends InputT>> localFutures=collectsValues ? futures : null;\n    Runnable listener=() -> decrementCountAndMaybeComplete(localFutures);\n    for (    ListenableFuture<? extends InputT> future : futures) {\n      future.addListener(listener,directExecutor());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4178,
        "startLineNumber" : 103,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Must be called at the end of each subclass's constructor. This method performs the \"real\" initialization; we can't put this in the constructor because, in the case where futures are already complete, we would not initialize the subclass before calling  {@link #collectValueFromNonCancelledFuture}. As this is called after the subclass is constructed, we're guaranteed to have properly initialized the subclass.\n */\nfinal void init(){\n  requireNonNull(futures);\n  if (futures.isEmpty()) {\n    handleAllCompleted();\n    return;\n  }\n  if (allMustSucceed) {\n    int i=0;\n    for (    ListenableFuture<? extends InputT> future : futures) {\n      int index=i++;\n      future.addListener(() -> {\n        try {\n          if (future.isCancelled()) {\n            futures=null;\n            cancel(false);\n          }\n else {\n            collectValueFromNonCancelledFuture(index,future);\n          }\n        }\n  finally {\n          decrementCountAndMaybeComplete(null);\n        }\n      }\n,directExecutor());\n    }\n  }\n else {\n    ImmutableCollection<? extends Future<? extends InputT>> localFutures=collectsValues ? futures : null;\n    Runnable listener=() -> decrementCountAndMaybeComplete(localFutures);\n    for (    ListenableFuture<? extends InputT> future : futures) {\n      future.addListener(listener,directExecutor());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 55
      },
      "nodeContext" : "future.addListener(listener,directExecutor());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.Executor"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 160,
    "startColumnNumber" : 12,
    "endLineNumber" : 160,
    "endColumnNumber" : 28
  }, {
    "charLength" : 16,
    "startLineNumber" : 183,
    "startColumnNumber" : 37,
    "endLineNumber" : 183,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}