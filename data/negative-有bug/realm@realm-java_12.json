{
  "id" : 12,
  "expression" : "RealmFieldType.MIXED",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/androidTest/java/io/realm/RealmObjectSchemaTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RealmFieldType.MIXED",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 1364,
      "startColumnNumber" : 21,
      "endLineNumber" : 1364,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 1364,
        "startColumnNumber" : 8,
        "endLineNumber" : 1364,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertEquals(RealmFieldType.MIXED,schema.getFieldType(AllJavaTypes.FIELD_MIXED))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 1364,
        "startColumnNumber" : 8,
        "endLineNumber" : 1364,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertEquals(RealmFieldType.MIXED,schema.getFieldType(AllJavaTypes.FIELD_MIXED));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1541,
        "startLineNumber" : 1347,
        "startColumnNumber" : 31,
        "endLineNumber" : 1365,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  schema=realmSchema.get(\"AllJavaTypes\");\n  assertEquals(RealmFieldType.STRING,schema.getFieldType(AllJavaTypes.FIELD_STRING));\n  assertEquals(RealmFieldType.BINARY,schema.getFieldType(AllJavaTypes.FIELD_BINARY));\n  assertEquals(RealmFieldType.BOOLEAN,schema.getFieldType(AllJavaTypes.FIELD_BOOLEAN));\n  assertEquals(RealmFieldType.DATE,schema.getFieldType(AllJavaTypes.FIELD_DATE));\n  assertEquals(RealmFieldType.DOUBLE,schema.getFieldType(AllJavaTypes.FIELD_DOUBLE));\n  assertEquals(RealmFieldType.FLOAT,schema.getFieldType(AllJavaTypes.FIELD_FLOAT));\n  assertEquals(RealmFieldType.OBJECT,schema.getFieldType(AllJavaTypes.FIELD_OBJECT));\n  assertEquals(RealmFieldType.LIST,schema.getFieldType(AllJavaTypes.FIELD_LIST));\n  assertEquals(RealmFieldType.INTEGER,schema.getFieldType(AllJavaTypes.FIELD_BYTE));\n  assertEquals(RealmFieldType.INTEGER,schema.getFieldType(AllJavaTypes.FIELD_SHORT));\n  assertEquals(RealmFieldType.INTEGER,schema.getFieldType(AllJavaTypes.FIELD_INT));\n  assertEquals(RealmFieldType.INTEGER,schema.getFieldType(AllJavaTypes.FIELD_LONG));\n  assertEquals(RealmFieldType.OBJECT_ID,schema.getFieldType(AllJavaTypes.FIELD_OBJECT_ID));\n  assertEquals(RealmFieldType.DECIMAL128,schema.getFieldType(AllJavaTypes.FIELD_DECIMAL128));\n  assertEquals(RealmFieldType.UUID,schema.getFieldType(AllJavaTypes.FIELD_UUID));\n  assertEquals(RealmFieldType.MIXED,schema.getFieldType(AllJavaTypes.FIELD_MIXED));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1578,
        "startLineNumber" : 1346,
        "startColumnNumber" : 4,
        "endLineNumber" : 1365,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void getFieldType(){\n  schema=realmSchema.get(\"AllJavaTypes\");\n  assertEquals(RealmFieldType.STRING,schema.getFieldType(AllJavaTypes.FIELD_STRING));\n  assertEquals(RealmFieldType.BINARY,schema.getFieldType(AllJavaTypes.FIELD_BINARY));\n  assertEquals(RealmFieldType.BOOLEAN,schema.getFieldType(AllJavaTypes.FIELD_BOOLEAN));\n  assertEquals(RealmFieldType.DATE,schema.getFieldType(AllJavaTypes.FIELD_DATE));\n  assertEquals(RealmFieldType.DOUBLE,schema.getFieldType(AllJavaTypes.FIELD_DOUBLE));\n  assertEquals(RealmFieldType.FLOAT,schema.getFieldType(AllJavaTypes.FIELD_FLOAT));\n  assertEquals(RealmFieldType.OBJECT,schema.getFieldType(AllJavaTypes.FIELD_OBJECT));\n  assertEquals(RealmFieldType.LIST,schema.getFieldType(AllJavaTypes.FIELD_LIST));\n  assertEquals(RealmFieldType.INTEGER,schema.getFieldType(AllJavaTypes.FIELD_BYTE));\n  assertEquals(RealmFieldType.INTEGER,schema.getFieldType(AllJavaTypes.FIELD_SHORT));\n  assertEquals(RealmFieldType.INTEGER,schema.getFieldType(AllJavaTypes.FIELD_INT));\n  assertEquals(RealmFieldType.INTEGER,schema.getFieldType(AllJavaTypes.FIELD_LONG));\n  assertEquals(RealmFieldType.OBJECT_ID,schema.getFieldType(AllJavaTypes.FIELD_OBJECT_ID));\n  assertEquals(RealmFieldType.DECIMAL128,schema.getFieldType(AllJavaTypes.FIELD_DECIMAL128));\n  assertEquals(RealmFieldType.UUID,schema.getFieldType(AllJavaTypes.FIELD_UUID));\n  assertEquals(RealmFieldType.MIXED,schema.getFieldType(AllJavaTypes.FIELD_MIXED));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 1364,
        "startColumnNumber" : 8,
        "endLineNumber" : 1364,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertEquals(RealmFieldType.MIXED,schema.getFieldType(AllJavaTypes.FIELD_MIXED));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "io.realm.RealmFieldType"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 1364,
    "startColumnNumber" : 21,
    "endLineNumber" : 1364,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}