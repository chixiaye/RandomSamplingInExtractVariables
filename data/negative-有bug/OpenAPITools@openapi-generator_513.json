{
  "id" : 513,
  "expression" : "jsonObj",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/samples/client/petstore/java/okhttp-gson-nextgen/src/main/java/org/openapitools/client/model/Foo.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "jsonObj",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 138,
      "startColumnNumber" : 10,
      "endLineNumber" : 138,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 138,
        "startColumnNumber" : 10,
        "endLineNumber" : 138,
        "endColumnNumber" : 25
      },
      "nodeContext" : "jsonObj == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 138,
        "startColumnNumber" : 6,
        "endLineNumber" : 144,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (jsonObj == null) {\n  if (Foo.openapiRequiredFields.isEmpty()) {\n    return;\n  }\n else {\n    throw new IllegalArgumentException(String.format(\"The required field(s) %s in Foo is not found in the empty JSON string\",Foo.openapiRequiredFields.toString()));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 137,
        "startColumnNumber" : 79,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (jsonObj == null) {\n    if (Foo.openapiRequiredFields.isEmpty()) {\n      return;\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"The required field(s) %s in Foo is not found in the empty JSON string\",Foo.openapiRequiredFields.toString()));\n    }\n  }\n  Set<Entry<String,JsonElement>> entries=jsonObj.entrySet();\n  for (  Entry<String,JsonElement> entry : entries) {\n    if (!Foo.openapiFields.contains(entry.getKey())) {\n      throw new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1053,
        "startLineNumber" : 131,
        "startColumnNumber" : 1,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Validates the JSON Object and throws an exception if issues found\n * @param jsonObj JSON Object\n * @throws IOException if the JSON Object is invalid with respect to Foo\n */\npublic static void validateJsonObject(JsonObject jsonObj) throws IOException {\n  if (jsonObj == null) {\n    if (Foo.openapiRequiredFields.isEmpty()) {\n      return;\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"The required field(s) %s in Foo is not found in the empty JSON string\",Foo.openapiRequiredFields.toString()));\n    }\n  }\n  Set<Entry<String,JsonElement>> entries=jsonObj.entrySet();\n  for (  Entry<String,JsonElement> entry : entries) {\n    if (!Foo.openapiFields.contains(entry.getKey())) {\n      throw new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 138,
        "startColumnNumber" : 10,
        "endLineNumber" : 138,
        "endColumnNumber" : 25
      },
      "nodeContext" : "jsonObj == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.openapitools.client.model.JsonObject"
  }, {
    "nodeContext" : "jsonObj",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 145,
      "startColumnNumber" : 48,
      "endLineNumber" : 145,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 145,
        "startColumnNumber" : 48,
        "endLineNumber" : 145,
        "endColumnNumber" : 66
      },
      "nodeContext" : "jsonObj.entrySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 145,
        "startColumnNumber" : 38,
        "endLineNumber" : 145,
        "endColumnNumber" : 66
      },
      "nodeContext" : "entries=jsonObj.entrySet()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 145,
        "startColumnNumber" : 6,
        "endLineNumber" : 145,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Set<Entry<String,JsonElement>> entries=jsonObj.entrySet();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 137,
        "startColumnNumber" : 79,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (jsonObj == null) {\n    if (Foo.openapiRequiredFields.isEmpty()) {\n      return;\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"The required field(s) %s in Foo is not found in the empty JSON string\",Foo.openapiRequiredFields.toString()));\n    }\n  }\n  Set<Entry<String,JsonElement>> entries=jsonObj.entrySet();\n  for (  Entry<String,JsonElement> entry : entries) {\n    if (!Foo.openapiFields.contains(entry.getKey())) {\n      throw new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1053,
        "startLineNumber" : 131,
        "startColumnNumber" : 1,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Validates the JSON Object and throws an exception if issues found\n * @param jsonObj JSON Object\n * @throws IOException if the JSON Object is invalid with respect to Foo\n */\npublic static void validateJsonObject(JsonObject jsonObj) throws IOException {\n  if (jsonObj == null) {\n    if (Foo.openapiRequiredFields.isEmpty()) {\n      return;\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"The required field(s) %s in Foo is not found in the empty JSON string\",Foo.openapiRequiredFields.toString()));\n    }\n  }\n  Set<Entry<String,JsonElement>> entries=jsonObj.entrySet();\n  for (  Entry<String,JsonElement> entry : entries) {\n    if (!Foo.openapiFields.contains(entry.getKey())) {\n      throw new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 145,
        "startColumnNumber" : 6,
        "endLineNumber" : 145,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Set<Entry<String,JsonElement>> entries=jsonObj.entrySet();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.openapitools.client.model.JsonObject"
  }, {
    "nodeContext" : "jsonObj",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 149,
      "startColumnNumber" : 161,
      "endLineNumber" : 149,
      "endColumnNumber" : 168
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 149,
        "startColumnNumber" : 161,
        "endLineNumber" : 149,
        "endColumnNumber" : 179
      },
      "nodeContext" : "jsonObj.toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 149,
        "startColumnNumber" : 45,
        "endLineNumber" : 149,
        "endColumnNumber" : 180
      },
      "nodeContext" : "String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 149,
        "startColumnNumber" : 16,
        "endLineNumber" : 149,
        "endColumnNumber" : 181
      },
      "nodeContext" : "new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 149,
        "startColumnNumber" : 10,
        "endLineNumber" : 149,
        "endColumnNumber" : 182
      },
      "nodeContext" : "throw new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 148,
        "startColumnNumber" : 57,
        "endLineNumber" : 150,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 150,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!Foo.openapiFields.contains(entry.getKey())) {\n  throw new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 147,
        "startColumnNumber" : 55,
        "endLineNumber" : 151,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (!Foo.openapiFields.contains(entry.getKey())) {\n    throw new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Entry<String,JsonElement> entry : entries) {\n  if (!Foo.openapiFields.contains(entry.getKey())) {\n    throw new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 137,
        "startColumnNumber" : 79,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (jsonObj == null) {\n    if (Foo.openapiRequiredFields.isEmpty()) {\n      return;\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"The required field(s) %s in Foo is not found in the empty JSON string\",Foo.openapiRequiredFields.toString()));\n    }\n  }\n  Set<Entry<String,JsonElement>> entries=jsonObj.entrySet();\n  for (  Entry<String,JsonElement> entry : entries) {\n    if (!Foo.openapiFields.contains(entry.getKey())) {\n      throw new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1053,
        "startLineNumber" : 131,
        "startColumnNumber" : 1,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Validates the JSON Object and throws an exception if issues found\n * @param jsonObj JSON Object\n * @throws IOException if the JSON Object is invalid with respect to Foo\n */\npublic static void validateJsonObject(JsonObject jsonObj) throws IOException {\n  if (jsonObj == null) {\n    if (Foo.openapiRequiredFields.isEmpty()) {\n      return;\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"The required field(s) %s in Foo is not found in the empty JSON string\",Foo.openapiRequiredFields.toString()));\n    }\n  }\n  Set<Entry<String,JsonElement>> entries=jsonObj.entrySet();\n  for (  Entry<String,JsonElement> entry : entries) {\n    if (!Foo.openapiFields.contains(entry.getKey())) {\n      throw new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 149,
        "startColumnNumber" : 10,
        "endLineNumber" : 149,
        "endColumnNumber" : 182
      },
      "nodeContext" : "throw new IllegalArgumentException(String.format(\"The field `%s` in the JSON string is not defined in the `Foo` properties. JSON: %s\",entry.getKey(),jsonObj.toString()));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.openapitools.client.model.JsonObject"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 138,
    "startColumnNumber" : 10,
    "endLineNumber" : 138,
    "endColumnNumber" : 17
  }, {
    "charLength" : 7,
    "startLineNumber" : 145,
    "startColumnNumber" : 48,
    "endLineNumber" : 145,
    "endColumnNumber" : 55
  }, {
    "charLength" : 7,
    "startLineNumber" : 149,
    "startColumnNumber" : 161,
    "endLineNumber" : 149,
    "endColumnNumber" : 168
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 8
  } ]
}