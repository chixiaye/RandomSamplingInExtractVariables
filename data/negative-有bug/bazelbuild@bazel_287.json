{
  "id" : 287,
  "expression" : "null",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/actions/ActionEnvironment.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 141,
      "startColumnNumber" : 30,
      "endLineNumber" : 141,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 141,
        "startColumnNumber" : 10,
        "endLineNumber" : 141,
        "endColumnNumber" : 34
      },
      "nodeContext" : "entry.getValue() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 141,
        "startColumnNumber" : 6,
        "endLineNumber" : 146,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (entry.getValue() != null) {\n  fixedEnv.put(entry.getKey(),entry.getValue());\n}\n else {\n  String key=entry.getKey();\n  inheritedEnv.add(key);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 140,
        "startColumnNumber" : 59,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (entry.getValue() != null) {\n    fixedEnv.put(entry.getKey(),entry.getValue());\n  }\n else {\n    String key=entry.getKey();\n    inheritedEnv.add(key);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Map.Entry<String,String> entry : env.entrySet()) {\n  if (entry.getValue() != null) {\n    fixedEnv.put(entry.getKey(),entry.getValue());\n  }\n else {\n    String key=entry.getKey();\n    inheritedEnv.add(key);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 135,
        "startColumnNumber" : 65,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,String> fixedEnv=new TreeMap<>();\n  Set<String> inheritedEnv=new TreeSet<>();\n  for (  Map.Entry<String,String> entry : env.entrySet()) {\n    if (entry.getValue() != null) {\n      fixedEnv.put(entry.getKey(),entry.getValue());\n    }\n else {\n      String key=entry.getKey();\n      inheritedEnv.add(key);\n    }\n  }\n  return create(new SimpleEnvironmentVariables(fixedEnv),ImmutableSet.copyOf(inheritedEnv));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 130,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Splits the given map into a map of variables with a fixed value, and a set of variables that should be inherited, the latter of which are identified by having a  {@code null} value in thegiven map. Returns these two parts as a new  {@link ActionEnvironment} instance.\n */\npublic static ActionEnvironment split(Map<String,String> env){\n  Map<String,String> fixedEnv=new TreeMap<>();\n  Set<String> inheritedEnv=new TreeSet<>();\n  for (  Map.Entry<String,String> entry : env.entrySet()) {\n    if (entry.getValue() != null) {\n      fixedEnv.put(entry.getKey(),entry.getValue());\n    }\n else {\n      String key=entry.getKey();\n      inheritedEnv.add(key);\n    }\n  }\n  return create(new SimpleEnvironmentVariables(fixedEnv),ImmutableSet.copyOf(inheritedEnv));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 141,
        "startColumnNumber" : 10,
        "endLineNumber" : 141,
        "endColumnNumber" : 34
      },
      "nodeContext" : "entry.getValue() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 141,
    "startColumnNumber" : 30,
    "endLineNumber" : 141,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}