{
  "id" : 99,
  "expression" : "this.startEnd[1]",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/rss/expanded/RSSExpandedReader.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.startEnd[1]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 365,
      "startColumnNumber" : 12,
      "endLineNumber" : 365,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 365,
        "startColumnNumber" : 6,
        "endLineNumber" : 365,
        "endColumnNumber" : 28
      },
      "nodeContext" : "end=this.startEnd[1]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 365,
        "startColumnNumber" : 6,
        "endLineNumber" : 365,
        "endColumnNumber" : 29
      },
      "nodeContext" : "end=this.startEnd[1];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 353,
        "startColumnNumber" : 18,
        "endLineNumber" : 367,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int firstElementStart=this.startEnd[0] - 1;\n  while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n    firstElementStart--;\n  }\n  firstElementStart++;\n  firstCounter=this.startEnd[0] - firstElementStart;\n  start=firstElementStart;\n  end=this.startEnd[1];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 783,
        "startLineNumber" : 353,
        "startColumnNumber" : 4,
        "endLineNumber" : 376,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (oddPattern) {\n  int firstElementStart=this.startEnd[0] - 1;\n  while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n    firstElementStart--;\n  }\n  firstElementStart++;\n  firstCounter=this.startEnd[0] - firstElementStart;\n  start=firstElementStart;\n  end=this.startEnd[1];\n}\n else {\n  start=this.startEnd[0];\n  int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n  end=firstElementStart;\n  firstCounter=end - this.startEnd[1];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 347,
        "startColumnNumber" : 97,
        "endLineNumber" : 390,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int firstCounter;\n  int start;\n  int end;\n  if (oddPattern) {\n    int firstElementStart=this.startEnd[0] - 1;\n    while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n      firstElementStart--;\n    }\n    firstElementStart++;\n    firstCounter=this.startEnd[0] - firstElementStart;\n    start=firstElementStart;\n    end=this.startEnd[1];\n  }\n else {\n    start=this.startEnd[0];\n    int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n    end=firstElementStart;\n    firstCounter=end - this.startEnd[1];\n  }\n  int[] counters=this.getDecodeFinderCounters();\n  System.arraycopy(counters,0,counters,1,counters.length - 1);\n  counters[0]=firstCounter;\n  int value;\n  try {\n    value=parseFinderValue(counters,FINDER_PATTERNS);\n  }\n catch (  NotFoundException nfe) {\n    return null;\n  }\n  return new FinderPattern(value,new int[]{start,end},start,end,rowNumber);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 347,
        "startColumnNumber" : 2,
        "endLineNumber" : 390,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private FinderPattern parseFoundFinderPattern(BitArray row,int rowNumber,boolean oddPattern){\n  int firstCounter;\n  int start;\n  int end;\n  if (oddPattern) {\n    int firstElementStart=this.startEnd[0] - 1;\n    while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n      firstElementStart--;\n    }\n    firstElementStart++;\n    firstCounter=this.startEnd[0] - firstElementStart;\n    start=firstElementStart;\n    end=this.startEnd[1];\n  }\n else {\n    start=this.startEnd[0];\n    int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n    end=firstElementStart;\n    firstCounter=end - this.startEnd[1];\n  }\n  int[] counters=this.getDecodeFinderCounters();\n  System.arraycopy(counters,0,counters,1,counters.length - 1);\n  counters[0]=firstCounter;\n  int value;\n  try {\n    value=parseFinderValue(counters,FINDER_PATTERNS);\n  }\n catch (  NotFoundException nfe) {\n    return null;\n  }\n  return new FinderPattern(value,new int[]{start,end},start,end,rowNumber);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 365,
        "startColumnNumber" : 6,
        "endLineNumber" : 365,
        "endColumnNumber" : 29
      },
      "nodeContext" : "end=this.startEnd[1];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "this.startEnd[1]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 372,
      "startColumnNumber" : 47,
      "endLineNumber" : 372,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 372,
        "startColumnNumber" : 47,
        "endLineNumber" : 372,
        "endColumnNumber" : 67
      },
      "nodeContext" : "this.startEnd[1] + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 372,
        "startColumnNumber" : 30,
        "endLineNumber" : 372,
        "endColumnNumber" : 68
      },
      "nodeContext" : "row.getNextUnset(this.startEnd[1] + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 372,
        "startColumnNumber" : 10,
        "endLineNumber" : 372,
        "endColumnNumber" : 68
      },
      "nodeContext" : "firstElementStart=row.getNextUnset(this.startEnd[1] + 1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 372,
        "startColumnNumber" : 6,
        "endLineNumber" : 372,
        "endColumnNumber" : 69
      },
      "nodeContext" : "int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 367,
        "startColumnNumber" : 9,
        "endLineNumber" : 376,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  start=this.startEnd[0];\n  int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n  end=firstElementStart;\n  firstCounter=end - this.startEnd[1];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 783,
        "startLineNumber" : 353,
        "startColumnNumber" : 4,
        "endLineNumber" : 376,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (oddPattern) {\n  int firstElementStart=this.startEnd[0] - 1;\n  while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n    firstElementStart--;\n  }\n  firstElementStart++;\n  firstCounter=this.startEnd[0] - firstElementStart;\n  start=firstElementStart;\n  end=this.startEnd[1];\n}\n else {\n  start=this.startEnd[0];\n  int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n  end=firstElementStart;\n  firstCounter=end - this.startEnd[1];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 347,
        "startColumnNumber" : 97,
        "endLineNumber" : 390,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int firstCounter;\n  int start;\n  int end;\n  if (oddPattern) {\n    int firstElementStart=this.startEnd[0] - 1;\n    while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n      firstElementStart--;\n    }\n    firstElementStart++;\n    firstCounter=this.startEnd[0] - firstElementStart;\n    start=firstElementStart;\n    end=this.startEnd[1];\n  }\n else {\n    start=this.startEnd[0];\n    int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n    end=firstElementStart;\n    firstCounter=end - this.startEnd[1];\n  }\n  int[] counters=this.getDecodeFinderCounters();\n  System.arraycopy(counters,0,counters,1,counters.length - 1);\n  counters[0]=firstCounter;\n  int value;\n  try {\n    value=parseFinderValue(counters,FINDER_PATTERNS);\n  }\n catch (  NotFoundException nfe) {\n    return null;\n  }\n  return new FinderPattern(value,new int[]{start,end},start,end,rowNumber);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 347,
        "startColumnNumber" : 2,
        "endLineNumber" : 390,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private FinderPattern parseFoundFinderPattern(BitArray row,int rowNumber,boolean oddPattern){\n  int firstCounter;\n  int start;\n  int end;\n  if (oddPattern) {\n    int firstElementStart=this.startEnd[0] - 1;\n    while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n      firstElementStart--;\n    }\n    firstElementStart++;\n    firstCounter=this.startEnd[0] - firstElementStart;\n    start=firstElementStart;\n    end=this.startEnd[1];\n  }\n else {\n    start=this.startEnd[0];\n    int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n    end=firstElementStart;\n    firstCounter=end - this.startEnd[1];\n  }\n  int[] counters=this.getDecodeFinderCounters();\n  System.arraycopy(counters,0,counters,1,counters.length - 1);\n  counters[0]=firstCounter;\n  int value;\n  try {\n    value=parseFinderValue(counters,FINDER_PATTERNS);\n  }\n catch (  NotFoundException nfe) {\n    return null;\n  }\n  return new FinderPattern(value,new int[]{start,end},start,end,rowNumber);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 372,
        "startColumnNumber" : 6,
        "endLineNumber" : 372,
        "endColumnNumber" : 69
      },
      "nodeContext" : "int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "this.startEnd[1]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 375,
      "startColumnNumber" : 27,
      "endLineNumber" : 375,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 375,
        "startColumnNumber" : 21,
        "endLineNumber" : 375,
        "endColumnNumber" : 43
      },
      "nodeContext" : "end - this.startEnd[1]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 375,
        "startColumnNumber" : 6,
        "endLineNumber" : 375,
        "endColumnNumber" : 43
      },
      "nodeContext" : "firstCounter=end - this.startEnd[1]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 375,
        "startColumnNumber" : 6,
        "endLineNumber" : 375,
        "endColumnNumber" : 44
      },
      "nodeContext" : "firstCounter=end - this.startEnd[1];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 367,
        "startColumnNumber" : 9,
        "endLineNumber" : 376,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  start=this.startEnd[0];\n  int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n  end=firstElementStart;\n  firstCounter=end - this.startEnd[1];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 783,
        "startLineNumber" : 353,
        "startColumnNumber" : 4,
        "endLineNumber" : 376,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (oddPattern) {\n  int firstElementStart=this.startEnd[0] - 1;\n  while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n    firstElementStart--;\n  }\n  firstElementStart++;\n  firstCounter=this.startEnd[0] - firstElementStart;\n  start=firstElementStart;\n  end=this.startEnd[1];\n}\n else {\n  start=this.startEnd[0];\n  int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n  end=firstElementStart;\n  firstCounter=end - this.startEnd[1];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 347,
        "startColumnNumber" : 97,
        "endLineNumber" : 390,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int firstCounter;\n  int start;\n  int end;\n  if (oddPattern) {\n    int firstElementStart=this.startEnd[0] - 1;\n    while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n      firstElementStart--;\n    }\n    firstElementStart++;\n    firstCounter=this.startEnd[0] - firstElementStart;\n    start=firstElementStart;\n    end=this.startEnd[1];\n  }\n else {\n    start=this.startEnd[0];\n    int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n    end=firstElementStart;\n    firstCounter=end - this.startEnd[1];\n  }\n  int[] counters=this.getDecodeFinderCounters();\n  System.arraycopy(counters,0,counters,1,counters.length - 1);\n  counters[0]=firstCounter;\n  int value;\n  try {\n    value=parseFinderValue(counters,FINDER_PATTERNS);\n  }\n catch (  NotFoundException nfe) {\n    return null;\n  }\n  return new FinderPattern(value,new int[]{start,end},start,end,rowNumber);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 347,
        "startColumnNumber" : 2,
        "endLineNumber" : 390,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private FinderPattern parseFoundFinderPattern(BitArray row,int rowNumber,boolean oddPattern){\n  int firstCounter;\n  int start;\n  int end;\n  if (oddPattern) {\n    int firstElementStart=this.startEnd[0] - 1;\n    while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n      firstElementStart--;\n    }\n    firstElementStart++;\n    firstCounter=this.startEnd[0] - firstElementStart;\n    start=firstElementStart;\n    end=this.startEnd[1];\n  }\n else {\n    start=this.startEnd[0];\n    int firstElementStart=row.getNextUnset(this.startEnd[1] + 1);\n    end=firstElementStart;\n    firstCounter=end - this.startEnd[1];\n  }\n  int[] counters=this.getDecodeFinderCounters();\n  System.arraycopy(counters,0,counters,1,counters.length - 1);\n  counters[0]=firstCounter;\n  int value;\n  try {\n    value=parseFinderValue(counters,FINDER_PATTERNS);\n  }\n catch (  NotFoundException nfe) {\n    return null;\n  }\n  return new FinderPattern(value,new int[]{start,end},start,end,rowNumber);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 375,
        "startColumnNumber" : 6,
        "endLineNumber" : 375,
        "endColumnNumber" : 44
      },
      "nodeContext" : "firstCounter=end - this.startEnd[1];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 365,
    "startColumnNumber" : 12,
    "endLineNumber" : 365,
    "endColumnNumber" : 28
  }, {
    "charLength" : 16,
    "startLineNumber" : 372,
    "startColumnNumber" : 47,
    "endLineNumber" : 372,
    "endColumnNumber" : 63
  }, {
    "charLength" : 16,
    "startLineNumber" : 375,
    "startColumnNumber" : 27,
    "endLineNumber" : 375,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}