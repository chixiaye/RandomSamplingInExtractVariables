{
  "id" : 119,
  "expression" : "MockUtil.getMockHandler(invocation.getMock())",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/stubbing/defaultanswers/RetrieveGenericsForDefaultAnswers.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MockUtil.getMockHandler(invocation.getMock())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 95,
      "startColumnNumber" : 16,
      "endLineNumber" : 95,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 79
      },
      "nodeContext" : "MockUtil.getMockHandler(invocation.getMock()).getMockSettings()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 94,
        "startColumnNumber" : 35,
        "endLineNumber" : 95,
        "endColumnNumber" : 79
      },
      "nodeContext" : "mockSettings=MockUtil.getMockHandler(invocation.getMock()).getMockSettings()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 80
      },
      "nodeContext" : "final MockCreationSettings mockSettings=MockUtil.getMockHandler(invocation.getMock()).getMockSettings();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 92,
        "startColumnNumber" : 78,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final MockCreationSettings mockSettings=MockUtil.getMockHandler(invocation.getMock()).getMockSettings();\n  final GenericMetadataSupport returnTypeSupport=GenericMetadataSupport.inferFrom(mockSettings.getTypeToMock()).resolveGenericReturnType(invocation.getMethod());\n  final Class<?> rawType=returnTypeSupport.rawType();\n  if (rawType == Object.class) {\n    return findTypeFromGenericInArguments(invocation,returnType);\n  }\n  return rawType;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1028,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Retrieve the expected type when it came from a primitive. If the type cannot be retrieve, return null.\n * @param invocation the current invocation\n * @param returnType the expected return type\n * @return the type or null if not found\n */\nprivate static Class<?> findTypeFromGeneric(final InvocationOnMock invocation,final TypeVariable returnType){\n  final MockCreationSettings mockSettings=MockUtil.getMockHandler(invocation.getMock()).getMockSettings();\n  final GenericMetadataSupport returnTypeSupport=GenericMetadataSupport.inferFrom(mockSettings.getTypeToMock()).resolveGenericReturnType(invocation.getMethod());\n  final Class<?> rawType=returnTypeSupport.rawType();\n  if (rawType == Object.class) {\n    return findTypeFromGenericInArguments(invocation,returnType);\n  }\n  return rawType;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 79
      },
      "nodeContext" : "MockUtil.getMockHandler(invocation.getMock()).getMockSettings()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "org.mockito.invocation.MockHandler<>"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 95,
    "startColumnNumber" : 16,
    "endLineNumber" : 95,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}