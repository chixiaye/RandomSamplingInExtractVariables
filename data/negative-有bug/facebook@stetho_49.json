{
  "id" : 49,
  "expression" : "DatabasePeerManager",
  "projectName" : "facebook@stetho",
  "commitID" : "fee68519d93899dc5cfe6b992f56916a03b279f2",
  "filePath" : "/stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/Database.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DatabasePeerManager",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 105,
      "startColumnNumber" : 14,
      "endLineNumber" : 105,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 105,
        "startColumnNumber" : 14,
        "endLineNumber" : 105,
        "endColumnNumber" : 54
      },
      "nodeContext" : "DatabasePeerManager.ExecuteResultHandler",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParameterizedType,type]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 105,
        "startColumnNumber" : 14,
        "endLineNumber" : 105,
        "endColumnNumber" : 54
      },
      "nodeContext" : "DatabasePeerManager.ExecuteResultHandler",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 105,
        "startColumnNumber" : 14,
        "endLineNumber" : 105,
        "endColumnNumber" : 74
      },
      "nodeContext" : "DatabasePeerManager.ExecuteResultHandler<ExecuteSQLResponse>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1550,
        "startLineNumber" : 105,
        "startColumnNumber" : 10,
        "endLineNumber" : 139,
        "endColumnNumber" : 7
      },
      "nodeContext" : "new DatabasePeerManager.ExecuteResultHandler<ExecuteSQLResponse>(){\n  @Override public ExecuteSQLResponse handleRawQuery() throws SQLiteException {\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.columnNames=Arrays.asList(\"success\");\n    response.values=Arrays.asList((Object)\"true\");\n    return response;\n  }\n  @Override public ExecuteSQLResponse handleSelect(  Cursor result) throws SQLiteException {\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.columnNames=Arrays.asList(result.getColumnNames());\n    response.values=flattenRows(result,MAX_EXECUTE_RESULTS);\n    return response;\n  }\n  @Override public ExecuteSQLResponse handleInsert(  long insertedId) throws SQLiteException {\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.columnNames=Arrays.asList(\"ID of last inserted row\");\n    response.values=Arrays.asList((Object)insertedId);\n    return response;\n  }\n  @Override public ExecuteSQLResponse handleUpdateDelete(  int count) throws SQLiteException {\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.columnNames=Arrays.asList(\"Modified rows\");\n    response.values=Arrays.asList((Object)count);\n    return response;\n  }\n}\n",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 182,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1628,
        "startLineNumber" : 104,
        "startColumnNumber" : 13,
        "endLineNumber" : 139,
        "endColumnNumber" : 8
      },
      "nodeContext" : "mDatabasePeerManager.executeSQL(request.databaseId,request.query,new DatabasePeerManager.ExecuteResultHandler<ExecuteSQLResponse>(){\n  @Override public ExecuteSQLResponse handleRawQuery() throws SQLiteException {\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.columnNames=Arrays.asList(\"success\");\n    response.values=Arrays.asList((Object)\"true\");\n    return response;\n  }\n  @Override public ExecuteSQLResponse handleSelect(  Cursor result) throws SQLiteException {\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.columnNames=Arrays.asList(result.getColumnNames());\n    response.values=flattenRows(result,MAX_EXECUTE_RESULTS);\n    return response;\n  }\n  @Override public ExecuteSQLResponse handleInsert(  long insertedId) throws SQLiteException {\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.columnNames=Arrays.asList(\"ID of last inserted row\");\n    response.values=Arrays.asList((Object)insertedId);\n    return response;\n  }\n  @Override public ExecuteSQLResponse handleUpdateDelete(  int count) throws SQLiteException {\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.columnNames=Arrays.asList(\"Modified rows\");\n    response.values=Arrays.asList((Object)count);\n    return response;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1636,
        "startLineNumber" : 104,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "return mDatabasePeerManager.executeSQL(request.databaseId,request.query,new DatabasePeerManager.ExecuteResultHandler<ExecuteSQLResponse>(){\n  @Override public ExecuteSQLResponse handleRawQuery() throws SQLiteException {\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.columnNames=Arrays.asList(\"success\");\n    response.values=Arrays.asList((Object)\"true\");\n    return response;\n  }\n  @Override public ExecuteSQLResponse handleSelect(  Cursor result) throws SQLiteException {\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.columnNames=Arrays.asList(result.getColumnNames());\n    response.values=flattenRows(result,MAX_EXECUTE_RESULTS);\n    return response;\n  }\n  @Override public ExecuteSQLResponse handleInsert(  long insertedId) throws SQLiteException {\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.columnNames=Arrays.asList(\"ID of last inserted row\");\n    response.values=Arrays.asList((Object)insertedId);\n    return response;\n  }\n  @Override public ExecuteSQLResponse handleUpdateDelete(  int count) throws SQLiteException {\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.columnNames=Arrays.asList(\"Modified rows\");\n    response.values=Arrays.asList((Object)count);\n    return response;\n  }\n}\n);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 192,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1650,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return mDatabasePeerManager.executeSQL(request.databaseId,request.query,new DatabasePeerManager.ExecuteResultHandler<ExecuteSQLResponse>(){\n    @Override public ExecuteSQLResponse handleRawQuery() throws SQLiteException {\n      ExecuteSQLResponse response=new ExecuteSQLResponse();\n      response.columnNames=Arrays.asList(\"success\");\n      response.values=Arrays.asList((Object)\"true\");\n      return response;\n    }\n    @Override public ExecuteSQLResponse handleSelect(    Cursor result) throws SQLiteException {\n      ExecuteSQLResponse response=new ExecuteSQLResponse();\n      response.columnNames=Arrays.asList(result.getColumnNames());\n      response.values=flattenRows(result,MAX_EXECUTE_RESULTS);\n      return response;\n    }\n    @Override public ExecuteSQLResponse handleInsert(    long insertedId) throws SQLiteException {\n      ExecuteSQLResponse response=new ExecuteSQLResponse();\n      response.columnNames=Arrays.asList(\"ID of last inserted row\");\n      response.values=Arrays.asList((Object)insertedId);\n      return response;\n    }\n    @Override public ExecuteSQLResponse handleUpdateDelete(    int count) throws SQLiteException {\n      ExecuteSQLResponse response=new ExecuteSQLResponse();\n      response.columnNames=Arrays.asList(\"Modified rows\");\n      response.values=Arrays.asList((Object)count);\n      return response;\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1899,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  return mDatabasePeerManager.executeSQL(request.databaseId,request.query,new DatabasePeerManager.ExecuteResultHandler<ExecuteSQLResponse>(){\n    @Override public ExecuteSQLResponse handleRawQuery() throws SQLiteException {\n      ExecuteSQLResponse response=new ExecuteSQLResponse();\n      response.columnNames=Arrays.asList(\"success\");\n      response.values=Arrays.asList((Object)\"true\");\n      return response;\n    }\n    @Override public ExecuteSQLResponse handleSelect(    Cursor result) throws SQLiteException {\n      ExecuteSQLResponse response=new ExecuteSQLResponse();\n      response.columnNames=Arrays.asList(result.getColumnNames());\n      response.values=flattenRows(result,MAX_EXECUTE_RESULTS);\n      return response;\n    }\n    @Override public ExecuteSQLResponse handleInsert(    long insertedId) throws SQLiteException {\n      ExecuteSQLResponse response=new ExecuteSQLResponse();\n      response.columnNames=Arrays.asList(\"ID of last inserted row\");\n      response.values=Arrays.asList((Object)insertedId);\n      return response;\n    }\n    @Override public ExecuteSQLResponse handleUpdateDelete(    int count) throws SQLiteException {\n      ExecuteSQLResponse response=new ExecuteSQLResponse();\n      response.columnNames=Arrays.asList(\"Modified rows\");\n      response.values=Arrays.asList((Object)count);\n      return response;\n    }\n  }\n);\n}\n catch (SQLiteException e) {\n  Error error=new Error();\n  error.code=0;\n  error.message=e.getMessage();\n  ExecuteSQLResponse response=new ExecuteSQLResponse();\n  response.sqlError=error;\n  return response;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 238,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2010,
        "startLineNumber" : 100,
        "startColumnNumber" : 71,
        "endLineNumber" : 148,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ExecuteSQLRequest request=mObjectMapper.convertValue(params,ExecuteSQLRequest.class);\n  try {\n    return mDatabasePeerManager.executeSQL(request.databaseId,request.query,new DatabasePeerManager.ExecuteResultHandler<ExecuteSQLResponse>(){\n      @Override public ExecuteSQLResponse handleRawQuery() throws SQLiteException {\n        ExecuteSQLResponse response=new ExecuteSQLResponse();\n        response.columnNames=Arrays.asList(\"success\");\n        response.values=Arrays.asList((Object)\"true\");\n        return response;\n      }\n      @Override public ExecuteSQLResponse handleSelect(      Cursor result) throws SQLiteException {\n        ExecuteSQLResponse response=new ExecuteSQLResponse();\n        response.columnNames=Arrays.asList(result.getColumnNames());\n        response.values=flattenRows(result,MAX_EXECUTE_RESULTS);\n        return response;\n      }\n      @Override public ExecuteSQLResponse handleInsert(      long insertedId) throws SQLiteException {\n        ExecuteSQLResponse response=new ExecuteSQLResponse();\n        response.columnNames=Arrays.asList(\"ID of last inserted row\");\n        response.values=Arrays.asList((Object)insertedId);\n        return response;\n      }\n      @Override public ExecuteSQLResponse handleUpdateDelete(      int count) throws SQLiteException {\n        ExecuteSQLResponse response=new ExecuteSQLResponse();\n        response.columnNames=Arrays.asList(\"Modified rows\");\n        response.values=Arrays.asList((Object)count);\n        return response;\n      }\n    }\n);\n  }\n catch (  SQLiteException e) {\n    Error error=new Error();\n    error.code=0;\n    error.message=e.getMessage();\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.sqlError=error;\n    return response;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 251,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2103,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 148,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@ChromeDevtoolsMethod public JsonRpcResult executeSQL(JsonRpcPeer peer,JSONObject params){\n  ExecuteSQLRequest request=mObjectMapper.convertValue(params,ExecuteSQLRequest.class);\n  try {\n    return mDatabasePeerManager.executeSQL(request.databaseId,request.query,new DatabasePeerManager.ExecuteResultHandler<ExecuteSQLResponse>(){\n      @Override public ExecuteSQLResponse handleRawQuery() throws SQLiteException {\n        ExecuteSQLResponse response=new ExecuteSQLResponse();\n        response.columnNames=Arrays.asList(\"success\");\n        response.values=Arrays.asList((Object)\"true\");\n        return response;\n      }\n      @Override public ExecuteSQLResponse handleSelect(      Cursor result) throws SQLiteException {\n        ExecuteSQLResponse response=new ExecuteSQLResponse();\n        response.columnNames=Arrays.asList(result.getColumnNames());\n        response.values=flattenRows(result,MAX_EXECUTE_RESULTS);\n        return response;\n      }\n      @Override public ExecuteSQLResponse handleInsert(      long insertedId) throws SQLiteException {\n        ExecuteSQLResponse response=new ExecuteSQLResponse();\n        response.columnNames=Arrays.asList(\"ID of last inserted row\");\n        response.values=Arrays.asList((Object)insertedId);\n        return response;\n      }\n      @Override public ExecuteSQLResponse handleUpdateDelete(      int count) throws SQLiteException {\n        ExecuteSQLResponse response=new ExecuteSQLResponse();\n        response.columnNames=Arrays.asList(\"Modified rows\");\n        response.values=Arrays.asList((Object)count);\n        return response;\n      }\n    }\n);\n  }\n catch (  SQLiteException e) {\n    Error error=new Error();\n    error.code=0;\n    error.message=e.getMessage();\n    ExecuteSQLResponse response=new ExecuteSQLResponse();\n    response.sqlError=error;\n    return response;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 266,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 105,
        "startColumnNumber" : 14,
        "endLineNumber" : 105,
        "endColumnNumber" : 74
      },
      "nodeContext" : "DatabasePeerManager.ExecuteResultHandler<ExecuteSQLResponse>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.facebook.stetho.inspector.database.DatabasePeerManager"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 105,
    "startColumnNumber" : 14,
    "endLineNumber" : 105,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}