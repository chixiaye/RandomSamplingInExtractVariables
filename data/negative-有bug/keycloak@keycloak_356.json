{
  "id" : 356,
  "expression" : "session.keys().getKeysStream(realm,KeyUse.SIG,Algorithm.RS256)",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/protocol/saml/SamlService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "session.keys().getKeysStream(realm,KeyUse.SIG,Algorithm.RS256)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 64,
      "startLineNumber" : 845,
      "startColumnNumber" : 40,
      "endLineNumber" : 845,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 12,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 845,
        "startColumnNumber" : 40,
        "endLineNumber" : 846,
        "endColumnNumber" : 53
      },
      "nodeContext" : "session.keys().getKeysStream(realm,KeyUse.SIG,Algorithm.RS256).sorted(SamlService::compareKeys)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 845,
        "startColumnNumber" : 40,
        "endLineNumber" : 854,
        "endColumnNumber" : 22
      },
      "nodeContext" : "session.keys().getKeysStream(realm,KeyUse.SIG,Algorithm.RS256).sorted(SamlService::compareKeys).map(key -> {\n  try {\n    return IDPMetadataDescriptor.buildKeyInfoElement(key.getKid(),PemUtils.encodeCertificate(key.getCertificate()));\n  }\n catch (  ParserConfigurationException e) {\n    throw new RuntimeException(e);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 49,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 845,
        "startColumnNumber" : 40,
        "endLineNumber" : 855,
        "endColumnNumber" : 49
      },
      "nodeContext" : "session.keys().getKeysStream(realm,KeyUse.SIG,Algorithm.RS256).sorted(SamlService::compareKeys).map(key -> {\n  try {\n    return IDPMetadataDescriptor.buildKeyInfoElement(key.getKid(),PemUtils.encodeCertificate(key.getCertificate()));\n  }\n catch (  ParserConfigurationException e) {\n    throw new RuntimeException(e);\n  }\n}\n).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 54,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 600,
        "startLineNumber" : 845,
        "startColumnNumber" : 26,
        "endLineNumber" : 855,
        "endColumnNumber" : 49
      },
      "nodeContext" : "signingKeys=session.keys().getKeysStream(realm,KeyUse.SIG,Algorithm.RS256).sorted(SamlService::compareKeys).map(key -> {\n  try {\n    return IDPMetadataDescriptor.buildKeyInfoElement(key.getKid(),PemUtils.encodeCertificate(key.getCertificate()));\n  }\n catch (  ParserConfigurationException e) {\n    throw new RuntimeException(e);\n  }\n}\n).collect(Collectors.toList())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 56,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 845,
        "startColumnNumber" : 12,
        "endLineNumber" : 855,
        "endColumnNumber" : 50
      },
      "nodeContext" : "List<Element> signingKeys=session.keys().getKeysStream(realm,KeyUse.SIG,Algorithm.RS256).sorted(SamlService::compareKeys).map(key -> {\n  try {\n    return IDPMetadataDescriptor.buildKeyInfoElement(key.getKid(),PemUtils.encodeCertificate(key.getCertificate()));\n  }\n catch (  ParserConfigurationException e) {\n    throw new RuntimeException(e);\n  }\n}\n).collect(Collectors.toList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 62,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1336,
        "startLineNumber" : 844,
        "startColumnNumber" : 12,
        "endLineNumber" : 866,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<Element> signingKeys=session.keys().getKeysStream(realm,KeyUse.SIG,Algorithm.RS256).sorted(SamlService::compareKeys).map(key -> {\n    try {\n      return IDPMetadataDescriptor.buildKeyInfoElement(key.getKid(),PemUtils.encodeCertificate(key.getCertificate()));\n    }\n catch (    ParserConfigurationException e) {\n      throw new RuntimeException(e);\n    }\n  }\n).collect(Collectors.toList());\n  return IDPMetadataDescriptor.getIDPDescriptor(RealmsResource.protocolUrl(uriInfo).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.protocolUrl(uriInfo).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.protocolUrl(uriInfo).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.protocolUrl(uriInfo).path(SamlService.ARTIFACT_RESOLUTION_SERVICE_PATH).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.realmBaseUrl(uriInfo).build(realm.getName()).toString(),true,signingKeys);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1458,
        "startLineNumber" : 844,
        "startColumnNumber" : 8,
        "endLineNumber" : 869,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  List<Element> signingKeys=session.keys().getKeysStream(realm,KeyUse.SIG,Algorithm.RS256).sorted(SamlService::compareKeys).map(key -> {\n    try {\n      return IDPMetadataDescriptor.buildKeyInfoElement(key.getKid(),PemUtils.encodeCertificate(key.getCertificate()));\n    }\n catch (    ParserConfigurationException e) {\n      throw new RuntimeException(e);\n    }\n  }\n).collect(Collectors.toList());\n  return IDPMetadataDescriptor.getIDPDescriptor(RealmsResource.protocolUrl(uriInfo).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.protocolUrl(uriInfo).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.protocolUrl(uriInfo).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.protocolUrl(uriInfo).path(SamlService.ARTIFACT_RESOLUTION_SERVICE_PATH).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.realmBaseUrl(uriInfo).build(realm.getName()).toString(),true,signingKeys);\n}\n catch (Exception ex) {\n  logger.error(\"Cannot generate IdP metadata\",ex);\n  return \"\";\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 148,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1474,
        "startLineNumber" : 843,
        "startColumnNumber" : 110,
        "endLineNumber" : 870,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    List<Element> signingKeys=session.keys().getKeysStream(realm,KeyUse.SIG,Algorithm.RS256).sorted(SamlService::compareKeys).map(key -> {\n      try {\n        return IDPMetadataDescriptor.buildKeyInfoElement(key.getKid(),PemUtils.encodeCertificate(key.getCertificate()));\n      }\n catch (      ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      }\n    }\n).collect(Collectors.toList());\n    return IDPMetadataDescriptor.getIDPDescriptor(RealmsResource.protocolUrl(uriInfo).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.protocolUrl(uriInfo).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.protocolUrl(uriInfo).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.protocolUrl(uriInfo).path(SamlService.ARTIFACT_RESOLUTION_SERVICE_PATH).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.realmBaseUrl(uriInfo).build(realm.getName()).toString(),true,signingKeys);\n  }\n catch (  Exception ex) {\n    logger.error(\"Cannot generate IdP metadata\",ex);\n    return \"\";\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1580,
        "startLineNumber" : 843,
        "startColumnNumber" : 4,
        "endLineNumber" : 870,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String getIDPMetadataDescriptor(UriInfo uriInfo,KeycloakSession session,RealmModel realm){\n  try {\n    List<Element> signingKeys=session.keys().getKeysStream(realm,KeyUse.SIG,Algorithm.RS256).sorted(SamlService::compareKeys).map(key -> {\n      try {\n        return IDPMetadataDescriptor.buildKeyInfoElement(key.getKid(),PemUtils.encodeCertificate(key.getCertificate()));\n      }\n catch (      ParserConfigurationException e) {\n        throw new RuntimeException(e);\n      }\n    }\n).collect(Collectors.toList());\n    return IDPMetadataDescriptor.getIDPDescriptor(RealmsResource.protocolUrl(uriInfo).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.protocolUrl(uriInfo).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.protocolUrl(uriInfo).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.protocolUrl(uriInfo).path(SamlService.ARTIFACT_RESOLUTION_SERVICE_PATH).build(realm.getName(),SamlProtocol.LOGIN_PROTOCOL),RealmsResource.realmBaseUrl(uriInfo).build(realm.getName()).toString(),true,signingKeys);\n  }\n catch (  Exception ex) {\n    logger.error(\"Cannot generate IdP metadata\",ex);\n    return \"\";\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 845,
        "startColumnNumber" : 40,
        "endLineNumber" : 846,
        "endColumnNumber" : 53
      },
      "nodeContext" : "session.keys().getKeysStream(realm,KeyUse.SIG,Algorithm.RS256).sorted(SamlService::compareKeys)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    },
    "tokenLength" : 8,
    "type" : "java.util.stream.Stream<org.keycloak.crypto.KeyWrapper>"
  } ],
  "positionList" : [ {
    "charLength" : 64,
    "startLineNumber" : 845,
    "startColumnNumber" : 40,
    "endLineNumber" : 845,
    "endColumnNumber" : 104
  } ],
  "layoutRelationDataList" : [ ]
}