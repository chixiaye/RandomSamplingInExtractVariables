{
  "id" : 116,
  "expression" : "scratch.readLittleEndianUnsignedShort()",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/extractor/wav/WavExtractor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "scratch.readLittleEndianUnsignedShort()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 351,
      "startColumnNumber" : 23,
      "endLineNumber" : 351,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 351,
        "startColumnNumber" : 6,
        "endLineNumber" : 351,
        "endColumnNumber" : 62
      },
      "nodeContext" : "framesPerBlock=scratch.readLittleEndianUnsignedShort()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 351,
        "startColumnNumber" : 6,
        "endLineNumber" : 351,
        "endColumnNumber" : 63
      },
      "nodeContext" : "framesPerBlock=scratch.readLittleEndianUnsignedShort();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2307,
        "startLineNumber" : 343,
        "startColumnNumber" : 31,
        "endLineNumber" : 389,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.extractorOutput=extractorOutput;\n  this.trackOutput=trackOutput;\n  this.header=header;\n  targetSampleSizeFrames=Math.max(1,header.frameRateHz / TARGET_SAMPLES_PER_SECOND);\n  ParsableByteArray scratch=new ParsableByteArray(header.extraData);\n  scratch.readLittleEndianUnsignedShort();\n  framesPerBlock=scratch.readLittleEndianUnsignedShort();\n  int numChannels=header.numChannels;\n  int expectedFramesPerBlock=(((header.blockSize - (4 * numChannels)) * 8) / (header.bitsPerSample * numChannels)) + 1;\n  if (framesPerBlock != expectedFramesPerBlock) {\n    throw new ParserException(\"Expected frames per block: \" + expectedFramesPerBlock + \"; got: \"+ framesPerBlock);\n  }\n  int maxBlocksToDecode=Util.ceilDivide(targetSampleSizeFrames,framesPerBlock);\n  inputData=new byte[maxBlocksToDecode * header.blockSize];\n  decodedData=new ParsableByteArray(maxBlocksToDecode * numOutputFramesToBytes(framesPerBlock,numChannels));\n  int bitrate=header.frameRateHz * header.blockSize * 8 / framesPerBlock;\n  format=Format.createAudioSampleFormat(null,MimeTypes.AUDIO_RAW,null,bitrate,numOutputFramesToBytes(targetSampleSizeFrames,numChannels),header.numChannels,header.frameRateHz,C.ENCODING_PCM_16BIT,null,null,0,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2451,
        "startLineNumber" : 341,
        "startColumnNumber" : 4,
        "endLineNumber" : 389,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ImaAdPcmOutputWriter(ExtractorOutput extractorOutput,TrackOutput trackOutput,WavHeader header) throws ParserException {\n  this.extractorOutput=extractorOutput;\n  this.trackOutput=trackOutput;\n  this.header=header;\n  targetSampleSizeFrames=Math.max(1,header.frameRateHz / TARGET_SAMPLES_PER_SECOND);\n  ParsableByteArray scratch=new ParsableByteArray(header.extraData);\n  scratch.readLittleEndianUnsignedShort();\n  framesPerBlock=scratch.readLittleEndianUnsignedShort();\n  int numChannels=header.numChannels;\n  int expectedFramesPerBlock=(((header.blockSize - (4 * numChannels)) * 8) / (header.bitsPerSample * numChannels)) + 1;\n  if (framesPerBlock != expectedFramesPerBlock) {\n    throw new ParserException(\"Expected frames per block: \" + expectedFramesPerBlock + \"; got: \"+ framesPerBlock);\n  }\n  int maxBlocksToDecode=Util.ceilDivide(targetSampleSizeFrames,framesPerBlock);\n  inputData=new byte[maxBlocksToDecode * header.blockSize];\n  decodedData=new ParsableByteArray(maxBlocksToDecode * numOutputFramesToBytes(framesPerBlock,numChannels));\n  int bitrate=header.frameRateHz * header.blockSize * 8 / framesPerBlock;\n  format=Format.createAudioSampleFormat(null,MimeTypes.AUDIO_RAW,null,bitrate,numOutputFramesToBytes(targetSampleSizeFrames,numChannels),header.numChannels,header.frameRateHz,C.ENCODING_PCM_16BIT,null,null,0,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 351,
        "startColumnNumber" : 6,
        "endLineNumber" : 351,
        "endColumnNumber" : 63
      },
      "nodeContext" : "framesPerBlock=scratch.readLittleEndianUnsignedShort();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 351,
    "startColumnNumber" : 23,
    "endLineNumber" : 351,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}