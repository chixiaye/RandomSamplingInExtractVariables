{
  "id" : 385,
  "expression" : "Position",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/state/internals/StoreQueryUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Position",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 384,
      "startColumnNumber" : 15,
      "endLineNumber" : 384,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 384,
        "startColumnNumber" : 15,
        "endLineNumber" : 384,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Position.fromMap(pos)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 384,
        "startColumnNumber" : 8,
        "endLineNumber" : 384,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return Position.fromMap(pos);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 377,
        "startColumnNumber" : 105,
        "endLineNumber" : 385,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<String,Map<Integer,Long>> pos=new HashMap<>();\n  for (  final Entry<TopicPartition,Long> e : topicPartitions.entrySet()) {\n    pos.computeIfAbsent(e.getKey().topic(),t -> new HashMap<>()).put(e.getKey().partition(),e.getValue());\n  }\n  return Position.fromMap(pos);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 377,
        "startColumnNumber" : 4,
        "endLineNumber" : 385,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Position topicPartitionMapToPosition(final Map<TopicPartition,Long> topicPartitions){\n  final Map<String,Map<Integer,Long>> pos=new HashMap<>();\n  for (  final Entry<TopicPartition,Long> e : topicPartitions.entrySet()) {\n    pos.computeIfAbsent(e.getKey().topic(),t -> new HashMap<>()).put(e.getKey().partition(),e.getValue());\n  }\n  return Position.fromMap(pos);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 384,
        "startColumnNumber" : 8,
        "endLineNumber" : 384,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return Position.fromMap(pos);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.query.Position"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 384,
    "startColumnNumber" : 15,
    "endLineNumber" : 384,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}