{
  "id" : 61,
  "expression" : "key",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/searches/IterativeBinarySearch.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "key",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 44,
      "startColumnNumber" : 18,
      "endLineNumber" : 44,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 44,
        "startColumnNumber" : 18,
        "endLineNumber" : 44,
        "endColumnNumber" : 41
      },
      "nodeContext" : "key.compareTo(array[k])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 41
      },
      "nodeContext" : "cmp=key.compareTo(array[k])",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 42
      },
      "nodeContext" : "cmp=key.compareTo(array[k]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 42,
        "startColumnNumber" : 23,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  k=(l + r) >>> 1;\n  cmp=key.compareTo(array[k]);\n  if (cmp == 0) {\n    return k;\n  }\n else   if (cmp < 0) {\n    r=--k;\n  }\n else {\n    l=++k;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (l <= r) {\n  k=(l + r) >>> 1;\n  cmp=key.compareTo(array[k]);\n  if (cmp == 0) {\n    return k;\n  }\n else   if (cmp < 0) {\n    r=--k;\n  }\n else {\n    l=++k;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 403,
        "startLineNumber" : 36,
        "startColumnNumber" : 64,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int l, r, k, cmp;\n  l=0;\n  r=array.length - 1;\n  while (l <= r) {\n    k=(l + r) >>> 1;\n    cmp=key.compareTo(array[k]);\n    if (cmp == 0) {\n      return k;\n    }\n else     if (cmp < 0) {\n      r=--k;\n    }\n else {\n      l=++k;\n    }\n  }\n  return -1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method implements an iterative version of binary search algorithm\n * @param array a sorted array\n * @param key the key to search in array\n * @return the index of key in the array or -1 if not found\n */\n@Override public <T extends Comparable<T>>int find(T[] array,T key){\n  int l, r, k, cmp;\n  l=0;\n  r=array.length - 1;\n  while (l <= r) {\n    k=(l + r) >>> 1;\n    cmp=key.compareTo(array[k]);\n    if (cmp == 0) {\n      return k;\n    }\n else     if (cmp < 0) {\n      r=--k;\n    }\n else {\n      l=++k;\n    }\n  }\n  return -1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 42
      },
      "nodeContext" : "cmp=key.compareTo(array[k]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 44,
    "startColumnNumber" : 18,
    "endLineNumber" : 44,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}