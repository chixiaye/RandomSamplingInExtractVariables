{
  "id" : 87,
  "expression" : "distance(patterns[0],patterns[2])",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/ResultPoint.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "distance(patterns[0],patterns[2])",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 77,
      "startColumnNumber" : 28,
      "endLineNumber" : 77,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 77,
        "startColumnNumber" : 10,
        "endLineNumber" : 77,
        "endColumnNumber" : 62
      },
      "nodeContext" : "zeroTwoDistance=distance(patterns[0],patterns[2])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 63
      },
      "nodeContext" : "float zeroTwoDistance=distance(patterns[0],patterns[2]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1375,
        "startLineNumber" : 72,
        "startColumnNumber" : 63,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  float zeroOneDistance=distance(patterns[0],patterns[1]);\n  float oneTwoDistance=distance(patterns[1],patterns[2]);\n  float zeroTwoDistance=distance(patterns[0],patterns[2]);\n  ResultPoint pointA;\n  ResultPoint pointB;\n  ResultPoint pointC;\n  if (oneTwoDistance >= zeroOneDistance && oneTwoDistance >= zeroTwoDistance) {\n    pointB=patterns[0];\n    pointA=patterns[1];\n    pointC=patterns[2];\n  }\n else   if (zeroTwoDistance >= oneTwoDistance && zeroTwoDistance >= zeroOneDistance) {\n    pointB=patterns[1];\n    pointA=patterns[0];\n    pointC=patterns[2];\n  }\n else {\n    pointB=patterns[2];\n    pointA=patterns[0];\n    pointC=patterns[1];\n  }\n  if (crossProductZ(pointA,pointB,pointC) < 0.0f) {\n    ResultPoint temp=pointA;\n    pointA=pointC;\n    pointC=temp;\n  }\n  patterns[0]=pointA;\n  patterns[1]=pointB;\n  patterns[2]=pointC;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1611,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p>Orders an array of three ResultPoints in an order [A,B,C] such that AB < AC and BC < AC and the angle between BC and BA is less than 180 degrees.\n */\npublic static void orderBestPatterns(ResultPoint[] patterns){\n  float zeroOneDistance=distance(patterns[0],patterns[1]);\n  float oneTwoDistance=distance(patterns[1],patterns[2]);\n  float zeroTwoDistance=distance(patterns[0],patterns[2]);\n  ResultPoint pointA;\n  ResultPoint pointB;\n  ResultPoint pointC;\n  if (oneTwoDistance >= zeroOneDistance && oneTwoDistance >= zeroTwoDistance) {\n    pointB=patterns[0];\n    pointA=patterns[1];\n    pointC=patterns[2];\n  }\n else   if (zeroTwoDistance >= oneTwoDistance && zeroTwoDistance >= zeroOneDistance) {\n    pointB=patterns[1];\n    pointA=patterns[0];\n    pointC=patterns[2];\n  }\n else {\n    pointB=patterns[2];\n    pointA=patterns[0];\n    pointC=patterns[1];\n  }\n  if (crossProductZ(pointA,pointB,pointC) < 0.0f) {\n    ResultPoint temp=pointA;\n    pointA=pointC;\n    pointC=temp;\n  }\n  patterns[0]=pointA;\n  patterns[1]=pointB;\n  patterns[2]=pointC;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 63
      },
      "nodeContext" : "float zeroTwoDistance=distance(patterns[0],patterns[2]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 77,
    "startColumnNumber" : 28,
    "endLineNumber" : 77,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}