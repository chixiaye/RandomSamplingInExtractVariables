{
  "id" : 500,
  "expression" : "template.length() + 16 * args.length",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/fbcore/src/main/java/com/facebook/common/internal/Preconditions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "template.length() + 16 * args.length",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 416,
      "startColumnNumber" : 46,
      "endLineNumber" : 416,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 416,
        "startColumnNumber" : 28,
        "endLineNumber" : 416,
        "endColumnNumber" : 83
      },
      "nodeContext" : "new StringBuilder(template.length() + 16 * args.length)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 416,
        "startColumnNumber" : 18,
        "endLineNumber" : 416,
        "endColumnNumber" : 83
      },
      "nodeContext" : "builder=new StringBuilder(template.length() + 16 * args.length)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 416,
        "startColumnNumber" : 4,
        "endLineNumber" : 416,
        "endColumnNumber" : 84
      },
      "nodeContext" : "StringBuilder builder=new StringBuilder(template.length() + 16 * args.length);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 412,
        "startColumnNumber" : 76,
        "endLineNumber" : 442,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  template=String.valueOf(template);\n  StringBuilder builder=new StringBuilder(template.length() + 16 * args.length);\n  int templateStart=0;\n  int i=0;\n  while (i < args.length) {\n    int placeholderStart=template.indexOf(\"%s\",templateStart);\n    if (placeholderStart == -1) {\n      break;\n    }\n    builder.append(template.substring(templateStart,placeholderStart));\n    builder.append(args[i++]);\n    templateStart=placeholderStart + 2;\n  }\n  builder.append(template.substring(templateStart));\n  if (i < args.length) {\n    builder.append(\" [\");\n    builder.append(args[i++]);\n    while (i < args.length) {\n      builder.append(\", \");\n      builder.append(args[i++]);\n    }\n    builder.append(']');\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1703,
        "startLineNumber" : 401,
        "startColumnNumber" : 2,
        "endLineNumber" : 442,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Substitutes each  {@code %s} in {@code template} with an argument. These are matched byposition: the first  {@code %s} gets {@code args[0]}, etc. If there are more arguments than placeholders, the unmatched arguments will be appended to the end of the formatted message in square braces.\n * @param template a non-null string containing 0 or more {@code %s} placeholders.\n * @param args the arguments to be substituted into the message template. Arguments are convertedto strings using  {@link String#valueOf(Object)}. Arguments can be null.\n */\nstatic String format(@Nullable String template,@Nullable Object... args){\n  template=String.valueOf(template);\n  StringBuilder builder=new StringBuilder(template.length() + 16 * args.length);\n  int templateStart=0;\n  int i=0;\n  while (i < args.length) {\n    int placeholderStart=template.indexOf(\"%s\",templateStart);\n    if (placeholderStart == -1) {\n      break;\n    }\n    builder.append(template.substring(templateStart,placeholderStart));\n    builder.append(args[i++]);\n    templateStart=placeholderStart + 2;\n  }\n  builder.append(template.substring(templateStart));\n  if (i < args.length) {\n    builder.append(\" [\");\n    builder.append(args[i++]);\n    while (i < args.length) {\n      builder.append(\", \");\n      builder.append(args[i++]);\n    }\n    builder.append(']');\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 416,
        "startColumnNumber" : 4,
        "endLineNumber" : 416,
        "endColumnNumber" : 84
      },
      "nodeContext" : "StringBuilder builder=new StringBuilder(template.length() + 16 * args.length);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 7,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 416,
    "startColumnNumber" : 46,
    "endLineNumber" : 416,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}