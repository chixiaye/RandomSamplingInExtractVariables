{
  "id" : 100,
  "expression" : "new Double(Double.NEGATIVE_INFINITY)",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Double(Double.NEGATIVE_INFINITY)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 165,
      "startColumnNumber" : 19,
      "endLineNumber" : 165,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 165,
        "startColumnNumber" : 6,
        "endLineNumber" : 165,
        "endColumnNumber" : 56
      },
      "nodeContext" : "writer.value(new Double(Double.NEGATIVE_INFINITY))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 165,
        "startColumnNumber" : 6,
        "endLineNumber" : 165,
        "endColumnNumber" : 57
      },
      "nodeContext" : "writer.value(new Double(Double.NEGATIVE_INFINITY));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 164,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  writer.value(new Double(Double.NEGATIVE_INFINITY));\n  fail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  writer.value(new Double(Double.NEGATIVE_INFINITY));\n  fail();\n}\n catch (IllegalArgumentException expected) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 155,
        "startColumnNumber" : 68,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  JsonTreeWriter writer=new JsonTreeWriter();\n  writer.setLenient(false);\n  writer.beginArray();\n  try {\n    writer.value(new Double(Double.NaN));\n    fail();\n  }\n catch (  IllegalArgumentException expected) {\n  }\n  try {\n    writer.value(new Double(Double.NEGATIVE_INFINITY));\n    fail();\n  }\n catch (  IllegalArgumentException expected) {\n  }\n  try {\n    writer.value(new Double(Double.POSITIVE_INFINITY));\n    fail();\n  }\n catch (  IllegalArgumentException expected) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testStrictBoxedNansAndInfinities() throws IOException {\n  JsonTreeWriter writer=new JsonTreeWriter();\n  writer.setLenient(false);\n  writer.beginArray();\n  try {\n    writer.value(new Double(Double.NaN));\n    fail();\n  }\n catch (  IllegalArgumentException expected) {\n  }\n  try {\n    writer.value(new Double(Double.NEGATIVE_INFINITY));\n    fail();\n  }\n catch (  IllegalArgumentException expected) {\n  }\n  try {\n    writer.value(new Double(Double.POSITIVE_INFINITY));\n    fail();\n  }\n catch (  IllegalArgumentException expected) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 165,
        "startColumnNumber" : 6,
        "endLineNumber" : 165,
        "endColumnNumber" : 57
      },
      "nodeContext" : "writer.value(new Double(Double.NEGATIVE_INFINITY));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.Double"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 165,
    "startColumnNumber" : 19,
    "endLineNumber" : 165,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}