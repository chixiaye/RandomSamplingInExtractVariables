{
  "id" : 123,
  "expression" : "\"Submitting requests after collapser is shutdown\"",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/main/java/com/netflix/hystrix/collapser/RequestCollapser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Submitting requests after collapser is shutdown\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 90,
      "startColumnNumber" : 66,
      "endLineNumber" : 90,
      "endColumnNumber" : 115
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 90,
        "startColumnNumber" : 40,
        "endLineNumber" : 90,
        "endColumnNumber" : 116
      },
      "nodeContext" : "new IllegalStateException(\"Submitting requests after collapser is shutdown\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 90,
        "startColumnNumber" : 23,
        "endLineNumber" : 90,
        "endColumnNumber" : 117
      },
      "nodeContext" : "Observable.error(new IllegalStateException(\"Submitting requests after collapser is shutdown\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 118
      },
      "nodeContext" : "return Observable.error(new IllegalStateException(\"Submitting requests after collapser is shutdown\"));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 89,
        "startColumnNumber" : 27,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return Observable.error(new IllegalStateException(\"Submitting requests after collapser is shutdown\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (b == null) {\n  return Observable.error(new IllegalStateException(\"Submitting requests after collapser is shutdown\"));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 871,
        "startLineNumber" : 87,
        "startColumnNumber" : 21,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final RequestBatch<BatchReturnType,ResponseType,RequestArgumentType> b=batch.get();\n  if (b == null) {\n    return Observable.error(new IllegalStateException(\"Submitting requests after collapser is shutdown\"));\n  }\n  final Observable<ResponseType> response;\n  if (arg != null) {\n    response=b.offer(arg);\n  }\n else {\n    response=b.offer((RequestArgumentType)NULL_SENTINEL);\n  }\n  if (response != null) {\n    return response;\n  }\n else {\n    createNewBatchAndExecutePreviousIfNeeded(b);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (true) {\n  final RequestBatch<BatchReturnType,ResponseType,RequestArgumentType> b=batch.get();\n  if (b == null) {\n    return Observable.error(new IllegalStateException(\"Submitting requests after collapser is shutdown\"));\n  }\n  final Observable<ResponseType> response;\n  if (arg != null) {\n    response=b.offer(arg);\n  }\n else {\n    response=b.offer((RequestArgumentType)NULL_SENTINEL);\n  }\n  if (response != null) {\n    return response;\n  }\n else {\n    createNewBatchAndExecutePreviousIfNeeded(b);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 77,
        "startColumnNumber" : 81,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!timerListenerRegistered.get() && timerListenerRegistered.compareAndSet(false,true)) {\n    timerListenerReference.set(timer.addListener(new CollapsedTask()));\n  }\n  while (true) {\n    final RequestBatch<BatchReturnType,ResponseType,RequestArgumentType> b=batch.get();\n    if (b == null) {\n      return Observable.error(new IllegalStateException(\"Submitting requests after collapser is shutdown\"));\n    }\n    final Observable<ResponseType> response;\n    if (arg != null) {\n      response=b.offer(arg);\n    }\n else {\n      response=b.offer((RequestArgumentType)NULL_SENTINEL);\n    }\n    if (response != null) {\n      return response;\n    }\n else {\n      createNewBatchAndExecutePreviousIfNeeded(b);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1796,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Submit a request to a batch. If the batch maxSize is hit trigger the batch immediately.\n * @param arg argument to a {@link RequestCollapser}\n * @return Observable<ResponseType>\n * @throws IllegalStateException if submitting after shutdown\n */\npublic Observable<ResponseType> submitRequest(final RequestArgumentType arg){\n  if (!timerListenerRegistered.get() && timerListenerRegistered.compareAndSet(false,true)) {\n    timerListenerReference.set(timer.addListener(new CollapsedTask()));\n  }\n  while (true) {\n    final RequestBatch<BatchReturnType,ResponseType,RequestArgumentType> b=batch.get();\n    if (b == null) {\n      return Observable.error(new IllegalStateException(\"Submitting requests after collapser is shutdown\"));\n    }\n    final Observable<ResponseType> response;\n    if (arg != null) {\n      response=b.offer(arg);\n    }\n else {\n      response=b.offer((RequestArgumentType)NULL_SENTINEL);\n    }\n    if (response != null) {\n      return response;\n    }\n else {\n      createNewBatchAndExecutePreviousIfNeeded(b);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 118
      },
      "nodeContext" : "return Observable.error(new IllegalStateException(\"Submitting requests after collapser is shutdown\"));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 49,
    "startLineNumber" : 90,
    "startColumnNumber" : 66,
    "endLineNumber" : 90,
    "endColumnNumber" : 115
  } ],
  "layoutRelationDataList" : [ ]
}