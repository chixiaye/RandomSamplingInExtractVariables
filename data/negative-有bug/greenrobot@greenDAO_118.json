{
  "id" : 118,
  "expression" : "false",
  "projectName" : "greenrobot@greenDAO",
  "commitID" : "bdaad7806db3e4db0ec5cc73835576e0aa9067a0",
  "filePath" : "/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/IndexTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 40,
      "startColumnNumber" : 38,
      "endLineNumber" : 40,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 44
      },
      "nodeContext" : "TestEntityDao.createTable(db,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 45
      },
      "nodeContext" : "TestEntityDao.createTable(db,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 739,
        "startLineNumber" : 37,
        "startColumnNumber" : 37,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertEquals(0,getIndexes().size());\n  TestEntityDao.createTable(db,false);\n  List<SqliteMaster> indexes=getIndexes();\n  Assert.assertEquals(2,indexes.size());\n  SqliteMaster index1=indexes.get(0);\n  SqliteMaster index2=indexes.get(1);\n  Assert.assertEquals(TestEntityDao.TABLENAME,index1.getTableName());\n  Assert.assertEquals(TestEntityDao.TABLENAME,index2.getTableName());\n  Assert.assertEquals(\"IDX_TEST_ENTITY_INDEXED_STRING\",index1.getName());\n  Assert.assertEquals(\"IDX_TEST_ENTITY_INDEXED_STRING_ASC_UNIQUE\",index2.getName());\n  for (  SqliteMaster index : indexes) {\n    DaoLog.v(index.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 772,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testIndexesCreated(){\n  Assert.assertEquals(0,getIndexes().size());\n  TestEntityDao.createTable(db,false);\n  List<SqliteMaster> indexes=getIndexes();\n  Assert.assertEquals(2,indexes.size());\n  SqliteMaster index1=indexes.get(0);\n  SqliteMaster index2=indexes.get(1);\n  Assert.assertEquals(TestEntityDao.TABLENAME,index1.getTableName());\n  Assert.assertEquals(TestEntityDao.TABLENAME,index2.getTableName());\n  Assert.assertEquals(\"IDX_TEST_ENTITY_INDEXED_STRING\",index1.getName());\n  Assert.assertEquals(\"IDX_TEST_ENTITY_INDEXED_STRING_ASC_UNIQUE\",index2.getName());\n  for (  SqliteMaster index : indexes) {\n    DaoLog.v(index.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 45
      },
      "nodeContext" : "TestEntityDao.createTable(db,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 40,
    "startColumnNumber" : 38,
    "endLineNumber" : 40,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}