{
  "id" : 135,
  "expression" : "this.backupSource",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/Repackager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.backupSource",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 197,
      "startColumnNumber" : 8,
      "endLineNumber" : 197,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 197,
        "startColumnNumber" : 7,
        "endLineNumber" : 197,
        "endColumnNumber" : 25
      },
      "nodeContext" : "!this.backupSource",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 197,
        "startColumnNumber" : 7,
        "endLineNumber" : 197,
        "endColumnNumber" : 63
      },
      "nodeContext" : "!this.backupSource && !this.source.equals(workingSource)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 197,
        "startColumnNumber" : 3,
        "endLineNumber" : 199,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!this.backupSource && !this.source.equals(workingSource)) {\n  deleteFile(workingSource);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 196,
        "startColumnNumber" : 10,
        "endLineNumber" : 200,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!this.backupSource && !this.source.equals(workingSource)) {\n    deleteFile(workingSource);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 191,
        "startColumnNumber" : 2,
        "endLineNumber" : 200,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  try (JarFile jarFileSource=new JarFile(workingSource)){\n    repackage(jarFileSource,destination,libraries,launchScript);\n  }\n }\n  finally {\n  if (!this.backupSource && !this.source.equals(workingSource)) {\n    deleteFile(workingSource);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 889,
        "startLineNumber" : 170,
        "startColumnNumber" : 49,
        "endLineNumber" : 201,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (destination == null || destination.isDirectory()) {\n    throw new IllegalArgumentException(\"Invalid destination\");\n  }\n  if (libraries == null) {\n    throw new IllegalArgumentException(\"Libraries must not be null\");\n  }\n  if (this.layout == null) {\n    this.layout=getLayoutFactory().getLayout(this.source);\n  }\n  if (alreadyRepackaged()) {\n    return;\n  }\n  destination=destination.getAbsoluteFile();\n  File workingSource=this.source;\n  if (this.source.equals(destination)) {\n    workingSource=getBackupFile();\n    workingSource.delete();\n    renameFile(this.source,workingSource);\n  }\n  destination.delete();\n  try {\n    try (JarFile jarFileSource=new JarFile(workingSource)){\n      repackage(jarFileSource,destination,libraries,launchScript);\n    }\n   }\n  finally {\n    if (!this.backupSource && !this.source.equals(workingSource)) {\n      deleteFile(workingSource);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1407,
        "startLineNumber" : 160,
        "startColumnNumber" : 1,
        "endLineNumber" : 201,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Repackage to the given destination so that it can be launched using ' {@literal java -jar}'.\n * @param destination the destination file (may be the same as the source)\n * @param libraries the libraries required to run the archive\n * @param launchScript an optional launch script prepended to the front of the jar\n * @throws IOException if the file cannot be repackaged\n * @since 1.3.0\n */\npublic void repackage(File destination,Libraries libraries,LaunchScript launchScript) throws IOException {\n  if (destination == null || destination.isDirectory()) {\n    throw new IllegalArgumentException(\"Invalid destination\");\n  }\n  if (libraries == null) {\n    throw new IllegalArgumentException(\"Libraries must not be null\");\n  }\n  if (this.layout == null) {\n    this.layout=getLayoutFactory().getLayout(this.source);\n  }\n  if (alreadyRepackaged()) {\n    return;\n  }\n  destination=destination.getAbsoluteFile();\n  File workingSource=this.source;\n  if (this.source.equals(destination)) {\n    workingSource=getBackupFile();\n    workingSource.delete();\n    renameFile(this.source,workingSource);\n  }\n  destination.delete();\n  try {\n    try (JarFile jarFileSource=new JarFile(workingSource)){\n      repackage(jarFileSource,destination,libraries,launchScript);\n    }\n   }\n  finally {\n    if (!this.backupSource && !this.source.equals(workingSource)) {\n      deleteFile(workingSource);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 197,
        "startColumnNumber" : 7,
        "endLineNumber" : 197,
        "endColumnNumber" : 63
      },
      "nodeContext" : "!this.backupSource && !this.source.equals(workingSource)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 197,
    "startColumnNumber" : 8,
    "endLineNumber" : 197,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}