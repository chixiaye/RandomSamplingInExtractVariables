{
  "id" : 453,
  "expression" : "new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc}",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/common/src/test/java/io/netty/util/internal/MacAddressUtilTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 90,
      "startLineNumber" : 83,
      "startColumnNumber" : 26,
      "endLineNumber" : 83,
      "endColumnNumber" : 116
    },
    "astNodeNumber" : 23,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00-AA-11-FF-FF-BB-22-CC\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00-AA-11-FF-FF-BB-22-CC\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 81,
        "startColumnNumber" : 43,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00-AA-11-FF-FF-BB-22-CC\"));\n  assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00:AA:11:FF:FF:BB:22:CC\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testParseMacMAC48ToEUI64(){\n  assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00-AA-11-FF-FF-BB-22-CC\"));\n  assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00:AA:11:FF:FF:BB:22:CC\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00-AA-11-FF-FF-BB-22-CC\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 5
    },
    "tokenLength" : 8,
    "type" : "byte[]"
  }, {
    "nodeContext" : "new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 90,
      "startLineNumber" : 85,
      "startColumnNumber" : 26,
      "endLineNumber" : 85,
      "endColumnNumber" : 116
    },
    "astNodeNumber" : 23,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00:AA:11:FF:FF:BB:22:CC\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00:AA:11:FF:FF:BB:22:CC\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 81,
        "startColumnNumber" : 43,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00-AA-11-FF-FF-BB-22-CC\"));\n  assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00:AA:11:FF:FF:BB:22:CC\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testParseMacMAC48ToEUI64(){\n  assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00-AA-11-FF-FF-BB-22-CC\"));\n  assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00:AA:11:FF:FF:BB:22:CC\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertArrayEquals(new byte[]{0,(byte)0xaa,0x11,(byte)0xff,(byte)0xff,(byte)0xbb,0x22,(byte)0xcc},parseMAC(\"00:AA:11:FF:FF:BB:22:CC\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 5
    },
    "tokenLength" : 8,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 90,
    "startLineNumber" : 83,
    "startColumnNumber" : 26,
    "endLineNumber" : 83,
    "endColumnNumber" : 116
  }, {
    "charLength" : 90,
    "startLineNumber" : 85,
    "startColumnNumber" : 26,
    "endLineNumber" : 85,
    "endColumnNumber" : 116
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}