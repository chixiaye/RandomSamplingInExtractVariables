{
  "id" : 131,
  "expression" : "h",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/test/java/redis/clients/jedis/commands/unified/HashesCommandsTestBase.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "h",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 298,
      "startColumnNumber" : 4,
      "endLineNumber" : 298,
      "endColumnNumber" : 5
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 298,
        "startColumnNumber" : 4,
        "endLineNumber" : 298,
        "endColumnNumber" : 23
      },
      "nodeContext" : "h.put(\"bar\",\"car\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 298,
        "startColumnNumber" : 4,
        "endLineNumber" : 298,
        "endColumnNumber" : 24
      },
      "nodeContext" : "h.put(\"bar\",\"car\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 665,
        "startLineNumber" : 296,
        "startColumnNumber" : 24,
        "endLineNumber" : 317,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,String> h=new HashMap<String,String>();\n  h.put(\"bar\",\"car\");\n  h.put(\"car\",\"bar\");\n  jedis.hmset(\"foo\",h);\n  Map<String,String> hash=jedis.hgetAll(\"foo\");\n  assertEquals(2,hash.size());\n  assertEquals(\"car\",hash.get(\"bar\"));\n  assertEquals(\"bar\",hash.get(\"car\"));\n  Map<byte[],byte[]> bh=new HashMap<byte[],byte[]>();\n  bh.put(bbar,bcar);\n  bh.put(bcar,bbar);\n  jedis.hmset(bfoo,bh);\n  Map<byte[],byte[]> bhash=jedis.hgetAll(bfoo);\n  assertEquals(2,bhash.size());\n  assertArrayEquals(bcar,bhash.get(bbar));\n  assertArrayEquals(bbar,bhash.get(bcar));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 295,
        "startColumnNumber" : 2,
        "endLineNumber" : 317,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void hgetAll(){\n  Map<String,String> h=new HashMap<String,String>();\n  h.put(\"bar\",\"car\");\n  h.put(\"car\",\"bar\");\n  jedis.hmset(\"foo\",h);\n  Map<String,String> hash=jedis.hgetAll(\"foo\");\n  assertEquals(2,hash.size());\n  assertEquals(\"car\",hash.get(\"bar\"));\n  assertEquals(\"bar\",hash.get(\"car\"));\n  Map<byte[],byte[]> bh=new HashMap<byte[],byte[]>();\n  bh.put(bbar,bcar);\n  bh.put(bcar,bbar);\n  jedis.hmset(bfoo,bh);\n  Map<byte[],byte[]> bhash=jedis.hgetAll(bfoo);\n  assertEquals(2,bhash.size());\n  assertArrayEquals(bcar,bhash.get(bbar));\n  assertArrayEquals(bbar,bhash.get(bcar));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 298,
        "startColumnNumber" : 4,
        "endLineNumber" : 298,
        "endColumnNumber" : 24
      },
      "nodeContext" : "h.put(\"bar\",\"car\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  }, {
    "nodeContext" : "h",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 299,
      "startColumnNumber" : 4,
      "endLineNumber" : 299,
      "endColumnNumber" : 5
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 299,
        "startColumnNumber" : 4,
        "endLineNumber" : 299,
        "endColumnNumber" : 23
      },
      "nodeContext" : "h.put(\"car\",\"bar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 299,
        "startColumnNumber" : 4,
        "endLineNumber" : 299,
        "endColumnNumber" : 24
      },
      "nodeContext" : "h.put(\"car\",\"bar\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 665,
        "startLineNumber" : 296,
        "startColumnNumber" : 24,
        "endLineNumber" : 317,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,String> h=new HashMap<String,String>();\n  h.put(\"bar\",\"car\");\n  h.put(\"car\",\"bar\");\n  jedis.hmset(\"foo\",h);\n  Map<String,String> hash=jedis.hgetAll(\"foo\");\n  assertEquals(2,hash.size());\n  assertEquals(\"car\",hash.get(\"bar\"));\n  assertEquals(\"bar\",hash.get(\"car\"));\n  Map<byte[],byte[]> bh=new HashMap<byte[],byte[]>();\n  bh.put(bbar,bcar);\n  bh.put(bcar,bbar);\n  jedis.hmset(bfoo,bh);\n  Map<byte[],byte[]> bhash=jedis.hgetAll(bfoo);\n  assertEquals(2,bhash.size());\n  assertArrayEquals(bcar,bhash.get(bbar));\n  assertArrayEquals(bbar,bhash.get(bcar));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 295,
        "startColumnNumber" : 2,
        "endLineNumber" : 317,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void hgetAll(){\n  Map<String,String> h=new HashMap<String,String>();\n  h.put(\"bar\",\"car\");\n  h.put(\"car\",\"bar\");\n  jedis.hmset(\"foo\",h);\n  Map<String,String> hash=jedis.hgetAll(\"foo\");\n  assertEquals(2,hash.size());\n  assertEquals(\"car\",hash.get(\"bar\"));\n  assertEquals(\"bar\",hash.get(\"car\"));\n  Map<byte[],byte[]> bh=new HashMap<byte[],byte[]>();\n  bh.put(bbar,bcar);\n  bh.put(bcar,bbar);\n  jedis.hmset(bfoo,bh);\n  Map<byte[],byte[]> bhash=jedis.hgetAll(bfoo);\n  assertEquals(2,bhash.size());\n  assertArrayEquals(bcar,bhash.get(bbar));\n  assertArrayEquals(bbar,bhash.get(bcar));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 299,
        "startColumnNumber" : 4,
        "endLineNumber" : 299,
        "endColumnNumber" : 24
      },
      "nodeContext" : "h.put(\"car\",\"bar\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  }, {
    "nodeContext" : "h",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 300,
      "startColumnNumber" : 23,
      "endLineNumber" : 300,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 300,
        "startColumnNumber" : 4,
        "endLineNumber" : 300,
        "endColumnNumber" : 25
      },
      "nodeContext" : "jedis.hmset(\"foo\",h)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 300,
        "startColumnNumber" : 4,
        "endLineNumber" : 300,
        "endColumnNumber" : 26
      },
      "nodeContext" : "jedis.hmset(\"foo\",h);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 665,
        "startLineNumber" : 296,
        "startColumnNumber" : 24,
        "endLineNumber" : 317,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,String> h=new HashMap<String,String>();\n  h.put(\"bar\",\"car\");\n  h.put(\"car\",\"bar\");\n  jedis.hmset(\"foo\",h);\n  Map<String,String> hash=jedis.hgetAll(\"foo\");\n  assertEquals(2,hash.size());\n  assertEquals(\"car\",hash.get(\"bar\"));\n  assertEquals(\"bar\",hash.get(\"car\"));\n  Map<byte[],byte[]> bh=new HashMap<byte[],byte[]>();\n  bh.put(bbar,bcar);\n  bh.put(bcar,bbar);\n  jedis.hmset(bfoo,bh);\n  Map<byte[],byte[]> bhash=jedis.hgetAll(bfoo);\n  assertEquals(2,bhash.size());\n  assertArrayEquals(bcar,bhash.get(bbar));\n  assertArrayEquals(bbar,bhash.get(bcar));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 295,
        "startColumnNumber" : 2,
        "endLineNumber" : 317,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void hgetAll(){\n  Map<String,String> h=new HashMap<String,String>();\n  h.put(\"bar\",\"car\");\n  h.put(\"car\",\"bar\");\n  jedis.hmset(\"foo\",h);\n  Map<String,String> hash=jedis.hgetAll(\"foo\");\n  assertEquals(2,hash.size());\n  assertEquals(\"car\",hash.get(\"bar\"));\n  assertEquals(\"bar\",hash.get(\"car\"));\n  Map<byte[],byte[]> bh=new HashMap<byte[],byte[]>();\n  bh.put(bbar,bcar);\n  bh.put(bcar,bbar);\n  jedis.hmset(bfoo,bh);\n  Map<byte[],byte[]> bhash=jedis.hgetAll(bfoo);\n  assertEquals(2,bhash.size());\n  assertArrayEquals(bcar,bhash.get(bbar));\n  assertArrayEquals(bbar,bhash.get(bcar));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 300,
        "startColumnNumber" : 4,
        "endLineNumber" : 300,
        "endColumnNumber" : 26
      },
      "nodeContext" : "jedis.hmset(\"foo\",h);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 298,
    "startColumnNumber" : 4,
    "endLineNumber" : 298,
    "endColumnNumber" : 5
  }, {
    "charLength" : 1,
    "startLineNumber" : 299,
    "startColumnNumber" : 4,
    "endLineNumber" : 299,
    "endColumnNumber" : 5
  }, {
    "charLength" : 1,
    "startLineNumber" : 300,
    "startColumnNumber" : 23,
    "endLineNumber" : 300,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}