{
  "id" : 20,
  "expression" : "dataId",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/config/src/main/java/com/alibaba/nacos/config/server/service/AggrWhitelist.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dataId",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 51,
      "startColumnNumber" : 20,
      "endLineNumber" : 51,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 26
      },
      "nodeContext" : "null == dataId",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null == dataId) {\n  throw new IllegalArgumentException(\"dataId is null\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 50,
        "startColumnNumber" : 54,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null == dataId) {\n    throw new IllegalArgumentException(\"dataId is null\");\n  }\n  for (  Pattern pattern : AGGR_DATAID_WHITELIST.get()) {\n    if (pattern.matcher(dataId).matches()) {\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Judge whether specified dataId includes aggregation white list.\n * @param dataId dataId string value.\n * @return Whether to match aggregation rules.\n */\npublic static boolean isAggrDataId(String dataId){\n  if (null == dataId) {\n    throw new IllegalArgumentException(\"dataId is null\");\n  }\n  for (  Pattern pattern : AGGR_DATAID_WHITELIST.get()) {\n    if (pattern.matcher(dataId).matches()) {\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 26
      },
      "nodeContext" : "null == dataId",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "dataId",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 32,
      "endLineNumber" : 56,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 56,
        "startColumnNumber" : 16,
        "endLineNumber" : 56,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pattern.matcher(dataId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 56,
        "startColumnNumber" : 16,
        "endLineNumber" : 56,
        "endColumnNumber" : 49
      },
      "nodeContext" : "pattern.matcher(dataId).matches()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (pattern.matcher(dataId).matches()) {\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (pattern.matcher(dataId).matches()) {\n    return true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Pattern pattern : AGGR_DATAID_WHITELIST.get()) {\n  if (pattern.matcher(dataId).matches()) {\n    return true;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 50,
        "startColumnNumber" : 54,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null == dataId) {\n    throw new IllegalArgumentException(\"dataId is null\");\n  }\n  for (  Pattern pattern : AGGR_DATAID_WHITELIST.get()) {\n    if (pattern.matcher(dataId).matches()) {\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Judge whether specified dataId includes aggregation white list.\n * @param dataId dataId string value.\n * @return Whether to match aggregation rules.\n */\npublic static boolean isAggrDataId(String dataId){\n  if (null == dataId) {\n    throw new IllegalArgumentException(\"dataId is null\");\n  }\n  for (  Pattern pattern : AGGR_DATAID_WHITELIST.get()) {\n    if (pattern.matcher(dataId).matches()) {\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 56,
        "startColumnNumber" : 16,
        "endLineNumber" : 56,
        "endColumnNumber" : 49
      },
      "nodeContext" : "pattern.matcher(dataId).matches()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 51,
    "startColumnNumber" : 20,
    "endLineNumber" : 51,
    "endColumnNumber" : 26
  }, {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 32,
    "endLineNumber" : 56,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}