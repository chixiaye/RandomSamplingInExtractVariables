{
  "id" : 191,
  "expression" : "i < header.getReadQuestions()",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/dns/impl/netty/DnsResponseDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < header.getReadQuestions()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 160,
      "startColumnNumber" : 20,
      "endLineNumber" : 160,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 160,
        "startColumnNumber" : 4,
        "endLineNumber" : 162,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < header.getReadQuestions(); i++) {\n  response.addQuestion(decodeQuestion(buf));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 156,
        "startColumnNumber" : 87,
        "endLineNumber" : 177,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DnsResponse response=new DnsResponse(buf);\n  DnsResponseHeader header=decodeHeader(response,buf);\n  response.setHeader(header);\n  for (int i=0; i < header.getReadQuestions(); i++) {\n    response.addQuestion(decodeQuestion(buf));\n  }\n  if (header.getResponseCode() != 0) {\n    return response;\n  }\n  for (int i=0; i < header.getReadAnswers(); i++) {\n    response.addAnswer(decodeResource(buf,allocator));\n  }\n  for (int i=0; i < header.getReadAuthorityResources(); i++) {\n    response.addAuthorityResource(decodeResource(buf,allocator));\n  }\n  for (int i=0; i < header.getReadAdditionalResources(); i++) {\n    response.addAdditionalResource(decodeResource(buf,allocator));\n  }\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 150,
        "startColumnNumber" : 2,
        "endLineNumber" : 177,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Decodes a full DNS response packet.\n * @param buf the raw DNS response packet\n * @return the decoded {@link DnsResponse}\n */\nprotected static DnsResponse decodeResponse(ByteBuf buf,ByteBufAllocator allocator){\n  DnsResponse response=new DnsResponse(buf);\n  DnsResponseHeader header=decodeHeader(response,buf);\n  response.setHeader(header);\n  for (int i=0; i < header.getReadQuestions(); i++) {\n    response.addQuestion(decodeQuestion(buf));\n  }\n  if (header.getResponseCode() != 0) {\n    return response;\n  }\n  for (int i=0; i < header.getReadAnswers(); i++) {\n    response.addAnswer(decodeResource(buf,allocator));\n  }\n  for (int i=0; i < header.getReadAuthorityResources(); i++) {\n    response.addAuthorityResource(decodeResource(buf,allocator));\n  }\n  for (int i=0; i < header.getReadAdditionalResources(); i++) {\n    response.addAdditionalResource(decodeResource(buf,allocator));\n  }\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 160,
        "startColumnNumber" : 4,
        "endLineNumber" : 162,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < header.getReadQuestions(); i++) {\n  response.addQuestion(decodeQuestion(buf));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 160,
    "startColumnNumber" : 20,
    "endLineNumber" : 160,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}