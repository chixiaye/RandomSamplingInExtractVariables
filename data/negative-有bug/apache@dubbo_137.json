{
  "id" : 137,
  "expression" : "attribute",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/command/decoder/HttpCommandDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "attribute",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 62,
      "startColumnNumber" : 46,
      "endLineNumber" : 62,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 62,
        "startColumnNumber" : 46,
        "endLineNumber" : 62,
        "endColumnNumber" : 66
      },
      "nodeContext" : "attribute.getValue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 62,
        "startColumnNumber" : 32,
        "endLineNumber" : 62,
        "endColumnNumber" : 67
      },
      "nodeContext" : "valueList.add(attribute.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 62,
        "startColumnNumber" : 32,
        "endLineNumber" : 62,
        "endColumnNumber" : 68
      },
      "nodeContext" : "valueList.add(attribute.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 61,
        "startColumnNumber" : 32,
        "endLineNumber" : 63,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  valueList.add(attribute.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 61,
        "startColumnNumber" : 28,
        "endLineNumber" : 65,
        "endColumnNumber" : 29
      },
      "nodeContext" : "try {\n  valueList.add(attribute.getValue());\n}\n catch (IOException ex) {\n  throw new RuntimeException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 59,
        "startColumnNumber" : 109,
        "endLineNumber" : 66,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  Attribute attribute=(Attribute)interfaceHttpData;\n  try {\n    valueList.add(attribute.getValue());\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 66,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (interfaceHttpData.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {\n  Attribute attribute=(Attribute)interfaceHttpData;\n  try {\n    valueList.add(attribute.getValue());\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(ex);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 58,
        "startColumnNumber" : 106,
        "endLineNumber" : 67,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (interfaceHttpData.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {\n    Attribute attribute=(Attribute)interfaceHttpData;\n    try {\n      valueList.add(attribute.getValue());\n    }\n catch (    IOException ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 58,
        "startColumnNumber" : 20,
        "endLineNumber" : 67,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (InterfaceHttpData interfaceHttpData : httpPostRequestDecoder.getBodyHttpDatas()) {\n  if (interfaceHttpData.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {\n    Attribute attribute=(Attribute)interfaceHttpData;\n    try {\n      valueList.add(attribute.getValue());\n    }\n catch (    IOException ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1150,
        "startLineNumber" : 55,
        "startColumnNumber" : 67,
        "endLineNumber" : 74,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  HttpPostRequestDecoder httpPostRequestDecoder=new HttpPostRequestDecoder(request);\n  List<String> valueList=new ArrayList<String>();\n  for (  InterfaceHttpData interfaceHttpData : httpPostRequestDecoder.getBodyHttpDatas()) {\n    if (interfaceHttpData.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {\n      Attribute attribute=(Attribute)interfaceHttpData;\n      try {\n        valueList.add(attribute.getValue());\n      }\n catch (      IOException ex) {\n        throw new RuntimeException(ex);\n      }\n    }\n  }\n  if (valueList.isEmpty()) {\n    commandContext=CommandContextFactory.newInstance(name);\n    commandContext.setHttp(true);\n  }\n else {\n    commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1194,
        "startLineNumber" : 55,
        "startColumnNumber" : 23,
        "endLineNumber" : 74,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (request.getMethod() == HttpMethod.POST) {\n  HttpPostRequestDecoder httpPostRequestDecoder=new HttpPostRequestDecoder(request);\n  List<String> valueList=new ArrayList<String>();\n  for (  InterfaceHttpData interfaceHttpData : httpPostRequestDecoder.getBodyHttpDatas()) {\n    if (interfaceHttpData.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {\n      Attribute attribute=(Attribute)interfaceHttpData;\n      try {\n        valueList.add(attribute.getValue());\n      }\n catch (      IOException ex) {\n        throw new RuntimeException(ex);\n      }\n    }\n  }\n  if (valueList.isEmpty()) {\n    commandContext=CommandContextFactory.newInstance(name);\n    commandContext.setHttp(true);\n  }\n else {\n    commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1889,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 74,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (request.getMethod() == HttpMethod.GET) {\n  if (queryStringDecoder.parameters().isEmpty()) {\n    commandContext=CommandContextFactory.newInstance(name);\n    commandContext.setHttp(true);\n  }\n else {\n    List<String> valueList=new ArrayList<String>();\n    for (    List<String> values : queryStringDecoder.parameters().values()) {\n      valueList.addAll(values);\n    }\n    commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n  }\n}\n else if (request.getMethod() == HttpMethod.POST) {\n  HttpPostRequestDecoder httpPostRequestDecoder=new HttpPostRequestDecoder(request);\n  List<String> valueList=new ArrayList<String>();\n  for (  InterfaceHttpData interfaceHttpData : httpPostRequestDecoder.getBodyHttpDatas()) {\n    if (interfaceHttpData.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {\n      Attribute attribute=(Attribute)interfaceHttpData;\n      try {\n        valueList.add(attribute.getValue());\n      }\n catch (      IOException ex) {\n        throw new RuntimeException(ex);\n      }\n    }\n  }\n  if (valueList.isEmpty()) {\n    commandContext=CommandContextFactory.newInstance(name);\n    commandContext.setHttp(true);\n  }\n else {\n    commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 195,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2073,
        "startLineNumber" : 40,
        "startColumnNumber" : 35,
        "endLineNumber" : 75,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String name=array[1];\n  if (request.getMethod() == HttpMethod.GET) {\n    if (queryStringDecoder.parameters().isEmpty()) {\n      commandContext=CommandContextFactory.newInstance(name);\n      commandContext.setHttp(true);\n    }\n else {\n      List<String> valueList=new ArrayList<String>();\n      for (      List<String> values : queryStringDecoder.parameters().values()) {\n        valueList.addAll(values);\n      }\n      commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n    }\n  }\n else   if (request.getMethod() == HttpMethod.POST) {\n    HttpPostRequestDecoder httpPostRequestDecoder=new HttpPostRequestDecoder(request);\n    List<String> valueList=new ArrayList<String>();\n    for (    InterfaceHttpData interfaceHttpData : httpPostRequestDecoder.getBodyHttpDatas()) {\n      if (interfaceHttpData.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {\n        Attribute attribute=(Attribute)interfaceHttpData;\n        try {\n          valueList.add(attribute.getValue());\n        }\n catch (        IOException ex) {\n          throw new RuntimeException(ex);\n        }\n      }\n    }\n    if (valueList.isEmpty()) {\n      commandContext=CommandContextFactory.newInstance(name);\n      commandContext.setHttp(true);\n    }\n else {\n      commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2096,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (array.length == 2) {\n  String name=array[1];\n  if (request.getMethod() == HttpMethod.GET) {\n    if (queryStringDecoder.parameters().isEmpty()) {\n      commandContext=CommandContextFactory.newInstance(name);\n      commandContext.setHttp(true);\n    }\n else {\n      List<String> valueList=new ArrayList<String>();\n      for (      List<String> values : queryStringDecoder.parameters().values()) {\n        valueList.addAll(values);\n      }\n      commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n    }\n  }\n else   if (request.getMethod() == HttpMethod.POST) {\n    HttpPostRequestDecoder httpPostRequestDecoder=new HttpPostRequestDecoder(request);\n    List<String> valueList=new ArrayList<String>();\n    for (    InterfaceHttpData interfaceHttpData : httpPostRequestDecoder.getBodyHttpDatas()) {\n      if (interfaceHttpData.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {\n        Attribute attribute=(Attribute)interfaceHttpData;\n        try {\n          valueList.add(attribute.getValue());\n        }\n catch (        IOException ex) {\n          throw new RuntimeException(ex);\n        }\n      }\n    }\n    if (valueList.isEmpty()) {\n      commandContext=CommandContextFactory.newInstance(name);\n      commandContext.setHttp(true);\n    }\n else {\n      commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 210,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2313,
        "startLineNumber" : 36,
        "startColumnNumber" : 29,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  QueryStringDecoder queryStringDecoder=new QueryStringDecoder(request.getUri());\n  String path=queryStringDecoder.path();\n  String[] array=path.split(\"/\");\n  if (array.length == 2) {\n    String name=array[1];\n    if (request.getMethod() == HttpMethod.GET) {\n      if (queryStringDecoder.parameters().isEmpty()) {\n        commandContext=CommandContextFactory.newInstance(name);\n        commandContext.setHttp(true);\n      }\n else {\n        List<String> valueList=new ArrayList<String>();\n        for (        List<String> values : queryStringDecoder.parameters().values()) {\n          valueList.addAll(values);\n        }\n        commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n      }\n    }\n else     if (request.getMethod() == HttpMethod.POST) {\n      HttpPostRequestDecoder httpPostRequestDecoder=new HttpPostRequestDecoder(request);\n      List<String> valueList=new ArrayList<String>();\n      for (      InterfaceHttpData interfaceHttpData : httpPostRequestDecoder.getBodyHttpDatas()) {\n        if (interfaceHttpData.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {\n          Attribute attribute=(Attribute)interfaceHttpData;\n          try {\n            valueList.add(attribute.getValue());\n          }\n catch (          IOException ex) {\n            throw new RuntimeException(ex);\n          }\n        }\n      }\n      if (valueList.isEmpty()) {\n        commandContext=CommandContextFactory.newInstance(name);\n        commandContext.setHttp(true);\n      }\n else {\n        commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2334,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (request != null) {\n  QueryStringDecoder queryStringDecoder=new QueryStringDecoder(request.getUri());\n  String path=queryStringDecoder.path();\n  String[] array=path.split(\"/\");\n  if (array.length == 2) {\n    String name=array[1];\n    if (request.getMethod() == HttpMethod.GET) {\n      if (queryStringDecoder.parameters().isEmpty()) {\n        commandContext=CommandContextFactory.newInstance(name);\n        commandContext.setHttp(true);\n      }\n else {\n        List<String> valueList=new ArrayList<String>();\n        for (        List<String> values : queryStringDecoder.parameters().values()) {\n          valueList.addAll(values);\n        }\n        commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n      }\n    }\n else     if (request.getMethod() == HttpMethod.POST) {\n      HttpPostRequestDecoder httpPostRequestDecoder=new HttpPostRequestDecoder(request);\n      List<String> valueList=new ArrayList<String>();\n      for (      InterfaceHttpData interfaceHttpData : httpPostRequestDecoder.getBodyHttpDatas()) {\n        if (interfaceHttpData.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {\n          Attribute attribute=(Attribute)interfaceHttpData;\n          try {\n            valueList.add(attribute.getValue());\n          }\n catch (          IOException ex) {\n            throw new RuntimeException(ex);\n          }\n        }\n      }\n      if (valueList.isEmpty()) {\n        commandContext=CommandContextFactory.newInstance(name);\n        commandContext.setHttp(true);\n      }\n else {\n        commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 245,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2428,
        "startLineNumber" : 34,
        "startColumnNumber" : 61,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CommandContext commandContext=null;\n  if (request != null) {\n    QueryStringDecoder queryStringDecoder=new QueryStringDecoder(request.getUri());\n    String path=queryStringDecoder.path();\n    String[] array=path.split(\"/\");\n    if (array.length == 2) {\n      String name=array[1];\n      if (request.getMethod() == HttpMethod.GET) {\n        if (queryStringDecoder.parameters().isEmpty()) {\n          commandContext=CommandContextFactory.newInstance(name);\n          commandContext.setHttp(true);\n        }\n else {\n          List<String> valueList=new ArrayList<String>();\n          for (          List<String> values : queryStringDecoder.parameters().values()) {\n            valueList.addAll(values);\n          }\n          commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n        }\n      }\n else       if (request.getMethod() == HttpMethod.POST) {\n        HttpPostRequestDecoder httpPostRequestDecoder=new HttpPostRequestDecoder(request);\n        List<String> valueList=new ArrayList<String>();\n        for (        InterfaceHttpData interfaceHttpData : httpPostRequestDecoder.getBodyHttpDatas()) {\n          if (interfaceHttpData.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {\n            Attribute attribute=(Attribute)interfaceHttpData;\n            try {\n              valueList.add(attribute.getValue());\n            }\n catch (            IOException ex) {\n              throw new RuntimeException(ex);\n            }\n          }\n        }\n        if (valueList.isEmpty()) {\n          commandContext=CommandContextFactory.newInstance(name);\n          commandContext.setHttp(true);\n        }\n else {\n          commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n        }\n      }\n    }\n  }\n  return commandContext;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 254,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2485,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static CommandContext decode(HttpRequest request){\n  CommandContext commandContext=null;\n  if (request != null) {\n    QueryStringDecoder queryStringDecoder=new QueryStringDecoder(request.getUri());\n    String path=queryStringDecoder.path();\n    String[] array=path.split(\"/\");\n    if (array.length == 2) {\n      String name=array[1];\n      if (request.getMethod() == HttpMethod.GET) {\n        if (queryStringDecoder.parameters().isEmpty()) {\n          commandContext=CommandContextFactory.newInstance(name);\n          commandContext.setHttp(true);\n        }\n else {\n          List<String> valueList=new ArrayList<String>();\n          for (          List<String> values : queryStringDecoder.parameters().values()) {\n            valueList.addAll(values);\n          }\n          commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n        }\n      }\n else       if (request.getMethod() == HttpMethod.POST) {\n        HttpPostRequestDecoder httpPostRequestDecoder=new HttpPostRequestDecoder(request);\n        List<String> valueList=new ArrayList<String>();\n        for (        InterfaceHttpData interfaceHttpData : httpPostRequestDecoder.getBodyHttpDatas()) {\n          if (interfaceHttpData.getHttpDataType() == InterfaceHttpData.HttpDataType.Attribute) {\n            Attribute attribute=(Attribute)interfaceHttpData;\n            try {\n              valueList.add(attribute.getValue());\n            }\n catch (            IOException ex) {\n              throw new RuntimeException(ex);\n            }\n          }\n        }\n        if (valueList.isEmpty()) {\n          commandContext=CommandContextFactory.newInstance(name);\n          commandContext.setHttp(true);\n        }\n else {\n          commandContext=CommandContextFactory.newInstance(name,valueList.toArray(new String[]{}),true);\n        }\n      }\n    }\n  }\n  return commandContext;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 62,
        "startColumnNumber" : 32,
        "endLineNumber" : 62,
        "endColumnNumber" : 68
      },
      "nodeContext" : "valueList.add(attribute.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.qos.command.decoder.Attribute"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 62,
    "startColumnNumber" : 46,
    "endLineNumber" : 62,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}