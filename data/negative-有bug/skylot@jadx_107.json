{
  "id" : 107,
  "expression" : "File",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/test/java/jadx/tests/integration/names/TestReservedClassNames.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "File",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 22,
      "startColumnNumber" : 50,
      "endLineNumber" : 22,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 22,
        "startColumnNumber" : 50,
        "endLineNumber" : 22,
        "endColumnNumber" : 68
      },
      "nodeContext" : "File.separatorChar",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 22,
        "startColumnNumber" : 40,
        "endLineNumber" : 22,
        "endColumnNumber" : 95
      },
      "nodeContext" : "\"names\" + File.separatorChar + \"TestReservedClassNames\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 22,
        "startColumnNumber" : 18,
        "endLineNumber" : 22,
        "endColumnNumber" : 102
      },
      "nodeContext" : "getClassNodeFromSmali(\"names\" + File.separatorChar + \"TestReservedClassNames\",\"do\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 22,
        "startColumnNumber" : 12,
        "endLineNumber" : 22,
        "endColumnNumber" : 102
      },
      "nodeContext" : "cls=getClassNodeFromSmali(\"names\" + File.separatorChar + \"TestReservedClassNames\",\"do\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 22,
        "startColumnNumber" : 2,
        "endLineNumber" : 22,
        "endColumnNumber" : 103
      },
      "nodeContext" : "ClassNode cls=getClassNodeFromSmali(\"names\" + File.separatorChar + \"TestReservedClassNames\",\"do\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 21,
        "startColumnNumber" : 20,
        "endLineNumber" : 26,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ClassNode cls=getClassNodeFromSmali(\"names\" + File.separatorChar + \"TestReservedClassNames\",\"do\");\n  String code=cls.getCode().toString();\n  assertThat(code,not(containsString(\"public class do\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 20,
        "startColumnNumber" : 1,
        "endLineNumber" : 26,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void test(){\n  ClassNode cls=getClassNodeFromSmali(\"names\" + File.separatorChar + \"TestReservedClassNames\",\"do\");\n  String code=cls.getCode().toString();\n  assertThat(code,not(containsString(\"public class do\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 40,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 22,
        "startColumnNumber" : 2,
        "endLineNumber" : 22,
        "endColumnNumber" : 103
      },
      "nodeContext" : "ClassNode cls=getClassNodeFromSmali(\"names\" + File.separatorChar + \"TestReservedClassNames\",\"do\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 22,
    "startColumnNumber" : 50,
    "endLineNumber" : 22,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}