{
  "id" : 93,
  "expression" : "\"<Sample>\"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/configuration/MockAnnotationProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"<Sample>\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 87,
      "startColumnNumber" : 42,
      "endLineNumber" : 87,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 87,
        "startColumnNumber" : 24,
        "endLineNumber" : 87,
        "endColumnNumber" : 52
      },
      "nodeContext" : "\"@Mock \" + sort + \"<Sample>\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 81,
        "startColumnNumber" : 16,
        "endLineNumber" : 89,
        "endColumnNumber" : 122
      },
      "nodeContext" : "join(\"Mockito cannot infer a static mock from a raw type for \" + name,\"\",\"Instead of @Mock \" + sort + \" you need to specify a parameterized type\",\"For example, if you would like to mock Sample.class, specify\",\"\",\"@Mock \" + sort + \"<Sample>\",\"\",\"as the type parameter. If the type is itself parameterized, it should be specified as raw type.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 80,
        "startColumnNumber" : 14,
        "endLineNumber" : 89,
        "endColumnNumber" : 123
      },
      "nodeContext" : "new MockitoException(join(\"Mockito cannot infer a static mock from a raw type for \" + name,\"\",\"Instead of @Mock \" + sort + \" you need to specify a parameterized type\",\"For example, if you would like to mock Sample.class, specify\",\"\",\"@Mock \" + sort + \"<Sample>\",\"\",\"as the type parameter. If the type is itself parameterized, it should be specified as raw type.\"))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 21,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 597,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 124
      },
      "nodeContext" : "throw new MockitoException(join(\"Mockito cannot infer a static mock from a raw type for \" + name,\"\",\"Instead of @Mock \" + sort + \" you need to specify a parameterized type\",\"For example, if you would like to mock Sample.class, specify\",\"\",\"@Mock \" + sort + \"<Sample>\",\"\",\"as the type parameter. If the type is itself parameterized, it should be specified as raw type.\"));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1015,
        "startLineNumber" : 70,
        "startColumnNumber" : 80,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (type instanceof ParameterizedType) {\n    ParameterizedType parameterizedType=(ParameterizedType)type;\n    Type[] arguments=parameterizedType.getActualTypeArguments();\n    if (arguments.length == 1) {\n      if (arguments[0] instanceof Class<?>) {\n        return (Class<?>)arguments[0];\n      }\n    }\n  }\n  throw new MockitoException(join(\"Mockito cannot infer a static mock from a raw type for \" + name,\"\",\"Instead of @Mock \" + sort + \" you need to specify a parameterized type\",\"For example, if you would like to mock Sample.class, specify\",\"\",\"@Mock \" + sort + \"<Sample>\",\"\",\"as the type parameter. If the type is itself parameterized, it should be specified as raw type.\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static Class<?> inferParameterizedType(Type type,String name,String sort){\n  if (type instanceof ParameterizedType) {\n    ParameterizedType parameterizedType=(ParameterizedType)type;\n    Type[] arguments=parameterizedType.getActualTypeArguments();\n    if (arguments.length == 1) {\n      if (arguments[0] instanceof Class<?>) {\n        return (Class<?>)arguments[0];\n      }\n    }\n  }\n  throw new MockitoException(join(\"Mockito cannot infer a static mock from a raw type for \" + name,\"\",\"Instead of @Mock \" + sort + \" you need to specify a parameterized type\",\"For example, if you would like to mock Sample.class, specify\",\"\",\"@Mock \" + sort + \"<Sample>\",\"\",\"as the type parameter. If the type is itself parameterized, it should be specified as raw type.\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 87,
        "startColumnNumber" : 24,
        "endLineNumber" : 87,
        "endColumnNumber" : 52
      },
      "nodeContext" : "\"@Mock \" + sort + \"<Sample>\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 87,
    "startColumnNumber" : 42,
    "endLineNumber" : 87,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}