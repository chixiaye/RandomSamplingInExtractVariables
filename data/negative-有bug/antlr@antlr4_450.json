{
  "id" : 450,
  "expression" : "buf.length()",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime-testsuite/test/org/antlr/v4/test/runtime/TestOutputReading.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "buf.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 59,
      "startColumnNumber" : 6,
      "endLineNumber" : 59,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 59,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 22
      },
      "nodeContext" : "buf.length() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (buf.length() > 0) {\n  return buf.toString();\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 50,
        "startColumnNumber" : 57,
        "endLineNumber" : 64,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  StringBuilder buf=new StringBuilder();\n  try (BufferedReader in=Files.newBufferedReader(path,StandardCharsets.UTF_8)){\n    append(in,buf);\n  }\n catch (  FileNotFoundException|NoSuchFileException e) {\n    return null;\n  }\n  if (buf.length() > 0) {\n    return buf.toString();\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 835,
        "startLineNumber" : 40,
        "startColumnNumber" : 1,
        "endLineNumber" : 64,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Read in the UTF-8 bytes at  {@code path}, convert all platform-specific line terminators to NL, and append NL if the file was non-empty and didn't already end with one. {@see StreamVacuum#run()} for why this method exists.Returns  {@code null} if the file does not exist or the outputwas empty.\n */\npublic static String read(Path path) throws IOException {\n  StringBuilder buf=new StringBuilder();\n  try (BufferedReader in=Files.newBufferedReader(path,StandardCharsets.UTF_8)){\n    append(in,buf);\n  }\n catch (  FileNotFoundException|NoSuchFileException e) {\n    return null;\n  }\n  if (buf.length() > 0) {\n    return buf.toString();\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 59,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 22
      },
      "nodeContext" : "buf.length() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 59,
    "startColumnNumber" : 6,
    "endLineNumber" : 59,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}