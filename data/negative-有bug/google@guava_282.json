{
  "id" : 282,
  "expression" : "map",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/util/concurrent/AtomicLongMapBasherTest.java",
  "occurrences" : 12,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 62,
      "startColumnNumber" : 24,
      "endLineNumber" : 62,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 62,
        "startColumnNumber" : 24,
        "endLineNumber" : 62,
        "endColumnNumber" : 48
      },
      "nodeContext" : "map.incrementAndGet(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 62,
        "startColumnNumber" : 24,
        "endLineNumber" : 62,
        "endColumnNumber" : 49
      },
      "nodeContext" : "map.incrementAndGet(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (behavior) {\ncase 0:  map.incrementAndGet(key);\nthreadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 154,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 57,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "{\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "for (int j=0; j < getsPerTask; j++) {\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 62,
        "startColumnNumber" : 24,
        "endLineNumber" : 62,
        "endColumnNumber" : 49
      },
      "nodeContext" : "map.incrementAndGet(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.AtomicLongMap<java.lang.String>"
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 66,
      "startColumnNumber" : 24,
      "endLineNumber" : 66,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 66,
        "startColumnNumber" : 24,
        "endLineNumber" : 66,
        "endColumnNumber" : 48
      },
      "nodeContext" : "map.decrementAndGet(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 66,
        "startColumnNumber" : 24,
        "endLineNumber" : 66,
        "endColumnNumber" : 49
      },
      "nodeContext" : "map.decrementAndGet(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (behavior) {\ncase 0:  map.incrementAndGet(key);\nthreadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 154,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 57,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "{\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "for (int j=0; j < getsPerTask; j++) {\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 66,
        "startColumnNumber" : 24,
        "endLineNumber" : 66,
        "endColumnNumber" : 49
      },
      "nodeContext" : "map.decrementAndGet(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.AtomicLongMap<java.lang.String>"
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 70,
      "startColumnNumber" : 24,
      "endLineNumber" : 70,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 70,
        "startColumnNumber" : 24,
        "endLineNumber" : 70,
        "endColumnNumber" : 49
      },
      "nodeContext" : "map.addAndGet(key,delta)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 70,
        "startColumnNumber" : 24,
        "endLineNumber" : 70,
        "endColumnNumber" : 50
      },
      "nodeContext" : "map.addAndGet(key,delta);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (behavior) {\ncase 0:  map.incrementAndGet(key);\nthreadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 154,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 57,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "{\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "for (int j=0; j < getsPerTask; j++) {\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 70,
        "startColumnNumber" : 24,
        "endLineNumber" : 70,
        "endColumnNumber" : 50
      },
      "nodeContext" : "map.addAndGet(key,delta);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.AtomicLongMap<java.lang.String>"
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 74,
      "startColumnNumber" : 24,
      "endLineNumber" : 74,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 74,
        "endColumnNumber" : 48
      },
      "nodeContext" : "map.getAndIncrement(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 74,
        "endColumnNumber" : 49
      },
      "nodeContext" : "map.getAndIncrement(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (behavior) {\ncase 0:  map.incrementAndGet(key);\nthreadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 154,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 57,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "{\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "for (int j=0; j < getsPerTask; j++) {\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 74,
        "endColumnNumber" : 49
      },
      "nodeContext" : "map.getAndIncrement(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.AtomicLongMap<java.lang.String>"
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 78,
      "startColumnNumber" : 24,
      "endLineNumber" : 78,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 78,
        "startColumnNumber" : 24,
        "endLineNumber" : 78,
        "endColumnNumber" : 48
      },
      "nodeContext" : "map.getAndDecrement(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 78,
        "startColumnNumber" : 24,
        "endLineNumber" : 78,
        "endColumnNumber" : 49
      },
      "nodeContext" : "map.getAndDecrement(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (behavior) {\ncase 0:  map.incrementAndGet(key);\nthreadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 154,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 57,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "{\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "for (int j=0; j < getsPerTask; j++) {\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 78,
        "startColumnNumber" : 24,
        "endLineNumber" : 78,
        "endColumnNumber" : 49
      },
      "nodeContext" : "map.getAndDecrement(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.AtomicLongMap<java.lang.String>"
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 82,
      "startColumnNumber" : 24,
      "endLineNumber" : 82,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 82,
        "startColumnNumber" : 24,
        "endLineNumber" : 82,
        "endColumnNumber" : 49
      },
      "nodeContext" : "map.getAndAdd(key,delta)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 82,
        "startColumnNumber" : 24,
        "endLineNumber" : 82,
        "endColumnNumber" : 50
      },
      "nodeContext" : "map.getAndAdd(key,delta);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (behavior) {\ncase 0:  map.incrementAndGet(key);\nthreadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 154,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 57,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "{\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "for (int j=0; j < getsPerTask; j++) {\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 82,
        "startColumnNumber" : 24,
        "endLineNumber" : 82,
        "endColumnNumber" : 50
      },
      "nodeContext" : "map.getAndAdd(key,delta);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.AtomicLongMap<java.lang.String>"
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 86,
      "startColumnNumber" : 40,
      "endLineNumber" : 86,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 86,
        "startColumnNumber" : 40,
        "endLineNumber" : 86,
        "endColumnNumber" : 59
      },
      "nodeContext" : "map.put(key,delta)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 86,
        "startColumnNumber" : 29,
        "endLineNumber" : 86,
        "endColumnNumber" : 59
      },
      "nodeContext" : "oldValue=map.put(key,delta)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 86,
        "startColumnNumber" : 24,
        "endLineNumber" : 86,
        "endColumnNumber" : 60
      },
      "nodeContext" : "long oldValue=map.put(key,delta);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (behavior) {\ncase 0:  map.incrementAndGet(key);\nthreadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 154,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 57,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "{\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "for (int j=0; j < getsPerTask; j++) {\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 86,
        "startColumnNumber" : 24,
        "endLineNumber" : 86,
        "endColumnNumber" : 60
      },
      "nodeContext" : "long oldValue=map.put(key,delta);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.AtomicLongMap<java.lang.String>"
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 90,
      "startColumnNumber" : 35,
      "endLineNumber" : 90,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 90,
        "startColumnNumber" : 35,
        "endLineNumber" : 90,
        "endColumnNumber" : 47
      },
      "nodeContext" : "map.get(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 90,
        "startColumnNumber" : 24,
        "endLineNumber" : 90,
        "endColumnNumber" : 47
      },
      "nodeContext" : "oldValue=map.get(key)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 90,
        "startColumnNumber" : 24,
        "endLineNumber" : 90,
        "endColumnNumber" : 48
      },
      "nodeContext" : "oldValue=map.get(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (behavior) {\ncase 0:  map.incrementAndGet(key);\nthreadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 154,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 57,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "{\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "for (int j=0; j < getsPerTask; j++) {\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 90,
        "startColumnNumber" : 24,
        "endLineNumber" : 90,
        "endColumnNumber" : 48
      },
      "nodeContext" : "oldValue=map.get(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.AtomicLongMap<java.lang.String>"
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 91,
      "startColumnNumber" : 28,
      "endLineNumber" : 91,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 91,
        "startColumnNumber" : 28,
        "endLineNumber" : 91,
        "endColumnNumber" : 61
      },
      "nodeContext" : "map.replace(key,oldValue,delta)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 91,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (map.replace(key,oldValue,delta)) {\n  threadSum+=delta - oldValue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (behavior) {\ncase 0:  map.incrementAndGet(key);\nthreadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 154,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 57,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "{\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "for (int j=0; j < getsPerTask; j++) {\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 91,
        "startColumnNumber" : 28,
        "endLineNumber" : 91,
        "endColumnNumber" : 61
      },
      "nodeContext" : "map.replace(key,oldValue,delta)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.AtomicLongMap<java.lang.String>"
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 96,
      "startColumnNumber" : 35,
      "endLineNumber" : 96,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 96,
        "startColumnNumber" : 35,
        "endLineNumber" : 96,
        "endColumnNumber" : 50
      },
      "nodeContext" : "map.remove(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 96,
        "startColumnNumber" : 24,
        "endLineNumber" : 96,
        "endColumnNumber" : 50
      },
      "nodeContext" : "oldValue=map.remove(key)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 96,
        "startColumnNumber" : 24,
        "endLineNumber" : 96,
        "endColumnNumber" : 51
      },
      "nodeContext" : "oldValue=map.remove(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (behavior) {\ncase 0:  map.incrementAndGet(key);\nthreadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 154,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 57,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "{\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "for (int j=0; j < getsPerTask; j++) {\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 96,
        "startColumnNumber" : 24,
        "endLineNumber" : 96,
        "endColumnNumber" : 51
      },
      "nodeContext" : "oldValue=map.remove(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.AtomicLongMap<java.lang.String>"
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 100,
      "startColumnNumber" : 35,
      "endLineNumber" : 100,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 100,
        "endColumnNumber" : 47
      },
      "nodeContext" : "map.get(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 100,
        "startColumnNumber" : 24,
        "endLineNumber" : 100,
        "endColumnNumber" : 47
      },
      "nodeContext" : "oldValue=map.get(key)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 100,
        "startColumnNumber" : 24,
        "endLineNumber" : 100,
        "endColumnNumber" : 48
      },
      "nodeContext" : "oldValue=map.get(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (behavior) {\ncase 0:  map.incrementAndGet(key);\nthreadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 154,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 57,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "{\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "for (int j=0; j < getsPerTask; j++) {\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 100,
        "startColumnNumber" : 24,
        "endLineNumber" : 100,
        "endColumnNumber" : 48
      },
      "nodeContext" : "oldValue=map.get(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.AtomicLongMap<java.lang.String>"
  }, {
    "nodeContext" : "map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 101,
      "startColumnNumber" : 28,
      "endLineNumber" : 101,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 101,
        "startColumnNumber" : 28,
        "endLineNumber" : 101,
        "endColumnNumber" : 53
      },
      "nodeContext" : "map.remove(key,oldValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 101,
        "startColumnNumber" : 24,
        "endLineNumber" : 103,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (map.remove(key,oldValue)) {\n  threadSum-=oldValue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1912,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (behavior) {\ncase 0:  map.incrementAndGet(key);\nthreadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 154,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 57,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "{\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 108,
        "endColumnNumber" : 19
      },
      "nodeContext" : "for (int j=0; j < getsPerTask; j++) {\n  long delta=random.nextInt(deltaRange);\n  int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:    map.incrementAndGet(key);\n  threadSum++;\nbreak;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 55,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  int threadSum=0;\n  for (int j=0; j < getsPerTask; j++) {\n    long delta=random.nextInt(deltaRange);\n    int behavior=random.nextInt(10);\nswitch (behavior) {\ncase 0:      map.incrementAndGet(key);\n    threadSum++;\n  break;\ncase 1:map.decrementAndGet(key);\nthreadSum--;\nbreak;\ncase 2:map.addAndGet(key,delta);\nthreadSum+=delta;\nbreak;\ncase 3:map.getAndIncrement(key);\nthreadSum++;\nbreak;\ncase 4:map.getAndDecrement(key);\nthreadSum--;\nbreak;\ncase 5:map.getAndAdd(key,delta);\nthreadSum+=delta;\nbreak;\ncase 6:long oldValue=map.put(key,delta);\nthreadSum+=delta - oldValue;\nbreak;\ncase 7:oldValue=map.get(key);\nif (map.replace(key,oldValue,delta)) {\nthreadSum+=delta - oldValue;\n}\nbreak;\ncase 8:oldValue=map.remove(key);\nthreadSum-=oldValue;\nbreak;\ncase 9:oldValue=map.get(key);\nif (map.remove(key,oldValue)) {\nthreadSum-=oldValue;\n}\nbreak;\ndefault:throw new AssertionError();\n}\n}\nsum.addAndGet(threadSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 101,
        "startColumnNumber" : 28,
        "endLineNumber" : 101,
        "endColumnNumber" : 53
      },
      "nodeContext" : "map.remove(key,oldValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.AtomicLongMap<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 62,
    "startColumnNumber" : 24,
    "endLineNumber" : 62,
    "endColumnNumber" : 27
  }, {
    "charLength" : 3,
    "startLineNumber" : 66,
    "startColumnNumber" : 24,
    "endLineNumber" : 66,
    "endColumnNumber" : 27
  }, {
    "charLength" : 3,
    "startLineNumber" : 70,
    "startColumnNumber" : 24,
    "endLineNumber" : 70,
    "endColumnNumber" : 27
  }, {
    "charLength" : 3,
    "startLineNumber" : 74,
    "startColumnNumber" : 24,
    "endLineNumber" : 74,
    "endColumnNumber" : 27
  }, {
    "charLength" : 3,
    "startLineNumber" : 78,
    "startColumnNumber" : 24,
    "endLineNumber" : 78,
    "endColumnNumber" : 27
  }, {
    "charLength" : 3,
    "startLineNumber" : 82,
    "startColumnNumber" : 24,
    "endLineNumber" : 82,
    "endColumnNumber" : 27
  }, {
    "charLength" : 3,
    "startLineNumber" : 86,
    "startColumnNumber" : 40,
    "endLineNumber" : 86,
    "endColumnNumber" : 43
  }, {
    "charLength" : 3,
    "startLineNumber" : 90,
    "startColumnNumber" : 35,
    "endLineNumber" : 90,
    "endColumnNumber" : 38
  }, {
    "charLength" : 3,
    "startLineNumber" : 91,
    "startColumnNumber" : 28,
    "endLineNumber" : 91,
    "endColumnNumber" : 31
  }, {
    "charLength" : 3,
    "startLineNumber" : 96,
    "startColumnNumber" : 35,
    "endLineNumber" : 96,
    "endColumnNumber" : 38
  }, {
    "charLength" : 3,
    "startLineNumber" : 100,
    "startColumnNumber" : 35,
    "endLineNumber" : 100,
    "endColumnNumber" : 38
  }, {
    "charLength" : 3,
    "startLineNumber" : 101,
    "startColumnNumber" : 28,
    "endLineNumber" : 101,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 2
  } ]
}