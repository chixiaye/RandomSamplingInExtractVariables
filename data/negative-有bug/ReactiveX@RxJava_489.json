{
  "id" : 489,
  "expression" : "new HashMap<String,String>()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/observable/ObservableScanTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new HashMap<String,String>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 29,
      "startColumnNumber" : 14,
      "endLineNumber" : 29,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 10
      },
      "nodeContext" : "ObservableEventStream.getEventStream(\"HTTP-ClusterB\",20).scan(new HashMap<String,String>(),new BiFunction<HashMap<String,String>,Event,HashMap<String,String>>(){\n  @Override public HashMap<String,String> apply(  HashMap<String,String> accum,  Event perInstanceEvent){\n    accum.put(\"instance\",perInstanceEvent.instanceId);\n    return accum;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 17
      },
      "nodeContext" : "ObservableEventStream.getEventStream(\"HTTP-ClusterB\",20).scan(new HashMap<String,String>(),new BiFunction<HashMap<String,String>,Event,HashMap<String,String>>(){\n  @Override public HashMap<String,String> apply(  HashMap<String,String> accum,  Event perInstanceEvent){\n    accum.put(\"instance\",perInstanceEvent.instanceId);\n    return accum;\n  }\n}\n).take(10)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 21
      },
      "nodeContext" : "ObservableEventStream.getEventStream(\"HTTP-ClusterB\",20).scan(new HashMap<String,String>(),new BiFunction<HashMap<String,String>,Event,HashMap<String,String>>(){\n  @Override public HashMap<String,String> apply(  HashMap<String,String> accum,  Event perInstanceEvent){\n    accum.put(\"instance\",perInstanceEvent.instanceId);\n    return accum;\n  }\n}\n).take(10).toBlocking()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 10
      },
      "nodeContext" : "ObservableEventStream.getEventStream(\"HTTP-ClusterB\",20).scan(new HashMap<String,String>(),new BiFunction<HashMap<String,String>,Event,HashMap<String,String>>(){\n  @Override public HashMap<String,String> apply(  HashMap<String,String> accum,  Event perInstanceEvent){\n    accum.put(\"instance\",perInstanceEvent.instanceId);\n    return accum;\n  }\n}\n).take(10).toBlocking().forEach(new Consumer<HashMap<String,String>>(){\n  @Override public void accept(  HashMap<String,String> pv){\n    System.out.println(pv);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 114,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 11
      },
      "nodeContext" : "ObservableEventStream.getEventStream(\"HTTP-ClusterB\",20).scan(new HashMap<String,String>(),new BiFunction<HashMap<String,String>,Event,HashMap<String,String>>(){\n  @Override public HashMap<String,String> apply(  HashMap<String,String> accum,  Event perInstanceEvent){\n    accum.put(\"instance\",perInstanceEvent.instanceId);\n    return accum;\n  }\n}\n).take(10).toBlocking().forEach(new Consumer<HashMap<String,String>>(){\n  @Override public void accept(  HashMap<String,String> pv){\n    System.out.println(pv);\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 115,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 26,
        "startColumnNumber" : 38,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ObservableEventStream.getEventStream(\"HTTP-ClusterB\",20).scan(new HashMap<String,String>(),new BiFunction<HashMap<String,String>,Event,HashMap<String,String>>(){\n    @Override public HashMap<String,String> apply(    HashMap<String,String> accum,    Event perInstanceEvent){\n      accum.put(\"instance\",perInstanceEvent.instanceId);\n      return accum;\n    }\n  }\n).take(10).toBlocking().forEach(new Consumer<HashMap<String,String>>(){\n    @Override public void accept(    HashMap<String,String> pv){\n      System.out.println(pv);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUnsubscribeScan(){\n  ObservableEventStream.getEventStream(\"HTTP-ClusterB\",20).scan(new HashMap<String,String>(),new BiFunction<HashMap<String,String>,Event,HashMap<String,String>>(){\n    @Override public HashMap<String,String> apply(    HashMap<String,String> accum,    Event perInstanceEvent){\n      accum.put(\"instance\",perInstanceEvent.instanceId);\n      return accum;\n    }\n  }\n).take(10).toBlocking().forEach(new Consumer<HashMap<String,String>>(){\n    @Override public void accept(    HashMap<String,String> pv){\n      System.out.println(pv);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 10
      },
      "nodeContext" : "ObservableEventStream.getEventStream(\"HTTP-ClusterB\",20).scan(new HashMap<String,String>(),new BiFunction<HashMap<String,String>,Event,HashMap<String,String>>(){\n  @Override public HashMap<String,String> apply(  HashMap<String,String> accum,  Event perInstanceEvent){\n    accum.put(\"instance\",perInstanceEvent.instanceId);\n    return accum;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 72,
      "astHeight" : 9
    },
    "tokenLength" : 2,
    "type" : "java.util.HashMap<java.lang.String,java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 29,
    "startColumnNumber" : 14,
    "endLineNumber" : 29,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}