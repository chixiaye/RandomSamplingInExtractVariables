{
  "id" : 126,
  "expression" : "method.getAnnotation(ScalarOperator.class) != null",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/operator/scalar/annotations/ScalarFromAnnotationsParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "method.getAnnotation(ScalarOperator.class) != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 93,
      "startColumnNumber" : 84,
      "endLineNumber" : 93,
      "endColumnNumber" : 134
    },
    "astNodeNumber" : 8,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 93,
        "startColumnNumber" : 83,
        "endLineNumber" : 93,
        "endColumnNumber" : 135
      },
      "nodeContext" : "(method.getAnnotation(ScalarOperator.class) != null)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 93,
        "startColumnNumber" : 27,
        "endLineNumber" : 93,
        "endColumnNumber" : 135
      },
      "nodeContext" : "(method.getAnnotation(ScalarFunction.class) != null) || (method.getAnnotation(ScalarOperator.class) != null)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 143
      },
      "nodeContext" : "checkCondition((method.getAnnotation(ScalarFunction.class) != null) || (method.getAnnotation(ScalarOperator.class) != null),FUNCTION_IMPLEMENTATION_ERROR,\"Method [%s] annotated with @SqlType is missing @ScalarFunction or @ScalarOperator\",method)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 144
      },
      "nodeContext" : "checkCondition((method.getAnnotation(ScalarFunction.class) != null) || (method.getAnnotation(ScalarOperator.class) != null),FUNCTION_IMPLEMENTATION_ERROR,\"Method [%s] annotated with @SqlType is missing @ScalarFunction or @ScalarOperator\",method);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 92,
        "startColumnNumber" : 95,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  checkCondition((method.getAnnotation(ScalarFunction.class) != null) || (method.getAnnotation(ScalarOperator.class) != null),FUNCTION_IMPLEMENTATION_ERROR,\"Method [%s] annotated with @SqlType is missing @ScalarFunction or @ScalarOperator\",method);\n  for (  ScalarImplementationHeader header : ScalarImplementationHeader.fromAnnotatedElement(method)) {\n    builder.add(new ScalarHeaderAndMethods(header,ImmutableSet.of(method)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Method method : FunctionsParserHelper.findPublicMethods(annotated,ImmutableSet.of(SqlType.class,ScalarFunction.class,ScalarOperator.class),ImmutableSet.of(SqlInvokedScalarFunction.class,CodegenScalarFunction.class))) {\n  checkCondition((method.getAnnotation(ScalarFunction.class) != null) || (method.getAnnotation(ScalarOperator.class) != null),FUNCTION_IMPLEMENTATION_ERROR,\"Method [%s] annotated with @SqlType is missing @ScalarFunction or @ScalarOperator\",method);\n  for (  ScalarImplementationHeader header : ScalarImplementationHeader.fromAnnotatedElement(method)) {\n    builder.add(new ScalarHeaderAndMethods(header,ImmutableSet.of(method)));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 78,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImmutableList.Builder<ScalarHeaderAndMethods> builder=ImmutableList.builder();\n  for (  Method method : FunctionsParserHelper.findPublicMethods(annotated,ImmutableSet.of(SqlType.class,ScalarFunction.class,ScalarOperator.class),ImmutableSet.of(SqlInvokedScalarFunction.class,CodegenScalarFunction.class))) {\n    checkCondition((method.getAnnotation(ScalarFunction.class) != null) || (method.getAnnotation(ScalarOperator.class) != null),FUNCTION_IMPLEMENTATION_ERROR,\"Method [%s] annotated with @SqlType is missing @ScalarFunction or @ScalarOperator\",method);\n    for (    ScalarImplementationHeader header : ScalarImplementationHeader.fromAnnotatedElement(method)) {\n      builder.add(new ScalarHeaderAndMethods(header,ImmutableSet.of(method)));\n    }\n  }\n  return builder.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1020,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static List<ScalarHeaderAndMethods> findScalarsInFunctionSetClass(Class<?> annotated){\n  ImmutableList.Builder<ScalarHeaderAndMethods> builder=ImmutableList.builder();\n  for (  Method method : FunctionsParserHelper.findPublicMethods(annotated,ImmutableSet.of(SqlType.class,ScalarFunction.class,ScalarOperator.class),ImmutableSet.of(SqlInvokedScalarFunction.class,CodegenScalarFunction.class))) {\n    checkCondition((method.getAnnotation(ScalarFunction.class) != null) || (method.getAnnotation(ScalarOperator.class) != null),FUNCTION_IMPLEMENTATION_ERROR,\"Method [%s] annotated with @SqlType is missing @ScalarFunction or @ScalarOperator\",method);\n    for (    ScalarImplementationHeader header : ScalarImplementationHeader.fromAnnotatedElement(method)) {\n      builder.add(new ScalarHeaderAndMethods(header,ImmutableSet.of(method)));\n    }\n  }\n  return builder.build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 93,
        "startColumnNumber" : 27,
        "endLineNumber" : 93,
        "endColumnNumber" : 135
      },
      "nodeContext" : "(method.getAnnotation(ScalarFunction.class) != null) || (method.getAnnotation(ScalarOperator.class) != null)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 93,
    "startColumnNumber" : 84,
    "endLineNumber" : 93,
    "endColumnNumber" : 134
  } ],
  "layoutRelationDataList" : [ ]
}