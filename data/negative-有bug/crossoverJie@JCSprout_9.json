{
  "id" : 9,
  "expression" : "binaryNodeTravel",
  "projectName" : "crossoverJie@JCSprout",
  "commitID" : "397ee3763e12279fd83d26d02da20955d5bcc7cf",
  "filePath" : "/src/test/java/com/crossoverjie/algorithm/BinaryNodeTravelTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "binaryNodeTravel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 15,
      "startColumnNumber" : 15,
      "endLineNumber" : 15,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 15,
        "startColumnNumber" : 15,
        "endLineNumber" : 15,
        "endColumnNumber" : 39
      },
      "nodeContext" : "binaryNodeTravel != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (binaryNodeTravel != null) {\n  System.out.print(binaryNodeTravel.getData() + \"--->\");\n  binaryNodeTravel=binaryNodeTravel.next;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 7,
        "startColumnNumber" : 49,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BinaryNodeTravel node=new BinaryNodeTravel();\n  node=node.createNode();\n  BinaryNodeTravel binaryNodeTravel=node.levelIterator(node);\n  while (binaryNodeTravel != null) {\n    System.out.print(binaryNodeTravel.getData() + \"--->\");\n    binaryNodeTravel=binaryNodeTravel.next;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 6,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void levelIterator() throws Exception {\n  BinaryNodeTravel node=new BinaryNodeTravel();\n  node=node.createNode();\n  BinaryNodeTravel binaryNodeTravel=node.levelIterator(node);\n  while (binaryNodeTravel != null) {\n    System.out.print(binaryNodeTravel.getData() + \"--->\");\n    binaryNodeTravel=binaryNodeTravel.next;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 15,
        "startColumnNumber" : 15,
        "endLineNumber" : 15,
        "endColumnNumber" : 39
      },
      "nodeContext" : "binaryNodeTravel != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.crossoverjie.algorithm.BinaryNodeTravel"
  }, {
    "nodeContext" : "binaryNodeTravel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 16,
      "startColumnNumber" : 29,
      "endLineNumber" : 16,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 16,
        "startColumnNumber" : 29,
        "endLineNumber" : 16,
        "endColumnNumber" : 55
      },
      "nodeContext" : "binaryNodeTravel.getData()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 16,
        "startColumnNumber" : 29,
        "endLineNumber" : 16,
        "endColumnNumber" : 63
      },
      "nodeContext" : "binaryNodeTravel.getData() + \"--->\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 16,
        "startColumnNumber" : 12,
        "endLineNumber" : 16,
        "endColumnNumber" : 64
      },
      "nodeContext" : "System.out.print(binaryNodeTravel.getData() + \"--->\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 16,
        "startColumnNumber" : 12,
        "endLineNumber" : 16,
        "endColumnNumber" : 65
      },
      "nodeContext" : "System.out.print(binaryNodeTravel.getData() + \"--->\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 15,
        "startColumnNumber" : 40,
        "endLineNumber" : 18,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.out.print(binaryNodeTravel.getData() + \"--->\");\n  binaryNodeTravel=binaryNodeTravel.next;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (binaryNodeTravel != null) {\n  System.out.print(binaryNodeTravel.getData() + \"--->\");\n  binaryNodeTravel=binaryNodeTravel.next;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 7,
        "startColumnNumber" : 49,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BinaryNodeTravel node=new BinaryNodeTravel();\n  node=node.createNode();\n  BinaryNodeTravel binaryNodeTravel=node.levelIterator(node);\n  while (binaryNodeTravel != null) {\n    System.out.print(binaryNodeTravel.getData() + \"--->\");\n    binaryNodeTravel=binaryNodeTravel.next;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 6,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void levelIterator() throws Exception {\n  BinaryNodeTravel node=new BinaryNodeTravel();\n  node=node.createNode();\n  BinaryNodeTravel binaryNodeTravel=node.levelIterator(node);\n  while (binaryNodeTravel != null) {\n    System.out.print(binaryNodeTravel.getData() + \"--->\");\n    binaryNodeTravel=binaryNodeTravel.next;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 16,
        "startColumnNumber" : 12,
        "endLineNumber" : 16,
        "endColumnNumber" : 65
      },
      "nodeContext" : "System.out.print(binaryNodeTravel.getData() + \"--->\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.crossoverjie.algorithm.BinaryNodeTravel"
  }, {
    "nodeContext" : "binaryNodeTravel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 17,
      "startColumnNumber" : 31,
      "endLineNumber" : 17,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 17,
        "startColumnNumber" : 31,
        "endLineNumber" : 17,
        "endColumnNumber" : 52
      },
      "nodeContext" : "binaryNodeTravel.next",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 17,
        "startColumnNumber" : 12,
        "endLineNumber" : 17,
        "endColumnNumber" : 52
      },
      "nodeContext" : "binaryNodeTravel=binaryNodeTravel.next",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 17,
        "startColumnNumber" : 12,
        "endLineNumber" : 17,
        "endColumnNumber" : 53
      },
      "nodeContext" : "binaryNodeTravel=binaryNodeTravel.next;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 15,
        "startColumnNumber" : 40,
        "endLineNumber" : 18,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.out.print(binaryNodeTravel.getData() + \"--->\");\n  binaryNodeTravel=binaryNodeTravel.next;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (binaryNodeTravel != null) {\n  System.out.print(binaryNodeTravel.getData() + \"--->\");\n  binaryNodeTravel=binaryNodeTravel.next;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 7,
        "startColumnNumber" : 49,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BinaryNodeTravel node=new BinaryNodeTravel();\n  node=node.createNode();\n  BinaryNodeTravel binaryNodeTravel=node.levelIterator(node);\n  while (binaryNodeTravel != null) {\n    System.out.print(binaryNodeTravel.getData() + \"--->\");\n    binaryNodeTravel=binaryNodeTravel.next;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 6,
        "startColumnNumber" : 4,
        "endLineNumber" : 19,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void levelIterator() throws Exception {\n  BinaryNodeTravel node=new BinaryNodeTravel();\n  node=node.createNode();\n  BinaryNodeTravel binaryNodeTravel=node.levelIterator(node);\n  while (binaryNodeTravel != null) {\n    System.out.print(binaryNodeTravel.getData() + \"--->\");\n    binaryNodeTravel=binaryNodeTravel.next;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 17,
        "startColumnNumber" : 12,
        "endLineNumber" : 17,
        "endColumnNumber" : 53
      },
      "nodeContext" : "binaryNodeTravel=binaryNodeTravel.next;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.crossoverjie.algorithm.BinaryNodeTravel"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 15,
    "startColumnNumber" : 15,
    "endLineNumber" : 15,
    "endColumnNumber" : 31
  }, {
    "charLength" : 16,
    "startLineNumber" : 16,
    "startColumnNumber" : 29,
    "endLineNumber" : 16,
    "endColumnNumber" : 45
  }, {
    "charLength" : 16,
    "startLineNumber" : 17,
    "startColumnNumber" : 31,
    "endLineNumber" : 17,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}