{
  "id" : 455,
  "expression" : "segment",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-infra/shardingsphere-infra-federation/shardingsphere-infra-federation-optimizer/src/main/java/org/apache/shardingsphere/infra/federation/optimizer/converter/segment/from/impl/JoinTableConverter.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "segment",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 49,
      "startColumnNumber" : 61,
      "endLineNumber" : 49,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 49,
        "startColumnNumber" : 61,
        "endLineNumber" : 49,
        "endColumnNumber" : 78
      },
      "nodeContext" : "segment.getLeft()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 49,
        "startColumnNumber" : 23,
        "endLineNumber" : 49,
        "endColumnNumber" : 79
      },
      "nodeContext" : "new TableConverter().convertToSQLNode(segment.getLeft())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 49,
        "startColumnNumber" : 23,
        "endLineNumber" : 49,
        "endColumnNumber" : 119
      },
      "nodeContext" : "new TableConverter().convertToSQLNode(segment.getLeft()).orElseThrow(IllegalStateException::new)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 49,
        "startColumnNumber" : 16,
        "endLineNumber" : 49,
        "endColumnNumber" : 119
      },
      "nodeContext" : "left=new TableConverter().convertToSQLNode(segment.getLeft()).orElseThrow(IllegalStateException::new)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 120
      },
      "nodeContext" : "SqlNode left=new TableConverter().convertToSQLNode(segment.getLeft()).orElseThrow(IllegalStateException::new);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 48,
        "startColumnNumber" : 78,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlNode left=new TableConverter().convertToSQLNode(segment.getLeft()).orElseThrow(IllegalStateException::new);\n  SqlNode right=new TableConverter().convertToSQLNode(segment.getRight()).orElseThrow(IllegalStateException::new);\n  Optional<SqlNode> condition=new ExpressionConverter().convertToSQLNode(segment.getCondition());\n  SqlLiteral conditionType=condition.isPresent() ? JoinConditionType.ON.symbol(SqlParserPos.ZERO) : JoinConditionType.NONE.symbol(SqlParserPos.ZERO);\n  return Optional.of(new SqlJoin(SqlParserPos.ZERO,left,SqlLiteral.createBoolean(false,SqlParserPos.ZERO),convertJoinType(segment.getJoinType()),right,conditionType,condition.orElse(null)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Optional<SqlJoin> convertToSQLNode(final JoinTableSegment segment){\n  SqlNode left=new TableConverter().convertToSQLNode(segment.getLeft()).orElseThrow(IllegalStateException::new);\n  SqlNode right=new TableConverter().convertToSQLNode(segment.getRight()).orElseThrow(IllegalStateException::new);\n  Optional<SqlNode> condition=new ExpressionConverter().convertToSQLNode(segment.getCondition());\n  SqlLiteral conditionType=condition.isPresent() ? JoinConditionType.ON.symbol(SqlParserPos.ZERO) : JoinConditionType.NONE.symbol(SqlParserPos.ZERO);\n  return Optional.of(new SqlJoin(SqlParserPos.ZERO,left,SqlLiteral.createBoolean(false,SqlParserPos.ZERO),convertJoinType(segment.getJoinType()),right,conditionType,condition.orElse(null)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 120
      },
      "nodeContext" : "SqlNode left=new TableConverter().convertToSQLNode(segment.getLeft()).orElseThrow(IllegalStateException::new);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.sql.parser.sql.common.segment.generic.table.JoinTableSegment"
  }, {
    "nodeContext" : "segment",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 50,
      "startColumnNumber" : 62,
      "endLineNumber" : 50,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 50,
        "startColumnNumber" : 62,
        "endLineNumber" : 50,
        "endColumnNumber" : 80
      },
      "nodeContext" : "segment.getRight()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 50,
        "startColumnNumber" : 24,
        "endLineNumber" : 50,
        "endColumnNumber" : 81
      },
      "nodeContext" : "new TableConverter().convertToSQLNode(segment.getRight())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 50,
        "startColumnNumber" : 24,
        "endLineNumber" : 50,
        "endColumnNumber" : 121
      },
      "nodeContext" : "new TableConverter().convertToSQLNode(segment.getRight()).orElseThrow(IllegalStateException::new)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 121
      },
      "nodeContext" : "right=new TableConverter().convertToSQLNode(segment.getRight()).orElseThrow(IllegalStateException::new)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 122
      },
      "nodeContext" : "SqlNode right=new TableConverter().convertToSQLNode(segment.getRight()).orElseThrow(IllegalStateException::new);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 48,
        "startColumnNumber" : 78,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlNode left=new TableConverter().convertToSQLNode(segment.getLeft()).orElseThrow(IllegalStateException::new);\n  SqlNode right=new TableConverter().convertToSQLNode(segment.getRight()).orElseThrow(IllegalStateException::new);\n  Optional<SqlNode> condition=new ExpressionConverter().convertToSQLNode(segment.getCondition());\n  SqlLiteral conditionType=condition.isPresent() ? JoinConditionType.ON.symbol(SqlParserPos.ZERO) : JoinConditionType.NONE.symbol(SqlParserPos.ZERO);\n  return Optional.of(new SqlJoin(SqlParserPos.ZERO,left,SqlLiteral.createBoolean(false,SqlParserPos.ZERO),convertJoinType(segment.getJoinType()),right,conditionType,condition.orElse(null)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Optional<SqlJoin> convertToSQLNode(final JoinTableSegment segment){\n  SqlNode left=new TableConverter().convertToSQLNode(segment.getLeft()).orElseThrow(IllegalStateException::new);\n  SqlNode right=new TableConverter().convertToSQLNode(segment.getRight()).orElseThrow(IllegalStateException::new);\n  Optional<SqlNode> condition=new ExpressionConverter().convertToSQLNode(segment.getCondition());\n  SqlLiteral conditionType=condition.isPresent() ? JoinConditionType.ON.symbol(SqlParserPos.ZERO) : JoinConditionType.NONE.symbol(SqlParserPos.ZERO);\n  return Optional.of(new SqlJoin(SqlParserPos.ZERO,left,SqlLiteral.createBoolean(false,SqlParserPos.ZERO),convertJoinType(segment.getJoinType()),right,conditionType,condition.orElse(null)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 122
      },
      "nodeContext" : "SqlNode right=new TableConverter().convertToSQLNode(segment.getRight()).orElseThrow(IllegalStateException::new);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.sql.parser.sql.common.segment.generic.table.JoinTableSegment"
  }, {
    "nodeContext" : "segment",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 51,
      "startColumnNumber" : 81,
      "endLineNumber" : 51,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 51,
        "startColumnNumber" : 81,
        "endLineNumber" : 51,
        "endColumnNumber" : 103
      },
      "nodeContext" : "segment.getCondition()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 51,
        "startColumnNumber" : 38,
        "endLineNumber" : 51,
        "endColumnNumber" : 104
      },
      "nodeContext" : "new ExpressionConverter().convertToSQLNode(segment.getCondition())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 51,
        "startColumnNumber" : 26,
        "endLineNumber" : 51,
        "endColumnNumber" : 104
      },
      "nodeContext" : "condition=new ExpressionConverter().convertToSQLNode(segment.getCondition())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 105
      },
      "nodeContext" : "Optional<SqlNode> condition=new ExpressionConverter().convertToSQLNode(segment.getCondition());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 48,
        "startColumnNumber" : 78,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlNode left=new TableConverter().convertToSQLNode(segment.getLeft()).orElseThrow(IllegalStateException::new);\n  SqlNode right=new TableConverter().convertToSQLNode(segment.getRight()).orElseThrow(IllegalStateException::new);\n  Optional<SqlNode> condition=new ExpressionConverter().convertToSQLNode(segment.getCondition());\n  SqlLiteral conditionType=condition.isPresent() ? JoinConditionType.ON.symbol(SqlParserPos.ZERO) : JoinConditionType.NONE.symbol(SqlParserPos.ZERO);\n  return Optional.of(new SqlJoin(SqlParserPos.ZERO,left,SqlLiteral.createBoolean(false,SqlParserPos.ZERO),convertJoinType(segment.getJoinType()),right,conditionType,condition.orElse(null)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Optional<SqlJoin> convertToSQLNode(final JoinTableSegment segment){\n  SqlNode left=new TableConverter().convertToSQLNode(segment.getLeft()).orElseThrow(IllegalStateException::new);\n  SqlNode right=new TableConverter().convertToSQLNode(segment.getRight()).orElseThrow(IllegalStateException::new);\n  Optional<SqlNode> condition=new ExpressionConverter().convertToSQLNode(segment.getCondition());\n  SqlLiteral conditionType=condition.isPresent() ? JoinConditionType.ON.symbol(SqlParserPos.ZERO) : JoinConditionType.NONE.symbol(SqlParserPos.ZERO);\n  return Optional.of(new SqlJoin(SqlParserPos.ZERO,left,SqlLiteral.createBoolean(false,SqlParserPos.ZERO),convertJoinType(segment.getJoinType()),right,conditionType,condition.orElse(null)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 105
      },
      "nodeContext" : "Optional<SqlNode> condition=new ExpressionConverter().convertToSQLNode(segment.getCondition());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.sql.parser.sql.common.segment.generic.table.JoinTableSegment"
  }, {
    "nodeContext" : "segment",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 54,
      "startColumnNumber" : 121,
      "endLineNumber" : 54,
      "endColumnNumber" : 128
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 54,
        "startColumnNumber" : 121,
        "endLineNumber" : 54,
        "endColumnNumber" : 142
      },
      "nodeContext" : "segment.getJoinType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 54,
        "startColumnNumber" : 105,
        "endLineNumber" : 54,
        "endColumnNumber" : 143
      },
      "nodeContext" : "convertJoinType(segment.getJoinType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 190
      },
      "nodeContext" : "new SqlJoin(SqlParserPos.ZERO,left,SqlLiteral.createBoolean(false,SqlParserPos.ZERO),convertJoinType(segment.getJoinType()),right,conditionType,condition.orElse(null))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 25,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 53,
        "startColumnNumber" : 15,
        "endLineNumber" : 54,
        "endColumnNumber" : 191
      },
      "nodeContext" : "Optional.of(new SqlJoin(SqlParserPos.ZERO,left,SqlLiteral.createBoolean(false,SqlParserPos.ZERO),convertJoinType(segment.getJoinType()),right,conditionType,condition.orElse(null)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 192
      },
      "nodeContext" : "return Optional.of(new SqlJoin(SqlParserPos.ZERO,left,SqlLiteral.createBoolean(false,SqlParserPos.ZERO),convertJoinType(segment.getJoinType()),right,conditionType,condition.orElse(null)));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 48,
        "startColumnNumber" : 78,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlNode left=new TableConverter().convertToSQLNode(segment.getLeft()).orElseThrow(IllegalStateException::new);\n  SqlNode right=new TableConverter().convertToSQLNode(segment.getRight()).orElseThrow(IllegalStateException::new);\n  Optional<SqlNode> condition=new ExpressionConverter().convertToSQLNode(segment.getCondition());\n  SqlLiteral conditionType=condition.isPresent() ? JoinConditionType.ON.symbol(SqlParserPos.ZERO) : JoinConditionType.NONE.symbol(SqlParserPos.ZERO);\n  return Optional.of(new SqlJoin(SqlParserPos.ZERO,left,SqlLiteral.createBoolean(false,SqlParserPos.ZERO),convertJoinType(segment.getJoinType()),right,conditionType,condition.orElse(null)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Optional<SqlJoin> convertToSQLNode(final JoinTableSegment segment){\n  SqlNode left=new TableConverter().convertToSQLNode(segment.getLeft()).orElseThrow(IllegalStateException::new);\n  SqlNode right=new TableConverter().convertToSQLNode(segment.getRight()).orElseThrow(IllegalStateException::new);\n  Optional<SqlNode> condition=new ExpressionConverter().convertToSQLNode(segment.getCondition());\n  SqlLiteral conditionType=condition.isPresent() ? JoinConditionType.ON.symbol(SqlParserPos.ZERO) : JoinConditionType.NONE.symbol(SqlParserPos.ZERO);\n  return Optional.of(new SqlJoin(SqlParserPos.ZERO,left,SqlLiteral.createBoolean(false,SqlParserPos.ZERO),convertJoinType(segment.getJoinType()),right,conditionType,condition.orElse(null)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 190
      },
      "nodeContext" : "new SqlJoin(SqlParserPos.ZERO,left,SqlLiteral.createBoolean(false,SqlParserPos.ZERO),convertJoinType(segment.getJoinType()),right,conditionType,condition.orElse(null))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 25,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.sql.parser.sql.common.segment.generic.table.JoinTableSegment"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 49,
    "startColumnNumber" : 61,
    "endLineNumber" : 49,
    "endColumnNumber" : 68
  }, {
    "charLength" : 7,
    "startLineNumber" : 50,
    "startColumnNumber" : 62,
    "endLineNumber" : 50,
    "endColumnNumber" : 69
  }, {
    "charLength" : 7,
    "startLineNumber" : 51,
    "startColumnNumber" : 81,
    "endLineNumber" : 51,
    "endColumnNumber" : 88
  }, {
    "charLength" : 7,
    "startLineNumber" : 54,
    "startColumnNumber" : 121,
    "endLineNumber" : 54,
    "endColumnNumber" : 128
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  } ]
}