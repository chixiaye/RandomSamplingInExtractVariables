{
  "id" : 166,
  "expression" : "newVersions(2,Short.MAX_VALUE).contains((short)0)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/generator/src/test/java/org/apache/kafka/message/VersionsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newVersions(2,Short.MAX_VALUE).contains((short)0)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 80,
      "startColumnNumber" : 20,
      "endLineNumber" : 80,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertFalse(newVersions(2,Short.MAX_VALUE).contains((short)0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertFalse(newVersions(2,Short.MAX_VALUE).contains((short)0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 75,
        "startColumnNumber" : 31,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(newVersions(2,3).contains((short)3));\n  assertTrue(newVersions(2,3).contains((short)2));\n  assertFalse(newVersions(0,1).contains((short)2));\n  assertTrue(newVersions(0,Short.MAX_VALUE).contains((short)100));\n  assertFalse(newVersions(2,Short.MAX_VALUE).contains((short)0));\n  assertTrue(newVersions(2,3).contains(newVersions(2,3)));\n  assertTrue(newVersions(2,3).contains(newVersions(2,2)));\n  assertFalse(newVersions(2,3).contains(newVersions(2,4)));\n  assertTrue(newVersions(2,3).contains(Versions.NONE));\n  assertTrue(Versions.ALL.contains(newVersions(1,2)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 698,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testContains(){\n  assertTrue(newVersions(2,3).contains((short)3));\n  assertTrue(newVersions(2,3).contains((short)2));\n  assertFalse(newVersions(0,1).contains((short)2));\n  assertTrue(newVersions(0,Short.MAX_VALUE).contains((short)100));\n  assertFalse(newVersions(2,Short.MAX_VALUE).contains((short)0));\n  assertTrue(newVersions(2,3).contains(newVersions(2,3)));\n  assertTrue(newVersions(2,3).contains(newVersions(2,2)));\n  assertFalse(newVersions(2,3).contains(newVersions(2,4)));\n  assertTrue(newVersions(2,3).contains(Versions.NONE));\n  assertTrue(Versions.ALL.contains(newVersions(1,2)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertFalse(newVersions(2,Short.MAX_VALUE).contains((short)0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 51,
    "startLineNumber" : 80,
    "startColumnNumber" : 20,
    "endLineNumber" : 80,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}