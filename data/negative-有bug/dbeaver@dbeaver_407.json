{
  "id" : 407,
  "expression" : "(char)c",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model.sql/src/org/jkiss/dbeaver/model/sql/parser/rules/SQLParameterRule.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(char)c",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 59,
      "startColumnNumber" : 30,
      "endLineNumber" : 59,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 39
      },
      "nodeContext" : "buffer.append((char)c)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 40
      },
      "nodeContext" : "buffer.append((char)c);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 58,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  buffer.append((char)c);\n  c=scanner.read();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 87
      },
      "nodeContext" : "do {\n  buffer.append((char)c);\n  c=scanner.read();\n}\n while (c != TPCharacterScanner.EOF && Character.isJavaIdentifierPart(c));\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1227,
        "startLineNumber" : 56,
        "startColumnNumber" : 94,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  buffer.setLength(0);\n  do {\n    buffer.append((char)c);\n    c=scanner.read();\n  }\n while (c != TPCharacterScanner.EOF && Character.isJavaIdentifierPart(c));\n  scanner.unread();\n  if (syntaxManager.isAnonymousParametersEnabled()) {\n    if (buffer.length() == 1 && buffer.charAt(0) == anonymousParameterMark) {\n      return parameterToken;\n    }\n  }\n  if (syntaxManager.isParametersEnabled()) {\n    if (buffer.charAt(0) == namedPrefix && buffer.length() > 1) {\n      boolean validChars=true;\n      for (int i=1; i < buffer.length(); i++) {\n        if (!Character.isJavaIdentifierPart(buffer.charAt(i))) {\n          validChars=false;\n          break;\n        }\n      }\n      if (validChars) {\n        return parameterToken;\n      }\n    }\n  }\n  for (int i=buffer.length() - 1; i >= 0; i--) {\n    scanner.unread();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1360,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (c != TPCharacterScanner.EOF && (c == anonymousParameterMark || c == namedPrefix)) {\n  buffer.setLength(0);\n  do {\n    buffer.append((char)c);\n    c=scanner.read();\n  }\n while (c != TPCharacterScanner.EOF && Character.isJavaIdentifierPart(c));\n  scanner.unread();\n  if (syntaxManager.isAnonymousParametersEnabled()) {\n    if (buffer.length() == 1 && buffer.charAt(0) == anonymousParameterMark) {\n      return parameterToken;\n    }\n  }\n  if (syntaxManager.isParametersEnabled()) {\n    if (buffer.charAt(0) == namedPrefix && buffer.length() > 1) {\n      boolean validChars=true;\n      for (int i=1; i < buffer.length(); i++) {\n        if (!Character.isJavaIdentifierPart(buffer.charAt(i))) {\n          validChars=false;\n          break;\n        }\n      }\n      if (validChars) {\n        return parameterToken;\n      }\n    }\n  }\n  for (int i=buffer.length() - 1; i >= 0; i--) {\n    scanner.unread();\n  }\n}\n else {\n  scanner.unread();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 154,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  scanner.unread();\n  int prevChar=scanner.read();\n  char namedPrefix=namedParameterPrefix.charAt(0);\n  if (Character.isJavaIdentifierPart(prevChar) || prevChar == namedPrefix || prevChar == anonymousParameterMark || prevChar == '\\\\' || prevChar == '/' || (prevChar == '[' && namedPrefix == ':')) {\n    return TPTokenAbstract.UNDEFINED;\n  }\n  int c=scanner.read();\n  if (c != TPCharacterScanner.EOF && (c == anonymousParameterMark || c == namedPrefix)) {\n    buffer.setLength(0);\n    do {\n      buffer.append((char)c);\n      c=scanner.read();\n    }\n while (c != TPCharacterScanner.EOF && Character.isJavaIdentifierPart(c));\n    scanner.unread();\n    if (syntaxManager.isAnonymousParametersEnabled()) {\n      if (buffer.length() == 1 && buffer.charAt(0) == anonymousParameterMark) {\n        return parameterToken;\n      }\n    }\n    if (syntaxManager.isParametersEnabled()) {\n      if (buffer.charAt(0) == namedPrefix && buffer.length() > 1) {\n        boolean validChars=true;\n        for (int i=1; i < buffer.length(); i++) {\n          if (!Character.isJavaIdentifierPart(buffer.charAt(i))) {\n            validChars=false;\n            break;\n          }\n        }\n        if (validChars) {\n          return parameterToken;\n        }\n      }\n    }\n    for (int i=buffer.length() - 1; i >= 0; i--) {\n      scanner.unread();\n    }\n  }\n else {\n    scanner.unread();\n  }\n  return TPTokenAbstract.UNDEFINED;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1923,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public TPToken evaluate(TPCharacterScanner scanner){\n  scanner.unread();\n  int prevChar=scanner.read();\n  char namedPrefix=namedParameterPrefix.charAt(0);\n  if (Character.isJavaIdentifierPart(prevChar) || prevChar == namedPrefix || prevChar == anonymousParameterMark || prevChar == '\\\\' || prevChar == '/' || (prevChar == '[' && namedPrefix == ':')) {\n    return TPTokenAbstract.UNDEFINED;\n  }\n  int c=scanner.read();\n  if (c != TPCharacterScanner.EOF && (c == anonymousParameterMark || c == namedPrefix)) {\n    buffer.setLength(0);\n    do {\n      buffer.append((char)c);\n      c=scanner.read();\n    }\n while (c != TPCharacterScanner.EOF && Character.isJavaIdentifierPart(c));\n    scanner.unread();\n    if (syntaxManager.isAnonymousParametersEnabled()) {\n      if (buffer.length() == 1 && buffer.charAt(0) == anonymousParameterMark) {\n        return parameterToken;\n      }\n    }\n    if (syntaxManager.isParametersEnabled()) {\n      if (buffer.charAt(0) == namedPrefix && buffer.length() > 1) {\n        boolean validChars=true;\n        for (int i=1; i < buffer.length(); i++) {\n          if (!Character.isJavaIdentifierPart(buffer.charAt(i))) {\n            validChars=false;\n            break;\n          }\n        }\n        if (validChars) {\n          return parameterToken;\n        }\n      }\n    }\n    for (int i=buffer.length() - 1; i >= 0; i--) {\n      scanner.unread();\n    }\n  }\n else {\n    scanner.unread();\n  }\n  return TPTokenAbstract.UNDEFINED;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 40
      },
      "nodeContext" : "buffer.append((char)c);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 59,
    "startColumnNumber" : 30,
    "endLineNumber" : 59,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}