{
  "id" : 304,
  "expression" : "C.RESULT_END_OF_INPUT",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/main/java/com/google/android/exoplayer2/extractor/flac/FlacExtractor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "C.RESULT_END_OF_INPUT",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 270,
      "startColumnNumber" : 37,
      "endLineNumber" : 270,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 270,
        "startColumnNumber" : 24,
        "endLineNumber" : 270,
        "endColumnNumber" : 58
      },
      "nodeContext" : "bytesRead == C.RESULT_END_OF_INPUT",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 270,
        "startColumnNumber" : 6,
        "endLineNumber" : 270,
        "endColumnNumber" : 58
      },
      "nodeContext" : "foundEndOfInput=bytesRead == C.RESULT_END_OF_INPUT",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 270,
        "startColumnNumber" : 6,
        "endLineNumber" : 270,
        "endColumnNumber" : 59
      },
      "nodeContext" : "foundEndOfInput=bytesRead == C.RESULT_END_OF_INPUT;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 264,
        "startColumnNumber" : 38,
        "endLineNumber" : 277,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int bytesRead=input.read(buffer.getData(),currentLimit,BUFFER_LENGTH - currentLimit);\n  foundEndOfInput=bytesRead == C.RESULT_END_OF_INPUT;\n  if (!foundEndOfInput) {\n    buffer.setLimit(currentLimit + bytesRead);\n  }\n else   if (buffer.bytesLeft() == 0) {\n    outputSampleMetadata();\n    return Extractor.RESULT_END_OF_INPUT;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 489,
        "startLineNumber" : 264,
        "startColumnNumber" : 4,
        "endLineNumber" : 277,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (currentLimit < BUFFER_LENGTH) {\n  int bytesRead=input.read(buffer.getData(),currentLimit,BUFFER_LENGTH - currentLimit);\n  foundEndOfInput=bytesRead == C.RESULT_END_OF_INPUT;\n  if (!foundEndOfInput) {\n    buffer.setLimit(currentLimit + bytesRead);\n  }\n else   if (buffer.bytesLeft() == 0) {\n    outputSampleMetadata();\n    return Extractor.RESULT_END_OF_INPUT;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2572,
        "startLineNumber" : 245,
        "startColumnNumber" : 25,
        "endLineNumber" : 311,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Assertions.checkNotNull(trackOutput);\n  Assertions.checkNotNull(flacStreamMetadata);\n  if (binarySearchSeeker != null && binarySearchSeeker.isSeeking()) {\n    return binarySearchSeeker.handlePendingSeek(input,seekPosition);\n  }\n  if (currentFrameFirstSampleNumber == SAMPLE_NUMBER_UNKNOWN) {\n    currentFrameFirstSampleNumber=FlacFrameReader.getFirstSampleNumber(input,flacStreamMetadata);\n    return Extractor.RESULT_CONTINUE;\n  }\n  int currentLimit=buffer.limit();\n  boolean foundEndOfInput=false;\n  if (currentLimit < BUFFER_LENGTH) {\n    int bytesRead=input.read(buffer.getData(),currentLimit,BUFFER_LENGTH - currentLimit);\n    foundEndOfInput=bytesRead == C.RESULT_END_OF_INPUT;\n    if (!foundEndOfInput) {\n      buffer.setLimit(currentLimit + bytesRead);\n    }\n else     if (buffer.bytesLeft() == 0) {\n      outputSampleMetadata();\n      return Extractor.RESULT_END_OF_INPUT;\n    }\n  }\n  int positionBeforeFindingAFrame=buffer.getPosition();\n  if (currentFrameBytesWritten < minFrameSize) {\n    buffer.skipBytes(min(minFrameSize - currentFrameBytesWritten,buffer.bytesLeft()));\n  }\n  long nextFrameFirstSampleNumber=findFrame(buffer,foundEndOfInput);\n  int numberOfFrameBytes=buffer.getPosition() - positionBeforeFindingAFrame;\n  buffer.setPosition(positionBeforeFindingAFrame);\n  trackOutput.sampleData(buffer,numberOfFrameBytes);\n  currentFrameBytesWritten+=numberOfFrameBytes;\n  if (nextFrameFirstSampleNumber != SAMPLE_NUMBER_UNKNOWN) {\n    outputSampleMetadata();\n    currentFrameBytesWritten=0;\n    currentFrameFirstSampleNumber=nextFrameFirstSampleNumber;\n  }\n  if (buffer.bytesLeft() < FlacConstants.MAX_FRAME_HEADER_SIZE) {\n    int bytesLeft=buffer.bytesLeft();\n    System.arraycopy(buffer.getData(),buffer.getPosition(),buffer.getData(),0,bytesLeft);\n    buffer.setPosition(0);\n    buffer.setLimit(bytesLeft);\n  }\n  return Extractor.RESULT_CONTINUE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2683,
        "startLineNumber" : 244,
        "startColumnNumber" : 2,
        "endLineNumber" : 311,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private @ReadResult int readFrames(ExtractorInput input,PositionHolder seekPosition) throws IOException {\n  Assertions.checkNotNull(trackOutput);\n  Assertions.checkNotNull(flacStreamMetadata);\n  if (binarySearchSeeker != null && binarySearchSeeker.isSeeking()) {\n    return binarySearchSeeker.handlePendingSeek(input,seekPosition);\n  }\n  if (currentFrameFirstSampleNumber == SAMPLE_NUMBER_UNKNOWN) {\n    currentFrameFirstSampleNumber=FlacFrameReader.getFirstSampleNumber(input,flacStreamMetadata);\n    return Extractor.RESULT_CONTINUE;\n  }\n  int currentLimit=buffer.limit();\n  boolean foundEndOfInput=false;\n  if (currentLimit < BUFFER_LENGTH) {\n    int bytesRead=input.read(buffer.getData(),currentLimit,BUFFER_LENGTH - currentLimit);\n    foundEndOfInput=bytesRead == C.RESULT_END_OF_INPUT;\n    if (!foundEndOfInput) {\n      buffer.setLimit(currentLimit + bytesRead);\n    }\n else     if (buffer.bytesLeft() == 0) {\n      outputSampleMetadata();\n      return Extractor.RESULT_END_OF_INPUT;\n    }\n  }\n  int positionBeforeFindingAFrame=buffer.getPosition();\n  if (currentFrameBytesWritten < minFrameSize) {\n    buffer.skipBytes(min(minFrameSize - currentFrameBytesWritten,buffer.bytesLeft()));\n  }\n  long nextFrameFirstSampleNumber=findFrame(buffer,foundEndOfInput);\n  int numberOfFrameBytes=buffer.getPosition() - positionBeforeFindingAFrame;\n  buffer.setPosition(positionBeforeFindingAFrame);\n  trackOutput.sampleData(buffer,numberOfFrameBytes);\n  currentFrameBytesWritten+=numberOfFrameBytes;\n  if (nextFrameFirstSampleNumber != SAMPLE_NUMBER_UNKNOWN) {\n    outputSampleMetadata();\n    currentFrameBytesWritten=0;\n    currentFrameFirstSampleNumber=nextFrameFirstSampleNumber;\n  }\n  if (buffer.bytesLeft() < FlacConstants.MAX_FRAME_HEADER_SIZE) {\n    int bytesLeft=buffer.bytesLeft();\n    System.arraycopy(buffer.getData(),buffer.getPosition(),buffer.getData(),0,bytesLeft);\n    buffer.setPosition(0);\n    buffer.setLimit(bytesLeft);\n  }\n  return Extractor.RESULT_CONTINUE;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 270,
        "startColumnNumber" : 6,
        "endLineNumber" : 270,
        "endColumnNumber" : 59
      },
      "nodeContext" : "foundEndOfInput=bytesRead == C.RESULT_END_OF_INPUT;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 270,
    "startColumnNumber" : 37,
    "endLineNumber" : 270,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}