{
  "id" : 488,
  "expression" : "interfaceName",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/store/AbstractAbstractWritableMetadataService.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "interfaceName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 76,
      "startColumnNumber" : 39,
      "endLineNumber" : 76,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 53
      },
      "nodeContext" : "StringUtils.isNotEmpty(interfaceName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 106
      },
      "nodeContext" : "StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n  Class interfaceClass=forName(interfaceName);\n  ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n  Gson gson=new Gson();\n  json=gson.toJson(serviceDefinition);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n    Class interfaceClass=forName(interfaceName);\n    ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n    Gson gson=new Gson();\n    json=gson.toJson(serviceDefinition);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n    Class interfaceClass=forName(interfaceName);\n    ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n    Gson gson=new Gson();\n    json=gson.toJson(serviceDefinition);\n  }\n}\n catch (ClassNotFoundException e) {\n  if (logger.isErrorEnabled()) {\n    logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 72,
        "startColumnNumber" : 59,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String interfaceName=exportedURL.getServiceInterface();\n  String json=null;\n  try {\n    if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n      Class interfaceClass=forName(interfaceName);\n      ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n      Gson gson=new Gson();\n      json=gson.toJson(serviceDefinition);\n    }\n  }\n catch (  ClassNotFoundException e) {\n    if (logger.isErrorEnabled()) {\n      logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n    }\n  }\n  return json;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 899,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected String getServiceDefinition(URL exportedURL){\n  String interfaceName=exportedURL.getServiceInterface();\n  String json=null;\n  try {\n    if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n      Class interfaceClass=forName(interfaceName);\n      ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n      Gson gson=new Gson();\n      json=gson.toJson(serviceDefinition);\n    }\n  }\n catch (  ClassNotFoundException e) {\n    if (logger.isErrorEnabled()) {\n      logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n    }\n  }\n  return json;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 106
      },
      "nodeContext" : "StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "interfaceName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 77,
      "startColumnNumber" : 47,
      "endLineNumber" : 77,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 77,
        "startColumnNumber" : 39,
        "endLineNumber" : 77,
        "endColumnNumber" : 61
      },
      "nodeContext" : "forName(interfaceName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 77,
        "startColumnNumber" : 22,
        "endLineNumber" : 77,
        "endColumnNumber" : 61
      },
      "nodeContext" : "interfaceClass=forName(interfaceName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Class interfaceClass=forName(interfaceName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 76,
        "startColumnNumber" : 108,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Class interfaceClass=forName(interfaceName);\n  ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n  Gson gson=new Gson();\n  json=gson.toJson(serviceDefinition);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n  Class interfaceClass=forName(interfaceName);\n  ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n  Gson gson=new Gson();\n  json=gson.toJson(serviceDefinition);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n    Class interfaceClass=forName(interfaceName);\n    ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n    Gson gson=new Gson();\n    json=gson.toJson(serviceDefinition);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n    Class interfaceClass=forName(interfaceName);\n    ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n    Gson gson=new Gson();\n    json=gson.toJson(serviceDefinition);\n  }\n}\n catch (ClassNotFoundException e) {\n  if (logger.isErrorEnabled()) {\n    logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 72,
        "startColumnNumber" : 59,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String interfaceName=exportedURL.getServiceInterface();\n  String json=null;\n  try {\n    if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n      Class interfaceClass=forName(interfaceName);\n      ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n      Gson gson=new Gson();\n      json=gson.toJson(serviceDefinition);\n    }\n  }\n catch (  ClassNotFoundException e) {\n    if (logger.isErrorEnabled()) {\n      logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n    }\n  }\n  return json;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 899,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected String getServiceDefinition(URL exportedURL){\n  String interfaceName=exportedURL.getServiceInterface();\n  String json=null;\n  try {\n    if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n      Class interfaceClass=forName(interfaceName);\n      ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n      Gson gson=new Gson();\n      json=gson.toJson(serviceDefinition);\n    }\n  }\n catch (  ClassNotFoundException e) {\n    if (logger.isErrorEnabled()) {\n      logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n    }\n  }\n  return json;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Class interfaceClass=forName(interfaceName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "interfaceName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 85,
      "startColumnNumber" : 61,
      "endLineNumber" : 85,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 85,
        "startColumnNumber" : 29,
        "endLineNumber" : 86,
        "endColumnNumber" : 52
      },
      "nodeContext" : "\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 85,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 53
      },
      "nodeContext" : "logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 85,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 54
      },
      "nodeContext" : "logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 84,
        "startColumnNumber" : 41,
        "endLineNumber" : 87,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (logger.isErrorEnabled()) {\n  logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 82,
        "startColumnNumber" : 43,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (logger.isErrorEnabled()) {\n    logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 295,
        "startLineNumber" : 82,
        "startColumnNumber" : 10,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (ClassNotFoundException e) {\n  if (logger.isErrorEnabled()) {\n    logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 22,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n    Class interfaceClass=forName(interfaceName);\n    ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n    Gson gson=new Gson();\n    json=gson.toJson(serviceDefinition);\n  }\n}\n catch (ClassNotFoundException e) {\n  if (logger.isErrorEnabled()) {\n    logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 72,
        "startColumnNumber" : 59,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String interfaceName=exportedURL.getServiceInterface();\n  String json=null;\n  try {\n    if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n      Class interfaceClass=forName(interfaceName);\n      ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n      Gson gson=new Gson();\n      json=gson.toJson(serviceDefinition);\n    }\n  }\n catch (  ClassNotFoundException e) {\n    if (logger.isErrorEnabled()) {\n      logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n    }\n  }\n  return json;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 899,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected String getServiceDefinition(URL exportedURL){\n  String interfaceName=exportedURL.getServiceInterface();\n  String json=null;\n  try {\n    if (StringUtils.isNotEmpty(interfaceName) && !isGeneric(exportedURL.getParameter(GENERIC_KEY))) {\n      Class interfaceClass=forName(interfaceName);\n      ServiceDefinition serviceDefinition=buildFullDefinition(interfaceClass,exportedURL.getParameters());\n      Gson gson=new Gson();\n      json=gson.toJson(serviceDefinition);\n    }\n  }\n catch (  ClassNotFoundException e) {\n    if (logger.isErrorEnabled()) {\n      logger.error(\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString());\n    }\n  }\n  return json;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 85,
        "startColumnNumber" : 29,
        "endLineNumber" : 86,
        "endColumnNumber" : 52
      },
      "nodeContext" : "\"The interface class[name : \" + interfaceName + \"] can't be found , providerUrl: \"+ exportedURL.toFullString()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 76,
    "startColumnNumber" : 39,
    "endLineNumber" : 76,
    "endColumnNumber" : 52
  }, {
    "charLength" : 13,
    "startLineNumber" : 77,
    "startColumnNumber" : 47,
    "endLineNumber" : 77,
    "endColumnNumber" : 60
  }, {
    "charLength" : 13,
    "startLineNumber" : 85,
    "startColumnNumber" : 61,
    "endLineNumber" : 85,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  } ]
}