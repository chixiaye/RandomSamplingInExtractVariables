{
  "id" : 390,
  "expression" : "\"span\"",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/jenkins/security/apitoken/ApiTokenStatsRestartTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"span\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 121,
      "startColumnNumber" : 111,
      "endLineNumber" : 121,
      "endColumnNumber" : 117
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 121,
        "startColumnNumber" : 45,
        "endLineNumber" : 121,
        "endColumnNumber" : 148
      },
      "nodeContext" : "configWithStats.getDocumentElement().getOneHtmlElementByAttribute(\"span\",\"class\",\"token-use-counter\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 121,
        "startColumnNumber" : 28,
        "endLineNumber" : 121,
        "endColumnNumber" : 148
      },
      "nodeContext" : "useCounterSpan=configWithStats.getDocumentElement().getOneHtmlElementByAttribute(\"span\",\"class\",\"token-use-counter\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 121,
        "startColumnNumber" : 19,
        "endLineNumber" : 121,
        "endColumnNumber" : 149
      },
      "nodeContext" : "HtmlSpan useCounterSpan=configWithStats.getDocumentElement().getOneHtmlElementByAttribute(\"span\",\"class\",\"token-use-counter\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3052,
        "startLineNumber" : 77,
        "startColumnNumber" : 55,
        "endLineNumber" : 126,
        "endColumnNumber" : 16
      },
      "nodeContext" : "{\n  JenkinsRule j=rr.j;\n  j.jenkins.setCrumbIssuer(null);\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  User u=User.getById(\"foo\",true);\n  ApiTokenProperty t=u.getProperty(ApiTokenProperty.class);\n  assertNotNull(t.getTokenStore());\n  assertNotNull(t.getTokenStats());\n  WebClient wc=j.createWebClient().withBasicCredentials(u.getId());\n  wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n  WebRequest request=new WebRequest(new URL(j.getURL() + \"user/\" + u.getId()+ \"/descriptorByName/\"+ ApiTokenProperty.class.getName()+ \"/generateNewToken\"),HttpMethod.POST);\n  request.setRequestParameters(Collections.singletonList(new NameValuePair(\"newTokenName\",TOKEN_NAME)));\n  Page page=wc.getPage(request);\n  assertEquals(200,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  JSONObject jsonObject=JSONObject.fromObject(responseContent);\n  JSONObject jsonData=jsonObject.getJSONObject(\"data\");\n  String tokenName=jsonData.getString(\"tokenName\");\n  tokenValue.set(jsonData.getString(\"tokenValue\"));\n  tokenUuid.set(jsonData.getString(\"tokenUuid\"));\n  assertEquals(TOKEN_NAME,tokenName);\n  WebClient restWc=j.createWebClient().withBasicCredentials(u.getId(),tokenValue.get());\n  checkUserIsConnected(restWc,u.getId());\n  HtmlPage config=wc.goTo(u.getUrl() + \"/configure\");\n  assertEquals(200,config.getWebResponse().getStatusCode());\n  assertThat(config.getWebResponse().getContentAsString(),containsString(tokenUuid.get()));\n  assertThat(config.getWebResponse().getContentAsString(),containsString(tokenName));\n  for (int i=1; i < NUM_CALL_WITH_TOKEN; i++) {\n    restWc.goToXml(\"whoAmI/api/xml\");\n  }\n  HtmlPage configWithStats=wc.goTo(u.getUrl() + \"/configure\");\n  assertEquals(200,configWithStats.getWebResponse().getStatusCode());\n  HtmlSpan useCounterSpan=configWithStats.getDocumentElement().getOneHtmlElementByAttribute(\"span\",\"class\",\"token-use-counter\");\n  assertThat(useCounterSpan.getTextContent(),containsString(\"\" + NUM_CALL_WITH_TOKEN));\n  File apiTokenStatsFile=new File(u.getUserFolder(),\"apiTokenStats.xml\");\n  assertTrue(\"apiTokenStats.xml file should exist\",apiTokenStatsFile.exists());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 346,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3118,
        "startLineNumber" : 76,
        "startColumnNumber" : 15,
        "endLineNumber" : 126,
        "endColumnNumber" : 16
      },
      "nodeContext" : "@Override public void evaluate() throws Throwable {\n  JenkinsRule j=rr.j;\n  j.jenkins.setCrumbIssuer(null);\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  User u=User.getById(\"foo\",true);\n  ApiTokenProperty t=u.getProperty(ApiTokenProperty.class);\n  assertNotNull(t.getTokenStore());\n  assertNotNull(t.getTokenStats());\n  WebClient wc=j.createWebClient().withBasicCredentials(u.getId());\n  wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n  WebRequest request=new WebRequest(new URL(j.getURL() + \"user/\" + u.getId()+ \"/descriptorByName/\"+ ApiTokenProperty.class.getName()+ \"/generateNewToken\"),HttpMethod.POST);\n  request.setRequestParameters(Collections.singletonList(new NameValuePair(\"newTokenName\",TOKEN_NAME)));\n  Page page=wc.getPage(request);\n  assertEquals(200,page.getWebResponse().getStatusCode());\n  String responseContent=page.getWebResponse().getContentAsString();\n  JSONObject jsonObject=JSONObject.fromObject(responseContent);\n  JSONObject jsonData=jsonObject.getJSONObject(\"data\");\n  String tokenName=jsonData.getString(\"tokenName\");\n  tokenValue.set(jsonData.getString(\"tokenValue\"));\n  tokenUuid.set(jsonData.getString(\"tokenUuid\"));\n  assertEquals(TOKEN_NAME,tokenName);\n  WebClient restWc=j.createWebClient().withBasicCredentials(u.getId(),tokenValue.get());\n  checkUserIsConnected(restWc,u.getId());\n  HtmlPage config=wc.goTo(u.getUrl() + \"/configure\");\n  assertEquals(200,config.getWebResponse().getStatusCode());\n  assertThat(config.getWebResponse().getContentAsString(),containsString(tokenUuid.get()));\n  assertThat(config.getWebResponse().getContentAsString(),containsString(tokenName));\n  for (int i=1; i < NUM_CALL_WITH_TOKEN; i++) {\n    restWc.goToXml(\"whoAmI/api/xml\");\n  }\n  HtmlPage configWithStats=wc.goTo(u.getUrl() + \"/configure\");\n  assertEquals(200,configWithStats.getWebResponse().getStatusCode());\n  HtmlSpan useCounterSpan=configWithStats.getDocumentElement().getOneHtmlElementByAttribute(\"span\",\"class\",\"token-use-counter\");\n  assertThat(useCounterSpan.getTextContent(),containsString(\"\" + NUM_CALL_WITH_TOKEN));\n  File apiTokenStatsFile=new File(u.getUserFolder(),\"apiTokenStats.xml\");\n  assertTrue(\"apiTokenStats.xml file should exist\",apiTokenStatsFile.exists());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 354,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 121,
        "startColumnNumber" : 19,
        "endLineNumber" : 121,
        "endColumnNumber" : 149
      },
      "nodeContext" : "HtmlSpan useCounterSpan=configWithStats.getDocumentElement().getOneHtmlElementByAttribute(\"span\",\"class\",\"token-use-counter\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 121,
    "startColumnNumber" : 111,
    "endLineNumber" : 121,
    "endColumnNumber" : 117
  } ],
  "layoutRelationDataList" : [ ]
}