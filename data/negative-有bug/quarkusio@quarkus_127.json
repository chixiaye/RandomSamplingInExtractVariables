{
  "id" : 127,
  "expression" : "existing",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/core/deployment/src/main/java/io/quarkus/deployment/dev/testing/TestState.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "existing",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 97,
      "startColumnNumber" : 16,
      "endLineNumber" : 97,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 32
      },
      "nodeContext" : "existing == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (existing == null) {\n  resultsByClass.put(entry.getKey(),entry.getValue());\n}\n else {\n  existing.putAll(entry.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 637,
        "startLineNumber" : 95,
        "startColumnNumber" : 85,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map<UniqueId,TestResult> existing=this.resultsByClass.get(entry.getKey());\n  if (existing == null) {\n    resultsByClass.put(entry.getKey(),entry.getValue());\n  }\n else {\n    existing.putAll(entry.getValue());\n  }\n  for (  Map.Entry<UniqueId,TestResult> r : entry.getValue().entrySet()) {\n    if (r.getValue().getTestExecutionResult().getStatus() == TestExecutionResult.Status.FAILED) {\n      failing.add(r.getKey());\n    }\n else {\n      failing.remove(r.getKey());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 714,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,Map<UniqueId,TestResult>> entry : latest.entrySet()) {\n  Map<UniqueId,TestResult> existing=this.resultsByClass.get(entry.getKey());\n  if (existing == null) {\n    resultsByClass.put(entry.getKey(),entry.getValue());\n  }\n else {\n    existing.putAll(entry.getValue());\n  }\n  for (  Map.Entry<UniqueId,TestResult> r : entry.getValue().entrySet()) {\n    if (r.getValue().getTestExecutionResult().getStatus() == TestExecutionResult.Status.FAILED) {\n      failing.add(r.getKey());\n    }\n else {\n      failing.remove(r.getKey());\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 94,
        "startColumnNumber" : 90,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Map.Entry<String,Map<UniqueId,TestResult>> entry : latest.entrySet()) {\n    Map<UniqueId,TestResult> existing=this.resultsByClass.get(entry.getKey());\n    if (existing == null) {\n      resultsByClass.put(entry.getKey(),entry.getValue());\n    }\n else {\n      existing.putAll(entry.getValue());\n    }\n    for (    Map.Entry<UniqueId,TestResult> r : entry.getValue().entrySet()) {\n      if (r.getValue().getTestExecutionResult().getStatus() == TestExecutionResult.Status.FAILED) {\n        failing.add(r.getKey());\n      }\n else {\n        failing.remove(r.getKey());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public synchronized void updateResults(Map<String,Map<UniqueId,TestResult>> latest){\n  for (  Map.Entry<String,Map<UniqueId,TestResult>> entry : latest.entrySet()) {\n    Map<UniqueId,TestResult> existing=this.resultsByClass.get(entry.getKey());\n    if (existing == null) {\n      resultsByClass.put(entry.getKey(),entry.getValue());\n    }\n else {\n      existing.putAll(entry.getValue());\n    }\n    for (    Map.Entry<UniqueId,TestResult> r : entry.getValue().entrySet()) {\n      if (r.getValue().getTestExecutionResult().getStatus() == TestExecutionResult.Status.FAILED) {\n        failing.add(r.getKey());\n      }\n else {\n        failing.remove(r.getKey());\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 32
      },
      "nodeContext" : "existing == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<io.quarkus.deployment.dev.testing.UniqueId,io.quarkus.deployment.dev.testing.TestResult>"
  }, {
    "nodeContext" : "existing",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 100,
      "startColumnNumber" : 16,
      "endLineNumber" : 100,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 49
      },
      "nodeContext" : "existing.putAll(entry.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 50
      },
      "nodeContext" : "existing.putAll(entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 99,
        "startColumnNumber" : 19,
        "endLineNumber" : 101,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  existing.putAll(entry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (existing == null) {\n  resultsByClass.put(entry.getKey(),entry.getValue());\n}\n else {\n  existing.putAll(entry.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 637,
        "startLineNumber" : 95,
        "startColumnNumber" : 85,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map<UniqueId,TestResult> existing=this.resultsByClass.get(entry.getKey());\n  if (existing == null) {\n    resultsByClass.put(entry.getKey(),entry.getValue());\n  }\n else {\n    existing.putAll(entry.getValue());\n  }\n  for (  Map.Entry<UniqueId,TestResult> r : entry.getValue().entrySet()) {\n    if (r.getValue().getTestExecutionResult().getStatus() == TestExecutionResult.Status.FAILED) {\n      failing.add(r.getKey());\n    }\n else {\n      failing.remove(r.getKey());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 714,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,Map<UniqueId,TestResult>> entry : latest.entrySet()) {\n  Map<UniqueId,TestResult> existing=this.resultsByClass.get(entry.getKey());\n  if (existing == null) {\n    resultsByClass.put(entry.getKey(),entry.getValue());\n  }\n else {\n    existing.putAll(entry.getValue());\n  }\n  for (  Map.Entry<UniqueId,TestResult> r : entry.getValue().entrySet()) {\n    if (r.getValue().getTestExecutionResult().getStatus() == TestExecutionResult.Status.FAILED) {\n      failing.add(r.getKey());\n    }\n else {\n      failing.remove(r.getKey());\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 94,
        "startColumnNumber" : 90,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Map.Entry<String,Map<UniqueId,TestResult>> entry : latest.entrySet()) {\n    Map<UniqueId,TestResult> existing=this.resultsByClass.get(entry.getKey());\n    if (existing == null) {\n      resultsByClass.put(entry.getKey(),entry.getValue());\n    }\n else {\n      existing.putAll(entry.getValue());\n    }\n    for (    Map.Entry<UniqueId,TestResult> r : entry.getValue().entrySet()) {\n      if (r.getValue().getTestExecutionResult().getStatus() == TestExecutionResult.Status.FAILED) {\n        failing.add(r.getKey());\n      }\n else {\n        failing.remove(r.getKey());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public synchronized void updateResults(Map<String,Map<UniqueId,TestResult>> latest){\n  for (  Map.Entry<String,Map<UniqueId,TestResult>> entry : latest.entrySet()) {\n    Map<UniqueId,TestResult> existing=this.resultsByClass.get(entry.getKey());\n    if (existing == null) {\n      resultsByClass.put(entry.getKey(),entry.getValue());\n    }\n else {\n      existing.putAll(entry.getValue());\n    }\n    for (    Map.Entry<UniqueId,TestResult> r : entry.getValue().entrySet()) {\n      if (r.getValue().getTestExecutionResult().getStatus() == TestExecutionResult.Status.FAILED) {\n        failing.add(r.getKey());\n      }\n else {\n        failing.remove(r.getKey());\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 50
      },
      "nodeContext" : "existing.putAll(entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<io.quarkus.deployment.dev.testing.UniqueId,io.quarkus.deployment.dev.testing.TestResult>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 97,
    "startColumnNumber" : 16,
    "endLineNumber" : 97,
    "endColumnNumber" : 24
  }, {
    "charLength" : 8,
    "startLineNumber" : 100,
    "startColumnNumber" : 16,
    "endLineNumber" : 100,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}