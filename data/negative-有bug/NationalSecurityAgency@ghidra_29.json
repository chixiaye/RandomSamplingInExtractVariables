{
  "id" : 29,
  "expression" : "7 - charPosition",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/format/BinaryFormatModel.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "7 - charPosition",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 139,
      "startColumnNumber" : 35,
      "endLineNumber" : 139,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 139,
        "startColumnNumber" : 34,
        "endLineNumber" : 139,
        "endColumnNumber" : 52
      },
      "nodeContext" : "(7 - charPosition)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 139,
        "startColumnNumber" : 22,
        "endLineNumber" : 139,
        "endColumnNumber" : 52
      },
      "nodeContext" : "(byte)1 << (7 - charPosition)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 139,
        "startColumnNumber" : 21,
        "endLineNumber" : 139,
        "endColumnNumber" : 53
      },
      "nodeContext" : "((byte)1 << (7 - charPosition))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 139,
        "startColumnNumber" : 14,
        "endLineNumber" : 139,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(byte)((byte)1 << (7 - charPosition))",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 139,
        "startColumnNumber" : 7,
        "endLineNumber" : 139,
        "endColumnNumber" : 53
      },
      "nodeContext" : "mask=(byte)((byte)1 << (7 - charPosition))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 139,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 54
      },
      "nodeContext" : "byte mask=(byte)((byte)1 << (7 - charPosition));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 123,
        "startColumnNumber" : 35,
        "endLineNumber" : 148,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (charPosition < 0 || charPosition > 7) {\n    return false;\n  }\n  if (GOOD_CHARS.indexOf(c) == -1) {\n    return false;\n  }\n  if (charPosition == 0 && GOOD_CHARS.indexOf(c) > 1) {\n    return false;\n  }\n  byte b=block.getByte(index);\n  char[] charArray={c};\n  byte cb=Byte.parseByte(new String(charArray),2);\n  byte mask=(byte)((byte)1 << (7 - charPosition));\n  b&=~mask;\n  if (cb == (byte)1) {\n    b|=mask;\n  }\n  block.setByte(index,b);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1261,
        "startLineNumber" : 108,
        "startColumnNumber" : 1,
        "endLineNumber" : 148,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Overwrite a value in a ByteBlock.\n * @param block block to change\n * @param index byte index into the block\n * @param pos The position within the unit where c will be thenew character.\n * @param c new character to put at pos param\n * @return true if the replacement is legal, false if thereplacement value would not make sense for this format, e.g. attempt to put a 'z' in a hex unit.\n * @throws ByteBlockAccessException if the block cannot be updated\n * @throws IndexOutOfBoundsException if index is not valid for theblock\n */\npublic boolean replaceValue(ByteBlock block,BigInteger index,int charPosition,char c) throws ByteBlockAccessException {\n  if (charPosition < 0 || charPosition > 7) {\n    return false;\n  }\n  if (GOOD_CHARS.indexOf(c) == -1) {\n    return false;\n  }\n  if (charPosition == 0 && GOOD_CHARS.indexOf(c) > 1) {\n    return false;\n  }\n  byte b=block.getByte(index);\n  char[] charArray={c};\n  byte cb=Byte.parseByte(new String(charArray),2);\n  byte mask=(byte)((byte)1 << (7 - charPosition));\n  b&=~mask;\n  if (cb == (byte)1) {\n    b|=mask;\n  }\n  block.setByte(index,b);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 139,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 54
      },
      "nodeContext" : "byte mask=(byte)((byte)1 << (7 - charPosition));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 139,
    "startColumnNumber" : 35,
    "endLineNumber" : 139,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}