{
  "id" : 134,
  "expression" : "\"0x\" + Integer.toHexString(data)",
  "projectName" : "iBotPeaches@Apktool",
  "commitID" : "719a25afd69d2211259a65d4fce197340cbae819",
  "filePath" : "/src/android/util/TypedValue.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"0x\" + Integer.toHexString(data)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 219,
      "startColumnNumber" : 19,
      "endLineNumber" : 219,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 219,
        "startColumnNumber" : 12,
        "endLineNumber" : 219,
        "endColumnNumber" : 52
      },
      "nodeContext" : "return \"0x\" + Integer.toHexString(data);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 203,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (type) {\ncase TYPE_NULL:  return null;\ncase TYPE_REFERENCE:return \"@\" + data;\ncase TYPE_ATTRIBUTE:return \"?\" + data;\ncase TYPE_FLOAT:return Float.toString(Float.intBitsToFloat(data));\ncase TYPE_DIMENSION:return Float.toString(complexToFloat(data)) + DIMENSION_UNIT_STRS[(data >> COMPLEX_UNIT_SHIFT) & COMPLEX_UNIT_MASK];\ncase TYPE_FRACTION:return Float.toString(complexToFloat(data) * 100) + FRACTION_UNIT_STRS[(data >> COMPLEX_UNIT_SHIFT) & COMPLEX_UNIT_MASK];\ncase TYPE_INT_HEX:return \"0x\" + Integer.toHexString(data);\ncase TYPE_INT_BOOLEAN:return data != 0 ? \"true\" : \"false\";\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 84,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 202,
        "startColumnNumber" : 4,
        "endLineNumber" : 231,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (type) {\ncase TYPE_NULL:    return null;\ncase TYPE_REFERENCE:  return \"@\" + data;\ncase TYPE_ATTRIBUTE:return \"?\" + data;\ncase TYPE_FLOAT:return Float.toString(Float.intBitsToFloat(data));\ncase TYPE_DIMENSION:return Float.toString(complexToFloat(data)) + DIMENSION_UNIT_STRS[(data >> COMPLEX_UNIT_SHIFT) & COMPLEX_UNIT_MASK];\ncase TYPE_FRACTION:return Float.toString(complexToFloat(data) * 100) + FRACTION_UNIT_STRS[(data >> COMPLEX_UNIT_SHIFT) & COMPLEX_UNIT_MASK];\ncase TYPE_INT_HEX:return \"0x\" + Integer.toHexString(data);\ncase TYPE_INT_BOOLEAN:return data != 0 ? \"true\" : \"false\";\n}\nif (type >= TYPE_FIRST_COLOR_INT && type <= TYPE_LAST_COLOR_INT) {\nreturn \"#\" + Integer.toHexString(data);\n}\n else if (type >= TYPE_FIRST_INT && type <= TYPE_LAST_INT) {\nreturn Integer.toString(data);\n}\nreturn null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1494,
        "startLineNumber" : 191,
        "startColumnNumber" : 4,
        "endLineNumber" : 231,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Perform type conversion as per  {@link #coerceToString()} on anexplicitly supplied type and data.\n * @param type The data type identifier.\n * @param data The data value.\n * @return String The coerced string value.  If the value isnull or the type is not known, null is returned.\n */\npublic static final String coerceToString(int type,int data){\nswitch (type) {\ncase TYPE_NULL:    return null;\ncase TYPE_REFERENCE:  return \"@\" + data;\ncase TYPE_ATTRIBUTE:return \"?\" + data;\ncase TYPE_FLOAT:return Float.toString(Float.intBitsToFloat(data));\ncase TYPE_DIMENSION:return Float.toString(complexToFloat(data)) + DIMENSION_UNIT_STRS[(data >> COMPLEX_UNIT_SHIFT) & COMPLEX_UNIT_MASK];\ncase TYPE_FRACTION:return Float.toString(complexToFloat(data) * 100) + FRACTION_UNIT_STRS[(data >> COMPLEX_UNIT_SHIFT) & COMPLEX_UNIT_MASK];\ncase TYPE_INT_HEX:return \"0x\" + Integer.toHexString(data);\ncase TYPE_INT_BOOLEAN:return data != 0 ? \"true\" : \"false\";\n}\nif (type >= TYPE_FIRST_COLOR_INT && type <= TYPE_LAST_COLOR_INT) {\nreturn \"#\" + Integer.toHexString(data);\n}\n else if (type >= TYPE_FIRST_INT && type <= TYPE_LAST_INT) {\nreturn Integer.toString(data);\n}\nreturn null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 219,
        "startColumnNumber" : 12,
        "endLineNumber" : 219,
        "endColumnNumber" : 52
      },
      "nodeContext" : "return \"0x\" + Integer.toHexString(data);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 219,
    "startColumnNumber" : 19,
    "endLineNumber" : 219,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}