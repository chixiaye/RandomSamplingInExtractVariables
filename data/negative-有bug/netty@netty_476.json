{
  "id" : 476,
  "expression" : "ch.finish()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-http/src/test/java/io/netty/handler/codec/http/HttpServerCodecTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ch.finish()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 139,
      "startColumnNumber" : 19,
      "endLineNumber" : 139,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 31
      },
      "nodeContext" : "assertTrue(ch.finish())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 32
      },
      "nodeContext" : "assertTrue(ch.finish());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1150,
        "startLineNumber" : 122,
        "startColumnNumber" : 42,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  EmbeddedChannel ch=new EmbeddedChannel(new HttpServerCodec());\n  assertTrue(ch.writeInbound(Unpooled.copiedBuffer(\"HEAD / HTTP/1.1\\r\\n\\r\\n\",CharsetUtil.UTF_8)));\n  HttpRequest request=ch.readInbound();\n  assertEquals(HttpMethod.HEAD,request.method());\n  LastHttpContent content=ch.readInbound();\n  assertFalse(content.content().isReadable());\n  content.release();\n  HttpResponse response=new DefaultHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.OK);\n  HttpUtil.setTransferEncodingChunked(response,true);\n  assertTrue(ch.writeOutbound(response));\n  assertTrue(ch.writeOutbound(LastHttpContent.EMPTY_LAST_CONTENT));\n  assertTrue(ch.finish());\n  ByteBuf buf=ch.readOutbound();\n  assertEquals(\"HTTP/1.1 200 OK\\r\\ntransfer-encoding: chunked\\r\\n\\r\\n\",buf.toString(CharsetUtil.US_ASCII));\n  buf.release();\n  buf=ch.readOutbound();\n  assertFalse(buf.isReadable());\n  buf.release();\n  assertFalse(ch.finishAndReleaseAll());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1199,
        "startLineNumber" : 121,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testChunkedHeadResponse(){\n  EmbeddedChannel ch=new EmbeddedChannel(new HttpServerCodec());\n  assertTrue(ch.writeInbound(Unpooled.copiedBuffer(\"HEAD / HTTP/1.1\\r\\n\\r\\n\",CharsetUtil.UTF_8)));\n  HttpRequest request=ch.readInbound();\n  assertEquals(HttpMethod.HEAD,request.method());\n  LastHttpContent content=ch.readInbound();\n  assertFalse(content.content().isReadable());\n  content.release();\n  HttpResponse response=new DefaultHttpResponse(HttpVersion.HTTP_1_1,HttpResponseStatus.OK);\n  HttpUtil.setTransferEncodingChunked(response,true);\n  assertTrue(ch.writeOutbound(response));\n  assertTrue(ch.writeOutbound(LastHttpContent.EMPTY_LAST_CONTENT));\n  assertTrue(ch.finish());\n  ByteBuf buf=ch.readOutbound();\n  assertEquals(\"HTTP/1.1 200 OK\\r\\ntransfer-encoding: chunked\\r\\n\\r\\n\",buf.toString(CharsetUtil.US_ASCII));\n  buf.release();\n  buf=ch.readOutbound();\n  assertFalse(buf.isReadable());\n  buf.release();\n  assertFalse(ch.finishAndReleaseAll());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 32
      },
      "nodeContext" : "assertTrue(ch.finish());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 139,
    "startColumnNumber" : 19,
    "endLineNumber" : 139,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}