{
  "id" : 60,
  "expression" : "bitmapConfig",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/main/java/com/facebook/imagepipeline/bitmaps/HoneycombBitmapFactory.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bitmapConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 59,
      "startColumnNumber" : 49,
      "endLineNumber" : 59,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 59,
        "startColumnNumber" : 13,
        "endLineNumber" : 59,
        "endColumnNumber" : 62
      },
      "nodeContext" : "createFallbackBitmap(width,height,bitmapConfig)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 59,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 63
      },
      "nodeContext" : "return createFallbackBitmap(width,height,bitmapConfig);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 58,
        "startColumnNumber" : 34,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return createFallbackBitmap(width,height,bitmapConfig);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (mImmutableBitmapFallback) {\n  return createFallbackBitmap(width,height,bitmapConfig);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 57,
        "startColumnNumber" : 57,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (mImmutableBitmapFallback) {\n    return createFallbackBitmap(width,height,bitmapConfig);\n  }\n  CloseableReference<PooledByteBuffer> jpgRef=mJpegGenerator.generate((short)width,(short)height);\n  try {\n    EncodedImage encodedImage=new EncodedImage(jpgRef);\n    encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n    try {\n      CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n      if (!bitmapRef.get().isMutable()) {\n        CloseableReference.closeSafely(bitmapRef);\n        mImmutableBitmapFallback=true;\n        FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n        return createFallbackBitmap(width,height,bitmapConfig);\n      }\n      bitmapRef.get().setHasAlpha(true);\n      bitmapRef.get().eraseColor(Color.TRANSPARENT);\n      return bitmapRef;\n    }\n  finally {\n      EncodedImage.closeSafely(encodedImage);\n    }\n  }\n  finally {\n    jpgRef.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1867,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a bitmap of the specified width and height.\n * @param width the width of the bitmap\n * @param height the height of the bitmap\n * @param bitmapConfig the {@link android.graphics.Bitmap.Config} used to create the decodedBitmap\n * @return a reference to the bitmap\n * @throws TooManyBitmapsException if the pool is full\n * @throws java.lang.OutOfMemoryError if the Bitmap cannot be allocated\n */\n@TargetApi(Build.VERSION_CODES.HONEYCOMB_MR1) @Override public CloseableReference<Bitmap> createBitmapInternal(int width,int height,Bitmap.Config bitmapConfig){\n  if (mImmutableBitmapFallback) {\n    return createFallbackBitmap(width,height,bitmapConfig);\n  }\n  CloseableReference<PooledByteBuffer> jpgRef=mJpegGenerator.generate((short)width,(short)height);\n  try {\n    EncodedImage encodedImage=new EncodedImage(jpgRef);\n    encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n    try {\n      CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n      if (!bitmapRef.get().isMutable()) {\n        CloseableReference.closeSafely(bitmapRef);\n        mImmutableBitmapFallback=true;\n        FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n        return createFallbackBitmap(width,height,bitmapConfig);\n      }\n      bitmapRef.get().setHasAlpha(true);\n      bitmapRef.get().eraseColor(Color.TRANSPARENT);\n      return bitmapRef;\n    }\n  finally {\n      EncodedImage.closeSafely(encodedImage);\n    }\n  }\n  finally {\n    jpgRef.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 59,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 63
      },
      "nodeContext" : "return createFallbackBitmap(width,height,bitmapConfig);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "Bitmap.Config"
  }, {
    "nodeContext" : "bitmapConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 69,
      "startColumnNumber" : 30,
      "endLineNumber" : 69,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 70
      },
      "nodeContext" : "mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 67,
        "startColumnNumber" : 35,
        "endLineNumber" : 69,
        "endColumnNumber" : 70
      },
      "nodeContext" : "bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 71
      },
      "nodeContext" : "CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 776,
        "startLineNumber" : 66,
        "startColumnNumber" : 10,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n  if (!bitmapRef.get().isMutable()) {\n    CloseableReference.closeSafely(bitmapRef);\n    mImmutableBitmapFallback=true;\n    FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n    return createFallbackBitmap(width,height,bitmapConfig);\n  }\n  bitmapRef.get().setHasAlpha(true);\n  bitmapRef.get().eraseColor(Color.TRANSPARENT);\n  return bitmapRef;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 66,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n  if (!bitmapRef.get().isMutable()) {\n    CloseableReference.closeSafely(bitmapRef);\n    mImmutableBitmapFallback=true;\n    FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n    return createFallbackBitmap(width,height,bitmapConfig);\n  }\n  bitmapRef.get().setHasAlpha(true);\n  bitmapRef.get().eraseColor(Color.TRANSPARENT);\n  return bitmapRef;\n}\n  finally {\n  EncodedImage.closeSafely(encodedImage);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  EncodedImage encodedImage=new EncodedImage(jpgRef);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  try {\n    CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n    if (!bitmapRef.get().isMutable()) {\n      CloseableReference.closeSafely(bitmapRef);\n      mImmutableBitmapFallback=true;\n      FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n      return createFallbackBitmap(width,height,bitmapConfig);\n    }\n    bitmapRef.get().setHasAlpha(true);\n    bitmapRef.get().eraseColor(Color.TRANSPARENT);\n    return bitmapRef;\n  }\n  finally {\n    EncodedImage.closeSafely(encodedImage);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  EncodedImage encodedImage=new EncodedImage(jpgRef);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  try {\n    CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n    if (!bitmapRef.get().isMutable()) {\n      CloseableReference.closeSafely(bitmapRef);\n      mImmutableBitmapFallback=true;\n      FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n      return createFallbackBitmap(width,height,bitmapConfig);\n    }\n    bitmapRef.get().setHasAlpha(true);\n    bitmapRef.get().eraseColor(Color.TRANSPARENT);\n    return bitmapRef;\n  }\n  finally {\n    EncodedImage.closeSafely(encodedImage);\n  }\n}\n  finally {\n  jpgRef.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 57,
        "startColumnNumber" : 57,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (mImmutableBitmapFallback) {\n    return createFallbackBitmap(width,height,bitmapConfig);\n  }\n  CloseableReference<PooledByteBuffer> jpgRef=mJpegGenerator.generate((short)width,(short)height);\n  try {\n    EncodedImage encodedImage=new EncodedImage(jpgRef);\n    encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n    try {\n      CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n      if (!bitmapRef.get().isMutable()) {\n        CloseableReference.closeSafely(bitmapRef);\n        mImmutableBitmapFallback=true;\n        FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n        return createFallbackBitmap(width,height,bitmapConfig);\n      }\n      bitmapRef.get().setHasAlpha(true);\n      bitmapRef.get().eraseColor(Color.TRANSPARENT);\n      return bitmapRef;\n    }\n  finally {\n      EncodedImage.closeSafely(encodedImage);\n    }\n  }\n  finally {\n    jpgRef.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1867,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a bitmap of the specified width and height.\n * @param width the width of the bitmap\n * @param height the height of the bitmap\n * @param bitmapConfig the {@link android.graphics.Bitmap.Config} used to create the decodedBitmap\n * @return a reference to the bitmap\n * @throws TooManyBitmapsException if the pool is full\n * @throws java.lang.OutOfMemoryError if the Bitmap cannot be allocated\n */\n@TargetApi(Build.VERSION_CODES.HONEYCOMB_MR1) @Override public CloseableReference<Bitmap> createBitmapInternal(int width,int height,Bitmap.Config bitmapConfig){\n  if (mImmutableBitmapFallback) {\n    return createFallbackBitmap(width,height,bitmapConfig);\n  }\n  CloseableReference<PooledByteBuffer> jpgRef=mJpegGenerator.generate((short)width,(short)height);\n  try {\n    EncodedImage encodedImage=new EncodedImage(jpgRef);\n    encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n    try {\n      CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n      if (!bitmapRef.get().isMutable()) {\n        CloseableReference.closeSafely(bitmapRef);\n        mImmutableBitmapFallback=true;\n        FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n        return createFallbackBitmap(width,height,bitmapConfig);\n      }\n      bitmapRef.get().setHasAlpha(true);\n      bitmapRef.get().eraseColor(Color.TRANSPARENT);\n      return bitmapRef;\n    }\n  finally {\n      EncodedImage.closeSafely(encodedImage);\n    }\n  }\n  finally {\n    jpgRef.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 70
      },
      "nodeContext" : "mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "Bitmap.Config"
  }, {
    "nodeContext" : "bitmapConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 76,
      "startColumnNumber" : 53,
      "endLineNumber" : 76,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 76,
        "startColumnNumber" : 17,
        "endLineNumber" : 76,
        "endColumnNumber" : 66
      },
      "nodeContext" : "createFallbackBitmap(width,height,bitmapConfig)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 76,
        "startColumnNumber" : 10,
        "endLineNumber" : 76,
        "endColumnNumber" : 67
      },
      "nodeContext" : "return createFallbackBitmap(width,height,bitmapConfig);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 423,
        "startLineNumber" : 70,
        "startColumnNumber" : 42,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  CloseableReference.closeSafely(bitmapRef);\n  mImmutableBitmapFallback=true;\n  FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n  return createFallbackBitmap(width,height,bitmapConfig);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!bitmapRef.get().isMutable()) {\n  CloseableReference.closeSafely(bitmapRef);\n  mImmutableBitmapFallback=true;\n  FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n  return createFallbackBitmap(width,height,bitmapConfig);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 776,
        "startLineNumber" : 66,
        "startColumnNumber" : 10,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n  if (!bitmapRef.get().isMutable()) {\n    CloseableReference.closeSafely(bitmapRef);\n    mImmutableBitmapFallback=true;\n    FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n    return createFallbackBitmap(width,height,bitmapConfig);\n  }\n  bitmapRef.get().setHasAlpha(true);\n  bitmapRef.get().eraseColor(Color.TRANSPARENT);\n  return bitmapRef;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 66,
        "startColumnNumber" : 6,
        "endLineNumber" : 83,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n  if (!bitmapRef.get().isMutable()) {\n    CloseableReference.closeSafely(bitmapRef);\n    mImmutableBitmapFallback=true;\n    FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n    return createFallbackBitmap(width,height,bitmapConfig);\n  }\n  bitmapRef.get().setHasAlpha(true);\n  bitmapRef.get().eraseColor(Color.TRANSPARENT);\n  return bitmapRef;\n}\n  finally {\n  EncodedImage.closeSafely(encodedImage);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  EncodedImage encodedImage=new EncodedImage(jpgRef);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  try {\n    CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n    if (!bitmapRef.get().isMutable()) {\n      CloseableReference.closeSafely(bitmapRef);\n      mImmutableBitmapFallback=true;\n      FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n      return createFallbackBitmap(width,height,bitmapConfig);\n    }\n    bitmapRef.get().setHasAlpha(true);\n    bitmapRef.get().eraseColor(Color.TRANSPARENT);\n    return bitmapRef;\n  }\n  finally {\n    EncodedImage.closeSafely(encodedImage);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  EncodedImage encodedImage=new EncodedImage(jpgRef);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  try {\n    CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n    if (!bitmapRef.get().isMutable()) {\n      CloseableReference.closeSafely(bitmapRef);\n      mImmutableBitmapFallback=true;\n      FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n      return createFallbackBitmap(width,height,bitmapConfig);\n    }\n    bitmapRef.get().setHasAlpha(true);\n    bitmapRef.get().eraseColor(Color.TRANSPARENT);\n    return bitmapRef;\n  }\n  finally {\n    EncodedImage.closeSafely(encodedImage);\n  }\n}\n  finally {\n  jpgRef.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 57,
        "startColumnNumber" : 57,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (mImmutableBitmapFallback) {\n    return createFallbackBitmap(width,height,bitmapConfig);\n  }\n  CloseableReference<PooledByteBuffer> jpgRef=mJpegGenerator.generate((short)width,(short)height);\n  try {\n    EncodedImage encodedImage=new EncodedImage(jpgRef);\n    encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n    try {\n      CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n      if (!bitmapRef.get().isMutable()) {\n        CloseableReference.closeSafely(bitmapRef);\n        mImmutableBitmapFallback=true;\n        FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n        return createFallbackBitmap(width,height,bitmapConfig);\n      }\n      bitmapRef.get().setHasAlpha(true);\n      bitmapRef.get().eraseColor(Color.TRANSPARENT);\n      return bitmapRef;\n    }\n  finally {\n      EncodedImage.closeSafely(encodedImage);\n    }\n  }\n  finally {\n    jpgRef.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1867,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a bitmap of the specified width and height.\n * @param width the width of the bitmap\n * @param height the height of the bitmap\n * @param bitmapConfig the {@link android.graphics.Bitmap.Config} used to create the decodedBitmap\n * @return a reference to the bitmap\n * @throws TooManyBitmapsException if the pool is full\n * @throws java.lang.OutOfMemoryError if the Bitmap cannot be allocated\n */\n@TargetApi(Build.VERSION_CODES.HONEYCOMB_MR1) @Override public CloseableReference<Bitmap> createBitmapInternal(int width,int height,Bitmap.Config bitmapConfig){\n  if (mImmutableBitmapFallback) {\n    return createFallbackBitmap(width,height,bitmapConfig);\n  }\n  CloseableReference<PooledByteBuffer> jpgRef=mJpegGenerator.generate((short)width,(short)height);\n  try {\n    EncodedImage encodedImage=new EncodedImage(jpgRef);\n    encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n    try {\n      CloseableReference<Bitmap> bitmapRef=mPurgeableDecoder.decodeJPEGFromEncodedImage(encodedImage,bitmapConfig,null,jpgRef.get().size());\n      if (!bitmapRef.get().isMutable()) {\n        CloseableReference.closeSafely(bitmapRef);\n        mImmutableBitmapFallback=true;\n        FLog.wtf(TAG,\"Immutable bitmap returned by decoder\");\n        return createFallbackBitmap(width,height,bitmapConfig);\n      }\n      bitmapRef.get().setHasAlpha(true);\n      bitmapRef.get().eraseColor(Color.TRANSPARENT);\n      return bitmapRef;\n    }\n  finally {\n      EncodedImage.closeSafely(encodedImage);\n    }\n  }\n  finally {\n    jpgRef.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 76,
        "startColumnNumber" : 10,
        "endLineNumber" : 76,
        "endColumnNumber" : 67
      },
      "nodeContext" : "return createFallbackBitmap(width,height,bitmapConfig);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "Bitmap.Config"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 59,
    "startColumnNumber" : 49,
    "endLineNumber" : 59,
    "endColumnNumber" : 61
  }, {
    "charLength" : 12,
    "startLineNumber" : 69,
    "startColumnNumber" : 30,
    "endLineNumber" : 69,
    "endColumnNumber" : 42
  }, {
    "charLength" : 12,
    "startLineNumber" : 76,
    "startColumnNumber" : 53,
    "endLineNumber" : 76,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}