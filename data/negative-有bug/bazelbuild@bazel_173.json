{
  "id" : 173,
  "expression" : "runfile",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/exec/SymlinkTreeStrategyTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "runfile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 87,
      "startColumnNumber" : 25,
      "endLineNumber" : 87,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 33
      },
      "nodeContext" : "new Runfiles.Builder(\"TESTING\",false).setEmptyFilesSupplier((paths) -> ImmutableList.of(PathFragment.create(\"dir/empty\"))).addArtifact(runfile)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 20
      },
      "nodeContext" : "new Runfiles.Builder(\"TESTING\",false).setEmptyFilesSupplier((paths) -> ImmutableList.of(PathFragment.create(\"dir/empty\"))).addArtifact(runfile).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 84,
        "startColumnNumber" : 13,
        "endLineNumber" : 88,
        "endColumnNumber" : 20
      },
      "nodeContext" : "runfiles=new Runfiles.Builder(\"TESTING\",false).setEmptyFilesSupplier((paths) -> ImmutableList.of(PathFragment.create(\"dir/empty\"))).addArtifact(runfile).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 21
      },
      "nodeContext" : "Runfiles runfiles=new Runfiles.Builder(\"TESTING\",false).setEmptyFilesSupplier((paths) -> ImmutableList.of(PathFragment.create(\"dir/empty\"))).addArtifact(runfile).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2193,
        "startLineNumber" : 61,
        "startColumnNumber" : 58,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ActionExecutionContext context=mock(ActionExecutionContext.class);\n  OutputService outputService=mock(OutputService.class);\n  StoredEventHandler eventHandler=new StoredEventHandler();\n  when(context.getContext(SymlinkTreeActionContext.class)).thenReturn(new SymlinkTreeStrategy(outputService,null));\n  when(context.getInputPath(any())).thenAnswer((i) -> ((Artifact)i.getArgument(0)).getPath());\n  when(context.getPathResolver()).thenReturn(ArtifactPathResolver.IDENTITY);\n  when(context.getEventHandler()).thenReturn(eventHandler);\n  when(outputService.canCreateSymlinkTree()).thenReturn(true);\n  Artifact inputManifest=getBinArtifactWithNoOwner(\"dir/manifest.in\");\n  Artifact outputManifest=getBinArtifactWithNoOwner(\"dir.runfiles/MANIFEST\");\n  Artifact runfile=getBinArtifactWithNoOwner(\"dir/runfile\");\n  doAnswer((i) -> {\n    outputManifest.getPath().getParentDirectory().createDirectoryAndParents();\n    return null;\n  }\n).when(outputService).createSymlinkTree(any(),any());\n  Runfiles runfiles=new Runfiles.Builder(\"TESTING\",false).setEmptyFilesSupplier((paths) -> ImmutableList.of(PathFragment.create(\"dir/empty\"))).addArtifact(runfile).build();\n  SymlinkTreeAction action=new SymlinkTreeAction(ActionsTestUtil.NULL_ACTION_OWNER,inputManifest,runfiles,outputManifest,null,ActionEnvironment.EMPTY,true,false,false);\n  action.execute(context);\n  @SuppressWarnings(\"unchecked\") ArgumentCaptor<Map<PathFragment,PathFragment>> capture=ArgumentCaptor.forClass(Map.class);\n  verify(outputService,times(1)).createSymlinkTree(capture.capture(),any());\n  assertThat(capture.getValue()).containsExactly(PathFragment.create(\"TESTING/dir/runfile\"),runfile.getPath().asFragment(),PathFragment.create(\"TESTING/dir/empty\"),null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 260,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2257,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void outputServiceInteraction() throws Exception {\n  ActionExecutionContext context=mock(ActionExecutionContext.class);\n  OutputService outputService=mock(OutputService.class);\n  StoredEventHandler eventHandler=new StoredEventHandler();\n  when(context.getContext(SymlinkTreeActionContext.class)).thenReturn(new SymlinkTreeStrategy(outputService,null));\n  when(context.getInputPath(any())).thenAnswer((i) -> ((Artifact)i.getArgument(0)).getPath());\n  when(context.getPathResolver()).thenReturn(ArtifactPathResolver.IDENTITY);\n  when(context.getEventHandler()).thenReturn(eventHandler);\n  when(outputService.canCreateSymlinkTree()).thenReturn(true);\n  Artifact inputManifest=getBinArtifactWithNoOwner(\"dir/manifest.in\");\n  Artifact outputManifest=getBinArtifactWithNoOwner(\"dir.runfiles/MANIFEST\");\n  Artifact runfile=getBinArtifactWithNoOwner(\"dir/runfile\");\n  doAnswer((i) -> {\n    outputManifest.getPath().getParentDirectory().createDirectoryAndParents();\n    return null;\n  }\n).when(outputService).createSymlinkTree(any(),any());\n  Runfiles runfiles=new Runfiles.Builder(\"TESTING\",false).setEmptyFilesSupplier((paths) -> ImmutableList.of(PathFragment.create(\"dir/empty\"))).addArtifact(runfile).build();\n  SymlinkTreeAction action=new SymlinkTreeAction(ActionsTestUtil.NULL_ACTION_OWNER,inputManifest,runfiles,outputManifest,null,ActionEnvironment.EMPTY,true,false,false);\n  action.execute(context);\n  @SuppressWarnings(\"unchecked\") ArgumentCaptor<Map<PathFragment,PathFragment>> capture=ArgumentCaptor.forClass(Map.class);\n  verify(outputService,times(1)).createSymlinkTree(capture.capture(),any());\n  assertThat(capture.getValue()).containsExactly(PathFragment.create(\"TESTING/dir/runfile\"),runfile.getPath().asFragment(),PathFragment.create(\"TESTING/dir/empty\"),null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 33
      },
      "nodeContext" : "new Runfiles.Builder(\"TESTING\",false).setEmptyFilesSupplier((paths) -> ImmutableList.of(PathFragment.create(\"dir/empty\"))).addArtifact(runfile)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.actions.Artifact"
  }, {
    "nodeContext" : "runfile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 109,
      "startColumnNumber" : 12,
      "endLineNumber" : 109,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 29
      },
      "nodeContext" : "runfile.getPath()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 42
      },
      "nodeContext" : "runfile.getPath().asFragment()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 17
      },
      "nodeContext" : "assertThat(capture.getValue()).containsExactly(PathFragment.create(\"TESTING/dir/runfile\"),runfile.getPath().asFragment(),PathFragment.create(\"TESTING/dir/empty\"),null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 18
      },
      "nodeContext" : "assertThat(capture.getValue()).containsExactly(PathFragment.create(\"TESTING/dir/runfile\"),runfile.getPath().asFragment(),PathFragment.create(\"TESTING/dir/empty\"),null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2193,
        "startLineNumber" : 61,
        "startColumnNumber" : 58,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ActionExecutionContext context=mock(ActionExecutionContext.class);\n  OutputService outputService=mock(OutputService.class);\n  StoredEventHandler eventHandler=new StoredEventHandler();\n  when(context.getContext(SymlinkTreeActionContext.class)).thenReturn(new SymlinkTreeStrategy(outputService,null));\n  when(context.getInputPath(any())).thenAnswer((i) -> ((Artifact)i.getArgument(0)).getPath());\n  when(context.getPathResolver()).thenReturn(ArtifactPathResolver.IDENTITY);\n  when(context.getEventHandler()).thenReturn(eventHandler);\n  when(outputService.canCreateSymlinkTree()).thenReturn(true);\n  Artifact inputManifest=getBinArtifactWithNoOwner(\"dir/manifest.in\");\n  Artifact outputManifest=getBinArtifactWithNoOwner(\"dir.runfiles/MANIFEST\");\n  Artifact runfile=getBinArtifactWithNoOwner(\"dir/runfile\");\n  doAnswer((i) -> {\n    outputManifest.getPath().getParentDirectory().createDirectoryAndParents();\n    return null;\n  }\n).when(outputService).createSymlinkTree(any(),any());\n  Runfiles runfiles=new Runfiles.Builder(\"TESTING\",false).setEmptyFilesSupplier((paths) -> ImmutableList.of(PathFragment.create(\"dir/empty\"))).addArtifact(runfile).build();\n  SymlinkTreeAction action=new SymlinkTreeAction(ActionsTestUtil.NULL_ACTION_OWNER,inputManifest,runfiles,outputManifest,null,ActionEnvironment.EMPTY,true,false,false);\n  action.execute(context);\n  @SuppressWarnings(\"unchecked\") ArgumentCaptor<Map<PathFragment,PathFragment>> capture=ArgumentCaptor.forClass(Map.class);\n  verify(outputService,times(1)).createSymlinkTree(capture.capture(),any());\n  assertThat(capture.getValue()).containsExactly(PathFragment.create(\"TESTING/dir/runfile\"),runfile.getPath().asFragment(),PathFragment.create(\"TESTING/dir/empty\"),null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 260,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2257,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void outputServiceInteraction() throws Exception {\n  ActionExecutionContext context=mock(ActionExecutionContext.class);\n  OutputService outputService=mock(OutputService.class);\n  StoredEventHandler eventHandler=new StoredEventHandler();\n  when(context.getContext(SymlinkTreeActionContext.class)).thenReturn(new SymlinkTreeStrategy(outputService,null));\n  when(context.getInputPath(any())).thenAnswer((i) -> ((Artifact)i.getArgument(0)).getPath());\n  when(context.getPathResolver()).thenReturn(ArtifactPathResolver.IDENTITY);\n  when(context.getEventHandler()).thenReturn(eventHandler);\n  when(outputService.canCreateSymlinkTree()).thenReturn(true);\n  Artifact inputManifest=getBinArtifactWithNoOwner(\"dir/manifest.in\");\n  Artifact outputManifest=getBinArtifactWithNoOwner(\"dir.runfiles/MANIFEST\");\n  Artifact runfile=getBinArtifactWithNoOwner(\"dir/runfile\");\n  doAnswer((i) -> {\n    outputManifest.getPath().getParentDirectory().createDirectoryAndParents();\n    return null;\n  }\n).when(outputService).createSymlinkTree(any(),any());\n  Runfiles runfiles=new Runfiles.Builder(\"TESTING\",false).setEmptyFilesSupplier((paths) -> ImmutableList.of(PathFragment.create(\"dir/empty\"))).addArtifact(runfile).build();\n  SymlinkTreeAction action=new SymlinkTreeAction(ActionsTestUtil.NULL_ACTION_OWNER,inputManifest,runfiles,outputManifest,null,ActionEnvironment.EMPTY,true,false,false);\n  action.execute(context);\n  @SuppressWarnings(\"unchecked\") ArgumentCaptor<Map<PathFragment,PathFragment>> capture=ArgumentCaptor.forClass(Map.class);\n  verify(outputService,times(1)).createSymlinkTree(capture.capture(),any());\n  assertThat(capture.getValue()).containsExactly(PathFragment.create(\"TESTING/dir/runfile\"),runfile.getPath().asFragment(),PathFragment.create(\"TESTING/dir/empty\"),null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 42
      },
      "nodeContext" : "runfile.getPath().asFragment()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.actions.Artifact"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 87,
    "startColumnNumber" : 25,
    "endLineNumber" : 87,
    "endColumnNumber" : 32
  }, {
    "charLength" : 7,
    "startLineNumber" : 109,
    "startColumnNumber" : 12,
    "endLineNumber" : 109,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}