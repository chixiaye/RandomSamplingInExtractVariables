{
  "id" : 473,
  "expression" : "consumerData",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/snode/src/main/java/org/apache/rocketmq/snode/processor/HeartbeatProcessor.java",
  "occurrences" : 11,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "consumerData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 91,
      "startColumnNumber" : 25,
      "endLineNumber" : 91,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 91,
        "startColumnNumber" : 25,
        "endLineNumber" : 91,
        "endColumnNumber" : 52
      },
      "nodeContext" : "consumerData.getGroupName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 53
      },
      "nodeContext" : "groupSet.add(consumerData.getGroupName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 54
      },
      "nodeContext" : "groupSet.add(consumerData.getGroupName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 89,
        "startColumnNumber" : 77,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2390,
        "startLineNumber" : 72,
        "startColumnNumber" : 95,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private RemotingCommand register(RemotingChannel remotingChannel,RemotingCommand request){\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 54
      },
      "nodeContext" : "groupSet.add(consumerData.getGroupName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.protocol.heartbeat.ConsumerData"
  }, {
    "nodeContext" : "consumerData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 92,
      "startColumnNumber" : 88,
      "endLineNumber" : 92,
      "endColumnNumber" : 100
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 92,
        "startColumnNumber" : 88,
        "endLineNumber" : 92,
        "endColumnNumber" : 115
      },
      "nodeContext" : "consumerData.getGroupName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 92,
        "startColumnNumber" : 37,
        "endLineNumber" : 92,
        "endColumnNumber" : 124
      },
      "nodeContext" : "this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 92,
        "startColumnNumber" : 20,
        "endLineNumber" : 92,
        "endColumnNumber" : 124
      },
      "nodeContext" : "channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 125
      },
      "nodeContext" : "boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 89,
        "startColumnNumber" : 77,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2390,
        "startLineNumber" : 72,
        "startColumnNumber" : 95,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private RemotingCommand register(RemotingChannel remotingChannel,RemotingCommand request){\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 125
      },
      "nodeContext" : "boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.protocol.heartbeat.ConsumerData"
  }, {
    "nodeContext" : "consumerData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 93,
      "startColumnNumber" : 98,
      "endLineNumber" : 93,
      "endColumnNumber" : 110
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 93,
        "startColumnNumber" : 98,
        "endLineNumber" : 93,
        "endColumnNumber" : 125
      },
      "nodeContext" : "consumerData.getGroupName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 93,
        "startColumnNumber" : 42,
        "endLineNumber" : 97,
        "endColumnNumber" : 51
      },
      "nodeContext" : "this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 97,
        "endColumnNumber" : 51
      },
      "nodeContext" : "subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 52
      },
      "nodeContext" : "boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 89,
        "startColumnNumber" : 77,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2390,
        "startLineNumber" : 72,
        "startColumnNumber" : 95,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private RemotingCommand register(RemotingChannel remotingChannel,RemotingCommand request){\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 93,
        "startColumnNumber" : 98,
        "endLineNumber" : 93,
        "endColumnNumber" : 125
      },
      "nodeContext" : "consumerData.getGroupName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.protocol.heartbeat.ConsumerData"
  }, {
    "nodeContext" : "consumerData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 94,
      "startColumnNumber" : 16,
      "endLineNumber" : 94,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 53
      },
      "nodeContext" : "consumerData.getSubscriptionDataSet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 93,
        "startColumnNumber" : 42,
        "endLineNumber" : 97,
        "endColumnNumber" : 51
      },
      "nodeContext" : "this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 97,
        "endColumnNumber" : 51
      },
      "nodeContext" : "subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 52
      },
      "nodeContext" : "boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 89,
        "startColumnNumber" : 77,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2390,
        "startLineNumber" : 72,
        "startColumnNumber" : 95,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private RemotingCommand register(RemotingChannel remotingChannel,RemotingCommand request){\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 53
      },
      "nodeContext" : "consumerData.getSubscriptionDataSet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.protocol.heartbeat.ConsumerData"
  }, {
    "nodeContext" : "consumerData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 95,
      "startColumnNumber" : 16,
      "endLineNumber" : 95,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 45
      },
      "nodeContext" : "consumerData.getConsumeType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 93,
        "startColumnNumber" : 42,
        "endLineNumber" : 97,
        "endColumnNumber" : 51
      },
      "nodeContext" : "this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 97,
        "endColumnNumber" : 51
      },
      "nodeContext" : "subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 52
      },
      "nodeContext" : "boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 89,
        "startColumnNumber" : 77,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2390,
        "startLineNumber" : 72,
        "startColumnNumber" : 95,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private RemotingCommand register(RemotingChannel remotingChannel,RemotingCommand request){\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 45
      },
      "nodeContext" : "consumerData.getConsumeType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.protocol.heartbeat.ConsumerData"
  }, {
    "nodeContext" : "consumerData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 96,
      "startColumnNumber" : 16,
      "endLineNumber" : 96,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 96,
        "startColumnNumber" : 16,
        "endLineNumber" : 96,
        "endColumnNumber" : 46
      },
      "nodeContext" : "consumerData.getMessageModel()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 93,
        "startColumnNumber" : 42,
        "endLineNumber" : 97,
        "endColumnNumber" : 51
      },
      "nodeContext" : "this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 97,
        "endColumnNumber" : 51
      },
      "nodeContext" : "subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 52
      },
      "nodeContext" : "boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 89,
        "startColumnNumber" : 77,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2390,
        "startLineNumber" : 72,
        "startColumnNumber" : 95,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private RemotingCommand register(RemotingChannel remotingChannel,RemotingCommand request){\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 96,
        "startColumnNumber" : 16,
        "endLineNumber" : 96,
        "endColumnNumber" : 46
      },
      "nodeContext" : "consumerData.getMessageModel()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.protocol.heartbeat.ConsumerData"
  }, {
    "nodeContext" : "consumerData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 97,
      "startColumnNumber" : 16,
      "endLineNumber" : 97,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 50
      },
      "nodeContext" : "consumerData.getConsumeFromWhere()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 93,
        "startColumnNumber" : 42,
        "endLineNumber" : 97,
        "endColumnNumber" : 51
      },
      "nodeContext" : "this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 97,
        "endColumnNumber" : 51
      },
      "nodeContext" : "subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 52
      },
      "nodeContext" : "boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 89,
        "startColumnNumber" : 77,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2390,
        "startLineNumber" : 72,
        "startColumnNumber" : 95,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private RemotingCommand register(RemotingChannel remotingChannel,RemotingCommand request){\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 50
      },
      "nodeContext" : "consumerData.getConsumeFromWhere()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.protocol.heartbeat.ConsumerData"
  }, {
    "nodeContext" : "consumerData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 98,
      "startColumnNumber" : 16,
      "endLineNumber" : 98,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 98,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 45
      },
      "nodeContext" : "consumerData.getConsumeType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 98,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 73
      },
      "nodeContext" : "consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n  NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n  this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 89,
        "startColumnNumber" : 77,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2390,
        "startLineNumber" : 72,
        "startColumnNumber" : 95,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private RemotingCommand register(RemotingChannel remotingChannel,RemotingCommand request){\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 98,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 73
      },
      "nodeContext" : "consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.protocol.heartbeat.ConsumerData"
  }, {
    "nodeContext" : "consumerData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 100,
      "startColumnNumber" : 82,
      "endLineNumber" : 100,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 100,
        "startColumnNumber" : 82,
        "endLineNumber" : 100,
        "endColumnNumber" : 119
      },
      "nodeContext" : "consumerData.getSubscriptionDataSet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 163
      },
      "nodeContext" : "this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 164
      },
      "nodeContext" : "this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 98,
        "startColumnNumber" : 75,
        "endLineNumber" : 101,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n  this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n  NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n  this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 89,
        "startColumnNumber" : 77,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2390,
        "startLineNumber" : 72,
        "startColumnNumber" : 95,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private RemotingCommand register(RemotingChannel remotingChannel,RemotingCommand request){\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 164
      },
      "nodeContext" : "this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.protocol.heartbeat.ConsumerData"
  }, {
    "nodeContext" : "consumerData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 100,
      "startColumnNumber" : 135,
      "endLineNumber" : 100,
      "endColumnNumber" : 147
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 100,
        "startColumnNumber" : 135,
        "endLineNumber" : 100,
        "endColumnNumber" : 162
      },
      "nodeContext" : "consumerData.getGroupName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 163
      },
      "nodeContext" : "this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 164
      },
      "nodeContext" : "this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 98,
        "startColumnNumber" : 75,
        "endLineNumber" : 101,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n  this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n  NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n  this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 89,
        "startColumnNumber" : 77,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2390,
        "startLineNumber" : 72,
        "startColumnNumber" : 95,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private RemotingCommand register(RemotingChannel remotingChannel,RemotingCommand request){\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 164
      },
      "nodeContext" : "this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.protocol.heartbeat.ConsumerData"
  }, {
    "nodeContext" : "consumerData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 103,
      "startColumnNumber" : 71,
      "endLineNumber" : 103,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 103,
        "startColumnNumber" : 71,
        "endLineNumber" : 103,
        "endColumnNumber" : 98
      },
      "nodeContext" : "consumerData.getGroupName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 103,
        "startColumnNumber" : 16,
        "endLineNumber" : 103,
        "endColumnNumber" : 99
      },
      "nodeContext" : "this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 103,
        "startColumnNumber" : 16,
        "endLineNumber" : 103,
        "endColumnNumber" : 100
      },
      "nodeContext" : "this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 102,
        "startColumnNumber" : 55,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (subscriptionChanged || channelChanged) {\n  this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 89,
        "startColumnNumber" : 77,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n  client.setClientRole(ClientRole.Consumer);\n  groupSet.add(consumerData.getGroupName());\n  boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n  boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n  if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n    NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n    this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n  }\n  if (subscriptionChanged || channelChanged) {\n    this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2390,
        "startLineNumber" : 72,
        "startColumnNumber" : 95,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2481,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private RemotingCommand register(RemotingChannel remotingChannel,RemotingCommand request){\n  HeartbeatData heartbeatData=HeartbeatData.decode(request.getBody(),HeartbeatData.class);\n  Channel channel=null;\n  Attribute<Client> clientAttribute=null;\n  if (remotingChannel instanceof NettyChannelHandlerContextImpl) {\n    channel=((NettyChannelHandlerContextImpl)remotingChannel).getChannelHandlerContext().channel();\n    clientAttribute=channel.attr(SnodeConstant.NETTY_CLIENT_ATTRIBUTE_KEY);\n  }\n  Client client=new Client();\n  client.setClientId(heartbeatData.getClientID());\n  client.setRemotingChannel(remotingChannel);\n  for (  ProducerData producerData : heartbeatData.getProducerDataSet()) {\n    client.setClientRole(ClientRole.Producer);\n    this.snodeController.getProducerManager().register(producerData.getGroupName(),client);\n  }\n  Set<String> groupSet=new HashSet<>();\n  for (  ConsumerData consumerData : heartbeatData.getConsumerDataSet()) {\n    client.setClientRole(ClientRole.Consumer);\n    groupSet.add(consumerData.getGroupName());\n    boolean channelChanged=this.snodeController.getConsumerManager().register(consumerData.getGroupName(),client);\n    boolean subscriptionChanged=this.snodeController.getSubscriptionManager().subscribe(consumerData.getGroupName(),consumerData.getSubscriptionDataSet(),consumerData.getConsumeType(),consumerData.getMessageModel(),consumerData.getConsumeFromWhere());\n    if (consumerData.getConsumeType() == ConsumeType.CONSUME_PUSH) {\n      NettyChannelImpl nettyChannel=new NettyChannelImpl(channel);\n      this.snodeController.getSubscriptionManager().registerPushSession(consumerData.getSubscriptionDataSet(),nettyChannel,consumerData.getGroupName());\n    }\n    if (subscriptionChanged || channelChanged) {\n      this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n    }\n  }\n  if (groupSet.size() > 0) {\n    client.setGroups(groupSet);\n  }\n  clientAttribute.setIfAbsent(client);\n  RemotingCommand response=RemotingCommand.createResponseCommand(null);\n  response.setCode(ResponseCode.SUCCESS);\n  response.setRemark(null);\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 103,
        "startColumnNumber" : 16,
        "endLineNumber" : 103,
        "endColumnNumber" : 100
      },
      "nodeContext" : "this.snodeController.getClientService().notifyConsumer(consumerData.getGroupName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.protocol.heartbeat.ConsumerData"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 91,
    "startColumnNumber" : 25,
    "endLineNumber" : 91,
    "endColumnNumber" : 37
  }, {
    "charLength" : 12,
    "startLineNumber" : 92,
    "startColumnNumber" : 88,
    "endLineNumber" : 92,
    "endColumnNumber" : 100
  }, {
    "charLength" : 12,
    "startLineNumber" : 93,
    "startColumnNumber" : 98,
    "endLineNumber" : 93,
    "endColumnNumber" : 110
  }, {
    "charLength" : 12,
    "startLineNumber" : 94,
    "startColumnNumber" : 16,
    "endLineNumber" : 94,
    "endColumnNumber" : 28
  }, {
    "charLength" : 12,
    "startLineNumber" : 95,
    "startColumnNumber" : 16,
    "endLineNumber" : 95,
    "endColumnNumber" : 28
  }, {
    "charLength" : 12,
    "startLineNumber" : 96,
    "startColumnNumber" : 16,
    "endLineNumber" : 96,
    "endColumnNumber" : 28
  }, {
    "charLength" : 12,
    "startLineNumber" : 97,
    "startColumnNumber" : 16,
    "endLineNumber" : 97,
    "endColumnNumber" : 28
  }, {
    "charLength" : 12,
    "startLineNumber" : 98,
    "startColumnNumber" : 16,
    "endLineNumber" : 98,
    "endColumnNumber" : 28
  }, {
    "charLength" : 12,
    "startLineNumber" : 100,
    "startColumnNumber" : 82,
    "endLineNumber" : 100,
    "endColumnNumber" : 94
  }, {
    "charLength" : 12,
    "startLineNumber" : 100,
    "startColumnNumber" : 135,
    "endLineNumber" : 100,
    "endColumnNumber" : 147
  }, {
    "charLength" : 12,
    "startLineNumber" : 103,
    "startColumnNumber" : 71,
    "endLineNumber" : 103,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 5
  } ]
}