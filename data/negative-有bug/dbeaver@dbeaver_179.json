{
  "id" : 179,
  "expression" : "sessionRamLimitText",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.exasol.ui/src/org/jkiss/dbeaver/ext/exasol/ui/config/ExasolConsumerGroupDialog.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sessionRamLimitText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 79,
      "startColumnNumber" : 8,
      "endLineNumber" : 79,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 116
      },
      "nodeContext" : "sessionRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 117
      },
      "nodeContext" : "sessionRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3513,
        "startLineNumber" : 58,
        "startColumnNumber" : 59,
        "endLineNumber" : 128,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Composite composite=super.createDialogArea(parent);\n  final Composite group=new Composite(composite,SWT.NONE);\n  GridData gd=new GridData(GridData.FILL_BOTH);\n  gd.widthHint=400;\n  gd.heightHint=250;\n  gd.verticalIndent=0;\n  gd.horizontalIndent=0;\n  group.setLayoutData(gd);\n  group.setLayout(new GridLayout(2,true));\n  group.setLayout(new GridLayout(2,false));\n  final Text nameText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_name,\"\");\n  final Text cpuWeightText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_cpu_weight,\"\");\n  final Text precedenceText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_precedence,\"\");\n  final Text userRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_user_limit,\"\");\n  final Text groupRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_group_limit,\"\");\n  final Text sessionRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_session_limit,\"\");\n  cpuWeightText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n  userRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(userRamLimitText));\n  groupRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(groupRamLimitText));\n  sessionRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText));\n  precedenceText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n  Map<Text,BigDecimal> limits=new HashMap<Text,BigDecimal>();\n  limits.put(cpuWeightText,cpuWeight);\n  limits.put(sessionRamLimitText,sessionRamLimit);\n  limits.put(groupRamLimitText,groupRamLimit);\n  limits.put(userRamLimitText,userRamLimit);\n  limits.put(precedenceText,precedence);\n  final Text commentText=UIUtils.createLabelText(group,ExasolMessages.dialog_priority_group_description,\"\");\n  ModifyListener mod=new ModifyListener(){\n    @SuppressWarnings(\"unused\") @Override public void modifyText(    ModifyEvent e){\n      name=nameText.getText();\n      try {\n        cpuWeight=new BigDecimal(cpuWeightText.getText());\n      }\n catch (      NumberFormatException ex) {\n      }\n      comment=commentText.getText();\n      for (      Entry<Text,BigDecimal> entry : limits.entrySet()) {\n        String text=entry.getKey().getText();\n        BigDecimal value=entry.getValue();\n        if (\"\".compareTo(text) != 0) {\n          try {\n            value=new BigDecimal(text);\n          }\n catch (          NumberFormatException e2) {\n          }\n        }\n      }\n      if (name.isEmpty() | cpuWeight == null) {\n        getButton(IDialogConstants.OK_ID).setEnabled(false);\n      }\n else {\n        getButton(IDialogConstants.OK_ID).setEnabled(true);\n      }\n    }\n  }\n;\n  nameText.addModifyListener(mod);\n  commentText.addModifyListener(mod);\n  cpuWeightText.addModifyListener(mod);\n  return composite;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 423,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3582,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected Composite createDialogArea(Composite parent){\n  final Composite composite=super.createDialogArea(parent);\n  final Composite group=new Composite(composite,SWT.NONE);\n  GridData gd=new GridData(GridData.FILL_BOTH);\n  gd.widthHint=400;\n  gd.heightHint=250;\n  gd.verticalIndent=0;\n  gd.horizontalIndent=0;\n  group.setLayoutData(gd);\n  group.setLayout(new GridLayout(2,true));\n  group.setLayout(new GridLayout(2,false));\n  final Text nameText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_name,\"\");\n  final Text cpuWeightText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_cpu_weight,\"\");\n  final Text precedenceText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_precedence,\"\");\n  final Text userRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_user_limit,\"\");\n  final Text groupRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_group_limit,\"\");\n  final Text sessionRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_session_limit,\"\");\n  cpuWeightText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n  userRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(userRamLimitText));\n  groupRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(groupRamLimitText));\n  sessionRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText));\n  precedenceText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n  Map<Text,BigDecimal> limits=new HashMap<Text,BigDecimal>();\n  limits.put(cpuWeightText,cpuWeight);\n  limits.put(sessionRamLimitText,sessionRamLimit);\n  limits.put(groupRamLimitText,groupRamLimit);\n  limits.put(userRamLimitText,userRamLimit);\n  limits.put(precedenceText,precedence);\n  final Text commentText=UIUtils.createLabelText(group,ExasolMessages.dialog_priority_group_description,\"\");\n  ModifyListener mod=new ModifyListener(){\n    @SuppressWarnings(\"unused\") @Override public void modifyText(    ModifyEvent e){\n      name=nameText.getText();\n      try {\n        cpuWeight=new BigDecimal(cpuWeightText.getText());\n      }\n catch (      NumberFormatException ex) {\n      }\n      comment=commentText.getText();\n      for (      Entry<Text,BigDecimal> entry : limits.entrySet()) {\n        String text=entry.getKey().getText();\n        BigDecimal value=entry.getValue();\n        if (\"\".compareTo(text) != 0) {\n          try {\n            value=new BigDecimal(text);\n          }\n catch (          NumberFormatException e2) {\n          }\n        }\n      }\n      if (name.isEmpty() | cpuWeight == null) {\n        getButton(IDialogConstants.OK_ID).setEnabled(false);\n      }\n else {\n        getButton(IDialogConstants.OK_ID).setEnabled(true);\n      }\n    }\n  }\n;\n  nameText.addModifyListener(mod);\n  commentText.addModifyListener(mod);\n  cpuWeightText.addModifyListener(mod);\n  return composite;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 434,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 117
      },
      "nodeContext" : "sessionRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jkiss.dbeaver.ext.exasol.ui.config.Text"
  }, {
    "nodeContext" : "sessionRamLimitText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 79,
      "startColumnNumber" : 95,
      "endLineNumber" : 79,
      "endColumnNumber" : 114
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 79,
        "startColumnNumber" : 46,
        "endLineNumber" : 79,
        "endColumnNumber" : 115
      },
      "nodeContext" : "UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 116
      },
      "nodeContext" : "sessionRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 117
      },
      "nodeContext" : "sessionRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3513,
        "startLineNumber" : 58,
        "startColumnNumber" : 59,
        "endLineNumber" : 128,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Composite composite=super.createDialogArea(parent);\n  final Composite group=new Composite(composite,SWT.NONE);\n  GridData gd=new GridData(GridData.FILL_BOTH);\n  gd.widthHint=400;\n  gd.heightHint=250;\n  gd.verticalIndent=0;\n  gd.horizontalIndent=0;\n  group.setLayoutData(gd);\n  group.setLayout(new GridLayout(2,true));\n  group.setLayout(new GridLayout(2,false));\n  final Text nameText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_name,\"\");\n  final Text cpuWeightText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_cpu_weight,\"\");\n  final Text precedenceText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_precedence,\"\");\n  final Text userRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_user_limit,\"\");\n  final Text groupRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_group_limit,\"\");\n  final Text sessionRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_session_limit,\"\");\n  cpuWeightText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n  userRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(userRamLimitText));\n  groupRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(groupRamLimitText));\n  sessionRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText));\n  precedenceText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n  Map<Text,BigDecimal> limits=new HashMap<Text,BigDecimal>();\n  limits.put(cpuWeightText,cpuWeight);\n  limits.put(sessionRamLimitText,sessionRamLimit);\n  limits.put(groupRamLimitText,groupRamLimit);\n  limits.put(userRamLimitText,userRamLimit);\n  limits.put(precedenceText,precedence);\n  final Text commentText=UIUtils.createLabelText(group,ExasolMessages.dialog_priority_group_description,\"\");\n  ModifyListener mod=new ModifyListener(){\n    @SuppressWarnings(\"unused\") @Override public void modifyText(    ModifyEvent e){\n      name=nameText.getText();\n      try {\n        cpuWeight=new BigDecimal(cpuWeightText.getText());\n      }\n catch (      NumberFormatException ex) {\n      }\n      comment=commentText.getText();\n      for (      Entry<Text,BigDecimal> entry : limits.entrySet()) {\n        String text=entry.getKey().getText();\n        BigDecimal value=entry.getValue();\n        if (\"\".compareTo(text) != 0) {\n          try {\n            value=new BigDecimal(text);\n          }\n catch (          NumberFormatException e2) {\n          }\n        }\n      }\n      if (name.isEmpty() | cpuWeight == null) {\n        getButton(IDialogConstants.OK_ID).setEnabled(false);\n      }\n else {\n        getButton(IDialogConstants.OK_ID).setEnabled(true);\n      }\n    }\n  }\n;\n  nameText.addModifyListener(mod);\n  commentText.addModifyListener(mod);\n  cpuWeightText.addModifyListener(mod);\n  return composite;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 423,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3582,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected Composite createDialogArea(Composite parent){\n  final Composite composite=super.createDialogArea(parent);\n  final Composite group=new Composite(composite,SWT.NONE);\n  GridData gd=new GridData(GridData.FILL_BOTH);\n  gd.widthHint=400;\n  gd.heightHint=250;\n  gd.verticalIndent=0;\n  gd.horizontalIndent=0;\n  group.setLayoutData(gd);\n  group.setLayout(new GridLayout(2,true));\n  group.setLayout(new GridLayout(2,false));\n  final Text nameText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_name,\"\");\n  final Text cpuWeightText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_cpu_weight,\"\");\n  final Text precedenceText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_precedence,\"\");\n  final Text userRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_user_limit,\"\");\n  final Text groupRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_group_limit,\"\");\n  final Text sessionRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_session_limit,\"\");\n  cpuWeightText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n  userRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(userRamLimitText));\n  groupRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(groupRamLimitText));\n  sessionRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText));\n  precedenceText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n  Map<Text,BigDecimal> limits=new HashMap<Text,BigDecimal>();\n  limits.put(cpuWeightText,cpuWeight);\n  limits.put(sessionRamLimitText,sessionRamLimit);\n  limits.put(groupRamLimitText,groupRamLimit);\n  limits.put(userRamLimitText,userRamLimit);\n  limits.put(precedenceText,precedence);\n  final Text commentText=UIUtils.createLabelText(group,ExasolMessages.dialog_priority_group_description,\"\");\n  ModifyListener mod=new ModifyListener(){\n    @SuppressWarnings(\"unused\") @Override public void modifyText(    ModifyEvent e){\n      name=nameText.getText();\n      try {\n        cpuWeight=new BigDecimal(cpuWeightText.getText());\n      }\n catch (      NumberFormatException ex) {\n      }\n      comment=commentText.getText();\n      for (      Entry<Text,BigDecimal> entry : limits.entrySet()) {\n        String text=entry.getKey().getText();\n        BigDecimal value=entry.getValue();\n        if (\"\".compareTo(text) != 0) {\n          try {\n            value=new BigDecimal(text);\n          }\n catch (          NumberFormatException e2) {\n          }\n        }\n      }\n      if (name.isEmpty() | cpuWeight == null) {\n        getButton(IDialogConstants.OK_ID).setEnabled(false);\n      }\n else {\n        getButton(IDialogConstants.OK_ID).setEnabled(true);\n      }\n    }\n  }\n;\n  nameText.addModifyListener(mod);\n  commentText.addModifyListener(mod);\n  cpuWeightText.addModifyListener(mod);\n  return composite;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 434,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 117
      },
      "nodeContext" : "sessionRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jkiss.dbeaver.ext.exasol.ui.config.Text"
  }, {
    "nodeContext" : "sessionRamLimitText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 84,
      "startColumnNumber" : 19,
      "endLineNumber" : 84,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 56
      },
      "nodeContext" : "limits.put(sessionRamLimitText,sessionRamLimit)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 57
      },
      "nodeContext" : "limits.put(sessionRamLimitText,sessionRamLimit);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3513,
        "startLineNumber" : 58,
        "startColumnNumber" : 59,
        "endLineNumber" : 128,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Composite composite=super.createDialogArea(parent);\n  final Composite group=new Composite(composite,SWT.NONE);\n  GridData gd=new GridData(GridData.FILL_BOTH);\n  gd.widthHint=400;\n  gd.heightHint=250;\n  gd.verticalIndent=0;\n  gd.horizontalIndent=0;\n  group.setLayoutData(gd);\n  group.setLayout(new GridLayout(2,true));\n  group.setLayout(new GridLayout(2,false));\n  final Text nameText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_name,\"\");\n  final Text cpuWeightText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_cpu_weight,\"\");\n  final Text precedenceText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_precedence,\"\");\n  final Text userRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_user_limit,\"\");\n  final Text groupRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_group_limit,\"\");\n  final Text sessionRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_session_limit,\"\");\n  cpuWeightText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n  userRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(userRamLimitText));\n  groupRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(groupRamLimitText));\n  sessionRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText));\n  precedenceText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n  Map<Text,BigDecimal> limits=new HashMap<Text,BigDecimal>();\n  limits.put(cpuWeightText,cpuWeight);\n  limits.put(sessionRamLimitText,sessionRamLimit);\n  limits.put(groupRamLimitText,groupRamLimit);\n  limits.put(userRamLimitText,userRamLimit);\n  limits.put(precedenceText,precedence);\n  final Text commentText=UIUtils.createLabelText(group,ExasolMessages.dialog_priority_group_description,\"\");\n  ModifyListener mod=new ModifyListener(){\n    @SuppressWarnings(\"unused\") @Override public void modifyText(    ModifyEvent e){\n      name=nameText.getText();\n      try {\n        cpuWeight=new BigDecimal(cpuWeightText.getText());\n      }\n catch (      NumberFormatException ex) {\n      }\n      comment=commentText.getText();\n      for (      Entry<Text,BigDecimal> entry : limits.entrySet()) {\n        String text=entry.getKey().getText();\n        BigDecimal value=entry.getValue();\n        if (\"\".compareTo(text) != 0) {\n          try {\n            value=new BigDecimal(text);\n          }\n catch (          NumberFormatException e2) {\n          }\n        }\n      }\n      if (name.isEmpty() | cpuWeight == null) {\n        getButton(IDialogConstants.OK_ID).setEnabled(false);\n      }\n else {\n        getButton(IDialogConstants.OK_ID).setEnabled(true);\n      }\n    }\n  }\n;\n  nameText.addModifyListener(mod);\n  commentText.addModifyListener(mod);\n  cpuWeightText.addModifyListener(mod);\n  return composite;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 423,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3582,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected Composite createDialogArea(Composite parent){\n  final Composite composite=super.createDialogArea(parent);\n  final Composite group=new Composite(composite,SWT.NONE);\n  GridData gd=new GridData(GridData.FILL_BOTH);\n  gd.widthHint=400;\n  gd.heightHint=250;\n  gd.verticalIndent=0;\n  gd.horizontalIndent=0;\n  group.setLayoutData(gd);\n  group.setLayout(new GridLayout(2,true));\n  group.setLayout(new GridLayout(2,false));\n  final Text nameText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_name,\"\");\n  final Text cpuWeightText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_cpu_weight,\"\");\n  final Text precedenceText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_precedence,\"\");\n  final Text userRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_user_limit,\"\");\n  final Text groupRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_group_limit,\"\");\n  final Text sessionRamLimitText=UIUtils.createLabelText(group,ExasolMessages.dialog_consumer_group_session_limit,\"\");\n  cpuWeightText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n  userRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(userRamLimitText));\n  groupRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(groupRamLimitText));\n  sessionRamLimitText.addVerifyListener(UIUtils.getUnsignedLongOrEmptyTextVerifyListener(sessionRamLimitText));\n  precedenceText.addVerifyListener(UIUtils.getIntegerVerifyListener(Locale.getDefault()));\n  Map<Text,BigDecimal> limits=new HashMap<Text,BigDecimal>();\n  limits.put(cpuWeightText,cpuWeight);\n  limits.put(sessionRamLimitText,sessionRamLimit);\n  limits.put(groupRamLimitText,groupRamLimit);\n  limits.put(userRamLimitText,userRamLimit);\n  limits.put(precedenceText,precedence);\n  final Text commentText=UIUtils.createLabelText(group,ExasolMessages.dialog_priority_group_description,\"\");\n  ModifyListener mod=new ModifyListener(){\n    @SuppressWarnings(\"unused\") @Override public void modifyText(    ModifyEvent e){\n      name=nameText.getText();\n      try {\n        cpuWeight=new BigDecimal(cpuWeightText.getText());\n      }\n catch (      NumberFormatException ex) {\n      }\n      comment=commentText.getText();\n      for (      Entry<Text,BigDecimal> entry : limits.entrySet()) {\n        String text=entry.getKey().getText();\n        BigDecimal value=entry.getValue();\n        if (\"\".compareTo(text) != 0) {\n          try {\n            value=new BigDecimal(text);\n          }\n catch (          NumberFormatException e2) {\n          }\n        }\n      }\n      if (name.isEmpty() | cpuWeight == null) {\n        getButton(IDialogConstants.OK_ID).setEnabled(false);\n      }\n else {\n        getButton(IDialogConstants.OK_ID).setEnabled(true);\n      }\n    }\n  }\n;\n  nameText.addModifyListener(mod);\n  commentText.addModifyListener(mod);\n  cpuWeightText.addModifyListener(mod);\n  return composite;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 434,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 57
      },
      "nodeContext" : "limits.put(sessionRamLimitText,sessionRamLimit);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.jkiss.dbeaver.ext.exasol.ui.config.Text"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 79,
    "startColumnNumber" : 8,
    "endLineNumber" : 79,
    "endColumnNumber" : 27
  }, {
    "charLength" : 19,
    "startLineNumber" : 79,
    "startColumnNumber" : 95,
    "endLineNumber" : 79,
    "endColumnNumber" : 114
  }, {
    "charLength" : 19,
    "startLineNumber" : 84,
    "startColumnNumber" : 19,
    "endLineNumber" : 84,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}