{
  "id" : 325,
  "expression" : "table",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV0.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "table",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 51,
      "startColumnNumber" : 6,
      "endLineNumber" : 51,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 19
      },
      "nodeContext" : "table == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (table == null) {\n  throw new VersionException(\"Missing Table: \" + TYPEDEF_TABLE_NAME);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 48,
        "startColumnNumber" : 68,
        "endLineNumber" : 63,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  table=handle.getTable(TYPEDEF_TABLE_NAME);\n  if (table == null) {\n    throw new VersionException(\"Missing Table: \" + TYPEDEF_TABLE_NAME);\n  }\n  int version=table.getSchema().getVersion();\n  if (version != VERSION) {\n    String msg=\"Expected version \" + VERSION + \" for table \"+ TYPEDEF_TABLE_NAME+ \" but got \"+ table.getSchema().getVersion();\n    if (version < VERSION) {\n      throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n    }\n    throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 42,
        "startColumnNumber" : 1,
        "endLineNumber" : 63,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Gets a version 0 adapter for the Typedef database table.\n * @param handle handle to the database containing the table.\n * @throws VersionException if the the table's version does not match the expected versionfor this adapter.\n */\npublic TypedefDBAdapterV0(DBHandle handle) throws VersionException {\n  table=handle.getTable(TYPEDEF_TABLE_NAME);\n  if (table == null) {\n    throw new VersionException(\"Missing Table: \" + TYPEDEF_TABLE_NAME);\n  }\n  int version=table.getSchema().getVersion();\n  if (version != VERSION) {\n    String msg=\"Expected version \" + VERSION + \" for table \"+ TYPEDEF_TABLE_NAME+ \" but got \"+ table.getSchema().getVersion();\n    if (version < VERSION) {\n      throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n    }\n    throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 19
      },
      "nodeContext" : "table == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "db.Table"
  }, {
    "nodeContext" : "table",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 54,
      "startColumnNumber" : 16,
      "endLineNumber" : 54,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 33
      },
      "nodeContext" : "table.getSchema()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 46
      },
      "nodeContext" : "table.getSchema().getVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 54,
        "endColumnNumber" : 46
      },
      "nodeContext" : "version=table.getSchema().getVersion()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 47
      },
      "nodeContext" : "int version=table.getSchema().getVersion();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 48,
        "startColumnNumber" : 68,
        "endLineNumber" : 63,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  table=handle.getTable(TYPEDEF_TABLE_NAME);\n  if (table == null) {\n    throw new VersionException(\"Missing Table: \" + TYPEDEF_TABLE_NAME);\n  }\n  int version=table.getSchema().getVersion();\n  if (version != VERSION) {\n    String msg=\"Expected version \" + VERSION + \" for table \"+ TYPEDEF_TABLE_NAME+ \" but got \"+ table.getSchema().getVersion();\n    if (version < VERSION) {\n      throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n    }\n    throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 42,
        "startColumnNumber" : 1,
        "endLineNumber" : 63,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Gets a version 0 adapter for the Typedef database table.\n * @param handle handle to the database containing the table.\n * @throws VersionException if the the table's version does not match the expected versionfor this adapter.\n */\npublic TypedefDBAdapterV0(DBHandle handle) throws VersionException {\n  table=handle.getTable(TYPEDEF_TABLE_NAME);\n  if (table == null) {\n    throw new VersionException(\"Missing Table: \" + TYPEDEF_TABLE_NAME);\n  }\n  int version=table.getSchema().getVersion();\n  if (version != VERSION) {\n    String msg=\"Expected version \" + VERSION + \" for table \"+ TYPEDEF_TABLE_NAME+ \" but got \"+ table.getSchema().getVersion();\n    if (version < VERSION) {\n      throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n    }\n    throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 47
      },
      "nodeContext" : "int version=table.getSchema().getVersion();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "db.Table"
  }, {
    "nodeContext" : "table",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 57,
      "startColumnNumber" : 18,
      "endLineNumber" : 57,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 57,
        "endColumnNumber" : 35
      },
      "nodeContext" : "table.getSchema()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "table.getSchema().getVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 56,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "\"Expected version \" + VERSION + \" for table \"+ TYPEDEF_TABLE_NAME+ \" but got \"+ table.getSchema().getVersion()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "msg=\"Expected version \" + VERSION + \" for table \"+ TYPEDEF_TABLE_NAME+ \" but got \"+ table.getSchema().getVersion()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 56,
        "startColumnNumber" : 3,
        "endLineNumber" : 57,
        "endColumnNumber" : 49
      },
      "nodeContext" : "String msg=\"Expected version \" + VERSION + \" for table \"+ TYPEDEF_TABLE_NAME+ \" but got \"+ table.getSchema().getVersion();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 55,
        "startColumnNumber" : 26,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String msg=\"Expected version \" + VERSION + \" for table \"+ TYPEDEF_TABLE_NAME+ \" but got \"+ table.getSchema().getVersion();\n  if (version < VERSION) {\n    throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n  }\n  throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (version != VERSION) {\n  String msg=\"Expected version \" + VERSION + \" for table \"+ TYPEDEF_TABLE_NAME+ \" but got \"+ table.getSchema().getVersion();\n  if (version < VERSION) {\n    throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n  }\n  throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 48,
        "startColumnNumber" : 68,
        "endLineNumber" : 63,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  table=handle.getTable(TYPEDEF_TABLE_NAME);\n  if (table == null) {\n    throw new VersionException(\"Missing Table: \" + TYPEDEF_TABLE_NAME);\n  }\n  int version=table.getSchema().getVersion();\n  if (version != VERSION) {\n    String msg=\"Expected version \" + VERSION + \" for table \"+ TYPEDEF_TABLE_NAME+ \" but got \"+ table.getSchema().getVersion();\n    if (version < VERSION) {\n      throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n    }\n    throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 42,
        "startColumnNumber" : 1,
        "endLineNumber" : 63,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Gets a version 0 adapter for the Typedef database table.\n * @param handle handle to the database containing the table.\n * @throws VersionException if the the table's version does not match the expected versionfor this adapter.\n */\npublic TypedefDBAdapterV0(DBHandle handle) throws VersionException {\n  table=handle.getTable(TYPEDEF_TABLE_NAME);\n  if (table == null) {\n    throw new VersionException(\"Missing Table: \" + TYPEDEF_TABLE_NAME);\n  }\n  int version=table.getSchema().getVersion();\n  if (version != VERSION) {\n    String msg=\"Expected version \" + VERSION + \" for table \"+ TYPEDEF_TABLE_NAME+ \" but got \"+ table.getSchema().getVersion();\n    if (version < VERSION) {\n      throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n    }\n    throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 57,
        "startColumnNumber" : 18,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "table.getSchema().getVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "db.Table"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 51,
    "startColumnNumber" : 6,
    "endLineNumber" : 51,
    "endColumnNumber" : 11
  }, {
    "charLength" : 5,
    "startLineNumber" : 54,
    "startColumnNumber" : 16,
    "endLineNumber" : 54,
    "endColumnNumber" : 21
  }, {
    "charLength" : 5,
    "startLineNumber" : 57,
    "startColumnNumber" : 18,
    "endLineNumber" : 57,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  } ]
}