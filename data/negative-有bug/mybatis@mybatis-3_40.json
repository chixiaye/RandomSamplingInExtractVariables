{
  "id" : 40,
  "expression" : "BoundSql.class",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/test/java/org/apache/ibatis/scripting/defaults/DefaultParameterHandlerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BoundSql.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 52,
      "startColumnNumber" : 35,
      "endLineNumber" : 52,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 52,
        "startColumnNumber" : 30,
        "endLineNumber" : 52,
        "endColumnNumber" : 50
      },
      "nodeContext" : "mock(BoundSql.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 52,
        "startColumnNumber" : 19,
        "endLineNumber" : 52,
        "endColumnNumber" : 50
      },
      "nodeContext" : "boundSql=mock(BoundSql.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 51
      },
      "nodeContext" : "final BoundSql boundSql=mock(BoundSql.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1193,
        "startLineNumber" : 49,
        "startColumnNumber" : 64,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final MappedStatement mappedStatement=getMappedStatement();\n  final Object parameterObject=null;\n  final BoundSql boundSql=mock(BoundSql.class);\n  TypeHandler<Object> typeHandler=mock(TypeHandler.class);\n  doThrow(new SQLException(\"foo\")).when(typeHandler).setParameter(any(PreparedStatement.class),anyInt(),any(),any(JdbcType.class));\n  ParameterMapping parameterMapping=new ParameterMapping.Builder(mappedStatement.getConfiguration(),\"prop\",typeHandler).build();\n  List<ParameterMapping> parameterMappings=Collections.singletonList(parameterMapping);\n  when(boundSql.getParameterMappings()).thenReturn(parameterMappings);\n  DefaultParameterHandler defaultParameterHandler=new DefaultParameterHandler(mappedStatement,parameterObject,boundSql);\n  PreparedStatement ps=mock(PreparedStatement.class);\n  try {\n    defaultParameterHandler.setParameters(ps);\n    Assertions.fail(\"Should have thrown TypeException\");\n  }\n catch (  Exception e) {\n    Assertions.assertTrue(e instanceof TypeException,\"expected TypeException\");\n    Assertions.assertTrue(e.getMessage().contains(\"mapping: ParameterMapping\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1264,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test void setParametersThrowsProperException() throws SQLException {\n  final MappedStatement mappedStatement=getMappedStatement();\n  final Object parameterObject=null;\n  final BoundSql boundSql=mock(BoundSql.class);\n  TypeHandler<Object> typeHandler=mock(TypeHandler.class);\n  doThrow(new SQLException(\"foo\")).when(typeHandler).setParameter(any(PreparedStatement.class),anyInt(),any(),any(JdbcType.class));\n  ParameterMapping parameterMapping=new ParameterMapping.Builder(mappedStatement.getConfiguration(),\"prop\",typeHandler).build();\n  List<ParameterMapping> parameterMappings=Collections.singletonList(parameterMapping);\n  when(boundSql.getParameterMappings()).thenReturn(parameterMappings);\n  DefaultParameterHandler defaultParameterHandler=new DefaultParameterHandler(mappedStatement,parameterObject,boundSql);\n  PreparedStatement ps=mock(PreparedStatement.class);\n  try {\n    defaultParameterHandler.setParameters(ps);\n    Assertions.fail(\"Should have thrown TypeException\");\n  }\n catch (  Exception e) {\n    Assertions.assertTrue(e instanceof TypeException,\"expected TypeException\");\n    Assertions.assertTrue(e.getMessage().contains(\"mapping: ParameterMapping\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 51
      },
      "nodeContext" : "final BoundSql boundSql=mock(BoundSql.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.ibatis.mapping.BoundSql>"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 52,
    "startColumnNumber" : 35,
    "endLineNumber" : 52,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}