{
  "id" : 204,
  "expression" : "STRING_OR_INTEGER_SERDE.deserializer().deserialize(TOPIC,serialized)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/state/internals/LeftOrRightValueSerializerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "STRING_OR_INTEGER_SERDE.deserializer().deserialize(TOPIC,serialized)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 69,
      "startLineNumber" : 45,
      "startColumnNumber" : 12,
      "endLineNumber" : 45,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 44,
        "startColumnNumber" : 48,
        "endLineNumber" : 45,
        "endColumnNumber" : 81
      },
      "nodeContext" : "deserialized=STRING_OR_INTEGER_SERDE.deserializer().deserialize(TOPIC,serialized)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 82
      },
      "nodeContext" : "final LeftOrRightValue<String,Integer> deserialized=STRING_OR_INTEGER_SERDE.deserializer().deserialize(TOPIC,serialized);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 535,
        "startLineNumber" : 34,
        "startColumnNumber" : 45,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String value=\"some-string\";\n  final LeftOrRightValue<String,Integer> leftOrRightValue=LeftOrRightValue.makeLeftValue(value);\n  final byte[] serialized=STRING_OR_INTEGER_SERDE.serializer().serialize(TOPIC,leftOrRightValue);\n  assertThat(serialized,is(notNullValue()));\n  final LeftOrRightValue<String,Integer> deserialized=STRING_OR_INTEGER_SERDE.deserializer().deserialize(TOPIC,serialized);\n  assertThat(deserialized,is(leftOrRightValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldSerializeStringValue(){\n  final String value=\"some-string\";\n  final LeftOrRightValue<String,Integer> leftOrRightValue=LeftOrRightValue.makeLeftValue(value);\n  final byte[] serialized=STRING_OR_INTEGER_SERDE.serializer().serialize(TOPIC,leftOrRightValue);\n  assertThat(serialized,is(notNullValue()));\n  final LeftOrRightValue<String,Integer> deserialized=STRING_OR_INTEGER_SERDE.deserializer().deserialize(TOPIC,serialized);\n  assertThat(deserialized,is(leftOrRightValue));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 44,
        "startColumnNumber" : 48,
        "endLineNumber" : 45,
        "endColumnNumber" : 81
      },
      "nodeContext" : "deserialized=STRING_OR_INTEGER_SERDE.deserializer().deserialize(TOPIC,serialized)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 8,
    "type" : "org.apache.kafka.streams.state.internals.LeftOrRightValue<java.lang.String,java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 69,
    "startLineNumber" : 45,
    "startColumnNumber" : 12,
    "endLineNumber" : 45,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}