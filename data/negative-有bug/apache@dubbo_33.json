{
  "id" : 33,
  "expression" : "protocol.refer(EchoService.class,url)",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/RpcFilterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "protocol.refer(EchoService.class,url)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 53,
      "startColumnNumber" : 42,
      "endLineNumber" : 53,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 53,
        "startColumnNumber" : 27,
        "endLineNumber" : 53,
        "endColumnNumber" : 81
      },
      "nodeContext" : "proxy.getProxy(protocol.refer(EchoService.class,url))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 53,
        "startColumnNumber" : 20,
        "endLineNumber" : 53,
        "endColumnNumber" : 81
      },
      "nodeContext" : "echo=proxy.getProxy(protocol.refer(EchoService.class,url))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 82
      },
      "nodeContext" : "EchoService echo=proxy.getProxy(protocol.refer(EchoService.class,url));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 843,
        "startLineNumber" : 44,
        "startColumnNumber" : 49,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DemoService service=new DemoServiceImpl();\n  int port=NetUtils.getAvailablePort();\n  URL url=URL.valueOf(\"dubbo://127.0.0.1:\" + port + \"/org.apache.dubbo.rpc.protocol.dubbo.support.DemoService?service.filter=echo\");\n  ApplicationModel.getServiceRepository().registerService(DemoService.class);\n  protocol.export(proxy.getInvoker(service,DemoService.class,url));\n  service=proxy.getProxy(protocol.refer(DemoService.class,url));\n  Assertions.assertEquals(\"123\",service.echo(\"123\"));\n  EchoService echo=proxy.getProxy(protocol.refer(EchoService.class,url));\n  Assertions.assertEquals(echo.$echo(\"test\"),\"test\");\n  Assertions.assertEquals(echo.$echo(\"abcdefg\"),\"abcdefg\");\n  Assertions.assertEquals(echo.$echo(1234),1234);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 898,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRpcFilter() throws Exception {\n  DemoService service=new DemoServiceImpl();\n  int port=NetUtils.getAvailablePort();\n  URL url=URL.valueOf(\"dubbo://127.0.0.1:\" + port + \"/org.apache.dubbo.rpc.protocol.dubbo.support.DemoService?service.filter=echo\");\n  ApplicationModel.getServiceRepository().registerService(DemoService.class);\n  protocol.export(proxy.getInvoker(service,DemoService.class,url));\n  service=proxy.getProxy(protocol.refer(DemoService.class,url));\n  Assertions.assertEquals(\"123\",service.echo(\"123\"));\n  EchoService echo=proxy.getProxy(protocol.refer(EchoService.class,url));\n  Assertions.assertEquals(echo.$echo(\"test\"),\"test\");\n  Assertions.assertEquals(echo.$echo(\"abcdefg\"),\"abcdefg\");\n  Assertions.assertEquals(echo.$echo(1234),1234);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 82
      },
      "nodeContext" : "EchoService echo=proxy.getProxy(protocol.refer(EchoService.class,url));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "org.apache.dubbo.rpc.Invoker<org.apache.dubbo.rpc.service.EchoService>"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 53,
    "startColumnNumber" : 42,
    "endLineNumber" : 53,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}