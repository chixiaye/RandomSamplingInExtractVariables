{
  "id" : 398,
  "expression" : "\"Wanted *at least* 3 times\"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/verification/VerificationWithAfterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Wanted *at least* 3 times\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 133,
      "startColumnNumber" : 38,
      "endLineNumber" : 133,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assertions.assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){\n  @Override public void call(){\n    verify(mock,after(300).atLeast(3)).oneArg('1');\n  }\n}\n).isInstanceOf(AssertionError.class).hasMessageContaining(\"Wanted *at least* 3 times\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 37,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Assertions.assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){\n  @Override public void call(){\n    verify(mock,after(300).atLeast(3)).oneArg('1');\n  }\n}\n).isInstanceOf(AssertionError.class).hasMessageContaining(\"Wanted *at least* 3 times\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 38,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 648,
        "startLineNumber" : 118,
        "startColumnNumber" : 55,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  async.runAfter(10,callMock);\n  async.runAfter(50,callMock);\n  async.runAfter(600,callMock);\n  Assertions.assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){\n    @Override public void call(){\n      verify(mock,after(300).atLeast(3)).oneArg('1');\n    }\n  }\n).isInstanceOf(AssertionError.class).hasMessageContaining(\"Wanted *at least* 3 times\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 710,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_verify_with_at_least_and_fail(){\n  async.runAfter(10,callMock);\n  async.runAfter(50,callMock);\n  async.runAfter(600,callMock);\n  Assertions.assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){\n    @Override public void call(){\n      verify(mock,after(300).atLeast(3)).oneArg('1');\n    }\n  }\n).isInstanceOf(AssertionError.class).hasMessageContaining(\"Wanted *at least* 3 times\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assertions.assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){\n  @Override public void call(){\n    verify(mock,after(300).atLeast(3)).oneArg('1');\n  }\n}\n).isInstanceOf(AssertionError.class).hasMessageContaining(\"Wanted *at least* 3 times\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 37,
      "astHeight" : 13
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 133,
    "startColumnNumber" : 38,
    "endLineNumber" : 133,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}