{
  "id" : 111,
  "expression" : "hexchars[ch / 16]",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/jute/Utils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "hexchars[ch / 16]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 80,
      "startColumnNumber" : 22,
      "endLineNumber" : 80,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 38
      },
      "nodeContext" : "sb.append(hexchars[ch / 16])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 39
      },
      "nodeContext" : "sb.append(hexchars[ch / 16]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 78,
        "startColumnNumber" : 32,
        "endLineNumber" : 82,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  sb.append(\"%\");\n  sb.append(hexchars[ch / 16]);\n  sb.append(hexchars[ch % 16]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 78,
        "startColumnNumber" : 17,
        "endLineNumber" : 84,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (ch < 0x20) {\n  sb.append(\"%\");\n  sb.append(hexchars[ch / 16]);\n  sb.append(hexchars[ch % 16]);\n}\n else {\n  sb.append(ch);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 76,
        "startColumnNumber" : 17,
        "endLineNumber" : 84,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (ch == '%') {\n  sb.append(\"%25\");\n}\n else if (ch < 0x20) {\n  sb.append(\"%\");\n  sb.append(hexchars[ch / 16]);\n  sb.append(hexchars[ch % 16]);\n}\n else {\n  sb.append(ch);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 74,
        "startColumnNumber" : 17,
        "endLineNumber" : 84,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (ch == '&') {\n  sb.append(\"&amp;\");\n}\n else if (ch == '%') {\n  sb.append(\"%25\");\n}\n else if (ch < 0x20) {\n  sb.append(\"%\");\n  sb.append(hexchars[ch / 16]);\n  sb.append(hexchars[ch % 16]);\n}\n else {\n  sb.append(ch);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 72,
        "startColumnNumber" : 10,
        "endLineNumber" : 84,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (ch == '<') {\n  sb.append(\"&lt;\");\n}\n else if (ch == '&') {\n  sb.append(\"&amp;\");\n}\n else if (ch == '%') {\n  sb.append(\"%25\");\n}\n else if (ch < 0x20) {\n  sb.append(\"%\");\n  sb.append(hexchars[ch / 16]);\n  sb.append(hexchars[ch % 16]);\n}\n else {\n  sb.append(ch);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 434,
        "startLineNumber" : 70,
        "startColumnNumber" : 51,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char ch=s.charAt(idx);\n  if (ch == '<') {\n    sb.append(\"&lt;\");\n  }\n else   if (ch == '&') {\n    sb.append(\"&amp;\");\n  }\n else   if (ch == '%') {\n    sb.append(\"%25\");\n  }\n else   if (ch < 0x20) {\n    sb.append(\"%\");\n    sb.append(hexchars[ch / 16]);\n    sb.append(hexchars[ch % 16]);\n  }\n else {\n    sb.append(ch);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 477,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int idx=0; idx < s.length(); idx++) {\n  char ch=s.charAt(idx);\n  if (ch == '<') {\n    sb.append(\"&lt;\");\n  }\n else   if (ch == '&') {\n    sb.append(\"&amp;\");\n  }\n else   if (ch == '%') {\n    sb.append(\"%25\");\n  }\n else   if (ch < 0x20) {\n    sb.append(\"%\");\n    sb.append(hexchars[ch / 16]);\n    sb.append(hexchars[ch % 16]);\n  }\n else {\n    sb.append(ch);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 86,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 602,
        "startLineNumber" : 67,
        "startColumnNumber" : 40,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String s=t.toString();\n  StringBuffer sb=new StringBuffer();\n  for (int idx=0; idx < s.length(); idx++) {\n    char ch=s.charAt(idx);\n    if (ch == '<') {\n      sb.append(\"&lt;\");\n    }\n else     if (ch == '&') {\n      sb.append(\"&amp;\");\n    }\n else     if (ch == '%') {\n      sb.append(\"%25\");\n    }\n else     if (ch < 0x20) {\n      sb.append(\"%\");\n      sb.append(hexchars[ch / 16]);\n      sb.append(hexchars[ch % 16]);\n    }\n else {\n      sb.append(ch);\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param s \n * @return \n */\nstatic String toXMLString(String t){\n  String s=t.toString();\n  StringBuffer sb=new StringBuffer();\n  for (int idx=0; idx < s.length(); idx++) {\n    char ch=s.charAt(idx);\n    if (ch == '<') {\n      sb.append(\"&lt;\");\n    }\n else     if (ch == '&') {\n      sb.append(\"&amp;\");\n    }\n else     if (ch == '%') {\n      sb.append(\"%25\");\n    }\n else     if (ch < 0x20) {\n      sb.append(\"%\");\n      sb.append(hexchars[ch / 16]);\n      sb.append(hexchars[ch % 16]);\n    }\n else {\n      sb.append(ch);\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 39
      },
      "nodeContext" : "sb.append(hexchars[ch / 16]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 80,
    "startColumnNumber" : 22,
    "endLineNumber" : 80,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}