{
  "id" : 280,
  "expression" : "t",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/common/src/main/java/io/netty/util/ResourceLeakDetectorFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 112,
      "startColumnNumber" : 44,
      "endLineNumber" : 112,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 46
      },
      "nodeContext" : "logger.error(\"Could not load custom resource leak detector class provided: {}\",customLeakDetector,t)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 47
      },
      "nodeContext" : "logger.error(\"Could not load custom resource leak detector class provided: {}\",customLeakDetector,t);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 110,
        "startColumnNumber" : 34,
        "endLineNumber" : 113,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  logger.error(\"Could not load custom resource leak detector class provided: {}\",customLeakDetector,t);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 110,
        "startColumnNumber" : 14,
        "endLineNumber" : 113,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (Throwable t) {\n  logger.error(\"Could not load custom resource leak detector class provided: {}\",customLeakDetector,t);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  final Class<?> detectorClass=Class.forName(customLeakDetector,true,PlatformDependent.getSystemClassLoader());\n  if (ResourceLeakDetector.class.isAssignableFrom(detectorClass)) {\n    return detectorClass.getConstructor(Class.class,int.class);\n  }\n else {\n    logger.error(\"Class {} does not inherit from ResourceLeakDetector.\",customLeakDetector);\n  }\n}\n catch (Throwable t) {\n  logger.error(\"Could not load custom resource leak detector class provided: {}\",customLeakDetector,t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 100,
        "startColumnNumber" : 88,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    final Class<?> detectorClass=Class.forName(customLeakDetector,true,PlatformDependent.getSystemClassLoader());\n    if (ResourceLeakDetector.class.isAssignableFrom(detectorClass)) {\n      return detectorClass.getConstructor(Class.class,int.class);\n    }\n else {\n      logger.error(\"Class {} does not inherit from ResourceLeakDetector.\",customLeakDetector);\n    }\n  }\n catch (  Throwable t) {\n    logger.error(\"Could not load custom resource leak detector class provided: {}\",customLeakDetector,t);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 814,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private static Constructor<?> customClassConstructor(String customLeakDetector){\n  try {\n    final Class<?> detectorClass=Class.forName(customLeakDetector,true,PlatformDependent.getSystemClassLoader());\n    if (ResourceLeakDetector.class.isAssignableFrom(detectorClass)) {\n      return detectorClass.getConstructor(Class.class,int.class);\n    }\n else {\n      logger.error(\"Class {} does not inherit from ResourceLeakDetector.\",customLeakDetector);\n    }\n  }\n catch (  Throwable t) {\n    logger.error(\"Could not load custom resource leak detector class provided: {}\",customLeakDetector,t);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 46
      },
      "nodeContext" : "logger.error(\"Could not load custom resource leak detector class provided: {}\",customLeakDetector,t)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 112,
    "startColumnNumber" : 44,
    "endLineNumber" : 112,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}