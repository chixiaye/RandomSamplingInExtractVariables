{
  "id" : 172,
  "expression" : "RollingCommandLatencyDistributionStream.getInstance(key,10,100)",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/metric/consumer/RollingCommandLatencyDistributionStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RollingCommandLatencyDistributionStream.getInstance(key,10,100)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 65,
      "startLineNumber" : 59,
      "startColumnNumber" : 17,
      "endLineNumber" : 59,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 6,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 82
      },
      "nodeContext" : "stream=RollingCommandLatencyDistributionStream.getInstance(key,10,100)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 83
      },
      "nodeContext" : "stream=RollingCommandLatencyDistributionStream.getInstance(key,10,100);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1120,
        "startLineNumber" : 57,
        "startColumnNumber" : 60,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"CMD-Latency-A\");\n  stream=RollingCommandLatencyDistributionStream.getInstance(key,10,100);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(10).subscribe(new Subscriber<CachedValuesHistogram>(){\n    @Override public void onCompleted(){\n      latch.countDown();\n    }\n    @Override public void onError(    Throwable e){\n      fail(e.getMessage());\n    }\n    @Override public void onNext(    CachedValuesHistogram distribution){\n      System.out.println(\"OnNext @ \" + System.currentTimeMillis());\n      assertEquals(0,distribution.getTotalCount());\n    }\n  }\n);\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  assertEquals(0,stream.getLatest().getTotalCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1186,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testEmptyStreamProducesEmptyDistributions(){\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"CMD-Latency-A\");\n  stream=RollingCommandLatencyDistributionStream.getInstance(key,10,100);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(10).subscribe(new Subscriber<CachedValuesHistogram>(){\n    @Override public void onCompleted(){\n      latch.countDown();\n    }\n    @Override public void onError(    Throwable e){\n      fail(e.getMessage());\n    }\n    @Override public void onNext(    CachedValuesHistogram distribution){\n      System.out.println(\"OnNext @ \" + System.currentTimeMillis());\n      assertEquals(0,distribution.getTotalCount());\n    }\n  }\n);\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  assertEquals(0,stream.getLatest().getTotalCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 83
      },
      "nodeContext" : "stream=RollingCommandLatencyDistributionStream.getInstance(key,10,100);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "com.netflix.hystrix.metric.consumer.RollingCommandLatencyDistributionStream"
  } ],
  "positionList" : [ {
    "charLength" : 65,
    "startLineNumber" : 59,
    "startColumnNumber" : 17,
    "endLineNumber" : 59,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}