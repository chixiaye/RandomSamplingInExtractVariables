{
  "id" : 328,
  "expression" : "new ScrollView(getParentActivity())",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ScrollView(getParentActivity())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 2022,
      "startColumnNumber" : 37,
      "endLineNumber" : 2022,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 2022,
        "startColumnNumber" : 24,
        "endLineNumber" : 2022,
        "endColumnNumber" : 72
      },
      "nodeContext" : "scrollView=new ScrollView(getParentActivity())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 2022,
        "startColumnNumber" : 24,
        "endLineNumber" : 2022,
        "endColumnNumber" : 73
      },
      "nodeContext" : "scrollView=new ScrollView(getParentActivity());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 2021,
        "startColumnNumber" : 27,
        "endLineNumber" : 2023,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  scrollView=new ScrollView(getParentActivity());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 2013,
        "startColumnNumber" : 20,
        "endLineNumber" : 2023,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 21) {\n  scrollView=new ScrollView(getParentActivity(),null,0,R.style.scrollbarShapeStyle){\n    @Override protected void onMeasure(    int widthMeasureSpec,    int heightMeasureSpec){\n      super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n      setMeasuredDimension(linearLayout.getMeasuredWidth(),getMeasuredHeight());\n    }\n  }\n;\n}\n else {\n  scrollView=new ScrollView(getParentActivity());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 11411,
        "startLineNumber" : 1957,
        "startColumnNumber" : 94,
        "endLineNumber" : 2139,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (actionBar.isActionModeShowed()) {\n    return false;\n  }\n  if (scrimPopupWindow != null) {\n    scrimPopupWindow.dismiss();\n    scrimPopupWindow=null;\n    scrimPopupWindowItems=null;\n    return false;\n  }\n  Rect rect=new Rect();\n  MessagesController.DialogFilter dialogFilter;\n  if (tabView.getId() == Integer.MAX_VALUE) {\n    dialogFilter=null;\n  }\n else {\n    dialogFilter=getMessagesController().dialogFilters.get(tabView.getId());\n  }\n  ActionBarPopupWindow.ActionBarPopupWindowLayout popupLayout=new ActionBarPopupWindow.ActionBarPopupWindowLayout(getParentActivity());\n  popupLayout.setOnTouchListener(new View.OnTouchListener(){\n    private int[] pos=new int[2];\n    @Override public boolean onTouch(    View v,    MotionEvent event){\n      if (event.getActionMasked() == MotionEvent.ACTION_DOWN) {\n        if (scrimPopupWindow != null && scrimPopupWindow.isShowing()) {\n          View contentView=scrimPopupWindow.getContentView();\n          contentView.getLocationInWindow(pos);\n          rect.set(pos[0],pos[1],pos[0] + contentView.getMeasuredWidth(),pos[1] + contentView.getMeasuredHeight());\n          if (!rect.contains((int)event.getX(),(int)event.getY())) {\n            scrimPopupWindow.dismiss();\n          }\n        }\n      }\n else       if (event.getActionMasked() == MotionEvent.ACTION_OUTSIDE) {\n        if (scrimPopupWindow != null && scrimPopupWindow.isShowing()) {\n          scrimPopupWindow.dismiss();\n        }\n      }\n      return false;\n    }\n  }\n);\n  popupLayout.setDispatchKeyEventListener(keyEvent -> {\n    if (keyEvent.getKeyCode() == KeyEvent.KEYCODE_BACK && keyEvent.getRepeatCount() == 0 && scrimPopupWindow != null && scrimPopupWindow.isShowing()) {\n      scrimPopupWindow.dismiss();\n    }\n  }\n);\n  Rect backgroundPaddings=new Rect();\n  Drawable shadowDrawable=getParentActivity().getResources().getDrawable(R.drawable.popup_fixed_alert).mutate();\n  shadowDrawable.getPadding(backgroundPaddings);\n  popupLayout.setBackgroundDrawable(shadowDrawable);\n  popupLayout.setBackgroundColor(Theme.getColor(Theme.key_actionBarDefaultSubmenuBackground));\n  LinearLayout linearLayout=new LinearLayout(getParentActivity());\n  ScrollView scrollView;\n  if (Build.VERSION.SDK_INT >= 21) {\n    scrollView=new ScrollView(getParentActivity(),null,0,R.style.scrollbarShapeStyle){\n      @Override protected void onMeasure(      int widthMeasureSpec,      int heightMeasureSpec){\n        super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n        setMeasuredDimension(linearLayout.getMeasuredWidth(),getMeasuredHeight());\n      }\n    }\n;\n  }\n else {\n    scrollView=new ScrollView(getParentActivity());\n  }\n  scrollView.setClipToPadding(false);\n  popupLayout.addView(scrollView,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT));\n  linearLayout.setMinimumWidth(AndroidUtilities.dp(200));\n  linearLayout.setOrientation(LinearLayout.VERTICAL);\n  scrimPopupWindowItems=new ActionBarMenuSubItem[3];\n  for (int a=0, N=(tabView.getId() == Integer.MAX_VALUE ? 2 : 3); a < N; a++) {\n    ActionBarMenuSubItem cell=new ActionBarMenuSubItem(getParentActivity());\n    if (a == 0) {\n      if (getMessagesController().dialogFilters.size() <= 1) {\n        continue;\n      }\n      cell.setTextAndIcon(LocaleController.getString(\"FilterReorder\",R.string.FilterReorder),R.drawable.tabs_reorder);\n    }\n else     if (a == 1) {\n      if (N == 2) {\n        cell.setTextAndIcon(LocaleController.getString(\"FilterEditAll\",R.string.FilterEditAll),R.drawable.msg_edit);\n      }\n else {\n        cell.setTextAndIcon(LocaleController.getString(\"FilterEdit\",R.string.FilterEdit),R.drawable.msg_edit);\n      }\n    }\n else {\n      cell.setTextAndIcon(LocaleController.getString(\"FilterDeleteItem\",R.string.FilterDeleteItem),R.drawable.msg_delete);\n    }\n    scrimPopupWindowItems[a]=cell;\n    linearLayout.addView(cell);\n    final int i=a;\n    cell.setOnClickListener(v1 -> {\n      if (i == 0) {\n        resetScroll();\n        filterTabsView.setIsEditing(true);\n        showDoneItem(true);\n      }\n else       if (i == 1) {\n        if (N == 2) {\n          presentFragment(new FiltersSetupActivity());\n        }\n else {\n          presentFragment(new FilterCreateActivity(dialogFilter));\n        }\n      }\n else       if (i == 2) {\n        showDeleteAlert(dialogFilter);\n      }\n      if (scrimPopupWindow != null) {\n        scrimPopupWindow.dismiss();\n      }\n    }\n);\n  }\n  scrollView.addView(linearLayout,LayoutHelper.createScroll(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.LEFT | Gravity.TOP));\n  scrimPopupWindow=new ActionBarPopupWindow(popupLayout,LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT){\n    @Override public void dismiss(){\n      super.dismiss();\n      if (scrimPopupWindow != this) {\n        return;\n      }\n      scrimPopupWindow=null;\n      scrimPopupWindowItems=null;\n      if (scrimAnimatorSet != null) {\n        scrimAnimatorSet.cancel();\n        scrimAnimatorSet=null;\n      }\n      scrimAnimatorSet=new AnimatorSet();\n      ArrayList<Animator> animators=new ArrayList<>();\n      animators.add(ObjectAnimator.ofInt(scrimPaint,AnimationProperties.PAINT_ALPHA,0));\n      scrimAnimatorSet.playTogether(animators);\n      scrimAnimatorSet.setDuration(220);\n      scrimAnimatorSet.addListener(new AnimatorListenerAdapter(){\n        @Override public void onAnimationEnd(        Animator animation){\n          if (scrimView != null) {\n            scrimView.setBackground(null);\n            scrimView=null;\n          }\n          if (fragmentView != null) {\n            fragmentView.invalidate();\n          }\n        }\n      }\n);\n      scrimAnimatorSet.start();\n      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n        getParentActivity().getWindow().getDecorView().setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_AUTO);\n      }\n    }\n  }\n;\n  tabView.setBackground(Theme.createRoundRectDrawable(AndroidUtilities.dp(6),Theme.getColor(Theme.key_actionBarDefault)));\n  scrimPopupWindow.setDismissAnimationDuration(220);\n  scrimPopupWindow.setOutsideTouchable(true);\n  scrimPopupWindow.setClippingEnabled(true);\n  scrimPopupWindow.setAnimationStyle(R.style.PopupContextAnimation);\n  scrimPopupWindow.setFocusable(true);\n  popupLayout.measure(View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(1000),View.MeasureSpec.AT_MOST),View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(1000),View.MeasureSpec.AT_MOST));\n  scrimPopupWindow.setInputMethodMode(ActionBarPopupWindow.INPUT_METHOD_NOT_NEEDED);\n  scrimPopupWindow.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_UNSPECIFIED);\n  scrimPopupWindow.getContentView().setFocusableInTouchMode(true);\n  tabView.getLocationInWindow(scrimViewLocation);\n  int popupX=scrimViewLocation[0] + backgroundPaddings.left - AndroidUtilities.dp(16);\n  if (popupX < AndroidUtilities.dp(6)) {\n    popupX=AndroidUtilities.dp(6);\n  }\n else   if (popupX > fragmentView.getMeasuredWidth() - AndroidUtilities.dp(6) - popupLayout.getMeasuredWidth()) {\n    popupX=fragmentView.getMeasuredWidth() - AndroidUtilities.dp(6) - popupLayout.getMeasuredWidth();\n  }\n  int popupY=scrimViewLocation[1] + tabView.getMeasuredHeight() - AndroidUtilities.dp(12);\n  scrimPopupWindow.showAtLocation(fragmentView,Gravity.LEFT | Gravity.TOP,popupX,popupY);\n  scrimView=tabView;\n  scrimViewSelected=selected;\n  fragmentView.invalidate();\n  if (scrimAnimatorSet != null) {\n    scrimAnimatorSet.cancel();\n  }\n  scrimAnimatorSet=new AnimatorSet();\n  ArrayList<Animator> animators=new ArrayList<>();\n  animators.add(ObjectAnimator.ofInt(scrimPaint,AnimationProperties.PAINT_ALPHA,0,50));\n  scrimAnimatorSet.playTogether(animators);\n  scrimAnimatorSet.setDuration(150);\n  scrimAnimatorSet.start();\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1083,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 11515,
        "startLineNumber" : 1956,
        "startColumnNumber" : 16,
        "endLineNumber" : 2139,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public boolean didSelectTab(FilterTabsView.TabView tabView,boolean selected){\n  if (actionBar.isActionModeShowed()) {\n    return false;\n  }\n  if (scrimPopupWindow != null) {\n    scrimPopupWindow.dismiss();\n    scrimPopupWindow=null;\n    scrimPopupWindowItems=null;\n    return false;\n  }\n  Rect rect=new Rect();\n  MessagesController.DialogFilter dialogFilter;\n  if (tabView.getId() == Integer.MAX_VALUE) {\n    dialogFilter=null;\n  }\n else {\n    dialogFilter=getMessagesController().dialogFilters.get(tabView.getId());\n  }\n  ActionBarPopupWindow.ActionBarPopupWindowLayout popupLayout=new ActionBarPopupWindow.ActionBarPopupWindowLayout(getParentActivity());\n  popupLayout.setOnTouchListener(new View.OnTouchListener(){\n    private int[] pos=new int[2];\n    @Override public boolean onTouch(    View v,    MotionEvent event){\n      if (event.getActionMasked() == MotionEvent.ACTION_DOWN) {\n        if (scrimPopupWindow != null && scrimPopupWindow.isShowing()) {\n          View contentView=scrimPopupWindow.getContentView();\n          contentView.getLocationInWindow(pos);\n          rect.set(pos[0],pos[1],pos[0] + contentView.getMeasuredWidth(),pos[1] + contentView.getMeasuredHeight());\n          if (!rect.contains((int)event.getX(),(int)event.getY())) {\n            scrimPopupWindow.dismiss();\n          }\n        }\n      }\n else       if (event.getActionMasked() == MotionEvent.ACTION_OUTSIDE) {\n        if (scrimPopupWindow != null && scrimPopupWindow.isShowing()) {\n          scrimPopupWindow.dismiss();\n        }\n      }\n      return false;\n    }\n  }\n);\n  popupLayout.setDispatchKeyEventListener(keyEvent -> {\n    if (keyEvent.getKeyCode() == KeyEvent.KEYCODE_BACK && keyEvent.getRepeatCount() == 0 && scrimPopupWindow != null && scrimPopupWindow.isShowing()) {\n      scrimPopupWindow.dismiss();\n    }\n  }\n);\n  Rect backgroundPaddings=new Rect();\n  Drawable shadowDrawable=getParentActivity().getResources().getDrawable(R.drawable.popup_fixed_alert).mutate();\n  shadowDrawable.getPadding(backgroundPaddings);\n  popupLayout.setBackgroundDrawable(shadowDrawable);\n  popupLayout.setBackgroundColor(Theme.getColor(Theme.key_actionBarDefaultSubmenuBackground));\n  LinearLayout linearLayout=new LinearLayout(getParentActivity());\n  ScrollView scrollView;\n  if (Build.VERSION.SDK_INT >= 21) {\n    scrollView=new ScrollView(getParentActivity(),null,0,R.style.scrollbarShapeStyle){\n      @Override protected void onMeasure(      int widthMeasureSpec,      int heightMeasureSpec){\n        super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n        setMeasuredDimension(linearLayout.getMeasuredWidth(),getMeasuredHeight());\n      }\n    }\n;\n  }\n else {\n    scrollView=new ScrollView(getParentActivity());\n  }\n  scrollView.setClipToPadding(false);\n  popupLayout.addView(scrollView,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT));\n  linearLayout.setMinimumWidth(AndroidUtilities.dp(200));\n  linearLayout.setOrientation(LinearLayout.VERTICAL);\n  scrimPopupWindowItems=new ActionBarMenuSubItem[3];\n  for (int a=0, N=(tabView.getId() == Integer.MAX_VALUE ? 2 : 3); a < N; a++) {\n    ActionBarMenuSubItem cell=new ActionBarMenuSubItem(getParentActivity());\n    if (a == 0) {\n      if (getMessagesController().dialogFilters.size() <= 1) {\n        continue;\n      }\n      cell.setTextAndIcon(LocaleController.getString(\"FilterReorder\",R.string.FilterReorder),R.drawable.tabs_reorder);\n    }\n else     if (a == 1) {\n      if (N == 2) {\n        cell.setTextAndIcon(LocaleController.getString(\"FilterEditAll\",R.string.FilterEditAll),R.drawable.msg_edit);\n      }\n else {\n        cell.setTextAndIcon(LocaleController.getString(\"FilterEdit\",R.string.FilterEdit),R.drawable.msg_edit);\n      }\n    }\n else {\n      cell.setTextAndIcon(LocaleController.getString(\"FilterDeleteItem\",R.string.FilterDeleteItem),R.drawable.msg_delete);\n    }\n    scrimPopupWindowItems[a]=cell;\n    linearLayout.addView(cell);\n    final int i=a;\n    cell.setOnClickListener(v1 -> {\n      if (i == 0) {\n        resetScroll();\n        filterTabsView.setIsEditing(true);\n        showDoneItem(true);\n      }\n else       if (i == 1) {\n        if (N == 2) {\n          presentFragment(new FiltersSetupActivity());\n        }\n else {\n          presentFragment(new FilterCreateActivity(dialogFilter));\n        }\n      }\n else       if (i == 2) {\n        showDeleteAlert(dialogFilter);\n      }\n      if (scrimPopupWindow != null) {\n        scrimPopupWindow.dismiss();\n      }\n    }\n);\n  }\n  scrollView.addView(linearLayout,LayoutHelper.createScroll(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.LEFT | Gravity.TOP));\n  scrimPopupWindow=new ActionBarPopupWindow(popupLayout,LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT){\n    @Override public void dismiss(){\n      super.dismiss();\n      if (scrimPopupWindow != this) {\n        return;\n      }\n      scrimPopupWindow=null;\n      scrimPopupWindowItems=null;\n      if (scrimAnimatorSet != null) {\n        scrimAnimatorSet.cancel();\n        scrimAnimatorSet=null;\n      }\n      scrimAnimatorSet=new AnimatorSet();\n      ArrayList<Animator> animators=new ArrayList<>();\n      animators.add(ObjectAnimator.ofInt(scrimPaint,AnimationProperties.PAINT_ALPHA,0));\n      scrimAnimatorSet.playTogether(animators);\n      scrimAnimatorSet.setDuration(220);\n      scrimAnimatorSet.addListener(new AnimatorListenerAdapter(){\n        @Override public void onAnimationEnd(        Animator animation){\n          if (scrimView != null) {\n            scrimView.setBackground(null);\n            scrimView=null;\n          }\n          if (fragmentView != null) {\n            fragmentView.invalidate();\n          }\n        }\n      }\n);\n      scrimAnimatorSet.start();\n      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n        getParentActivity().getWindow().getDecorView().setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_AUTO);\n      }\n    }\n  }\n;\n  tabView.setBackground(Theme.createRoundRectDrawable(AndroidUtilities.dp(6),Theme.getColor(Theme.key_actionBarDefault)));\n  scrimPopupWindow.setDismissAnimationDuration(220);\n  scrimPopupWindow.setOutsideTouchable(true);\n  scrimPopupWindow.setClippingEnabled(true);\n  scrimPopupWindow.setAnimationStyle(R.style.PopupContextAnimation);\n  scrimPopupWindow.setFocusable(true);\n  popupLayout.measure(View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(1000),View.MeasureSpec.AT_MOST),View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(1000),View.MeasureSpec.AT_MOST));\n  scrimPopupWindow.setInputMethodMode(ActionBarPopupWindow.INPUT_METHOD_NOT_NEEDED);\n  scrimPopupWindow.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_UNSPECIFIED);\n  scrimPopupWindow.getContentView().setFocusableInTouchMode(true);\n  tabView.getLocationInWindow(scrimViewLocation);\n  int popupX=scrimViewLocation[0] + backgroundPaddings.left - AndroidUtilities.dp(16);\n  if (popupX < AndroidUtilities.dp(6)) {\n    popupX=AndroidUtilities.dp(6);\n  }\n else   if (popupX > fragmentView.getMeasuredWidth() - AndroidUtilities.dp(6) - popupLayout.getMeasuredWidth()) {\n    popupX=fragmentView.getMeasuredWidth() - AndroidUtilities.dp(6) - popupLayout.getMeasuredWidth();\n  }\n  int popupY=scrimViewLocation[1] + tabView.getMeasuredHeight() - AndroidUtilities.dp(12);\n  scrimPopupWindow.showAtLocation(fragmentView,Gravity.LEFT | Gravity.TOP,popupX,popupY);\n  scrimView=tabView;\n  scrimViewSelected=selected;\n  fragmentView.invalidate();\n  if (scrimAnimatorSet != null) {\n    scrimAnimatorSet.cancel();\n  }\n  scrimAnimatorSet=new AnimatorSet();\n  ArrayList<Animator> animators=new ArrayList<>();\n  animators.add(ObjectAnimator.ofInt(scrimPaint,AnimationProperties.PAINT_ALPHA,0,50));\n  scrimAnimatorSet.playTogether(animators);\n  scrimAnimatorSet.setDuration(150);\n  scrimAnimatorSet.start();\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1098,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 2022,
        "startColumnNumber" : 24,
        "endLineNumber" : 2022,
        "endColumnNumber" : 73
      },
      "nodeContext" : "scrollView=new ScrollView(getParentActivity());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.telegram.ui.ScrollView"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 2022,
    "startColumnNumber" : 37,
    "endLineNumber" : 2022,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}