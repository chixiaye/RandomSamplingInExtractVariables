{
  "id" : 34,
  "expression" : "queueSendMap.get(sid).size() == 0",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "queueSendMap.get(sid).size() == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 70,
      "startLineNumber" : 500,
      "startColumnNumber" : 28,
      "endLineNumber" : 501,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 500,
        "startColumnNumber" : 24,
        "endLineNumber" : 503,
        "endColumnNumber" : 46
      },
      "nodeContext" : "if (queueSendMap.get(sid).size() == 0) queueSendMap.get(sid).offer(b);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 403,
        "startLineNumber" : 494,
        "startColumnNumber" : 51,
        "endLineNumber" : 504,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  recvWorker.finish();\n  recvWorker=null;\n  senderWorkerMap.remove(sid);\n  if (queueSendMap.get(sid).size() == 0)   queueSendMap.get(sid).offer(b);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 434,
        "startLineNumber" : 494,
        "startColumnNumber" : 20,
        "endLineNumber" : 504,
        "endColumnNumber" : 21
      },
      "nodeContext" : "synchronized (senderWorkerMap) {\n  recvWorker.finish();\n  recvWorker=null;\n  senderWorkerMap.remove(sid);\n  if (queueSendMap.get(sid).size() == 0)   queueSendMap.get(sid).offer(b);\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 774,
        "startLineNumber" : 487,
        "startColumnNumber" : 40,
        "endLineNumber" : 505,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  LOG.warn(\"Exception when using channel: \" + sid,e);\n  running=false;\nsynchronized (senderWorkerMap) {\n    recvWorker.finish();\n    recvWorker=null;\n    senderWorkerMap.remove(sid);\n    if (queueSendMap.get(sid).size() == 0)     queueSendMap.get(sid).offer(b);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 796,
        "startLineNumber" : 487,
        "startColumnNumber" : 18,
        "endLineNumber" : 505,
        "endColumnNumber" : 17
      },
      "nodeContext" : "catch (IOException e) {\n  LOG.warn(\"Exception when using channel: \" + sid,e);\n  running=false;\nsynchronized (senderWorkerMap) {\n    recvWorker.finish();\n    recvWorker=null;\n    senderWorkerMap.remove(sid);\n    if (queueSendMap.get(sid).size() == 0)     queueSendMap.get(sid).offer(b);\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1207,
        "startLineNumber" : 477,
        "startColumnNumber" : 16,
        "endLineNumber" : 505,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  byte[] msgBytes=new byte[b.capacity() + (Integer.SIZE / 8)];\n  ByteBuffer msgBuffer=ByteBuffer.wrap(msgBytes);\n  msgBuffer.putInt(b.capacity());\n  msgBuffer.put(b.array(),0,b.capacity());\n  msgBuffer.position(0);\n  channel.write(msgBuffer);\n}\n catch (IOException e) {\n  LOG.warn(\"Exception when using channel: \" + sid,e);\n  running=false;\nsynchronized (senderWorkerMap) {\n    recvWorker.finish();\n    recvWorker=null;\n    senderWorkerMap.remove(sid);\n    if (queueSendMap.get(sid).size() == 0)     queueSendMap.get(sid).offer(b);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1564,
        "startLineNumber" : 466,
        "startColumnNumber" : 41,
        "endLineNumber" : 506,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ByteBuffer b=null;\n  try {\n    b=queueSendMap.get(sid).take();\n  }\n catch (  InterruptedException e) {\n    LOG.warn(\"Interrupted while waiting for message on queue\",e);\n    continue;\n  }\n  try {\n    byte[] msgBytes=new byte[b.capacity() + (Integer.SIZE / 8)];\n    ByteBuffer msgBuffer=ByteBuffer.wrap(msgBytes);\n    msgBuffer.putInt(b.capacity());\n    msgBuffer.put(b.array(),0,b.capacity());\n    msgBuffer.position(0);\n    channel.write(msgBuffer);\n  }\n catch (  IOException e) {\n    LOG.warn(\"Exception when using channel: \" + sid,e);\n    running=false;\nsynchronized (senderWorkerMap) {\n      recvWorker.finish();\n      recvWorker=null;\n      senderWorkerMap.remove(sid);\n      if (queueSendMap.get(sid).size() == 0)       queueSendMap.get(sid).offer(b);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1593,
        "startLineNumber" : 466,
        "startColumnNumber" : 12,
        "endLineNumber" : 506,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (running && !shutdown) {\n  ByteBuffer b=null;\n  try {\n    b=queueSendMap.get(sid).take();\n  }\n catch (  InterruptedException e) {\n    LOG.warn(\"Interrupted while waiting for message on queue\",e);\n    continue;\n  }\n  try {\n    byte[] msgBytes=new byte[b.capacity() + (Integer.SIZE / 8)];\n    ByteBuffer msgBuffer=ByteBuffer.wrap(msgBytes);\n    msgBuffer.putInt(b.capacity());\n    msgBuffer.put(b.array(),0,b.capacity());\n    msgBuffer.position(0);\n    channel.write(msgBuffer);\n  }\n catch (  IOException e) {\n    LOG.warn(\"Exception when using channel: \" + sid,e);\n    running=false;\nsynchronized (senderWorkerMap) {\n      recvWorker.finish();\n      recvWorker=null;\n      senderWorkerMap.remove(sid);\n      if (queueSendMap.get(sid).size() == 0)       queueSendMap.get(sid).offer(b);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1670,
        "startLineNumber" : 464,
        "startColumnNumber" : 26,
        "endLineNumber" : 508,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (running && !shutdown) {\n    ByteBuffer b=null;\n    try {\n      b=queueSendMap.get(sid).take();\n    }\n catch (    InterruptedException e) {\n      LOG.warn(\"Interrupted while waiting for message on queue\",e);\n      continue;\n    }\n    try {\n      byte[] msgBytes=new byte[b.capacity() + (Integer.SIZE / 8)];\n      ByteBuffer msgBuffer=ByteBuffer.wrap(msgBytes);\n      msgBuffer.putInt(b.capacity());\n      msgBuffer.put(b.array(),0,b.capacity());\n      msgBuffer.position(0);\n      channel.write(msgBuffer);\n    }\n catch (    IOException e) {\n      LOG.warn(\"Exception when using channel: \" + sid,e);\n      running=false;\nsynchronized (senderWorkerMap) {\n        recvWorker.finish();\n        recvWorker=null;\n        senderWorkerMap.remove(sid);\n        if (queueSendMap.get(sid).size() == 0)         queueSendMap.get(sid).offer(b);\n      }\n    }\n  }\n  LOG.warn(\"Send worker leaving thread\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1706,
        "startLineNumber" : 463,
        "startColumnNumber" : 8,
        "endLineNumber" : 508,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void run(){\n  while (running && !shutdown) {\n    ByteBuffer b=null;\n    try {\n      b=queueSendMap.get(sid).take();\n    }\n catch (    InterruptedException e) {\n      LOG.warn(\"Interrupted while waiting for message on queue\",e);\n      continue;\n    }\n    try {\n      byte[] msgBytes=new byte[b.capacity() + (Integer.SIZE / 8)];\n      ByteBuffer msgBuffer=ByteBuffer.wrap(msgBytes);\n      msgBuffer.putInt(b.capacity());\n      msgBuffer.put(b.array(),0,b.capacity());\n      msgBuffer.position(0);\n      channel.write(msgBuffer);\n    }\n catch (    IOException e) {\n      LOG.warn(\"Exception when using channel: \" + sid,e);\n      running=false;\nsynchronized (senderWorkerMap) {\n        recvWorker.finish();\n        recvWorker=null;\n        senderWorkerMap.remove(sid);\n        if (queueSendMap.get(sid).size() == 0)         queueSendMap.get(sid).offer(b);\n      }\n    }\n  }\n  LOG.warn(\"Send worker leaving thread\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 500,
        "startColumnNumber" : 24,
        "endLineNumber" : 503,
        "endColumnNumber" : 46
      },
      "nodeContext" : "if (queueSendMap.get(sid).size() == 0) queueSendMap.get(sid).offer(b);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 70,
    "startLineNumber" : 500,
    "startColumnNumber" : 28,
    "endLineNumber" : 501,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}