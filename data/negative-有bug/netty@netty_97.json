{
  "id" : 97,
  "expression" : "null",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/resolver-dns/src/main/java/io/netty/resolver/dns/DnsServerAddresses.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 171,
      "startColumnNumber" : 21,
      "endLineNumber" : 171,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 171,
        "startColumnNumber" : 16,
        "endLineNumber" : 171,
        "endColumnNumber" : 25
      },
      "nodeContext" : "a == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 171,
        "startColumnNumber" : 12,
        "endLineNumber" : 173,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (a == null) {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 170,
        "startColumnNumber" : 46,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (a == null) {\n    break;\n  }\n  if (a.isUnresolved()) {\n    throw new IllegalArgumentException(\"cannot use an unresolved DNS server address: \" + a);\n  }\n  list.add(a);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (InetSocketAddress a : addresses) {\n  if (a == null) {\n    break;\n  }\n  if (a.isUnresolved()) {\n    throw new IllegalArgumentException(\"cannot use an unresolved DNS server address: \" + a);\n  }\n  list.add(a);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 160,
        "startColumnNumber" : 101,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  requireNonNull(addresses,\"addresses\");\n  final List<InetSocketAddress> list;\n  if (addresses instanceof Collection) {\n    list=new ArrayList<>(((Collection<?>)addresses).size());\n  }\n else {\n    list=new ArrayList<>(4);\n  }\n  for (  InetSocketAddress a : addresses) {\n    if (a == null) {\n      break;\n    }\n    if (a.isUnresolved()) {\n      throw new IllegalArgumentException(\"cannot use an unresolved DNS server address: \" + a);\n    }\n    list.add(a);\n  }\n  return checkNonEmpty(list,\"list\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 160,
        "startColumnNumber" : 4,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static List<InetSocketAddress> sanitize(Iterable<? extends InetSocketAddress> addresses){\n  requireNonNull(addresses,\"addresses\");\n  final List<InetSocketAddress> list;\n  if (addresses instanceof Collection) {\n    list=new ArrayList<>(((Collection<?>)addresses).size());\n  }\n else {\n    list=new ArrayList<>(4);\n  }\n  for (  InetSocketAddress a : addresses) {\n    if (a == null) {\n      break;\n    }\n    if (a.isUnresolved()) {\n      throw new IllegalArgumentException(\"cannot use an unresolved DNS server address: \" + a);\n    }\n    list.add(a);\n  }\n  return checkNonEmpty(list,\"list\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 171,
        "startColumnNumber" : 16,
        "endLineNumber" : 171,
        "endColumnNumber" : 25
      },
      "nodeContext" : "a == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 171,
    "startColumnNumber" : 21,
    "endLineNumber" : 171,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}