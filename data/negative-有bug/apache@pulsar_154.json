{
  "id" : 154,
  "expression" : "conf",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-client/src/main/java/org/apache/pulsar/client/impl/PulsarChannelInitializer.java",
  "occurrences" : 13,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 67,
      "startColumnNumber" : 26,
      "endLineNumber" : 67,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 67,
        "startColumnNumber" : 26,
        "endLineNumber" : 67,
        "endColumnNumber" : 41
      },
      "nodeContext" : "conf.isUseTls()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 41
      },
      "nodeContext" : "this.tlsEnabled=conf.isUseTls()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 42
      },
      "nodeContext" : "this.tlsEnabled=conf.isUseTls();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 42
      },
      "nodeContext" : "this.tlsEnabled=conf.isUseTls();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  }, {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 68,
      "startColumnNumber" : 34,
      "endLineNumber" : 68,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 68,
        "startColumnNumber" : 34,
        "endLineNumber" : 68,
        "endColumnNumber" : 62
      },
      "nodeContext" : "conf.getSocks5ProxyAddress()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 62
      },
      "nodeContext" : "this.socks5ProxyAddress=conf.getSocks5ProxyAddress()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 63
      },
      "nodeContext" : "this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 63
      },
      "nodeContext" : "this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  }, {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 69,
      "startColumnNumber" : 35,
      "endLineNumber" : 69,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 69,
        "startColumnNumber" : 35,
        "endLineNumber" : 69,
        "endColumnNumber" : 64
      },
      "nodeContext" : "conf.getSocks5ProxyUsername()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 64
      },
      "nodeContext" : "this.socks5ProxyUsername=conf.getSocks5ProxyUsername()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 65
      },
      "nodeContext" : "this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 65
      },
      "nodeContext" : "this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  }, {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 70,
      "startColumnNumber" : 35,
      "endLineNumber" : 70,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 70,
        "startColumnNumber" : 35,
        "endLineNumber" : 70,
        "endColumnNumber" : 64
      },
      "nodeContext" : "conf.getSocks5ProxyPassword()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 64
      },
      "nodeContext" : "this.socks5ProxyPassword=conf.getSocks5ProxyPassword()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 65
      },
      "nodeContext" : "this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 65
      },
      "nodeContext" : "this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  }, {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 72,
      "startColumnNumber" : 38,
      "endLineNumber" : 72,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 72,
        "startColumnNumber" : 38,
        "endLineNumber" : 72,
        "endColumnNumber" : 61
      },
      "nodeContext" : "conf.isUseKeyStoreTls()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 61
      },
      "nodeContext" : "this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 62
      },
      "nodeContext" : "this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 62
      },
      "nodeContext" : "this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  }, {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 76,
      "startColumnNumber" : 55,
      "endLineNumber" : 76,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 76,
        "startColumnNumber" : 55,
        "endLineNumber" : 76,
        "endColumnNumber" : 79
      },
      "nodeContext" : "conf.getAuthentication()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 76,
        "startColumnNumber" : 55,
        "endLineNumber" : 76,
        "endColumnNumber" : 93
      },
      "nodeContext" : "conf.getAuthentication().getAuthData()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 76,
        "startColumnNumber" : 43,
        "endLineNumber" : 76,
        "endColumnNumber" : 93
      },
      "nodeContext" : "authData1=conf.getAuthentication().getAuthData()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 94
      },
      "nodeContext" : "AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tlsEnabledWithKeyStore) {\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2146,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2218,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tlsEnabled) {\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n else {\n  sslContextSupplier=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 94
      },
      "nodeContext" : "AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  }, {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 79,
      "startColumnNumber" : 28,
      "endLineNumber" : 79,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 79,
        "startColumnNumber" : 28,
        "endLineNumber" : 79,
        "endColumnNumber" : 49
      },
      "nodeContext" : "conf.getSslProvider()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 78,
        "startColumnNumber" : 52,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 26,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 28,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 39
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tlsEnabledWithKeyStore) {\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2146,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2218,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tlsEnabled) {\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n else {\n  sslContextSupplier=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 79,
        "startColumnNumber" : 28,
        "endLineNumber" : 79,
        "endColumnNumber" : 49
      },
      "nodeContext" : "conf.getSslProvider()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  }, {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 80,
      "startColumnNumber" : 28,
      "endLineNumber" : 80,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 80,
        "endColumnNumber" : 63
      },
      "nodeContext" : "conf.isTlsAllowInsecureConnection()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 78,
        "startColumnNumber" : 52,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 26,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 28,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 39
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tlsEnabledWithKeyStore) {\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2146,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2218,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tlsEnabled) {\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n else {\n  sslContextSupplier=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 80,
        "endColumnNumber" : 63
      },
      "nodeContext" : "conf.isTlsAllowInsecureConnection()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  }, {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 81,
      "startColumnNumber" : 28,
      "endLineNumber" : 81,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 81,
        "startColumnNumber" : 28,
        "endLineNumber" : 81,
        "endColumnNumber" : 55
      },
      "nodeContext" : "conf.getTlsTrustStoreType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 78,
        "startColumnNumber" : 52,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 26,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 28,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 39
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tlsEnabledWithKeyStore) {\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2146,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2218,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tlsEnabled) {\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n else {\n  sslContextSupplier=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 81,
        "startColumnNumber" : 28,
        "endLineNumber" : 81,
        "endColumnNumber" : 55
      },
      "nodeContext" : "conf.getTlsTrustStoreType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  }, {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 82,
      "startColumnNumber" : 28,
      "endLineNumber" : 82,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 82,
        "startColumnNumber" : 28,
        "endLineNumber" : 82,
        "endColumnNumber" : 55
      },
      "nodeContext" : "conf.getTlsTrustStorePath()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 78,
        "startColumnNumber" : 52,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 26,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 28,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 39
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tlsEnabledWithKeyStore) {\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2146,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2218,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tlsEnabled) {\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n else {\n  sslContextSupplier=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 82,
        "startColumnNumber" : 28,
        "endLineNumber" : 82,
        "endColumnNumber" : 55
      },
      "nodeContext" : "conf.getTlsTrustStorePath()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  }, {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 83,
      "startColumnNumber" : 28,
      "endLineNumber" : 83,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 83,
        "startColumnNumber" : 28,
        "endLineNumber" : 83,
        "endColumnNumber" : 59
      },
      "nodeContext" : "conf.getTlsTrustStorePassword()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 78,
        "startColumnNumber" : 52,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 26,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 28,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 39
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tlsEnabledWithKeyStore) {\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2146,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2218,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tlsEnabled) {\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n else {\n  sslContextSupplier=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 83,
        "startColumnNumber" : 28,
        "endLineNumber" : 83,
        "endColumnNumber" : 59
      },
      "nodeContext" : "conf.getTlsTrustStorePassword()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  }, {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 84,
      "startColumnNumber" : 28,
      "endLineNumber" : 84,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 84,
        "startColumnNumber" : 28,
        "endLineNumber" : 84,
        "endColumnNumber" : 48
      },
      "nodeContext" : "conf.getTlsCiphers()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 78,
        "startColumnNumber" : 52,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 26,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 28,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 39
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tlsEnabledWithKeyStore) {\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2146,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2218,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tlsEnabled) {\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n else {\n  sslContextSupplier=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 84,
        "startColumnNumber" : 28,
        "endLineNumber" : 84,
        "endColumnNumber" : 48
      },
      "nodeContext" : "conf.getTlsCiphers()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  }, {
    "nodeContext" : "conf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 85,
      "startColumnNumber" : 28,
      "endLineNumber" : 85,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 85,
        "startColumnNumber" : 28,
        "endLineNumber" : 85,
        "endColumnNumber" : 50
      },
      "nodeContext" : "conf.getTlsProtocols()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 78,
        "startColumnNumber" : 52,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 26,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 38
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 28,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 39
      },
      "nodeContext" : "nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tlsEnabledWithKeyStore) {\n  AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n  nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2146,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2218,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tlsEnabled) {\n  if (tlsEnabledWithKeyStore) {\n    AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n    nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n  }\n  sslContextSupplier=new ObjectCache<SslContext>(() -> {\n    try {\n      AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n      if (authData.hasDataForTls()) {\n        return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n      }\n else {\n        return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed to create TLS context\",e);\n    }\n  }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n}\n else {\n  sslContextSupplier=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2737,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PulsarChannelInitializer(ClientConfigurationData conf,Supplier<ClientCnx> clientCnxSupplier) throws Exception {\n  super();\n  this.clientCnxSupplier=clientCnxSupplier;\n  this.tlsEnabled=conf.isUseTls();\n  this.socks5ProxyAddress=conf.getSocks5ProxyAddress();\n  this.socks5ProxyUsername=conf.getSocks5ProxyUsername();\n  this.socks5ProxyPassword=conf.getSocks5ProxyPassword();\n  this.tlsEnabledWithKeyStore=conf.isUseKeyStoreTls();\n  if (tlsEnabled) {\n    if (tlsEnabledWithKeyStore) {\n      AuthenticationDataProvider authData1=conf.getAuthentication().getAuthData();\n      nettySSLContextAutoRefreshBuilder=new NettySSLContextAutoRefreshBuilder(conf.getSslProvider(),conf.isTlsAllowInsecureConnection(),conf.getTlsTrustStoreType(),conf.getTlsTrustStorePath(),conf.getTlsTrustStorePassword(),conf.getTlsCiphers(),conf.getTlsProtocols(),TLS_CERTIFICATE_CACHE_MILLIS,authData1);\n    }\n    sslContextSupplier=new ObjectCache<SslContext>(() -> {\n      try {\n        AuthenticationDataProvider authData=conf.getAuthentication().getAuthData();\n        if (authData.hasDataForTls()) {\n          return authData.getTlsTrustStoreStream() == null ? SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath(),authData.getTlsCertificates(),authData.getTlsPrivateKey()) : SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),authData.getTlsTrustStoreStream(),authData.getTlsCertificates(),authData.getTlsPrivateKey());\n        }\n else {\n          return SecurityUtility.createNettySslContextForClient(conf.isTlsAllowInsecureConnection(),conf.getTlsTrustCertsFilePath());\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed to create TLS context\",e);\n      }\n    }\n,TLS_CERTIFICATE_CACHE_MILLIS,TimeUnit.MILLISECONDS);\n  }\n else {\n    sslContextSupplier=null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 85,
        "startColumnNumber" : 28,
        "endLineNumber" : 85,
        "endColumnNumber" : 50
      },
      "nodeContext" : "conf.getTlsProtocols()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.client.impl.conf.ClientConfigurationData"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 67,
    "startColumnNumber" : 26,
    "endLineNumber" : 67,
    "endColumnNumber" : 30
  }, {
    "charLength" : 4,
    "startLineNumber" : 68,
    "startColumnNumber" : 34,
    "endLineNumber" : 68,
    "endColumnNumber" : 38
  }, {
    "charLength" : 4,
    "startLineNumber" : 69,
    "startColumnNumber" : 35,
    "endLineNumber" : 69,
    "endColumnNumber" : 39
  }, {
    "charLength" : 4,
    "startLineNumber" : 70,
    "startColumnNumber" : 35,
    "endLineNumber" : 70,
    "endColumnNumber" : 39
  }, {
    "charLength" : 4,
    "startLineNumber" : 72,
    "startColumnNumber" : 38,
    "endLineNumber" : 72,
    "endColumnNumber" : 42
  }, {
    "charLength" : 4,
    "startLineNumber" : 76,
    "startColumnNumber" : 55,
    "endLineNumber" : 76,
    "endColumnNumber" : 59
  }, {
    "charLength" : 4,
    "startLineNumber" : 79,
    "startColumnNumber" : 28,
    "endLineNumber" : 79,
    "endColumnNumber" : 32
  }, {
    "charLength" : 4,
    "startLineNumber" : 80,
    "startColumnNumber" : 28,
    "endLineNumber" : 80,
    "endColumnNumber" : 32
  }, {
    "charLength" : 4,
    "startLineNumber" : 81,
    "startColumnNumber" : 28,
    "endLineNumber" : 81,
    "endColumnNumber" : 32
  }, {
    "charLength" : 4,
    "startLineNumber" : 82,
    "startColumnNumber" : 28,
    "endLineNumber" : 82,
    "endColumnNumber" : 32
  }, {
    "charLength" : 4,
    "startLineNumber" : 83,
    "startColumnNumber" : 28,
    "endLineNumber" : 83,
    "endColumnNumber" : 32
  }, {
    "charLength" : 4,
    "startLineNumber" : 84,
    "startColumnNumber" : 28,
    "endLineNumber" : 84,
    "endColumnNumber" : 32
  }, {
    "charLength" : 4,
    "startLineNumber" : 85,
    "startColumnNumber" : 28,
    "endLineNumber" : 85,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 1
  } ]
}