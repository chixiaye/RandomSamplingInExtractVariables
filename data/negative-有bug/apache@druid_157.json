{
  "id" : 157,
  "expression" : "aggregatorsToMerge == null",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/segment/Metadata.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "aggregatorsToMerge == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 180,
      "startColumnNumber" : 50,
      "endLineNumber" : 180,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 180,
        "startColumnNumber" : 50,
        "endLineNumber" : 182,
        "endColumnNumber" : 104
      },
      "nodeContext" : "aggregatorsToMerge == null ? overrideMergedAggregators : AggregatorFactory.mergeAggregators(aggregatorsToMerge)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 180,
        "startColumnNumber" : 30,
        "endLineNumber" : 182,
        "endColumnNumber" : 104
      },
      "nodeContext" : "mergedAggregators=aggregatorsToMerge == null ? overrideMergedAggregators : AggregatorFactory.mergeAggregators(aggregatorsToMerge)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 180,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 105
      },
      "nodeContext" : "final AggregatorFactory[] mergedAggregators=aggregatorsToMerge == null ? overrideMergedAggregators : AggregatorFactory.mergeAggregators(aggregatorsToMerge);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2845,
        "startLineNumber" : 132,
        "startColumnNumber" : 2,
        "endLineNumber" : 215,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (toBeMerged == null || toBeMerged.size() == 0) {\n    return null;\n  }\n  boolean foundSomeMetadata=false;\n  Map<String,Object> mergedContainer=new HashMap<>();\n  List<AggregatorFactory[]> aggregatorsToMerge=overrideMergedAggregators == null ? new ArrayList<>() : null;\n  List<TimestampSpec> timestampSpecsToMerge=new ArrayList<>();\n  List<Granularity> gransToMerge=new ArrayList<>();\n  List<Boolean> rollupToMerge=new ArrayList<>();\n  for (  Metadata metadata : toBeMerged) {\n    if (metadata != null) {\n      foundSomeMetadata=true;\n      if (aggregatorsToMerge != null) {\n        aggregatorsToMerge.add(metadata.getAggregators());\n      }\n      if (timestampSpecsToMerge != null && metadata.getTimestampSpec() != null) {\n        timestampSpecsToMerge.add(metadata.getTimestampSpec());\n      }\n      if (gransToMerge != null) {\n        gransToMerge.add(metadata.getQueryGranularity());\n      }\n      if (rollupToMerge != null) {\n        rollupToMerge.add(metadata.isRollup());\n      }\n      mergedContainer.putAll(metadata.container);\n    }\n else {\n      aggregatorsToMerge=null;\n      timestampSpecsToMerge=null;\n      gransToMerge=null;\n      rollupToMerge=null;\n    }\n  }\n  if (!foundSomeMetadata) {\n    return null;\n  }\n  final AggregatorFactory[] mergedAggregators=aggregatorsToMerge == null ? overrideMergedAggregators : AggregatorFactory.mergeAggregators(aggregatorsToMerge);\n  final TimestampSpec mergedTimestampSpec=timestampSpecsToMerge == null ? null : TimestampSpec.mergeTimestampSpec(timestampSpecsToMerge);\n  final Granularity mergedGranularity=gransToMerge == null ? null : Granularity.mergeGranularities(gransToMerge);\n  Boolean rollup=null;\n  if (rollupToMerge != null && !rollupToMerge.isEmpty()) {\n    rollup=rollupToMerge.get(0);\n    for (    Boolean r : rollupToMerge) {\n      if (r == null) {\n        rollup=null;\n        break;\n      }\n else       if (!r.equals(rollup)) {\n        rollup=null;\n        break;\n      }\n else {\n        rollup=r;\n      }\n    }\n  }\n  return new Metadata(mergedContainer,mergedAggregators,mergedTimestampSpec,mergedGranularity,rollup);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 301,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2998,
        "startLineNumber" : 127,
        "startColumnNumber" : 2,
        "endLineNumber" : 215,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable public static Metadata merge(@Nullable List<Metadata> toBeMerged,@Nullable AggregatorFactory[] overrideMergedAggregators){\n  if (toBeMerged == null || toBeMerged.size() == 0) {\n    return null;\n  }\n  boolean foundSomeMetadata=false;\n  Map<String,Object> mergedContainer=new HashMap<>();\n  List<AggregatorFactory[]> aggregatorsToMerge=overrideMergedAggregators == null ? new ArrayList<>() : null;\n  List<TimestampSpec> timestampSpecsToMerge=new ArrayList<>();\n  List<Granularity> gransToMerge=new ArrayList<>();\n  List<Boolean> rollupToMerge=new ArrayList<>();\n  for (  Metadata metadata : toBeMerged) {\n    if (metadata != null) {\n      foundSomeMetadata=true;\n      if (aggregatorsToMerge != null) {\n        aggregatorsToMerge.add(metadata.getAggregators());\n      }\n      if (timestampSpecsToMerge != null && metadata.getTimestampSpec() != null) {\n        timestampSpecsToMerge.add(metadata.getTimestampSpec());\n      }\n      if (gransToMerge != null) {\n        gransToMerge.add(metadata.getQueryGranularity());\n      }\n      if (rollupToMerge != null) {\n        rollupToMerge.add(metadata.isRollup());\n      }\n      mergedContainer.putAll(metadata.container);\n    }\n else {\n      aggregatorsToMerge=null;\n      timestampSpecsToMerge=null;\n      gransToMerge=null;\n      rollupToMerge=null;\n    }\n  }\n  if (!foundSomeMetadata) {\n    return null;\n  }\n  final AggregatorFactory[] mergedAggregators=aggregatorsToMerge == null ? overrideMergedAggregators : AggregatorFactory.mergeAggregators(aggregatorsToMerge);\n  final TimestampSpec mergedTimestampSpec=timestampSpecsToMerge == null ? null : TimestampSpec.mergeTimestampSpec(timestampSpecsToMerge);\n  final Granularity mergedGranularity=gransToMerge == null ? null : Granularity.mergeGranularities(gransToMerge);\n  Boolean rollup=null;\n  if (rollupToMerge != null && !rollupToMerge.isEmpty()) {\n    rollup=rollupToMerge.get(0);\n    for (    Boolean r : rollupToMerge) {\n      if (r == null) {\n        rollup=null;\n        break;\n      }\n else       if (!r.equals(rollup)) {\n        rollup=null;\n        break;\n      }\n else {\n        rollup=r;\n      }\n    }\n  }\n  return new Metadata(mergedContainer,mergedAggregators,mergedTimestampSpec,mergedGranularity,rollup);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 326,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 180,
        "startColumnNumber" : 50,
        "endLineNumber" : 182,
        "endColumnNumber" : 104
      },
      "nodeContext" : "aggregatorsToMerge == null ? overrideMergedAggregators : AggregatorFactory.mergeAggregators(aggregatorsToMerge)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 180,
    "startColumnNumber" : 50,
    "endLineNumber" : 180,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}