{
  "id" : 189,
  "expression" : "expectedOrderBy.size() != orderingScheme.getOrderByVariables().size()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/Util.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expectedOrderBy.size() != orderingScheme.getOrderByVariables().size()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 69,
      "startLineNumber" : 77,
      "startColumnNumber" : 12,
      "endLineNumber" : 77,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (expectedOrderBy.size() != orderingScheme.getOrderByVariables().size()) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (expectedOrderBy.size() != orderingScheme.getOrderByVariables().size()) {\n    return false;\n  }\n  for (int i=0; i < expectedOrderBy.size(); ++i) {\n    Ordering ordering=expectedOrderBy.get(i);\n    Symbol symbol=Symbol.from(symbolAliases.get(ordering.getField()));\n    if (!symbol.equals(new Symbol(orderingScheme.getOrderByVariables().get(i).getName()))) {\n      return false;\n    }\n    SortOrder sortOrder=getOnlyElement(Maps.filterKeys(orderingScheme.getOrderingsMap(),variable -> variable.getName().equals(symbol.getName())).values().iterator());\n    if (!ordering.getSortOrder().equals(sortOrder)) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 919,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static boolean orderingSchemeMatches(List<Ordering> expectedOrderBy,OrderingScheme orderingScheme,SymbolAliases symbolAliases){\n  if (expectedOrderBy.size() != orderingScheme.getOrderByVariables().size()) {\n    return false;\n  }\n  for (int i=0; i < expectedOrderBy.size(); ++i) {\n    Ordering ordering=expectedOrderBy.get(i);\n    Symbol symbol=Symbol.from(symbolAliases.get(ordering.getField()));\n    if (!symbol.equals(new Symbol(orderingScheme.getOrderByVariables().get(i).getName()))) {\n      return false;\n    }\n    SortOrder sortOrder=getOnlyElement(Maps.filterKeys(orderingScheme.getOrderingsMap(),variable -> variable.getName().equals(symbol.getName())).values().iterator());\n    if (!ordering.getSortOrder().equals(sortOrder)) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (expectedOrderBy.size() != orderingScheme.getOrderByVariables().size()) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 69,
    "startLineNumber" : 77,
    "startColumnNumber" : 12,
    "endLineNumber" : 77,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}