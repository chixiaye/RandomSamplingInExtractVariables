{
  "id" : 392,
  "expression" : "\"Type variable %s bound to itself\"",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/reflect/TypeResolver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Type variable %s bound to itself\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 296,
      "startColumnNumber" : 50,
      "endLineNumber" : 296,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 296,
        "startColumnNumber" : 8,
        "endLineNumber" : 296,
        "endColumnNumber" : 95
      },
      "nodeContext" : "checkArgument(!variable.equalsType(type),\"Type variable %s bound to itself\",variable)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 296,
        "startColumnNumber" : 8,
        "endLineNumber" : 296,
        "endColumnNumber" : 96
      },
      "nodeContext" : "checkArgument(!variable.equalsType(type),\"Type variable %s bound to itself\",variable);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 293,
        "startColumnNumber" : 81,
        "endLineNumber" : 298,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  TypeVariableKey variable=mapping.getKey();\n  Type type=mapping.getValue();\n  checkArgument(!variable.equalsType(type),\"Type variable %s bound to itself\",variable);\n  builder.put(variable,type);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 293,
        "startColumnNumber" : 6,
        "endLineNumber" : 298,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Entry<TypeVariableKey,? extends Type> mapping : mappings.entrySet()) {\n  TypeVariableKey variable=mapping.getKey();\n  Type type=mapping.getValue();\n  checkArgument(!variable.equalsType(type),\"Type variable %s bound to itself\",variable);\n  builder.put(variable,type);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 491,
        "startLineNumber" : 290,
        "startColumnNumber" : 73,
        "endLineNumber" : 300,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImmutableMap.Builder<TypeVariableKey,Type> builder=ImmutableMap.builder();\n  builder.putAll(map);\n  for (  Entry<TypeVariableKey,? extends Type> mapping : mappings.entrySet()) {\n    TypeVariableKey variable=mapping.getKey();\n    Type type=mapping.getValue();\n    checkArgument(!variable.equalsType(type),\"Type variable %s bound to itself\",variable);\n    builder.put(variable,type);\n  }\n  return new TypeTable(builder.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 654,
        "startLineNumber" : 289,
        "startColumnNumber" : 4,
        "endLineNumber" : 300,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns a new  {@code TypeResolver} with {@code variable} mapping to {@code type}. \n */\nfinal TypeTable where(Map<TypeVariableKey,? extends Type> mappings){\n  ImmutableMap.Builder<TypeVariableKey,Type> builder=ImmutableMap.builder();\n  builder.putAll(map);\n  for (  Entry<TypeVariableKey,? extends Type> mapping : mappings.entrySet()) {\n    TypeVariableKey variable=mapping.getKey();\n    Type type=mapping.getValue();\n    checkArgument(!variable.equalsType(type),\"Type variable %s bound to itself\",variable);\n    builder.put(variable,type);\n  }\n  return new TypeTable(builder.build());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 296,
        "startColumnNumber" : 8,
        "endLineNumber" : 296,
        "endColumnNumber" : 96
      },
      "nodeContext" : "checkArgument(!variable.equalsType(type),\"Type variable %s bound to itself\",variable);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 296,
    "startColumnNumber" : 50,
    "endLineNumber" : 296,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}