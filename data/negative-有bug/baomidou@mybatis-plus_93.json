{
  "id" : 93,
  "expression" : "idx",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/toolkit/VersionUtils.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "idx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 34,
      "startColumnNumber" : 15,
      "endLineNumber" : 34,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 30
      },
      "nodeContext" : "idx < minLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 105
      },
      "nodeContext" : "idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 35,
        "endColumnNumber" : 77
      },
      "nodeContext" : "idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n  ++idx;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 22,
        "startColumnNumber" : 71,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isEmpty(version1) || StringUtils.isEmpty(version2)) {\n    throw new MybatisPlusException(\"Error: CompareVersion Error: Illegal Argument !\");\n  }\n  String[] versionArray1=version1.split(\"\\\\.\");\n  String[] versionArray2=version2.split(\"\\\\.\");\n  int idx=0;\n  int minLength=Math.min(versionArray1.length,versionArray2.length);\n  int diff=0;\n  while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n    ++idx;\n  }\n  diff=(diff != 0) ? diff : versionArray1.length - versionArray2.length;\n  return diff;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1047,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 比较版本号的大小,前者大则返回一个正数,后者大返回一个负数,相等则返回0\n * @param version1\n * @param version2\n * @return\n */\npublic static int compareVersion(String version1,String version2){\n  if (StringUtils.isEmpty(version1) || StringUtils.isEmpty(version2)) {\n    throw new MybatisPlusException(\"Error: CompareVersion Error: Illegal Argument !\");\n  }\n  String[] versionArray1=version1.split(\"\\\\.\");\n  String[] versionArray2=version2.split(\"\\\\.\");\n  int idx=0;\n  int minLength=Math.min(versionArray1.length,versionArray2.length);\n  int diff=0;\n  while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n    ++idx;\n  }\n  diff=(diff != 0) ? diff : versionArray1.length - versionArray2.length;\n  return diff;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 105
      },
      "nodeContext" : "idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "idx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 34,
      "startColumnNumber" : 56,
      "endLineNumber" : 34,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 34,
        "startColumnNumber" : 42,
        "endLineNumber" : 34,
        "endColumnNumber" : 60
      },
      "nodeContext" : "versionArray1[idx]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 34,
        "startColumnNumber" : 42,
        "endLineNumber" : 34,
        "endColumnNumber" : 69
      },
      "nodeContext" : "versionArray1[idx].length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 34,
        "startColumnNumber" : 42,
        "endLineNumber" : 34,
        "endColumnNumber" : 99
      },
      "nodeContext" : "versionArray1[idx].length() - versionArray2[idx].length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 34,
        "startColumnNumber" : 35,
        "endLineNumber" : 34,
        "endColumnNumber" : 99
      },
      "nodeContext" : "diff=versionArray1[idx].length() - versionArray2[idx].length()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 34,
        "startColumnNumber" : 34,
        "endLineNumber" : 34,
        "endColumnNumber" : 100
      },
      "nodeContext" : "(diff=versionArray1[idx].length() - versionArray2[idx].length())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 34,
        "startColumnNumber" : 34,
        "endLineNumber" : 34,
        "endColumnNumber" : 105
      },
      "nodeContext" : "(diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 105
      },
      "nodeContext" : "idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 35,
        "endColumnNumber" : 77
      },
      "nodeContext" : "idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n  ++idx;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 22,
        "startColumnNumber" : 71,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isEmpty(version1) || StringUtils.isEmpty(version2)) {\n    throw new MybatisPlusException(\"Error: CompareVersion Error: Illegal Argument !\");\n  }\n  String[] versionArray1=version1.split(\"\\\\.\");\n  String[] versionArray2=version2.split(\"\\\\.\");\n  int idx=0;\n  int minLength=Math.min(versionArray1.length,versionArray2.length);\n  int diff=0;\n  while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n    ++idx;\n  }\n  diff=(diff != 0) ? diff : versionArray1.length - versionArray2.length;\n  return diff;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1047,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 比较版本号的大小,前者大则返回一个正数,后者大返回一个负数,相等则返回0\n * @param version1\n * @param version2\n * @return\n */\npublic static int compareVersion(String version1,String version2){\n  if (StringUtils.isEmpty(version1) || StringUtils.isEmpty(version2)) {\n    throw new MybatisPlusException(\"Error: CompareVersion Error: Illegal Argument !\");\n  }\n  String[] versionArray1=version1.split(\"\\\\.\");\n  String[] versionArray2=version2.split(\"\\\\.\");\n  int idx=0;\n  int minLength=Math.min(versionArray1.length,versionArray2.length);\n  int diff=0;\n  while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n    ++idx;\n  }\n  diff=(diff != 0) ? diff : versionArray1.length - versionArray2.length;\n  return diff;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 105
      },
      "nodeContext" : "idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "idx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 34,
      "startColumnNumber" : 86,
      "endLineNumber" : 34,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 34,
        "startColumnNumber" : 72,
        "endLineNumber" : 34,
        "endColumnNumber" : 90
      },
      "nodeContext" : "versionArray2[idx]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 34,
        "startColumnNumber" : 72,
        "endLineNumber" : 34,
        "endColumnNumber" : 99
      },
      "nodeContext" : "versionArray2[idx].length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 34,
        "startColumnNumber" : 42,
        "endLineNumber" : 34,
        "endColumnNumber" : 99
      },
      "nodeContext" : "versionArray1[idx].length() - versionArray2[idx].length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 34,
        "startColumnNumber" : 35,
        "endLineNumber" : 34,
        "endColumnNumber" : 99
      },
      "nodeContext" : "diff=versionArray1[idx].length() - versionArray2[idx].length()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 34,
        "startColumnNumber" : 34,
        "endLineNumber" : 34,
        "endColumnNumber" : 100
      },
      "nodeContext" : "(diff=versionArray1[idx].length() - versionArray2[idx].length())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 34,
        "startColumnNumber" : 34,
        "endLineNumber" : 34,
        "endColumnNumber" : 105
      },
      "nodeContext" : "(diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 105
      },
      "nodeContext" : "idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 35,
        "endColumnNumber" : 77
      },
      "nodeContext" : "idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n  ++idx;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 22,
        "startColumnNumber" : 71,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isEmpty(version1) || StringUtils.isEmpty(version2)) {\n    throw new MybatisPlusException(\"Error: CompareVersion Error: Illegal Argument !\");\n  }\n  String[] versionArray1=version1.split(\"\\\\.\");\n  String[] versionArray2=version2.split(\"\\\\.\");\n  int idx=0;\n  int minLength=Math.min(versionArray1.length,versionArray2.length);\n  int diff=0;\n  while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n    ++idx;\n  }\n  diff=(diff != 0) ? diff : versionArray1.length - versionArray2.length;\n  return diff;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1047,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 比较版本号的大小,前者大则返回一个正数,后者大返回一个负数,相等则返回0\n * @param version1\n * @param version2\n * @return\n */\npublic static int compareVersion(String version1,String version2){\n  if (StringUtils.isEmpty(version1) || StringUtils.isEmpty(version2)) {\n    throw new MybatisPlusException(\"Error: CompareVersion Error: Illegal Argument !\");\n  }\n  String[] versionArray1=version1.split(\"\\\\.\");\n  String[] versionArray2=version2.split(\"\\\\.\");\n  int idx=0;\n  int minLength=Math.min(versionArray1.length,versionArray2.length);\n  int diff=0;\n  while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n    ++idx;\n  }\n  diff=(diff != 0) ? diff : versionArray1.length - versionArray2.length;\n  return diff;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 105
      },
      "nodeContext" : "idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "idx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 35,
      "startColumnNumber" : 37,
      "endLineNumber" : 35,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 35,
        "startColumnNumber" : 23,
        "endLineNumber" : 35,
        "endColumnNumber" : 41
      },
      "nodeContext" : "versionArray1[idx]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 35,
        "startColumnNumber" : 23,
        "endLineNumber" : 35,
        "endColumnNumber" : 71
      },
      "nodeContext" : "versionArray1[idx].compareTo(versionArray2[idx])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 71
      },
      "nodeContext" : "diff=versionArray1[idx].compareTo(versionArray2[idx])",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 35,
        "startColumnNumber" : 15,
        "endLineNumber" : 35,
        "endColumnNumber" : 72
      },
      "nodeContext" : "(diff=versionArray1[idx].compareTo(versionArray2[idx]))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 35,
        "startColumnNumber" : 15,
        "endLineNumber" : 35,
        "endColumnNumber" : 77
      },
      "nodeContext" : "(diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 35,
        "endColumnNumber" : 77
      },
      "nodeContext" : "idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n  ++idx;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 22,
        "startColumnNumber" : 71,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isEmpty(version1) || StringUtils.isEmpty(version2)) {\n    throw new MybatisPlusException(\"Error: CompareVersion Error: Illegal Argument !\");\n  }\n  String[] versionArray1=version1.split(\"\\\\.\");\n  String[] versionArray2=version2.split(\"\\\\.\");\n  int idx=0;\n  int minLength=Math.min(versionArray1.length,versionArray2.length);\n  int diff=0;\n  while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n    ++idx;\n  }\n  diff=(diff != 0) ? diff : versionArray1.length - versionArray2.length;\n  return diff;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1047,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 比较版本号的大小,前者大则返回一个正数,后者大返回一个负数,相等则返回0\n * @param version1\n * @param version2\n * @return\n */\npublic static int compareVersion(String version1,String version2){\n  if (StringUtils.isEmpty(version1) || StringUtils.isEmpty(version2)) {\n    throw new MybatisPlusException(\"Error: CompareVersion Error: Illegal Argument !\");\n  }\n  String[] versionArray1=version1.split(\"\\\\.\");\n  String[] versionArray2=version2.split(\"\\\\.\");\n  int idx=0;\n  int minLength=Math.min(versionArray1.length,versionArray2.length);\n  int diff=0;\n  while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n    ++idx;\n  }\n  diff=(diff != 0) ? diff : versionArray1.length - versionArray2.length;\n  return diff;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 35,
        "startColumnNumber" : 15,
        "endLineNumber" : 35,
        "endColumnNumber" : 77
      },
      "nodeContext" : "(diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "idx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 35,
      "startColumnNumber" : 66,
      "endLineNumber" : 35,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 35,
        "startColumnNumber" : 52,
        "endLineNumber" : 35,
        "endColumnNumber" : 70
      },
      "nodeContext" : "versionArray2[idx]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 35,
        "startColumnNumber" : 23,
        "endLineNumber" : 35,
        "endColumnNumber" : 71
      },
      "nodeContext" : "versionArray1[idx].compareTo(versionArray2[idx])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 71
      },
      "nodeContext" : "diff=versionArray1[idx].compareTo(versionArray2[idx])",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 35,
        "startColumnNumber" : 15,
        "endLineNumber" : 35,
        "endColumnNumber" : 72
      },
      "nodeContext" : "(diff=versionArray1[idx].compareTo(versionArray2[idx]))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 35,
        "startColumnNumber" : 15,
        "endLineNumber" : 35,
        "endColumnNumber" : 77
      },
      "nodeContext" : "(diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 35,
        "endColumnNumber" : 77
      },
      "nodeContext" : "idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n  ++idx;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 22,
        "startColumnNumber" : 71,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isEmpty(version1) || StringUtils.isEmpty(version2)) {\n    throw new MybatisPlusException(\"Error: CompareVersion Error: Illegal Argument !\");\n  }\n  String[] versionArray1=version1.split(\"\\\\.\");\n  String[] versionArray2=version2.split(\"\\\\.\");\n  int idx=0;\n  int minLength=Math.min(versionArray1.length,versionArray2.length);\n  int diff=0;\n  while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n    ++idx;\n  }\n  diff=(diff != 0) ? diff : versionArray1.length - versionArray2.length;\n  return diff;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1047,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 比较版本号的大小,前者大则返回一个正数,后者大返回一个负数,相等则返回0\n * @param version1\n * @param version2\n * @return\n */\npublic static int compareVersion(String version1,String version2){\n  if (StringUtils.isEmpty(version1) || StringUtils.isEmpty(version2)) {\n    throw new MybatisPlusException(\"Error: CompareVersion Error: Illegal Argument !\");\n  }\n  String[] versionArray1=version1.split(\"\\\\.\");\n  String[] versionArray2=version2.split(\"\\\\.\");\n  int idx=0;\n  int minLength=Math.min(versionArray1.length,versionArray2.length);\n  int diff=0;\n  while (idx < minLength && (diff=versionArray1[idx].length() - versionArray2[idx].length()) == 0 && (diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0) {\n    ++idx;\n  }\n  diff=(diff != 0) ? diff : versionArray1.length - versionArray2.length;\n  return diff;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 35,
        "startColumnNumber" : 15,
        "endLineNumber" : 35,
        "endColumnNumber" : 77
      },
      "nodeContext" : "(diff=versionArray1[idx].compareTo(versionArray2[idx])) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 34,
    "startColumnNumber" : 15,
    "endLineNumber" : 34,
    "endColumnNumber" : 18
  }, {
    "charLength" : 3,
    "startLineNumber" : 34,
    "startColumnNumber" : 56,
    "endLineNumber" : 34,
    "endColumnNumber" : 59
  }, {
    "charLength" : 3,
    "startLineNumber" : 34,
    "startColumnNumber" : 86,
    "endLineNumber" : 34,
    "endColumnNumber" : 89
  }, {
    "charLength" : 3,
    "startLineNumber" : 35,
    "startColumnNumber" : 37,
    "endLineNumber" : 35,
    "endColumnNumber" : 40
  }, {
    "charLength" : 3,
    "startLineNumber" : 35,
    "startColumnNumber" : 66,
    "endLineNumber" : 35,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 1
  } ]
}