{
  "id" : 220,
  "expression" : "starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE)",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/skyframe/StarlarkBuiltinsFunction.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 84,
      "startLineNumber" : 175,
      "startColumnNumber" : 14,
      "endLineNumber" : 175,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 172,
        "startColumnNumber" : 10,
        "endLineNumber" : 175,
        "endColumnNumber" : 99
      },
      "nodeContext" : "starlarkEnv.createBuildBzlEnvUsingInjection(exportedToplevels,exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 171,
        "startColumnNumber" : 35,
        "endLineNumber" : 175,
        "endColumnNumber" : 99
      },
      "nodeContext" : "predeclaredForBuildBzl=starlarkEnv.createBuildBzlEnvUsingInjection(exportedToplevels,exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 171,
        "startColumnNumber" : 6,
        "endLineNumber" : 175,
        "endColumnNumber" : 100
      },
      "nodeContext" : "ImmutableMap<String,Object> predeclaredForBuildBzl=starlarkEnv.createBuildBzlEnvUsingInjection(exportedToplevels,exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImmutableMap<String,Object> exportedToplevels=getDict(module,\"exported_toplevels\");\n  ImmutableMap<String,Object> exportedRules=getDict(module,\"exported_rules\");\n  ImmutableMap<String,Object> exportedToJava=getDict(module,\"exported_to_java\");\n  ImmutableMap<String,Object> predeclaredForBuildBzl=starlarkEnv.createBuildBzlEnvUsingInjection(exportedToplevels,exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n  ImmutableMap<String,Object> predeclaredForBuild=starlarkEnv.createBuildEnvUsingInjection(exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n  return StarlarkBuiltinsValue.create(predeclaredForBuildBzl,predeclaredForBuild,exportedToJava,transitiveDigest,starlarkSemantics);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  ImmutableMap<String,Object> exportedToplevels=getDict(module,\"exported_toplevels\");\n  ImmutableMap<String,Object> exportedRules=getDict(module,\"exported_rules\");\n  ImmutableMap<String,Object> exportedToJava=getDict(module,\"exported_to_java\");\n  ImmutableMap<String,Object> predeclaredForBuildBzl=starlarkEnv.createBuildBzlEnvUsingInjection(exportedToplevels,exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n  ImmutableMap<String,Object> predeclaredForBuild=starlarkEnv.createBuildEnvUsingInjection(exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n  return StarlarkBuiltinsValue.create(predeclaredForBuildBzl,predeclaredForBuild,exportedToJava,transitiveDigest,starlarkSemantics);\n}\n catch (EvalException|InjectionException ex) {\n  throw BuiltinsFailedException.errorApplyingExports(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 108,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2410,
        "startLineNumber" : 135,
        "startColumnNumber" : 59,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StarlarkSemantics starlarkSemantics=PrecomputedValue.STARLARK_SEMANTICS.get(env);\n  if (starlarkSemantics == null) {\n    return null;\n  }\n  if (starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_BZL_PATH).isEmpty()) {\n    return StarlarkBuiltinsValue.createEmpty(starlarkSemantics);\n  }\n  BzlLoadValue exportsValue;\n  try {\n    if (inliningState == null) {\n      exportsValue=(BzlLoadValue)env.getValueOrThrow(EXPORTS_ENTRYPOINT_KEY,BzlLoadFailedException.class);\n    }\n else {\n      exportsValue=bzlLoadFunction.computeInline(EXPORTS_ENTRYPOINT_KEY,inliningState);\n    }\n  }\n catch (  BzlLoadFailedException ex) {\n    throw BuiltinsFailedException.errorEvaluatingBuiltinsBzls(ex);\n  }\n  if (exportsValue == null) {\n    return null;\n  }\n  byte[] transitiveDigest=exportsValue.getTransitiveDigest();\n  Module module=exportsValue.getModule();\n  BazelStarlarkEnvironment starlarkEnv=packageFactory.getBazelStarlarkEnvironment();\n  try {\n    ImmutableMap<String,Object> exportedToplevels=getDict(module,\"exported_toplevels\");\n    ImmutableMap<String,Object> exportedRules=getDict(module,\"exported_rules\");\n    ImmutableMap<String,Object> exportedToJava=getDict(module,\"exported_to_java\");\n    ImmutableMap<String,Object> predeclaredForBuildBzl=starlarkEnv.createBuildBzlEnvUsingInjection(exportedToplevels,exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n    ImmutableMap<String,Object> predeclaredForBuild=starlarkEnv.createBuildEnvUsingInjection(exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n    return StarlarkBuiltinsValue.create(predeclaredForBuildBzl,predeclaredForBuild,exportedToJava,transitiveDigest,starlarkSemantics);\n  }\n catch (  EvalException|InjectionException ex) {\n    throw BuiltinsFailedException.errorApplyingExports(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2705,
        "startLineNumber" : 129,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable private static StarlarkBuiltinsValue computeInternal(Environment env,PackageFactory packageFactory,@Nullable BzlLoadFunction.InliningState inliningState,@Nullable BzlLoadFunction bzlLoadFunction) throws BuiltinsFailedException, InterruptedException {\n  StarlarkSemantics starlarkSemantics=PrecomputedValue.STARLARK_SEMANTICS.get(env);\n  if (starlarkSemantics == null) {\n    return null;\n  }\n  if (starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_BZL_PATH).isEmpty()) {\n    return StarlarkBuiltinsValue.createEmpty(starlarkSemantics);\n  }\n  BzlLoadValue exportsValue;\n  try {\n    if (inliningState == null) {\n      exportsValue=(BzlLoadValue)env.getValueOrThrow(EXPORTS_ENTRYPOINT_KEY,BzlLoadFailedException.class);\n    }\n else {\n      exportsValue=bzlLoadFunction.computeInline(EXPORTS_ENTRYPOINT_KEY,inliningState);\n    }\n  }\n catch (  BzlLoadFailedException ex) {\n    throw BuiltinsFailedException.errorEvaluatingBuiltinsBzls(ex);\n  }\n  if (exportsValue == null) {\n    return null;\n  }\n  byte[] transitiveDigest=exportsValue.getTransitiveDigest();\n  Module module=exportsValue.getModule();\n  BazelStarlarkEnvironment starlarkEnv=packageFactory.getBazelStarlarkEnvironment();\n  try {\n    ImmutableMap<String,Object> exportedToplevels=getDict(module,\"exported_toplevels\");\n    ImmutableMap<String,Object> exportedRules=getDict(module,\"exported_rules\");\n    ImmutableMap<String,Object> exportedToJava=getDict(module,\"exported_to_java\");\n    ImmutableMap<String,Object> predeclaredForBuildBzl=starlarkEnv.createBuildBzlEnvUsingInjection(exportedToplevels,exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n    ImmutableMap<String,Object> predeclaredForBuild=starlarkEnv.createBuildEnvUsingInjection(exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n    return StarlarkBuiltinsValue.create(predeclaredForBuildBzl,predeclaredForBuild,exportedToJava,transitiveDigest,starlarkSemantics);\n  }\n catch (  EvalException|InjectionException ex) {\n    throw BuiltinsFailedException.errorApplyingExports(ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 172,
        "startColumnNumber" : 10,
        "endLineNumber" : 175,
        "endColumnNumber" : 99
      },
      "nodeContext" : "starlarkEnv.createBuildBzlEnvUsingInjection(exportedToplevels,exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 84,
      "startLineNumber" : 179,
      "startColumnNumber" : 14,
      "endLineNumber" : 179,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 177,
        "startColumnNumber" : 10,
        "endLineNumber" : 179,
        "endColumnNumber" : 99
      },
      "nodeContext" : "starlarkEnv.createBuildEnvUsingInjection(exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 176,
        "startColumnNumber" : 35,
        "endLineNumber" : 179,
        "endColumnNumber" : 99
      },
      "nodeContext" : "predeclaredForBuild=starlarkEnv.createBuildEnvUsingInjection(exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 176,
        "startColumnNumber" : 6,
        "endLineNumber" : 179,
        "endColumnNumber" : 100
      },
      "nodeContext" : "ImmutableMap<String,Object> predeclaredForBuild=starlarkEnv.createBuildEnvUsingInjection(exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImmutableMap<String,Object> exportedToplevels=getDict(module,\"exported_toplevels\");\n  ImmutableMap<String,Object> exportedRules=getDict(module,\"exported_rules\");\n  ImmutableMap<String,Object> exportedToJava=getDict(module,\"exported_to_java\");\n  ImmutableMap<String,Object> predeclaredForBuildBzl=starlarkEnv.createBuildBzlEnvUsingInjection(exportedToplevels,exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n  ImmutableMap<String,Object> predeclaredForBuild=starlarkEnv.createBuildEnvUsingInjection(exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n  return StarlarkBuiltinsValue.create(predeclaredForBuildBzl,predeclaredForBuild,exportedToJava,transitiveDigest,starlarkSemantics);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  ImmutableMap<String,Object> exportedToplevels=getDict(module,\"exported_toplevels\");\n  ImmutableMap<String,Object> exportedRules=getDict(module,\"exported_rules\");\n  ImmutableMap<String,Object> exportedToJava=getDict(module,\"exported_to_java\");\n  ImmutableMap<String,Object> predeclaredForBuildBzl=starlarkEnv.createBuildBzlEnvUsingInjection(exportedToplevels,exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n  ImmutableMap<String,Object> predeclaredForBuild=starlarkEnv.createBuildEnvUsingInjection(exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n  return StarlarkBuiltinsValue.create(predeclaredForBuildBzl,predeclaredForBuild,exportedToJava,transitiveDigest,starlarkSemantics);\n}\n catch (EvalException|InjectionException ex) {\n  throw BuiltinsFailedException.errorApplyingExports(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 108,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2410,
        "startLineNumber" : 135,
        "startColumnNumber" : 59,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StarlarkSemantics starlarkSemantics=PrecomputedValue.STARLARK_SEMANTICS.get(env);\n  if (starlarkSemantics == null) {\n    return null;\n  }\n  if (starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_BZL_PATH).isEmpty()) {\n    return StarlarkBuiltinsValue.createEmpty(starlarkSemantics);\n  }\n  BzlLoadValue exportsValue;\n  try {\n    if (inliningState == null) {\n      exportsValue=(BzlLoadValue)env.getValueOrThrow(EXPORTS_ENTRYPOINT_KEY,BzlLoadFailedException.class);\n    }\n else {\n      exportsValue=bzlLoadFunction.computeInline(EXPORTS_ENTRYPOINT_KEY,inliningState);\n    }\n  }\n catch (  BzlLoadFailedException ex) {\n    throw BuiltinsFailedException.errorEvaluatingBuiltinsBzls(ex);\n  }\n  if (exportsValue == null) {\n    return null;\n  }\n  byte[] transitiveDigest=exportsValue.getTransitiveDigest();\n  Module module=exportsValue.getModule();\n  BazelStarlarkEnvironment starlarkEnv=packageFactory.getBazelStarlarkEnvironment();\n  try {\n    ImmutableMap<String,Object> exportedToplevels=getDict(module,\"exported_toplevels\");\n    ImmutableMap<String,Object> exportedRules=getDict(module,\"exported_rules\");\n    ImmutableMap<String,Object> exportedToJava=getDict(module,\"exported_to_java\");\n    ImmutableMap<String,Object> predeclaredForBuildBzl=starlarkEnv.createBuildBzlEnvUsingInjection(exportedToplevels,exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n    ImmutableMap<String,Object> predeclaredForBuild=starlarkEnv.createBuildEnvUsingInjection(exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n    return StarlarkBuiltinsValue.create(predeclaredForBuildBzl,predeclaredForBuild,exportedToJava,transitiveDigest,starlarkSemantics);\n  }\n catch (  EvalException|InjectionException ex) {\n    throw BuiltinsFailedException.errorApplyingExports(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2705,
        "startLineNumber" : 129,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable private static StarlarkBuiltinsValue computeInternal(Environment env,PackageFactory packageFactory,@Nullable BzlLoadFunction.InliningState inliningState,@Nullable BzlLoadFunction bzlLoadFunction) throws BuiltinsFailedException, InterruptedException {\n  StarlarkSemantics starlarkSemantics=PrecomputedValue.STARLARK_SEMANTICS.get(env);\n  if (starlarkSemantics == null) {\n    return null;\n  }\n  if (starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_BZL_PATH).isEmpty()) {\n    return StarlarkBuiltinsValue.createEmpty(starlarkSemantics);\n  }\n  BzlLoadValue exportsValue;\n  try {\n    if (inliningState == null) {\n      exportsValue=(BzlLoadValue)env.getValueOrThrow(EXPORTS_ENTRYPOINT_KEY,BzlLoadFailedException.class);\n    }\n else {\n      exportsValue=bzlLoadFunction.computeInline(EXPORTS_ENTRYPOINT_KEY,inliningState);\n    }\n  }\n catch (  BzlLoadFailedException ex) {\n    throw BuiltinsFailedException.errorEvaluatingBuiltinsBzls(ex);\n  }\n  if (exportsValue == null) {\n    return null;\n  }\n  byte[] transitiveDigest=exportsValue.getTransitiveDigest();\n  Module module=exportsValue.getModule();\n  BazelStarlarkEnvironment starlarkEnv=packageFactory.getBazelStarlarkEnvironment();\n  try {\n    ImmutableMap<String,Object> exportedToplevels=getDict(module,\"exported_toplevels\");\n    ImmutableMap<String,Object> exportedRules=getDict(module,\"exported_rules\");\n    ImmutableMap<String,Object> exportedToJava=getDict(module,\"exported_to_java\");\n    ImmutableMap<String,Object> predeclaredForBuildBzl=starlarkEnv.createBuildBzlEnvUsingInjection(exportedToplevels,exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n    ImmutableMap<String,Object> predeclaredForBuild=starlarkEnv.createBuildEnvUsingInjection(exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE));\n    return StarlarkBuiltinsValue.create(predeclaredForBuildBzl,predeclaredForBuild,exportedToJava,transitiveDigest,starlarkSemantics);\n  }\n catch (  EvalException|InjectionException ex) {\n    throw BuiltinsFailedException.errorApplyingExports(ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 177,
        "startColumnNumber" : 10,
        "endLineNumber" : 179,
        "endColumnNumber" : 99
      },
      "nodeContext" : "starlarkEnv.createBuildEnvUsingInjection(exportedRules,starlarkSemantics.get(BuildLanguageOptions.EXPERIMENTAL_BUILTINS_INJECTION_OVERRIDE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 84,
    "startLineNumber" : 175,
    "startColumnNumber" : 14,
    "endLineNumber" : 175,
    "endColumnNumber" : 98
  }, {
    "charLength" : 84,
    "startLineNumber" : 179,
    "startColumnNumber" : 14,
    "endLineNumber" : 179,
    "endColumnNumber" : 98
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}