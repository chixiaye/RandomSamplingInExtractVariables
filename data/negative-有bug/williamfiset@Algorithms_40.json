{
  "id" : 40,
  "expression" : "arr[i - 1]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/dp/EditDistance.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "arr[i - 1]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 27,
      "startColumnNumber" : 16,
      "endLineNumber" : 27,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 27,
        "startColumnNumber" : 16,
        "endLineNumber" : 27,
        "endColumnNumber" : 33
      },
      "nodeContext" : "arr[i - 1][j - 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 27,
        "startColumnNumber" : 16,
        "endLineNumber" : 27,
        "endColumnNumber" : 95
      },
      "nodeContext" : "arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 27,
        "startColumnNumber" : 10,
        "endLineNumber" : 27,
        "endColumnNumber" : 95
      },
      "nodeContext" : "min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 27,
        "startColumnNumber" : 10,
        "endLineNumber" : 27,
        "endColumnNumber" : 96
      },
      "nodeContext" : "min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 96
      },
      "nodeContext" : "if (i > 0 && j > 0) min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 21,
        "startColumnNumber" : 51,
        "endLineNumber" : 36,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int min=Integer.MAX_VALUE;\n  if (i > 0 && j > 0)   min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n  if (i > 0)   min=Math.min(min,arr[i - 1][j] + deletionCost);\n  if (j > 0)   min=Math.min(min,arr[i][j - 1] + insertionCost);\n  arr[i][j]=min;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 21,
        "startColumnNumber" : 6,
        "endLineNumber" : 36,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int j=(i == 0 ? 1 : 0); j <= BL; j++) {\n  int min=Integer.MAX_VALUE;\n  if (i > 0 && j > 0)   min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n  if (i > 0)   min=Math.min(min,arr[i - 1][j] + deletionCost);\n  if (j > 0)   min=Math.min(min,arr[i][j - 1] + insertionCost);\n  arr[i][j]=min;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 111,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 20,
        "startColumnNumber" : 34,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int j=(i == 0 ? 1 : 0); j <= BL; j++) {\n    int min=Integer.MAX_VALUE;\n    if (i > 0 && j > 0)     min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n    if (i > 0)     min=Math.min(min,arr[i - 1][j] + deletionCost);\n    if (j > 0)     min=Math.min(min,arr[i][j - 1] + insertionCost);\n    arr[i][j]=min;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i <= AL; i++) {\n  for (int j=(i == 0 ? 1 : 0); j <= BL; j++) {\n    int min=Integer.MAX_VALUE;\n    if (i > 0 && j > 0)     min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n    if (i > 0)     min=Math.min(min,arr[i - 1][j] + deletionCost);\n    if (j > 0)     min=Math.min(min,arr[i][j - 1] + insertionCost);\n    arr[i][j]=min;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 624,
        "startLineNumber" : 15,
        "startColumnNumber" : 85,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int AL=a.length(), BL=b.length();\n  int[][] arr=new int[AL + 1][BL + 1];\n  for (int i=0; i <= AL; i++) {\n    for (int j=(i == 0 ? 1 : 0); j <= BL; j++) {\n      int min=Integer.MAX_VALUE;\n      if (i > 0 && j > 0)       min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n      if (i > 0)       min=Math.min(min,arr[i - 1][j] + deletionCost);\n      if (j > 0)       min=Math.min(min,arr[i][j - 1] + insertionCost);\n      arr[i][j]=min;\n    }\n  }\n  return arr[AL][BL];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 14,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int editDistance(String a,String b,int insertionCost,int deletionCost,int substitutionCost){\n  final int AL=a.length(), BL=b.length();\n  int[][] arr=new int[AL + 1][BL + 1];\n  for (int i=0; i <= AL; i++) {\n    for (int j=(i == 0 ? 1 : 0); j <= BL; j++) {\n      int min=Integer.MAX_VALUE;\n      if (i > 0 && j > 0)       min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n      if (i > 0)       min=Math.min(min,arr[i - 1][j] + deletionCost);\n      if (j > 0)       min=Math.min(min,arr[i][j - 1] + insertionCost);\n      arr[i][j]=min;\n    }\n  }\n  return arr[AL][BL];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 27,
        "startColumnNumber" : 10,
        "endLineNumber" : 27,
        "endColumnNumber" : 96
      },
      "nodeContext" : "min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    },
    "tokenLength" : 4,
    "type" : "int[]"
  }, {
    "nodeContext" : "arr[i - 1]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 30,
      "startColumnNumber" : 39,
      "endLineNumber" : 30,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 30,
        "startColumnNumber" : 39,
        "endLineNumber" : 30,
        "endColumnNumber" : 52
      },
      "nodeContext" : "arr[i - 1][j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 30,
        "startColumnNumber" : 39,
        "endLineNumber" : 30,
        "endColumnNumber" : 67
      },
      "nodeContext" : "arr[i - 1][j] + deletionCost",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 30,
        "startColumnNumber" : 25,
        "endLineNumber" : 30,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Math.min(min,arr[i - 1][j] + deletionCost)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 30,
        "startColumnNumber" : 19,
        "endLineNumber" : 30,
        "endColumnNumber" : 68
      },
      "nodeContext" : "min=Math.min(min,arr[i - 1][j] + deletionCost)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 30,
        "startColumnNumber" : 19,
        "endLineNumber" : 30,
        "endColumnNumber" : 69
      },
      "nodeContext" : "min=Math.min(min,arr[i - 1][j] + deletionCost);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 69
      },
      "nodeContext" : "if (i > 0) min=Math.min(min,arr[i - 1][j] + deletionCost);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 21,
        "startColumnNumber" : 51,
        "endLineNumber" : 36,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int min=Integer.MAX_VALUE;\n  if (i > 0 && j > 0)   min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n  if (i > 0)   min=Math.min(min,arr[i - 1][j] + deletionCost);\n  if (j > 0)   min=Math.min(min,arr[i][j - 1] + insertionCost);\n  arr[i][j]=min;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 21,
        "startColumnNumber" : 6,
        "endLineNumber" : 36,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int j=(i == 0 ? 1 : 0); j <= BL; j++) {\n  int min=Integer.MAX_VALUE;\n  if (i > 0 && j > 0)   min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n  if (i > 0)   min=Math.min(min,arr[i - 1][j] + deletionCost);\n  if (j > 0)   min=Math.min(min,arr[i][j - 1] + insertionCost);\n  arr[i][j]=min;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 111,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 20,
        "startColumnNumber" : 34,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int j=(i == 0 ? 1 : 0); j <= BL; j++) {\n    int min=Integer.MAX_VALUE;\n    if (i > 0 && j > 0)     min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n    if (i > 0)     min=Math.min(min,arr[i - 1][j] + deletionCost);\n    if (j > 0)     min=Math.min(min,arr[i][j - 1] + insertionCost);\n    arr[i][j]=min;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i <= AL; i++) {\n  for (int j=(i == 0 ? 1 : 0); j <= BL; j++) {\n    int min=Integer.MAX_VALUE;\n    if (i > 0 && j > 0)     min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n    if (i > 0)     min=Math.min(min,arr[i - 1][j] + deletionCost);\n    if (j > 0)     min=Math.min(min,arr[i][j - 1] + insertionCost);\n    arr[i][j]=min;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 624,
        "startLineNumber" : 15,
        "startColumnNumber" : 85,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int AL=a.length(), BL=b.length();\n  int[][] arr=new int[AL + 1][BL + 1];\n  for (int i=0; i <= AL; i++) {\n    for (int j=(i == 0 ? 1 : 0); j <= BL; j++) {\n      int min=Integer.MAX_VALUE;\n      if (i > 0 && j > 0)       min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n      if (i > 0)       min=Math.min(min,arr[i - 1][j] + deletionCost);\n      if (j > 0)       min=Math.min(min,arr[i][j - 1] + insertionCost);\n      arr[i][j]=min;\n    }\n  }\n  return arr[AL][BL];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 14,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int editDistance(String a,String b,int insertionCost,int deletionCost,int substitutionCost){\n  final int AL=a.length(), BL=b.length();\n  int[][] arr=new int[AL + 1][BL + 1];\n  for (int i=0; i <= AL; i++) {\n    for (int j=(i == 0 ? 1 : 0); j <= BL; j++) {\n      int min=Integer.MAX_VALUE;\n      if (i > 0 && j > 0)       min=arr[i - 1][j - 1] + (a.charAt(i - 1) == b.charAt(j - 1) ? 0 : substitutionCost);\n      if (i > 0)       min=Math.min(min,arr[i - 1][j] + deletionCost);\n      if (j > 0)       min=Math.min(min,arr[i][j - 1] + insertionCost);\n      arr[i][j]=min;\n    }\n  }\n  return arr[AL][BL];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 69
      },
      "nodeContext" : "if (i > 0) min=Math.min(min,arr[i - 1][j] + deletionCost);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 9
    },
    "tokenLength" : 4,
    "type" : "int[]"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 27,
    "startColumnNumber" : 16,
    "endLineNumber" : 27,
    "endColumnNumber" : 26
  }, {
    "charLength" : 10,
    "startLineNumber" : 30,
    "startColumnNumber" : 39,
    "endLineNumber" : 30,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}