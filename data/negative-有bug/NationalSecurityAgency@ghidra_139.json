{
  "id" : 139,
  "expression" : "\"Put: expected 6, got \"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/Generic/src/test/java/ghidra/util/datastruct/IntKeyIndexerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Put: expected 6, got \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 66,
      "startColumnNumber" : 24,
      "endLineNumber" : 66,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 66,
        "startColumnNumber" : 24,
        "endLineNumber" : 66,
        "endColumnNumber" : 53
      },
      "nodeContext" : "\"Put: expected 6, got \" + index",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.fail(\"Put: expected 6, got \" + index)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.fail(\"Put: expected 6, got \" + index);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 65,
        "startColumnNumber" : 24,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.fail(\"Put: expected 6, got \" + index);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (index != 6) {\n  Assert.fail(\"Put: expected 6, got \" + index);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3386,
        "startLineNumber" : 33,
        "startColumnNumber" : 36,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  IntKeyIndexer indexer=new IntKeyIndexer(13);\n  System.out.println(\"Test put method\");\n  int index;\n  index=indexer.put(1000);\n  if (index != 0) {\n    Assert.fail(\"Put: expected 0, got \" + index);\n  }\n  index=indexer.put(2000);\n  if (index != 1) {\n    Assert.fail(\"Put: expected 1, got \" + index);\n  }\n  index=indexer.put(3000);\n  if (index != 2) {\n    Assert.fail(\"Put: expected 2, got \" + index);\n  }\n  index=indexer.put(4000);\n  if (index != 3) {\n    Assert.fail(\"Put: expected 3, got \" + index);\n  }\n  index=indexer.put(123);\n  if (index != 4) {\n    Assert.fail(\"Put: expected 4, got \" + index);\n  }\n  index=indexer.put(456);\n  if (index != 5) {\n    Assert.fail(\"Put: expected 5, got \" + index);\n  }\n  index=indexer.put(1789);\n  if (index != 6) {\n    Assert.fail(\"Put: expected 6, got \" + index);\n  }\n  index=indexer.put(2000);\n  if (index != 1) {\n    Assert.fail(\"Put: expected 1, got \" + index);\n  }\n  System.out.println(\"Test remove method\");\n  indexer.remove(4000);\n  index=indexer.get(4000);\n  if (index != -1) {\n    Assert.fail(\"Expected to get -1 on remove of \" + \"non-existent index and instead got \" + index);\n  }\n  index=indexer.put(9999);\n  if (index != 3) {\n    Assert.fail(\"Remove: expected 3, got \" + index);\n  }\n  System.out.println(\"Test grow\");\n  for (int i=0; i < 20; i++) {\n    indexer.put(i);\n  }\n  index=indexer.get(1000);\n  if (index != 0) {\n    Assert.fail(\"Grow: expected 0, got \" + index);\n  }\n  index=indexer.get(2000);\n  if (index != 1) {\n    Assert.fail(\"Grow: expected 1, got \" + index);\n  }\n  index=indexer.get(3000);\n  if (index != 2) {\n    Assert.fail(\"Grow: expected 2, got \" + index);\n  }\n  index=indexer.get(4000);\n  if (index != -1) {\n    Assert.fail(\"Grow: expected 3, got \" + index);\n  }\n  index=indexer.get(123);\n  if (index != 4) {\n    Assert.fail(\"Grow: expected 4, got \" + index);\n  }\n  index=indexer.get(456);\n  if (index != 5) {\n    Assert.fail(\"Grow: expected 5, got \" + index);\n  }\n  index=indexer.get(1789);\n  if (index != 6) {\n    Assert.fail(\"Grow: expected 6, got \" + index);\n  }\n  index=indexer.get(0);\n  if (index != 7) {\n    Assert.fail(\"Grow: expected 7, got \" + index);\n  }\n  index=indexer.get(500);\n  if (index != -1) {\n    Assert.fail(\"Grow: expected -1, got \" + index);\n  }\n  System.out.println(\"Test capacity\");\n  if (indexer.getCapacity() != 37) {\n    Assert.fail(\"Capacity should be 37, but it is \" + indexer.getCapacity());\n  }\n  indexer.clear();\n  for (int i=0; i < 100; i++) {\n    indexer.put(i);\n  }\n  for (int i=0; i < 100; i++) {\n    if (indexer.get(i) != i) {\n      Assert.fail(\"Sequence: expected \" + i + \", and got\"+ indexer.get(i));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 498,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3429,
        "startLineNumber" : 32,
        "startColumnNumber" : 0,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testIntKeyIndexer(){\n  IntKeyIndexer indexer=new IntKeyIndexer(13);\n  System.out.println(\"Test put method\");\n  int index;\n  index=indexer.put(1000);\n  if (index != 0) {\n    Assert.fail(\"Put: expected 0, got \" + index);\n  }\n  index=indexer.put(2000);\n  if (index != 1) {\n    Assert.fail(\"Put: expected 1, got \" + index);\n  }\n  index=indexer.put(3000);\n  if (index != 2) {\n    Assert.fail(\"Put: expected 2, got \" + index);\n  }\n  index=indexer.put(4000);\n  if (index != 3) {\n    Assert.fail(\"Put: expected 3, got \" + index);\n  }\n  index=indexer.put(123);\n  if (index != 4) {\n    Assert.fail(\"Put: expected 4, got \" + index);\n  }\n  index=indexer.put(456);\n  if (index != 5) {\n    Assert.fail(\"Put: expected 5, got \" + index);\n  }\n  index=indexer.put(1789);\n  if (index != 6) {\n    Assert.fail(\"Put: expected 6, got \" + index);\n  }\n  index=indexer.put(2000);\n  if (index != 1) {\n    Assert.fail(\"Put: expected 1, got \" + index);\n  }\n  System.out.println(\"Test remove method\");\n  indexer.remove(4000);\n  index=indexer.get(4000);\n  if (index != -1) {\n    Assert.fail(\"Expected to get -1 on remove of \" + \"non-existent index and instead got \" + index);\n  }\n  index=indexer.put(9999);\n  if (index != 3) {\n    Assert.fail(\"Remove: expected 3, got \" + index);\n  }\n  System.out.println(\"Test grow\");\n  for (int i=0; i < 20; i++) {\n    indexer.put(i);\n  }\n  index=indexer.get(1000);\n  if (index != 0) {\n    Assert.fail(\"Grow: expected 0, got \" + index);\n  }\n  index=indexer.get(2000);\n  if (index != 1) {\n    Assert.fail(\"Grow: expected 1, got \" + index);\n  }\n  index=indexer.get(3000);\n  if (index != 2) {\n    Assert.fail(\"Grow: expected 2, got \" + index);\n  }\n  index=indexer.get(4000);\n  if (index != -1) {\n    Assert.fail(\"Grow: expected 3, got \" + index);\n  }\n  index=indexer.get(123);\n  if (index != 4) {\n    Assert.fail(\"Grow: expected 4, got \" + index);\n  }\n  index=indexer.get(456);\n  if (index != 5) {\n    Assert.fail(\"Grow: expected 5, got \" + index);\n  }\n  index=indexer.get(1789);\n  if (index != 6) {\n    Assert.fail(\"Grow: expected 6, got \" + index);\n  }\n  index=indexer.get(0);\n  if (index != 7) {\n    Assert.fail(\"Grow: expected 7, got \" + index);\n  }\n  index=indexer.get(500);\n  if (index != -1) {\n    Assert.fail(\"Grow: expected -1, got \" + index);\n  }\n  System.out.println(\"Test capacity\");\n  if (indexer.getCapacity() != 37) {\n    Assert.fail(\"Capacity should be 37, but it is \" + indexer.getCapacity());\n  }\n  indexer.clear();\n  for (int i=0; i < 100; i++) {\n    indexer.put(i);\n  }\n  for (int i=0; i < 100; i++) {\n    if (indexer.get(i) != i) {\n      Assert.fail(\"Sequence: expected \" + i + \", and got\"+ indexer.get(i));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 504,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.fail(\"Put: expected 6, got \" + index);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 66,
    "startColumnNumber" : 24,
    "endLineNumber" : 66,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}