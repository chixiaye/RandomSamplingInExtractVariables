{
  "id" : 506,
  "expression" : "value",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "43046425fc2ed73d0d3f177759706116e02a9053",
  "filePath" : "/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "value",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 168,
      "startColumnNumber" : 75,
      "endLineNumber" : 168,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 168,
        "startColumnNumber" : 29,
        "endLineNumber" : 168,
        "endColumnNumber" : 81
      },
      "nodeContext" : "dataSet.getValueFormatter().getFormattedValue(value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 168,
        "startColumnNumber" : 23,
        "endLineNumber" : 168,
        "endColumnNumber" : 81
      },
      "nodeContext" : "val=dataSet.getValueFormatter().getFormattedValue(value)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 168,
        "startColumnNumber" : 16,
        "endLineNumber" : 168,
        "endColumnNumber" : 82
      },
      "nodeContext" : "String val=dataSet.getValueFormatter().getFormattedValue(value);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1952,
        "startLineNumber" : 152,
        "startColumnNumber" : 77,
        "endLineNumber" : 196,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  float offset=drawAngles[cnt] / 2;\n  float x=(float)(r * Math.cos(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset) * mAnimator.getPhaseY())) + center.x);\n  float y=(float)(r * Math.sin(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset) * mAnimator.getPhaseY())) + center.y);\n  float value=mChart.isUsePercentValuesEnabled() ? entries.get(j).getVal() / mChart.getYValueSum() * 100f : entries.get(j).getVal();\n  String val=dataSet.getValueFormatter().getFormattedValue(value);\n  boolean drawXVals=mChart.isDrawSliceTextEnabled();\n  boolean drawYVals=dataSet.isDrawValuesEnabled();\n  if (drawXVals && drawYVals) {\n    float lineHeight=(mValuePaint.ascent() + mValuePaint.descent()) * 1.6f;\n    y-=lineHeight / 2;\n    c.drawText(val,x,y,mValuePaint);\n    if (j < data.getXValCount())     c.drawText(data.getXVals().get(j),x,y + lineHeight,mValuePaint);\n  }\n else   if (drawXVals && !drawYVals) {\n    if (j < data.getXValCount())     c.drawText(data.getXVals().get(j),x,y,mValuePaint);\n  }\n else   if (!drawXVals && drawYVals) {\n    c.drawText(val,x,y,mValuePaint);\n  }\n  cnt++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2017,
        "startLineNumber" : 152,
        "startColumnNumber" : 12,
        "endLineNumber" : 196,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < entries.size() * mAnimator.getPhaseX(); j++) {\n  float offset=drawAngles[cnt] / 2;\n  float x=(float)(r * Math.cos(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset) * mAnimator.getPhaseY())) + center.x);\n  float y=(float)(r * Math.sin(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset) * mAnimator.getPhaseY())) + center.y);\n  float value=mChart.isUsePercentValuesEnabled() ? entries.get(j).getVal() / mChart.getYValueSum() * 100f : entries.get(j).getVal();\n  String val=dataSet.getValueFormatter().getFormattedValue(value);\n  boolean drawXVals=mChart.isDrawSliceTextEnabled();\n  boolean drawYVals=dataSet.isDrawValuesEnabled();\n  if (drawXVals && drawYVals) {\n    float lineHeight=(mValuePaint.ascent() + mValuePaint.descent()) * 1.6f;\n    y-=lineHeight / 2;\n    c.drawText(val,x,y,mValuePaint);\n    if (j < data.getXValCount())     c.drawText(data.getXVals().get(j),x,y + lineHeight,mValuePaint);\n  }\n else   if (drawXVals && !drawYVals) {\n    if (j < data.getXValCount())     c.drawText(data.getXVals().get(j),x,y,mValuePaint);\n  }\n else   if (!drawXVals && drawYVals) {\n    c.drawText(val,x,y,mValuePaint);\n  }\n  cnt++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 236,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 140,
        "startColumnNumber" : 50,
        "endLineNumber" : 197,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  PieDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  applyValueTextStyle(dataSet);\n  ArrayList<Entry> entries=dataSet.getYVals();\n  for (int j=0; j < entries.size() * mAnimator.getPhaseX(); j++) {\n    float offset=drawAngles[cnt] / 2;\n    float x=(float)(r * Math.cos(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset) * mAnimator.getPhaseY())) + center.x);\n    float y=(float)(r * Math.sin(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset) * mAnimator.getPhaseY())) + center.y);\n    float value=mChart.isUsePercentValuesEnabled() ? entries.get(j).getVal() / mChart.getYValueSum() * 100f : entries.get(j).getVal();\n    String val=dataSet.getValueFormatter().getFormattedValue(value);\n    boolean drawXVals=mChart.isDrawSliceTextEnabled();\n    boolean drawYVals=dataSet.isDrawValuesEnabled();\n    if (drawXVals && drawYVals) {\n      float lineHeight=(mValuePaint.ascent() + mValuePaint.descent()) * 1.6f;\n      y-=lineHeight / 2;\n      c.drawText(val,x,y,mValuePaint);\n      if (j < data.getXValCount())       c.drawText(data.getXVals().get(j),x,y + lineHeight,mValuePaint);\n    }\n else     if (drawXVals && !drawYVals) {\n      if (j < data.getXValCount())       c.drawText(data.getXVals().get(j),x,y,mValuePaint);\n    }\n else     if (!drawXVals && drawYVals) {\n      c.drawText(val,x,y,mValuePaint);\n    }\n    cnt++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 267,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2374,
        "startLineNumber" : 140,
        "startColumnNumber" : 8,
        "endLineNumber" : 197,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < dataSets.size(); i++) {\n  PieDataSet dataSet=dataSets.get(i);\n  if (!dataSet.isDrawValuesEnabled())   continue;\n  applyValueTextStyle(dataSet);\n  ArrayList<Entry> entries=dataSet.getYVals();\n  for (int j=0; j < entries.size() * mAnimator.getPhaseX(); j++) {\n    float offset=drawAngles[cnt] / 2;\n    float x=(float)(r * Math.cos(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset) * mAnimator.getPhaseY())) + center.x);\n    float y=(float)(r * Math.sin(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset) * mAnimator.getPhaseY())) + center.y);\n    float value=mChart.isUsePercentValuesEnabled() ? entries.get(j).getVal() / mChart.getYValueSum() * 100f : entries.get(j).getVal();\n    String val=dataSet.getValueFormatter().getFormattedValue(value);\n    boolean drawXVals=mChart.isDrawSliceTextEnabled();\n    boolean drawYVals=dataSet.isDrawValuesEnabled();\n    if (drawXVals && drawYVals) {\n      float lineHeight=(mValuePaint.ascent() + mValuePaint.descent()) * 1.6f;\n      y-=lineHeight / 2;\n      c.drawText(val,x,y,mValuePaint);\n      if (j < data.getXValCount())       c.drawText(data.getXVals().get(j),x,y + lineHeight,mValuePaint);\n    }\n else     if (drawXVals && !drawYVals) {\n      if (j < data.getXValCount())       c.drawText(data.getXVals().get(j),x,y,mValuePaint);\n    }\n else     if (!drawXVals && drawYVals) {\n      c.drawText(val,x,y,mValuePaint);\n    }\n    cnt++;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 280,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3021,
        "startLineNumber" : 117,
        "startColumnNumber" : 37,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PointF center=mChart.getCenterCircleBox();\n  float r=mChart.getRadius();\n  float rotationAngle=mChart.getRotationAngle();\n  float[] drawAngles=mChart.getDrawAngles();\n  float[] absoluteAngles=mChart.getAbsoluteAngles();\n  float off=r / 2f;\n  if (mChart.isDrawHoleEnabled()) {\n    off=(r - (r / 100f * mChart.getHoleRadius())) / 2f;\n  }\n  r-=off;\n  PieData data=mChart.getData();\n  ArrayList<PieDataSet> dataSets=data.getDataSets();\n  int cnt=0;\n  for (int i=0; i < dataSets.size(); i++) {\n    PieDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    applyValueTextStyle(dataSet);\n    ArrayList<Entry> entries=dataSet.getYVals();\n    for (int j=0; j < entries.size() * mAnimator.getPhaseX(); j++) {\n      float offset=drawAngles[cnt] / 2;\n      float x=(float)(r * Math.cos(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset) * mAnimator.getPhaseY())) + center.x);\n      float y=(float)(r * Math.sin(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset) * mAnimator.getPhaseY())) + center.y);\n      float value=mChart.isUsePercentValuesEnabled() ? entries.get(j).getVal() / mChart.getYValueSum() * 100f : entries.get(j).getVal();\n      String val=dataSet.getValueFormatter().getFormattedValue(value);\n      boolean drawXVals=mChart.isDrawSliceTextEnabled();\n      boolean drawYVals=dataSet.isDrawValuesEnabled();\n      if (drawXVals && drawYVals) {\n        float lineHeight=(mValuePaint.ascent() + mValuePaint.descent()) * 1.6f;\n        y-=lineHeight / 2;\n        c.drawText(val,x,y,mValuePaint);\n        if (j < data.getXValCount())         c.drawText(data.getXVals().get(j),x,y + lineHeight,mValuePaint);\n      }\n else       if (drawXVals && !drawYVals) {\n        if (j < data.getXValCount())         c.drawText(data.getXVals().get(j),x,y,mValuePaint);\n      }\n else       if (!drawXVals && drawYVals) {\n        c.drawText(val,x,y,mValuePaint);\n      }\n      cnt++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 377,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3068,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawValues(Canvas c){\n  PointF center=mChart.getCenterCircleBox();\n  float r=mChart.getRadius();\n  float rotationAngle=mChart.getRotationAngle();\n  float[] drawAngles=mChart.getDrawAngles();\n  float[] absoluteAngles=mChart.getAbsoluteAngles();\n  float off=r / 2f;\n  if (mChart.isDrawHoleEnabled()) {\n    off=(r - (r / 100f * mChart.getHoleRadius())) / 2f;\n  }\n  r-=off;\n  PieData data=mChart.getData();\n  ArrayList<PieDataSet> dataSets=data.getDataSets();\n  int cnt=0;\n  for (int i=0; i < dataSets.size(); i++) {\n    PieDataSet dataSet=dataSets.get(i);\n    if (!dataSet.isDrawValuesEnabled())     continue;\n    applyValueTextStyle(dataSet);\n    ArrayList<Entry> entries=dataSet.getYVals();\n    for (int j=0; j < entries.size() * mAnimator.getPhaseX(); j++) {\n      float offset=drawAngles[cnt] / 2;\n      float x=(float)(r * Math.cos(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset) * mAnimator.getPhaseY())) + center.x);\n      float y=(float)(r * Math.sin(Math.toRadians((rotationAngle + absoluteAngles[cnt] - offset) * mAnimator.getPhaseY())) + center.y);\n      float value=mChart.isUsePercentValuesEnabled() ? entries.get(j).getVal() / mChart.getYValueSum() * 100f : entries.get(j).getVal();\n      String val=dataSet.getValueFormatter().getFormattedValue(value);\n      boolean drawXVals=mChart.isDrawSliceTextEnabled();\n      boolean drawYVals=dataSet.isDrawValuesEnabled();\n      if (drawXVals && drawYVals) {\n        float lineHeight=(mValuePaint.ascent() + mValuePaint.descent()) * 1.6f;\n        y-=lineHeight / 2;\n        c.drawText(val,x,y,mValuePaint);\n        if (j < data.getXValCount())         c.drawText(data.getXVals().get(j),x,y + lineHeight,mValuePaint);\n      }\n else       if (drawXVals && !drawYVals) {\n        if (j < data.getXValCount())         c.drawText(data.getXVals().get(j),x,y,mValuePaint);\n      }\n else       if (!drawXVals && drawYVals) {\n        c.drawText(val,x,y,mValuePaint);\n      }\n      cnt++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 387,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 168,
        "startColumnNumber" : 16,
        "endLineNumber" : 168,
        "endColumnNumber" : 82
      },
      "nodeContext" : "String val=dataSet.getValueFormatter().getFormattedValue(value);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 168,
    "startColumnNumber" : 75,
    "endLineNumber" : 168,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}