{
  "id" : 485,
  "expression" : "new IOException(\"Could not write an image of format \" + format)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/javase/src/com/google/zxing/client/j2se/MatrixToImageWriter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IOException(\"Could not write an image of format \" + format)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 63,
      "startLineNumber" : 101,
      "startColumnNumber" : 12,
      "endLineNumber" : 101,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 101,
        "startColumnNumber" : 6,
        "endLineNumber" : 101,
        "endColumnNumber" : 76
      },
      "nodeContext" : "throw new IOException(\"Could not write an image of format \" + format);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 100,
        "startColumnNumber" : 47,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new IOException(\"Could not write an image of format \" + format);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!ImageIO.write(image,format,stream)) {\n  throw new IOException(\"Could not write an image of format \" + format);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 98,
        "startColumnNumber" : 25,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BufferedImage image=toBufferedImage(matrix,config);\n  if (!ImageIO.write(image,format,stream)) {\n    throw new IOException(\"Could not write an image of format \" + format);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * As  {@link #writeToStream(BitMatrix,String,OutputStream)}, but allows customization of the output.\n */\npublic static void writeToStream(BitMatrix matrix,String format,OutputStream stream,MatrixToImageConfig config) throws IOException {\n  BufferedImage image=toBufferedImage(matrix,config);\n  if (!ImageIO.write(image,format,stream)) {\n    throw new IOException(\"Could not write an image of format \" + format);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 101,
        "startColumnNumber" : 6,
        "endLineNumber" : 101,
        "endColumnNumber" : 76
      },
      "nodeContext" : "throw new IOException(\"Could not write an image of format \" + format);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 10,
    "type" : "java.io.IOException"
  } ],
  "positionList" : [ {
    "charLength" : 63,
    "startLineNumber" : 101,
    "startColumnNumber" : 12,
    "endLineNumber" : 101,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}