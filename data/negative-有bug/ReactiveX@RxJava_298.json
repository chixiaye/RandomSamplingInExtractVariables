{
  "id" : 298,
  "expression" : "as.hasComplete()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/processors/BehaviorProcessorTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "as.hasComplete()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 479,
      "startColumnNumber" : 20,
      "endLineNumber" : 479,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 479,
        "startColumnNumber" : 8,
        "endLineNumber" : 479,
        "endColumnNumber" : 37
      },
      "nodeContext" : "assertFalse(as.hasComplete())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 479,
        "startColumnNumber" : 8,
        "endLineNumber" : 479,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertFalse(as.hasComplete());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 760,
        "startLineNumber" : 474,
        "startColumnNumber" : 58,
        "endLineNumber" : 498,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BehaviorProcessor<Object> as=BehaviorProcessor.create();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n  as.onNext(1);\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n  as.onComplete();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertTrue(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 825,
        "startLineNumber" : 473,
        "startColumnNumber" : 4,
        "endLineNumber" : 498,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCurrentStateMethodsNormalEmptyStart(){\n  BehaviorProcessor<Object> as=BehaviorProcessor.create();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n  as.onNext(1);\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n  as.onComplete();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertTrue(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 479,
        "startColumnNumber" : 8,
        "endLineNumber" : 479,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertFalse(as.hasComplete());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  }, {
    "nodeContext" : "as.hasComplete()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 487,
      "startColumnNumber" : 20,
      "endLineNumber" : 487,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 487,
        "startColumnNumber" : 8,
        "endLineNumber" : 487,
        "endColumnNumber" : 37
      },
      "nodeContext" : "assertFalse(as.hasComplete())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 487,
        "startColumnNumber" : 8,
        "endLineNumber" : 487,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertFalse(as.hasComplete());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 760,
        "startLineNumber" : 474,
        "startColumnNumber" : 58,
        "endLineNumber" : 498,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BehaviorProcessor<Object> as=BehaviorProcessor.create();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n  as.onNext(1);\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n  as.onComplete();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertTrue(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 825,
        "startLineNumber" : 473,
        "startColumnNumber" : 4,
        "endLineNumber" : 498,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCurrentStateMethodsNormalEmptyStart(){\n  BehaviorProcessor<Object> as=BehaviorProcessor.create();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n  as.onNext(1);\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n  as.onComplete();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertTrue(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 487,
        "startColumnNumber" : 8,
        "endLineNumber" : 487,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertFalse(as.hasComplete());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  }, {
    "nodeContext" : "as.hasComplete()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 495,
      "startColumnNumber" : 19,
      "endLineNumber" : 495,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 495,
        "startColumnNumber" : 8,
        "endLineNumber" : 495,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertTrue(as.hasComplete())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 495,
        "startColumnNumber" : 8,
        "endLineNumber" : 495,
        "endColumnNumber" : 37
      },
      "nodeContext" : "assertTrue(as.hasComplete());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 760,
        "startLineNumber" : 474,
        "startColumnNumber" : 58,
        "endLineNumber" : 498,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BehaviorProcessor<Object> as=BehaviorProcessor.create();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n  as.onNext(1);\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n  as.onComplete();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertTrue(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 825,
        "startLineNumber" : 473,
        "startColumnNumber" : 4,
        "endLineNumber" : 498,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCurrentStateMethodsNormalEmptyStart(){\n  BehaviorProcessor<Object> as=BehaviorProcessor.create();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n  as.onNext(1);\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n  as.onComplete();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertTrue(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 495,
        "startColumnNumber" : 8,
        "endLineNumber" : 495,
        "endColumnNumber" : 37
      },
      "nodeContext" : "assertTrue(as.hasComplete());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 479,
    "startColumnNumber" : 20,
    "endLineNumber" : 479,
    "endColumnNumber" : 36
  }, {
    "charLength" : 16,
    "startLineNumber" : 487,
    "startColumnNumber" : 20,
    "endLineNumber" : 487,
    "endColumnNumber" : 36
  }, {
    "charLength" : 16,
    "startLineNumber" : 495,
    "startColumnNumber" : 19,
    "endLineNumber" : 495,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}