{
  "id" : 36,
  "expression" : "JSONLexer",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/Base64Test.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JSONLexer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 12,
      "startColumnNumber" : 28,
      "endLineNumber" : 12,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 12,
        "startColumnNumber" : 28,
        "endLineNumber" : 12,
        "endColumnNumber" : 67
      },
      "nodeContext" : "JSONLexer.decodeFast(new char[0],0,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 12,
        "startColumnNumber" : 28,
        "endLineNumber" : 12,
        "endColumnNumber" : 74
      },
      "nodeContext" : "JSONLexer.decodeFast(new char[0],0,0).length",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Assert.assertEquals(JSONLexer.decodeFast(new char[0],0,0).length,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Assert.assertEquals(JSONLexer.decodeFast(new char[0],0,0).length,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 11,
        "startColumnNumber" : 47,
        "endLineNumber" : 14,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertEquals(JSONLexer.decodeFast(new char[0],0,0).length,0);\n  Assert.assertEquals(JSONLexer.decodeFast(\"ABC\".toCharArray(),0,3).length,2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 14,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_base64() throws Exception {\n  Assert.assertEquals(JSONLexer.decodeFast(new char[0],0,0).length,0);\n  Assert.assertEquals(JSONLexer.decodeFast(\"ABC\".toCharArray(),0,3).length,2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 39,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Assert.assertEquals(JSONLexer.decodeFast(new char[0],0,0).length,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.fastjson.parser.JSONLexer"
  }, {
    "nodeContext" : "JSONLexer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 13,
      "startColumnNumber" : 28,
      "endLineNumber" : 13,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 13,
        "startColumnNumber" : 28,
        "endLineNumber" : 13,
        "endColumnNumber" : 75
      },
      "nodeContext" : "JSONLexer.decodeFast(\"ABC\".toCharArray(),0,3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 13,
        "startColumnNumber" : 28,
        "endLineNumber" : 13,
        "endColumnNumber" : 82
      },
      "nodeContext" : "JSONLexer.decodeFast(\"ABC\".toCharArray(),0,3).length",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assert.assertEquals(JSONLexer.decodeFast(\"ABC\".toCharArray(),0,3).length,2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertEquals(JSONLexer.decodeFast(\"ABC\".toCharArray(),0,3).length,2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 11,
        "startColumnNumber" : 47,
        "endLineNumber" : 14,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertEquals(JSONLexer.decodeFast(new char[0],0,0).length,0);\n  Assert.assertEquals(JSONLexer.decodeFast(\"ABC\".toCharArray(),0,3).length,2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 14,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_base64() throws Exception {\n  Assert.assertEquals(JSONLexer.decodeFast(new char[0],0,0).length,0);\n  Assert.assertEquals(JSONLexer.decodeFast(\"ABC\".toCharArray(),0,3).length,2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 39,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertEquals(JSONLexer.decodeFast(\"ABC\".toCharArray(),0,3).length,2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.fastjson.parser.JSONLexer"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 12,
    "startColumnNumber" : 28,
    "endLineNumber" : 12,
    "endColumnNumber" : 37
  }, {
    "charLength" : 9,
    "startLineNumber" : 13,
    "startColumnNumber" : 28,
    "endLineNumber" : 13,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}