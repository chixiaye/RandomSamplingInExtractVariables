{
  "id" : 2,
  "expression" : "Collectors",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection/RedissonReactiveHyperLogLogCommands.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collectors",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 60,
      "startColumnNumber" : 88,
      "endLineNumber" : 60,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 60,
        "startColumnNumber" : 88,
        "endLineNumber" : 60,
        "endColumnNumber" : 107
      },
      "nodeContext" : "Collectors.toList()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 60,
        "startColumnNumber" : 26,
        "endLineNumber" : 60,
        "endColumnNumber" : 108
      },
      "nodeContext" : "command.getValues().stream().map(v -> toByteArray(v)).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 109
      },
      "nodeContext" : "params.addAll(command.getValues().stream().map(v -> toByteArray(v)).collect(Collectors.toList()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 110
      },
      "nodeContext" : "params.addAll(command.getValues().stream().map(v -> toByteArray(v)).collect(Collectors.toList()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 51,
        "startColumnNumber" : 44,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.notNull(command.getKey(),\"Key must not be null!\");\n  Assert.notEmpty(command.getValues(),\"Values must not be empty!\");\n  byte[] keyBuf=toByteArray(command.getKey());\n  List<Object> params=new ArrayList<Object>(command.getValues().size() + 1);\n  params.add(keyBuf);\n  params.addAll(command.getValues().stream().map(v -> toByteArray(v)).collect(Collectors.toList()));\n  Mono<Long> m=write(keyBuf,StringCodec.INSTANCE,PFADD,params.toArray());\n  return m.map(v -> new NumericResponse<>(command,v));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 622,
        "startLineNumber" : 51,
        "startColumnNumber" : 33,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "command -> {\n  Assert.notNull(command.getKey(),\"Key must not be null!\");\n  Assert.notEmpty(command.getValues(),\"Values must not be empty!\");\n  byte[] keyBuf=toByteArray(command.getKey());\n  List<Object> params=new ArrayList<Object>(command.getValues().size() + 1);\n  params.add(keyBuf);\n  params.addAll(command.getValues().stream().map(v -> toByteArray(v)).collect(Collectors.toList()));\n  Mono<Long> m=write(keyBuf,StringCodec.INSTANCE,PFADD,params.toArray());\n  return m.map(v -> new NumericResponse<>(command,v));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 110,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 110
      },
      "nodeContext" : "params.addAll(command.getValues().stream().map(v -> toByteArray(v)).collect(Collectors.toList()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 60,
    "startColumnNumber" : 88,
    "endLineNumber" : 60,
    "endColumnNumber" : 98
  } ],
  "layoutRelationDataList" : [ ]
}