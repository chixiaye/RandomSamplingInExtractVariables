{
  "id" : 381,
  "expression" : "new IllegalStateException(\"Mock failure\")",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/split/MockSplitSource.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IllegalStateException(\"Mock failure\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 108,
      "startColumnNumber" : 49,
      "endLineNumber" : 108,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 108,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 91
      },
      "nodeContext" : "nextBatchFuture.setException(new IllegalStateException(\"Mock failure\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 108,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 92
      },
      "nodeContext" : "nextBatchFuture.setException(new IllegalStateException(\"Mock failure\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 117,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (atSplitDepletion) {\ncase FAIL:  nextBatchFuture.setException(new IllegalStateException(\"Mock failure\"));\nbreak;\ncase FINISH:nextBatchFuture.set(ImmutableList.of());\nbreak;\ncase DO_NOTHING:break;\ndefault:throw new UnsupportedOperationException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 477,
        "startLineNumber" : 105,
        "startColumnNumber" : 43,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\nswitch (atSplitDepletion) {\ncase FAIL:    nextBatchFuture.setException(new IllegalStateException(\"Mock failure\"));\n  break;\ncase FINISH:nextBatchFuture.set(ImmutableList.of());\nbreak;\ncase DO_NOTHING:break;\ndefault:throw new UnsupportedOperationException();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (splitsProduced == totalSplits) {\nswitch (atSplitDepletion) {\ncase FAIL:    nextBatchFuture.setException(new IllegalStateException(\"Mock failure\"));\n  break;\ncase FINISH:nextBatchFuture.set(ImmutableList.of());\nbreak;\ncase DO_NOTHING:break;\ndefault:throw new UnsupportedOperationException();\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkState(splitsProduced <= totalSplits);\n  if (splitsProduced == totalSplits) {\nswitch (atSplitDepletion) {\ncase FAIL:      nextBatchFuture.setException(new IllegalStateException(\"Mock failure\"));\n    break;\ncase FINISH:  nextBatchFuture.set(ImmutableList.of());\nbreak;\ncase DO_NOTHING:break;\ndefault:throw new UnsupportedOperationException();\n}\n}\nint splits=Math.min(Math.min(batchSize,nextBatchMaxSize),totalSplits - splitsProduced);\nif (splits != 0) {\nsplitsProduced+=splits;\nnextBatchFuture.set(Collections.nCopies(splits,SPLIT));\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 102,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void doGetNextBatch(){\n  checkState(splitsProduced <= totalSplits);\n  if (splitsProduced == totalSplits) {\nswitch (atSplitDepletion) {\ncase FAIL:      nextBatchFuture.setException(new IllegalStateException(\"Mock failure\"));\n    break;\ncase FINISH:  nextBatchFuture.set(ImmutableList.of());\nbreak;\ncase DO_NOTHING:break;\ndefault:throw new UnsupportedOperationException();\n}\n}\nint splits=Math.min(Math.min(batchSize,nextBatchMaxSize),totalSplits - splitsProduced);\nif (splits != 0) {\nsplitsProduced+=splits;\nnextBatchFuture.set(Collections.nCopies(splits,SPLIT));\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 108,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 92
      },
      "nodeContext" : "nextBatchFuture.setException(new IllegalStateException(\"Mock failure\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.IllegalStateException"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 108,
    "startColumnNumber" : 49,
    "endLineNumber" : 108,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}