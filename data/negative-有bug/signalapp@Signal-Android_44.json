{
  "id" : 44,
  "expression" : "\"Rate limit exceeded: \" + status",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/libsignal/service/src/main/java/org/whispersystems/signalservice/internal/websocket/DefaultErrorMapper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Rate limit exceeded: \" + status",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 99,
      "startColumnNumber" : 38,
      "endLineNumber" : 99,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 99,
        "startColumnNumber" : 15,
        "endLineNumber" : 99,
        "endColumnNumber" : 71
      },
      "nodeContext" : "new RateLimitException(\"Rate limit exceeded: \" + status)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 72
      },
      "nodeContext" : "return new RateLimitException(\"Rate limit exceeded: \" + status);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2297,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (status) {\ncase 401:case 403:  return new AuthorizationFailedException(status,\"Authorization failed!\");\ncase 402:return new CaptchaRequiredException();\ncase 404:return new NotFoundException(\"Not found\");\ncase 409:try {\nreturn new MismatchedDevicesException(JsonUtil.fromJsonResponse(body,MismatchedDevices.class));\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\ncase 410:try {\nreturn new StaleDevicesException(JsonUtil.fromJsonResponse(body,StaleDevices.class));\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\ncase 411:try {\nreturn new DeviceLimitExceededException(JsonUtil.fromJsonResponse(body,DeviceLimit.class));\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\ncase 413:return new RateLimitException(\"Rate limit exceeded: \" + status);\ncase 417:return new ExpectationFailedException();\ncase 423:PushServiceSocket.RegistrationLockFailure accountLockFailure;\ntry {\naccountLockFailure=JsonUtil.fromJsonResponse(body,PushServiceSocket.RegistrationLockFailure.class);\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\nAuthCredentials credentials=accountLockFailure.backupCredentials;\nString basicStorageCredentials=credentials != null ? credentials.asBasic() : null;\nreturn new LockedException(accountLockFailure.length,accountLockFailure.timeRemaining,basicStorageCredentials);\ncase 428:ProofRequiredResponse proofRequiredResponse;\ntry {\nproofRequiredResponse=JsonUtil.fromJsonResponse(body,ProofRequiredResponse.class);\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\nString retryAfterRaw=getHeader.apply(\"Retry-After\");\nlong retryAfter=Util.parseInt(retryAfterRaw,-1);\nreturn new ProofRequiredException(proofRequiredResponse,retryAfter);\ncase 499:return new DeprecatedVersionException();\ncase 508:return new ServerRejectedException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 236,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2617,
        "startLineNumber" : 67,
        "startColumnNumber" : 91,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (customErrorMappers.containsKey(status)) {\n    return customErrorMappers.get(status).parseError(status,body,getHeader);\n  }\nswitch (status) {\ncase 401:case 403:    return new AuthorizationFailedException(status,\"Authorization failed!\");\ncase 402:  return new CaptchaRequiredException();\ncase 404:return new NotFoundException(\"Not found\");\ncase 409:try {\nreturn new MismatchedDevicesException(JsonUtil.fromJsonResponse(body,MismatchedDevices.class));\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\ncase 410:try {\nreturn new StaleDevicesException(JsonUtil.fromJsonResponse(body,StaleDevices.class));\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\ncase 411:try {\nreturn new DeviceLimitExceededException(JsonUtil.fromJsonResponse(body,DeviceLimit.class));\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\ncase 413:return new RateLimitException(\"Rate limit exceeded: \" + status);\ncase 417:return new ExpectationFailedException();\ncase 423:PushServiceSocket.RegistrationLockFailure accountLockFailure;\ntry {\naccountLockFailure=JsonUtil.fromJsonResponse(body,PushServiceSocket.RegistrationLockFailure.class);\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\nAuthCredentials credentials=accountLockFailure.backupCredentials;\nString basicStorageCredentials=credentials != null ? credentials.asBasic() : null;\nreturn new LockedException(accountLockFailure.length,accountLockFailure.timeRemaining,basicStorageCredentials);\ncase 428:ProofRequiredResponse proofRequiredResponse;\ntry {\nproofRequiredResponse=JsonUtil.fromJsonResponse(body,ProofRequiredResponse.class);\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\nString retryAfterRaw=getHeader.apply(\"Retry-After\");\nlong retryAfter=Util.parseInt(retryAfterRaw,-1);\nreturn new ProofRequiredException(proofRequiredResponse,retryAfter);\ncase 499:return new DeprecatedVersionException();\ncase 508:return new ServerRejectedException();\n}\nif (status != 200 && status != 202 && status != 204) {\nreturn new NonSuccessfulResponseCodeException(status,\"Bad response: \" + status);\n}\nreturn null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2718,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Throwable parseError(int status,String body,Function<String,String> getHeader){\n  if (customErrorMappers.containsKey(status)) {\n    return customErrorMappers.get(status).parseError(status,body,getHeader);\n  }\nswitch (status) {\ncase 401:case 403:    return new AuthorizationFailedException(status,\"Authorization failed!\");\ncase 402:  return new CaptchaRequiredException();\ncase 404:return new NotFoundException(\"Not found\");\ncase 409:try {\nreturn new MismatchedDevicesException(JsonUtil.fromJsonResponse(body,MismatchedDevices.class));\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\ncase 410:try {\nreturn new StaleDevicesException(JsonUtil.fromJsonResponse(body,StaleDevices.class));\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\ncase 411:try {\nreturn new DeviceLimitExceededException(JsonUtil.fromJsonResponse(body,DeviceLimit.class));\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\ncase 413:return new RateLimitException(\"Rate limit exceeded: \" + status);\ncase 417:return new ExpectationFailedException();\ncase 423:PushServiceSocket.RegistrationLockFailure accountLockFailure;\ntry {\naccountLockFailure=JsonUtil.fromJsonResponse(body,PushServiceSocket.RegistrationLockFailure.class);\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\nAuthCredentials credentials=accountLockFailure.backupCredentials;\nString basicStorageCredentials=credentials != null ? credentials.asBasic() : null;\nreturn new LockedException(accountLockFailure.length,accountLockFailure.timeRemaining,basicStorageCredentials);\ncase 428:ProofRequiredResponse proofRequiredResponse;\ntry {\nproofRequiredResponse=JsonUtil.fromJsonResponse(body,ProofRequiredResponse.class);\n}\n catch (MalformedResponseException e) {\nreturn e;\n}\nString retryAfterRaw=getHeader.apply(\"Retry-After\");\nlong retryAfter=Util.parseInt(retryAfterRaw,-1);\nreturn new ProofRequiredException(proofRequiredResponse,retryAfter);\ncase 499:return new DeprecatedVersionException();\ncase 508:return new ServerRejectedException();\n}\nif (status != 200 && status != 202 && status != 204) {\nreturn new NonSuccessfulResponseCodeException(status,\"Bad response: \" + status);\n}\nreturn null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 72
      },
      "nodeContext" : "return new RateLimitException(\"Rate limit exceeded: \" + status);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 99,
    "startColumnNumber" : 38,
    "endLineNumber" : 99,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}