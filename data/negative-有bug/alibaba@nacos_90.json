{
  "id" : 90,
  "expression" : "\"=\"",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/config/src/main/java/com/alibaba/nacos/config/server/service/ConfigSubService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"=\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 175,
      "startColumnNumber" : 71,
      "endLineNumber" : 175,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 175,
        "startColumnNumber" : 20,
        "endLineNumber" : 175,
        "endColumnNumber" : 75
      },
      "nodeContext" : "paramUrl.append(\"&\").append(param.getKey()).append(\"=\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 175,
        "startColumnNumber" : 20,
        "endLineNumber" : 176,
        "endColumnNumber" : 90
      },
      "nodeContext" : "paramUrl.append(\"&\").append(param.getKey()).append(\"=\").append(URLEncoder.encode(param.getValue(),Constants.ENCODE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 175,
        "startColumnNumber" : 20,
        "endLineNumber" : 176,
        "endColumnNumber" : 91
      },
      "nodeContext" : "paramUrl.append(\"&\").append(param.getKey()).append(\"=\").append(URLEncoder.encode(param.getValue(),Constants.ENCODE));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 174,
        "startColumnNumber" : 74,
        "endLineNumber" : 177,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  paramUrl.append(\"&\").append(param.getKey()).append(\"=\").append(URLEncoder.encode(param.getValue(),Constants.ENCODE));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 174,
        "startColumnNumber" : 16,
        "endLineNumber" : 177,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Map.Entry<String,String> param : params.entrySet()) {\n  paramUrl.append(\"&\").append(param.getKey()).append(\"=\").append(URLEncoder.encode(param.getValue(),Constants.ENCODE));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 172,
        "startColumnNumber" : 16,
        "endLineNumber" : 191,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  StringBuilder paramUrl=new StringBuilder();\n  for (  Map.Entry<String,String> param : params.entrySet()) {\n    paramUrl.append(\"&\").append(param.getKey()).append(\"=\").append(URLEncoder.encode(param.getValue(),Constants.ENCODE));\n  }\n  String urlAll=getUrl(ip,url) + \"?\" + paramUrl;\n  RestResult<String> result=NotifyService.invokeURL(urlAll,null,Constants.ENCODE);\n  if (result.ok()) {\n    return JacksonUtils.toObj(result.getData(),SampleResult.class);\n  }\n else {\n    LogUtil.DEFAULT_LOG.info(\"Can not get clientInfo from {} with {}\",ip,result.getData());\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 172,
        "startColumnNumber" : 12,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  StringBuilder paramUrl=new StringBuilder();\n  for (  Map.Entry<String,String> param : params.entrySet()) {\n    paramUrl.append(\"&\").append(param.getKey()).append(\"=\").append(URLEncoder.encode(param.getValue(),Constants.ENCODE));\n  }\n  String urlAll=getUrl(ip,url) + \"?\" + paramUrl;\n  RestResult<String> result=NotifyService.invokeURL(urlAll,null,Constants.ENCODE);\n  if (result.ok()) {\n    return JacksonUtils.toObj(result.getData(),SampleResult.class);\n  }\n else {\n    LogUtil.DEFAULT_LOG.info(\"Can not get clientInfo from {} with {}\",ip,result.getData());\n    return null;\n  }\n}\n catch (Exception e) {\n  LogUtil.DEFAULT_LOG.warn(\"Get client info from {} with exception: {}\",ip,e.getMessage());\n  return null;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 126,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1139,
        "startLineNumber" : 170,
        "startColumnNumber" : 52,
        "endLineNumber" : 195,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    StringBuilder paramUrl=new StringBuilder();\n    for (    Map.Entry<String,String> param : params.entrySet()) {\n      paramUrl.append(\"&\").append(param.getKey()).append(\"=\").append(URLEncoder.encode(param.getValue(),Constants.ENCODE));\n    }\n    String urlAll=getUrl(ip,url) + \"?\" + paramUrl;\n    RestResult<String> result=NotifyService.invokeURL(urlAll,null,Constants.ENCODE);\n    if (result.ok()) {\n      return JacksonUtils.toObj(result.getData(),SampleResult.class);\n    }\n else {\n      LogUtil.DEFAULT_LOG.info(\"Can not get clientInfo from {} with {}\",ip,result.getData());\n      return null;\n    }\n  }\n catch (  Exception e) {\n    LogUtil.DEFAULT_LOG.warn(\"Get client info from {} with exception: {}\",ip,e.getMessage());\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1201,
        "startLineNumber" : 169,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public SampleResult call() throws Exception {\n  try {\n    StringBuilder paramUrl=new StringBuilder();\n    for (    Map.Entry<String,String> param : params.entrySet()) {\n      paramUrl.append(\"&\").append(param.getKey()).append(\"=\").append(URLEncoder.encode(param.getValue(),Constants.ENCODE));\n    }\n    String urlAll=getUrl(ip,url) + \"?\" + paramUrl;\n    RestResult<String> result=NotifyService.invokeURL(urlAll,null,Constants.ENCODE);\n    if (result.ok()) {\n      return JacksonUtils.toObj(result.getData(),SampleResult.class);\n    }\n else {\n      LogUtil.DEFAULT_LOG.info(\"Can not get clientInfo from {} with {}\",ip,result.getData());\n      return null;\n    }\n  }\n catch (  Exception e) {\n    LogUtil.DEFAULT_LOG.warn(\"Get client info from {} with exception: {}\",ip,e.getMessage());\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 175,
        "startColumnNumber" : 20,
        "endLineNumber" : 175,
        "endColumnNumber" : 75
      },
      "nodeContext" : "paramUrl.append(\"&\").append(param.getKey()).append(\"=\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 175,
    "startColumnNumber" : 71,
    "endLineNumber" : 175,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}