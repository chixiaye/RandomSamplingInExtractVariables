{
  "id" : 373,
  "expression" : "result",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-examples/src/main/java/com/netflix/hystrix/examples/demo/CreditCardCommand.java",
  "occurrences" : 12,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 111,
      "startColumnNumber" : 12,
      "endLineNumber" : 111,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 31
      },
      "nodeContext" : "result.isApproved()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isApproved()) {\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n else if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3212,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actual work of submitting the credit card authorization occurs within this <code>HystrixCommand.run()</code> method.\n */\n@Override protected CreditCardAuthorizationResult run(){\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 31
      },
      "nodeContext" : "result.isApproved()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.examples.demo.CreditCardCommand.Result<com.netflix.hystrix.examples.demo.CreditCardCommand.Transaction>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 112,
      "startColumnNumber" : 71,
      "endLineNumber" : 112,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 112,
        "startColumnNumber" : 71,
        "endLineNumber" : 112,
        "endColumnNumber" : 89
      },
      "nodeContext" : "result.getTarget()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 112,
        "startColumnNumber" : 71,
        "endLineNumber" : 112,
        "endColumnNumber" : 108
      },
      "nodeContext" : "result.getTarget().getTransactionId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 112,
        "startColumnNumber" : 19,
        "endLineNumber" : 112,
        "endColumnNumber" : 152
      },
      "nodeContext" : "CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 153
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isApproved()) {\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n else if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3212,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actual work of submitting the credit card authorization occurs within this <code>HystrixCommand.run()</code> method.\n */\n@Override protected CreditCardAuthorizationResult run(){\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 153
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.examples.demo.CreditCardCommand.Result<com.netflix.hystrix.examples.demo.CreditCardCommand.Transaction>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 112,
      "startColumnNumber" : 110,
      "endLineNumber" : 112,
      "endColumnNumber" : 116
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 112,
        "startColumnNumber" : 110,
        "endLineNumber" : 112,
        "endColumnNumber" : 128
      },
      "nodeContext" : "result.getTarget()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 112,
        "startColumnNumber" : 110,
        "endLineNumber" : 112,
        "endColumnNumber" : 151
      },
      "nodeContext" : "result.getTarget().getAuthorizationCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 112,
        "startColumnNumber" : 19,
        "endLineNumber" : 112,
        "endColumnNumber" : 152
      },
      "nodeContext" : "CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 153
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isApproved()) {\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n else if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3212,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actual work of submitting the credit card authorization occurs within this <code>HystrixCommand.run()</code> method.\n */\n@Override protected CreditCardAuthorizationResult run(){\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 153
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.examples.demo.CreditCardCommand.Result<com.netflix.hystrix.examples.demo.CreditCardCommand.Transaction>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 113,
      "startColumnNumber" : 19,
      "endLineNumber" : 113,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 113,
        "startColumnNumber" : 19,
        "endLineNumber" : 113,
        "endColumnNumber" : 38
      },
      "nodeContext" : "result.isDeclined()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2069,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isApproved()) {\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n else if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3212,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actual work of submitting the credit card authorization occurs within this <code>HystrixCommand.run()</code> method.\n */\n@Override protected CreditCardAuthorizationResult run(){\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 113,
        "startColumnNumber" : 19,
        "endLineNumber" : 113,
        "endColumnNumber" : 38
      },
      "nodeContext" : "result.isDeclined()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.examples.demo.CreditCardCommand.Result<com.netflix.hystrix.examples.demo.CreditCardCommand.Transaction>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 114,
      "startColumnNumber" : 70,
      "endLineNumber" : 114,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 114,
        "startColumnNumber" : 70,
        "endLineNumber" : 114,
        "endColumnNumber" : 100
      },
      "nodeContext" : "result.getReasonResponseCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 114,
        "startColumnNumber" : 70,
        "endLineNumber" : 114,
        "endColumnNumber" : 135
      },
      "nodeContext" : "result.getReasonResponseCode() + \" : \" + result.getResponseText()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 114,
        "endColumnNumber" : 136
      },
      "nodeContext" : "CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 137
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 113,
        "startColumnNumber" : 40,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2069,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isApproved()) {\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n else if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3212,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actual work of submitting the credit card authorization occurs within this <code>HystrixCommand.run()</code> method.\n */\n@Override protected CreditCardAuthorizationResult run(){\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 137
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.examples.demo.CreditCardCommand.Result<com.netflix.hystrix.examples.demo.CreditCardCommand.Transaction>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 114,
      "startColumnNumber" : 111,
      "endLineNumber" : 114,
      "endColumnNumber" : 117
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 114,
        "startColumnNumber" : 111,
        "endLineNumber" : 114,
        "endColumnNumber" : 135
      },
      "nodeContext" : "result.getResponseText()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 114,
        "startColumnNumber" : 70,
        "endLineNumber" : 114,
        "endColumnNumber" : 135
      },
      "nodeContext" : "result.getReasonResponseCode() + \" : \" + result.getResponseText()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 114,
        "endColumnNumber" : 136
      },
      "nodeContext" : "CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 137
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 113,
        "startColumnNumber" : 40,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2069,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isApproved()) {\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n else if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3212,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actual work of submitting the credit card authorization occurs within this <code>HystrixCommand.run()</code> method.\n */\n@Override protected CreditCardAuthorizationResult run(){\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 137
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.examples.demo.CreditCardCommand.Result<com.netflix.hystrix.examples.demo.CreditCardCommand.Transaction>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 117,
      "startColumnNumber" : 16,
      "endLineNumber" : 117,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 117,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 46
      },
      "nodeContext" : "result.getReasonResponseCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 117,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 70
      },
      "nodeContext" : "result.getReasonResponseCode().getResponseReasonCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 117,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 76
      },
      "nodeContext" : "result.getReasonResponseCode().getResponseReasonCode() == 11",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 117,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n  if (result.getTarget().getAuthorizationCode() != null) {\n    return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1889,
        "startLineNumber" : 115,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2069,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isApproved()) {\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n else if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3212,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actual work of submitting the credit card authorization occurs within this <code>HystrixCommand.run()</code> method.\n */\n@Override protected CreditCardAuthorizationResult run(){\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 117,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 76
      },
      "nodeContext" : "result.getReasonResponseCode().getResponseReasonCode() == 11",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.examples.demo.CreditCardCommand.Result<com.netflix.hystrix.examples.demo.CreditCardCommand.Transaction>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 118,
      "startColumnNumber" : 20,
      "endLineNumber" : 118,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 118,
        "startColumnNumber" : 20,
        "endLineNumber" : 118,
        "endColumnNumber" : 38
      },
      "nodeContext" : "result.getTarget()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 118,
        "startColumnNumber" : 20,
        "endLineNumber" : 118,
        "endColumnNumber" : 61
      },
      "nodeContext" : "result.getTarget().getAuthorizationCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 118,
        "startColumnNumber" : 20,
        "endLineNumber" : 118,
        "endColumnNumber" : 69
      },
      "nodeContext" : "result.getTarget().getAuthorizationCode() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 118,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (result.getTarget().getAuthorizationCode() != null) {\n  return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 957,
        "startLineNumber" : 117,
        "startColumnNumber" : 78,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (result.getTarget().getAuthorizationCode() != null) {\n    return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 117,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n  if (result.getTarget().getAuthorizationCode() != null) {\n    return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1889,
        "startLineNumber" : 115,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2069,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isApproved()) {\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n else if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3212,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actual work of submitting the credit card authorization occurs within this <code>HystrixCommand.run()</code> method.\n */\n@Override protected CreditCardAuthorizationResult run(){\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 118,
        "startColumnNumber" : 20,
        "endLineNumber" : 118,
        "endColumnNumber" : 69
      },
      "nodeContext" : "result.getTarget().getAuthorizationCode() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.examples.demo.CreditCardCommand.Result<com.netflix.hystrix.examples.demo.CreditCardCommand.Transaction>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 125,
      "startColumnNumber" : 88,
      "endLineNumber" : 125,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 125,
        "startColumnNumber" : 88,
        "endLineNumber" : 125,
        "endColumnNumber" : 106
      },
      "nodeContext" : "result.getTarget()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 125,
        "startColumnNumber" : 88,
        "endLineNumber" : 125,
        "endColumnNumber" : 125
      },
      "nodeContext" : "result.getTarget().getTransactionId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 125,
        "startColumnNumber" : 27,
        "endLineNumber" : 125,
        "endColumnNumber" : 169
      },
      "nodeContext" : "CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 125,
        "startColumnNumber" : 20,
        "endLineNumber" : 125,
        "endColumnNumber" : 170
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 118,
        "startColumnNumber" : 71,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 118,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (result.getTarget().getAuthorizationCode() != null) {\n  return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 957,
        "startLineNumber" : 117,
        "startColumnNumber" : 78,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (result.getTarget().getAuthorizationCode() != null) {\n    return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 117,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n  if (result.getTarget().getAuthorizationCode() != null) {\n    return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1889,
        "startLineNumber" : 115,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2069,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isApproved()) {\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n else if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3212,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actual work of submitting the credit card authorization occurs within this <code>HystrixCommand.run()</code> method.\n */\n@Override protected CreditCardAuthorizationResult run(){\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 125,
        "startColumnNumber" : 20,
        "endLineNumber" : 125,
        "endColumnNumber" : 170
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.examples.demo.CreditCardCommand.Result<com.netflix.hystrix.examples.demo.CreditCardCommand.Transaction>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 125,
      "startColumnNumber" : 127,
      "endLineNumber" : 125,
      "endColumnNumber" : 133
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 125,
        "startColumnNumber" : 127,
        "endLineNumber" : 125,
        "endColumnNumber" : 145
      },
      "nodeContext" : "result.getTarget()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 125,
        "startColumnNumber" : 127,
        "endLineNumber" : 125,
        "endColumnNumber" : 168
      },
      "nodeContext" : "result.getTarget().getAuthorizationCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 125,
        "startColumnNumber" : 27,
        "endLineNumber" : 125,
        "endColumnNumber" : 169
      },
      "nodeContext" : "CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 125,
        "startColumnNumber" : 20,
        "endLineNumber" : 125,
        "endColumnNumber" : 170
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 118,
        "startColumnNumber" : 71,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 118,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (result.getTarget().getAuthorizationCode() != null) {\n  return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 957,
        "startLineNumber" : 117,
        "startColumnNumber" : 78,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (result.getTarget().getAuthorizationCode() != null) {\n    return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 117,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n  if (result.getTarget().getAuthorizationCode() != null) {\n    return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1889,
        "startLineNumber" : 115,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2069,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isApproved()) {\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n else if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3212,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actual work of submitting the credit card authorization occurs within this <code>HystrixCommand.run()</code> method.\n */\n@Override protected CreditCardAuthorizationResult run(){\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 125,
        "startColumnNumber" : 20,
        "endLineNumber" : 125,
        "endColumnNumber" : 170
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.examples.demo.CreditCardCommand.Result<com.netflix.hystrix.examples.demo.CreditCardCommand.Transaction>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 129,
      "startColumnNumber" : 70,
      "endLineNumber" : 129,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 129,
        "startColumnNumber" : 70,
        "endLineNumber" : 129,
        "endColumnNumber" : 100
      },
      "nodeContext" : "result.getReasonResponseCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 129,
        "startColumnNumber" : 70,
        "endLineNumber" : 129,
        "endColumnNumber" : 135
      },
      "nodeContext" : "result.getReasonResponseCode() + \" : \" + result.getResponseText()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 129,
        "startColumnNumber" : 19,
        "endLineNumber" : 129,
        "endColumnNumber" : 136
      },
      "nodeContext" : "CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 137
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1889,
        "startLineNumber" : 115,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2069,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isApproved()) {\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n else if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3212,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actual work of submitting the credit card authorization occurs within this <code>HystrixCommand.run()</code> method.\n */\n@Override protected CreditCardAuthorizationResult run(){\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 137
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.examples.demo.CreditCardCommand.Result<com.netflix.hystrix.examples.demo.CreditCardCommand.Transaction>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 129,
      "startColumnNumber" : 111,
      "endLineNumber" : 129,
      "endColumnNumber" : 117
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 129,
        "startColumnNumber" : 111,
        "endLineNumber" : 129,
        "endColumnNumber" : 135
      },
      "nodeContext" : "result.getResponseText()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 129,
        "startColumnNumber" : 70,
        "endLineNumber" : 129,
        "endColumnNumber" : 135
      },
      "nodeContext" : "result.getReasonResponseCode() + \" : \" + result.getResponseText()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 129,
        "startColumnNumber" : 19,
        "endLineNumber" : 129,
        "endColumnNumber" : 136
      },
      "nodeContext" : "CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 137
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1889,
        "startLineNumber" : 115,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2069,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result.isApproved()) {\n  return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n}\n else if (result.isDeclined()) {\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n else {\n  if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n    if (result.getTarget().getAuthorizationCode() != null) {\n      return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n    }\n  }\n  return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3212,
        "startLineNumber" : 93,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actual work of submitting the credit card authorization occurs within this <code>HystrixCommand.run()</code> method.\n */\n@Override protected CreditCardAuthorizationResult run(){\n  UserAccount user=new GetUserAccountCommand(new HttpCookie(\"mockKey\",\"mockValueFromHttpRequest\")).execute();\n  if (user.getAccountType() == 1) {\n  }\n else {\n  }\n  Result<Transaction> result=gateway.submit(payment.getCreditCardNumber(),String.valueOf(payment.getExpirationMonth()),String.valueOf(payment.getExpirationYear()),TransactionType.AUTH_CAPTURE,amount,order);\n  if (result.isApproved()) {\n    return CreditCardAuthorizationResult.createSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n  }\n else   if (result.isDeclined()) {\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n else {\n    if (result.getReasonResponseCode().getResponseReasonCode() == 11) {\n      if (result.getTarget().getAuthorizationCode() != null) {\n        return CreditCardAuthorizationResult.createDuplicateSuccessResponse(result.getTarget().getTransactionId(),result.getTarget().getAuthorizationCode());\n      }\n    }\n    return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 137
      },
      "nodeContext" : "return CreditCardAuthorizationResult.createFailedResponse(result.getReasonResponseCode() + \" : \" + result.getResponseText());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.examples.demo.CreditCardCommand.Result<com.netflix.hystrix.examples.demo.CreditCardCommand.Transaction>"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 111,
    "startColumnNumber" : 12,
    "endLineNumber" : 111,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 112,
    "startColumnNumber" : 71,
    "endLineNumber" : 112,
    "endColumnNumber" : 77
  }, {
    "charLength" : 6,
    "startLineNumber" : 112,
    "startColumnNumber" : 110,
    "endLineNumber" : 112,
    "endColumnNumber" : 116
  }, {
    "charLength" : 6,
    "startLineNumber" : 113,
    "startColumnNumber" : 19,
    "endLineNumber" : 113,
    "endColumnNumber" : 25
  }, {
    "charLength" : 6,
    "startLineNumber" : 114,
    "startColumnNumber" : 70,
    "endLineNumber" : 114,
    "endColumnNumber" : 76
  }, {
    "charLength" : 6,
    "startLineNumber" : 114,
    "startColumnNumber" : 111,
    "endLineNumber" : 114,
    "endColumnNumber" : 117
  }, {
    "charLength" : 6,
    "startLineNumber" : 117,
    "startColumnNumber" : 16,
    "endLineNumber" : 117,
    "endColumnNumber" : 22
  }, {
    "charLength" : 6,
    "startLineNumber" : 118,
    "startColumnNumber" : 20,
    "endLineNumber" : 118,
    "endColumnNumber" : 26
  }, {
    "charLength" : 6,
    "startLineNumber" : 125,
    "startColumnNumber" : 88,
    "endLineNumber" : 125,
    "endColumnNumber" : 94
  }, {
    "charLength" : 6,
    "startLineNumber" : 125,
    "startColumnNumber" : 127,
    "endLineNumber" : 125,
    "endColumnNumber" : 133
  }, {
    "charLength" : 6,
    "startLineNumber" : 129,
    "startColumnNumber" : 70,
    "endLineNumber" : 129,
    "endColumnNumber" : 76
  }, {
    "charLength" : 6,
    "startLineNumber" : 129,
    "startColumnNumber" : 111,
    "endLineNumber" : 129,
    "endColumnNumber" : 117
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 1
  } ]
}