{
  "id" : 314,
  "expression" : "index < c.length - 1",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/EditorListener.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "index < c.length - 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 589,
      "startColumnNumber" : 11,
      "endLineNumber" : 589,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 589,
        "startColumnNumber" : 4,
        "endLineNumber" : 607,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (index < c.length - 1) {\n  if ((c[index] == '/') && (c[index + 1] == '*')) {\n    c[index++]=0;\n    c[index++]=0;\n    while ((index < c.length - 1) && !((c[index] == '*') && (c[index + 1] == '/'))) {\n      c[index++]=0;\n    }\n  }\n else   if ((c[index] == '/') && (c[index + 1] == '/')) {\n    while ((index < c.length) && (c[index] != 10)) {\n      c[index++]=0;\n    }\n    if (index != c.length) {\n      index++;\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 124,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 585,
        "startColumnNumber" : 40,
        "endLineNumber" : 609,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  char c[]=textarea.getText().toCharArray();\n  int index=0;\n  while (index < c.length - 1) {\n    if ((c[index] == '/') && (c[index + 1] == '*')) {\n      c[index++]=0;\n      c[index++]=0;\n      while ((index < c.length - 1) && !((c[index] == '*') && (c[index + 1] == '/'))) {\n        c[index++]=0;\n      }\n    }\n else     if ((c[index] == '/') && (c[index + 1] == '/')) {\n      while ((index < c.length) && (c[index] != 10)) {\n        c[index++]=0;\n      }\n      if (index != c.length) {\n        index++;\n      }\n    }\n  }\n  return c;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 919,
        "startLineNumber" : 580,
        "startColumnNumber" : 2,
        "endLineNumber" : 609,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Get the character array and blank out the commented areas. This hasn't yet been tested, the plan was to make auto-indent less gullible (it gets fooled by braces that are commented out).\n */\nprotected char[] getCleanedContents(){\n  char c[]=textarea.getText().toCharArray();\n  int index=0;\n  while (index < c.length - 1) {\n    if ((c[index] == '/') && (c[index + 1] == '*')) {\n      c[index++]=0;\n      c[index++]=0;\n      while ((index < c.length - 1) && !((c[index] == '*') && (c[index + 1] == '/'))) {\n        c[index++]=0;\n      }\n    }\n else     if ((c[index] == '/') && (c[index + 1] == '/')) {\n      while ((index < c.length) && (c[index] != 10)) {\n        c[index++]=0;\n      }\n      if (index != c.length) {\n        index++;\n      }\n    }\n  }\n  return c;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 589,
        "startColumnNumber" : 4,
        "endLineNumber" : 607,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (index < c.length - 1) {\n  if ((c[index] == '/') && (c[index + 1] == '*')) {\n    c[index++]=0;\n    c[index++]=0;\n    while ((index < c.length - 1) && !((c[index] == '*') && (c[index + 1] == '/'))) {\n      c[index++]=0;\n    }\n  }\n else   if ((c[index] == '/') && (c[index + 1] == '/')) {\n    while ((index < c.length) && (c[index] != 10)) {\n      c[index++]=0;\n    }\n    if (index != c.length) {\n      index++;\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 124,
      "astHeight" : 14
    },
    "tokenLength" : 6,
    "type" : "boolean"
  }, {
    "nodeContext" : "index < c.length - 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 593,
      "startColumnNumber" : 16,
      "endLineNumber" : 593,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 593,
        "startColumnNumber" : 15,
        "endLineNumber" : 593,
        "endColumnNumber" : 37
      },
      "nodeContext" : "(index < c.length - 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 593,
        "startColumnNumber" : 15,
        "endLineNumber" : 594,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(index < c.length - 1) && !((c[index] == '*') && (c[index + 1] == '/'))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 593,
        "startColumnNumber" : 8,
        "endLineNumber" : 596,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while ((index < c.length - 1) && !((c[index] == '*') && (c[index + 1] == '/'))) {\n  c[index++]=0;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 590,
        "startColumnNumber" : 52,
        "endLineNumber" : 598,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  c[index++]=0;\n  c[index++]=0;\n  while ((index < c.length - 1) && !((c[index] == '*') && (c[index + 1] == '/'))) {\n    c[index++]=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 590,
        "startColumnNumber" : 6,
        "endLineNumber" : 606,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((c[index] == '/') && (c[index + 1] == '*')) {\n  c[index++]=0;\n  c[index++]=0;\n  while ((index < c.length - 1) && !((c[index] == '*') && (c[index + 1] == '/'))) {\n    c[index++]=0;\n  }\n}\n else if ((c[index] == '/') && (c[index + 1] == '/')) {\n  while ((index < c.length) && (c[index] != 10)) {\n    c[index++]=0;\n  }\n  if (index != c.length) {\n    index++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 115,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 546,
        "startLineNumber" : 589,
        "startColumnNumber" : 33,
        "endLineNumber" : 607,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if ((c[index] == '/') && (c[index + 1] == '*')) {\n    c[index++]=0;\n    c[index++]=0;\n    while ((index < c.length - 1) && !((c[index] == '*') && (c[index + 1] == '/'))) {\n      c[index++]=0;\n    }\n  }\n else   if ((c[index] == '/') && (c[index + 1] == '/')) {\n    while ((index < c.length) && (c[index] != 10)) {\n      c[index++]=0;\n    }\n    if (index != c.length) {\n      index++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 589,
        "startColumnNumber" : 4,
        "endLineNumber" : 607,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (index < c.length - 1) {\n  if ((c[index] == '/') && (c[index + 1] == '*')) {\n    c[index++]=0;\n    c[index++]=0;\n    while ((index < c.length - 1) && !((c[index] == '*') && (c[index + 1] == '/'))) {\n      c[index++]=0;\n    }\n  }\n else   if ((c[index] == '/') && (c[index + 1] == '/')) {\n    while ((index < c.length) && (c[index] != 10)) {\n      c[index++]=0;\n    }\n    if (index != c.length) {\n      index++;\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 124,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 585,
        "startColumnNumber" : 40,
        "endLineNumber" : 609,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  char c[]=textarea.getText().toCharArray();\n  int index=0;\n  while (index < c.length - 1) {\n    if ((c[index] == '/') && (c[index + 1] == '*')) {\n      c[index++]=0;\n      c[index++]=0;\n      while ((index < c.length - 1) && !((c[index] == '*') && (c[index + 1] == '/'))) {\n        c[index++]=0;\n      }\n    }\n else     if ((c[index] == '/') && (c[index + 1] == '/')) {\n      while ((index < c.length) && (c[index] != 10)) {\n        c[index++]=0;\n      }\n      if (index != c.length) {\n        index++;\n      }\n    }\n  }\n  return c;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 919,
        "startLineNumber" : 580,
        "startColumnNumber" : 2,
        "endLineNumber" : 609,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Get the character array and blank out the commented areas. This hasn't yet been tested, the plan was to make auto-indent less gullible (it gets fooled by braces that are commented out).\n */\nprotected char[] getCleanedContents(){\n  char c[]=textarea.getText().toCharArray();\n  int index=0;\n  while (index < c.length - 1) {\n    if ((c[index] == '/') && (c[index + 1] == '*')) {\n      c[index++]=0;\n      c[index++]=0;\n      while ((index < c.length - 1) && !((c[index] == '*') && (c[index + 1] == '/'))) {\n        c[index++]=0;\n      }\n    }\n else     if ((c[index] == '/') && (c[index + 1] == '/')) {\n      while ((index < c.length) && (c[index] != 10)) {\n        c[index++]=0;\n      }\n      if (index != c.length) {\n        index++;\n      }\n    }\n  }\n  return c;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 593,
        "startColumnNumber" : 15,
        "endLineNumber" : 593,
        "endColumnNumber" : 37
      },
      "nodeContext" : "(index < c.length - 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 589,
    "startColumnNumber" : 11,
    "endLineNumber" : 589,
    "endColumnNumber" : 31
  }, {
    "charLength" : 20,
    "startLineNumber" : 593,
    "startColumnNumber" : 16,
    "endLineNumber" : 593,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}