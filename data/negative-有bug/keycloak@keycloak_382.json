{
  "id" : 382,
  "expression" : "StaxParserUtil.peekNextTag(xmlEventReader)",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/saml-core/src/main/java/org/keycloak/saml/common/parsers/AbstractStaxParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StaxParserUtil.peekNextTag(xmlEventReader)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 63,
      "startColumnNumber" : 32,
      "endLineNumber" : 63,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 63,
        "startColumnNumber" : 21,
        "endLineNumber" : 63,
        "endColumnNumber" : 74
      },
      "nodeContext" : "xmlEvent=StaxParserUtil.peekNextTag(xmlEventReader)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 75
      },
      "nodeContext" : "XMLEvent xmlEvent=StaxParserUtil.peekNextTag(xmlEventReader);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2416,
        "startLineNumber" : 61,
        "startColumnNumber" : 41,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  XMLEvent xmlEvent=StaxParserUtil.peekNextTag(xmlEventReader);\n  if (xmlEvent == null) {\n    break;\n  }\n  if (xmlEvent instanceof EndElement) {\n    EndElement endElement=(EndElement)xmlEvent;\n    final QName qName=endElement.getName();\n    if (Objects.equals(qName,currentSubelement)) {\n      StaxParserUtil.advance(xmlEventReader);\n      currentSubelement=null;\n      continue;\n    }\n    if (Objects.equals(qName,actualQName)) {\n      StaxParserUtil.advance(xmlEventReader);\n      break;\n    }\n    String elementName=StaxParserUtil.getElementName(endElement);\n    throw LOGGER.parserUnknownEndElement(elementName,xmlEvent.getLocation());\n  }\n  startElement=(StartElement)xmlEvent;\n  currentSubelement=startElement.getName();\n  E token=getElementFromName(currentSubelement);\n  if (token == null) {\n    token=unknownElement;\n  }\n  processSubElement(xmlEventReader,target,token,startElement);\n  if (StaxParserUtil.peek(xmlEventReader) == startElement) {\n    StaxParserUtil.bypassElementBlock(xmlEventReader);\n    if (LOGGER.isDebugEnabled()) {\n      LOGGER.debug(String.format(\"Element %s bypassed\",currentSubelement));\n    }\n  }\n  if (Objects.equals(actualQName,currentSubelement) || isUnknownElement(token)) {\n    currentSubelement=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2449,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (xmlEventReader.hasNext()) {\n  XMLEvent xmlEvent=StaxParserUtil.peekNextTag(xmlEventReader);\n  if (xmlEvent == null) {\n    break;\n  }\n  if (xmlEvent instanceof EndElement) {\n    EndElement endElement=(EndElement)xmlEvent;\n    final QName qName=endElement.getName();\n    if (Objects.equals(qName,currentSubelement)) {\n      StaxParserUtil.advance(xmlEventReader);\n      currentSubelement=null;\n      continue;\n    }\n    if (Objects.equals(qName,actualQName)) {\n      StaxParserUtil.advance(xmlEventReader);\n      break;\n    }\n    String elementName=StaxParserUtil.getElementName(endElement);\n    throw LOGGER.parserUnknownEndElement(elementName,xmlEvent.getLocation());\n  }\n  startElement=(StartElement)xmlEvent;\n  currentSubelement=startElement.getName();\n  E token=getElementFromName(currentSubelement);\n  if (token == null) {\n    token=unknownElement;\n  }\n  processSubElement(xmlEventReader,target,token,startElement);\n  if (StaxParserUtil.peek(xmlEventReader) == startElement) {\n    StaxParserUtil.bypassElementBlock(xmlEventReader);\n    if (LOGGER.isDebugEnabled()) {\n      LOGGER.debug(String.format(\"Element %s bypassed\",currentSubelement));\n    }\n  }\n  if (Objects.equals(actualQName,currentSubelement) || isUnknownElement(token)) {\n    currentSubelement=null;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 170,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2968,
        "startLineNumber" : 49,
        "startColumnNumber" : 74,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StartElement startElement=StaxParserUtil.getNextStartElement(xmlEventReader);\n  final QName actualQName=startElement.getName();\n  validateStartElement(startElement);\n  T target=instantiateElement(xmlEventReader,startElement);\n  QName currentSubelement=null;\n  while (xmlEventReader.hasNext()) {\n    XMLEvent xmlEvent=StaxParserUtil.peekNextTag(xmlEventReader);\n    if (xmlEvent == null) {\n      break;\n    }\n    if (xmlEvent instanceof EndElement) {\n      EndElement endElement=(EndElement)xmlEvent;\n      final QName qName=endElement.getName();\n      if (Objects.equals(qName,currentSubelement)) {\n        StaxParserUtil.advance(xmlEventReader);\n        currentSubelement=null;\n        continue;\n      }\n      if (Objects.equals(qName,actualQName)) {\n        StaxParserUtil.advance(xmlEventReader);\n        break;\n      }\n      String elementName=StaxParserUtil.getElementName(endElement);\n      throw LOGGER.parserUnknownEndElement(elementName,xmlEvent.getLocation());\n    }\n    startElement=(StartElement)xmlEvent;\n    currentSubelement=startElement.getName();\n    E token=getElementFromName(currentSubelement);\n    if (token == null) {\n      token=unknownElement;\n    }\n    processSubElement(xmlEventReader,target,token,startElement);\n    if (StaxParserUtil.peek(xmlEventReader) == startElement) {\n      StaxParserUtil.bypassElementBlock(xmlEventReader);\n      if (LOGGER.isDebugEnabled()) {\n        LOGGER.debug(String.format(\"Element %s bypassed\",currentSubelement));\n      }\n    }\n    if (Objects.equals(actualQName,currentSubelement) || isUnknownElement(token)) {\n      currentSubelement=null;\n    }\n  }\n  return target;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3052,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public T parse(XMLEventReader xmlEventReader) throws ParsingException {\n  StartElement startElement=StaxParserUtil.getNextStartElement(xmlEventReader);\n  final QName actualQName=startElement.getName();\n  validateStartElement(startElement);\n  T target=instantiateElement(xmlEventReader,startElement);\n  QName currentSubelement=null;\n  while (xmlEventReader.hasNext()) {\n    XMLEvent xmlEvent=StaxParserUtil.peekNextTag(xmlEventReader);\n    if (xmlEvent == null) {\n      break;\n    }\n    if (xmlEvent instanceof EndElement) {\n      EndElement endElement=(EndElement)xmlEvent;\n      final QName qName=endElement.getName();\n      if (Objects.equals(qName,currentSubelement)) {\n        StaxParserUtil.advance(xmlEventReader);\n        currentSubelement=null;\n        continue;\n      }\n      if (Objects.equals(qName,actualQName)) {\n        StaxParserUtil.advance(xmlEventReader);\n        break;\n      }\n      String elementName=StaxParserUtil.getElementName(endElement);\n      throw LOGGER.parserUnknownEndElement(elementName,xmlEvent.getLocation());\n    }\n    startElement=(StartElement)xmlEvent;\n    currentSubelement=startElement.getName();\n    E token=getElementFromName(currentSubelement);\n    if (token == null) {\n      token=unknownElement;\n    }\n    processSubElement(xmlEventReader,target,token,startElement);\n    if (StaxParserUtil.peek(xmlEventReader) == startElement) {\n      StaxParserUtil.bypassElementBlock(xmlEventReader);\n      if (LOGGER.isDebugEnabled()) {\n        LOGGER.debug(String.format(\"Element %s bypassed\",currentSubelement));\n      }\n    }\n    if (Objects.equals(actualQName,currentSubelement) || isUnknownElement(token)) {\n      currentSubelement=null;\n    }\n  }\n  return target;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 75
      },
      "nodeContext" : "XMLEvent xmlEvent=StaxParserUtil.peekNextTag(xmlEventReader);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "javax.xml.stream.events.XMLEvent"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 63,
    "startColumnNumber" : 32,
    "endLineNumber" : 63,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}