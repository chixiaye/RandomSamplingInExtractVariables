{
  "id" : 130,
  "expression" : "Collections",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-kernel/shardingsphere-sql-federation/shardingsphere-sql-federation-optimizer/src/main/java/org/apache/shardingsphere/sqlfederation/optimizer/converter/segment/expression/impl/BinaryOperationExpressionConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collections",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 86,
      "startColumnNumber" : 87,
      "endLineNumber" : 86,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 86,
        "startColumnNumber" : 87,
        "endLineNumber" : 86,
        "endColumnNumber" : 119
      },
      "nodeContext" : "Collections.singletonList(right)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 86,
        "startColumnNumber" : 22,
        "endLineNumber" : 86,
        "endColumnNumber" : 119
      },
      "nodeContext" : "right instanceof SqlNodeList ? ((SqlNodeList)right).getList() : Collections.singletonList(right)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 120
      },
      "nodeContext" : "result.addAll(right instanceof SqlNodeList ? ((SqlNodeList)right).getList() : Collections.singletonList(right))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 121
      },
      "nodeContext" : "result.addAll(right instanceof SqlNodeList ? ((SqlNodeList)right).getList() : Collections.singletonList(right));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 81,
        "startColumnNumber" : 83,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlNode left=new ExpressionConverter().convert(segment.getLeft()).orElseThrow(IllegalStateException::new);\n  SqlNode right=new ExpressionConverter().convert(segment.getRight()).orElseThrow(IllegalStateException::new);\n  List<SqlNode> result=new LinkedList<>();\n  result.add(left);\n  result.addAll(right instanceof SqlNodeList ? ((SqlNodeList)right).getList() : Collections.singletonList(right));\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 544,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private List<SqlNode> convertSqlNodes(final BinaryOperationExpression segment){\n  SqlNode left=new ExpressionConverter().convert(segment.getLeft()).orElseThrow(IllegalStateException::new);\n  SqlNode right=new ExpressionConverter().convert(segment.getRight()).orElseThrow(IllegalStateException::new);\n  List<SqlNode> result=new LinkedList<>();\n  result.add(left);\n  result.addAll(right instanceof SqlNodeList ? ((SqlNodeList)right).getList() : Collections.singletonList(right));\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 121
      },
      "nodeContext" : "result.addAll(right instanceof SqlNodeList ? ((SqlNodeList)right).getList() : Collections.singletonList(right));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.util.Collections"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 86,
    "startColumnNumber" : 87,
    "endLineNumber" : 86,
    "endColumnNumber" : 98
  } ],
  "layoutRelationDataList" : [ ]
}