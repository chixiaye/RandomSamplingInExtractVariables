{
  "id" : 376,
  "expression" : "1f",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/draw/DrawBubbles.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1f",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 33,
      "startColumnNumber" : 25,
      "endLineNumber" : 33,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 33,
        "startColumnNumber" : 25,
        "endLineNumber" : 33,
        "endColumnNumber" : 92
      },
      "nodeContext" : "1f - ((Time.time / timeScl + rand.random(recurrence)) % recurrence)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 33,
        "startColumnNumber" : 18,
        "endLineNumber" : 33,
        "endColumnNumber" : 92
      },
      "nodeContext" : "life=1f - ((Time.time / timeScl + rand.random(recurrence)) % recurrence)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 33,
        "startColumnNumber" : 12,
        "endLineNumber" : 33,
        "endColumnNumber" : 93
      },
      "nodeContext" : "float life=1f - ((Time.time / timeScl + rand.random(recurrence)) % recurrence);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 547,
        "startLineNumber" : 31,
        "startColumnNumber" : 39,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float x=rand.range(spread), y=rand.range(spread);\n  float life=1f - ((Time.time / timeScl + rand.random(recurrence)) % recurrence);\n  if (life > 0) {\n    float rad=(1f - life) * radius;\n    if (fill) {\n      Fill.circle(build.x + x,build.y + y,rad);\n    }\n else {\n      Lines.stroke(build.warmup() * (life + strokeMin));\n      Lines.poly(build.x + x,build.y + y,sides,rad);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < amount; i++) {\n  float x=rand.range(spread), y=rand.range(spread);\n  float life=1f - ((Time.time / timeScl + rand.random(recurrence)) % recurrence);\n  if (life > 0) {\n    float rad=(1f - life) * radius;\n    if (fill) {\n      Fill.circle(build.x + x,build.y + y,rad);\n    }\n else {\n      Lines.stroke(build.warmup() * (life + strokeMin));\n      Lines.poly(build.x + x,build.y + y,sides,rad);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 769,
        "startLineNumber" : 24,
        "startColumnNumber" : 36,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (build.warmup() <= 0.001f)   return;\n  Draw.color(color);\n  Draw.alpha(build.warmup());\n  rand.setSeed(build.id);\n  for (int i=0; i < amount; i++) {\n    float x=rand.range(spread), y=rand.range(spread);\n    float life=1f - ((Time.time / timeScl + rand.random(recurrence)) % recurrence);\n    if (life > 0) {\n      float rad=(1f - life) * radius;\n      if (fill) {\n        Fill.circle(build.x + x,build.y + y,rad);\n      }\n else {\n        Lines.stroke(build.warmup() * (life + strokeMin));\n        Lines.poly(build.x + x,build.y + y,sides,rad);\n      }\n    }\n  }\n  Draw.color();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(Building build){\n  if (build.warmup() <= 0.001f)   return;\n  Draw.color(color);\n  Draw.alpha(build.warmup());\n  rand.setSeed(build.id);\n  for (int i=0; i < amount; i++) {\n    float x=rand.range(spread), y=rand.range(spread);\n    float life=1f - ((Time.time / timeScl + rand.random(recurrence)) % recurrence);\n    if (life > 0) {\n      float rad=(1f - life) * radius;\n      if (fill) {\n        Fill.circle(build.x + x,build.y + y,rad);\n      }\n else {\n        Lines.stroke(build.warmup() * (life + strokeMin));\n        Lines.poly(build.x + x,build.y + y,sides,rad);\n      }\n    }\n  }\n  Draw.color();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 33,
        "startColumnNumber" : 12,
        "endLineNumber" : 33,
        "endColumnNumber" : 93
      },
      "nodeContext" : "float life=1f - ((Time.time / timeScl + rand.random(recurrence)) % recurrence);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 10
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "1f",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 36,
      "startColumnNumber" : 29,
      "endLineNumber" : 36,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 36,
        "startColumnNumber" : 29,
        "endLineNumber" : 36,
        "endColumnNumber" : 38
      },
      "nodeContext" : "1f - life",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 36,
        "startColumnNumber" : 28,
        "endLineNumber" : 36,
        "endColumnNumber" : 39
      },
      "nodeContext" : "(1f - life)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 36,
        "startColumnNumber" : 28,
        "endLineNumber" : 36,
        "endColumnNumber" : 48
      },
      "nodeContext" : "(1f - life) * radius",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 36,
        "startColumnNumber" : 22,
        "endLineNumber" : 36,
        "endColumnNumber" : 48
      },
      "nodeContext" : "rad=(1f - life) * radius",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 36,
        "startColumnNumber" : 16,
        "endLineNumber" : 36,
        "endColumnNumber" : 49
      },
      "nodeContext" : "float rad=(1f - life) * radius;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 35,
        "startColumnNumber" : 24,
        "endLineNumber" : 43,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  float rad=(1f - life) * radius;\n  if (fill) {\n    Fill.circle(build.x + x,build.y + y,rad);\n  }\n else {\n    Lines.stroke(build.warmup() * (life + strokeMin));\n    Lines.poly(build.x + x,build.y + y,sides,rad);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (life > 0) {\n  float rad=(1f - life) * radius;\n  if (fill) {\n    Fill.circle(build.x + x,build.y + y,rad);\n  }\n else {\n    Lines.stroke(build.warmup() * (life + strokeMin));\n    Lines.poly(build.x + x,build.y + y,sides,rad);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 547,
        "startLineNumber" : 31,
        "startColumnNumber" : 39,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float x=rand.range(spread), y=rand.range(spread);\n  float life=1f - ((Time.time / timeScl + rand.random(recurrence)) % recurrence);\n  if (life > 0) {\n    float rad=(1f - life) * radius;\n    if (fill) {\n      Fill.circle(build.x + x,build.y + y,rad);\n    }\n else {\n      Lines.stroke(build.warmup() * (life + strokeMin));\n      Lines.poly(build.x + x,build.y + y,sides,rad);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < amount; i++) {\n  float x=rand.range(spread), y=rand.range(spread);\n  float life=1f - ((Time.time / timeScl + rand.random(recurrence)) % recurrence);\n  if (life > 0) {\n    float rad=(1f - life) * radius;\n    if (fill) {\n      Fill.circle(build.x + x,build.y + y,rad);\n    }\n else {\n      Lines.stroke(build.warmup() * (life + strokeMin));\n      Lines.poly(build.x + x,build.y + y,sides,rad);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 769,
        "startLineNumber" : 24,
        "startColumnNumber" : 36,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (build.warmup() <= 0.001f)   return;\n  Draw.color(color);\n  Draw.alpha(build.warmup());\n  rand.setSeed(build.id);\n  for (int i=0; i < amount; i++) {\n    float x=rand.range(spread), y=rand.range(spread);\n    float life=1f - ((Time.time / timeScl + rand.random(recurrence)) % recurrence);\n    if (life > 0) {\n      float rad=(1f - life) * radius;\n      if (fill) {\n        Fill.circle(build.x + x,build.y + y,rad);\n      }\n else {\n        Lines.stroke(build.warmup() * (life + strokeMin));\n        Lines.poly(build.x + x,build.y + y,sides,rad);\n      }\n    }\n  }\n  Draw.color();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(Building build){\n  if (build.warmup() <= 0.001f)   return;\n  Draw.color(color);\n  Draw.alpha(build.warmup());\n  rand.setSeed(build.id);\n  for (int i=0; i < amount; i++) {\n    float x=rand.range(spread), y=rand.range(spread);\n    float life=1f - ((Time.time / timeScl + rand.random(recurrence)) % recurrence);\n    if (life > 0) {\n      float rad=(1f - life) * radius;\n      if (fill) {\n        Fill.circle(build.x + x,build.y + y,rad);\n      }\n else {\n        Lines.stroke(build.warmup() * (life + strokeMin));\n        Lines.poly(build.x + x,build.y + y,sides,rad);\n      }\n    }\n  }\n  Draw.color();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 36,
        "startColumnNumber" : 16,
        "endLineNumber" : 36,
        "endColumnNumber" : 49
      },
      "nodeContext" : "float rad=(1f - life) * radius;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 33,
    "startColumnNumber" : 25,
    "endLineNumber" : 33,
    "endColumnNumber" : 27
  }, {
    "charLength" : 2,
    "startLineNumber" : 36,
    "startColumnNumber" : 29,
    "endLineNumber" : 36,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  } ]
}