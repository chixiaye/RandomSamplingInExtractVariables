{
  "id" : 232,
  "expression" : "\"five\"",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableSerializeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"five\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 113,
      "startColumnNumber" : 123,
      "endLineNumber" : 113,
      "endColumnNumber" : 129
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 113,
        "startColumnNumber" : 54,
        "endLineNumber" : 113,
        "endColumnNumber" : 163
      },
      "nodeContext" : "new TestMultiThreadedObservable(\"one\",\"two\",\"three\",null,\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 113,
        "startColumnNumber" : 40,
        "endLineNumber" : 113,
        "endColumnNumber" : 163
      },
      "nodeContext" : "onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\",null,\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 164
      },
      "nodeContext" : "TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\",null,\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1506,
        "startLineNumber" : 112,
        "startColumnNumber" : 36,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\",null,\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\");\n  Flowable<String> w=Flowable.create(onSubscribe);\n  BusyObserver busyobserver=new BusyObserver();\n  w.serialize().subscribe(busyobserver);\n  onSubscribe.waitToFinish();\n  System.out.println(\"maxConcurrentThreads: \" + onSubscribe.maxConcurrentThreads.get());\n  System.out.println(\"onNext count: \" + busyobserver.onNextCount.get());\n  if (busyobserver.onNextCount.get() < 9) {\n    lessThan9=true;\n  }\n  assertTrue(busyobserver.onError);\n  assertFalse(busyobserver.onCompleted);\n  assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n  assertEquals(1,busyobserver.maxConcurrentThreads.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 3; i++) {\n  TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\",null,\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\");\n  Flowable<String> w=Flowable.create(onSubscribe);\n  BusyObserver busyobserver=new BusyObserver();\n  w.serialize().subscribe(busyobserver);\n  onSubscribe.waitToFinish();\n  System.out.println(\"maxConcurrentThreads: \" + onSubscribe.maxConcurrentThreads.get());\n  System.out.println(\"onNext count: \" + busyobserver.onNextCount.get());\n  if (busyobserver.onNextCount.get() < 9) {\n    lessThan9=true;\n  }\n  assertTrue(busyobserver.onError);\n  assertFalse(busyobserver.onCompleted);\n  assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n  assertEquals(1,busyobserver.maxConcurrentThreads.get());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 131,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1620,
        "startLineNumber" : 110,
        "startColumnNumber" : 51,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean lessThan9=false;\n  for (int i=0; i < 3; i++) {\n    TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\",null,\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\");\n    Flowable<String> w=Flowable.create(onSubscribe);\n    BusyObserver busyobserver=new BusyObserver();\n    w.serialize().subscribe(busyobserver);\n    onSubscribe.waitToFinish();\n    System.out.println(\"maxConcurrentThreads: \" + onSubscribe.maxConcurrentThreads.get());\n    System.out.println(\"onNext count: \" + busyobserver.onNextCount.get());\n    if (busyobserver.onNextCount.get() < 9) {\n      lessThan9=true;\n    }\n    assertTrue(busyobserver.onError);\n    assertFalse(busyobserver.onCompleted);\n    assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n    assertEquals(1,busyobserver.maxConcurrentThreads.get());\n  }\n  assertTrue(lessThan9);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMultiThreadedWithNPEinMiddle(){\n  boolean lessThan9=false;\n  for (int i=0; i < 3; i++) {\n    TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\",null,\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\");\n    Flowable<String> w=Flowable.create(onSubscribe);\n    BusyObserver busyobserver=new BusyObserver();\n    w.serialize().subscribe(busyobserver);\n    onSubscribe.waitToFinish();\n    System.out.println(\"maxConcurrentThreads: \" + onSubscribe.maxConcurrentThreads.get());\n    System.out.println(\"onNext count: \" + busyobserver.onNextCount.get());\n    if (busyobserver.onNextCount.get() < 9) {\n      lessThan9=true;\n    }\n    assertTrue(busyobserver.onError);\n    assertFalse(busyobserver.onCompleted);\n    assertTrue(onSubscribe.maxConcurrentThreads.get() > 1);\n    assertEquals(1,busyobserver.maxConcurrentThreads.get());\n  }\n  assertTrue(lessThan9);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 164
      },
      "nodeContext" : "TestMultiThreadedObservable onSubscribe=new TestMultiThreadedObservable(\"one\",\"two\",\"three\",null,\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 113,
    "startColumnNumber" : 123,
    "endLineNumber" : 113,
    "endColumnNumber" : 129
  } ],
  "layoutRelationDataList" : [ ]
}