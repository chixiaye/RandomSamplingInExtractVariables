{
  "id" : 152,
  "expression" : "SuppressWarnings",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/observable/ObservableWindowTimed.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SuppressWarnings",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 712,
      "startColumnNumber" : 25,
      "endLineNumber" : 712,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,modifiers]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 712,
        "startColumnNumber" : 24,
        "endLineNumber" : 712,
        "endColumnNumber" : 54
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\")",
      "nodeType" : "SingleMemberAnnotation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 712,
        "startColumnNumber" : 24,
        "endLineNumber" : 713,
        "endColumnNumber" : 64
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") SubjectWork<T> work=(SubjectWork<T>)v;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1207,
        "startLineNumber" : 711,
        "startColumnNumber" : 28,
        "endLineNumber" : 738,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"unchecked\") SubjectWork<T> work=(SubjectWork<T>)v;\n  if (work.open) {\n    if (cancelled) {\n      continue;\n    }\n    final UnicastSubject<T> w=UnicastSubject.create(bufferSize);\n    ws.add(w);\n    a.onNext(w);\n    worker.schedule(new Runnable(){\n      @Override public void run(){\n        complete(w);\n      }\n    }\n,timespan,unit);\n  }\n else {\n    ws.remove(work.w);\n    work.w.onComplete();\n    if (ws.isEmpty() && cancelled) {\n      terminated=true;\n    }\n    continue;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 711,
        "startColumnNumber" : 20,
        "endLineNumber" : 738,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (sw) {\n  @SuppressWarnings(\"unchecked\") SubjectWork<T> work=(SubjectWork<T>)v;\n  if (work.open) {\n    if (cancelled) {\n      continue;\n    }\n    final UnicastSubject<T> w=UnicastSubject.create(bufferSize);\n    ws.add(w);\n    a.onNext(w);\n    worker.schedule(new Runnable(){\n      @Override public void run(){\n        complete(w);\n      }\n    }\n,timespan,unit);\n  }\n else {\n    ws.remove(work.w);\n    work.w.onComplete();\n    if (ws.isEmpty() && cancelled) {\n      terminated=true;\n    }\n    continue;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2729,
        "startLineNumber" : 674,
        "startColumnNumber" : 25,
        "endLineNumber" : 743,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (terminated) {\n    s.dispose();\n    disposeWorker();\n    q.clear();\n    ws.clear();\n    return;\n  }\n  boolean d=done;\n  Object v=q.poll();\n  boolean empty=v == null;\n  boolean sw=v instanceof SubjectWork;\n  if (d && (empty || sw)) {\n    q.clear();\n    disposeWorker();\n    Throwable e=error;\n    if (e != null) {\n      for (      UnicastSubject<T> w : ws) {\n        w.onError(e);\n      }\n    }\n else {\n      for (      UnicastSubject<T> w : ws) {\n        w.onError(e);\n      }\n    }\n    ws.clear();\n    return;\n  }\n  if (empty) {\n    break;\n  }\n  if (sw) {\n    @SuppressWarnings(\"unchecked\") SubjectWork<T> work=(SubjectWork<T>)v;\n    if (work.open) {\n      if (cancelled) {\n        continue;\n      }\n      final UnicastSubject<T> w=UnicastSubject.create(bufferSize);\n      ws.add(w);\n      a.onNext(w);\n      worker.schedule(new Runnable(){\n        @Override public void run(){\n          complete(w);\n        }\n      }\n,timespan,unit);\n    }\n else {\n      ws.remove(work.w);\n      work.w.onComplete();\n      if (ws.isEmpty() && cancelled) {\n        terminated=true;\n      }\n      continue;\n    }\n  }\n  for (  UnicastSubject<T> w : ws) {\n    w.onNext(NotificationLite.<T>getValue(v));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2738,
        "startLineNumber" : 674,
        "startColumnNumber" : 16,
        "endLineNumber" : 743,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (; ; ) {\n  if (terminated) {\n    s.dispose();\n    disposeWorker();\n    q.clear();\n    ws.clear();\n    return;\n  }\n  boolean d=done;\n  Object v=q.poll();\n  boolean empty=v == null;\n  boolean sw=v instanceof SubjectWork;\n  if (d && (empty || sw)) {\n    q.clear();\n    disposeWorker();\n    Throwable e=error;\n    if (e != null) {\n      for (      UnicastSubject<T> w : ws) {\n        w.onError(e);\n      }\n    }\n else {\n      for (      UnicastSubject<T> w : ws) {\n        w.onError(e);\n      }\n    }\n    ws.clear();\n    return;\n  }\n  if (empty) {\n    break;\n  }\n  if (sw) {\n    @SuppressWarnings(\"unchecked\") SubjectWork<T> work=(SubjectWork<T>)v;\n    if (work.open) {\n      if (cancelled) {\n        continue;\n      }\n      final UnicastSubject<T> w=UnicastSubject.create(bufferSize);\n      ws.add(w);\n      a.onNext(w);\n      worker.schedule(new Runnable(){\n        @Override public void run(){\n          complete(w);\n        }\n      }\n,timespan,unit);\n    }\n else {\n      ws.remove(work.w);\n      work.w.onComplete();\n      if (ws.isEmpty() && cancelled) {\n        terminated=true;\n      }\n      continue;\n    }\n  }\n  for (  UnicastSubject<T> w : ws) {\n    w.onNext(NotificationLite.<T>getValue(v));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 235,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2933,
        "startLineNumber" : 672,
        "startColumnNumber" : 21,
        "endLineNumber" : 749,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (; ; ) {\n    if (terminated) {\n      s.dispose();\n      disposeWorker();\n      q.clear();\n      ws.clear();\n      return;\n    }\n    boolean d=done;\n    Object v=q.poll();\n    boolean empty=v == null;\n    boolean sw=v instanceof SubjectWork;\n    if (d && (empty || sw)) {\n      q.clear();\n      disposeWorker();\n      Throwable e=error;\n      if (e != null) {\n        for (        UnicastSubject<T> w : ws) {\n          w.onError(e);\n        }\n      }\n else {\n        for (        UnicastSubject<T> w : ws) {\n          w.onError(e);\n        }\n      }\n      ws.clear();\n      return;\n    }\n    if (empty) {\n      break;\n    }\n    if (sw) {\n      @SuppressWarnings(\"unchecked\") SubjectWork<T> work=(SubjectWork<T>)v;\n      if (work.open) {\n        if (cancelled) {\n          continue;\n        }\n        final UnicastSubject<T> w=UnicastSubject.create(bufferSize);\n        ws.add(w);\n        a.onNext(w);\n        worker.schedule(new Runnable(){\n          @Override public void run(){\n            complete(w);\n          }\n        }\n,timespan,unit);\n      }\n else {\n        ws.remove(work.w);\n        work.w.onComplete();\n        if (ws.isEmpty() && cancelled) {\n          terminated=true;\n        }\n        continue;\n      }\n    }\n    for (    UnicastSubject<T> w : ws) {\n      w.onNext(NotificationLite.<T>getValue(v));\n    }\n  }\n  missed=leave(-missed);\n  if (missed == 0) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2942,
        "startLineNumber" : 672,
        "startColumnNumber" : 12,
        "endLineNumber" : 749,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (; ; ) {\n  for (; ; ) {\n    if (terminated) {\n      s.dispose();\n      disposeWorker();\n      q.clear();\n      ws.clear();\n      return;\n    }\n    boolean d=done;\n    Object v=q.poll();\n    boolean empty=v == null;\n    boolean sw=v instanceof SubjectWork;\n    if (d && (empty || sw)) {\n      q.clear();\n      disposeWorker();\n      Throwable e=error;\n      if (e != null) {\n        for (        UnicastSubject<T> w : ws) {\n          w.onError(e);\n        }\n      }\n else {\n        for (        UnicastSubject<T> w : ws) {\n          w.onError(e);\n        }\n      }\n      ws.clear();\n      return;\n    }\n    if (empty) {\n      break;\n    }\n    if (sw) {\n      @SuppressWarnings(\"unchecked\") SubjectWork<T> work=(SubjectWork<T>)v;\n      if (work.open) {\n        if (cancelled) {\n          continue;\n        }\n        final UnicastSubject<T> w=UnicastSubject.create(bufferSize);\n        ws.add(w);\n        a.onNext(w);\n        worker.schedule(new Runnable(){\n          @Override public void run(){\n            complete(w);\n          }\n        }\n,timespan,unit);\n      }\n else {\n        ws.remove(work.w);\n        work.w.onComplete();\n        if (ws.isEmpty() && cancelled) {\n          terminated=true;\n        }\n        continue;\n      }\n    }\n    for (    UnicastSubject<T> w : ws) {\n      w.onNext(NotificationLite.<T>getValue(v));\n    }\n  }\n  missed=leave(-missed);\n  if (missed == 0) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 250,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3189,
        "startLineNumber" : 665,
        "startColumnNumber" : 25,
        "endLineNumber" : 750,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Queue<Object> q=queue;\n  final Observer<? super Observable<T>> a=actual;\n  final List<UnicastSubject<T>> ws=windows;\n  int missed=1;\n  for (; ; ) {\n    for (; ; ) {\n      if (terminated) {\n        s.dispose();\n        disposeWorker();\n        q.clear();\n        ws.clear();\n        return;\n      }\n      boolean d=done;\n      Object v=q.poll();\n      boolean empty=v == null;\n      boolean sw=v instanceof SubjectWork;\n      if (d && (empty || sw)) {\n        q.clear();\n        disposeWorker();\n        Throwable e=error;\n        if (e != null) {\n          for (          UnicastSubject<T> w : ws) {\n            w.onError(e);\n          }\n        }\n else {\n          for (          UnicastSubject<T> w : ws) {\n            w.onError(e);\n          }\n        }\n        ws.clear();\n        return;\n      }\n      if (empty) {\n        break;\n      }\n      if (sw) {\n        @SuppressWarnings(\"unchecked\") SubjectWork<T> work=(SubjectWork<T>)v;\n        if (work.open) {\n          if (cancelled) {\n            continue;\n          }\n          final UnicastSubject<T> w=UnicastSubject.create(bufferSize);\n          ws.add(w);\n          a.onNext(w);\n          worker.schedule(new Runnable(){\n            @Override public void run(){\n              complete(w);\n            }\n          }\n,timespan,unit);\n        }\n else {\n          ws.remove(work.w);\n          work.w.onComplete();\n          if (ws.isEmpty() && cancelled) {\n            terminated=true;\n          }\n          continue;\n        }\n      }\n      for (      UnicastSubject<T> w : ws) {\n        w.onNext(NotificationLite.<T>getValue(v));\n      }\n    }\n    missed=leave(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3206,
        "startLineNumber" : 665,
        "startColumnNumber" : 8,
        "endLineNumber" : 750,
        "endColumnNumber" : 9
      },
      "nodeContext" : "void drainLoop(){\n  final Queue<Object> q=queue;\n  final Observer<? super Observable<T>> a=actual;\n  final List<UnicastSubject<T>> ws=windows;\n  int missed=1;\n  for (; ; ) {\n    for (; ; ) {\n      if (terminated) {\n        s.dispose();\n        disposeWorker();\n        q.clear();\n        ws.clear();\n        return;\n      }\n      boolean d=done;\n      Object v=q.poll();\n      boolean empty=v == null;\n      boolean sw=v instanceof SubjectWork;\n      if (d && (empty || sw)) {\n        q.clear();\n        disposeWorker();\n        Throwable e=error;\n        if (e != null) {\n          for (          UnicastSubject<T> w : ws) {\n            w.onError(e);\n          }\n        }\n else {\n          for (          UnicastSubject<T> w : ws) {\n            w.onError(e);\n          }\n        }\n        ws.clear();\n        return;\n      }\n      if (empty) {\n        break;\n      }\n      if (sw) {\n        @SuppressWarnings(\"unchecked\") SubjectWork<T> work=(SubjectWork<T>)v;\n        if (work.open) {\n          if (cancelled) {\n            continue;\n          }\n          final UnicastSubject<T> w=UnicastSubject.create(bufferSize);\n          ws.add(w);\n          a.onNext(w);\n          worker.schedule(new Runnable(){\n            @Override public void run(){\n              complete(w);\n            }\n          }\n,timespan,unit);\n        }\n else {\n          ws.remove(work.w);\n          work.w.onComplete();\n          if (ws.isEmpty() && cancelled) {\n            terminated=true;\n          }\n          continue;\n        }\n      }\n      for (      UnicastSubject<T> w : ws) {\n        w.onNext(NotificationLite.<T>getValue(v));\n      }\n    }\n    missed=leave(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 296,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,modifiers]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 712,
        "startColumnNumber" : 24,
        "endLineNumber" : 712,
        "endColumnNumber" : 54
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\")",
      "nodeType" : "SingleMemberAnnotation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.SuppressWarnings"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 712,
    "startColumnNumber" : 25,
    "endLineNumber" : 712,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}