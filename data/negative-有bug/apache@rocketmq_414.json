{
  "id" : 414,
  "expression" : "RemotingCommand",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/producer/ForwardMessageToDLQActivityTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RemotingCommand",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 54,
      "startColumnNumber" : 58,
      "endLineNumber" : 54,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 54,
        "startColumnNumber" : 58,
        "endLineNumber" : 54,
        "endColumnNumber" : 121
      },
      "nodeContext" : "RemotingCommand.createResponseCommand(ResponseCode.SUCCESS,\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 54,
        "startColumnNumber" : 24,
        "endLineNumber" : 54,
        "endColumnNumber" : 122
      },
      "nodeContext" : "CompletableFuture.completedFuture(RemotingCommand.createResponseCommand(ResponseCode.SUCCESS,\"\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 123
      },
      "nodeContext" : "when(this.messagingProcessor.forwardMessageToDeadLetterQueue(any(),receiptHandleCaptor.capture(),anyString(),anyString(),anyString())).thenReturn(CompletableFuture.completedFuture(RemotingCommand.createResponseCommand(ResponseCode.SUCCESS,\"\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 124
      },
      "nodeContext" : "when(this.messagingProcessor.forwardMessageToDeadLetterQueue(any(),receiptHandleCaptor.capture(),anyString(),anyString(),anyString())).thenReturn(CompletableFuture.completedFuture(RemotingCommand.createResponseCommand(ResponseCode.SUCCESS,\"\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1163,
        "startLineNumber" : 51,
        "startColumnNumber" : 71,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArgumentCaptor<ReceiptHandle> receiptHandleCaptor=ArgumentCaptor.forClass(ReceiptHandle.class);\n  when(this.messagingProcessor.forwardMessageToDeadLetterQueue(any(),receiptHandleCaptor.capture(),anyString(),anyString(),anyString())).thenReturn(CompletableFuture.completedFuture(RemotingCommand.createResponseCommand(ResponseCode.SUCCESS,\"\")));\n  String handleStr=buildReceiptHandle(\"topic\",System.currentTimeMillis(),3000);\n  ForwardMessageToDeadLetterQueueResponse response=this.forwardMessageToDLQActivity.forwardMessageToDeadLetterQueue(createContext(),ForwardMessageToDeadLetterQueueRequest.newBuilder().setTopic(Resource.newBuilder().setName(\"topic\").build()).setGroup(Resource.newBuilder().setName(\"group\").build()).setMessageId(MessageClientIDSetter.createUniqID()).setReceiptHandle(handleStr).build()).get();\n  assertEquals(Code.OK,response.getStatus().getCode());\n  assertEquals(handleStr,receiptHandleCaptor.getValue().getReceiptHandle());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testForwardMessageToDeadLetterQueue() throws Throwable {\n  ArgumentCaptor<ReceiptHandle> receiptHandleCaptor=ArgumentCaptor.forClass(ReceiptHandle.class);\n  when(this.messagingProcessor.forwardMessageToDeadLetterQueue(any(),receiptHandleCaptor.capture(),anyString(),anyString(),anyString())).thenReturn(CompletableFuture.completedFuture(RemotingCommand.createResponseCommand(ResponseCode.SUCCESS,\"\")));\n  String handleStr=buildReceiptHandle(\"topic\",System.currentTimeMillis(),3000);\n  ForwardMessageToDeadLetterQueueResponse response=this.forwardMessageToDLQActivity.forwardMessageToDeadLetterQueue(createContext(),ForwardMessageToDeadLetterQueueRequest.newBuilder().setTopic(Resource.newBuilder().setName(\"topic\").build()).setGroup(Resource.newBuilder().setName(\"group\").build()).setMessageId(MessageClientIDSetter.createUniqID()).setReceiptHandle(handleStr).build()).get();\n  assertEquals(Code.OK,response.getStatus().getCode());\n  assertEquals(handleStr,receiptHandleCaptor.getValue().getReceiptHandle());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 54,
        "startColumnNumber" : 24,
        "endLineNumber" : 54,
        "endColumnNumber" : 122
      },
      "nodeContext" : "CompletableFuture.completedFuture(RemotingCommand.createResponseCommand(ResponseCode.SUCCESS,\"\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.remoting.protocol.RemotingCommand"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 54,
    "startColumnNumber" : 58,
    "endLineNumber" : 54,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}