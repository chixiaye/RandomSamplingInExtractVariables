{
  "id" : 205,
  "expression" : "Assert",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/test/java/com/navercorp/pinpoint/profiler/monitor/metric/response/ReuseResponseTimeCollectorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 46,
      "startColumnNumber" : 8,
      "endLineNumber" : 46,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertEquals(totalValue / count,responseTimeValue.getAvg())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(totalValue / count,responseTimeValue.getAvg());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 32,
        "startColumnNumber" : 47,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int count=3;\n  ReuseResponseTimeCollector reuseResponseTimeCollector=new ReuseResponseTimeCollector();\n  long totalValue=0;\n  for (int i=0; i < count; i++) {\n    long value=Math.max(500,(random.nextLong() % 2500) + 500);\n    totalValue+=value;\n    reuseResponseTimeCollector.add(value);\n  }\n  ResponseTimeValue responseTimeValue=reuseResponseTimeCollector.resetAndGetValue();\n  Assert.assertEquals(totalValue / count,responseTimeValue.getAvg());\n  responseTimeValue=reuseResponseTimeCollector.resetAndGetValue();\n  Assert.assertEquals(0,responseTimeValue.getAvg());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void defaultTest() throws Exception {\n  int count=3;\n  ReuseResponseTimeCollector reuseResponseTimeCollector=new ReuseResponseTimeCollector();\n  long totalValue=0;\n  for (int i=0; i < count; i++) {\n    long value=Math.max(500,(random.nextLong() % 2500) + 500);\n    totalValue+=value;\n    reuseResponseTimeCollector.add(value);\n  }\n  ResponseTimeValue responseTimeValue=reuseResponseTimeCollector.resetAndGetValue();\n  Assert.assertEquals(totalValue / count,responseTimeValue.getAvg());\n  responseTimeValue=reuseResponseTimeCollector.resetAndGetValue();\n  Assert.assertEquals(0,responseTimeValue.getAvg());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(totalValue / count,responseTimeValue.getAvg());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 49,
      "startColumnNumber" : 8,
      "endLineNumber" : 49,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Assert.assertEquals(0,responseTimeValue.getAvg())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Assert.assertEquals(0,responseTimeValue.getAvg());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 32,
        "startColumnNumber" : 47,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int count=3;\n  ReuseResponseTimeCollector reuseResponseTimeCollector=new ReuseResponseTimeCollector();\n  long totalValue=0;\n  for (int i=0; i < count; i++) {\n    long value=Math.max(500,(random.nextLong() % 2500) + 500);\n    totalValue+=value;\n    reuseResponseTimeCollector.add(value);\n  }\n  ResponseTimeValue responseTimeValue=reuseResponseTimeCollector.resetAndGetValue();\n  Assert.assertEquals(totalValue / count,responseTimeValue.getAvg());\n  responseTimeValue=reuseResponseTimeCollector.resetAndGetValue();\n  Assert.assertEquals(0,responseTimeValue.getAvg());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void defaultTest() throws Exception {\n  int count=3;\n  ReuseResponseTimeCollector reuseResponseTimeCollector=new ReuseResponseTimeCollector();\n  long totalValue=0;\n  for (int i=0; i < count; i++) {\n    long value=Math.max(500,(random.nextLong() % 2500) + 500);\n    totalValue+=value;\n    reuseResponseTimeCollector.add(value);\n  }\n  ResponseTimeValue responseTimeValue=reuseResponseTimeCollector.resetAndGetValue();\n  Assert.assertEquals(totalValue / count,responseTimeValue.getAvg());\n  responseTimeValue=reuseResponseTimeCollector.resetAndGetValue();\n  Assert.assertEquals(0,responseTimeValue.getAvg());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Assert.assertEquals(0,responseTimeValue.getAvg());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 46,
    "startColumnNumber" : 8,
    "endLineNumber" : 46,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 49,
    "startColumnNumber" : 8,
    "endLineNumber" : 49,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}