{
  "id" : 206,
  "expression" : "sourcePath.toString()",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-maven-plugin/src/test/java/com/google/cloud/tools/jib/maven/MavenLayerConfigurationsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sourcePath.toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 55,
      "startColumnNumber" : 60,
      "endLineNumber" : 55,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Mockito.when(mockBuild.getSourceDirectory()).thenReturn(sourcePath.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Mockito.when(mockBuild.getSourceDirectory()).thenReturn(sourcePath.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 50,
        "startColumnNumber" : 48,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path sourcePath=Paths.get(Resources.getResource(\"application/source\").toURI());\n  Path outputPath=Paths.get(Resources.getResource(\"application/output\").toURI());\n  Mockito.when(mockMavenProject.getBuild()).thenReturn(mockBuild);\n  Mockito.when(mockBuild.getSourceDirectory()).thenReturn(sourcePath.toString());\n  Mockito.when(mockBuild.getOutputDirectory()).thenReturn(outputPath.toString());\n  Set<Artifact> artifacts=ImmutableSet.of(makeArtifact(Paths.get(\"application\",\"dependencies\",\"libraryB.jar\")),makeArtifact(Paths.get(\"application\",\"dependencies\",\"libraryA.jar\")),testRepository.findArtifact(\"com.test\",\"dependency\",\"1.0.0\"),testRepository.findArtifact(\"com.test\",\"dependencyX\",\"1.0.0-SNAPSHOT\"));\n  Mockito.when(mockMavenProject.getArtifacts()).thenReturn(artifacts);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1056,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Before public void setUp() throws URISyntaxException {\n  Path sourcePath=Paths.get(Resources.getResource(\"application/source\").toURI());\n  Path outputPath=Paths.get(Resources.getResource(\"application/output\").toURI());\n  Mockito.when(mockMavenProject.getBuild()).thenReturn(mockBuild);\n  Mockito.when(mockBuild.getSourceDirectory()).thenReturn(sourcePath.toString());\n  Mockito.when(mockBuild.getOutputDirectory()).thenReturn(outputPath.toString());\n  Set<Artifact> artifacts=ImmutableSet.of(makeArtifact(Paths.get(\"application\",\"dependencies\",\"libraryB.jar\")),makeArtifact(Paths.get(\"application\",\"dependencies\",\"libraryA.jar\")),testRepository.findArtifact(\"com.test\",\"dependency\",\"1.0.0\"),testRepository.findArtifact(\"com.test\",\"dependencyX\",\"1.0.0-SNAPSHOT\"));\n  Mockito.when(mockMavenProject.getArtifacts()).thenReturn(artifacts);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Mockito.when(mockBuild.getSourceDirectory()).thenReturn(sourcePath.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 55,
    "startColumnNumber" : 60,
    "endLineNumber" : 55,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}