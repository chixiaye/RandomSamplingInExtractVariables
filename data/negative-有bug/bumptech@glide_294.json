{
  "id" : 294,
  "expression" : "-1",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/third_party/disklrucache/src/main/java/com/bumptech/glide/disklrucache/StrictLineReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "-1",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 163,
      "startColumnNumber" : 14,
      "endLineNumber" : 163,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 16
      },
      "nodeContext" : "end=-1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 17
      },
      "nodeContext" : "end=-1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 160,
        "startColumnNumber" : 19,
        "endLineNumber" : 175,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  out.write(buf,pos,end - pos);\n  end=-1;\n  fillBuf();\n  for (int i=pos; i != end; ++i) {\n    if (buf[i] == LF) {\n      if (i != pos) {\n        out.write(buf,pos,i - pos);\n      }\n      pos=i + 1;\n      return out.toString();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 523,
        "startLineNumber" : 160,
        "startColumnNumber" : 6,
        "endLineNumber" : 175,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (true) {\n  out.write(buf,pos,end - pos);\n  end=-1;\n  fillBuf();\n  for (int i=pos; i != end; ++i) {\n    if (buf[i] == LF) {\n      if (i != pos) {\n        out.write(buf,pos,i - pos);\n      }\n      pos=i + 1;\n      return out.toString();\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 63,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1866,
        "startLineNumber" : 126,
        "startColumnNumber" : 22,
        "endLineNumber" : 176,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (buf == null) {\n    throw new IOException(\"LineReader is closed\");\n  }\n  if (pos >= end) {\n    fillBuf();\n  }\n  for (int i=pos; i != end; ++i) {\n    if (buf[i] == LF) {\n      int lineEnd=(i != pos && buf[i - 1] == CR) ? i - 1 : i;\n      String res=new String(buf,pos,lineEnd - pos,charset.name());\n      pos=i + 1;\n      return res;\n    }\n  }\n  ByteArrayOutputStream out=new ByteArrayOutputStream(end - pos + 80){\n    @Override public String toString(){\n      int length=(count > 0 && buf[count - 1] == CR) ? count - 1 : count;\n      try {\n        return new String(buf,0,length,charset.name());\n      }\n catch (      UnsupportedEncodingException e) {\n        throw new AssertionError(e);\n      }\n    }\n  }\n;\n  while (true) {\n    out.write(buf,pos,end - pos);\n    end=-1;\n    fillBuf();\n    for (int i=pos; i != end; ++i) {\n      if (buf[i] == LF) {\n        if (i != pos) {\n          out.write(buf,pos,i - pos);\n        }\n        pos=i + 1;\n        return out.toString();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1884,
        "startLineNumber" : 126,
        "startColumnNumber" : 4,
        "endLineNumber" : 176,
        "endColumnNumber" : 5
      },
      "nodeContext" : "synchronized (in) {\n  if (buf == null) {\n    throw new IOException(\"LineReader is closed\");\n  }\n  if (pos >= end) {\n    fillBuf();\n  }\n  for (int i=pos; i != end; ++i) {\n    if (buf[i] == LF) {\n      int lineEnd=(i != pos && buf[i - 1] == CR) ? i - 1 : i;\n      String res=new String(buf,pos,lineEnd - pos,charset.name());\n      pos=i + 1;\n      return res;\n    }\n  }\n  ByteArrayOutputStream out=new ByteArrayOutputStream(end - pos + 80){\n    @Override public String toString(){\n      int length=(count > 0 && buf[count - 1] == CR) ? count - 1 : count;\n      try {\n        return new String(buf,0,length,charset.name());\n      }\n catch (      UnsupportedEncodingException e) {\n        throw new AssertionError(e);\n      }\n    }\n  }\n;\n  while (true) {\n    out.write(buf,pos,end - pos);\n    end=-1;\n    fillBuf();\n    for (int i=pos; i != end; ++i) {\n      if (buf[i] == LF) {\n        if (i != pos) {\n          out.write(buf,pos,i - pos);\n        }\n        pos=i + 1;\n        return out.toString();\n      }\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 214,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1896,
        "startLineNumber" : 125,
        "startColumnNumber" : 46,
        "endLineNumber" : 177,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nsynchronized (in) {\n    if (buf == null) {\n      throw new IOException(\"LineReader is closed\");\n    }\n    if (pos >= end) {\n      fillBuf();\n    }\n    for (int i=pos; i != end; ++i) {\n      if (buf[i] == LF) {\n        int lineEnd=(i != pos && buf[i - 1] == CR) ? i - 1 : i;\n        String res=new String(buf,pos,lineEnd - pos,charset.name());\n        pos=i + 1;\n        return res;\n      }\n    }\n    ByteArrayOutputStream out=new ByteArrayOutputStream(end - pos + 80){\n      @Override public String toString(){\n        int length=(count > 0 && buf[count - 1] == CR) ? count - 1 : count;\n        try {\n          return new String(buf,0,length,charset.name());\n        }\n catch (        UnsupportedEncodingException e) {\n          throw new AssertionError(e);\n        }\n      }\n    }\n;\n    while (true) {\n      out.write(buf,pos,end - pos);\n      end=-1;\n      fillBuf();\n      for (int i=pos; i != end; ++i) {\n        if (buf[i] == LF) {\n          if (i != pos) {\n            out.write(buf,pos,i - pos);\n          }\n          pos=i + 1;\n          return out.toString();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2267,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 177,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Reads the next line. A line ends with  {@code \"\\n\"} or {@code \"\\r\\n\"}, this end of line marker is not included in the result.\n * @return the next line from the input.\n * @throws IOException for underlying {@code InputStream} errors.\n * @throws EOFException for the end of source stream.\n */\npublic String readLine() throws IOException {\nsynchronized (in) {\n    if (buf == null) {\n      throw new IOException(\"LineReader is closed\");\n    }\n    if (pos >= end) {\n      fillBuf();\n    }\n    for (int i=pos; i != end; ++i) {\n      if (buf[i] == LF) {\n        int lineEnd=(i != pos && buf[i - 1] == CR) ? i - 1 : i;\n        String res=new String(buf,pos,lineEnd - pos,charset.name());\n        pos=i + 1;\n        return res;\n      }\n    }\n    ByteArrayOutputStream out=new ByteArrayOutputStream(end - pos + 80){\n      @Override public String toString(){\n        int length=(count > 0 && buf[count - 1] == CR) ? count - 1 : count;\n        try {\n          return new String(buf,0,length,charset.name());\n        }\n catch (        UnsupportedEncodingException e) {\n          throw new AssertionError(e);\n        }\n      }\n    }\n;\n    while (true) {\n      out.write(buf,pos,end - pos);\n      end=-1;\n      fillBuf();\n      for (int i=pos; i != end; ++i) {\n        if (buf[i] == LF) {\n          if (i != pos) {\n            out.write(buf,pos,i - pos);\n          }\n          pos=i + 1;\n          return out.toString();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 17
      },
      "nodeContext" : "end=-1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 163,
    "startColumnNumber" : 14,
    "endLineNumber" : 163,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}