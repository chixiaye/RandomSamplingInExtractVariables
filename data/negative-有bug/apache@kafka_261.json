{
  "id" : 261,
  "expression" : "schema.field(fieldName).schema()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/SetSchemaMetadataTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "schema.field(fieldName).schema()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 167,
      "startColumnNumber" : 23,
      "endLineNumber" : 167,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 167,
        "startColumnNumber" : 12,
        "endLineNumber" : 167,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertSame(schema.field(fieldName).schema(),value.schema().field(fieldName).schema())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 167,
        "startColumnNumber" : 12,
        "endLineNumber" : 167,
        "endColumnNumber" : 99
      },
      "nodeContext" : "assertSame(schema.field(fieldName).schema(),value.schema().field(fieldName).schema());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 163,
        "startColumnNumber" : 44,
        "endLineNumber" : 168,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String fieldName=field.name();\n  assertEquals(schema.field(fieldName).name(),value.schema().field(fieldName).name());\n  assertEquals(schema.field(fieldName).index(),value.schema().field(fieldName).index());\n  assertSame(schema.field(fieldName).schema(),value.schema().field(fieldName).schema());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 168,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Field field : schema.fields()) {\n  String fieldName=field.name();\n  assertEquals(schema.field(fieldName).name(),value.schema().field(fieldName).name());\n  assertEquals(schema.field(fieldName).index(),value.schema().field(fieldName).index());\n  assertSame(schema.field(fieldName).schema(),value.schema().field(fieldName).schema());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 160,
        "startColumnNumber" : 69,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSame(schema,value.schema());\n  assertEquals(schema.name(),value.schema().name());\n  for (  Field field : schema.fields()) {\n    String fieldName=field.name();\n    assertEquals(schema.field(fieldName).name(),value.schema().field(fieldName).name());\n    assertEquals(schema.field(fieldName).index(),value.schema().field(fieldName).index());\n    assertSame(schema.field(fieldName).schema(),value.schema().field(fieldName).schema());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 160,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void assertMatchingSchema(Struct value,Schema schema){\n  assertSame(schema,value.schema());\n  assertEquals(schema.name(),value.schema().name());\n  for (  Field field : schema.fields()) {\n    String fieldName=field.name();\n    assertEquals(schema.field(fieldName).name(),value.schema().field(fieldName).name());\n    assertEquals(schema.field(fieldName).index(),value.schema().field(fieldName).index());\n    assertSame(schema.field(fieldName).schema(),value.schema().field(fieldName).schema());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 167,
        "startColumnNumber" : 12,
        "endLineNumber" : 167,
        "endColumnNumber" : 99
      },
      "nodeContext" : "assertSame(schema.field(fieldName).schema(),value.schema().field(fieldName).schema());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "org.apache.kafka.connect.data.Schema"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 167,
    "startColumnNumber" : 23,
    "endLineNumber" : 167,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}