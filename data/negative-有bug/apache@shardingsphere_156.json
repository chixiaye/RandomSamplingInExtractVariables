{
  "id" : 156,
  "expression" : "singleTableRule",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/handler/distsql/rdl/resource/DropResourceBackendHandlerTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "singleTableRule",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 135,
      "startColumnNumber" : 71,
      "endLineNumber" : 135,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 135,
        "startColumnNumber" : 49,
        "endLineNumber" : 135,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Collections.singleton(singleTableRule)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 88
      },
      "nodeContext" : "when(ruleMetaData.getRules()).thenReturn(Collections.singleton(singleTableRule))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 89
      },
      "nodeContext" : "when(ruleMetaData.getRules()).thenReturn(Collections.singleton(singleTableRule));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 963,
        "startLineNumber" : 134,
        "startColumnNumber" : 67,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  when(ruleMetaData.getRules()).thenReturn(Collections.singleton(singleTableRule));\n  when(singleTableRule.getType()).thenReturn(\"SingleTableRule\");\n  DataNode dataNode=mock(DataNode.class);\n  when(dataNode.getDataSourceName()).thenReturn(\"foo_ds\");\n  when(singleTableRule.getAllDataNodes()).thenReturn(Collections.singletonMap(\"\",Collections.singleton(dataNode)));\n  when(resource.getDataSources()).thenReturn(Collections.singletonMap(\"foo_ds\",dataSource));\n  when(database.getResource()).thenReturn(resource);\n  when(contextManager.getMetaDataContexts().getMetaData().getDatabase(\"test\")).thenReturn(database);\n  try {\n    dropResourceBackendHandler.execute(\"test\",new DropResourceStatement(Collections.singleton(\"foo_ds\"),false));\n  }\n catch (  final SQLException ex) {\n    assertThat(ex.getMessage(),is(\"Resource [foo_ds] is still used by [SingleTableRule].\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1036,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertResourceNameInUseWithoutIgnoreSingleTables(){\n  when(ruleMetaData.getRules()).thenReturn(Collections.singleton(singleTableRule));\n  when(singleTableRule.getType()).thenReturn(\"SingleTableRule\");\n  DataNode dataNode=mock(DataNode.class);\n  when(dataNode.getDataSourceName()).thenReturn(\"foo_ds\");\n  when(singleTableRule.getAllDataNodes()).thenReturn(Collections.singletonMap(\"\",Collections.singleton(dataNode)));\n  when(resource.getDataSources()).thenReturn(Collections.singletonMap(\"foo_ds\",dataSource));\n  when(database.getResource()).thenReturn(resource);\n  when(contextManager.getMetaDataContexts().getMetaData().getDatabase(\"test\")).thenReturn(database);\n  try {\n    dropResourceBackendHandler.execute(\"test\",new DropResourceStatement(Collections.singleton(\"foo_ds\"),false));\n  }\n catch (  final SQLException ex) {\n    assertThat(ex.getMessage(),is(\"Resource [foo_ds] is still used by [SingleTableRule].\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 89
      },
      "nodeContext" : "when(ruleMetaData.getRules()).thenReturn(Collections.singleton(singleTableRule));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.singletable.rule.SingleTableRule"
  }, {
    "nodeContext" : "singleTableRule",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 136,
      "startColumnNumber" : 13,
      "endLineNumber" : 136,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 136,
        "startColumnNumber" : 13,
        "endLineNumber" : 136,
        "endColumnNumber" : 38
      },
      "nodeContext" : "singleTableRule.getType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 39
      },
      "nodeContext" : "when(singleTableRule.getType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 69
      },
      "nodeContext" : "when(singleTableRule.getType()).thenReturn(\"SingleTableRule\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 70
      },
      "nodeContext" : "when(singleTableRule.getType()).thenReturn(\"SingleTableRule\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 963,
        "startLineNumber" : 134,
        "startColumnNumber" : 67,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  when(ruleMetaData.getRules()).thenReturn(Collections.singleton(singleTableRule));\n  when(singleTableRule.getType()).thenReturn(\"SingleTableRule\");\n  DataNode dataNode=mock(DataNode.class);\n  when(dataNode.getDataSourceName()).thenReturn(\"foo_ds\");\n  when(singleTableRule.getAllDataNodes()).thenReturn(Collections.singletonMap(\"\",Collections.singleton(dataNode)));\n  when(resource.getDataSources()).thenReturn(Collections.singletonMap(\"foo_ds\",dataSource));\n  when(database.getResource()).thenReturn(resource);\n  when(contextManager.getMetaDataContexts().getMetaData().getDatabase(\"test\")).thenReturn(database);\n  try {\n    dropResourceBackendHandler.execute(\"test\",new DropResourceStatement(Collections.singleton(\"foo_ds\"),false));\n  }\n catch (  final SQLException ex) {\n    assertThat(ex.getMessage(),is(\"Resource [foo_ds] is still used by [SingleTableRule].\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1036,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertResourceNameInUseWithoutIgnoreSingleTables(){\n  when(ruleMetaData.getRules()).thenReturn(Collections.singleton(singleTableRule));\n  when(singleTableRule.getType()).thenReturn(\"SingleTableRule\");\n  DataNode dataNode=mock(DataNode.class);\n  when(dataNode.getDataSourceName()).thenReturn(\"foo_ds\");\n  when(singleTableRule.getAllDataNodes()).thenReturn(Collections.singletonMap(\"\",Collections.singleton(dataNode)));\n  when(resource.getDataSources()).thenReturn(Collections.singletonMap(\"foo_ds\",dataSource));\n  when(database.getResource()).thenReturn(resource);\n  when(contextManager.getMetaDataContexts().getMetaData().getDatabase(\"test\")).thenReturn(database);\n  try {\n    dropResourceBackendHandler.execute(\"test\",new DropResourceStatement(Collections.singleton(\"foo_ds\"),false));\n  }\n catch (  final SQLException ex) {\n    assertThat(ex.getMessage(),is(\"Resource [foo_ds] is still used by [SingleTableRule].\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 70
      },
      "nodeContext" : "when(singleTableRule.getType()).thenReturn(\"SingleTableRule\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.singletable.rule.SingleTableRule"
  }, {
    "nodeContext" : "singleTableRule",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 139,
      "startColumnNumber" : 13,
      "endLineNumber" : 139,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 139,
        "startColumnNumber" : 13,
        "endLineNumber" : 139,
        "endColumnNumber" : 46
      },
      "nodeContext" : "singleTableRule.getAllDataNodes()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 47
      },
      "nodeContext" : "when(singleTableRule.getAllDataNodes())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 121
      },
      "nodeContext" : "when(singleTableRule.getAllDataNodes()).thenReturn(Collections.singletonMap(\"\",Collections.singleton(dataNode)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 122
      },
      "nodeContext" : "when(singleTableRule.getAllDataNodes()).thenReturn(Collections.singletonMap(\"\",Collections.singleton(dataNode)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 963,
        "startLineNumber" : 134,
        "startColumnNumber" : 67,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  when(ruleMetaData.getRules()).thenReturn(Collections.singleton(singleTableRule));\n  when(singleTableRule.getType()).thenReturn(\"SingleTableRule\");\n  DataNode dataNode=mock(DataNode.class);\n  when(dataNode.getDataSourceName()).thenReturn(\"foo_ds\");\n  when(singleTableRule.getAllDataNodes()).thenReturn(Collections.singletonMap(\"\",Collections.singleton(dataNode)));\n  when(resource.getDataSources()).thenReturn(Collections.singletonMap(\"foo_ds\",dataSource));\n  when(database.getResource()).thenReturn(resource);\n  when(contextManager.getMetaDataContexts().getMetaData().getDatabase(\"test\")).thenReturn(database);\n  try {\n    dropResourceBackendHandler.execute(\"test\",new DropResourceStatement(Collections.singleton(\"foo_ds\"),false));\n  }\n catch (  final SQLException ex) {\n    assertThat(ex.getMessage(),is(\"Resource [foo_ds] is still used by [SingleTableRule].\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1036,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertResourceNameInUseWithoutIgnoreSingleTables(){\n  when(ruleMetaData.getRules()).thenReturn(Collections.singleton(singleTableRule));\n  when(singleTableRule.getType()).thenReturn(\"SingleTableRule\");\n  DataNode dataNode=mock(DataNode.class);\n  when(dataNode.getDataSourceName()).thenReturn(\"foo_ds\");\n  when(singleTableRule.getAllDataNodes()).thenReturn(Collections.singletonMap(\"\",Collections.singleton(dataNode)));\n  when(resource.getDataSources()).thenReturn(Collections.singletonMap(\"foo_ds\",dataSource));\n  when(database.getResource()).thenReturn(resource);\n  when(contextManager.getMetaDataContexts().getMetaData().getDatabase(\"test\")).thenReturn(database);\n  try {\n    dropResourceBackendHandler.execute(\"test\",new DropResourceStatement(Collections.singleton(\"foo_ds\"),false));\n  }\n catch (  final SQLException ex) {\n    assertThat(ex.getMessage(),is(\"Resource [foo_ds] is still used by [SingleTableRule].\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 122
      },
      "nodeContext" : "when(singleTableRule.getAllDataNodes()).thenReturn(Collections.singletonMap(\"\",Collections.singleton(dataNode)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.singletable.rule.SingleTableRule"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 135,
    "startColumnNumber" : 71,
    "endLineNumber" : 135,
    "endColumnNumber" : 86
  }, {
    "charLength" : 15,
    "startLineNumber" : 136,
    "startColumnNumber" : 13,
    "endLineNumber" : 136,
    "endColumnNumber" : 28
  }, {
    "charLength" : 15,
    "startLineNumber" : 139,
    "startColumnNumber" : 13,
    "endLineNumber" : 139,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}