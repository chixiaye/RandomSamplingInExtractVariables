{
  "id" : 391,
  "expression" : "HttpHeaderNames.CONNECTION",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-http/src/test/java/io/netty/handler/codec/http/HttpServerKeepAliveHandlerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "HttpHeaderNames.CONNECTION",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 86,
      "startColumnNumber" : 35,
      "endLineNumber" : 86,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 85
      },
      "nodeContext" : "response.headers().set(HttpHeaderNames.CONNECTION,setResponseConnection)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 86
      },
      "nodeContext" : "response.headers().set(HttpHeaderNames.CONNECTION,setResponseConnection);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 85,
        "startColumnNumber" : 43,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  response.headers().set(HttpHeaderNames.CONNECTION,setResponseConnection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (setResponseConnection != null) {\n  response.headers().set(HttpHeaderNames.CONNECTION,setResponseConnection);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1118,
        "startLineNumber" : 81,
        "startColumnNumber" : 83,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FullHttpRequest request=new DefaultFullHttpRequest(httpVersion,HttpMethod.GET,\"/v1/foo/bar\");\n  setKeepAlive(request,REQUEST_KEEP_ALIVE.equals(sendKeepAlive));\n  HttpResponse response=new DefaultFullHttpResponse(httpVersion,responseStatus);\n  if (setResponseConnection != null) {\n    response.headers().set(HttpHeaderNames.CONNECTION,setResponseConnection);\n  }\n  setupMessageLength(response,setSelfDefinedMessageLength);\n  assertTrue(channel.writeInbound(request));\n  Object requestForwarded=channel.readInbound();\n  assertEquals(request,requestForwarded);\n  ReferenceCountUtil.release(requestForwarded);\n  channel.writeAndFlush(response);\n  HttpResponse writtenResponse=channel.readOutbound();\n  assertEquals(isKeepAliveResponseExpected,channel.isOpen(),\"channel.isOpen\");\n  assertEquals(isKeepAliveResponseExpected,isKeepAlive(writtenResponse),\"response keep-alive\");\n  ReferenceCountUtil.release(writtenResponse);\n  assertFalse(channel.finishAndReleaseAll());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1509,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @MethodSource(\"keepAliveProvider\") public void test_KeepAlive(boolean isKeepAliveResponseExpected,HttpVersion httpVersion,HttpResponseStatus responseStatus,String sendKeepAlive,int setSelfDefinedMessageLength,AsciiString setResponseConnection) throws Exception {\n  FullHttpRequest request=new DefaultFullHttpRequest(httpVersion,HttpMethod.GET,\"/v1/foo/bar\");\n  setKeepAlive(request,REQUEST_KEEP_ALIVE.equals(sendKeepAlive));\n  HttpResponse response=new DefaultFullHttpResponse(httpVersion,responseStatus);\n  if (setResponseConnection != null) {\n    response.headers().set(HttpHeaderNames.CONNECTION,setResponseConnection);\n  }\n  setupMessageLength(response,setSelfDefinedMessageLength);\n  assertTrue(channel.writeInbound(request));\n  Object requestForwarded=channel.readInbound();\n  assertEquals(request,requestForwarded);\n  ReferenceCountUtil.release(requestForwarded);\n  channel.writeAndFlush(response);\n  HttpResponse writtenResponse=channel.readOutbound();\n  assertEquals(isKeepAliveResponseExpected,channel.isOpen(),\"channel.isOpen\");\n  assertEquals(isKeepAliveResponseExpected,isKeepAlive(writtenResponse),\"response keep-alive\");\n  ReferenceCountUtil.release(writtenResponse);\n  assertFalse(channel.finishAndReleaseAll());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 86
      },
      "nodeContext" : "response.headers().set(HttpHeaderNames.CONNECTION,setResponseConnection);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.util.AsciiString"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 86,
    "startColumnNumber" : 35,
    "endLineNumber" : 86,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}