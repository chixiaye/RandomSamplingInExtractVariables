{
  "id" : 90,
  "expression" : "\"Couldn't convert result object [\" + obj + \"] to int\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-jdbc/src/main/java/org/springframework/jdbc/object/SqlFunction.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Couldn't convert result object [\" + obj + \"] to int\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 164,
      "startColumnNumber" : 45,
      "endLineNumber" : 164,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 164,
        "startColumnNumber" : 9,
        "endLineNumber" : 164,
        "endColumnNumber" : 99
      },
      "nodeContext" : "new TypeMismatchDataAccessException(\"Couldn't convert result object [\" + obj + \"] to int\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 164,
        "startColumnNumber" : 3,
        "endLineNumber" : 164,
        "endColumnNumber" : 100
      },
      "nodeContext" : "throw new TypeMismatchDataAccessException(\"Couldn't convert result object [\" + obj + \"] to int\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 163,
        "startColumnNumber" : 32,
        "endLineNumber" : 165,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  throw new TypeMismatchDataAccessException(\"Couldn't convert result object [\" + obj + \"] to int\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 163,
        "startColumnNumber" : 2,
        "endLineNumber" : 165,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!(obj instanceof Number)) {\n  throw new TypeMismatchDataAccessException(\"Couldn't convert result object [\" + obj + \"] to int\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 161,
        "startColumnNumber" : 38,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Object obj=super.findObject(parameters);\n  if (!(obj instanceof Number)) {\n    throw new TypeMismatchDataAccessException(\"Couldn't convert result object [\" + obj + \"] to int\");\n  }\n  return ((Number)obj).intValue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 546,
        "startLineNumber" : 154,
        "startColumnNumber" : 1,
        "endLineNumber" : 167,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Analogous to the SqlQuery.execute([]) method. This is a generic method to execute a query, taken a number of arguments.\n * @param parameters array of parameters. These will be objects orobject wrapper types for primitives.\n * @return the value of the function\n */\npublic int run(Object... parameters){\n  Object obj=super.findObject(parameters);\n  if (!(obj instanceof Number)) {\n    throw new TypeMismatchDataAccessException(\"Couldn't convert result object [\" + obj + \"] to int\");\n  }\n  return ((Number)obj).intValue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 164,
        "startColumnNumber" : 3,
        "endLineNumber" : 164,
        "endColumnNumber" : 100
      },
      "nodeContext" : "throw new TypeMismatchDataAccessException(\"Couldn't convert result object [\" + obj + \"] to int\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 9,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 164,
    "startColumnNumber" : 45,
    "endLineNumber" : 164,
    "endColumnNumber" : 98
  } ],
  "layoutRelationDataList" : [ ]
}