{
  "id" : 176,
  "expression" : "\"Port number is not equal\"",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-networking/src/test/java/com/baeldung/networking/uriurl/URIDemoLiveTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Port number is not equal\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 61,
      "startColumnNumber" : 21,
      "endLineNumber" : 61,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertEquals(\"Port number is not equal\",uri.getPort(),URIPORT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertEquals(\"Port number is not equal\",uri.getPort(),URIPORT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 666,
        "startLineNumber" : 54,
        "startColumnNumber" : 55,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNotNull(\"URI is null\",uri);\n  assertEquals(\"URI string is not equal\",uri.toString(),URISTRING);\n  assertEquals(\"Scheme is not equal\",uri.getScheme(),URISCHEME);\n  assertEquals(\"Authority is not equal\",uri.getAuthority(),URIAUTHORITY);\n  assertEquals(\"Host string is not equal\",uri.getHost(),URIHOST);\n  assertEquals(\"Path string is not equal\",uri.getPath(),URIPATH);\n  assertEquals(\"Port number is not equal\",uri.getPort(),URIPORT);\n  assertEquals(\"Query string is not equal\",uri.getQuery(),URIQUERY);\n  assertEquals(\"Fragment string is not equal\",uri.getFragment(),URIFRAGMENT);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenURI_whenURIIsParsed_thenSuccess(){\n  assertNotNull(\"URI is null\",uri);\n  assertEquals(\"URI string is not equal\",uri.toString(),URISTRING);\n  assertEquals(\"Scheme is not equal\",uri.getScheme(),URISCHEME);\n  assertEquals(\"Authority is not equal\",uri.getAuthority(),URIAUTHORITY);\n  assertEquals(\"Host string is not equal\",uri.getHost(),URIHOST);\n  assertEquals(\"Path string is not equal\",uri.getPath(),URIPATH);\n  assertEquals(\"Port number is not equal\",uri.getPort(),URIPORT);\n  assertEquals(\"Query string is not equal\",uri.getQuery(),URIQUERY);\n  assertEquals(\"Fragment string is not equal\",uri.getFragment(),URIFRAGMENT);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertEquals(\"Port number is not equal\",uri.getPort(),URIPORT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 61,
    "startColumnNumber" : 21,
    "endLineNumber" : 61,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}