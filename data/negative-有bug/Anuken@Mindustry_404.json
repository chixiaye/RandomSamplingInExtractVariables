{
  "id" : 404,
  "expression" : "size",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/production/GenericCrafter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "size",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 101,
      "startColumnNumber" : 57,
      "endLineNumber" : 101,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 101,
        "startColumnNumber" : 57,
        "endLineNumber" : 101,
        "endColumnNumber" : 66
      },
      "nodeContext" : "size * 4f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 101,
        "startColumnNumber" : 45,
        "endLineNumber" : 101,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Mathf.range(size * 4f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 101,
        "startColumnNumber" : 36,
        "endLineNumber" : 101,
        "endColumnNumber" : 67
      },
      "nodeContext" : "getX() + Mathf.range(size * 4f)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 101,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 100
      },
      "nodeContext" : "updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 101,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 101
      },
      "nodeContext" : "updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 100,
        "startColumnNumber" : 57,
        "endLineNumber" : 102,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Mathf.chanceDelta(updateEffectChance)) {\n  updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 94,
        "startColumnNumber" : 27,
        "endLineNumber" : 103,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  progress+=getProgressIncrease(craftTime);\n  totalProgress+=delta();\n  warmup=Mathf.lerpDelta(warmup,1f,0.02f);\n  if (Mathf.chanceDelta(updateEffectChance)) {\n    updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (consValid()) {\n  progress+=getProgressIncrease(craftTime);\n  totalProgress+=delta();\n  warmup=Mathf.lerpDelta(warmup,1f,0.02f);\n  if (Mathf.chanceDelta(updateEffectChance)) {\n    updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n  }\n}\n else {\n  warmup=Mathf.lerp(warmup,0f,0.02f);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1177,
        "startLineNumber" : 93,
        "startColumnNumber" : 32,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (consValid()) {\n    progress+=getProgressIncrease(craftTime);\n    totalProgress+=delta();\n    warmup=Mathf.lerpDelta(warmup,1f,0.02f);\n    if (Mathf.chanceDelta(updateEffectChance)) {\n      updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n    }\n  }\n else {\n    warmup=Mathf.lerp(warmup,0f,0.02f);\n  }\n  if (progress >= 1f) {\n    consume();\n    if (outputItem != null) {\n      for (int i=0; i < outputItem.amount; i++) {\n        offload(outputItem.item);\n      }\n    }\n    if (outputLiquid != null) {\n      handleLiquid(this,outputLiquid.liquid,outputLiquid.amount);\n    }\n    craftEffect.at(x,y);\n    progress=0f;\n  }\n  if (outputItem != null && timer(timerDump,dumpTime)) {\n    dump(outputItem.item);\n  }\n  if (outputLiquid != null) {\n    dumpLiquid(outputLiquid.liquid);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void updateTile(){\n  if (consValid()) {\n    progress+=getProgressIncrease(craftTime);\n    totalProgress+=delta();\n    warmup=Mathf.lerpDelta(warmup,1f,0.02f);\n    if (Mathf.chanceDelta(updateEffectChance)) {\n      updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n    }\n  }\n else {\n    warmup=Mathf.lerp(warmup,0f,0.02f);\n  }\n  if (progress >= 1f) {\n    consume();\n    if (outputItem != null) {\n      for (int i=0; i < outputItem.amount; i++) {\n        offload(outputItem.item);\n      }\n    }\n    if (outputLiquid != null) {\n      handleLiquid(this,outputLiquid.liquid,outputLiquid.amount);\n    }\n    craftEffect.at(x,y);\n    progress=0f;\n  }\n  if (outputItem != null && timer(timerDump,dumpTime)) {\n    dump(outputItem.item);\n  }\n  if (outputLiquid != null) {\n    dumpLiquid(outputLiquid.liquid);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 101,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 101
      },
      "nodeContext" : "updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "size",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 101,
      "startColumnNumber" : 90,
      "endLineNumber" : 101,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 101,
        "startColumnNumber" : 90,
        "endLineNumber" : 101,
        "endColumnNumber" : 98
      },
      "nodeContext" : "size * 4",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 101,
        "startColumnNumber" : 78,
        "endLineNumber" : 101,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Mathf.range(size * 4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 101,
        "startColumnNumber" : 69,
        "endLineNumber" : 101,
        "endColumnNumber" : 99
      },
      "nodeContext" : "getY() + Mathf.range(size * 4)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 101,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 100
      },
      "nodeContext" : "updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 101,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 101
      },
      "nodeContext" : "updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 100,
        "startColumnNumber" : 57,
        "endLineNumber" : 102,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Mathf.chanceDelta(updateEffectChance)) {\n  updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 94,
        "startColumnNumber" : 27,
        "endLineNumber" : 103,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  progress+=getProgressIncrease(craftTime);\n  totalProgress+=delta();\n  warmup=Mathf.lerpDelta(warmup,1f,0.02f);\n  if (Mathf.chanceDelta(updateEffectChance)) {\n    updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (consValid()) {\n  progress+=getProgressIncrease(craftTime);\n  totalProgress+=delta();\n  warmup=Mathf.lerpDelta(warmup,1f,0.02f);\n  if (Mathf.chanceDelta(updateEffectChance)) {\n    updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n  }\n}\n else {\n  warmup=Mathf.lerp(warmup,0f,0.02f);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1177,
        "startLineNumber" : 93,
        "startColumnNumber" : 32,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (consValid()) {\n    progress+=getProgressIncrease(craftTime);\n    totalProgress+=delta();\n    warmup=Mathf.lerpDelta(warmup,1f,0.02f);\n    if (Mathf.chanceDelta(updateEffectChance)) {\n      updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n    }\n  }\n else {\n    warmup=Mathf.lerp(warmup,0f,0.02f);\n  }\n  if (progress >= 1f) {\n    consume();\n    if (outputItem != null) {\n      for (int i=0; i < outputItem.amount; i++) {\n        offload(outputItem.item);\n      }\n    }\n    if (outputLiquid != null) {\n      handleLiquid(this,outputLiquid.liquid,outputLiquid.amount);\n    }\n    craftEffect.at(x,y);\n    progress=0f;\n  }\n  if (outputItem != null && timer(timerDump,dumpTime)) {\n    dump(outputItem.item);\n  }\n  if (outputLiquid != null) {\n    dumpLiquid(outputLiquid.liquid);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void updateTile(){\n  if (consValid()) {\n    progress+=getProgressIncrease(craftTime);\n    totalProgress+=delta();\n    warmup=Mathf.lerpDelta(warmup,1f,0.02f);\n    if (Mathf.chanceDelta(updateEffectChance)) {\n      updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n    }\n  }\n else {\n    warmup=Mathf.lerp(warmup,0f,0.02f);\n  }\n  if (progress >= 1f) {\n    consume();\n    if (outputItem != null) {\n      for (int i=0; i < outputItem.amount; i++) {\n        offload(outputItem.item);\n      }\n    }\n    if (outputLiquid != null) {\n      handleLiquid(this,outputLiquid.liquid,outputLiquid.amount);\n    }\n    craftEffect.at(x,y);\n    progress=0f;\n  }\n  if (outputItem != null && timer(timerDump,dumpTime)) {\n    dump(outputItem.item);\n  }\n  if (outputLiquid != null) {\n    dumpLiquid(outputLiquid.liquid);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 101,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 101
      },
      "nodeContext" : "updateEffect.at(getX() + Mathf.range(size * 4f),getY() + Mathf.range(size * 4));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 101,
    "startColumnNumber" : 57,
    "endLineNumber" : 101,
    "endColumnNumber" : 61
  }, {
    "charLength" : 4,
    "startLineNumber" : 101,
    "startColumnNumber" : 90,
    "endLineNumber" : 101,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}