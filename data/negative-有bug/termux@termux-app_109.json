{
  "id" : 109,
  "expression" : "packageInfo",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/termux-shared/src/main/java/com/termux/shared/termux/shell/command/environment/TermuxAppShellEnvironment.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "packageInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 101,
      "startColumnNumber" : 12,
      "endLineNumber" : 101,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 31
      },
      "nodeContext" : "packageInfo == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 40
      },
      "nodeContext" : "if (packageInfo == null) return;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4821,
        "startLineNumber" : 89,
        "startColumnNumber" : 100,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean isTermuxApp=TermuxConstants.TERMUX_PACKAGE_NAME.equals(currentPackageContext.getPackageName());\n  if (termuxAppEnvironment != null && isTermuxApp)   return;\n  termuxAppEnvironment=null;\n  String packageName=TermuxConstants.TERMUX_PACKAGE_NAME;\n  PackageInfo packageInfo=PackageUtils.getPackageInfoForPackage(currentPackageContext,packageName);\n  if (packageInfo == null)   return;\n  ApplicationInfo applicationInfo=PackageUtils.getApplicationInfoForPackage(currentPackageContext,packageName);\n  if (applicationInfo == null || !applicationInfo.enabled)   return;\n  HashMap<String,String> environment=new HashMap<>();\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_VERSION,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_NAME,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_CODE,String.valueOf(PackageUtils.getVersionCodeForPackage(packageInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PACKAGE_NAME,packageName);\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PID,TermuxUtils.getTermuxAppPID(currentPackageContext));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__UID,String.valueOf(PackageUtils.getUidForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__TARGET_SDK,String.valueOf(PackageUtils.getTargetSDKForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_DEBUGGABLE_BUILD,PackageUtils.isAppForPackageADebuggableBuild(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__APK_PATH,PackageUtils.getBaseAPKPathForPackage(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_INSTALLED_ON_EXTERNAL_STORAGE,PackageUtils.isAppInstalledOnExternalStorage(applicationInfo));\n  putTermuxAPKSignature(currentPackageContext,environment);\n  Context termuxPackageContext=TermuxUtils.getTermuxPackageContext(currentPackageContext);\n  if (termuxPackageContext != null) {\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER != null)     environment.put(ENV_TERMUX_APP__PACKAGE_MANAGER,TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER.getName());\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT != null)     environment.put(ENV_TERMUX_APP__PACKAGE_VARIANT,TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT.getName());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__AM_SOCKET_SERVER_ENABLED,TermuxAmSocketServer.getTermuxAppAMSocketServerEnabled(currentPackageContext));\n    String filesDirPath=currentPackageContext.getFilesDir().getAbsolutePath();\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__FILES_DIR,filesDirPath);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_PROCESS_CONTEXT,SELinuxUtils.getContext());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_FILE_CONTEXT,SELinuxUtils.getFileContext(filesDirPath));\n    String seInfoUser=PackageUtils.getApplicationInfoSeInfoUserForPackage(applicationInfo);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_INFO,PackageUtils.getApplicationInfoSeInfoForPackage(applicationInfo) + (DataUtils.isNullOrEmpty(seInfoUser) ? \"\" : seInfoUser));\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)     ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__USER_ID,String.valueOf(PackageUtils.getUserIdForPackage(currentPackageContext)));\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PROFILE_OWNER,PackageUtils.getProfileOwnerPackageNameForUser(currentPackageContext));\n  }\n  termuxAppEnvironment=environment;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 351,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5000,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Set Termux app environment variables in  {@link #termuxAppEnvironment}. \n */\npublic synchronized static void setTermuxAppEnvironment(@NonNull Context currentPackageContext){\n  boolean isTermuxApp=TermuxConstants.TERMUX_PACKAGE_NAME.equals(currentPackageContext.getPackageName());\n  if (termuxAppEnvironment != null && isTermuxApp)   return;\n  termuxAppEnvironment=null;\n  String packageName=TermuxConstants.TERMUX_PACKAGE_NAME;\n  PackageInfo packageInfo=PackageUtils.getPackageInfoForPackage(currentPackageContext,packageName);\n  if (packageInfo == null)   return;\n  ApplicationInfo applicationInfo=PackageUtils.getApplicationInfoForPackage(currentPackageContext,packageName);\n  if (applicationInfo == null || !applicationInfo.enabled)   return;\n  HashMap<String,String> environment=new HashMap<>();\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_VERSION,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_NAME,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_CODE,String.valueOf(PackageUtils.getVersionCodeForPackage(packageInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PACKAGE_NAME,packageName);\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PID,TermuxUtils.getTermuxAppPID(currentPackageContext));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__UID,String.valueOf(PackageUtils.getUidForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__TARGET_SDK,String.valueOf(PackageUtils.getTargetSDKForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_DEBUGGABLE_BUILD,PackageUtils.isAppForPackageADebuggableBuild(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__APK_PATH,PackageUtils.getBaseAPKPathForPackage(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_INSTALLED_ON_EXTERNAL_STORAGE,PackageUtils.isAppInstalledOnExternalStorage(applicationInfo));\n  putTermuxAPKSignature(currentPackageContext,environment);\n  Context termuxPackageContext=TermuxUtils.getTermuxPackageContext(currentPackageContext);\n  if (termuxPackageContext != null) {\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER != null)     environment.put(ENV_TERMUX_APP__PACKAGE_MANAGER,TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER.getName());\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT != null)     environment.put(ENV_TERMUX_APP__PACKAGE_VARIANT,TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT.getName());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__AM_SOCKET_SERVER_ENABLED,TermuxAmSocketServer.getTermuxAppAMSocketServerEnabled(currentPackageContext));\n    String filesDirPath=currentPackageContext.getFilesDir().getAbsolutePath();\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__FILES_DIR,filesDirPath);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_PROCESS_CONTEXT,SELinuxUtils.getContext());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_FILE_CONTEXT,SELinuxUtils.getFileContext(filesDirPath));\n    String seInfoUser=PackageUtils.getApplicationInfoSeInfoUserForPackage(applicationInfo);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_INFO,PackageUtils.getApplicationInfoSeInfoForPackage(applicationInfo) + (DataUtils.isNullOrEmpty(seInfoUser) ? \"\" : seInfoUser));\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)     ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__USER_ID,String.valueOf(PackageUtils.getUserIdForPackage(currentPackageContext)));\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PROFILE_OWNER,PackageUtils.getProfileOwnerPackageNameForUser(currentPackageContext));\n  }\n  termuxAppEnvironment=environment;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 364,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 40
      },
      "nodeContext" : "if (packageInfo == null) return;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.termux.shared.termux.shell.command.environment.PackageInfo"
  }, {
    "nodeContext" : "packageInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 107,
      "startColumnNumber" : 115,
      "endLineNumber" : 107,
      "endColumnNumber" : 126
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 107,
        "startColumnNumber" : 77,
        "endLineNumber" : 107,
        "endColumnNumber" : 127
      },
      "nodeContext" : "PackageUtils.getVersionNameForPackage(packageInfo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 128
      },
      "nodeContext" : "ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_VERSION,PackageUtils.getVersionNameForPackage(packageInfo))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 129
      },
      "nodeContext" : "ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_VERSION,PackageUtils.getVersionNameForPackage(packageInfo));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4821,
        "startLineNumber" : 89,
        "startColumnNumber" : 100,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean isTermuxApp=TermuxConstants.TERMUX_PACKAGE_NAME.equals(currentPackageContext.getPackageName());\n  if (termuxAppEnvironment != null && isTermuxApp)   return;\n  termuxAppEnvironment=null;\n  String packageName=TermuxConstants.TERMUX_PACKAGE_NAME;\n  PackageInfo packageInfo=PackageUtils.getPackageInfoForPackage(currentPackageContext,packageName);\n  if (packageInfo == null)   return;\n  ApplicationInfo applicationInfo=PackageUtils.getApplicationInfoForPackage(currentPackageContext,packageName);\n  if (applicationInfo == null || !applicationInfo.enabled)   return;\n  HashMap<String,String> environment=new HashMap<>();\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_VERSION,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_NAME,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_CODE,String.valueOf(PackageUtils.getVersionCodeForPackage(packageInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PACKAGE_NAME,packageName);\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PID,TermuxUtils.getTermuxAppPID(currentPackageContext));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__UID,String.valueOf(PackageUtils.getUidForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__TARGET_SDK,String.valueOf(PackageUtils.getTargetSDKForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_DEBUGGABLE_BUILD,PackageUtils.isAppForPackageADebuggableBuild(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__APK_PATH,PackageUtils.getBaseAPKPathForPackage(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_INSTALLED_ON_EXTERNAL_STORAGE,PackageUtils.isAppInstalledOnExternalStorage(applicationInfo));\n  putTermuxAPKSignature(currentPackageContext,environment);\n  Context termuxPackageContext=TermuxUtils.getTermuxPackageContext(currentPackageContext);\n  if (termuxPackageContext != null) {\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER != null)     environment.put(ENV_TERMUX_APP__PACKAGE_MANAGER,TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER.getName());\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT != null)     environment.put(ENV_TERMUX_APP__PACKAGE_VARIANT,TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT.getName());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__AM_SOCKET_SERVER_ENABLED,TermuxAmSocketServer.getTermuxAppAMSocketServerEnabled(currentPackageContext));\n    String filesDirPath=currentPackageContext.getFilesDir().getAbsolutePath();\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__FILES_DIR,filesDirPath);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_PROCESS_CONTEXT,SELinuxUtils.getContext());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_FILE_CONTEXT,SELinuxUtils.getFileContext(filesDirPath));\n    String seInfoUser=PackageUtils.getApplicationInfoSeInfoUserForPackage(applicationInfo);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_INFO,PackageUtils.getApplicationInfoSeInfoForPackage(applicationInfo) + (DataUtils.isNullOrEmpty(seInfoUser) ? \"\" : seInfoUser));\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)     ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__USER_ID,String.valueOf(PackageUtils.getUserIdForPackage(currentPackageContext)));\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PROFILE_OWNER,PackageUtils.getProfileOwnerPackageNameForUser(currentPackageContext));\n  }\n  termuxAppEnvironment=environment;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 351,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5000,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Set Termux app environment variables in  {@link #termuxAppEnvironment}. \n */\npublic synchronized static void setTermuxAppEnvironment(@NonNull Context currentPackageContext){\n  boolean isTermuxApp=TermuxConstants.TERMUX_PACKAGE_NAME.equals(currentPackageContext.getPackageName());\n  if (termuxAppEnvironment != null && isTermuxApp)   return;\n  termuxAppEnvironment=null;\n  String packageName=TermuxConstants.TERMUX_PACKAGE_NAME;\n  PackageInfo packageInfo=PackageUtils.getPackageInfoForPackage(currentPackageContext,packageName);\n  if (packageInfo == null)   return;\n  ApplicationInfo applicationInfo=PackageUtils.getApplicationInfoForPackage(currentPackageContext,packageName);\n  if (applicationInfo == null || !applicationInfo.enabled)   return;\n  HashMap<String,String> environment=new HashMap<>();\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_VERSION,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_NAME,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_CODE,String.valueOf(PackageUtils.getVersionCodeForPackage(packageInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PACKAGE_NAME,packageName);\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PID,TermuxUtils.getTermuxAppPID(currentPackageContext));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__UID,String.valueOf(PackageUtils.getUidForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__TARGET_SDK,String.valueOf(PackageUtils.getTargetSDKForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_DEBUGGABLE_BUILD,PackageUtils.isAppForPackageADebuggableBuild(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__APK_PATH,PackageUtils.getBaseAPKPathForPackage(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_INSTALLED_ON_EXTERNAL_STORAGE,PackageUtils.isAppInstalledOnExternalStorage(applicationInfo));\n  putTermuxAPKSignature(currentPackageContext,environment);\n  Context termuxPackageContext=TermuxUtils.getTermuxPackageContext(currentPackageContext);\n  if (termuxPackageContext != null) {\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER != null)     environment.put(ENV_TERMUX_APP__PACKAGE_MANAGER,TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER.getName());\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT != null)     environment.put(ENV_TERMUX_APP__PACKAGE_VARIANT,TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT.getName());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__AM_SOCKET_SERVER_ENABLED,TermuxAmSocketServer.getTermuxAppAMSocketServerEnabled(currentPackageContext));\n    String filesDirPath=currentPackageContext.getFilesDir().getAbsolutePath();\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__FILES_DIR,filesDirPath);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_PROCESS_CONTEXT,SELinuxUtils.getContext());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_FILE_CONTEXT,SELinuxUtils.getFileContext(filesDirPath));\n    String seInfoUser=PackageUtils.getApplicationInfoSeInfoUserForPackage(applicationInfo);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_INFO,PackageUtils.getApplicationInfoSeInfoForPackage(applicationInfo) + (DataUtils.isNullOrEmpty(seInfoUser) ? \"\" : seInfoUser));\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)     ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__USER_ID,String.valueOf(PackageUtils.getUserIdForPackage(currentPackageContext)));\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PROFILE_OWNER,PackageUtils.getProfileOwnerPackageNameForUser(currentPackageContext));\n  }\n  termuxAppEnvironment=environment;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 364,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 129
      },
      "nodeContext" : "ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_VERSION,PackageUtils.getVersionNameForPackage(packageInfo));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.termux.shared.termux.shell.command.environment.PackageInfo"
  }, {
    "nodeContext" : "packageInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 108,
      "startColumnNumber" : 125,
      "endLineNumber" : 108,
      "endColumnNumber" : 136
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 108,
        "startColumnNumber" : 87,
        "endLineNumber" : 108,
        "endColumnNumber" : 137
      },
      "nodeContext" : "PackageUtils.getVersionNameForPackage(packageInfo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 138
      },
      "nodeContext" : "ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_NAME,PackageUtils.getVersionNameForPackage(packageInfo))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 139
      },
      "nodeContext" : "ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_NAME,PackageUtils.getVersionNameForPackage(packageInfo));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4821,
        "startLineNumber" : 89,
        "startColumnNumber" : 100,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean isTermuxApp=TermuxConstants.TERMUX_PACKAGE_NAME.equals(currentPackageContext.getPackageName());\n  if (termuxAppEnvironment != null && isTermuxApp)   return;\n  termuxAppEnvironment=null;\n  String packageName=TermuxConstants.TERMUX_PACKAGE_NAME;\n  PackageInfo packageInfo=PackageUtils.getPackageInfoForPackage(currentPackageContext,packageName);\n  if (packageInfo == null)   return;\n  ApplicationInfo applicationInfo=PackageUtils.getApplicationInfoForPackage(currentPackageContext,packageName);\n  if (applicationInfo == null || !applicationInfo.enabled)   return;\n  HashMap<String,String> environment=new HashMap<>();\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_VERSION,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_NAME,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_CODE,String.valueOf(PackageUtils.getVersionCodeForPackage(packageInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PACKAGE_NAME,packageName);\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PID,TermuxUtils.getTermuxAppPID(currentPackageContext));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__UID,String.valueOf(PackageUtils.getUidForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__TARGET_SDK,String.valueOf(PackageUtils.getTargetSDKForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_DEBUGGABLE_BUILD,PackageUtils.isAppForPackageADebuggableBuild(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__APK_PATH,PackageUtils.getBaseAPKPathForPackage(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_INSTALLED_ON_EXTERNAL_STORAGE,PackageUtils.isAppInstalledOnExternalStorage(applicationInfo));\n  putTermuxAPKSignature(currentPackageContext,environment);\n  Context termuxPackageContext=TermuxUtils.getTermuxPackageContext(currentPackageContext);\n  if (termuxPackageContext != null) {\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER != null)     environment.put(ENV_TERMUX_APP__PACKAGE_MANAGER,TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER.getName());\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT != null)     environment.put(ENV_TERMUX_APP__PACKAGE_VARIANT,TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT.getName());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__AM_SOCKET_SERVER_ENABLED,TermuxAmSocketServer.getTermuxAppAMSocketServerEnabled(currentPackageContext));\n    String filesDirPath=currentPackageContext.getFilesDir().getAbsolutePath();\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__FILES_DIR,filesDirPath);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_PROCESS_CONTEXT,SELinuxUtils.getContext());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_FILE_CONTEXT,SELinuxUtils.getFileContext(filesDirPath));\n    String seInfoUser=PackageUtils.getApplicationInfoSeInfoUserForPackage(applicationInfo);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_INFO,PackageUtils.getApplicationInfoSeInfoForPackage(applicationInfo) + (DataUtils.isNullOrEmpty(seInfoUser) ? \"\" : seInfoUser));\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)     ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__USER_ID,String.valueOf(PackageUtils.getUserIdForPackage(currentPackageContext)));\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PROFILE_OWNER,PackageUtils.getProfileOwnerPackageNameForUser(currentPackageContext));\n  }\n  termuxAppEnvironment=environment;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 351,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5000,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Set Termux app environment variables in  {@link #termuxAppEnvironment}. \n */\npublic synchronized static void setTermuxAppEnvironment(@NonNull Context currentPackageContext){\n  boolean isTermuxApp=TermuxConstants.TERMUX_PACKAGE_NAME.equals(currentPackageContext.getPackageName());\n  if (termuxAppEnvironment != null && isTermuxApp)   return;\n  termuxAppEnvironment=null;\n  String packageName=TermuxConstants.TERMUX_PACKAGE_NAME;\n  PackageInfo packageInfo=PackageUtils.getPackageInfoForPackage(currentPackageContext,packageName);\n  if (packageInfo == null)   return;\n  ApplicationInfo applicationInfo=PackageUtils.getApplicationInfoForPackage(currentPackageContext,packageName);\n  if (applicationInfo == null || !applicationInfo.enabled)   return;\n  HashMap<String,String> environment=new HashMap<>();\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_VERSION,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_NAME,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_CODE,String.valueOf(PackageUtils.getVersionCodeForPackage(packageInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PACKAGE_NAME,packageName);\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PID,TermuxUtils.getTermuxAppPID(currentPackageContext));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__UID,String.valueOf(PackageUtils.getUidForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__TARGET_SDK,String.valueOf(PackageUtils.getTargetSDKForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_DEBUGGABLE_BUILD,PackageUtils.isAppForPackageADebuggableBuild(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__APK_PATH,PackageUtils.getBaseAPKPathForPackage(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_INSTALLED_ON_EXTERNAL_STORAGE,PackageUtils.isAppInstalledOnExternalStorage(applicationInfo));\n  putTermuxAPKSignature(currentPackageContext,environment);\n  Context termuxPackageContext=TermuxUtils.getTermuxPackageContext(currentPackageContext);\n  if (termuxPackageContext != null) {\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER != null)     environment.put(ENV_TERMUX_APP__PACKAGE_MANAGER,TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER.getName());\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT != null)     environment.put(ENV_TERMUX_APP__PACKAGE_VARIANT,TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT.getName());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__AM_SOCKET_SERVER_ENABLED,TermuxAmSocketServer.getTermuxAppAMSocketServerEnabled(currentPackageContext));\n    String filesDirPath=currentPackageContext.getFilesDir().getAbsolutePath();\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__FILES_DIR,filesDirPath);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_PROCESS_CONTEXT,SELinuxUtils.getContext());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_FILE_CONTEXT,SELinuxUtils.getFileContext(filesDirPath));\n    String seInfoUser=PackageUtils.getApplicationInfoSeInfoUserForPackage(applicationInfo);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_INFO,PackageUtils.getApplicationInfoSeInfoForPackage(applicationInfo) + (DataUtils.isNullOrEmpty(seInfoUser) ? \"\" : seInfoUser));\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)     ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__USER_ID,String.valueOf(PackageUtils.getUserIdForPackage(currentPackageContext)));\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PROFILE_OWNER,PackageUtils.getProfileOwnerPackageNameForUser(currentPackageContext));\n  }\n  termuxAppEnvironment=environment;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 364,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 139
      },
      "nodeContext" : "ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_NAME,PackageUtils.getVersionNameForPackage(packageInfo));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.termux.shared.termux.shell.command.environment.PackageInfo"
  }, {
    "nodeContext" : "packageInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 109,
      "startColumnNumber" : 140,
      "endLineNumber" : 109,
      "endColumnNumber" : 151
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 109,
        "startColumnNumber" : 102,
        "endLineNumber" : 109,
        "endColumnNumber" : 152
      },
      "nodeContext" : "PackageUtils.getVersionCodeForPackage(packageInfo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 109,
        "startColumnNumber" : 87,
        "endLineNumber" : 109,
        "endColumnNumber" : 153
      },
      "nodeContext" : "String.valueOf(PackageUtils.getVersionCodeForPackage(packageInfo))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 154
      },
      "nodeContext" : "ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_CODE,String.valueOf(PackageUtils.getVersionCodeForPackage(packageInfo)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 155
      },
      "nodeContext" : "ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_CODE,String.valueOf(PackageUtils.getVersionCodeForPackage(packageInfo)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4821,
        "startLineNumber" : 89,
        "startColumnNumber" : 100,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean isTermuxApp=TermuxConstants.TERMUX_PACKAGE_NAME.equals(currentPackageContext.getPackageName());\n  if (termuxAppEnvironment != null && isTermuxApp)   return;\n  termuxAppEnvironment=null;\n  String packageName=TermuxConstants.TERMUX_PACKAGE_NAME;\n  PackageInfo packageInfo=PackageUtils.getPackageInfoForPackage(currentPackageContext,packageName);\n  if (packageInfo == null)   return;\n  ApplicationInfo applicationInfo=PackageUtils.getApplicationInfoForPackage(currentPackageContext,packageName);\n  if (applicationInfo == null || !applicationInfo.enabled)   return;\n  HashMap<String,String> environment=new HashMap<>();\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_VERSION,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_NAME,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_CODE,String.valueOf(PackageUtils.getVersionCodeForPackage(packageInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PACKAGE_NAME,packageName);\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PID,TermuxUtils.getTermuxAppPID(currentPackageContext));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__UID,String.valueOf(PackageUtils.getUidForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__TARGET_SDK,String.valueOf(PackageUtils.getTargetSDKForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_DEBUGGABLE_BUILD,PackageUtils.isAppForPackageADebuggableBuild(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__APK_PATH,PackageUtils.getBaseAPKPathForPackage(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_INSTALLED_ON_EXTERNAL_STORAGE,PackageUtils.isAppInstalledOnExternalStorage(applicationInfo));\n  putTermuxAPKSignature(currentPackageContext,environment);\n  Context termuxPackageContext=TermuxUtils.getTermuxPackageContext(currentPackageContext);\n  if (termuxPackageContext != null) {\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER != null)     environment.put(ENV_TERMUX_APP__PACKAGE_MANAGER,TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER.getName());\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT != null)     environment.put(ENV_TERMUX_APP__PACKAGE_VARIANT,TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT.getName());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__AM_SOCKET_SERVER_ENABLED,TermuxAmSocketServer.getTermuxAppAMSocketServerEnabled(currentPackageContext));\n    String filesDirPath=currentPackageContext.getFilesDir().getAbsolutePath();\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__FILES_DIR,filesDirPath);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_PROCESS_CONTEXT,SELinuxUtils.getContext());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_FILE_CONTEXT,SELinuxUtils.getFileContext(filesDirPath));\n    String seInfoUser=PackageUtils.getApplicationInfoSeInfoUserForPackage(applicationInfo);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_INFO,PackageUtils.getApplicationInfoSeInfoForPackage(applicationInfo) + (DataUtils.isNullOrEmpty(seInfoUser) ? \"\" : seInfoUser));\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)     ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__USER_ID,String.valueOf(PackageUtils.getUserIdForPackage(currentPackageContext)));\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PROFILE_OWNER,PackageUtils.getProfileOwnerPackageNameForUser(currentPackageContext));\n  }\n  termuxAppEnvironment=environment;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 351,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5000,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Set Termux app environment variables in  {@link #termuxAppEnvironment}. \n */\npublic synchronized static void setTermuxAppEnvironment(@NonNull Context currentPackageContext){\n  boolean isTermuxApp=TermuxConstants.TERMUX_PACKAGE_NAME.equals(currentPackageContext.getPackageName());\n  if (termuxAppEnvironment != null && isTermuxApp)   return;\n  termuxAppEnvironment=null;\n  String packageName=TermuxConstants.TERMUX_PACKAGE_NAME;\n  PackageInfo packageInfo=PackageUtils.getPackageInfoForPackage(currentPackageContext,packageName);\n  if (packageInfo == null)   return;\n  ApplicationInfo applicationInfo=PackageUtils.getApplicationInfoForPackage(currentPackageContext,packageName);\n  if (applicationInfo == null || !applicationInfo.enabled)   return;\n  HashMap<String,String> environment=new HashMap<>();\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_VERSION,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_NAME,PackageUtils.getVersionNameForPackage(packageInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_CODE,String.valueOf(PackageUtils.getVersionCodeForPackage(packageInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PACKAGE_NAME,packageName);\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PID,TermuxUtils.getTermuxAppPID(currentPackageContext));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__UID,String.valueOf(PackageUtils.getUidForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__TARGET_SDK,String.valueOf(PackageUtils.getTargetSDKForPackage(applicationInfo)));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_DEBUGGABLE_BUILD,PackageUtils.isAppForPackageADebuggableBuild(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__APK_PATH,PackageUtils.getBaseAPKPathForPackage(applicationInfo));\n  ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__IS_INSTALLED_ON_EXTERNAL_STORAGE,PackageUtils.isAppInstalledOnExternalStorage(applicationInfo));\n  putTermuxAPKSignature(currentPackageContext,environment);\n  Context termuxPackageContext=TermuxUtils.getTermuxPackageContext(currentPackageContext);\n  if (termuxPackageContext != null) {\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER != null)     environment.put(ENV_TERMUX_APP__PACKAGE_MANAGER,TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER.getName());\n    if (TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT != null)     environment.put(ENV_TERMUX_APP__PACKAGE_VARIANT,TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT.getName());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__AM_SOCKET_SERVER_ENABLED,TermuxAmSocketServer.getTermuxAppAMSocketServerEnabled(currentPackageContext));\n    String filesDirPath=currentPackageContext.getFilesDir().getAbsolutePath();\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__FILES_DIR,filesDirPath);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_PROCESS_CONTEXT,SELinuxUtils.getContext());\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_FILE_CONTEXT,SELinuxUtils.getFileContext(filesDirPath));\n    String seInfoUser=PackageUtils.getApplicationInfoSeInfoUserForPackage(applicationInfo);\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__SE_INFO,PackageUtils.getApplicationInfoSeInfoForPackage(applicationInfo) + (DataUtils.isNullOrEmpty(seInfoUser) ? \"\" : seInfoUser));\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N)     ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__USER_ID,String.valueOf(PackageUtils.getUserIdForPackage(currentPackageContext)));\n    ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__PROFILE_OWNER,PackageUtils.getProfileOwnerPackageNameForUser(currentPackageContext));\n  }\n  termuxAppEnvironment=environment;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 364,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 155
      },
      "nodeContext" : "ShellEnvironmentUtils.putToEnvIfSet(environment,ENV_TERMUX_APP__VERSION_CODE,String.valueOf(PackageUtils.getVersionCodeForPackage(packageInfo)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.termux.shared.termux.shell.command.environment.PackageInfo"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 101,
    "startColumnNumber" : 12,
    "endLineNumber" : 101,
    "endColumnNumber" : 23
  }, {
    "charLength" : 11,
    "startLineNumber" : 107,
    "startColumnNumber" : 115,
    "endLineNumber" : 107,
    "endColumnNumber" : 126
  }, {
    "charLength" : 11,
    "startLineNumber" : 108,
    "startColumnNumber" : 125,
    "endLineNumber" : 108,
    "endColumnNumber" : 136
  }, {
    "charLength" : 11,
    "startLineNumber" : 109,
    "startColumnNumber" : 140,
    "endLineNumber" : 109,
    "endColumnNumber" : 151
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}