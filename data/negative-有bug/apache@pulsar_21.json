{
  "id" : 21,
  "expression" : "\"brokerPublisherThrottlingMaxMessageRate\"",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"brokerPublisherThrottlingMaxMessageRate\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 1995,
      "startColumnNumber" : 38,
      "endLineNumber" : 1995,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 1995,
        "startColumnNumber" : 8,
        "endLineNumber" : 1997,
        "endColumnNumber" : 65
      },
      "nodeContext" : "registerConfigurationListener(\"brokerPublisherThrottlingMaxMessageRate\",(brokerPublisherThrottlingMaxMessageRate) -> updateBrokerPublisherThrottlingMaxRate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 1995,
        "startColumnNumber" : 8,
        "endLineNumber" : 1997,
        "endColumnNumber" : 66
      },
      "nodeContext" : "registerConfigurationListener(\"brokerPublisherThrottlingMaxMessageRate\",(brokerPublisherThrottlingMaxMessageRate) -> updateBrokerPublisherThrottlingMaxRate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4977,
        "startLineNumber" : 1919,
        "startColumnNumber" : 59,
        "endLineNumber" : 2011,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  addDynamicConfigValidator(\"loadManagerClassName\",(className) -> {\n    try {\n      Class.forName(className);\n    }\n catch (    ClassNotFoundException|NoClassDefFoundError e) {\n      log.warn(\"Configured load-manager class {} not found {}\",className,e.getMessage());\n      return false;\n    }\n    return true;\n  }\n);\n  updateDynamicServiceConfiguration();\n  registerConfigurationListener(\"maxConcurrentLookupRequest\",(maxConcurrentLookupRequest) -> lookupRequestSemaphore.set(new Semaphore((int)maxConcurrentLookupRequest,false)));\n  registerConfigurationListener(\"maxConcurrentTopicLoadRequest\",(maxConcurrentTopicLoadRequest) -> topicLoadRequestSemaphore.set(new Semaphore((int)maxConcurrentTopicLoadRequest,false)));\n  registerConfigurationListener(\"loadManagerClassName\",className -> {\n    pulsar.getExecutor().execute(() -> {\n      try {\n        final LoadManager newLoadManager=LoadManager.create(pulsar);\n        log.info(\"Created load manager: {}\",className);\n        pulsar.getLoadManager().get().stop();\n        newLoadManager.start();\n        pulsar.getLoadManager().set(newLoadManager);\n      }\n catch (      Exception ex) {\n        log.warn(\"Failed to change load manager\",ex);\n      }\n    }\n);\n  }\n);\n  registerConfigurationListener(\"dispatchThrottlingRatePerTopicInMsg\",(dispatchRatePerTopicInMsg) -> {\n    updateTopicMessageDispatchRate();\n  }\n);\n  registerConfigurationListener(\"dispatchThrottlingRatePerTopicInByte\",(dispatchRatePerTopicInByte) -> {\n    updateTopicMessageDispatchRate();\n  }\n);\n  registerConfigurationListener(\"autoSkipNonRecoverableData\",(skipNonRecoverableLedger) -> {\n    updateManagedLedgerConfig();\n  }\n);\n  registerConfigurationListener(\"dispatchThrottlingRatePerSubscriptionInMsg\",(dispatchRatePerTopicInMsg) -> {\n    updateSubscriptionMessageDispatchRate();\n  }\n);\n  registerConfigurationListener(\"dispatchThrottlingRatePerSubscriptionInByte\",(dispatchRatePerTopicInByte) -> {\n    updateSubscriptionMessageDispatchRate();\n  }\n);\n  registerConfigurationListener(\"dispatchThrottlingRatePerReplicatorInMsg\",(dispatchRatePerTopicInMsg) -> {\n    updateReplicatorMessageDispatchRate();\n  }\n);\n  registerConfigurationListener(\"dispatchThrottlingRatePerReplicatorInByte\",(dispatchRatePerTopicInByte) -> {\n    updateReplicatorMessageDispatchRate();\n  }\n);\n  registerConfigurationListener(\"brokerPublisherThrottlingTickTimeMillis\",(publisherThrottlingTickTimeMillis) -> {\n    setupBrokerPublishRateLimiterMonitor();\n  }\n);\n  registerConfigurationListener(\"brokerPublisherThrottlingMaxMessageRate\",(brokerPublisherThrottlingMaxMessageRate) -> updateBrokerPublisherThrottlingMaxRate());\n  registerConfigurationListener(\"brokerPublisherThrottlingMaxByteRate\",(brokerPublisherThrottlingMaxByteRate) -> updateBrokerPublisherThrottlingMaxRate());\n  if (!preciseTopicPublishRateLimitingEnable) {\n    registerConfigurationListener(\"topicPublisherThrottlingTickTimeMillis\",(publisherThrottlingTickTimeMillis) -> {\n      setupTopicPublishRateLimiterMonitor();\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 261,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5266,
        "startLineNumber" : 1915,
        "startColumnNumber" : 4,
        "endLineNumber" : 2011,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Update dynamic-ServiceConfiguration with value present into zk-configuration-map and register listeners on dynamic-ServiceConfiguration field to take appropriate action on change of zk-configuration-map.\n */\nprivate void updateConfigurationAndRegisterListeners(){\n  addDynamicConfigValidator(\"loadManagerClassName\",(className) -> {\n    try {\n      Class.forName(className);\n    }\n catch (    ClassNotFoundException|NoClassDefFoundError e) {\n      log.warn(\"Configured load-manager class {} not found {}\",className,e.getMessage());\n      return false;\n    }\n    return true;\n  }\n);\n  updateDynamicServiceConfiguration();\n  registerConfigurationListener(\"maxConcurrentLookupRequest\",(maxConcurrentLookupRequest) -> lookupRequestSemaphore.set(new Semaphore((int)maxConcurrentLookupRequest,false)));\n  registerConfigurationListener(\"maxConcurrentTopicLoadRequest\",(maxConcurrentTopicLoadRequest) -> topicLoadRequestSemaphore.set(new Semaphore((int)maxConcurrentTopicLoadRequest,false)));\n  registerConfigurationListener(\"loadManagerClassName\",className -> {\n    pulsar.getExecutor().execute(() -> {\n      try {\n        final LoadManager newLoadManager=LoadManager.create(pulsar);\n        log.info(\"Created load manager: {}\",className);\n        pulsar.getLoadManager().get().stop();\n        newLoadManager.start();\n        pulsar.getLoadManager().set(newLoadManager);\n      }\n catch (      Exception ex) {\n        log.warn(\"Failed to change load manager\",ex);\n      }\n    }\n);\n  }\n);\n  registerConfigurationListener(\"dispatchThrottlingRatePerTopicInMsg\",(dispatchRatePerTopicInMsg) -> {\n    updateTopicMessageDispatchRate();\n  }\n);\n  registerConfigurationListener(\"dispatchThrottlingRatePerTopicInByte\",(dispatchRatePerTopicInByte) -> {\n    updateTopicMessageDispatchRate();\n  }\n);\n  registerConfigurationListener(\"autoSkipNonRecoverableData\",(skipNonRecoverableLedger) -> {\n    updateManagedLedgerConfig();\n  }\n);\n  registerConfigurationListener(\"dispatchThrottlingRatePerSubscriptionInMsg\",(dispatchRatePerTopicInMsg) -> {\n    updateSubscriptionMessageDispatchRate();\n  }\n);\n  registerConfigurationListener(\"dispatchThrottlingRatePerSubscriptionInByte\",(dispatchRatePerTopicInByte) -> {\n    updateSubscriptionMessageDispatchRate();\n  }\n);\n  registerConfigurationListener(\"dispatchThrottlingRatePerReplicatorInMsg\",(dispatchRatePerTopicInMsg) -> {\n    updateReplicatorMessageDispatchRate();\n  }\n);\n  registerConfigurationListener(\"dispatchThrottlingRatePerReplicatorInByte\",(dispatchRatePerTopicInByte) -> {\n    updateReplicatorMessageDispatchRate();\n  }\n);\n  registerConfigurationListener(\"brokerPublisherThrottlingTickTimeMillis\",(publisherThrottlingTickTimeMillis) -> {\n    setupBrokerPublishRateLimiterMonitor();\n  }\n);\n  registerConfigurationListener(\"brokerPublisherThrottlingMaxMessageRate\",(brokerPublisherThrottlingMaxMessageRate) -> updateBrokerPublisherThrottlingMaxRate());\n  registerConfigurationListener(\"brokerPublisherThrottlingMaxByteRate\",(brokerPublisherThrottlingMaxByteRate) -> updateBrokerPublisherThrottlingMaxRate());\n  if (!preciseTopicPublishRateLimitingEnable) {\n    registerConfigurationListener(\"topicPublisherThrottlingTickTimeMillis\",(publisherThrottlingTickTimeMillis) -> {\n      setupTopicPublishRateLimiterMonitor();\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 266,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 1995,
        "startColumnNumber" : 8,
        "endLineNumber" : 1997,
        "endColumnNumber" : 65
      },
      "nodeContext" : "registerConfigurationListener(\"brokerPublisherThrottlingMaxMessageRate\",(brokerPublisherThrottlingMaxMessageRate) -> updateBrokerPublisherThrottlingMaxRate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 1995,
    "startColumnNumber" : 38,
    "endLineNumber" : 1995,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}