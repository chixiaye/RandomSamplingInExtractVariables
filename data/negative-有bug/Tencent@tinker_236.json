{
  "id" : 236,
  "expression" : "tempInfo.oldVersion.equals(info.oldVersion)",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-loader-no-op/src/main/java/com/tencent/tinker/loader/shareutil/SharePatchInfo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tempInfo.oldVersion.equals(info.oldVersion)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 235,
      "startColumnNumber" : 57,
      "endLineNumber" : 235,
      "endColumnNumber" : 100
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 235,
        "startColumnNumber" : 37,
        "endLineNumber" : 235,
        "endColumnNumber" : 100
      },
      "nodeContext" : "tempInfo != null && tempInfo.oldVersion.equals(info.oldVersion)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 235,
        "startColumnNumber" : 37,
        "endLineNumber" : 235,
        "endColumnNumber" : 147
      },
      "nodeContext" : "tempInfo != null && tempInfo.oldVersion.equals(info.oldVersion) && tempInfo.newVersion.equals(info.newVersion)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 235,
        "startColumnNumber" : 12,
        "endLineNumber" : 235,
        "endColumnNumber" : 147
      },
      "nodeContext" : "isWritePatchSuccessful=tempInfo != null && tempInfo.oldVersion.equals(info.oldVersion) && tempInfo.newVersion.equals(info.newVersion)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 235,
        "startColumnNumber" : 12,
        "endLineNumber" : 235,
        "endColumnNumber" : 148
      },
      "nodeContext" : "isWritePatchSuccessful=tempInfo != null && tempInfo.oldVersion.equals(info.oldVersion) && tempInfo.newVersion.equals(info.newVersion);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1459,
        "startLineNumber" : 210,
        "startColumnNumber" : 78,
        "endLineNumber" : 239,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  numAttempts++;\n  Properties newProperties=new Properties();\n  newProperties.put(OLD_VERSION,info.oldVersion);\n  newProperties.put(NEW_VERSION,info.newVersion);\n  newProperties.put(IS_PROTECTED_APP,(info.isProtectedApp ? \"1\" : \"0\"));\n  newProperties.put(IS_REMOVE_NEW_VERSION,(info.isRemoveNewVersion ? \"1\" : \"0\"));\n  newProperties.put(FINGER_PRINT,info.fingerPrint);\n  newProperties.put(OAT_DIR,info.oatDir);\n  newProperties.put(IS_REMOVE_INTERPRET_OAT_DIR,(info.isRemoveInterpretOATDir ? \"1\" : \"0\"));\n  FileOutputStream outputStream=null;\n  try {\n    outputStream=new FileOutputStream(pathInfoFile,false);\n    String comment=\"from old version:\" + info.oldVersion + \" to new version:\"+ info.newVersion;\n    newProperties.store(outputStream,comment);\n  }\n catch (  Exception e) {\n    ShareTinkerLog.w(TAG,\"write property failed, e:\" + e);\n  }\n finally {\n    SharePatchFileUtil.closeQuietly(outputStream);\n  }\n  SharePatchInfo tempInfo=readAndCheckProperty(pathInfoFile);\n  isWritePatchSuccessful=tempInfo != null && tempInfo.oldVersion.equals(info.oldVersion) && tempInfo.newVersion.equals(info.newVersion);\n  if (!isWritePatchSuccessful) {\n    pathInfoFile.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1529,
        "startLineNumber" : 210,
        "startColumnNumber" : 8,
        "endLineNumber" : 239,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (numAttempts < MAX_EXTRACT_ATTEMPTS && !isWritePatchSuccessful) {\n  numAttempts++;\n  Properties newProperties=new Properties();\n  newProperties.put(OLD_VERSION,info.oldVersion);\n  newProperties.put(NEW_VERSION,info.newVersion);\n  newProperties.put(IS_PROTECTED_APP,(info.isProtectedApp ? \"1\" : \"0\"));\n  newProperties.put(IS_REMOVE_NEW_VERSION,(info.isRemoveNewVersion ? \"1\" : \"0\"));\n  newProperties.put(FINGER_PRINT,info.fingerPrint);\n  newProperties.put(OAT_DIR,info.oatDir);\n  newProperties.put(IS_REMOVE_INTERPRET_OAT_DIR,(info.isRemoveInterpretOATDir ? \"1\" : \"0\"));\n  FileOutputStream outputStream=null;\n  try {\n    outputStream=new FileOutputStream(pathInfoFile,false);\n    String comment=\"from old version:\" + info.oldVersion + \" to new version:\"+ info.newVersion;\n    newProperties.store(outputStream,comment);\n  }\n catch (  Exception e) {\n    ShareTinkerLog.w(TAG,\"write property failed, e:\" + e);\n  }\n finally {\n    SharePatchFileUtil.closeQuietly(outputStream);\n  }\n  SharePatchInfo tempInfo=readAndCheckProperty(pathInfoFile);\n  isWritePatchSuccessful=tempInfo != null && tempInfo.oldVersion.equals(info.oldVersion) && tempInfo.newVersion.equals(info.newVersion);\n  if (!isWritePatchSuccessful) {\n    pathInfoFile.delete();\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 183,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2960,
        "startLineNumber" : 173,
        "startColumnNumber" : 88,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (pathInfoFile == null || info == null) {\n    return false;\n  }\n  if (ShareTinkerInternals.isNullOrNil(info.fingerPrint)) {\n    info.fingerPrint=Build.FINGERPRINT;\n  }\n  if (ShareTinkerInternals.isNullOrNil(info.oatDir)) {\n    info.oatDir=DEFAULT_DIR;\n  }\n  ShareTinkerLog.i(TAG,\"rewritePatchInfoFile file path:\" + pathInfoFile.getAbsolutePath() + \" , oldVer:\"+ info.oldVersion+ \", newVer:\"+ info.newVersion+ \", isProtectedApp:\"+ (info.isProtectedApp ? 1 : 0)+ \", isRemoveNewVersion:\"+ (info.isRemoveNewVersion ? 1 : 0)+ \", fingerprint:\"+ info.fingerPrint+ \", oatDir:\"+ info.oatDir+ \", isRemoveInterpretOATDir:\"+ (info.isRemoveInterpretOATDir ? 1 : 0));\n  boolean isWritePatchSuccessful=false;\n  int numAttempts=0;\n  File parentFile=pathInfoFile.getParentFile();\n  if (!parentFile.exists()) {\n    parentFile.mkdirs();\n  }\n  while (numAttempts < MAX_EXTRACT_ATTEMPTS && !isWritePatchSuccessful) {\n    numAttempts++;\n    Properties newProperties=new Properties();\n    newProperties.put(OLD_VERSION,info.oldVersion);\n    newProperties.put(NEW_VERSION,info.newVersion);\n    newProperties.put(IS_PROTECTED_APP,(info.isProtectedApp ? \"1\" : \"0\"));\n    newProperties.put(IS_REMOVE_NEW_VERSION,(info.isRemoveNewVersion ? \"1\" : \"0\"));\n    newProperties.put(FINGER_PRINT,info.fingerPrint);\n    newProperties.put(OAT_DIR,info.oatDir);\n    newProperties.put(IS_REMOVE_INTERPRET_OAT_DIR,(info.isRemoveInterpretOATDir ? \"1\" : \"0\"));\n    FileOutputStream outputStream=null;\n    try {\n      outputStream=new FileOutputStream(pathInfoFile,false);\n      String comment=\"from old version:\" + info.oldVersion + \" to new version:\"+ info.newVersion;\n      newProperties.store(outputStream,comment);\n    }\n catch (    Exception e) {\n      ShareTinkerLog.w(TAG,\"write property failed, e:\" + e);\n    }\n finally {\n      SharePatchFileUtil.closeQuietly(outputStream);\n    }\n    SharePatchInfo tempInfo=readAndCheckProperty(pathInfoFile);\n    isWritePatchSuccessful=tempInfo != null && tempInfo.oldVersion.equals(info.oldVersion) && tempInfo.newVersion.equals(info.newVersion);\n    if (!isWritePatchSuccessful) {\n      pathInfoFile.delete();\n    }\n  }\n  return isWritePatchSuccessful;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 305,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3044,
        "startLineNumber" : 173,
        "startColumnNumber" : 4,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static boolean rewritePatchInfoFile(File pathInfoFile,SharePatchInfo info){\n  if (pathInfoFile == null || info == null) {\n    return false;\n  }\n  if (ShareTinkerInternals.isNullOrNil(info.fingerPrint)) {\n    info.fingerPrint=Build.FINGERPRINT;\n  }\n  if (ShareTinkerInternals.isNullOrNil(info.oatDir)) {\n    info.oatDir=DEFAULT_DIR;\n  }\n  ShareTinkerLog.i(TAG,\"rewritePatchInfoFile file path:\" + pathInfoFile.getAbsolutePath() + \" , oldVer:\"+ info.oldVersion+ \", newVer:\"+ info.newVersion+ \", isProtectedApp:\"+ (info.isProtectedApp ? 1 : 0)+ \", isRemoveNewVersion:\"+ (info.isRemoveNewVersion ? 1 : 0)+ \", fingerprint:\"+ info.fingerPrint+ \", oatDir:\"+ info.oatDir+ \", isRemoveInterpretOATDir:\"+ (info.isRemoveInterpretOATDir ? 1 : 0));\n  boolean isWritePatchSuccessful=false;\n  int numAttempts=0;\n  File parentFile=pathInfoFile.getParentFile();\n  if (!parentFile.exists()) {\n    parentFile.mkdirs();\n  }\n  while (numAttempts < MAX_EXTRACT_ATTEMPTS && !isWritePatchSuccessful) {\n    numAttempts++;\n    Properties newProperties=new Properties();\n    newProperties.put(OLD_VERSION,info.oldVersion);\n    newProperties.put(NEW_VERSION,info.newVersion);\n    newProperties.put(IS_PROTECTED_APP,(info.isProtectedApp ? \"1\" : \"0\"));\n    newProperties.put(IS_REMOVE_NEW_VERSION,(info.isRemoveNewVersion ? \"1\" : \"0\"));\n    newProperties.put(FINGER_PRINT,info.fingerPrint);\n    newProperties.put(OAT_DIR,info.oatDir);\n    newProperties.put(IS_REMOVE_INTERPRET_OAT_DIR,(info.isRemoveInterpretOATDir ? \"1\" : \"0\"));\n    FileOutputStream outputStream=null;\n    try {\n      outputStream=new FileOutputStream(pathInfoFile,false);\n      String comment=\"from old version:\" + info.oldVersion + \" to new version:\"+ info.newVersion;\n      newProperties.store(outputStream,comment);\n    }\n catch (    Exception e) {\n      ShareTinkerLog.w(TAG,\"write property failed, e:\" + e);\n    }\n finally {\n      SharePatchFileUtil.closeQuietly(outputStream);\n    }\n    SharePatchInfo tempInfo=readAndCheckProperty(pathInfoFile);\n    isWritePatchSuccessful=tempInfo != null && tempInfo.oldVersion.equals(info.oldVersion) && tempInfo.newVersion.equals(info.newVersion);\n    if (!isWritePatchSuccessful) {\n      pathInfoFile.delete();\n    }\n  }\n  return isWritePatchSuccessful;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 318,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 235,
        "startColumnNumber" : 12,
        "endLineNumber" : 235,
        "endColumnNumber" : 148
      },
      "nodeContext" : "isWritePatchSuccessful=tempInfo != null && tempInfo.oldVersion.equals(info.oldVersion) && tempInfo.newVersion.equals(info.newVersion);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 235,
    "startColumnNumber" : 57,
    "endLineNumber" : 235,
    "endColumnNumber" : 100
  } ],
  "layoutRelationDataList" : [ ]
}