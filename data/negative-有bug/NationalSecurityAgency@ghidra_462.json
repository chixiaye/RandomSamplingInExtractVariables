{
  "id" : 462,
  "expression" : "count",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/VectorMsType.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "count",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 76,
      "startColumnNumber" : 47,
      "endLineNumber" : 76,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 75,
        "startColumnNumber" : 17,
        "endLineNumber" : 76,
        "endColumnNumber" : 53
      },
      "nodeContext" : "String.format(\"vector: %s[<%s> %d]\",name,pdb.getTypeRecord(elementTypeRecordNumber),count)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 54
      },
      "nodeContext" : "builder.append(String.format(\"vector: %s[<%s> %d]\",name,pdb.getTypeRecord(elementTypeRecordNumber),count))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 55
      },
      "nodeContext" : "builder.append(String.format(\"vector: %s[<%s> %d]\",name,pdb.getTypeRecord(elementTypeRecordNumber),count));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 279,
        "startLineNumber" : 72,
        "startColumnNumber" : 52,
        "endLineNumber" : 77,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  builder.append(String.format(\"vector: %s[<%s> %d]\",name,pdb.getTypeRecord(elementTypeRecordNumber),count));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 342,
        "startLineNumber" : 71,
        "startColumnNumber" : 1,
        "endLineNumber" : 77,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void emit(StringBuilder builder,Bind bind){\n  builder.append(String.format(\"vector: %s[<%s> %d]\",name,pdb.getTypeRecord(elementTypeRecordNumber),count));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 29,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 75,
        "startColumnNumber" : 17,
        "endLineNumber" : 76,
        "endColumnNumber" : 53
      },
      "nodeContext" : "String.format(\"vector: %s[<%s> %d]\",name,pdb.getTypeRecord(elementTypeRecordNumber),count)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 76,
    "startColumnNumber" : 47,
    "endLineNumber" : 76,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}