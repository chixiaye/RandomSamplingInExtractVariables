{
  "id" : 362,
  "expression" : "node.getBase()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/sql/analyzer/ConstantExpressionVerifier.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "node.getBase()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 57,
      "startColumnNumber" : 20,
      "endLineNumber" : 57,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 44
      },
      "nodeContext" : "process(node.getBase(),context)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 45
      },
      "nodeContext" : "process(node.getBase(),context);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (columnReferences.contains(NodeRef.<Expression>of(node))) {\n    throw new SemanticException(EXPRESSION_NOT_CONSTANT,expression,\"Constant expression cannot contain column references\");\n  }\n  process(node.getBase(),context);\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 420,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override protected Void visitDereferenceExpression(DereferenceExpression node,Void context){\n  if (columnReferences.contains(NodeRef.<Expression>of(node))) {\n    throw new SemanticException(EXPRESSION_NOT_CONSTANT,expression,\"Constant expression cannot contain column references\");\n  }\n  process(node.getBase(),context);\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 43,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 45
      },
      "nodeContext" : "process(node.getBase(),context);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.facebook.presto.sql.tree.Expression"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 57,
    "startColumnNumber" : 20,
    "endLineNumber" : 57,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}