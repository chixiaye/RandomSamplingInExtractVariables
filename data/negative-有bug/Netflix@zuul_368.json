{
  "id" : 368,
  "expression" : "leakDetector.leakCounter",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/test/java/com/netflix/netty/common/metrics/InstrumentedResourceLeakDetectorTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "leakDetector.leakCounter",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 40,
      "startColumnNumber" : 21,
      "endLineNumber" : 40,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 40,
        "startColumnNumber" : 21,
        "endLineNumber" : 40,
        "endColumnNumber" : 51
      },
      "nodeContext" : "leakDetector.leakCounter.get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertEquals(leakDetector.leakCounter.get(),1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(leakDetector.leakCounter.get(),1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 38,
        "startColumnNumber" : 23,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),1);\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),2);\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test(){\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),1);\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),2);\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(leakDetector.leakCounter.get(),1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.atomic.AtomicInteger"
  }, {
    "nodeContext" : "leakDetector.leakCounter",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 43,
      "startColumnNumber" : 21,
      "endLineNumber" : 43,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 43,
        "startColumnNumber" : 21,
        "endLineNumber" : 43,
        "endColumnNumber" : 51
      },
      "nodeContext" : "leakDetector.leakCounter.get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertEquals(leakDetector.leakCounter.get(),2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(leakDetector.leakCounter.get(),2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 38,
        "startColumnNumber" : 23,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),1);\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),2);\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test(){\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),1);\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),2);\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(leakDetector.leakCounter.get(),2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.atomic.AtomicInteger"
  }, {
    "nodeContext" : "leakDetector.leakCounter",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 46,
      "startColumnNumber" : 21,
      "endLineNumber" : 46,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 46,
        "startColumnNumber" : 21,
        "endLineNumber" : 46,
        "endColumnNumber" : 51
      },
      "nodeContext" : "leakDetector.leakCounter.get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertEquals(leakDetector.leakCounter.get(),3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(leakDetector.leakCounter.get(),3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 38,
        "startColumnNumber" : 23,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),1);\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),2);\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test(){\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),1);\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),2);\n  leakDetector.reportTracedLeak(\"test\",\"test\");\n  assertEquals(leakDetector.leakCounter.get(),3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(leakDetector.leakCounter.get(),3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.atomic.AtomicInteger"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 40,
    "startColumnNumber" : 21,
    "endLineNumber" : 40,
    "endColumnNumber" : 45
  }, {
    "charLength" : 24,
    "startLineNumber" : 43,
    "startColumnNumber" : 21,
    "endLineNumber" : 43,
    "endColumnNumber" : 45
  }, {
    "charLength" : 24,
    "startLineNumber" : 46,
    "startColumnNumber" : 21,
    "endLineNumber" : 46,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}