{
  "id" : 166,
  "expression" : "contentType != null && contentType.getCharset() == null",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-web/src/main/java/org/springframework/http/server/reactive/ServletServerHttpRequest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "contentType != null && contentType.getCharset() == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 55,
      "startLineNumber" : 131,
      "startColumnNumber" : 6,
      "endLineNumber" : 131,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 131,
        "startColumnNumber" : 2,
        "endLineNumber" : 142,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (contentType != null && contentType.getCharset() == null) {\n  String encoding=request.getCharacterEncoding();\n  if (StringUtils.hasLength(encoding)) {\n    Charset charset=Charset.forName(encoding);\n    Map<String,String> params=new LinkedCaseInsensitiveMap<>();\n    params.putAll(contentType.getParameters());\n    params.put(\"charset\",charset.toString());\n    headers.setContentType(new MediaType(contentType.getType(),contentType.getSubtype(),params));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 77,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 998,
        "startLineNumber" : 122,
        "startColumnNumber" : 89,
        "endLineNumber" : 150,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  MediaType contentType=headers.getContentType();\n  if (contentType == null) {\n    String requestContentType=request.getContentType();\n    if (StringUtils.hasLength(requestContentType)) {\n      contentType=MediaType.parseMediaType(requestContentType);\n      headers.setContentType(contentType);\n    }\n  }\n  if (contentType != null && contentType.getCharset() == null) {\n    String encoding=request.getCharacterEncoding();\n    if (StringUtils.hasLength(encoding)) {\n      Charset charset=Charset.forName(encoding);\n      Map<String,String> params=new LinkedCaseInsensitiveMap<>();\n      params.putAll(contentType.getParameters());\n      params.put(\"charset\",charset.toString());\n      headers.setContentType(new MediaType(contentType.getType(),contentType.getSubtype(),params));\n    }\n  }\n  if (headers.getContentLength() == -1) {\n    int contentLength=request.getContentLength();\n    if (contentLength != -1) {\n      headers.setContentLength(contentLength);\n    }\n  }\n  return headers;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 122,
        "startColumnNumber" : 1,
        "endLineNumber" : 150,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static HttpHeaders initHeaders(HttpHeaders headers,HttpServletRequest request){\n  MediaType contentType=headers.getContentType();\n  if (contentType == null) {\n    String requestContentType=request.getContentType();\n    if (StringUtils.hasLength(requestContentType)) {\n      contentType=MediaType.parseMediaType(requestContentType);\n      headers.setContentType(contentType);\n    }\n  }\n  if (contentType != null && contentType.getCharset() == null) {\n    String encoding=request.getCharacterEncoding();\n    if (StringUtils.hasLength(encoding)) {\n      Charset charset=Charset.forName(encoding);\n      Map<String,String> params=new LinkedCaseInsensitiveMap<>();\n      params.putAll(contentType.getParameters());\n      params.put(\"charset\",charset.toString());\n      headers.setContentType(new MediaType(contentType.getType(),contentType.getSubtype(),params));\n    }\n  }\n  if (headers.getContentLength() == -1) {\n    int contentLength=request.getContentLength();\n    if (contentLength != -1) {\n      headers.setContentLength(contentLength);\n    }\n  }\n  return headers;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 131,
        "startColumnNumber" : 2,
        "endLineNumber" : 142,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (contentType != null && contentType.getCharset() == null) {\n  String encoding=request.getCharacterEncoding();\n  if (StringUtils.hasLength(encoding)) {\n    Charset charset=Charset.forName(encoding);\n    Map<String,String> params=new LinkedCaseInsensitiveMap<>();\n    params.putAll(contentType.getParameters());\n    params.put(\"charset\",charset.toString());\n    headers.setContentType(new MediaType(contentType.getType(),contentType.getSubtype(),params));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 77,
      "astHeight" : 10
    },
    "tokenLength" : 8,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 55,
    "startLineNumber" : 131,
    "startColumnNumber" : 6,
    "endLineNumber" : 131,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}