{
  "id" : 10,
  "expression" : "TimeUtils.getCurrentTime()",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/config/src/main/java/com/alibaba/nacos/config/server/service/merge/MergeTaskProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TimeUtils.getCurrentTime()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 75,
      "startColumnNumber" : 35,
      "endLineNumber" : 75,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 75,
        "startColumnNumber" : 28,
        "endLineNumber" : 75,
        "endColumnNumber" : 61
      },
      "nodeContext" : "time=TimeUtils.getCurrentTime()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 62
      },
      "nodeContext" : "final Timestamp time=TimeUtils.getCurrentTime();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<ConfigInfoAggr> datumList=new ArrayList<ConfigInfoAggr>();\n  int rowCount=persistService.aggrConfigInfoCount(dataId,group,tenant);\n  int pageCount=(int)Math.ceil(rowCount * 1.0 / PAGE_SIZE);\n  for (int pageNo=1; pageNo <= pageCount; pageNo++) {\n    Page<ConfigInfoAggr> page=persistService.findConfigInfoAggrByPage(dataId,group,tenant,pageNo,PAGE_SIZE);\n    if (page != null) {\n      datumList.addAll(page.getPageItems());\n      LOGGER.info(\"[merge-query] {}, {}, size/total={}/{}\",dataId,group,datumList.size(),rowCount);\n    }\n  }\n  final Timestamp time=TimeUtils.getCurrentTime();\n  if (datumList.size() > 0) {\n    ConfigInfo cf=merge(dataId,group,tenant,datumList);\n    persistService.insertOrUpdate(null,null,cf,time,null);\n    LOGGER.info(\"[merge-ok] {}, {}, size={}, length={}, md5={}, content={}\",dataId,group,datumList.size(),cf.getContent().length(),cf.getMd5(),ContentUtils.truncateContent(cf.getContent()));\n    ConfigTraceService.logPersistenceEvent(dataId,group,tenant,null,time.getTime(),InetUtils.getSelfIP(),ConfigTraceService.PERSISTENCE_EVENT_MERGE,cf.getContent());\n  }\n else {\n    if (StringUtils.isBlank(tag)) {\n      persistService.removeConfigInfo(dataId,group,tenant,clientIp,null);\n    }\n else {\n      persistService.removeConfigInfoTag(dataId,group,tenant,tag,clientIp,null);\n    }\n    LOGGER.warn(\"[merge-delete] delete config info because no datum. dataId=\" + dataId + \", groupId=\"+ group);\n    ConfigTraceService.logPersistenceEvent(dataId,group,tenant,null,time.getTime(),InetUtils.getSelfIP(),ConfigTraceService.PERSISTENCE_EVENT_REMOVE,null);\n  }\n  NotifyCenter.publishEvent(new ConfigDataChangeEvent(false,dataId,group,tenant,tag,time.getTime()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 239,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2654,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  List<ConfigInfoAggr> datumList=new ArrayList<ConfigInfoAggr>();\n  int rowCount=persistService.aggrConfigInfoCount(dataId,group,tenant);\n  int pageCount=(int)Math.ceil(rowCount * 1.0 / PAGE_SIZE);\n  for (int pageNo=1; pageNo <= pageCount; pageNo++) {\n    Page<ConfigInfoAggr> page=persistService.findConfigInfoAggrByPage(dataId,group,tenant,pageNo,PAGE_SIZE);\n    if (page != null) {\n      datumList.addAll(page.getPageItems());\n      LOGGER.info(\"[merge-query] {}, {}, size/total={}/{}\",dataId,group,datumList.size(),rowCount);\n    }\n  }\n  final Timestamp time=TimeUtils.getCurrentTime();\n  if (datumList.size() > 0) {\n    ConfigInfo cf=merge(dataId,group,tenant,datumList);\n    persistService.insertOrUpdate(null,null,cf,time,null);\n    LOGGER.info(\"[merge-ok] {}, {}, size={}, length={}, md5={}, content={}\",dataId,group,datumList.size(),cf.getContent().length(),cf.getMd5(),ContentUtils.truncateContent(cf.getContent()));\n    ConfigTraceService.logPersistenceEvent(dataId,group,tenant,null,time.getTime(),InetUtils.getSelfIP(),ConfigTraceService.PERSISTENCE_EVENT_MERGE,cf.getContent());\n  }\n else {\n    if (StringUtils.isBlank(tag)) {\n      persistService.removeConfigInfo(dataId,group,tenant,clientIp,null);\n    }\n else {\n      persistService.removeConfigInfoTag(dataId,group,tenant,tag,clientIp,null);\n    }\n    LOGGER.warn(\"[merge-delete] delete config info because no datum. dataId=\" + dataId + \", groupId=\"+ group);\n    ConfigTraceService.logPersistenceEvent(dataId,group,tenant,null,time.getTime(),InetUtils.getSelfIP(),ConfigTraceService.PERSISTENCE_EVENT_REMOVE,null);\n  }\n  NotifyCenter.publishEvent(new ConfigDataChangeEvent(false,dataId,group,tenant,tag,time.getTime()));\n}\n catch (Exception e) {\n  mergeService.addMergeTask(dataId,group,tenant,mergeTask.getClientIp());\n  LOGGER.info(\"[merge-error] \" + dataId + \", \"+ group+ \", \"+ e.toString(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 270,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2999,
        "startLineNumber" : 55,
        "startColumnNumber" : 43,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MergeDataTask mergeTask=(MergeDataTask)task;\n  final String dataId=mergeTask.dataId;\n  final String group=mergeTask.groupId;\n  final String tenant=mergeTask.tenant;\n  final String tag=mergeTask.tag;\n  final String clientIp=mergeTask.getClientIp();\n  try {\n    List<ConfigInfoAggr> datumList=new ArrayList<ConfigInfoAggr>();\n    int rowCount=persistService.aggrConfigInfoCount(dataId,group,tenant);\n    int pageCount=(int)Math.ceil(rowCount * 1.0 / PAGE_SIZE);\n    for (int pageNo=1; pageNo <= pageCount; pageNo++) {\n      Page<ConfigInfoAggr> page=persistService.findConfigInfoAggrByPage(dataId,group,tenant,pageNo,PAGE_SIZE);\n      if (page != null) {\n        datumList.addAll(page.getPageItems());\n        LOGGER.info(\"[merge-query] {}, {}, size/total={}/{}\",dataId,group,datumList.size(),rowCount);\n      }\n    }\n    final Timestamp time=TimeUtils.getCurrentTime();\n    if (datumList.size() > 0) {\n      ConfigInfo cf=merge(dataId,group,tenant,datumList);\n      persistService.insertOrUpdate(null,null,cf,time,null);\n      LOGGER.info(\"[merge-ok] {}, {}, size={}, length={}, md5={}, content={}\",dataId,group,datumList.size(),cf.getContent().length(),cf.getMd5(),ContentUtils.truncateContent(cf.getContent()));\n      ConfigTraceService.logPersistenceEvent(dataId,group,tenant,null,time.getTime(),InetUtils.getSelfIP(),ConfigTraceService.PERSISTENCE_EVENT_MERGE,cf.getContent());\n    }\n else {\n      if (StringUtils.isBlank(tag)) {\n        persistService.removeConfigInfo(dataId,group,tenant,clientIp,null);\n      }\n else {\n        persistService.removeConfigInfoTag(dataId,group,tenant,tag,clientIp,null);\n      }\n      LOGGER.warn(\"[merge-delete] delete config info because no datum. dataId=\" + dataId + \", groupId=\"+ group);\n      ConfigTraceService.logPersistenceEvent(dataId,group,tenant,null,time.getTime(),InetUtils.getSelfIP(),ConfigTraceService.PERSISTENCE_EVENT_REMOVE,null);\n    }\n    NotifyCenter.publishEvent(new ConfigDataChangeEvent(false,dataId,group,tenant,tag,time.getTime()));\n  }\n catch (  Exception e) {\n    mergeService.addMergeTask(dataId,group,tenant,mergeTask.getClientIp());\n    LOGGER.info(\"[merge-error] \" + dataId + \", \"+ group+ \", \"+ e.toString(),e);\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 327,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3052,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean process(NacosTask task){\n  MergeDataTask mergeTask=(MergeDataTask)task;\n  final String dataId=mergeTask.dataId;\n  final String group=mergeTask.groupId;\n  final String tenant=mergeTask.tenant;\n  final String tag=mergeTask.tag;\n  final String clientIp=mergeTask.getClientIp();\n  try {\n    List<ConfigInfoAggr> datumList=new ArrayList<ConfigInfoAggr>();\n    int rowCount=persistService.aggrConfigInfoCount(dataId,group,tenant);\n    int pageCount=(int)Math.ceil(rowCount * 1.0 / PAGE_SIZE);\n    for (int pageNo=1; pageNo <= pageCount; pageNo++) {\n      Page<ConfigInfoAggr> page=persistService.findConfigInfoAggrByPage(dataId,group,tenant,pageNo,PAGE_SIZE);\n      if (page != null) {\n        datumList.addAll(page.getPageItems());\n        LOGGER.info(\"[merge-query] {}, {}, size/total={}/{}\",dataId,group,datumList.size(),rowCount);\n      }\n    }\n    final Timestamp time=TimeUtils.getCurrentTime();\n    if (datumList.size() > 0) {\n      ConfigInfo cf=merge(dataId,group,tenant,datumList);\n      persistService.insertOrUpdate(null,null,cf,time,null);\n      LOGGER.info(\"[merge-ok] {}, {}, size={}, length={}, md5={}, content={}\",dataId,group,datumList.size(),cf.getContent().length(),cf.getMd5(),ContentUtils.truncateContent(cf.getContent()));\n      ConfigTraceService.logPersistenceEvent(dataId,group,tenant,null,time.getTime(),InetUtils.getSelfIP(),ConfigTraceService.PERSISTENCE_EVENT_MERGE,cf.getContent());\n    }\n else {\n      if (StringUtils.isBlank(tag)) {\n        persistService.removeConfigInfo(dataId,group,tenant,clientIp,null);\n      }\n else {\n        persistService.removeConfigInfoTag(dataId,group,tenant,tag,clientIp,null);\n      }\n      LOGGER.warn(\"[merge-delete] delete config info because no datum. dataId=\" + dataId + \", groupId=\"+ group);\n      ConfigTraceService.logPersistenceEvent(dataId,group,tenant,null,time.getTime(),InetUtils.getSelfIP(),ConfigTraceService.PERSISTENCE_EVENT_REMOVE,null);\n    }\n    NotifyCenter.publishEvent(new ConfigDataChangeEvent(false,dataId,group,tenant,tag,time.getTime()));\n  }\n catch (  Exception e) {\n    mergeService.addMergeTask(dataId,group,tenant,mergeTask.getClientIp());\n    LOGGER.info(\"[merge-error] \" + dataId + \", \"+ group+ \", \"+ e.toString(),e);\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 337,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 62
      },
      "nodeContext" : "final Timestamp time=TimeUtils.getCurrentTime();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.sql.Timestamp"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 75,
    "startColumnNumber" : 35,
    "endLineNumber" : 75,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}