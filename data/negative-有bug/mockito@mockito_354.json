{
  "id" : 354,
  "expression" : "new DefaultInjectionEngine()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/configuration/InjectingAnnotationEngine.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new DefaultInjectionEngine()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 117,
      "startColumnNumber" : 8,
      "endLineNumber" : 117,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 83
      },
      "nodeContext" : "new DefaultInjectionEngine().injectMocksOnFields(mockDependentFields,mocks,testClassInstance)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 84
      },
      "nodeContext" : "new DefaultInjectionEngine().injectMocksOnFields(mockDependentFields,mocks,testClassInstance);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 856,
        "startLineNumber" : 105,
        "startColumnNumber" : 79,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> clazz=testClassInstance.getClass();\n  Set<Field> mockDependentFields=new HashSet<Field>();\n  Set<Object> mocks=newMockSafeHashSet();\n  while (clazz != Object.class) {\n    new InjectMocksScanner(clazz).addTo(mockDependentFields);\n    new MockScanner(testClassInstance,clazz).addPreparedMocks(mocks);\n    onInjection(testClassInstance,clazz,mockDependentFields,mocks);\n    clazz=clazz.getSuperclass();\n  }\n  new DefaultInjectionEngine().injectMocksOnFields(mockDependentFields,mocks,testClassInstance);\n  return () -> {\n    for (    Object mock : mocks) {\n      if (mock instanceof ScopedMock) {\n        ((ScopedMock)mock).closeOnDemand();\n      }\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1255,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Initializes mock/spies dependencies for objects annotated with &#064;InjectMocks for given testClassInstance. <p> See examples in javadoc for  {@link MockitoAnnotations} class.\n * @param testClassInstance Test class, usually <code>this</code>\n */\nprivate AutoCloseable injectCloseableMocks(final Object testClassInstance){\n  Class<?> clazz=testClassInstance.getClass();\n  Set<Field> mockDependentFields=new HashSet<Field>();\n  Set<Object> mocks=newMockSafeHashSet();\n  while (clazz != Object.class) {\n    new InjectMocksScanner(clazz).addTo(mockDependentFields);\n    new MockScanner(testClassInstance,clazz).addPreparedMocks(mocks);\n    onInjection(testClassInstance,clazz,mockDependentFields,mocks);\n    clazz=clazz.getSuperclass();\n  }\n  new DefaultInjectionEngine().injectMocksOnFields(mockDependentFields,mocks,testClassInstance);\n  return () -> {\n    for (    Object mock : mocks) {\n      if (mock instanceof ScopedMock) {\n        ((ScopedMock)mock).closeOnDemand();\n      }\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 83
      },
      "nodeContext" : "new DefaultInjectionEngine().injectMocksOnFields(mockDependentFields,mocks,testClassInstance)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.mockito.internal.configuration.DefaultInjectionEngine"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 117,
    "startColumnNumber" : 8,
    "endLineNumber" : 117,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}