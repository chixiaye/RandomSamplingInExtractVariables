{
  "id" : 181,
  "expression" : "Thread",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/subprojects/module-test/src/test/java/org/mockito/moduletest/ModuleAccessTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Thread",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 31,
      "startColumnNumber" : 36,
      "endLineNumber" : 31,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 31,
        "startColumnNumber" : 36,
        "endLineNumber" : 31,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Thread.currentThread()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 31,
        "startColumnNumber" : 36,
        "endLineNumber" : 31,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Thread.currentThread().getContextClassLoader()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 31,
        "startColumnNumber" : 20,
        "endLineNumber" : 31,
        "endColumnNumber" : 82
      },
      "nodeContext" : "contextLoader=Thread.currentThread().getContextClassLoader()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 83
      },
      "nodeContext" : "ClassLoader contextLoader=Thread.currentThread().getContextClassLoader();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1029,
        "startLineNumber" : 24,
        "startColumnNumber" : 92,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Path jar=modularJar(false,false,false);\n  ModuleLayer layer=layer(jar,false,true);\n  ClassLoader loader=layer.findLoader(\"mockito.test\");\n  Class<?> type=loader.loadClass(\"sample.MyCallable\");\n  ClassLoader contextLoader=Thread.currentThread().getContextClassLoader();\n  Thread.currentThread().setContextClassLoader(loader);\n  try {\n    Class<?> moduleMemberAccessor=loader.loadClass(ModuleMemberAccessor.class.getName());\n    Object instance=moduleMemberAccessor.getConstructor().newInstance();\n    @SuppressWarnings(\"unchecked\") Callable<String> mock=(Callable<String>)moduleMemberAccessor.getMethod(\"newInstance\",Constructor.class,Object[].class).invoke(instance,type.getConstructor(),new Object[0]);\n    assertThat(mock.call()).isEqualTo(\"foo\");\n  }\n  finally {\n    Thread.currentThread().setContextClassLoader(contextLoader);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void can_access_non_opened_module_with_module_member_accessor() throws Exception {\n  Path jar=modularJar(false,false,false);\n  ModuleLayer layer=layer(jar,false,true);\n  ClassLoader loader=layer.findLoader(\"mockito.test\");\n  Class<?> type=loader.loadClass(\"sample.MyCallable\");\n  ClassLoader contextLoader=Thread.currentThread().getContextClassLoader();\n  Thread.currentThread().setContextClassLoader(loader);\n  try {\n    Class<?> moduleMemberAccessor=loader.loadClass(ModuleMemberAccessor.class.getName());\n    Object instance=moduleMemberAccessor.getConstructor().newInstance();\n    @SuppressWarnings(\"unchecked\") Callable<String> mock=(Callable<String>)moduleMemberAccessor.getMethod(\"newInstance\",Constructor.class,Object[].class).invoke(instance,type.getConstructor(),new Object[0]);\n    assertThat(mock.call()).isEqualTo(\"foo\");\n  }\n  finally {\n    Thread.currentThread().setContextClassLoader(contextLoader);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 83
      },
      "nodeContext" : "ClassLoader contextLoader=Thread.currentThread().getContextClassLoader();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Thread"
  }, {
    "nodeContext" : "Thread",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 32,
      "startColumnNumber" : 8,
      "endLineNumber" : 32,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Thread.currentThread()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Thread.currentThread().setContextClassLoader(loader)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Thread.currentThread().setContextClassLoader(loader);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1029,
        "startLineNumber" : 24,
        "startColumnNumber" : 92,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Path jar=modularJar(false,false,false);\n  ModuleLayer layer=layer(jar,false,true);\n  ClassLoader loader=layer.findLoader(\"mockito.test\");\n  Class<?> type=loader.loadClass(\"sample.MyCallable\");\n  ClassLoader contextLoader=Thread.currentThread().getContextClassLoader();\n  Thread.currentThread().setContextClassLoader(loader);\n  try {\n    Class<?> moduleMemberAccessor=loader.loadClass(ModuleMemberAccessor.class.getName());\n    Object instance=moduleMemberAccessor.getConstructor().newInstance();\n    @SuppressWarnings(\"unchecked\") Callable<String> mock=(Callable<String>)moduleMemberAccessor.getMethod(\"newInstance\",Constructor.class,Object[].class).invoke(instance,type.getConstructor(),new Object[0]);\n    assertThat(mock.call()).isEqualTo(\"foo\");\n  }\n  finally {\n    Thread.currentThread().setContextClassLoader(contextLoader);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void can_access_non_opened_module_with_module_member_accessor() throws Exception {\n  Path jar=modularJar(false,false,false);\n  ModuleLayer layer=layer(jar,false,true);\n  ClassLoader loader=layer.findLoader(\"mockito.test\");\n  Class<?> type=loader.loadClass(\"sample.MyCallable\");\n  ClassLoader contextLoader=Thread.currentThread().getContextClassLoader();\n  Thread.currentThread().setContextClassLoader(loader);\n  try {\n    Class<?> moduleMemberAccessor=loader.loadClass(ModuleMemberAccessor.class.getName());\n    Object instance=moduleMemberAccessor.getConstructor().newInstance();\n    @SuppressWarnings(\"unchecked\") Callable<String> mock=(Callable<String>)moduleMemberAccessor.getMethod(\"newInstance\",Constructor.class,Object[].class).invoke(instance,type.getConstructor(),new Object[0]);\n    assertThat(mock.call()).isEqualTo(\"foo\");\n  }\n  finally {\n    Thread.currentThread().setContextClassLoader(contextLoader);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Thread.currentThread().setContextClassLoader(loader);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Thread"
  }, {
    "nodeContext" : "Thread",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 42,
      "startColumnNumber" : 12,
      "endLineNumber" : 42,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Thread.currentThread()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Thread.currentThread().setContextClassLoader(contextLoader)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Thread.currentThread().setContextClassLoader(contextLoader);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 41,
        "startColumnNumber" : 18,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Thread.currentThread().setContextClassLoader(contextLoader);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 624,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Class<?> moduleMemberAccessor=loader.loadClass(ModuleMemberAccessor.class.getName());\n  Object instance=moduleMemberAccessor.getConstructor().newInstance();\n  @SuppressWarnings(\"unchecked\") Callable<String> mock=(Callable<String>)moduleMemberAccessor.getMethod(\"newInstance\",Constructor.class,Object[].class).invoke(instance,type.getConstructor(),new Object[0]);\n  assertThat(mock.call()).isEqualTo(\"foo\");\n}\n  finally {\n  Thread.currentThread().setContextClassLoader(contextLoader);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 85,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1029,
        "startLineNumber" : 24,
        "startColumnNumber" : 92,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Path jar=modularJar(false,false,false);\n  ModuleLayer layer=layer(jar,false,true);\n  ClassLoader loader=layer.findLoader(\"mockito.test\");\n  Class<?> type=loader.loadClass(\"sample.MyCallable\");\n  ClassLoader contextLoader=Thread.currentThread().getContextClassLoader();\n  Thread.currentThread().setContextClassLoader(loader);\n  try {\n    Class<?> moduleMemberAccessor=loader.loadClass(ModuleMemberAccessor.class.getName());\n    Object instance=moduleMemberAccessor.getConstructor().newInstance();\n    @SuppressWarnings(\"unchecked\") Callable<String> mock=(Callable<String>)moduleMemberAccessor.getMethod(\"newInstance\",Constructor.class,Object[].class).invoke(instance,type.getConstructor(),new Object[0]);\n    assertThat(mock.call()).isEqualTo(\"foo\");\n  }\n  finally {\n    Thread.currentThread().setContextClassLoader(contextLoader);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void can_access_non_opened_module_with_module_member_accessor() throws Exception {\n  Path jar=modularJar(false,false,false);\n  ModuleLayer layer=layer(jar,false,true);\n  ClassLoader loader=layer.findLoader(\"mockito.test\");\n  Class<?> type=loader.loadClass(\"sample.MyCallable\");\n  ClassLoader contextLoader=Thread.currentThread().getContextClassLoader();\n  Thread.currentThread().setContextClassLoader(loader);\n  try {\n    Class<?> moduleMemberAccessor=loader.loadClass(ModuleMemberAccessor.class.getName());\n    Object instance=moduleMemberAccessor.getConstructor().newInstance();\n    @SuppressWarnings(\"unchecked\") Callable<String> mock=(Callable<String>)moduleMemberAccessor.getMethod(\"newInstance\",Constructor.class,Object[].class).invoke(instance,type.getConstructor(),new Object[0]);\n    assertThat(mock.call()).isEqualTo(\"foo\");\n  }\n  finally {\n    Thread.currentThread().setContextClassLoader(contextLoader);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Thread.currentThread().setContextClassLoader(contextLoader);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Thread"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 31,
    "startColumnNumber" : 36,
    "endLineNumber" : 31,
    "endColumnNumber" : 42
  }, {
    "charLength" : 6,
    "startLineNumber" : 32,
    "startColumnNumber" : 8,
    "endLineNumber" : 32,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 42,
    "startColumnNumber" : 12,
    "endLineNumber" : 42,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}