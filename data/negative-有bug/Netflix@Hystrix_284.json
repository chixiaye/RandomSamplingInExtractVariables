{
  "id" : 284,
  "expression" : "command.getProperties().metricsRollingStatisticalWindowInMilliseconds().get().intValue()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-javanica/src/test/java/com/netflix/hystrix/contrib/javanica/test/common/configuration/command/BasicCommandPropertiesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "command.getProperties().metricsRollingStatisticalWindowInMilliseconds().get().intValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 88,
      "startLineNumber" : 149,
      "startColumnNumber" : 26,
      "endLineNumber" : 149,
      "endColumnNumber" : 114
    },
    "astNodeNumber" : 9,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 115
      },
      "nodeContext" : "assertEquals(500,command.getProperties().metricsRollingStatisticalWindowInMilliseconds().get().intValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 116
      },
      "nodeContext" : "assertEquals(500,command.getProperties().metricsRollingStatisticalWindowInMilliseconds().get().intValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2874,
        "startLineNumber" : 123,
        "startColumnNumber" : 47,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  User u1=userService.getUsingAllCommandProperties(\"1\",\"name: \");\n  assertEquals(\"name: 1\",u1.getName());\n  assertEquals(1,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());\n  HystrixInvokableInfo<?> command=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().iterator().next();\n  assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n  assertEquals(HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE,command.getProperties().executionIsolationStrategy().get());\n  assertEquals(500,command.getProperties().executionTimeoutInMilliseconds().get().intValue());\n  assertEquals(true,command.getProperties().executionTimeoutEnabled().get().booleanValue());\n  assertEquals(false,command.getProperties().executionIsolationThreadInterruptOnTimeout().get().booleanValue());\n  assertEquals(10,command.getProperties().executionIsolationSemaphoreMaxConcurrentRequests().get().intValue());\n  assertEquals(15,command.getProperties().fallbackIsolationSemaphoreMaxConcurrentRequests().get().intValue());\n  assertEquals(false,command.getProperties().fallbackEnabled().get().booleanValue());\n  assertEquals(false,command.getProperties().circuitBreakerEnabled().get().booleanValue());\n  assertEquals(30,command.getProperties().circuitBreakerRequestVolumeThreshold().get().intValue());\n  assertEquals(250,command.getProperties().circuitBreakerSleepWindowInMilliseconds().get().intValue());\n  assertEquals(60,command.getProperties().circuitBreakerErrorThresholdPercentage().get().intValue());\n  assertEquals(false,command.getProperties().circuitBreakerForceOpen().get().booleanValue());\n  assertEquals(true,command.getProperties().circuitBreakerForceClosed().get().booleanValue());\n  assertEquals(false,command.getProperties().metricsRollingPercentileEnabled().get().booleanValue());\n  assertEquals(400,command.getProperties().metricsRollingPercentileWindowInMilliseconds().get().intValue());\n  assertEquals(5,command.getProperties().metricsRollingPercentileWindowBuckets().get().intValue());\n  assertEquals(6,command.getProperties().metricsRollingPercentileBucketSize().get().intValue());\n  assertEquals(10,command.getProperties().metricsRollingStatisticalWindowBuckets().get().intValue());\n  assertEquals(500,command.getProperties().metricsRollingStatisticalWindowInMilliseconds().get().intValue());\n  assertEquals(312,command.getProperties().metricsHealthSnapshotIntervalInMilliseconds().get().intValue());\n  assertEquals(false,command.getProperties().requestCacheEnabled().get().booleanValue());\n  assertEquals(true,command.getProperties().requestLogEnabled().get().booleanValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2927,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testHystrixCommandProperties(){\n  User u1=userService.getUsingAllCommandProperties(\"1\",\"name: \");\n  assertEquals(\"name: 1\",u1.getName());\n  assertEquals(1,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());\n  HystrixInvokableInfo<?> command=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().iterator().next();\n  assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n  assertEquals(HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE,command.getProperties().executionIsolationStrategy().get());\n  assertEquals(500,command.getProperties().executionTimeoutInMilliseconds().get().intValue());\n  assertEquals(true,command.getProperties().executionTimeoutEnabled().get().booleanValue());\n  assertEquals(false,command.getProperties().executionIsolationThreadInterruptOnTimeout().get().booleanValue());\n  assertEquals(10,command.getProperties().executionIsolationSemaphoreMaxConcurrentRequests().get().intValue());\n  assertEquals(15,command.getProperties().fallbackIsolationSemaphoreMaxConcurrentRequests().get().intValue());\n  assertEquals(false,command.getProperties().fallbackEnabled().get().booleanValue());\n  assertEquals(false,command.getProperties().circuitBreakerEnabled().get().booleanValue());\n  assertEquals(30,command.getProperties().circuitBreakerRequestVolumeThreshold().get().intValue());\n  assertEquals(250,command.getProperties().circuitBreakerSleepWindowInMilliseconds().get().intValue());\n  assertEquals(60,command.getProperties().circuitBreakerErrorThresholdPercentage().get().intValue());\n  assertEquals(false,command.getProperties().circuitBreakerForceOpen().get().booleanValue());\n  assertEquals(true,command.getProperties().circuitBreakerForceClosed().get().booleanValue());\n  assertEquals(false,command.getProperties().metricsRollingPercentileEnabled().get().booleanValue());\n  assertEquals(400,command.getProperties().metricsRollingPercentileWindowInMilliseconds().get().intValue());\n  assertEquals(5,command.getProperties().metricsRollingPercentileWindowBuckets().get().intValue());\n  assertEquals(6,command.getProperties().metricsRollingPercentileBucketSize().get().intValue());\n  assertEquals(10,command.getProperties().metricsRollingStatisticalWindowBuckets().get().intValue());\n  assertEquals(500,command.getProperties().metricsRollingStatisticalWindowInMilliseconds().get().intValue());\n  assertEquals(312,command.getProperties().metricsHealthSnapshotIntervalInMilliseconds().get().intValue());\n  assertEquals(false,command.getProperties().requestCacheEnabled().get().booleanValue());\n  assertEquals(true,command.getProperties().requestLogEnabled().get().booleanValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 350,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 116
      },
      "nodeContext" : "assertEquals(500,command.getProperties().metricsRollingStatisticalWindowInMilliseconds().get().intValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 88,
    "startLineNumber" : 149,
    "startColumnNumber" : 26,
    "endLineNumber" : 149,
    "endColumnNumber" : 114
  } ],
  "layoutRelationDataList" : [ ]
}