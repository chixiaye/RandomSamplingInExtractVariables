{
  "id" : 264,
  "expression" : "new Config(sampleRateHz,channelCount,codecs)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/main/java/com/google/android/exoplayer2/audio/AacUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Config(sampleRateHz,channelCount,codecs)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 257,
      "startColumnNumber" : 11,
      "endLineNumber" : 257,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 257,
        "startColumnNumber" : 4,
        "endLineNumber" : 257,
        "endColumnNumber" : 58
      },
      "nodeContext" : "return new Config(sampleRateHz,channelCount,codecs);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2351,
        "startLineNumber" : 195,
        "startColumnNumber" : 29,
        "endLineNumber" : 258,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int audioObjectType=getAudioObjectType(bitArray);\n  int sampleRateHz=getSamplingFrequency(bitArray);\n  int channelConfiguration=bitArray.readBits(4);\n  String codecs=CODECS_STRING_PREFIX + audioObjectType;\n  if (audioObjectType == AUDIO_OBJECT_TYPE_AAC_SBR || audioObjectType == AUDIO_OBJECT_TYPE_AAC_PS) {\n    sampleRateHz=getSamplingFrequency(bitArray);\n    audioObjectType=getAudioObjectType(bitArray);\n    if (audioObjectType == AUDIO_OBJECT_TYPE_AAC_ER_BSAC) {\n      channelConfiguration=bitArray.readBits(4);\n    }\n  }\n  if (forceReadToEnd) {\nswitch (audioObjectType) {\ncase 1:case 2:case 3:case 4:case 6:case 7:case 17:case 19:case 20:case 21:case 22:case 23:      parseGaSpecificConfig(bitArray,audioObjectType,channelConfiguration);\n    break;\ndefault:  throw ParserException.createForUnsupportedContainerFeature(\"Unsupported audio object type: \" + audioObjectType);\n}\nswitch (audioObjectType) {\ncase 17:case 19:case 20:case 21:case 22:case 23:int epConfig=bitArray.readBits(2);\nif (epConfig == 2 || epConfig == 3) {\nthrow ParserException.createForUnsupportedContainerFeature(\"Unsupported epConfig: \" + epConfig);\n}\nbreak;\ndefault:break;\n}\n}\nint channelCount=AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE[channelConfiguration];\nif (channelCount == AUDIO_SPECIFIC_CONFIG_CHANNEL_CONFIGURATION_INVALID) {\nthrow ParserException.createForMalformedContainer(null,null);\n}\nreturn new Config(sampleRateHz,channelCount,codecs);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3046,
        "startLineNumber" : 183,
        "startColumnNumber" : 2,
        "endLineNumber" : 258,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Parses an AAC AudioSpecificConfig, as defined in ISO 14496-3 1.6.2.1\n * @param bitArray A {@link ParsableBitArray} containing the AudioSpecificConfig to parse. Theposition is advanced to the end of the AudioSpecificConfig.\n * @param forceReadToEnd Whether the entire AudioSpecificConfig should be read. Required forknowing the length of the configuration payload.\n * @return The parsed configuration.\n * @throws ParserException If the AudioSpecificConfig cannot be parsed because it is invalid orunsupported.\n */\npublic static Config parseAudioSpecificConfig(ParsableBitArray bitArray,boolean forceReadToEnd) throws ParserException {\n  int audioObjectType=getAudioObjectType(bitArray);\n  int sampleRateHz=getSamplingFrequency(bitArray);\n  int channelConfiguration=bitArray.readBits(4);\n  String codecs=CODECS_STRING_PREFIX + audioObjectType;\n  if (audioObjectType == AUDIO_OBJECT_TYPE_AAC_SBR || audioObjectType == AUDIO_OBJECT_TYPE_AAC_PS) {\n    sampleRateHz=getSamplingFrequency(bitArray);\n    audioObjectType=getAudioObjectType(bitArray);\n    if (audioObjectType == AUDIO_OBJECT_TYPE_AAC_ER_BSAC) {\n      channelConfiguration=bitArray.readBits(4);\n    }\n  }\n  if (forceReadToEnd) {\nswitch (audioObjectType) {\ncase 1:case 2:case 3:case 4:case 6:case 7:case 17:case 19:case 20:case 21:case 22:case 23:      parseGaSpecificConfig(bitArray,audioObjectType,channelConfiguration);\n    break;\ndefault:  throw ParserException.createForUnsupportedContainerFeature(\"Unsupported audio object type: \" + audioObjectType);\n}\nswitch (audioObjectType) {\ncase 17:case 19:case 20:case 21:case 22:case 23:int epConfig=bitArray.readBits(2);\nif (epConfig == 2 || epConfig == 3) {\nthrow ParserException.createForUnsupportedContainerFeature(\"Unsupported epConfig: \" + epConfig);\n}\nbreak;\ndefault:break;\n}\n}\nint channelCount=AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE[channelConfiguration];\nif (channelCount == AUDIO_SPECIFIC_CONFIG_CHANNEL_CONFIGURATION_INVALID) {\nthrow ParserException.createForMalformedContainer(null,null);\n}\nreturn new Config(sampleRateHz,channelCount,codecs);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 257,
        "startColumnNumber" : 4,
        "endLineNumber" : 257,
        "endColumnNumber" : 58
      },
      "nodeContext" : "return new Config(sampleRateHz,channelCount,codecs);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "com.google.android.exoplayer2.audio.AacUtil.Config"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 257,
    "startColumnNumber" : 11,
    "endLineNumber" : 257,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}