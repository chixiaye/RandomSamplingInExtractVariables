{
  "id" : 218,
  "expression" : "newPartitionPath",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-hive/src/test/java/com/facebook/presto/hive/BaseTestHiveInsertOverwrite.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newPartitionPath",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 153,
      "startColumnNumber" : 39,
      "endLineNumber" : 153,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertEquals(oldPartitionPath,newPartitionPath)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertEquals(oldPartitionPath,newPartitionPath);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 769,
        "startLineNumber" : 138,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  computeActual(format(\"INSERT INTO %s VALUES \" + \"('POLAND', 'Test Data', 25, 5), \" + \"('CZECH', 'Test Data', 26, 5)\",testTable));\n  String oldPartitionPath=getPartitionPath(testTable);\n  assertQuery(format(\"SELECT count(*) FROM %s WHERE regionkey = 5\",testTable),\"SELECT 2\");\n  computeActual(format(\"INSERT INTO %s values('POLAND', 'Overwrite', 25, 5)\",testTable));\n  String newPartitionPath=getPartitionPath(testTable);\n  assertQuery(format(\"SELECT count(*) FROM %s WHERE regionkey = 5\",testTable),\"SELECT 1\");\n  assertEquals(oldPartitionPath,newPartitionPath);\n  computeActual(format(\"DROP TABLE %s\",testTable));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void assertOverwritePartition(String testTable){\n  computeActual(format(\"INSERT INTO %s VALUES \" + \"('POLAND', 'Test Data', 25, 5), \" + \"('CZECH', 'Test Data', 26, 5)\",testTable));\n  String oldPartitionPath=getPartitionPath(testTable);\n  assertQuery(format(\"SELECT count(*) FROM %s WHERE regionkey = 5\",testTable),\"SELECT 2\");\n  computeActual(format(\"INSERT INTO %s values('POLAND', 'Overwrite', 25, 5)\",testTable));\n  String newPartitionPath=getPartitionPath(testTable);\n  assertQuery(format(\"SELECT count(*) FROM %s WHERE regionkey = 5\",testTable),\"SELECT 1\");\n  assertEquals(oldPartitionPath,newPartitionPath);\n  computeActual(format(\"DROP TABLE %s\",testTable));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertEquals(oldPartitionPath,newPartitionPath);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 153,
    "startColumnNumber" : 39,
    "endLineNumber" : 153,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}