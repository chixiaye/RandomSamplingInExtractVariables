{
  "id" : 88,
  "expression" : "\"61\"",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-http2/src/test/java/io/netty/handler/codec/http2/HpackDecoderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"61\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 420,
      "startColumnNumber" : 22,
      "endLineNumber" : 420,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 420,
        "startColumnNumber" : 12,
        "endLineNumber" : 420,
        "endColumnNumber" : 27
      },
      "nodeContext" : "sb.append(\"61\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 420,
        "startColumnNumber" : 12,
        "endLineNumber" : 420,
        "endColumnNumber" : 28
      },
      "nodeContext" : "sb.append(\"61\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 419,
        "startColumnNumber" : 39,
        "endLineNumber" : 421,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  sb.append(\"61\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 419,
        "startColumnNumber" : 8,
        "endLineNumber" : 421,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 4096; i++) {\n  sb.append(\"61\");\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 405,
        "startColumnNumber" : 91,
        "endLineNumber" : 431,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  decode(\"4004\" + hex(\"name\") + \"05\"+ hex(\"value\"));\n  verify(mockHeaders).add(of(\"name\"),of(\"value\"));\n  verifyNoMoreInteractions(mockHeaders);\n  reset(mockHeaders);\n  StringBuilder sb=new StringBuilder();\n  for (int i=0; i < 4096; i++) {\n    sb.append('a');\n  }\n  String value=sb.toString();\n  sb=new StringBuilder();\n  sb.append(\"417F811F\");\n  for (int i=0; i < 4096; i++) {\n    sb.append(\"61\");\n  }\n  decode(sb.toString());\n  verify(mockHeaders).add(of(\":authority\"),of(value));\n  verifyNoMoreInteractions(mockHeaders);\n  reset(mockHeaders);\n  decode(\"4004\" + hex(\"name\") + \"05\"+ hex(\"value\")+ \"BE\");\n  verify(mockHeaders,times(2)).add(of(\"name\"),of(\"value\"));\n  verifyNoMoreInteractions(mockHeaders);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 404,
        "startColumnNumber" : 4,
        "endLineNumber" : 431,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testLiteralWithIncrementalIndexingCompleteEviction() throws Http2Exception {\n  decode(\"4004\" + hex(\"name\") + \"05\"+ hex(\"value\"));\n  verify(mockHeaders).add(of(\"name\"),of(\"value\"));\n  verifyNoMoreInteractions(mockHeaders);\n  reset(mockHeaders);\n  StringBuilder sb=new StringBuilder();\n  for (int i=0; i < 4096; i++) {\n    sb.append('a');\n  }\n  String value=sb.toString();\n  sb=new StringBuilder();\n  sb.append(\"417F811F\");\n  for (int i=0; i < 4096; i++) {\n    sb.append(\"61\");\n  }\n  decode(sb.toString());\n  verify(mockHeaders).add(of(\":authority\"),of(value));\n  verifyNoMoreInteractions(mockHeaders);\n  reset(mockHeaders);\n  decode(\"4004\" + hex(\"name\") + \"05\"+ hex(\"value\")+ \"BE\");\n  verify(mockHeaders,times(2)).add(of(\"name\"),of(\"value\"));\n  verifyNoMoreInteractions(mockHeaders);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 420,
        "startColumnNumber" : 12,
        "endLineNumber" : 420,
        "endColumnNumber" : 28
      },
      "nodeContext" : "sb.append(\"61\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 420,
    "startColumnNumber" : 22,
    "endLineNumber" : 420,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}