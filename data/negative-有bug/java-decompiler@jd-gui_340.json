{
  "id" : 340,
  "expression" : "sameContainerEntries.size() > 0",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/view/component/WebXmlFilePage.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sameContainerEntries.size() > 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 79,
      "startColumnNumber" : 24,
      "endLineNumber" : 79,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 292,
        "startLineNumber" : 79,
        "startColumnNumber" : 20,
        "endLineNumber" : 83,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (sameContainerEntries.size() > 0) {\n  api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n}\n else if (entries.size() > 0) {\n  api.openURI(x,y,entries,null,data.internalTypeName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 971,
        "startLineNumber" : 67,
        "startColumnNumber" : 23,
        "endLineNumber" : 84,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String internalTypeName=data.internalTypeName;\n  List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n  String rootUri=entry.getContainer().getRoot().getUri().toString();\n  ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n  for (  Container.Entry entry : entries) {\n    if (entry.getUri().toString().startsWith(rootUri)) {\n      sameContainerEntries.add(entry);\n    }\n  }\n  if (sameContainerEntries.size() > 0) {\n    api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n  }\n else   if (entries.size() > 0) {\n    api.openURI(x,y,entries,null,data.internalTypeName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1421,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 84,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (hyperlinkData instanceof PathHyperlinkData) {\n  PathHyperlinkData d=(PathHyperlinkData)hyperlinkData;\n  String path=d.path;\n  Container.Entry entry=searchEntry(this.entry.getContainer().getRoot(),path);\n  if (entry != null) {\n    api.openURI(x,y,Collections.singletonList(entry),null,path);\n  }\n}\n else {\n  String internalTypeName=data.internalTypeName;\n  List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n  String rootUri=entry.getContainer().getRoot().getUri().toString();\n  ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n  for (  Container.Entry entry : entries) {\n    if (entry.getUri().toString().startsWith(rootUri)) {\n      sameContainerEntries.add(entry);\n    }\n  }\n  if (sameContainerEntries.size() > 0) {\n    api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n  }\n else   if (entries.size() > 0) {\n    api.openURI(x,y,entries,null,data.internalTypeName);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 169,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1858,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 85,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Point location=textArea.getLocationOnScreen();\n  int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n  URI uri=entry.getUri();\n  api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n  if (hyperlinkData instanceof PathHyperlinkData) {\n    PathHyperlinkData d=(PathHyperlinkData)hyperlinkData;\n    String path=d.path;\n    Container.Entry entry=searchEntry(this.entry.getContainer().getRoot(),path);\n    if (entry != null) {\n      api.openURI(x,y,Collections.singletonList(entry),null,path);\n    }\n  }\n else {\n    String internalTypeName=data.internalTypeName;\n    List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n    String rootUri=entry.getContainer().getRoot().getUri().toString();\n    ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n    for (    Container.Entry entry : entries) {\n      if (entry.getUri().toString().startsWith(rootUri)) {\n        sameContainerEntries.add(entry);\n      }\n    }\n    if (sameContainerEntries.size() > 0) {\n      api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n    }\n else     if (entries.size() > 0) {\n      api.openURI(x,y,entries,null,data.internalTypeName);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1966,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Point location=textArea.getLocationOnScreen();\n  int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n  URI uri=entry.getUri();\n  api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n  if (hyperlinkData instanceof PathHyperlinkData) {\n    PathHyperlinkData d=(PathHyperlinkData)hyperlinkData;\n    String path=d.path;\n    Container.Entry entry=searchEntry(this.entry.getContainer().getRoot(),path);\n    if (entry != null) {\n      api.openURI(x,y,Collections.singletonList(entry),null,path);\n    }\n  }\n else {\n    String internalTypeName=data.internalTypeName;\n    List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n    String rootUri=entry.getContainer().getRoot().getUri().toString();\n    ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n    for (    Container.Entry entry : entries) {\n      if (entry.getUri().toString().startsWith(rootUri)) {\n        sameContainerEntries.add(entry);\n      }\n    }\n    if (sameContainerEntries.size() > 0) {\n      api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n    }\n else     if (entries.size() > 0) {\n      api.openURI(x,y,entries,null,data.internalTypeName);\n    }\n  }\n}\n catch (URISyntaxException e) {\n  assert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 238,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1992,
        "startLineNumber" : 51,
        "startColumnNumber" : 26,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Point location=textArea.getLocationOnScreen();\n    int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n    URI uri=entry.getUri();\n    api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n    if (hyperlinkData instanceof PathHyperlinkData) {\n      PathHyperlinkData d=(PathHyperlinkData)hyperlinkData;\n      String path=d.path;\n      Container.Entry entry=searchEntry(this.entry.getContainer().getRoot(),path);\n      if (entry != null) {\n        api.openURI(x,y,Collections.singletonList(entry),null,path);\n      }\n    }\n else {\n      String internalTypeName=data.internalTypeName;\n      List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n      String rootUri=entry.getContainer().getRoot().getUri().toString();\n      ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n      for (      Container.Entry entry : entries) {\n        if (entry.getUri().toString().startsWith(rootUri)) {\n          sameContainerEntries.add(entry);\n        }\n      }\n      if (sameContainerEntries.size() > 0) {\n        api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n      }\n else       if (entries.size() > 0) {\n        api.openURI(x,y,entries,null,data.internalTypeName);\n      }\n    }\n  }\n catch (  URISyntaxException e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 239,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2010,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (data.enabled) {\n  try {\n    Point location=textArea.getLocationOnScreen();\n    int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n    URI uri=entry.getUri();\n    api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n    if (hyperlinkData instanceof PathHyperlinkData) {\n      PathHyperlinkData d=(PathHyperlinkData)hyperlinkData;\n      String path=d.path;\n      Container.Entry entry=searchEntry(this.entry.getContainer().getRoot(),path);\n      if (entry != null) {\n        api.openURI(x,y,Collections.singletonList(entry),null,path);\n      }\n    }\n else {\n      String internalTypeName=data.internalTypeName;\n      List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n      String rootUri=entry.getContainer().getRoot().getUri().toString();\n      ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n      for (      Container.Entry entry : entries) {\n        if (entry.getUri().toString().startsWith(rootUri)) {\n          sameContainerEntries.add(entry);\n        }\n      }\n      if (sameContainerEntries.size() > 0) {\n        api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n      }\n else       if (entries.size() > 0) {\n        api.openURI(x,y,entries,null,data.internalTypeName);\n      }\n    }\n  }\n catch (  URISyntaxException e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 243,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2098,
        "startLineNumber" : 48,
        "startColumnNumber" : 76,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TypeHyperlinkData data=(TypeHyperlinkData)hyperlinkData;\n  if (data.enabled) {\n    try {\n      Point location=textArea.getLocationOnScreen();\n      int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n      URI uri=entry.getUri();\n      api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n      if (hyperlinkData instanceof PathHyperlinkData) {\n        PathHyperlinkData d=(PathHyperlinkData)hyperlinkData;\n        String path=d.path;\n        Container.Entry entry=searchEntry(this.entry.getContainer().getRoot(),path);\n        if (entry != null) {\n          api.openURI(x,y,Collections.singletonList(entry),null,path);\n        }\n      }\n else {\n        String internalTypeName=data.internalTypeName;\n        List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n        String rootUri=entry.getContainer().getRoot().getUri().toString();\n        ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n        for (        Container.Entry entry : entries) {\n          if (entry.getUri().toString().startsWith(rootUri)) {\n            sameContainerEntries.add(entry);\n          }\n        }\n        if (sameContainerEntries.size() > 0) {\n          api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n        }\n else         if (entries.size() > 0) {\n          api.openURI(x,y,entries,null,data.internalTypeName);\n        }\n      }\n    }\n catch (    URISyntaxException e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 253,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2170,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void openHyperlink(int x,int y,HyperlinkData hyperlinkData){\n  TypeHyperlinkData data=(TypeHyperlinkData)hyperlinkData;\n  if (data.enabled) {\n    try {\n      Point location=textArea.getLocationOnScreen();\n      int offset=textArea.viewToModel(new Point(x - location.x,y - location.y));\n      URI uri=entry.getUri();\n      api.addURI(new URI(uri.getScheme(),uri.getAuthority(),uri.getPath(),\"position=\" + offset,null));\n      if (hyperlinkData instanceof PathHyperlinkData) {\n        PathHyperlinkData d=(PathHyperlinkData)hyperlinkData;\n        String path=d.path;\n        Container.Entry entry=searchEntry(this.entry.getContainer().getRoot(),path);\n        if (entry != null) {\n          api.openURI(x,y,Collections.singletonList(entry),null,path);\n        }\n      }\n else {\n        String internalTypeName=data.internalTypeName;\n        List<Container.Entry> entries=IndexesUtil.findInternalTypeName(collectionOfFutureIndexes,internalTypeName);\n        String rootUri=entry.getContainer().getRoot().getUri().toString();\n        ArrayList<Container.Entry> sameContainerEntries=new ArrayList<>();\n        for (        Container.Entry entry : entries) {\n          if (entry.getUri().toString().startsWith(rootUri)) {\n            sameContainerEntries.add(entry);\n          }\n        }\n        if (sameContainerEntries.size() > 0) {\n          api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n        }\n else         if (entries.size() > 0) {\n          api.openURI(x,y,entries,null,data.internalTypeName);\n        }\n      }\n    }\n catch (    URISyntaxException e) {\n      assert ExceptionUtil.printStackTrace(e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 267,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 292,
        "startLineNumber" : 79,
        "startColumnNumber" : 20,
        "endLineNumber" : 83,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (sameContainerEntries.size() > 0) {\n  api.openURI(x,y,sameContainerEntries,null,data.internalTypeName);\n}\n else if (entries.size() > 0) {\n  api.openURI(x,y,entries,null,data.internalTypeName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 79,
    "startColumnNumber" : 24,
    "endLineNumber" : 79,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}