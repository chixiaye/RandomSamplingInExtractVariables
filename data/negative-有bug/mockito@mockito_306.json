{
  "id" : 306,
  "expression" : "classToMock == i",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/util/MockCreationValidator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "classToMock == i",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 35,
      "startColumnNumber" : 16,
      "endLineNumber" : 35,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (classToMock == i) {\n  throw extraInterfacesCannotContainMockedType(classToMock);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 34,
        "startColumnNumber" : 43,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (classToMock == i) {\n    throw extraInterfacesCannotContainMockedType(classToMock);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Class<?> i : extraInterfaces) {\n  if (classToMock == i) {\n    throw extraInterfacesCannotContainMockedType(classToMock);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 29,
        "startColumnNumber" : 72,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (extraInterfaces == null) {\n    return;\n  }\n  for (  Class<?> i : extraInterfaces) {\n    if (classToMock == i) {\n      throw extraInterfacesCannotContainMockedType(classToMock);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void validateExtraInterfaces(Class<?> classToMock,Collection<Class<?>> extraInterfaces){\n  if (extraInterfaces == null) {\n    return;\n  }\n  for (  Class<?> i : extraInterfaces) {\n    if (classToMock == i) {\n      throw extraInterfacesCannotContainMockedType(classToMock);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (classToMock == i) {\n  throw extraInterfacesCannotContainMockedType(classToMock);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 35,
    "startColumnNumber" : 16,
    "endLineNumber" : 35,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}