{
  "id" : 54,
  "expression" : "new ActorGson(jsonImdbId.getAsString(),sdf.parse(jsonDateOfBirth.getAsString()),filmList)",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/json-modules/gson/src/main/java/com/baeldung/gson/serialization/ActorGsonDeserializer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ActorGson(jsonImdbId.getAsString(),sdf.parse(jsonDateOfBirth.getAsString()),filmList)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 91,
      "startLineNumber" : 39,
      "startColumnNumber" : 24,
      "endLineNumber" : 39,
      "endColumnNumber" : 115
    },
    "astNodeNumber" : 13,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 115
      },
      "nodeContext" : "actorGson=new ActorGson(jsonImdbId.getAsString(),sdf.parse(jsonDateOfBirth.getAsString()),filmList)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 116
      },
      "nodeContext" : "actorGson=new ActorGson(jsonImdbId.getAsString(),sdf.parse(jsonDateOfBirth.getAsString()),filmList);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  actorGson=new ActorGson(jsonImdbId.getAsString(),sdf.parse(jsonDateOfBirth.getAsString()),filmList);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  actorGson=new ActorGson(jsonImdbId.getAsString(),sdf.parse(jsonDateOfBirth.getAsString()),filmList);\n}\n catch (final ParseException e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 22,
        "startColumnNumber" : 143,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final JsonObject jsonObject=json.getAsJsonObject();\n  final JsonElement jsonImdbId=jsonObject.get(\"imdbId\");\n  final JsonElement jsonDateOfBirth=jsonObject.get(\"dateOfBirth\");\n  final JsonArray jsonFilmography=jsonObject.getAsJsonArray(\"filmography\");\n  final ArrayList<String> filmList=new ArrayList<String>();\n  if (jsonFilmography != null) {\n    for (int i=0; i < jsonFilmography.size(); i++) {\n      filmList.add(jsonFilmography.get(i).getAsString());\n    }\n  }\n  ActorGson actorGson=null;\n  try {\n    actorGson=new ActorGson(jsonImdbId.getAsString(),sdf.parse(jsonDateOfBirth.getAsString()),filmList);\n  }\n catch (  final ParseException e) {\n    e.printStackTrace();\n  }\n  return actorGson;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public ActorGson deserialize(JsonElement json,Type type,JsonDeserializationContext jsonDeserializationContext) throws JsonParseException {\n  final JsonObject jsonObject=json.getAsJsonObject();\n  final JsonElement jsonImdbId=jsonObject.get(\"imdbId\");\n  final JsonElement jsonDateOfBirth=jsonObject.get(\"dateOfBirth\");\n  final JsonArray jsonFilmography=jsonObject.getAsJsonArray(\"filmography\");\n  final ArrayList<String> filmList=new ArrayList<String>();\n  if (jsonFilmography != null) {\n    for (int i=0; i < jsonFilmography.size(); i++) {\n      filmList.add(jsonFilmography.get(i).getAsString());\n    }\n  }\n  ActorGson actorGson=null;\n  try {\n    actorGson=new ActorGson(jsonImdbId.getAsString(),sdf.parse(jsonDateOfBirth.getAsString()),filmList);\n  }\n catch (  final ParseException e) {\n    e.printStackTrace();\n  }\n  return actorGson;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 116
      },
      "nodeContext" : "actorGson=new ActorGson(jsonImdbId.getAsString(),sdf.parse(jsonDateOfBirth.getAsString()),filmList);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 8,
    "type" : "com.baeldung.gson.entities.ActorGson"
  } ],
  "positionList" : [ {
    "charLength" : 91,
    "startLineNumber" : 39,
    "startColumnNumber" : 24,
    "endLineNumber" : 39,
    "endColumnNumber" : 115
  } ],
  "layoutRelationDataList" : [ ]
}