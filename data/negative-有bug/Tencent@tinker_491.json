{
  "id" : 491,
  "expression" : "SharePatchFileUtil.getPatchVersionDirectory(currentVersion)",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/library/TinkerLoadLibrary.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SharePatchFileUtil.getPatchVersionDirectory(currentVersion)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 59,
      "startLineNumber" : 234,
      "startColumnNumber" : 87,
      "endLineNumber" : 234,
      "endColumnNumber" : 146
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 234,
        "startColumnNumber" : 46,
        "endLineNumber" : 234,
        "endColumnNumber" : 146
      },
      "nodeContext" : "patchDirectory.getAbsolutePath() + \"/\" + SharePatchFileUtil.getPatchVersionDirectory(currentVersion)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 234,
        "startColumnNumber" : 37,
        "endLineNumber" : 234,
        "endColumnNumber" : 147
      },
      "nodeContext" : "new File(patchDirectory.getAbsolutePath() + \"/\" + SharePatchFileUtil.getPatchVersionDirectory(currentVersion))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 234,
        "startColumnNumber" : 13,
        "endLineNumber" : 234,
        "endColumnNumber" : 147
      },
      "nodeContext" : "patchVersionDirectory=new File(patchDirectory.getAbsolutePath() + \"/\" + SharePatchFileUtil.getPatchVersionDirectory(currentVersion))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 148
      },
      "nodeContext" : "File patchVersionDirectory=new File(patchDirectory.getAbsolutePath() + \"/\" + SharePatchFileUtil.getPatchVersionDirectory(currentVersion));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1929,
        "startLineNumber" : 221,
        "startColumnNumber" : 116,
        "endLineNumber" : 260,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String currentVersion=TinkerApplicationHelper.getCurrentVersion(appLike);\n  if (ShareTinkerInternals.isNullOrNil(currentVersion)) {\n    ShareTinkerLog.e(TAG,\"failed to get current patch version.\");\n    return false;\n  }\n  final File patchDirectory=SharePatchFileUtil.getPatchDirectory(appLike.getApplication());\n  if (patchDirectory == null) {\n    ShareTinkerLog.e(TAG,\"failed to get current patch directory.\");\n    return false;\n  }\n  File patchVersionDirectory=new File(patchDirectory.getAbsolutePath() + \"/\" + SharePatchFileUtil.getPatchVersionDirectory(currentVersion));\n  File libPath=new File(patchVersionDirectory.getAbsolutePath() + \"/lib/lib/\" + currentABI);\n  if (!libPath.exists()) {\n    ShareTinkerLog.e(TAG,\"tinker lib path [%s] is not exists.\",libPath);\n    return false;\n  }\n  final ClassLoader classLoader=appLike.getApplication().getClassLoader();\n  if (classLoader == null) {\n    ShareTinkerLog.e(TAG,\"classloader is null\");\n    return false;\n  }\n else {\n    ShareTinkerLog.i(TAG,\"before hack classloader:\" + classLoader.toString());\n    try {\n      final Method installNativeLibraryPathMethod=TinkerLoadLibrary.class.getDeclaredMethod(\"installNativeLibraryPath\",ClassLoader.class,File.class);\n      installNativeLibraryPathMethod.setAccessible(true);\n      installNativeLibraryPathMethod.invoke(null,classLoader,libPath);\n      return true;\n    }\n catch (    Throwable thr) {\n      ShareTinkerLog.e(TAG,\"installNativeLibraryPath fail:\" + libPath + \", thr: \"+ thr);\n      return false;\n    }\n finally {\n      ShareTinkerLog.i(TAG,\"after hack classloader:\" + classLoader.toString());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2264,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 260,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * The same as  {@link #installNavitveLibraryABI(Context,String)} but it can be called beforecalling  {@link TinkerInstaller#install}\n * @param appLike\n * @param currentABI\n * @return\n */\npublic static boolean installNativeLibraryABIWithoutTinkerInstalled(ApplicationLike appLike,String currentABI){\n  final String currentVersion=TinkerApplicationHelper.getCurrentVersion(appLike);\n  if (ShareTinkerInternals.isNullOrNil(currentVersion)) {\n    ShareTinkerLog.e(TAG,\"failed to get current patch version.\");\n    return false;\n  }\n  final File patchDirectory=SharePatchFileUtil.getPatchDirectory(appLike.getApplication());\n  if (patchDirectory == null) {\n    ShareTinkerLog.e(TAG,\"failed to get current patch directory.\");\n    return false;\n  }\n  File patchVersionDirectory=new File(patchDirectory.getAbsolutePath() + \"/\" + SharePatchFileUtil.getPatchVersionDirectory(currentVersion));\n  File libPath=new File(patchVersionDirectory.getAbsolutePath() + \"/lib/lib/\" + currentABI);\n  if (!libPath.exists()) {\n    ShareTinkerLog.e(TAG,\"tinker lib path [%s] is not exists.\",libPath);\n    return false;\n  }\n  final ClassLoader classLoader=appLike.getApplication().getClassLoader();\n  if (classLoader == null) {\n    ShareTinkerLog.e(TAG,\"classloader is null\");\n    return false;\n  }\n else {\n    ShareTinkerLog.i(TAG,\"before hack classloader:\" + classLoader.toString());\n    try {\n      final Method installNativeLibraryPathMethod=TinkerLoadLibrary.class.getDeclaredMethod(\"installNativeLibraryPath\",ClassLoader.class,File.class);\n      installNativeLibraryPathMethod.setAccessible(true);\n      installNativeLibraryPathMethod.invoke(null,classLoader,libPath);\n      return true;\n    }\n catch (    Throwable thr) {\n      ShareTinkerLog.e(TAG,\"installNativeLibraryPath fail:\" + libPath + \", thr: \"+ thr);\n      return false;\n    }\n finally {\n      ShareTinkerLog.i(TAG,\"after hack classloader:\" + classLoader.toString());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 148
      },
      "nodeContext" : "File patchVersionDirectory=new File(patchDirectory.getAbsolutePath() + \"/\" + SharePatchFileUtil.getPatchVersionDirectory(currentVersion));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 59,
    "startLineNumber" : 234,
    "startColumnNumber" : 87,
    "endLineNumber" : 234,
    "endColumnNumber" : 146
  } ],
  "layoutRelationDataList" : [ ]
}