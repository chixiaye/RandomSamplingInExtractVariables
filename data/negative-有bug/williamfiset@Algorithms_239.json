{
  "id" : 239,
  "expression" : "null",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/BipartiteGraphCheckAdjacencyList.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 25,
      "startColumnNumber" : 17,
      "endLineNumber" : 25,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 21
      },
      "nodeContext" : "graph == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 83
      },
      "nodeContext" : "if (graph == null) throw new IllegalArgumentException(\"Graph cannot be null.\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 24,
        "startColumnNumber" : 69,
        "endLineNumber" : 28,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (graph == null)   throw new IllegalArgumentException(\"Graph cannot be null.\");\n  n=graph.size();\n  this.graph=graph;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 24,
        "startColumnNumber" : 2,
        "endLineNumber" : 28,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public BipartiteGraphCheckAdjacencyList(List<List<Integer>> graph){\n  if (graph == null)   throw new IllegalArgumentException(\"Graph cannot be null.\");\n  n=graph.size();\n  this.graph=graph;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 35,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 83
      },
      "nodeContext" : "if (graph == null) throw new IllegalArgumentException(\"Graph cannot be null.\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 25,
    "startColumnNumber" : 17,
    "endLineNumber" : 25,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}