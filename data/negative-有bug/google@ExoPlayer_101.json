{
  "id" : 101,
  "expression" : "\"\\\",\\\"kid\\\":\\\"\"",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/main/java/com/google/android/exoplayer2/drm/ClearKeyUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\\\",\\\"kid\\\":\\\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 73,
      "startColumnNumber" : 39,
      "endLineNumber" : 73,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 55
      },
      "nodeContext" : "adjustedResponseBuilder.append(\"\\\",\\\"kid\\\":\\\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 56
      },
      "nodeContext" : "adjustedResponseBuilder.append(\"\\\",\\\"kid\\\":\\\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 577,
        "startLineNumber" : 66,
        "startColumnNumber" : 51,
        "endLineNumber" : 78,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (i != 0) {\n    adjustedResponseBuilder.append(\",\");\n  }\n  JSONObject key=keysArray.getJSONObject(i);\n  adjustedResponseBuilder.append(\"{\\\"k\\\":\\\"\");\n  adjustedResponseBuilder.append(base64UrlToBase64(key.getString(\"k\")));\n  adjustedResponseBuilder.append(\"\\\",\\\"kid\\\":\\\"\");\n  adjustedResponseBuilder.append(base64UrlToBase64(key.getString(\"kid\")));\n  adjustedResponseBuilder.append(\"\\\",\\\"kty\\\":\\\"\");\n  adjustedResponseBuilder.append(key.getString(\"kty\"));\n  adjustedResponseBuilder.append(\"\\\"}\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 622,
        "startLineNumber" : 66,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < keysArray.length(); i++) {\n  if (i != 0) {\n    adjustedResponseBuilder.append(\",\");\n  }\n  JSONObject key=keysArray.getJSONObject(i);\n  adjustedResponseBuilder.append(\"{\\\"k\\\":\\\"\");\n  adjustedResponseBuilder.append(base64UrlToBase64(key.getString(\"k\")));\n  adjustedResponseBuilder.append(\"\\\",\\\"kid\\\":\\\"\");\n  adjustedResponseBuilder.append(base64UrlToBase64(key.getString(\"kid\")));\n  adjustedResponseBuilder.append(\"\\\",\\\"kty\\\":\\\"\");\n  adjustedResponseBuilder.append(key.getString(\"kty\"));\n  adjustedResponseBuilder.append(\"\\\"}\");\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 81,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 969,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JSONObject responseJson=new JSONObject(Util.fromUtf8Bytes(response));\n  StringBuilder adjustedResponseBuilder=new StringBuilder(\"{\\\"keys\\\":[\");\n  JSONArray keysArray=responseJson.getJSONArray(\"keys\");\n  for (int i=0; i < keysArray.length(); i++) {\n    if (i != 0) {\n      adjustedResponseBuilder.append(\",\");\n    }\n    JSONObject key=keysArray.getJSONObject(i);\n    adjustedResponseBuilder.append(\"{\\\"k\\\":\\\"\");\n    adjustedResponseBuilder.append(base64UrlToBase64(key.getString(\"k\")));\n    adjustedResponseBuilder.append(\"\\\",\\\"kid\\\":\\\"\");\n    adjustedResponseBuilder.append(base64UrlToBase64(key.getString(\"kid\")));\n    adjustedResponseBuilder.append(\"\\\",\\\"kty\\\":\\\"\");\n    adjustedResponseBuilder.append(key.getString(\"kty\"));\n    adjustedResponseBuilder.append(\"\\\"}\");\n  }\n  adjustedResponseBuilder.append(\"]}\");\n  return Util.getUtf8Bytes(adjustedResponseBuilder.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1116,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  JSONObject responseJson=new JSONObject(Util.fromUtf8Bytes(response));\n  StringBuilder adjustedResponseBuilder=new StringBuilder(\"{\\\"keys\\\":[\");\n  JSONArray keysArray=responseJson.getJSONArray(\"keys\");\n  for (int i=0; i < keysArray.length(); i++) {\n    if (i != 0) {\n      adjustedResponseBuilder.append(\",\");\n    }\n    JSONObject key=keysArray.getJSONObject(i);\n    adjustedResponseBuilder.append(\"{\\\"k\\\":\\\"\");\n    adjustedResponseBuilder.append(base64UrlToBase64(key.getString(\"k\")));\n    adjustedResponseBuilder.append(\"\\\",\\\"kid\\\":\\\"\");\n    adjustedResponseBuilder.append(base64UrlToBase64(key.getString(\"kid\")));\n    adjustedResponseBuilder.append(\"\\\",\\\"kty\\\":\\\"\");\n    adjustedResponseBuilder.append(key.getString(\"kty\"));\n    adjustedResponseBuilder.append(\"\\\"}\");\n  }\n  adjustedResponseBuilder.append(\"]}\");\n  return Util.getUtf8Bytes(adjustedResponseBuilder.toString());\n}\n catch (JSONException e) {\n  Log.e(TAG,\"Failed to adjust response data: \" + Util.fromUtf8Bytes(response),e);\n  return response;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 145,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1480,
        "startLineNumber" : 55,
        "startColumnNumber" : 59,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (Util.SDK_INT >= 27) {\n    return response;\n  }\n  try {\n    JSONObject responseJson=new JSONObject(Util.fromUtf8Bytes(response));\n    StringBuilder adjustedResponseBuilder=new StringBuilder(\"{\\\"keys\\\":[\");\n    JSONArray keysArray=responseJson.getJSONArray(\"keys\");\n    for (int i=0; i < keysArray.length(); i++) {\n      if (i != 0) {\n        adjustedResponseBuilder.append(\",\");\n      }\n      JSONObject key=keysArray.getJSONObject(i);\n      adjustedResponseBuilder.append(\"{\\\"k\\\":\\\"\");\n      adjustedResponseBuilder.append(base64UrlToBase64(key.getString(\"k\")));\n      adjustedResponseBuilder.append(\"\\\",\\\"kid\\\":\\\"\");\n      adjustedResponseBuilder.append(base64UrlToBase64(key.getString(\"kid\")));\n      adjustedResponseBuilder.append(\"\\\",\\\"kty\\\":\\\"\");\n      adjustedResponseBuilder.append(key.getString(\"kty\"));\n      adjustedResponseBuilder.append(\"\\\"}\");\n    }\n    adjustedResponseBuilder.append(\"]}\");\n    return Util.getUtf8Bytes(adjustedResponseBuilder.toString());\n  }\n catch (  JSONException e) {\n    Log.e(TAG,\"Failed to adjust response data: \" + Util.fromUtf8Bytes(response),e);\n    return response;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1729,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Adjusts ClearKey response data to be suitable for providing to the Android ClearKey CDM.\n * @param response The response data.\n * @return The adjusted response data.\n */\npublic static byte[] adjustResponseData(byte[] response){\n  if (Util.SDK_INT >= 27) {\n    return response;\n  }\n  try {\n    JSONObject responseJson=new JSONObject(Util.fromUtf8Bytes(response));\n    StringBuilder adjustedResponseBuilder=new StringBuilder(\"{\\\"keys\\\":[\");\n    JSONArray keysArray=responseJson.getJSONArray(\"keys\");\n    for (int i=0; i < keysArray.length(); i++) {\n      if (i != 0) {\n        adjustedResponseBuilder.append(\",\");\n      }\n      JSONObject key=keysArray.getJSONObject(i);\n      adjustedResponseBuilder.append(\"{\\\"k\\\":\\\"\");\n      adjustedResponseBuilder.append(base64UrlToBase64(key.getString(\"k\")));\n      adjustedResponseBuilder.append(\"\\\",\\\"kid\\\":\\\"\");\n      adjustedResponseBuilder.append(base64UrlToBase64(key.getString(\"kid\")));\n      adjustedResponseBuilder.append(\"\\\",\\\"kty\\\":\\\"\");\n      adjustedResponseBuilder.append(key.getString(\"kty\"));\n      adjustedResponseBuilder.append(\"\\\"}\");\n    }\n    adjustedResponseBuilder.append(\"]}\");\n    return Util.getUtf8Bytes(adjustedResponseBuilder.toString());\n  }\n catch (  JSONException e) {\n    Log.e(TAG,\"Failed to adjust response data: \" + Util.fromUtf8Bytes(response),e);\n    return response;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 56
      },
      "nodeContext" : "adjustedResponseBuilder.append(\"\\\",\\\"kid\\\":\\\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 73,
    "startColumnNumber" : 39,
    "endLineNumber" : 73,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}