{
  "id" : 514,
  "expression" : "dataCalculateParameter",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-dialect/shardingsphere-data-pipeline-mysql/src/main/java/org/apache/shardingsphere/data/pipeline/mysql/check/consistency/CRC32MatchMySQLSingleTableDataCalculator.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dataCalculateParameter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 57,
      "startColumnNumber" : 32,
      "endLineNumber" : 57,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 57,
        "startColumnNumber" : 32,
        "endLineNumber" : 57,
        "endColumnNumber" : 74
      },
      "nodeContext" : "dataCalculateParameter.getLogicTableName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 57,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 74
      },
      "nodeContext" : "logicTableName=dataCalculateParameter.getLogicTableName()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 75
      },
      "nodeContext" : "String logicTableName=dataCalculateParameter.getLogicTableName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 742,
        "startLineNumber" : 56,
        "startColumnNumber" : 91,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String logicTableName=dataCalculateParameter.getLogicTableName();\n  MySQLPipelineSQLBuilder scalingSQLBuilder=new MySQLPipelineSQLBuilder(new HashMap<>());\n  List<Long> result=dataCalculateParameter.getColumnNames().stream().map(each -> {\n    String sql=scalingSQLBuilder.buildSumCrc32SQL(logicTableName,each);\n    try {\n      return sumCrc32(dataCalculateParameter.getDataSource(),sql);\n    }\n catch (    final SQLException ex) {\n      throw new PipelineDataConsistencyCheckFailedException(String.format(\"table %s data check failed.\",logicTableName),ex);\n    }\n  }\n).collect(Collectors.toList());\n  return Collections.unmodifiableList(result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 843,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Iterable<Object> calculate(final DataCalculateParameter dataCalculateParameter){\n  String logicTableName=dataCalculateParameter.getLogicTableName();\n  MySQLPipelineSQLBuilder scalingSQLBuilder=new MySQLPipelineSQLBuilder(new HashMap<>());\n  List<Long> result=dataCalculateParameter.getColumnNames().stream().map(each -> {\n    String sql=scalingSQLBuilder.buildSumCrc32SQL(logicTableName,each);\n    try {\n      return sumCrc32(dataCalculateParameter.getDataSource(),sql);\n    }\n catch (    final SQLException ex) {\n      throw new PipelineDataConsistencyCheckFailedException(String.format(\"table %s data check failed.\",logicTableName),ex);\n    }\n  }\n).collect(Collectors.toList());\n  return Collections.unmodifiableList(result);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 75
      },
      "nodeContext" : "String logicTableName=dataCalculateParameter.getLogicTableName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.data.pipeline.api.check.consistency.DataCalculateParameter"
  }, {
    "nodeContext" : "dataCalculateParameter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 59,
      "startColumnNumber" : 28,
      "endLineNumber" : 59,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 59,
        "startColumnNumber" : 28,
        "endLineNumber" : 59,
        "endColumnNumber" : 67
      },
      "nodeContext" : "dataCalculateParameter.getColumnNames()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 59,
        "startColumnNumber" : 28,
        "endLineNumber" : 59,
        "endColumnNumber" : 76
      },
      "nodeContext" : "dataCalculateParameter.getColumnNames().stream()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 59,
        "startColumnNumber" : 28,
        "endLineNumber" : 66,
        "endColumnNumber" : 10
      },
      "nodeContext" : "dataCalculateParameter.getColumnNames().stream().map(each -> {\n  String sql=scalingSQLBuilder.buildSumCrc32SQL(logicTableName,each);\n  try {\n    return sumCrc32(dataCalculateParameter.getDataSource(),sql);\n  }\n catch (  final SQLException ex) {\n    throw new PipelineDataConsistencyCheckFailedException(String.format(\"table %s data check failed.\",logicTableName),ex);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 47,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 59,
        "startColumnNumber" : 28,
        "endLineNumber" : 66,
        "endColumnNumber" : 39
      },
      "nodeContext" : "dataCalculateParameter.getColumnNames().stream().map(each -> {\n  String sql=scalingSQLBuilder.buildSumCrc32SQL(logicTableName,each);\n  try {\n    return sumCrc32(dataCalculateParameter.getDataSource(),sql);\n  }\n catch (  final SQLException ex) {\n    throw new PipelineDataConsistencyCheckFailedException(String.format(\"table %s data check failed.\",logicTableName),ex);\n  }\n}\n).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 52,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 487,
        "startLineNumber" : 59,
        "startColumnNumber" : 19,
        "endLineNumber" : 66,
        "endColumnNumber" : 39
      },
      "nodeContext" : "result=dataCalculateParameter.getColumnNames().stream().map(each -> {\n  String sql=scalingSQLBuilder.buildSumCrc32SQL(logicTableName,each);\n  try {\n    return sumCrc32(dataCalculateParameter.getDataSource(),sql);\n  }\n catch (  final SQLException ex) {\n    throw new PipelineDataConsistencyCheckFailedException(String.format(\"table %s data check failed.\",logicTableName),ex);\n  }\n}\n).collect(Collectors.toList())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 54,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 499,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 40
      },
      "nodeContext" : "List<Long> result=dataCalculateParameter.getColumnNames().stream().map(each -> {\n  String sql=scalingSQLBuilder.buildSumCrc32SQL(logicTableName,each);\n  try {\n    return sumCrc32(dataCalculateParameter.getDataSource(),sql);\n  }\n catch (  final SQLException ex) {\n    throw new PipelineDataConsistencyCheckFailedException(String.format(\"table %s data check failed.\",logicTableName),ex);\n  }\n}\n).collect(Collectors.toList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 60,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 742,
        "startLineNumber" : 56,
        "startColumnNumber" : 91,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String logicTableName=dataCalculateParameter.getLogicTableName();\n  MySQLPipelineSQLBuilder scalingSQLBuilder=new MySQLPipelineSQLBuilder(new HashMap<>());\n  List<Long> result=dataCalculateParameter.getColumnNames().stream().map(each -> {\n    String sql=scalingSQLBuilder.buildSumCrc32SQL(logicTableName,each);\n    try {\n      return sumCrc32(dataCalculateParameter.getDataSource(),sql);\n    }\n catch (    final SQLException ex) {\n      throw new PipelineDataConsistencyCheckFailedException(String.format(\"table %s data check failed.\",logicTableName),ex);\n    }\n  }\n).collect(Collectors.toList());\n  return Collections.unmodifiableList(result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 843,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Iterable<Object> calculate(final DataCalculateParameter dataCalculateParameter){\n  String logicTableName=dataCalculateParameter.getLogicTableName();\n  MySQLPipelineSQLBuilder scalingSQLBuilder=new MySQLPipelineSQLBuilder(new HashMap<>());\n  List<Long> result=dataCalculateParameter.getColumnNames().stream().map(each -> {\n    String sql=scalingSQLBuilder.buildSumCrc32SQL(logicTableName,each);\n    try {\n      return sumCrc32(dataCalculateParameter.getDataSource(),sql);\n    }\n catch (    final SQLException ex) {\n      throw new PipelineDataConsistencyCheckFailedException(String.format(\"table %s data check failed.\",logicTableName),ex);\n    }\n  }\n).collect(Collectors.toList());\n  return Collections.unmodifiableList(result);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 59,
        "startColumnNumber" : 28,
        "endLineNumber" : 59,
        "endColumnNumber" : 76
      },
      "nodeContext" : "dataCalculateParameter.getColumnNames().stream()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.data.pipeline.api.check.consistency.DataCalculateParameter"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 57,
    "startColumnNumber" : 32,
    "endLineNumber" : 57,
    "endColumnNumber" : 54
  }, {
    "charLength" : 22,
    "startLineNumber" : 59,
    "startColumnNumber" : 28,
    "endLineNumber" : 59,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}