{
  "id" : 367,
  "expression" : "outputDir()",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/test/plugin/runner-helper/src/main/java/org/apache/skywalking/plugin/test/helper/ConfigurationImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "outputDir()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 195,
      "startColumnNumber" : 40,
      "endLineNumber" : 195,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 195,
        "startColumnNumber" : 40,
        "endLineNumber" : 195,
        "endColumnNumber" : 91
      },
      "nodeContext" : "outputDir() + File.separator + \"docker-compose.yml\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 92
      },
      "nodeContext" : "root.put(\"docker_compose_file\",outputDir() + File.separator + \"docker-compose.yml\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 93
      },
      "nodeContext" : "root.put(\"docker_compose_file\",outputDir() + File.separator + \"docker-compose.yml\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 169,
        "startColumnNumber" : 39,
        "endLineNumber" : 215,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<String,Object> root=new HashMap<>();\n  root.put(\"agent_home\",agentHome());\n  root.put(\"scenario_home\",scenarioHome());\n  root.put(\"scenario_name\",scenarioName());\n  root.put(\"scenario_version\",scenarioVersion());\n  root.put(\"health_check\",healthCheck());\n  root.put(\"start_script\",startScript());\n  root.put(\"catalina_opts\",catalinaOpts());\n  root.put(\"entry_service\",entryService());\n  root.put(\"docker_image_name\",dockerImageName());\n  root.put(\"docker_image_version\",dockerImageVersion());\n  root.put(\"docker_container_name\",dockerContainerName());\n  root.put(\"jacoco_home\",jacocoHome());\n  root.put(\"debug_mode\",debugMode());\n  root.put(\"expose\",caseConfiguration().getExpose());\n  root.put(\"hostname\",caseConfiguration().getHostname());\n  root.put(\"depends_on\",caseConfiguration().getDependsOn());\n  root.put(\"environments\",caseConfiguration().getEnvironment());\n  root.put(\"network_name\",dockerNetworkName());\n  root.put(\"services\",convertDockerServices(scenarioVersion(),caseConfiguration().getDependencies()));\n  root.put(\"extend_entry_header\",extendEntryHeader());\n  root.put(\"docker_compose_file\",outputDir() + File.separator + \"docker-compose.yml\");\n  root.put(\"build_id\",dockerImageVersion());\n  final StringBuilder removeImagesScript=new StringBuilder();\n  final ArrayList<String> links=Lists.newArrayList();\n  if (caseConfiguration().getDependencies() != null) {\n    caseConfiguration().getDependencies().forEach((name,service) -> {\n      links.add(service.getHostname());\n      if (service.isRemoveOnExit()) {\n        removeImagesScript.append(\"docker rmi \").append(service.getImage().replace(\"${CASE_SERVER_IMAGE_VERSION}\",scenarioVersion())).append(System.lineSeparator());\n      }\n    }\n);\n  }\n  root.put(\"links\",links);\n  root.put(\"removeImagesScript\",removeImagesScript.toString());\n  return root;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 279,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2284,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Map<String,Object> toMap(){\n  final Map<String,Object> root=new HashMap<>();\n  root.put(\"agent_home\",agentHome());\n  root.put(\"scenario_home\",scenarioHome());\n  root.put(\"scenario_name\",scenarioName());\n  root.put(\"scenario_version\",scenarioVersion());\n  root.put(\"health_check\",healthCheck());\n  root.put(\"start_script\",startScript());\n  root.put(\"catalina_opts\",catalinaOpts());\n  root.put(\"entry_service\",entryService());\n  root.put(\"docker_image_name\",dockerImageName());\n  root.put(\"docker_image_version\",dockerImageVersion());\n  root.put(\"docker_container_name\",dockerContainerName());\n  root.put(\"jacoco_home\",jacocoHome());\n  root.put(\"debug_mode\",debugMode());\n  root.put(\"expose\",caseConfiguration().getExpose());\n  root.put(\"hostname\",caseConfiguration().getHostname());\n  root.put(\"depends_on\",caseConfiguration().getDependsOn());\n  root.put(\"environments\",caseConfiguration().getEnvironment());\n  root.put(\"network_name\",dockerNetworkName());\n  root.put(\"services\",convertDockerServices(scenarioVersion(),caseConfiguration().getDependencies()));\n  root.put(\"extend_entry_header\",extendEntryHeader());\n  root.put(\"docker_compose_file\",outputDir() + File.separator + \"docker-compose.yml\");\n  root.put(\"build_id\",dockerImageVersion());\n  final StringBuilder removeImagesScript=new StringBuilder();\n  final ArrayList<String> links=Lists.newArrayList();\n  if (caseConfiguration().getDependencies() != null) {\n    caseConfiguration().getDependencies().forEach((name,service) -> {\n      links.add(service.getHostname());\n      if (service.isRemoveOnExit()) {\n        removeImagesScript.append(\"docker rmi \").append(service.getImage().replace(\"${CASE_SERVER_IMAGE_VERSION}\",scenarioVersion())).append(System.lineSeparator());\n      }\n    }\n);\n  }\n  root.put(\"links\",links);\n  root.put(\"removeImagesScript\",removeImagesScript.toString());\n  return root;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 93
      },
      "nodeContext" : "root.put(\"docker_compose_file\",outputDir() + File.separator + \"docker-compose.yml\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 195,
    "startColumnNumber" : 40,
    "endLineNumber" : 195,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}