{
  "id" : 62,
  "expression" : "imageStream",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/library/src/main/java/com/nostra13/universalimageloader/core/decode/BaseImageDecoder.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "imageStream",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 75,
      "startColumnNumber" : 6,
      "endLineNumber" : 75,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 75,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 25
      },
      "nodeContext" : "imageStream == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (imageStream == null) {\n  L.e(ERROR_NO_IMAGE_STREAM,decodingInfo.getImageKey());\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 70,
        "startColumnNumber" : 73,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Bitmap decodedBitmap;\n  ImageFileInfo imageInfo;\n  InputStream imageStream=getImageStream(decodingInfo);\n  if (imageStream == null) {\n    L.e(ERROR_NO_IMAGE_STREAM,decodingInfo.getImageKey());\n    return null;\n  }\n  try {\n    imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n    imageStream=resetStream(imageStream,decodingInfo);\n    Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n    decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n  }\n  finally {\n    IoUtils.closeSilently(imageStream);\n  }\n  if (decodedBitmap == null) {\n    L.e(ERROR_CANT_DECODE_IMAGE,decodingInfo.getImageKey());\n  }\n else {\n    decodedBitmap=considerExactScaleAndOrientatiton(decodedBitmap,decodingInfo,imageInfo.exif.rotation,imageInfo.exif.flipHorizontal);\n  }\n  return decodedBitmap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1425,
        "startLineNumber" : 60,
        "startColumnNumber" : 1,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Decodes image from URI into  {@link Bitmap}. Image is scaled close to incoming  {@linkplain ImageSize target size}during decoding (depend on incoming parameters).\n * @param decodingInfo Needed data for decoding image\n * @return Decoded bitmap\n * @throws IOException                   if some I/O exception occurs during image reading\n * @throws UnsupportedOperationException if image URI has unsupported scheme(protocol)\n */\n@Override public Bitmap decode(ImageDecodingInfo decodingInfo) throws IOException {\n  Bitmap decodedBitmap;\n  ImageFileInfo imageInfo;\n  InputStream imageStream=getImageStream(decodingInfo);\n  if (imageStream == null) {\n    L.e(ERROR_NO_IMAGE_STREAM,decodingInfo.getImageKey());\n    return null;\n  }\n  try {\n    imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n    imageStream=resetStream(imageStream,decodingInfo);\n    Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n    decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n  }\n  finally {\n    IoUtils.closeSilently(imageStream);\n  }\n  if (decodedBitmap == null) {\n    L.e(ERROR_CANT_DECODE_IMAGE,decodingInfo.getImageKey());\n  }\n else {\n    decodedBitmap=considerExactScaleAndOrientatiton(decodedBitmap,decodingInfo,imageInfo.exif.rotation,imageInfo.exif.flipHorizontal);\n  }\n  return decodedBitmap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 75,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 25
      },
      "nodeContext" : "imageStream == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.io.InputStream"
  }, {
    "nodeContext" : "imageStream",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 80,
      "startColumnNumber" : 42,
      "endLineNumber" : 80,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 80,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 68
      },
      "nodeContext" : "defineImageSizeAndRotation(imageStream,decodingInfo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 80,
        "startColumnNumber" : 3,
        "endLineNumber" : 80,
        "endColumnNumber" : 68
      },
      "nodeContext" : "imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 80,
        "startColumnNumber" : 3,
        "endLineNumber" : 80,
        "endColumnNumber" : 69
      },
      "nodeContext" : "imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n  imageStream=resetStream(imageStream,decodingInfo);\n  Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n  decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n  imageStream=resetStream(imageStream,decodingInfo);\n  Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n  decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n}\n  finally {\n  IoUtils.closeSilently(imageStream);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 70,
        "startColumnNumber" : 73,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Bitmap decodedBitmap;\n  ImageFileInfo imageInfo;\n  InputStream imageStream=getImageStream(decodingInfo);\n  if (imageStream == null) {\n    L.e(ERROR_NO_IMAGE_STREAM,decodingInfo.getImageKey());\n    return null;\n  }\n  try {\n    imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n    imageStream=resetStream(imageStream,decodingInfo);\n    Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n    decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n  }\n  finally {\n    IoUtils.closeSilently(imageStream);\n  }\n  if (decodedBitmap == null) {\n    L.e(ERROR_CANT_DECODE_IMAGE,decodingInfo.getImageKey());\n  }\n else {\n    decodedBitmap=considerExactScaleAndOrientatiton(decodedBitmap,decodingInfo,imageInfo.exif.rotation,imageInfo.exif.flipHorizontal);\n  }\n  return decodedBitmap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1425,
        "startLineNumber" : 60,
        "startColumnNumber" : 1,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Decodes image from URI into  {@link Bitmap}. Image is scaled close to incoming  {@linkplain ImageSize target size}during decoding (depend on incoming parameters).\n * @param decodingInfo Needed data for decoding image\n * @return Decoded bitmap\n * @throws IOException                   if some I/O exception occurs during image reading\n * @throws UnsupportedOperationException if image URI has unsupported scheme(protocol)\n */\n@Override public Bitmap decode(ImageDecodingInfo decodingInfo) throws IOException {\n  Bitmap decodedBitmap;\n  ImageFileInfo imageInfo;\n  InputStream imageStream=getImageStream(decodingInfo);\n  if (imageStream == null) {\n    L.e(ERROR_NO_IMAGE_STREAM,decodingInfo.getImageKey());\n    return null;\n  }\n  try {\n    imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n    imageStream=resetStream(imageStream,decodingInfo);\n    Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n    decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n  }\n  finally {\n    IoUtils.closeSilently(imageStream);\n  }\n  if (decodedBitmap == null) {\n    L.e(ERROR_CANT_DECODE_IMAGE,decodingInfo.getImageKey());\n  }\n else {\n    decodedBitmap=considerExactScaleAndOrientatiton(decodedBitmap,decodingInfo,imageInfo.exif.rotation,imageInfo.exif.flipHorizontal);\n  }\n  return decodedBitmap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 80,
        "startColumnNumber" : 3,
        "endLineNumber" : 80,
        "endColumnNumber" : 69
      },
      "nodeContext" : "imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.InputStream"
  }, {
    "nodeContext" : "imageStream",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 81,
      "startColumnNumber" : 29,
      "endLineNumber" : 81,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 81,
        "startColumnNumber" : 17,
        "endLineNumber" : 81,
        "endColumnNumber" : 55
      },
      "nodeContext" : "resetStream(imageStream,decodingInfo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 81,
        "startColumnNumber" : 3,
        "endLineNumber" : 81,
        "endColumnNumber" : 55
      },
      "nodeContext" : "imageStream=resetStream(imageStream,decodingInfo)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 81,
        "startColumnNumber" : 3,
        "endLineNumber" : 81,
        "endColumnNumber" : 56
      },
      "nodeContext" : "imageStream=resetStream(imageStream,decodingInfo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n  imageStream=resetStream(imageStream,decodingInfo);\n  Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n  decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n  imageStream=resetStream(imageStream,decodingInfo);\n  Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n  decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n}\n  finally {\n  IoUtils.closeSilently(imageStream);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 70,
        "startColumnNumber" : 73,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Bitmap decodedBitmap;\n  ImageFileInfo imageInfo;\n  InputStream imageStream=getImageStream(decodingInfo);\n  if (imageStream == null) {\n    L.e(ERROR_NO_IMAGE_STREAM,decodingInfo.getImageKey());\n    return null;\n  }\n  try {\n    imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n    imageStream=resetStream(imageStream,decodingInfo);\n    Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n    decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n  }\n  finally {\n    IoUtils.closeSilently(imageStream);\n  }\n  if (decodedBitmap == null) {\n    L.e(ERROR_CANT_DECODE_IMAGE,decodingInfo.getImageKey());\n  }\n else {\n    decodedBitmap=considerExactScaleAndOrientatiton(decodedBitmap,decodingInfo,imageInfo.exif.rotation,imageInfo.exif.flipHorizontal);\n  }\n  return decodedBitmap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1425,
        "startLineNumber" : 60,
        "startColumnNumber" : 1,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Decodes image from URI into  {@link Bitmap}. Image is scaled close to incoming  {@linkplain ImageSize target size}during decoding (depend on incoming parameters).\n * @param decodingInfo Needed data for decoding image\n * @return Decoded bitmap\n * @throws IOException                   if some I/O exception occurs during image reading\n * @throws UnsupportedOperationException if image URI has unsupported scheme(protocol)\n */\n@Override public Bitmap decode(ImageDecodingInfo decodingInfo) throws IOException {\n  Bitmap decodedBitmap;\n  ImageFileInfo imageInfo;\n  InputStream imageStream=getImageStream(decodingInfo);\n  if (imageStream == null) {\n    L.e(ERROR_NO_IMAGE_STREAM,decodingInfo.getImageKey());\n    return null;\n  }\n  try {\n    imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n    imageStream=resetStream(imageStream,decodingInfo);\n    Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n    decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n  }\n  finally {\n    IoUtils.closeSilently(imageStream);\n  }\n  if (decodedBitmap == null) {\n    L.e(ERROR_CANT_DECODE_IMAGE,decodingInfo.getImageKey());\n  }\n else {\n    decodedBitmap=considerExactScaleAndOrientatiton(decodedBitmap,decodingInfo,imageInfo.exif.rotation,imageInfo.exif.flipHorizontal);\n  }\n  return decodedBitmap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 81,
        "startColumnNumber" : 3,
        "endLineNumber" : 81,
        "endColumnNumber" : 56
      },
      "nodeContext" : "imageStream=resetStream(imageStream,decodingInfo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.InputStream"
  }, {
    "nodeContext" : "imageStream",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 83,
      "startColumnNumber" : 46,
      "endLineNumber" : 83,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 83,
        "startColumnNumber" : 19,
        "endLineNumber" : 83,
        "endColumnNumber" : 81
      },
      "nodeContext" : "BitmapFactory.decodeStream(imageStream,null,decodingOptions)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 83,
        "startColumnNumber" : 3,
        "endLineNumber" : 83,
        "endColumnNumber" : 81
      },
      "nodeContext" : "decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 83,
        "startColumnNumber" : 3,
        "endLineNumber" : 83,
        "endColumnNumber" : 82
      },
      "nodeContext" : "decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n  imageStream=resetStream(imageStream,decodingInfo);\n  Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n  decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n  imageStream=resetStream(imageStream,decodingInfo);\n  Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n  decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n}\n  finally {\n  IoUtils.closeSilently(imageStream);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 70,
        "startColumnNumber" : 73,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Bitmap decodedBitmap;\n  ImageFileInfo imageInfo;\n  InputStream imageStream=getImageStream(decodingInfo);\n  if (imageStream == null) {\n    L.e(ERROR_NO_IMAGE_STREAM,decodingInfo.getImageKey());\n    return null;\n  }\n  try {\n    imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n    imageStream=resetStream(imageStream,decodingInfo);\n    Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n    decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n  }\n  finally {\n    IoUtils.closeSilently(imageStream);\n  }\n  if (decodedBitmap == null) {\n    L.e(ERROR_CANT_DECODE_IMAGE,decodingInfo.getImageKey());\n  }\n else {\n    decodedBitmap=considerExactScaleAndOrientatiton(decodedBitmap,decodingInfo,imageInfo.exif.rotation,imageInfo.exif.flipHorizontal);\n  }\n  return decodedBitmap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1425,
        "startLineNumber" : 60,
        "startColumnNumber" : 1,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Decodes image from URI into  {@link Bitmap}. Image is scaled close to incoming  {@linkplain ImageSize target size}during decoding (depend on incoming parameters).\n * @param decodingInfo Needed data for decoding image\n * @return Decoded bitmap\n * @throws IOException                   if some I/O exception occurs during image reading\n * @throws UnsupportedOperationException if image URI has unsupported scheme(protocol)\n */\n@Override public Bitmap decode(ImageDecodingInfo decodingInfo) throws IOException {\n  Bitmap decodedBitmap;\n  ImageFileInfo imageInfo;\n  InputStream imageStream=getImageStream(decodingInfo);\n  if (imageStream == null) {\n    L.e(ERROR_NO_IMAGE_STREAM,decodingInfo.getImageKey());\n    return null;\n  }\n  try {\n    imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n    imageStream=resetStream(imageStream,decodingInfo);\n    Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n    decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n  }\n  finally {\n    IoUtils.closeSilently(imageStream);\n  }\n  if (decodedBitmap == null) {\n    L.e(ERROR_CANT_DECODE_IMAGE,decodingInfo.getImageKey());\n  }\n else {\n    decodedBitmap=considerExactScaleAndOrientatiton(decodedBitmap,decodingInfo,imageInfo.exif.rotation,imageInfo.exif.flipHorizontal);\n  }\n  return decodedBitmap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 83,
        "startColumnNumber" : 3,
        "endLineNumber" : 83,
        "endColumnNumber" : 82
      },
      "nodeContext" : "decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.InputStream"
  }, {
    "nodeContext" : "imageStream",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 85,
      "startColumnNumber" : 25,
      "endLineNumber" : 85,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 85,
        "startColumnNumber" : 3,
        "endLineNumber" : 85,
        "endColumnNumber" : 37
      },
      "nodeContext" : "IoUtils.closeSilently(imageStream)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 85,
        "startColumnNumber" : 3,
        "endLineNumber" : 85,
        "endColumnNumber" : 38
      },
      "nodeContext" : "IoUtils.closeSilently(imageStream);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  IoUtils.closeSilently(imageStream);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n  imageStream=resetStream(imageStream,decodingInfo);\n  Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n  decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n}\n  finally {\n  IoUtils.closeSilently(imageStream);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 70,
        "startColumnNumber" : 73,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Bitmap decodedBitmap;\n  ImageFileInfo imageInfo;\n  InputStream imageStream=getImageStream(decodingInfo);\n  if (imageStream == null) {\n    L.e(ERROR_NO_IMAGE_STREAM,decodingInfo.getImageKey());\n    return null;\n  }\n  try {\n    imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n    imageStream=resetStream(imageStream,decodingInfo);\n    Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n    decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n  }\n  finally {\n    IoUtils.closeSilently(imageStream);\n  }\n  if (decodedBitmap == null) {\n    L.e(ERROR_CANT_DECODE_IMAGE,decodingInfo.getImageKey());\n  }\n else {\n    decodedBitmap=considerExactScaleAndOrientatiton(decodedBitmap,decodingInfo,imageInfo.exif.rotation,imageInfo.exif.flipHorizontal);\n  }\n  return decodedBitmap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1425,
        "startLineNumber" : 60,
        "startColumnNumber" : 1,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Decodes image from URI into  {@link Bitmap}. Image is scaled close to incoming  {@linkplain ImageSize target size}during decoding (depend on incoming parameters).\n * @param decodingInfo Needed data for decoding image\n * @return Decoded bitmap\n * @throws IOException                   if some I/O exception occurs during image reading\n * @throws UnsupportedOperationException if image URI has unsupported scheme(protocol)\n */\n@Override public Bitmap decode(ImageDecodingInfo decodingInfo) throws IOException {\n  Bitmap decodedBitmap;\n  ImageFileInfo imageInfo;\n  InputStream imageStream=getImageStream(decodingInfo);\n  if (imageStream == null) {\n    L.e(ERROR_NO_IMAGE_STREAM,decodingInfo.getImageKey());\n    return null;\n  }\n  try {\n    imageInfo=defineImageSizeAndRotation(imageStream,decodingInfo);\n    imageStream=resetStream(imageStream,decodingInfo);\n    Options decodingOptions=prepareDecodingOptions(imageInfo.imageSize,decodingInfo);\n    decodedBitmap=BitmapFactory.decodeStream(imageStream,null,decodingOptions);\n  }\n  finally {\n    IoUtils.closeSilently(imageStream);\n  }\n  if (decodedBitmap == null) {\n    L.e(ERROR_CANT_DECODE_IMAGE,decodingInfo.getImageKey());\n  }\n else {\n    decodedBitmap=considerExactScaleAndOrientatiton(decodedBitmap,decodingInfo,imageInfo.exif.rotation,imageInfo.exif.flipHorizontal);\n  }\n  return decodedBitmap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 85,
        "startColumnNumber" : 3,
        "endLineNumber" : 85,
        "endColumnNumber" : 38
      },
      "nodeContext" : "IoUtils.closeSilently(imageStream);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.InputStream"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 75,
    "startColumnNumber" : 6,
    "endLineNumber" : 75,
    "endColumnNumber" : 17
  }, {
    "charLength" : 11,
    "startLineNumber" : 80,
    "startColumnNumber" : 42,
    "endLineNumber" : 80,
    "endColumnNumber" : 53
  }, {
    "charLength" : 11,
    "startLineNumber" : 81,
    "startColumnNumber" : 29,
    "endLineNumber" : 81,
    "endColumnNumber" : 40
  }, {
    "charLength" : 11,
    "startLineNumber" : 83,
    "startColumnNumber" : 46,
    "endLineNumber" : 83,
    "endColumnNumber" : 57
  }, {
    "charLength" : 11,
    "startLineNumber" : 85,
    "startColumnNumber" : 25,
    "endLineNumber" : 85,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  } ]
}