{
  "id" : 407,
  "expression" : "healthUrl",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-starter-client/src/main/java/de/codecentric/boot/admin/client/registration/Application.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "healthUrl",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 43,
      "startColumnNumber" : 23,
      "endLineNumber" : 43,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Assert.hasText(healthUrl,\"healthUrl must not be empty!\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assert.hasText(healthUrl,\"healthUrl must not be empty!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 41,
        "startColumnNumber" : 85,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.hasText(name,\"name must not be empty!\");\n  Assert.hasText(healthUrl,\"healthUrl must not be empty!\");\n  this.name=name;\n  this.managementUrl=managementUrl;\n  this.healthUrl=healthUrl;\n  this.serviceUrl=serviceUrl;\n  this.metadata=new HashMap<>(metadata);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@lombok.Builder(builderClassName=\"Builder\") protected Application(String name,String managementUrl,String healthUrl,String serviceUrl,@lombok.Singular(\"metadata\") Map<String,String> metadata){\n  Assert.hasText(name,\"name must not be empty!\");\n  Assert.hasText(healthUrl,\"healthUrl must not be empty!\");\n  this.name=name;\n  this.managementUrl=managementUrl;\n  this.healthUrl=healthUrl;\n  this.serviceUrl=serviceUrl;\n  this.metadata=new HashMap<>(metadata);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assert.hasText(healthUrl,\"healthUrl must not be empty!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "healthUrl",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 46,
      "startColumnNumber" : 25,
      "endLineNumber" : 46,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 34
      },
      "nodeContext" : "this.healthUrl=healthUrl",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 35
      },
      "nodeContext" : "this.healthUrl=healthUrl;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 41,
        "startColumnNumber" : 85,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.hasText(name,\"name must not be empty!\");\n  Assert.hasText(healthUrl,\"healthUrl must not be empty!\");\n  this.name=name;\n  this.managementUrl=managementUrl;\n  this.healthUrl=healthUrl;\n  this.serviceUrl=serviceUrl;\n  this.metadata=new HashMap<>(metadata);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@lombok.Builder(builderClassName=\"Builder\") protected Application(String name,String managementUrl,String healthUrl,String serviceUrl,@lombok.Singular(\"metadata\") Map<String,String> metadata){\n  Assert.hasText(name,\"name must not be empty!\");\n  Assert.hasText(healthUrl,\"healthUrl must not be empty!\");\n  this.name=name;\n  this.managementUrl=managementUrl;\n  this.healthUrl=healthUrl;\n  this.serviceUrl=serviceUrl;\n  this.metadata=new HashMap<>(metadata);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 35
      },
      "nodeContext" : "this.healthUrl=healthUrl;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 43,
    "startColumnNumber" : 23,
    "endLineNumber" : 43,
    "endColumnNumber" : 32
  }, {
    "charLength" : 9,
    "startLineNumber" : 46,
    "startColumnNumber" : 25,
    "endLineNumber" : 46,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}