{
  "id" : 109,
  "expression" : "1",
  "projectName" : "winterbe@java8-tutorial",
  "commitID" : "89a257129873974e4beb658115e854649b9204b2",
  "filePath" : "/src/com/winterbe/java8/samples/lambda/Lambda5.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 18,
      "startColumnNumber" : 38,
      "endLineNumber" : 18,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 40
      },
      "nodeContext" : "printKeyAndValue.accept(\"One\",1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 41
      },
      "nodeContext" : "printKeyAndValue.accept(\"One\",1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 12,
        "startColumnNumber" : 44,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BiConsumer<String,Integer> printKeyAndValue=(key,value) -> System.out.println(key + \"-\" + value);\n  printKeyAndValue.accept(\"One\",1);\n  printKeyAndValue.accept(\"Two\",2);\n  System.out.println(\"##################\");\n  HashMap<String,Integer> dummyValues=new HashMap<>();\n  dummyValues.put(\"One\",1);\n  dummyValues.put(\"Two\",2);\n  dummyValues.put(\"Three\",3);\n  dummyValues.forEach((key,value) -> System.out.println(key + \"-\" + value));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String... args){\n  BiConsumer<String,Integer> printKeyAndValue=(key,value) -> System.out.println(key + \"-\" + value);\n  printKeyAndValue.accept(\"One\",1);\n  printKeyAndValue.accept(\"Two\",2);\n  System.out.println(\"##################\");\n  HashMap<String,Integer> dummyValues=new HashMap<>();\n  dummyValues.put(\"One\",1);\n  dummyValues.put(\"Two\",2);\n  dummyValues.put(\"Three\",3);\n  dummyValues.forEach((key,value) -> System.out.println(key + \"-\" + value));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 41
      },
      "nodeContext" : "printKeyAndValue.accept(\"One\",1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 25,
      "startColumnNumber" : 31,
      "endLineNumber" : 25,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 33
      },
      "nodeContext" : "dummyValues.put(\"One\",1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 34
      },
      "nodeContext" : "dummyValues.put(\"One\",1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 12,
        "startColumnNumber" : 44,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BiConsumer<String,Integer> printKeyAndValue=(key,value) -> System.out.println(key + \"-\" + value);\n  printKeyAndValue.accept(\"One\",1);\n  printKeyAndValue.accept(\"Two\",2);\n  System.out.println(\"##################\");\n  HashMap<String,Integer> dummyValues=new HashMap<>();\n  dummyValues.put(\"One\",1);\n  dummyValues.put(\"Two\",2);\n  dummyValues.put(\"Three\",3);\n  dummyValues.forEach((key,value) -> System.out.println(key + \"-\" + value));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String... args){\n  BiConsumer<String,Integer> printKeyAndValue=(key,value) -> System.out.println(key + \"-\" + value);\n  printKeyAndValue.accept(\"One\",1);\n  printKeyAndValue.accept(\"Two\",2);\n  System.out.println(\"##################\");\n  HashMap<String,Integer> dummyValues=new HashMap<>();\n  dummyValues.put(\"One\",1);\n  dummyValues.put(\"Two\",2);\n  dummyValues.put(\"Three\",3);\n  dummyValues.forEach((key,value) -> System.out.println(key + \"-\" + value));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 34
      },
      "nodeContext" : "dummyValues.put(\"One\",1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 18,
    "startColumnNumber" : 38,
    "endLineNumber" : 18,
    "endColumnNumber" : 39
  }, {
    "charLength" : 1,
    "startLineNumber" : 25,
    "startColumnNumber" : 31,
    "endLineNumber" : 25,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}