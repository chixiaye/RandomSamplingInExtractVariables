{
  "id" : 415,
  "expression" : "new MediaSource[mediaSources.size()]",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/player/resolver/VideoPlaybackResolver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new MediaSource[mediaSources.size()]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 118,
      "startColumnNumber" : 20,
      "endLineNumber" : 118,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 117,
        "startColumnNumber" : 42,
        "endLineNumber" : 118,
        "endColumnNumber" : 57
      },
      "nodeContext" : "mediaSources.toArray(new MediaSource[mediaSources.size()])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 117,
        "startColumnNumber" : 19,
        "endLineNumber" : 118,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new MergingMediaSource(mediaSources.toArray(new MediaSource[mediaSources.size()]))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 117,
        "startColumnNumber" : 12,
        "endLineNumber" : 118,
        "endColumnNumber" : 59
      },
      "nodeContext" : "return new MergingMediaSource(mediaSources.toArray(new MediaSource[mediaSources.size()]));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 116,
        "startColumnNumber" : 15,
        "endLineNumber" : 119,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return new MergingMediaSource(mediaSources.toArray(new MediaSource[mediaSources.size()]));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mediaSources.size() == 1) {\n  return mediaSources.get(0);\n}\n else {\n  return new MergingMediaSource(mediaSources.toArray(new MediaSource[mediaSources.size()]));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3217,
        "startLineNumber" : 49,
        "startColumnNumber" : 63,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final MediaSource liveSource=maybeBuildLiveMediaSource(dataSource,info);\n  if (liveSource != null) {\n    return liveSource;\n  }\n  List<MediaSource> mediaSources=new ArrayList<>();\n  final List<VideoStream> videos=ListHelper.getSortedStreamVideosList(context,info.getVideoStreams(),info.getVideoOnlyStreams(),false);\n  final int index;\n  if (videos.isEmpty()) {\n    index=-1;\n  }\n else   if (playbackQuality == null) {\n    index=qualityResolver.getDefaultResolutionIndex(videos);\n  }\n else {\n    index=qualityResolver.getOverrideResolutionIndex(videos,getPlaybackQuality());\n  }\n  final MediaSourceTag tag=new MediaSourceTag(info,videos,index);\n  @Nullable final VideoStream video=tag.getSelectedVideoStream();\n  if (video != null) {\n    final MediaSource streamSource=buildMediaSource(dataSource,video.getUrl(),PlayerHelper.cacheKeyOf(info,video),MediaFormat.getSuffixById(video.getFormatId()),tag);\n    mediaSources.add(streamSource);\n  }\n  final List<AudioStream> audioStreams=info.getAudioStreams();\n  final AudioStream audio=audioStreams.isEmpty() ? null : audioStreams.get(ListHelper.getDefaultAudioFormat(context,audioStreams));\n  if (audio != null && (video == null || video.isVideoOnly)) {\n    final MediaSource audioSource=buildMediaSource(dataSource,audio.getUrl(),PlayerHelper.cacheKeyOf(info,audio),MediaFormat.getSuffixById(audio.getFormatId()),tag);\n    mediaSources.add(audioSource);\n  }\n  if (mediaSources.isEmpty()) {\n    return null;\n  }\n  if (info.getSubtitles() != null) {\n    for (    final SubtitlesStream subtitle : info.getSubtitles()) {\n      final String mimeType=PlayerHelper.subtitleMimeTypesOf(subtitle.getFormat());\n      if (mimeType == null) {\n        continue;\n      }\n      final Format textFormat=Format.createTextSampleFormat(null,mimeType,SELECTION_FLAG_AUTOSELECT,PlayerHelper.captionLanguageOf(context,subtitle));\n      final MediaSource textSource=dataSource.getSampleMediaSourceFactory().createMediaSource(Uri.parse(subtitle.getURL()),textFormat,TIME_UNSET);\n      mediaSources.add(textSource);\n    }\n  }\n  if (mediaSources.size() == 1) {\n    return mediaSources.get(0);\n  }\n else {\n    return new MergingMediaSource(mediaSources.toArray(new MediaSource[mediaSources.size()]));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 329,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3304,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @Nullable public MediaSource resolve(@NonNull final StreamInfo info){\n  final MediaSource liveSource=maybeBuildLiveMediaSource(dataSource,info);\n  if (liveSource != null) {\n    return liveSource;\n  }\n  List<MediaSource> mediaSources=new ArrayList<>();\n  final List<VideoStream> videos=ListHelper.getSortedStreamVideosList(context,info.getVideoStreams(),info.getVideoOnlyStreams(),false);\n  final int index;\n  if (videos.isEmpty()) {\n    index=-1;\n  }\n else   if (playbackQuality == null) {\n    index=qualityResolver.getDefaultResolutionIndex(videos);\n  }\n else {\n    index=qualityResolver.getOverrideResolutionIndex(videos,getPlaybackQuality());\n  }\n  final MediaSourceTag tag=new MediaSourceTag(info,videos,index);\n  @Nullable final VideoStream video=tag.getSelectedVideoStream();\n  if (video != null) {\n    final MediaSource streamSource=buildMediaSource(dataSource,video.getUrl(),PlayerHelper.cacheKeyOf(info,video),MediaFormat.getSuffixById(video.getFormatId()),tag);\n    mediaSources.add(streamSource);\n  }\n  final List<AudioStream> audioStreams=info.getAudioStreams();\n  final AudioStream audio=audioStreams.isEmpty() ? null : audioStreams.get(ListHelper.getDefaultAudioFormat(context,audioStreams));\n  if (audio != null && (video == null || video.isVideoOnly)) {\n    final MediaSource audioSource=buildMediaSource(dataSource,audio.getUrl(),PlayerHelper.cacheKeyOf(info,audio),MediaFormat.getSuffixById(audio.getFormatId()),tag);\n    mediaSources.add(audioSource);\n  }\n  if (mediaSources.isEmpty()) {\n    return null;\n  }\n  if (info.getSubtitles() != null) {\n    for (    final SubtitlesStream subtitle : info.getSubtitles()) {\n      final String mimeType=PlayerHelper.subtitleMimeTypesOf(subtitle.getFormat());\n      if (mimeType == null) {\n        continue;\n      }\n      final Format textFormat=Format.createTextSampleFormat(null,mimeType,SELECTION_FLAG_AUTOSELECT,PlayerHelper.captionLanguageOf(context,subtitle));\n      final MediaSource textSource=dataSource.getSampleMediaSourceFactory().createMediaSource(Uri.parse(subtitle.getURL()),textFormat,TIME_UNSET);\n      mediaSources.add(textSource);\n    }\n  }\n  if (mediaSources.size() == 1) {\n    return mediaSources.get(0);\n  }\n else {\n    return new MergingMediaSource(mediaSources.toArray(new MediaSource[mediaSources.size()]));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 345,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 117,
        "startColumnNumber" : 42,
        "endLineNumber" : 118,
        "endColumnNumber" : 57
      },
      "nodeContext" : "mediaSources.toArray(new MediaSource[mediaSources.size()])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "org.schabi.newpipe.player.resolver.MediaSource[]"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 118,
    "startColumnNumber" : 20,
    "endLineNumber" : 118,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}