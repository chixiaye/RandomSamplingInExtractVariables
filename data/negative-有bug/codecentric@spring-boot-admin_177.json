{
  "id" : 177,
  "expression" : "\"http://localhost:80/health\"",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/discovery/ApplicationDiscoveryListenerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"http://localhost:80/health\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 137,
      "startColumnNumber" : 62,
      "endLineNumber" : 137,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 137,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertThat(registration.getHealthUrl()).isEqualTo(\"http://localhost:80/health\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 137,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertThat(registration.getHealthUrl()).isEqualTo(\"http://localhost:80/health\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 421,
        "startLineNumber" : 135,
        "startColumnNumber" : 82,
        "endLineNumber" : 141,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Registration registration=application.getRegistration();\n  assertThat(registration.getHealthUrl()).isEqualTo(\"http://localhost:80/health\");\n  assertThat(registration.getManagementUrl()).isEqualTo(\"http://localhost:80\");\n  assertThat(registration.getServiceUrl()).isEqualTo(\"http://localhost:80\");\n  assertThat(registration.getName()).isEqualTo(\"service\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 135,
        "startColumnNumber" : 67,
        "endLineNumber" : 141,
        "endColumnNumber" : 9
      },
      "nodeContext" : "application -> {\n  Registration registration=application.getRegistration();\n  assertThat(registration.getHealthUrl()).isEqualTo(\"http://localhost:80/health\");\n  assertThat(registration.getManagementUrl()).isEqualTo(\"http://localhost:80\");\n  assertThat(registration.getServiceUrl()).isEqualTo(\"http://localhost:80\");\n  assertThat(registration.getName()).isEqualTo(\"service\");\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 48,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 137,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertThat(registration.getHealthUrl()).isEqualTo(\"http://localhost:80/health\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 137,
    "startColumnNumber" : 62,
    "endLineNumber" : 137,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}