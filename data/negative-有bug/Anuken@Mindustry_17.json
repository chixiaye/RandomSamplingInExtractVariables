{
  "id" : 17,
  "expression" : "sinSclMin",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/type/weather/ParticleWeather.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sinSclMin",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 87,
      "startColumnNumber" : 134,
      "endLineNumber" : 87,
      "endColumnNumber" : 143
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 177
      },
      "nodeContext" : "drawParticles(region,color,sizeMin,sizeMax,density,state.intensity,state.opacity,windx,windy,minAlpha,maxAlpha,sinSclMin,sinSclMax,sinMagMin,sinMagMax)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 178
      },
      "nodeContext" : "drawParticles(region,color,sizeMin,sizeMax,density,state.intensity,state.opacity,windx,windy,minAlpha,maxAlpha,sinSclMin,sinSclMax,sinMagMin,sinMagMax);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 86,
        "startColumnNumber" : 25,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  drawParticles(region,color,sizeMin,sizeMax,density,state.intensity,state.opacity,windx,windy,minAlpha,maxAlpha,sinSclMin,sinSclMax,sinMagMin,sinMagMax);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (drawParticles) {\n  drawParticles(region,color,sizeMin,sizeMax,density,state.intensity,state.opacity,windx,windy,minAlpha,maxAlpha,sinSclMin,sinSclMax,sinMagMin,sinMagMax);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1372,
        "startLineNumber" : 55,
        "startColumnNumber" : 44,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float windx, windy;\n  if (useWindVector) {\n    float speed=baseSpeed * state.intensity;\n    windx=state.windVector.x * speed;\n    windy=state.windVector.y * speed;\n  }\n else {\n    windx=this.xspeed;\n    windy=this.yspeed;\n  }\n  if (drawNoise) {\n    if (noise == null) {\n      noise=Core.assets.get(\"sprites/\" + noisePath + \".png\",Texture.class);\n      noise.setWrap(TextureWrap.repeat);\n      noise.setFilter(TextureFilter.linear);\n    }\n    float sspeed=1f, sscl=1f, salpha=1f, offset=0f;\n    Color col=Tmp.c1.set(noiseColor);\n    for (int i=0; i < noiseLayers; i++) {\n      drawNoise(noise,noiseColor,noiseScale * sscl,state.opacity * salpha * opacityMultiplier,sspeed * (useWindVector ? 1f : baseSpeed),state.intensity,windx,windy,offset);\n      sspeed*=noiseLayerSpeedM;\n      salpha*=noiseLayerAlphaM;\n      sscl*=noiseLayerSclM;\n      offset+=0.29f;\n      col.mul(noiseLayerColorM);\n    }\n  }\n  if (drawParticles) {\n    drawParticles(region,color,sizeMin,sizeMax,density,state.intensity,state.opacity,windx,windy,minAlpha,maxAlpha,sinSclMin,sinSclMax,sinMagMin,sinMagMax);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1426,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawOver(WeatherState state){\n  float windx, windy;\n  if (useWindVector) {\n    float speed=baseSpeed * state.intensity;\n    windx=state.windVector.x * speed;\n    windy=state.windVector.y * speed;\n  }\n else {\n    windx=this.xspeed;\n    windy=this.yspeed;\n  }\n  if (drawNoise) {\n    if (noise == null) {\n      noise=Core.assets.get(\"sprites/\" + noisePath + \".png\",Texture.class);\n      noise.setWrap(TextureWrap.repeat);\n      noise.setFilter(TextureFilter.linear);\n    }\n    float sspeed=1f, sscl=1f, salpha=1f, offset=0f;\n    Color col=Tmp.c1.set(noiseColor);\n    for (int i=0; i < noiseLayers; i++) {\n      drawNoise(noise,noiseColor,noiseScale * sscl,state.opacity * salpha * opacityMultiplier,sspeed * (useWindVector ? 1f : baseSpeed),state.intensity,windx,windy,offset);\n      sspeed*=noiseLayerSpeedM;\n      salpha*=noiseLayerAlphaM;\n      sscl*=noiseLayerSclM;\n      offset+=0.29f;\n      col.mul(noiseLayerColorM);\n    }\n  }\n  if (drawParticles) {\n    drawParticles(region,color,sizeMin,sizeMax,density,state.intensity,state.opacity,windx,windy,minAlpha,maxAlpha,sinSclMin,sinSclMax,sinMagMin,sinMagMax);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 178
      },
      "nodeContext" : "drawParticles(region,color,sizeMin,sizeMax,density,state.intensity,state.opacity,windx,windy,minAlpha,maxAlpha,sinSclMin,sinSclMax,sinMagMin,sinMagMax);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 87,
    "startColumnNumber" : 134,
    "endLineNumber" : 87,
    "endColumnNumber" : 143
  } ],
  "layoutRelationDataList" : [ ]
}