{
  "id" : 260,
  "expression" : "\".so\"",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/helper/compat/NativeLibraryHelperCompat.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\".so\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 114,
      "startColumnNumber" : 73,
      "endLineNumber" : 114,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 114,
        "startColumnNumber" : 59,
        "endLineNumber" : 114,
        "endColumnNumber" : 79
      },
      "nodeContext" : "name.endsWith(\".so\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 79
      },
      "nodeContext" : "name.startsWith(\"lib/\") && !entry.isDirectory() && name.endsWith(\".so\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (name.startsWith(\"lib/\") && !entry.isDirectory() && name.endsWith(\".so\")) {\n  String supportedAbi=name.substring(name.indexOf(\"/\") + 1,name.lastIndexOf(\"/\"));\n  supportedABIs.add(supportedAbi);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 108,
        "startColumnNumber" : 37,
        "endLineNumber" : 118,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  ZipEntry entry=entries.nextElement();\n  String name=entry.getName();\n  if (name.contains(\"../\")) {\n    continue;\n  }\n  if (name.startsWith(\"lib/\") && !entry.isDirectory() && name.endsWith(\".so\")) {\n    String supportedAbi=name.substring(name.indexOf(\"/\") + 1,name.lastIndexOf(\"/\"));\n    supportedABIs.add(supportedAbi);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 108,
        "startColumnNumber" : 3,
        "endLineNumber" : 118,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (entries.hasMoreElements()) {\n  ZipEntry entry=entries.nextElement();\n  String name=entry.getName();\n  if (name.contains(\"../\")) {\n    continue;\n  }\n  if (name.startsWith(\"lib/\") && !entry.isDirectory() && name.endsWith(\".so\")) {\n    String supportedAbi=name.substring(name.indexOf(\"/\") + 1,name.lastIndexOf(\"/\"));\n    supportedABIs.add(supportedAbi);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 66,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 104,
        "startColumnNumber" : 6,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ZipFile apkFile=new ZipFile(apk);\n  Enumeration<? extends ZipEntry> entries=apkFile.entries();\n  Set<String> supportedABIs=new HashSet<String>();\n  while (entries.hasMoreElements()) {\n    ZipEntry entry=entries.nextElement();\n    String name=entry.getName();\n    if (name.contains(\"../\")) {\n      continue;\n    }\n    if (name.startsWith(\"lib/\") && !entry.isDirectory() && name.endsWith(\".so\")) {\n      String supportedAbi=name.substring(name.indexOf(\"/\") + 1,name.lastIndexOf(\"/\"));\n      supportedABIs.add(supportedAbi);\n    }\n  }\n  return supportedABIs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 104,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  ZipFile apkFile=new ZipFile(apk);\n  Enumeration<? extends ZipEntry> entries=apkFile.entries();\n  Set<String> supportedABIs=new HashSet<String>();\n  while (entries.hasMoreElements()) {\n    ZipEntry entry=entries.nextElement();\n    String name=entry.getName();\n    if (name.contains(\"../\")) {\n      continue;\n    }\n    if (name.startsWith(\"lib/\") && !entry.isDirectory() && name.endsWith(\".so\")) {\n      String supportedAbi=name.substring(name.indexOf(\"/\") + 1,name.lastIndexOf(\"/\"));\n      supportedABIs.add(supportedAbi);\n    }\n  }\n  return supportedABIs;\n}\n catch (Exception e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 103,
        "startColumnNumber" : 55,
        "endLineNumber" : 125,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    ZipFile apkFile=new ZipFile(apk);\n    Enumeration<? extends ZipEntry> entries=apkFile.entries();\n    Set<String> supportedABIs=new HashSet<String>();\n    while (entries.hasMoreElements()) {\n      ZipEntry entry=entries.nextElement();\n      String name=entry.getName();\n      if (name.contains(\"../\")) {\n        continue;\n      }\n      if (name.startsWith(\"lib/\") && !entry.isDirectory() && name.endsWith(\".so\")) {\n        String supportedAbi=name.substring(name.indexOf(\"/\") + 1,name.lastIndexOf(\"/\"));\n        supportedABIs.add(supportedAbi);\n      }\n    }\n    return supportedABIs;\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 710,
        "startLineNumber" : 103,
        "startColumnNumber" : 1,
        "endLineNumber" : 125,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static Set<String> getABIsFromApk(String apk){\n  try {\n    ZipFile apkFile=new ZipFile(apk);\n    Enumeration<? extends ZipEntry> entries=apkFile.entries();\n    Set<String> supportedABIs=new HashSet<String>();\n    while (entries.hasMoreElements()) {\n      ZipEntry entry=entries.nextElement();\n      String name=entry.getName();\n      if (name.contains(\"../\")) {\n        continue;\n      }\n      if (name.startsWith(\"lib/\") && !entry.isDirectory() && name.endsWith(\".so\")) {\n        String supportedAbi=name.substring(name.indexOf(\"/\") + 1,name.lastIndexOf(\"/\"));\n        supportedABIs.add(supportedAbi);\n      }\n    }\n    return supportedABIs;\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 79
      },
      "nodeContext" : "name.startsWith(\"lib/\") && !entry.isDirectory() && name.endsWith(\".so\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 114,
    "startColumnNumber" : 73,
    "endLineNumber" : 114,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}