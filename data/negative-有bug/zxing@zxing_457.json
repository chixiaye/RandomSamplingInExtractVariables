{
  "id" : 457,
  "expression" : "DEFAULT_OUTPUT_FILE",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/javase/src/com/google/zxing/client/j2se/CommandLineEncoder.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DEFAULT_OUTPUT_FILE",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 50,
      "startColumnNumber" : 27,
      "endLineNumber" : 50,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 50,
        "startColumnNumber" : 11,
        "endLineNumber" : 50,
        "endColumnNumber" : 46
      },
      "nodeContext" : "outFileString=DEFAULT_OUTPUT_FILE",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 47
      },
      "nodeContext" : "String outFileString=DEFAULT_OUTPUT_FILE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1476,
        "startLineNumber" : 42,
        "startColumnNumber" : 58,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (args.length == 0) {\n    printUsage();\n    return;\n  }\n  BarcodeFormat barcodeFormat=DEFAULT_BARCODE_FORMAT;\n  String imageFormat=DEFAULT_IMAGE_FORMAT;\n  String outFileString=DEFAULT_OUTPUT_FILE;\n  int width=DEFAULT_WIDTH;\n  int height=DEFAULT_HEIGHT;\n  for (  String arg : args) {\n    if (arg.startsWith(\"--barcode_format\")) {\n      barcodeFormat=BarcodeFormat.valueOf(arg.split(\"=\")[1]);\n    }\n else     if (arg.startsWith(\"--image_format\")) {\n      imageFormat=arg.split(\"=\")[1];\n    }\n else     if (arg.startsWith(\"--output\")) {\n      outFileString=arg.split(\"=\")[1];\n    }\n else     if (arg.startsWith(\"--width\")) {\n      width=Integer.parseInt(arg.split(\"=\")[1]);\n    }\n else     if (arg.startsWith(\"--height\")) {\n      height=Integer.parseInt(arg.split(\"=\")[1]);\n    }\n  }\n  if (DEFAULT_OUTPUT_FILE.equals(outFileString)) {\n    outFileString+='.' + imageFormat.toLowerCase(Locale.ENGLISH);\n  }\n  String contents=null;\n  for (  String arg : args) {\n    if (!arg.startsWith(\"--\")) {\n      contents=arg;\n      break;\n    }\n  }\n  if (contents == null) {\n    printUsage();\n    return;\n  }\n  MultiFormatWriter barcodeWriter=new MultiFormatWriter();\n  BitMatrix matrix=barcodeWriter.encode(contents,barcodeFormat,width,height);\n  MatrixToImageWriter.writeToFile(matrix,imageFormat,new File(outFileString));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1532,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  if (args.length == 0) {\n    printUsage();\n    return;\n  }\n  BarcodeFormat barcodeFormat=DEFAULT_BARCODE_FORMAT;\n  String imageFormat=DEFAULT_IMAGE_FORMAT;\n  String outFileString=DEFAULT_OUTPUT_FILE;\n  int width=DEFAULT_WIDTH;\n  int height=DEFAULT_HEIGHT;\n  for (  String arg : args) {\n    if (arg.startsWith(\"--barcode_format\")) {\n      barcodeFormat=BarcodeFormat.valueOf(arg.split(\"=\")[1]);\n    }\n else     if (arg.startsWith(\"--image_format\")) {\n      imageFormat=arg.split(\"=\")[1];\n    }\n else     if (arg.startsWith(\"--output\")) {\n      outFileString=arg.split(\"=\")[1];\n    }\n else     if (arg.startsWith(\"--width\")) {\n      width=Integer.parseInt(arg.split(\"=\")[1]);\n    }\n else     if (arg.startsWith(\"--height\")) {\n      height=Integer.parseInt(arg.split(\"=\")[1]);\n    }\n  }\n  if (DEFAULT_OUTPUT_FILE.equals(outFileString)) {\n    outFileString+='.' + imageFormat.toLowerCase(Locale.ENGLISH);\n  }\n  String contents=null;\n  for (  String arg : args) {\n    if (!arg.startsWith(\"--\")) {\n      contents=arg;\n      break;\n    }\n  }\n  if (contents == null) {\n    printUsage();\n    return;\n  }\n  MultiFormatWriter barcodeWriter=new MultiFormatWriter();\n  BitMatrix matrix=barcodeWriter.encode(contents,barcodeFormat,width,height);\n  MatrixToImageWriter.writeToFile(matrix,imageFormat,new File(outFileString));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 47
      },
      "nodeContext" : "String outFileString=DEFAULT_OUTPUT_FILE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "DEFAULT_OUTPUT_FILE",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 67,
      "startColumnNumber" : 8,
      "endLineNumber" : 67,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 49
      },
      "nodeContext" : "DEFAULT_OUTPUT_FILE.equals(outFileString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (DEFAULT_OUTPUT_FILE.equals(outFileString)) {\n  outFileString+='.' + imageFormat.toLowerCase(Locale.ENGLISH);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1476,
        "startLineNumber" : 42,
        "startColumnNumber" : 58,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (args.length == 0) {\n    printUsage();\n    return;\n  }\n  BarcodeFormat barcodeFormat=DEFAULT_BARCODE_FORMAT;\n  String imageFormat=DEFAULT_IMAGE_FORMAT;\n  String outFileString=DEFAULT_OUTPUT_FILE;\n  int width=DEFAULT_WIDTH;\n  int height=DEFAULT_HEIGHT;\n  for (  String arg : args) {\n    if (arg.startsWith(\"--barcode_format\")) {\n      barcodeFormat=BarcodeFormat.valueOf(arg.split(\"=\")[1]);\n    }\n else     if (arg.startsWith(\"--image_format\")) {\n      imageFormat=arg.split(\"=\")[1];\n    }\n else     if (arg.startsWith(\"--output\")) {\n      outFileString=arg.split(\"=\")[1];\n    }\n else     if (arg.startsWith(\"--width\")) {\n      width=Integer.parseInt(arg.split(\"=\")[1]);\n    }\n else     if (arg.startsWith(\"--height\")) {\n      height=Integer.parseInt(arg.split(\"=\")[1]);\n    }\n  }\n  if (DEFAULT_OUTPUT_FILE.equals(outFileString)) {\n    outFileString+='.' + imageFormat.toLowerCase(Locale.ENGLISH);\n  }\n  String contents=null;\n  for (  String arg : args) {\n    if (!arg.startsWith(\"--\")) {\n      contents=arg;\n      break;\n    }\n  }\n  if (contents == null) {\n    printUsage();\n    return;\n  }\n  MultiFormatWriter barcodeWriter=new MultiFormatWriter();\n  BitMatrix matrix=barcodeWriter.encode(contents,barcodeFormat,width,height);\n  MatrixToImageWriter.writeToFile(matrix,imageFormat,new File(outFileString));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1532,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  if (args.length == 0) {\n    printUsage();\n    return;\n  }\n  BarcodeFormat barcodeFormat=DEFAULT_BARCODE_FORMAT;\n  String imageFormat=DEFAULT_IMAGE_FORMAT;\n  String outFileString=DEFAULT_OUTPUT_FILE;\n  int width=DEFAULT_WIDTH;\n  int height=DEFAULT_HEIGHT;\n  for (  String arg : args) {\n    if (arg.startsWith(\"--barcode_format\")) {\n      barcodeFormat=BarcodeFormat.valueOf(arg.split(\"=\")[1]);\n    }\n else     if (arg.startsWith(\"--image_format\")) {\n      imageFormat=arg.split(\"=\")[1];\n    }\n else     if (arg.startsWith(\"--output\")) {\n      outFileString=arg.split(\"=\")[1];\n    }\n else     if (arg.startsWith(\"--width\")) {\n      width=Integer.parseInt(arg.split(\"=\")[1]);\n    }\n else     if (arg.startsWith(\"--height\")) {\n      height=Integer.parseInt(arg.split(\"=\")[1]);\n    }\n  }\n  if (DEFAULT_OUTPUT_FILE.equals(outFileString)) {\n    outFileString+='.' + imageFormat.toLowerCase(Locale.ENGLISH);\n  }\n  String contents=null;\n  for (  String arg : args) {\n    if (!arg.startsWith(\"--\")) {\n      contents=arg;\n      break;\n    }\n  }\n  if (contents == null) {\n    printUsage();\n    return;\n  }\n  MultiFormatWriter barcodeWriter=new MultiFormatWriter();\n  BitMatrix matrix=barcodeWriter.encode(contents,barcodeFormat,width,height);\n  MatrixToImageWriter.writeToFile(matrix,imageFormat,new File(outFileString));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 49
      },
      "nodeContext" : "DEFAULT_OUTPUT_FILE.equals(outFileString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 50,
    "startColumnNumber" : 27,
    "endLineNumber" : 50,
    "endColumnNumber" : 46
  }, {
    "charLength" : 19,
    "startLineNumber" : 67,
    "startColumnNumber" : 8,
    "endLineNumber" : 67,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}