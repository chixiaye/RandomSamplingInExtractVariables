{
  "id" : 73,
  "expression" : "adj",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/datastructures/graphs/BipartiteGrapfDFS.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "adj",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 23,
      "startColumnNumber" : 26,
      "endLineNumber" : 23,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 23,
        "startColumnNumber" : 26,
        "endLineNumber" : 23,
        "endColumnNumber" : 39
      },
      "nodeContext" : "adj.get(node)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Integer it : adj.get(node)) {\n  if (color[it] == -1) {\n    color[it]=1 - color[node];\n    if (bipartite(V,adj,color,it) == false) {\n      return false;\n    }\n  }\n else   if (color[it] == color[node]) {\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 19,
        "startColumnNumber" : 102,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (color[node] == -1) {\n    color[node]=1;\n  }\n  for (  Integer it : adj.get(node)) {\n    if (color[it] == -1) {\n      color[it]=1 - color[node];\n      if (bipartite(V,adj,color,it) == false) {\n        return false;\n      }\n    }\n else     if (color[it] == color[node]) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static boolean bipartite(int V,ArrayList<ArrayList<Integer>> adj,int[] color,int node){\n  if (color[node] == -1) {\n    color[node]=1;\n  }\n  for (  Integer it : adj.get(node)) {\n    if (color[it] == -1) {\n      color[it]=1 - color[node];\n      if (bipartite(V,adj,color,it) == false) {\n        return false;\n      }\n    }\n else     if (color[it] == color[node]) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 23,
        "startColumnNumber" : 26,
        "endLineNumber" : 23,
        "endColumnNumber" : 39
      },
      "nodeContext" : "adj.get(node)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "adj",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 26,
      "startColumnNumber" : 33,
      "endLineNumber" : 26,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 26,
        "startColumnNumber" : 20,
        "endLineNumber" : 26,
        "endColumnNumber" : 48
      },
      "nodeContext" : "bipartite(V,adj,color,it)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 26,
        "startColumnNumber" : 20,
        "endLineNumber" : 26,
        "endColumnNumber" : 57
      },
      "nodeContext" : "bipartite(V,adj,color,it) == false",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 26,
        "startColumnNumber" : 16,
        "endLineNumber" : 28,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (bipartite(V,adj,color,it) == false) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 24,
        "startColumnNumber" : 33,
        "endLineNumber" : 29,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  color[it]=1 - color[node];\n  if (bipartite(V,adj,color,it) == false) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 24,
        "startColumnNumber" : 12,
        "endLineNumber" : 31,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (color[it] == -1) {\n  color[it]=1 - color[node];\n  if (bipartite(V,adj,color,it) == false) {\n    return false;\n  }\n}\n else if (color[it] == color[node]) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 23,
        "startColumnNumber" : 41,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (color[it] == -1) {\n    color[it]=1 - color[node];\n    if (bipartite(V,adj,color,it) == false) {\n      return false;\n    }\n  }\n else   if (color[it] == color[node]) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Integer it : adj.get(node)) {\n  if (color[it] == -1) {\n    color[it]=1 - color[node];\n    if (bipartite(V,adj,color,it) == false) {\n      return false;\n    }\n  }\n else   if (color[it] == color[node]) {\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 19,
        "startColumnNumber" : 102,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (color[node] == -1) {\n    color[node]=1;\n  }\n  for (  Integer it : adj.get(node)) {\n    if (color[it] == -1) {\n      color[it]=1 - color[node];\n      if (bipartite(V,adj,color,it) == false) {\n        return false;\n      }\n    }\n else     if (color[it] == color[node]) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static boolean bipartite(int V,ArrayList<ArrayList<Integer>> adj,int[] color,int node){\n  if (color[node] == -1) {\n    color[node]=1;\n  }\n  for (  Integer it : adj.get(node)) {\n    if (color[it] == -1) {\n      color[it]=1 - color[node];\n      if (bipartite(V,adj,color,it) == false) {\n        return false;\n      }\n    }\n else     if (color[it] == color[node]) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 26,
        "startColumnNumber" : 20,
        "endLineNumber" : 26,
        "endColumnNumber" : 57
      },
      "nodeContext" : "bipartite(V,adj,color,it) == false",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 23,
    "startColumnNumber" : 26,
    "endLineNumber" : 23,
    "endColumnNumber" : 29
  }, {
    "charLength" : 3,
    "startLineNumber" : 26,
    "startColumnNumber" : 33,
    "endLineNumber" : 26,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}