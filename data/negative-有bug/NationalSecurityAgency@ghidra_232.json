{
  "id" : 232,
  "expression" : "fileOffset >= segment.getFileOffset() && fileOffset < segment.getFileOffset() + segment.getFileSize()",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/ios/dyldcache/DyldCacheDylibExtractor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fileOffset >= segment.getFileOffset() && fileOffset < segment.getFileOffset() + segment.getFileSize()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 107,
      "startLineNumber" : 276,
      "startColumnNumber" : 8,
      "endLineNumber" : 277,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 15,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 276,
        "startColumnNumber" : 4,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (fileOffset >= segment.getFileOffset() && fileOffset < segment.getFileOffset() + segment.getFileSize()) {\n  return fileOffset - segment.getFileOffset() + packedStarts.get(segment);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 275,
        "startColumnNumber" : 56,
        "endLineNumber" : 280,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (fileOffset >= segment.getFileOffset() && fileOffset < segment.getFileOffset() + segment.getFileSize()) {\n    return fileOffset - segment.getFileOffset() + packedStarts.get(segment);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 275,
        "startColumnNumber" : 3,
        "endLineNumber" : 280,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (SegmentCommand segment : packedStarts.keySet()) {\n  if (fileOffset >= segment.getFileOffset() && fileOffset < segment.getFileOffset() + segment.getFileSize()) {\n    return fileOffset - segment.getFileOffset() + packedStarts.get(segment);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 416,
        "startLineNumber" : 274,
        "startColumnNumber" : 73,
        "endLineNumber" : 284,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  SegmentCommand segment : packedStarts.keySet()) {\n    if (fileOffset >= segment.getFileOffset() && fileOffset < segment.getFileOffset() + segment.getFileSize()) {\n      return fileOffset - segment.getFileOffset() + packedStarts.get(segment);\n    }\n  }\n  throw new NotFoundException(\"Failed to convert DYLD file offset to packed DYLIB offset: \" + Long.toHexString(fileOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 762,
        "startLineNumber" : 267,
        "startColumnNumber" : 2,
        "endLineNumber" : 284,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts the given DYLD file offset to an offset into the packed DYLIB\n * @param fileOffset The DYLD file offset to convert\n * @return An offset into the packed DYLIB\n * @throws NotFoundException If there was no corresponding DYLIB offset\n */\nprivate long getPackedOffset(long fileOffset) throws NotFoundException {\n  for (  SegmentCommand segment : packedStarts.keySet()) {\n    if (fileOffset >= segment.getFileOffset() && fileOffset < segment.getFileOffset() + segment.getFileSize()) {\n      return fileOffset - segment.getFileOffset() + packedStarts.get(segment);\n    }\n  }\n  throw new NotFoundException(\"Failed to convert DYLD file offset to packed DYLIB offset: \" + Long.toHexString(fileOffset));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 58,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 276,
        "startColumnNumber" : 4,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (fileOffset >= segment.getFileOffset() && fileOffset < segment.getFileOffset() + segment.getFileSize()) {\n  return fileOffset - segment.getFileOffset() + packedStarts.get(segment);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    },
    "tokenLength" : 12,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 107,
    "startLineNumber" : 276,
    "startColumnNumber" : 8,
    "endLineNumber" : 277,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}