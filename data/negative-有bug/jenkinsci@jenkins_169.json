{
  "id" : 169,
  "expression" : "view",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/lib/form/OptionTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "view",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 219,
      "startColumnNumber" : 8,
      "endLineNumber" : 219,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 219,
        "startColumnNumber" : 8,
        "endLineNumber" : 219,
        "endColumnNumber" : 26
      },
      "nodeContext" : "view.setMode(mode)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 219,
        "startColumnNumber" : 8,
        "endLineNumber" : 219,
        "endColumnNumber" : 27
      },
      "nodeContext" : "view.setMode(mode);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 217,
        "startColumnNumber" : 92,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UsingJellyView view=j.jenkins.getExtensionList(UsingJellyView.class).get(0);\n  view.setMode(mode);\n  view.setInjection(msgToInject);\n  if (withValueTrue) {\n    view.setWithValue(true);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n  if (withValueFalse) {\n    view.setWithValue(false);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 890,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void checkJelly(int mode,String msgToInject,String bodyContainsExpected,String valueContainsExpected,boolean checkExactCharacters,boolean withValueTrue,boolean withValueFalse) throws Exception {\n  UsingJellyView view=j.jenkins.getExtensionList(UsingJellyView.class).get(0);\n  view.setMode(mode);\n  view.setInjection(msgToInject);\n  if (withValueTrue) {\n    view.setWithValue(true);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n  if (withValueFalse) {\n    view.setWithValue(false);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 219,
        "startColumnNumber" : 8,
        "endLineNumber" : 219,
        "endColumnNumber" : 27
      },
      "nodeContext" : "view.setMode(mode);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "lib.form.OptionTest.UsingJellyView"
  }, {
    "nodeContext" : "view",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 220,
      "startColumnNumber" : 8,
      "endLineNumber" : 220,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 220,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 38
      },
      "nodeContext" : "view.setInjection(msgToInject)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 220,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 39
      },
      "nodeContext" : "view.setInjection(msgToInject);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 217,
        "startColumnNumber" : 92,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UsingJellyView view=j.jenkins.getExtensionList(UsingJellyView.class).get(0);\n  view.setMode(mode);\n  view.setInjection(msgToInject);\n  if (withValueTrue) {\n    view.setWithValue(true);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n  if (withValueFalse) {\n    view.setWithValue(false);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 890,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void checkJelly(int mode,String msgToInject,String bodyContainsExpected,String valueContainsExpected,boolean checkExactCharacters,boolean withValueTrue,boolean withValueFalse) throws Exception {\n  UsingJellyView view=j.jenkins.getExtensionList(UsingJellyView.class).get(0);\n  view.setMode(mode);\n  view.setInjection(msgToInject);\n  if (withValueTrue) {\n    view.setWithValue(true);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n  if (withValueFalse) {\n    view.setWithValue(false);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 220,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 39
      },
      "nodeContext" : "view.setInjection(msgToInject);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "lib.form.OptionTest.UsingJellyView"
  }, {
    "nodeContext" : "view",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 223,
      "startColumnNumber" : 12,
      "endLineNumber" : 223,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 223,
        "startColumnNumber" : 12,
        "endLineNumber" : 223,
        "endColumnNumber" : 35
      },
      "nodeContext" : "view.setWithValue(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 223,
        "startColumnNumber" : 12,
        "endLineNumber" : 223,
        "endColumnNumber" : 36
      },
      "nodeContext" : "view.setWithValue(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 222,
        "startColumnNumber" : 25,
        "endLineNumber" : 225,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  view.setWithValue(true);\n  callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 222,
        "startColumnNumber" : 8,
        "endLineNumber" : 225,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (withValueTrue) {\n  view.setWithValue(true);\n  callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 217,
        "startColumnNumber" : 92,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UsingJellyView view=j.jenkins.getExtensionList(UsingJellyView.class).get(0);\n  view.setMode(mode);\n  view.setInjection(msgToInject);\n  if (withValueTrue) {\n    view.setWithValue(true);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n  if (withValueFalse) {\n    view.setWithValue(false);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 890,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void checkJelly(int mode,String msgToInject,String bodyContainsExpected,String valueContainsExpected,boolean checkExactCharacters,boolean withValueTrue,boolean withValueFalse) throws Exception {\n  UsingJellyView view=j.jenkins.getExtensionList(UsingJellyView.class).get(0);\n  view.setMode(mode);\n  view.setInjection(msgToInject);\n  if (withValueTrue) {\n    view.setWithValue(true);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n  if (withValueFalse) {\n    view.setWithValue(false);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 223,
        "startColumnNumber" : 12,
        "endLineNumber" : 223,
        "endColumnNumber" : 36
      },
      "nodeContext" : "view.setWithValue(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "lib.form.OptionTest.UsingJellyView"
  }, {
    "nodeContext" : "view",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 227,
      "startColumnNumber" : 12,
      "endLineNumber" : 227,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 227,
        "startColumnNumber" : 12,
        "endLineNumber" : 227,
        "endColumnNumber" : 36
      },
      "nodeContext" : "view.setWithValue(false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 227,
        "startColumnNumber" : 12,
        "endLineNumber" : 227,
        "endColumnNumber" : 37
      },
      "nodeContext" : "view.setWithValue(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 226,
        "startColumnNumber" : 26,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  view.setWithValue(false);\n  callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 226,
        "startColumnNumber" : 8,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (withValueFalse) {\n  view.setWithValue(false);\n  callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 217,
        "startColumnNumber" : 92,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  UsingJellyView view=j.jenkins.getExtensionList(UsingJellyView.class).get(0);\n  view.setMode(mode);\n  view.setInjection(msgToInject);\n  if (withValueTrue) {\n    view.setWithValue(true);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n  if (withValueFalse) {\n    view.setWithValue(false);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 890,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void checkJelly(int mode,String msgToInject,String bodyContainsExpected,String valueContainsExpected,boolean checkExactCharacters,boolean withValueTrue,boolean withValueFalse) throws Exception {\n  UsingJellyView view=j.jenkins.getExtensionList(UsingJellyView.class).get(0);\n  view.setMode(mode);\n  view.setInjection(msgToInject);\n  if (withValueTrue) {\n    view.setWithValue(true);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n  if (withValueFalse) {\n    view.setWithValue(false);\n    callPageAndCheckIfResultContainsExpected(\"usingJelly\",bodyContainsExpected,valueContainsExpected,checkExactCharacters);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 227,
        "startColumnNumber" : 12,
        "endLineNumber" : 227,
        "endColumnNumber" : 37
      },
      "nodeContext" : "view.setWithValue(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "lib.form.OptionTest.UsingJellyView"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 219,
    "startColumnNumber" : 8,
    "endLineNumber" : 219,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 220,
    "startColumnNumber" : 8,
    "endLineNumber" : 220,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 223,
    "startColumnNumber" : 12,
    "endLineNumber" : 223,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 227,
    "startColumnNumber" : 12,
    "endLineNumber" : 227,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}