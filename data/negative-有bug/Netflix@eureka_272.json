{
  "id" : 272,
  "expression" : "Mockito",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-client/src/test/java/com/netflix/eureka2/client/channel/InterestChannelImplTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Mockito",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 77,
      "startColumnNumber" : 48,
      "endLineNumber" : 77,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 77,
        "startColumnNumber" : 48,
        "endLineNumber" : 77,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Mockito.anyObject()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 77,
        "startColumnNumber" : 17,
        "endLineNumber" : 77,
        "endColumnNumber" : 68
      },
      "nodeContext" : "serverConnection.submitWithAck(Mockito.anyObject())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 69
      },
      "nodeContext" : "when(serverConnection.submitWithAck(Mockito.anyObject()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 106
      },
      "nodeContext" : "when(serverConnection.submitWithAck(Mockito.anyObject())).thenReturn(Observable.<Void>empty())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 107
      },
      "nodeContext" : "when(serverConnection.submitWithAck(Mockito.anyObject())).thenReturn(Observable.<Void>empty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 74,
        "startColumnNumber" : 49,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  registry=new SourcedEurekaRegistryImpl(EurekaRegistryMetricFactory.registryMetrics());\n  when(serverConnection.acknowledge()).thenReturn(Observable.<Void>empty());\n  when(serverConnection.submitWithAck(Mockito.anyObject())).thenReturn(Observable.<Void>empty());\n  when(serverConnection.lifecycleObservable()).thenReturn(serverConnectionLifecycle);\n  when(transportClient.connect()).thenReturn(Observable.just(serverConnection));\n  channel=new InterestChannelImpl(registry,transportClient,clientMetrics().getInterestChannelMetrics());\n  sampleInterestZuul=SampleInterest.ZuulApp.build();\n  sampleAddMessagesZuul=SampleAddInstance.newMessages(SampleAddInstance.ZuulAdd,10);\n  sampleInterestDiscovery=SampleInterest.DiscoveryApp.build();\n  sampleAddMessagesDiscovery=SampleAddInstance.newMessages(SampleAddInstance.DiscoveryAdd,10);\n  sampleInterestAll=Interests.forFullRegistry();\n  sampleAddMessagesAll=sampleAddMessagesZuul.concatWith(sampleAddMessagesDiscovery);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override protected void before() throws Throwable {\n  registry=new SourcedEurekaRegistryImpl(EurekaRegistryMetricFactory.registryMetrics());\n  when(serverConnection.acknowledge()).thenReturn(Observable.<Void>empty());\n  when(serverConnection.submitWithAck(Mockito.anyObject())).thenReturn(Observable.<Void>empty());\n  when(serverConnection.lifecycleObservable()).thenReturn(serverConnectionLifecycle);\n  when(transportClient.connect()).thenReturn(Observable.just(serverConnection));\n  channel=new InterestChannelImpl(registry,transportClient,clientMetrics().getInterestChannelMetrics());\n  sampleInterestZuul=SampleInterest.ZuulApp.build();\n  sampleAddMessagesZuul=SampleAddInstance.newMessages(SampleAddInstance.ZuulAdd,10);\n  sampleInterestDiscovery=SampleInterest.DiscoveryApp.build();\n  sampleAddMessagesDiscovery=SampleAddInstance.newMessages(SampleAddInstance.DiscoveryAdd,10);\n  sampleInterestAll=Interests.forFullRegistry();\n  sampleAddMessagesAll=sampleAddMessagesZuul.concatWith(sampleAddMessagesDiscovery);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 107
      },
      "nodeContext" : "when(serverConnection.submitWithAck(Mockito.anyObject())).thenReturn(Observable.<Void>empty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 77,
    "startColumnNumber" : 48,
    "endLineNumber" : 77,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}