{
  "id" : 74,
  "expression" : "service",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/hexagonal/src/test/java/com/iluwatar/hexagonal/domain/LotteryTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "service",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 72,
      "startColumnNumber" : 18,
      "endLineNumber" : 72,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 72,
        "startColumnNumber" : 18,
        "endLineNumber" : 73,
        "endColumnNumber" : 54
      },
      "nodeContext" : "service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 54
      },
      "nodeContext" : "ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 55
      },
      "nodeContext" : "var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1994,
        "startLineNumber" : 66,
        "startColumnNumber" : 21,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  administration.resetLottery();\n  assertEquals(0,administration.getAllSubmittedTickets().size());\n  var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n  assertTrue(ticket1.isPresent());\n  var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n  assertTrue(ticket2.isPresent());\n  var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n  assertTrue(ticket3.isPresent());\n  assertEquals(3,administration.getAllSubmittedTickets().size());\n  var winningNumbers=administration.performLottery();\n  var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n  assertTrue(ticket4.isPresent());\n  assertEquals(4,administration.getAllSubmittedTickets().size());\n  var tickets=administration.getAllSubmittedTickets();\n  for (  var id : tickets.keySet()) {\n    var checkResult=service.checkTicketForPrize(id,winningNumbers);\n    assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n    if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n      assertTrue(checkResult.getPrizeAmount() > 0);\n    }\n else {\n      assertEquals(0,checkResult.getPrizeAmount());\n    }\n  }\n  var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n  assertEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  assertEquals(0,checkResult.getPrizeAmount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2021,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test void testLottery(){\n  administration.resetLottery();\n  assertEquals(0,administration.getAllSubmittedTickets().size());\n  var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n  assertTrue(ticket1.isPresent());\n  var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n  assertTrue(ticket2.isPresent());\n  var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n  assertTrue(ticket3.isPresent());\n  assertEquals(3,administration.getAllSubmittedTickets().size());\n  var winningNumbers=administration.performLottery();\n  var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n  assertTrue(ticket4.isPresent());\n  assertEquals(4,administration.getAllSubmittedTickets().size());\n  var tickets=administration.getAllSubmittedTickets();\n  for (  var id : tickets.keySet()) {\n    var checkResult=service.checkTicketForPrize(id,winningNumbers);\n    assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n    if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n      assertTrue(checkResult.getPrizeAmount() > 0);\n    }\n else {\n      assertEquals(0,checkResult.getPrizeAmount());\n    }\n  }\n  var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n  assertEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  assertEquals(0,checkResult.getPrizeAmount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 72,
        "startColumnNumber" : 18,
        "endLineNumber" : 73,
        "endColumnNumber" : 54
      },
      "nodeContext" : "service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.hexagonal.domain.LotteryService"
  }, {
    "nodeContext" : "service",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 75,
      "startColumnNumber" : 18,
      "endLineNumber" : 75,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 75,
        "startColumnNumber" : 18,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 59
      },
      "nodeContext" : "var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1994,
        "startLineNumber" : 66,
        "startColumnNumber" : 21,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  administration.resetLottery();\n  assertEquals(0,administration.getAllSubmittedTickets().size());\n  var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n  assertTrue(ticket1.isPresent());\n  var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n  assertTrue(ticket2.isPresent());\n  var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n  assertTrue(ticket3.isPresent());\n  assertEquals(3,administration.getAllSubmittedTickets().size());\n  var winningNumbers=administration.performLottery();\n  var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n  assertTrue(ticket4.isPresent());\n  assertEquals(4,administration.getAllSubmittedTickets().size());\n  var tickets=administration.getAllSubmittedTickets();\n  for (  var id : tickets.keySet()) {\n    var checkResult=service.checkTicketForPrize(id,winningNumbers);\n    assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n    if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n      assertTrue(checkResult.getPrizeAmount() > 0);\n    }\n else {\n      assertEquals(0,checkResult.getPrizeAmount());\n    }\n  }\n  var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n  assertEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  assertEquals(0,checkResult.getPrizeAmount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2021,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test void testLottery(){\n  administration.resetLottery();\n  assertEquals(0,administration.getAllSubmittedTickets().size());\n  var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n  assertTrue(ticket1.isPresent());\n  var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n  assertTrue(ticket2.isPresent());\n  var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n  assertTrue(ticket3.isPresent());\n  assertEquals(3,administration.getAllSubmittedTickets().size());\n  var winningNumbers=administration.performLottery();\n  var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n  assertTrue(ticket4.isPresent());\n  assertEquals(4,administration.getAllSubmittedTickets().size());\n  var tickets=administration.getAllSubmittedTickets();\n  for (  var id : tickets.keySet()) {\n    var checkResult=service.checkTicketForPrize(id,winningNumbers);\n    assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n    if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n      assertTrue(checkResult.getPrizeAmount() > 0);\n    }\n else {\n      assertEquals(0,checkResult.getPrizeAmount());\n    }\n  }\n  var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n  assertEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  assertEquals(0,checkResult.getPrizeAmount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 75,
        "startColumnNumber" : 18,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.hexagonal.domain.LotteryService"
  }, {
    "nodeContext" : "service",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 78,
      "startColumnNumber" : 18,
      "endLineNumber" : 78,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 78,
        "startColumnNumber" : 18,
        "endLineNumber" : 79,
        "endColumnNumber" : 56
      },
      "nodeContext" : "service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 56
      },
      "nodeContext" : "ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 57
      },
      "nodeContext" : "var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1994,
        "startLineNumber" : 66,
        "startColumnNumber" : 21,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  administration.resetLottery();\n  assertEquals(0,administration.getAllSubmittedTickets().size());\n  var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n  assertTrue(ticket1.isPresent());\n  var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n  assertTrue(ticket2.isPresent());\n  var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n  assertTrue(ticket3.isPresent());\n  assertEquals(3,administration.getAllSubmittedTickets().size());\n  var winningNumbers=administration.performLottery();\n  var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n  assertTrue(ticket4.isPresent());\n  assertEquals(4,administration.getAllSubmittedTickets().size());\n  var tickets=administration.getAllSubmittedTickets();\n  for (  var id : tickets.keySet()) {\n    var checkResult=service.checkTicketForPrize(id,winningNumbers);\n    assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n    if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n      assertTrue(checkResult.getPrizeAmount() > 0);\n    }\n else {\n      assertEquals(0,checkResult.getPrizeAmount());\n    }\n  }\n  var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n  assertEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  assertEquals(0,checkResult.getPrizeAmount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2021,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test void testLottery(){\n  administration.resetLottery();\n  assertEquals(0,administration.getAllSubmittedTickets().size());\n  var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n  assertTrue(ticket1.isPresent());\n  var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n  assertTrue(ticket2.isPresent());\n  var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n  assertTrue(ticket3.isPresent());\n  assertEquals(3,administration.getAllSubmittedTickets().size());\n  var winningNumbers=administration.performLottery();\n  var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n  assertTrue(ticket4.isPresent());\n  assertEquals(4,administration.getAllSubmittedTickets().size());\n  var tickets=administration.getAllSubmittedTickets();\n  for (  var id : tickets.keySet()) {\n    var checkResult=service.checkTicketForPrize(id,winningNumbers);\n    assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n    if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n      assertTrue(checkResult.getPrizeAmount() > 0);\n    }\n else {\n      assertEquals(0,checkResult.getPrizeAmount());\n    }\n  }\n  var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n  assertEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  assertEquals(0,checkResult.getPrizeAmount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 78,
        "startColumnNumber" : 18,
        "endLineNumber" : 79,
        "endColumnNumber" : 56
      },
      "nodeContext" : "service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.hexagonal.domain.LotteryService"
  }, {
    "nodeContext" : "service",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 87,
      "startColumnNumber" : 18,
      "endLineNumber" : 87,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 87,
        "startColumnNumber" : 18,
        "endLineNumber" : 88,
        "endColumnNumber" : 63
      },
      "nodeContext" : "service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 63
      },
      "nodeContext" : "ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 64
      },
      "nodeContext" : "var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1994,
        "startLineNumber" : 66,
        "startColumnNumber" : 21,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  administration.resetLottery();\n  assertEquals(0,administration.getAllSubmittedTickets().size());\n  var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n  assertTrue(ticket1.isPresent());\n  var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n  assertTrue(ticket2.isPresent());\n  var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n  assertTrue(ticket3.isPresent());\n  assertEquals(3,administration.getAllSubmittedTickets().size());\n  var winningNumbers=administration.performLottery();\n  var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n  assertTrue(ticket4.isPresent());\n  assertEquals(4,administration.getAllSubmittedTickets().size());\n  var tickets=administration.getAllSubmittedTickets();\n  for (  var id : tickets.keySet()) {\n    var checkResult=service.checkTicketForPrize(id,winningNumbers);\n    assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n    if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n      assertTrue(checkResult.getPrizeAmount() > 0);\n    }\n else {\n      assertEquals(0,checkResult.getPrizeAmount());\n    }\n  }\n  var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n  assertEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  assertEquals(0,checkResult.getPrizeAmount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2021,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test void testLottery(){\n  administration.resetLottery();\n  assertEquals(0,administration.getAllSubmittedTickets().size());\n  var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n  assertTrue(ticket1.isPresent());\n  var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n  assertTrue(ticket2.isPresent());\n  var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n  assertTrue(ticket3.isPresent());\n  assertEquals(3,administration.getAllSubmittedTickets().size());\n  var winningNumbers=administration.performLottery();\n  var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n  assertTrue(ticket4.isPresent());\n  assertEquals(4,administration.getAllSubmittedTickets().size());\n  var tickets=administration.getAllSubmittedTickets();\n  for (  var id : tickets.keySet()) {\n    var checkResult=service.checkTicketForPrize(id,winningNumbers);\n    assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n    if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n      assertTrue(checkResult.getPrizeAmount() > 0);\n    }\n else {\n      assertEquals(0,checkResult.getPrizeAmount());\n    }\n  }\n  var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n  assertEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  assertEquals(0,checkResult.getPrizeAmount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 87,
        "startColumnNumber" : 18,
        "endLineNumber" : 88,
        "endColumnNumber" : 63
      },
      "nodeContext" : "service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.hexagonal.domain.LotteryService"
  }, {
    "nodeContext" : "service",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 95,
      "startColumnNumber" : 24,
      "endLineNumber" : 95,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 95,
        "startColumnNumber" : 24,
        "endLineNumber" : 95,
        "endColumnNumber" : 71
      },
      "nodeContext" : "service.checkTicketForPrize(id,winningNumbers)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 95,
        "startColumnNumber" : 10,
        "endLineNumber" : 95,
        "endColumnNumber" : 71
      },
      "nodeContext" : "checkResult=service.checkTicketForPrize(id,winningNumbers)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 72
      },
      "nodeContext" : "var checkResult=service.checkTicketForPrize(id,winningNumbers);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 361,
        "startLineNumber" : 94,
        "startColumnNumber" : 36,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  var checkResult=service.checkTicketForPrize(id,winningNumbers);\n  assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n    assertTrue(checkResult.getPrizeAmount() > 0);\n  }\n else {\n    assertEquals(0,checkResult.getPrizeAmount());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (var id : tickets.keySet()) {\n  var checkResult=service.checkTicketForPrize(id,winningNumbers);\n  assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n    assertTrue(checkResult.getPrizeAmount() > 0);\n  }\n else {\n    assertEquals(0,checkResult.getPrizeAmount());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1994,
        "startLineNumber" : 66,
        "startColumnNumber" : 21,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  administration.resetLottery();\n  assertEquals(0,administration.getAllSubmittedTickets().size());\n  var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n  assertTrue(ticket1.isPresent());\n  var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n  assertTrue(ticket2.isPresent());\n  var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n  assertTrue(ticket3.isPresent());\n  assertEquals(3,administration.getAllSubmittedTickets().size());\n  var winningNumbers=administration.performLottery();\n  var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n  assertTrue(ticket4.isPresent());\n  assertEquals(4,administration.getAllSubmittedTickets().size());\n  var tickets=administration.getAllSubmittedTickets();\n  for (  var id : tickets.keySet()) {\n    var checkResult=service.checkTicketForPrize(id,winningNumbers);\n    assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n    if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n      assertTrue(checkResult.getPrizeAmount() > 0);\n    }\n else {\n      assertEquals(0,checkResult.getPrizeAmount());\n    }\n  }\n  var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n  assertEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  assertEquals(0,checkResult.getPrizeAmount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2021,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test void testLottery(){\n  administration.resetLottery();\n  assertEquals(0,administration.getAllSubmittedTickets().size());\n  var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n  assertTrue(ticket1.isPresent());\n  var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n  assertTrue(ticket2.isPresent());\n  var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n  assertTrue(ticket3.isPresent());\n  assertEquals(3,administration.getAllSubmittedTickets().size());\n  var winningNumbers=administration.performLottery();\n  var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n  assertTrue(ticket4.isPresent());\n  assertEquals(4,administration.getAllSubmittedTickets().size());\n  var tickets=administration.getAllSubmittedTickets();\n  for (  var id : tickets.keySet()) {\n    var checkResult=service.checkTicketForPrize(id,winningNumbers);\n    assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n    if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n      assertTrue(checkResult.getPrizeAmount() > 0);\n    }\n else {\n      assertEquals(0,checkResult.getPrizeAmount());\n    }\n  }\n  var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n  assertEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  assertEquals(0,checkResult.getPrizeAmount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 72
      },
      "nodeContext" : "var checkResult=service.checkTicketForPrize(id,winningNumbers);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.hexagonal.domain.LotteryService"
  }, {
    "nodeContext" : "service",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 105,
      "startColumnNumber" : 22,
      "endLineNumber" : 105,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 105,
        "startColumnNumber" : 22,
        "endLineNumber" : 105,
        "endColumnNumber" : 88
      },
      "nodeContext" : "service.checkTicketForPrize(new LotteryTicketId(),winningNumbers)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 88
      },
      "nodeContext" : "checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 89
      },
      "nodeContext" : "var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1994,
        "startLineNumber" : 66,
        "startColumnNumber" : 21,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  administration.resetLottery();\n  assertEquals(0,administration.getAllSubmittedTickets().size());\n  var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n  assertTrue(ticket1.isPresent());\n  var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n  assertTrue(ticket2.isPresent());\n  var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n  assertTrue(ticket3.isPresent());\n  assertEquals(3,administration.getAllSubmittedTickets().size());\n  var winningNumbers=administration.performLottery();\n  var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n  assertTrue(ticket4.isPresent());\n  assertEquals(4,administration.getAllSubmittedTickets().size());\n  var tickets=administration.getAllSubmittedTickets();\n  for (  var id : tickets.keySet()) {\n    var checkResult=service.checkTicketForPrize(id,winningNumbers);\n    assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n    if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n      assertTrue(checkResult.getPrizeAmount() > 0);\n    }\n else {\n      assertEquals(0,checkResult.getPrizeAmount());\n    }\n  }\n  var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n  assertEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  assertEquals(0,checkResult.getPrizeAmount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2021,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test void testLottery(){\n  administration.resetLottery();\n  assertEquals(0,administration.getAllSubmittedTickets().size());\n  var ticket1=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"cvt@bbb.com\",\"123-12312\",\"+32425255\",Set.of(1,2,3,4)));\n  assertTrue(ticket1.isPresent());\n  var ticket2=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"ant@bac.com\",\"123-12312\",\"+32423455\",Set.of(11,12,13,14)));\n  assertTrue(ticket2.isPresent());\n  var ticket3=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"arg@boo.com\",\"123-12312\",\"+32421255\",Set.of(6,8,13,19)));\n  assertTrue(ticket3.isPresent());\n  assertEquals(3,administration.getAllSubmittedTickets().size());\n  var winningNumbers=administration.performLottery();\n  var ticket4=service.submitTicket(LotteryTestUtils.createLotteryTicket(\"lucky@orb.com\",\"123-12312\",\"+12421255\",winningNumbers.getNumbers()));\n  assertTrue(ticket4.isPresent());\n  assertEquals(4,administration.getAllSubmittedTickets().size());\n  var tickets=administration.getAllSubmittedTickets();\n  for (  var id : tickets.keySet()) {\n    var checkResult=service.checkTicketForPrize(id,winningNumbers);\n    assertNotEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n    if (checkResult.getResult().equals(CheckResult.WIN_PRIZE)) {\n      assertTrue(checkResult.getPrizeAmount() > 0);\n    }\n else {\n      assertEquals(0,checkResult.getPrizeAmount());\n    }\n  }\n  var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n  assertEquals(CheckResult.TICKET_NOT_SUBMITTED,checkResult.getResult());\n  assertEquals(0,checkResult.getPrizeAmount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 89
      },
      "nodeContext" : "var checkResult=service.checkTicketForPrize(new LotteryTicketId(),winningNumbers);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.hexagonal.domain.LotteryService"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 72,
    "startColumnNumber" : 18,
    "endLineNumber" : 72,
    "endColumnNumber" : 25
  }, {
    "charLength" : 7,
    "startLineNumber" : 75,
    "startColumnNumber" : 18,
    "endLineNumber" : 75,
    "endColumnNumber" : 25
  }, {
    "charLength" : 7,
    "startLineNumber" : 78,
    "startColumnNumber" : 18,
    "endLineNumber" : 78,
    "endColumnNumber" : 25
  }, {
    "charLength" : 7,
    "startLineNumber" : 87,
    "startColumnNumber" : 18,
    "endLineNumber" : 87,
    "endColumnNumber" : 25
  }, {
    "charLength" : 7,
    "startLineNumber" : 95,
    "startColumnNumber" : 24,
    "endLineNumber" : 95,
    "endColumnNumber" : 31
  }, {
    "charLength" : 7,
    "startLineNumber" : 105,
    "startColumnNumber" : 22,
    "endLineNumber" : 105,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}