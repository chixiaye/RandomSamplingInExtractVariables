{
  "id" : 191,
  "expression" : "serviceAndSpanNames",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-tests/src/test/java/zipkin2/storage/ForwardingStorageComponentTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "serviceAndSpanNames",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 108,
      "startColumnNumber" : 52,
      "endLineNumber" : 108,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 72
      },
      "nodeContext" : "when(delegate.serviceAndSpanNames()).thenReturn(serviceAndSpanNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 73
      },
      "nodeContext" : "when(delegate.serviceAndSpanNames()).thenReturn(serviceAndSpanNames);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 106,
        "startColumnNumber" : 51,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ServiceAndSpanNames serviceAndSpanNames=mock(ServiceAndSpanNames.class);\n  when(delegate.serviceAndSpanNames()).thenReturn(serviceAndSpanNames);\n  assertThat(forwarder.serviceAndSpanNames()).isEqualTo(serviceAndSpanNames);\n  verify(delegate).serviceAndSpanNames();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void delegatesServiceAndSpanNames(){\n  ServiceAndSpanNames serviceAndSpanNames=mock(ServiceAndSpanNames.class);\n  when(delegate.serviceAndSpanNames()).thenReturn(serviceAndSpanNames);\n  assertThat(forwarder.serviceAndSpanNames()).isEqualTo(serviceAndSpanNames);\n  verify(delegate).serviceAndSpanNames();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 41,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 73
      },
      "nodeContext" : "when(delegate.serviceAndSpanNames()).thenReturn(serviceAndSpanNames);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "zipkin2.storage.ServiceAndSpanNames"
  }, {
    "nodeContext" : "serviceAndSpanNames",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 110,
      "startColumnNumber" : 58,
      "endLineNumber" : 110,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(forwarder.serviceAndSpanNames()).isEqualTo(serviceAndSpanNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(forwarder.serviceAndSpanNames()).isEqualTo(serviceAndSpanNames);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 106,
        "startColumnNumber" : 51,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ServiceAndSpanNames serviceAndSpanNames=mock(ServiceAndSpanNames.class);\n  when(delegate.serviceAndSpanNames()).thenReturn(serviceAndSpanNames);\n  assertThat(forwarder.serviceAndSpanNames()).isEqualTo(serviceAndSpanNames);\n  verify(delegate).serviceAndSpanNames();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void delegatesServiceAndSpanNames(){\n  ServiceAndSpanNames serviceAndSpanNames=mock(ServiceAndSpanNames.class);\n  when(delegate.serviceAndSpanNames()).thenReturn(serviceAndSpanNames);\n  assertThat(forwarder.serviceAndSpanNames()).isEqualTo(serviceAndSpanNames);\n  verify(delegate).serviceAndSpanNames();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 41,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(forwarder.serviceAndSpanNames()).isEqualTo(serviceAndSpanNames);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "zipkin2.storage.ServiceAndSpanNames"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 108,
    "startColumnNumber" : 52,
    "endLineNumber" : 108,
    "endColumnNumber" : 71
  }, {
    "charLength" : 19,
    "startLineNumber" : 110,
    "startColumnNumber" : 58,
    "endLineNumber" : 110,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}