{
  "id" : 173,
  "expression" : "\"Failed to close coordinator\"",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Failed to close coordinator\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 2414,
      "startColumnNumber" : 22,
      "endLineNumber" : 2414,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 2414,
        "startColumnNumber" : 12,
        "endLineNumber" : 2414,
        "endColumnNumber" : 55
      },
      "nodeContext" : "log.error(\"Failed to close coordinator\",t)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 2414,
        "startColumnNumber" : 12,
        "endLineNumber" : 2414,
        "endColumnNumber" : 56
      },
      "nodeContext" : "log.error(\"Failed to close coordinator\",t);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 2412,
        "startColumnNumber" : 30,
        "endLineNumber" : 2415,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  firstException.compareAndSet(null,t);\n  log.error(\"Failed to close coordinator\",t);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 2412,
        "startColumnNumber" : 10,
        "endLineNumber" : 2415,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable t) {\n  firstException.compareAndSet(null,t);\n  log.error(\"Failed to close coordinator\",t);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 2409,
        "startColumnNumber" : 8,
        "endLineNumber" : 2415,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (coordinator != null)   coordinator.close(time.timer(Math.min(timeoutMs,requestTimeoutMs)));\n}\n catch (Throwable t) {\n  firstException.compareAndSet(null,t);\n  log.error(\"Failed to close coordinator\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1446,
        "startLineNumber" : 2406,
        "startColumnNumber" : 65,
        "endLineNumber" : 2432,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  log.trace(\"Closing the Kafka consumer\");\n  AtomicReference<Throwable> firstException=new AtomicReference<>();\n  try {\n    if (coordinator != null)     coordinator.close(time.timer(Math.min(timeoutMs,requestTimeoutMs)));\n  }\n catch (  Throwable t) {\n    firstException.compareAndSet(null,t);\n    log.error(\"Failed to close coordinator\",t);\n  }\n  Utils.closeQuietly(fetcher,\"fetcher\",firstException);\n  Utils.closeQuietly(interceptors,\"consumer interceptors\",firstException);\n  Utils.closeQuietly(kafkaConsumerMetrics,\"kafka consumer metrics\",firstException);\n  Utils.closeQuietly(metrics,\"consumer metrics\",firstException);\n  Utils.closeQuietly(client,\"consumer network client\",firstException);\n  Utils.closeQuietly(keyDeserializer,\"consumer key deserializer\",firstException);\n  Utils.closeQuietly(valueDeserializer,\"consumer value deserializer\",firstException);\n  AppInfoParser.unregisterAppInfo(JMX_PREFIX,clientId,metrics);\n  log.debug(\"Kafka consumer has been closed\");\n  Throwable exception=firstException.get();\n  if (exception != null && !swallowException) {\n    if (exception instanceof InterruptException) {\n      throw (InterruptException)exception;\n    }\n    throw new KafkaException(\"Failed to close kafka consumer\",exception);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1507,
        "startLineNumber" : 2406,
        "startColumnNumber" : 4,
        "endLineNumber" : 2432,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void close(long timeoutMs,boolean swallowException){\n  log.trace(\"Closing the Kafka consumer\");\n  AtomicReference<Throwable> firstException=new AtomicReference<>();\n  try {\n    if (coordinator != null)     coordinator.close(time.timer(Math.min(timeoutMs,requestTimeoutMs)));\n  }\n catch (  Throwable t) {\n    firstException.compareAndSet(null,t);\n    log.error(\"Failed to close coordinator\",t);\n  }\n  Utils.closeQuietly(fetcher,\"fetcher\",firstException);\n  Utils.closeQuietly(interceptors,\"consumer interceptors\",firstException);\n  Utils.closeQuietly(kafkaConsumerMetrics,\"kafka consumer metrics\",firstException);\n  Utils.closeQuietly(metrics,\"consumer metrics\",firstException);\n  Utils.closeQuietly(client,\"consumer network client\",firstException);\n  Utils.closeQuietly(keyDeserializer,\"consumer key deserializer\",firstException);\n  Utils.closeQuietly(valueDeserializer,\"consumer value deserializer\",firstException);\n  AppInfoParser.unregisterAppInfo(JMX_PREFIX,clientId,metrics);\n  log.debug(\"Kafka consumer has been closed\");\n  Throwable exception=firstException.get();\n  if (exception != null && !swallowException) {\n    if (exception instanceof InterruptException) {\n      throw (InterruptException)exception;\n    }\n    throw new KafkaException(\"Failed to close kafka consumer\",exception);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 2414,
        "startColumnNumber" : 12,
        "endLineNumber" : 2414,
        "endColumnNumber" : 56
      },
      "nodeContext" : "log.error(\"Failed to close coordinator\",t);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 2414,
    "startColumnNumber" : 22,
    "endLineNumber" : 2414,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}