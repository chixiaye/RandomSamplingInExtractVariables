{
  "id" : 111,
  "expression" : "outFile",
  "projectName" : "iBotPeaches@Apktool",
  "commitID" : "719a25afd69d2211259a65d4fce197340cbae819",
  "filePath" : "/src/brut/androlib/src/SmaliDecoder.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "outFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 70,
      "startColumnNumber" : 12,
      "endLineNumber" : 70,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 28
      },
      "nodeContext" : "outFile.exists()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (outFile.exists()) {\n  throw new AndrolibException(\"File already exists: \" + outFile);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 64,
        "startColumnNumber" : 50,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TypeName name=TypeName.fromInternalName(classDefItem.getClassType().getTypeDescriptor());\n  File outFile=new File(mOutDir,name.getFilePath(true) + (mDebug ? \".java\" : \".smali\"));\n  if (outFile.exists()) {\n    throw new AndrolibException(\"File already exists: \" + outFile);\n  }\n  outFile.getParentFile().mkdirs();\n  IndentingWriter indentWriter=new IndentingWriter(new FileWriter(outFile));\n  if (mDebug) {\n    indentWriter.write(\"package \" + name.package_ + \"; class \"+ name.getName(true,true)+ \" {/*\\n\\n\");\n  }\n  new ClassDefinition(classDefItem).writeTo(indentWriter);\n  if (mDebug) {\n    indentWriter.write(\"\\n*/}\\n\");\n  }\n  indentWriter.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void decodeClassDefItem(ClassDefItem classDefItem) throws AndrolibException, IOException {\n  TypeName name=TypeName.fromInternalName(classDefItem.getClassType().getTypeDescriptor());\n  File outFile=new File(mOutDir,name.getFilePath(true) + (mDebug ? \".java\" : \".smali\"));\n  if (outFile.exists()) {\n    throw new AndrolibException(\"File already exists: \" + outFile);\n  }\n  outFile.getParentFile().mkdirs();\n  IndentingWriter indentWriter=new IndentingWriter(new FileWriter(outFile));\n  if (mDebug) {\n    indentWriter.write(\"package \" + name.package_ + \"; class \"+ name.getName(true,true)+ \" {/*\\n\\n\");\n  }\n  new ClassDefinition(classDefItem).writeTo(indentWriter);\n  if (mDebug) {\n    indentWriter.write(\"\\n*/}\\n\");\n  }\n  indentWriter.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 28
      },
      "nodeContext" : "outFile.exists()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "outFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 72,
      "startColumnNumber" : 42,
      "endLineNumber" : 72,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 72,
        "endColumnNumber" : 49
      },
      "nodeContext" : "\"File already exists: \" + outFile",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 71,
        "startColumnNumber" : 18,
        "endLineNumber" : 72,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new AndrolibException(\"File already exists: \" + outFile)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 51
      },
      "nodeContext" : "throw new AndrolibException(\"File already exists: \" + outFile);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 70,
        "startColumnNumber" : 30,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new AndrolibException(\"File already exists: \" + outFile);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (outFile.exists()) {\n  throw new AndrolibException(\"File already exists: \" + outFile);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 64,
        "startColumnNumber" : 50,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TypeName name=TypeName.fromInternalName(classDefItem.getClassType().getTypeDescriptor());\n  File outFile=new File(mOutDir,name.getFilePath(true) + (mDebug ? \".java\" : \".smali\"));\n  if (outFile.exists()) {\n    throw new AndrolibException(\"File already exists: \" + outFile);\n  }\n  outFile.getParentFile().mkdirs();\n  IndentingWriter indentWriter=new IndentingWriter(new FileWriter(outFile));\n  if (mDebug) {\n    indentWriter.write(\"package \" + name.package_ + \"; class \"+ name.getName(true,true)+ \" {/*\\n\\n\");\n  }\n  new ClassDefinition(classDefItem).writeTo(indentWriter);\n  if (mDebug) {\n    indentWriter.write(\"\\n*/}\\n\");\n  }\n  indentWriter.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void decodeClassDefItem(ClassDefItem classDefItem) throws AndrolibException, IOException {\n  TypeName name=TypeName.fromInternalName(classDefItem.getClassType().getTypeDescriptor());\n  File outFile=new File(mOutDir,name.getFilePath(true) + (mDebug ? \".java\" : \".smali\"));\n  if (outFile.exists()) {\n    throw new AndrolibException(\"File already exists: \" + outFile);\n  }\n  outFile.getParentFile().mkdirs();\n  IndentingWriter indentWriter=new IndentingWriter(new FileWriter(outFile));\n  if (mDebug) {\n    indentWriter.write(\"package \" + name.package_ + \"; class \"+ name.getName(true,true)+ \" {/*\\n\\n\");\n  }\n  new ClassDefinition(classDefItem).writeTo(indentWriter);\n  if (mDebug) {\n    indentWriter.write(\"\\n*/}\\n\");\n  }\n  indentWriter.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 72,
        "endColumnNumber" : 49
      },
      "nodeContext" : "\"File already exists: \" + outFile",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "outFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 74,
      "startColumnNumber" : 8,
      "endLineNumber" : 74,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 31
      },
      "nodeContext" : "outFile.getParentFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 40
      },
      "nodeContext" : "outFile.getParentFile().mkdirs()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 41
      },
      "nodeContext" : "outFile.getParentFile().mkdirs();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 64,
        "startColumnNumber" : 50,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TypeName name=TypeName.fromInternalName(classDefItem.getClassType().getTypeDescriptor());\n  File outFile=new File(mOutDir,name.getFilePath(true) + (mDebug ? \".java\" : \".smali\"));\n  if (outFile.exists()) {\n    throw new AndrolibException(\"File already exists: \" + outFile);\n  }\n  outFile.getParentFile().mkdirs();\n  IndentingWriter indentWriter=new IndentingWriter(new FileWriter(outFile));\n  if (mDebug) {\n    indentWriter.write(\"package \" + name.package_ + \"; class \"+ name.getName(true,true)+ \" {/*\\n\\n\");\n  }\n  new ClassDefinition(classDefItem).writeTo(indentWriter);\n  if (mDebug) {\n    indentWriter.write(\"\\n*/}\\n\");\n  }\n  indentWriter.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void decodeClassDefItem(ClassDefItem classDefItem) throws AndrolibException, IOException {\n  TypeName name=TypeName.fromInternalName(classDefItem.getClassType().getTypeDescriptor());\n  File outFile=new File(mOutDir,name.getFilePath(true) + (mDebug ? \".java\" : \".smali\"));\n  if (outFile.exists()) {\n    throw new AndrolibException(\"File already exists: \" + outFile);\n  }\n  outFile.getParentFile().mkdirs();\n  IndentingWriter indentWriter=new IndentingWriter(new FileWriter(outFile));\n  if (mDebug) {\n    indentWriter.write(\"package \" + name.package_ + \"; class \"+ name.getName(true,true)+ \" {/*\\n\\n\");\n  }\n  new ClassDefinition(classDefItem).writeTo(indentWriter);\n  if (mDebug) {\n    indentWriter.write(\"\\n*/}\\n\");\n  }\n  indentWriter.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 41
      },
      "nodeContext" : "outFile.getParentFile().mkdirs();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "outFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 77,
      "startColumnNumber" : 47,
      "endLineNumber" : 77,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 77,
        "startColumnNumber" : 32,
        "endLineNumber" : 77,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new FileWriter(outFile)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 56
      },
      "nodeContext" : "new IndentingWriter(new FileWriter(outFile))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 76,
        "startColumnNumber" : 24,
        "endLineNumber" : 77,
        "endColumnNumber" : 56
      },
      "nodeContext" : "indentWriter=new IndentingWriter(new FileWriter(outFile))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 57
      },
      "nodeContext" : "IndentingWriter indentWriter=new IndentingWriter(new FileWriter(outFile));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 64,
        "startColumnNumber" : 50,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TypeName name=TypeName.fromInternalName(classDefItem.getClassType().getTypeDescriptor());\n  File outFile=new File(mOutDir,name.getFilePath(true) + (mDebug ? \".java\" : \".smali\"));\n  if (outFile.exists()) {\n    throw new AndrolibException(\"File already exists: \" + outFile);\n  }\n  outFile.getParentFile().mkdirs();\n  IndentingWriter indentWriter=new IndentingWriter(new FileWriter(outFile));\n  if (mDebug) {\n    indentWriter.write(\"package \" + name.package_ + \"; class \"+ name.getName(true,true)+ \" {/*\\n\\n\");\n  }\n  new ClassDefinition(classDefItem).writeTo(indentWriter);\n  if (mDebug) {\n    indentWriter.write(\"\\n*/}\\n\");\n  }\n  indentWriter.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void decodeClassDefItem(ClassDefItem classDefItem) throws AndrolibException, IOException {\n  TypeName name=TypeName.fromInternalName(classDefItem.getClassType().getTypeDescriptor());\n  File outFile=new File(mOutDir,name.getFilePath(true) + (mDebug ? \".java\" : \".smali\"));\n  if (outFile.exists()) {\n    throw new AndrolibException(\"File already exists: \" + outFile);\n  }\n  outFile.getParentFile().mkdirs();\n  IndentingWriter indentWriter=new IndentingWriter(new FileWriter(outFile));\n  if (mDebug) {\n    indentWriter.write(\"package \" + name.package_ + \"; class \"+ name.getName(true,true)+ \" {/*\\n\\n\");\n  }\n  new ClassDefinition(classDefItem).writeTo(indentWriter);\n  if (mDebug) {\n    indentWriter.write(\"\\n*/}\\n\");\n  }\n  indentWriter.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 56
      },
      "nodeContext" : "new IndentingWriter(new FileWriter(outFile))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 70,
    "startColumnNumber" : 12,
    "endLineNumber" : 70,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 72,
    "startColumnNumber" : 42,
    "endLineNumber" : 72,
    "endColumnNumber" : 49
  }, {
    "charLength" : 7,
    "startLineNumber" : 74,
    "startColumnNumber" : 8,
    "endLineNumber" : 74,
    "endColumnNumber" : 15
  }, {
    "charLength" : 7,
    "startLineNumber" : 77,
    "startColumnNumber" : 47,
    "endLineNumber" : 77,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}