{
  "id" : 475,
  "expression" : "isError",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/net/Net.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "isError",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 83,
      "startColumnNumber" : 15,
      "endLineNumber" : 83,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isError) {\n  ui.showException(\"@error.any\",e);\n}\n else {\n  ui.showText(\"\",Core.bundle.format(\"connectfail\",error));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1809,
        "startLineNumber" : 53,
        "startColumnNumber" : 21,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Throwable t=e;\n  while (t.getCause() != null) {\n    t=t.getCause();\n  }\n  String baseError=Strings.getFinalMessage(e);\n  String error=baseError == null ? \"\" : baseError.toLowerCase();\n  String type=t.getClass().toString().toLowerCase();\n  boolean isError=false;\n  if (e instanceof BufferUnderflowException || e instanceof BufferOverflowException) {\n    error=Core.bundle.get(\"error.io\");\n  }\n else   if (error.equals(\"mismatch\")) {\n    error=Core.bundle.get(\"error.mismatch\");\n  }\n else   if (error.contains(\"port out of range\") || error.contains(\"invalid argument\") || (error.contains(\"invalid\") && error.contains(\"address\"))|| Strings.neatError(e).contains(\"address associated\")) {\n    error=Core.bundle.get(\"error.invalidaddress\");\n  }\n else   if (error.contains(\"connection refused\") || error.contains(\"route to host\") || type.contains(\"unknownhost\")) {\n    error=Core.bundle.get(\"error.unreachable\");\n  }\n else   if (type.contains(\"timeout\")) {\n    error=Core.bundle.get(\"error.timedout\");\n  }\n else   if (error.equals(\"alreadyconnected\") || error.contains(\"connection is closed\")) {\n    error=Core.bundle.get(\"error.alreadyconnected\");\n  }\n else   if (!error.isEmpty()) {\n    error=Core.bundle.get(\"error.any\");\n    isError=true;\n  }\n  if (isError) {\n    ui.showException(\"@error.any\",e);\n  }\n else {\n    ui.showText(\"\",Core.bundle.format(\"connectfail\",error));\n  }\n  ui.loadfrag.hide();\n  if (client()) {\n    netClient.disconnectQuietly();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1822,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!headless) {\n  Throwable t=e;\n  while (t.getCause() != null) {\n    t=t.getCause();\n  }\n  String baseError=Strings.getFinalMessage(e);\n  String error=baseError == null ? \"\" : baseError.toLowerCase();\n  String type=t.getClass().toString().toLowerCase();\n  boolean isError=false;\n  if (e instanceof BufferUnderflowException || e instanceof BufferOverflowException) {\n    error=Core.bundle.get(\"error.io\");\n  }\n else   if (error.equals(\"mismatch\")) {\n    error=Core.bundle.get(\"error.mismatch\");\n  }\n else   if (error.contains(\"port out of range\") || error.contains(\"invalid argument\") || (error.contains(\"invalid\") && error.contains(\"address\"))|| Strings.neatError(e).contains(\"address associated\")) {\n    error=Core.bundle.get(\"error.invalidaddress\");\n  }\n else   if (error.contains(\"connection refused\") || error.contains(\"route to host\") || type.contains(\"unknownhost\")) {\n    error=Core.bundle.get(\"error.unreachable\");\n  }\n else   if (type.contains(\"timeout\")) {\n    error=Core.bundle.get(\"error.timedout\");\n  }\n else   if (error.equals(\"alreadyconnected\") || error.contains(\"connection is closed\")) {\n    error=Core.bundle.get(\"error.alreadyconnected\");\n  }\n else   if (!error.isEmpty()) {\n    error=Core.bundle.get(\"error.any\");\n    isError=true;\n  }\n  if (isError) {\n    ui.showException(\"@error.any\",e);\n  }\n else {\n    ui.showText(\"\",Core.bundle.format(\"connectfail\",error));\n  }\n  ui.loadfrag.hide();\n  if (client()) {\n    netClient.disconnectQuietly();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 248,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1860,
        "startLineNumber" : 51,
        "startColumnNumber" : 38,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!headless) {\n    Throwable t=e;\n    while (t.getCause() != null) {\n      t=t.getCause();\n    }\n    String baseError=Strings.getFinalMessage(e);\n    String error=baseError == null ? \"\" : baseError.toLowerCase();\n    String type=t.getClass().toString().toLowerCase();\n    boolean isError=false;\n    if (e instanceof BufferUnderflowException || e instanceof BufferOverflowException) {\n      error=Core.bundle.get(\"error.io\");\n    }\n else     if (error.equals(\"mismatch\")) {\n      error=Core.bundle.get(\"error.mismatch\");\n    }\n else     if (error.contains(\"port out of range\") || error.contains(\"invalid argument\") || (error.contains(\"invalid\") && error.contains(\"address\"))|| Strings.neatError(e).contains(\"address associated\")) {\n      error=Core.bundle.get(\"error.invalidaddress\");\n    }\n else     if (error.contains(\"connection refused\") || error.contains(\"route to host\") || type.contains(\"unknownhost\")) {\n      error=Core.bundle.get(\"error.unreachable\");\n    }\n else     if (type.contains(\"timeout\")) {\n      error=Core.bundle.get(\"error.timedout\");\n    }\n else     if (error.equals(\"alreadyconnected\") || error.contains(\"connection is closed\")) {\n      error=Core.bundle.get(\"error.alreadyconnected\");\n    }\n else     if (!error.isEmpty()) {\n      error=Core.bundle.get(\"error.any\");\n      isError=true;\n    }\n    if (isError) {\n      ui.showException(\"@error.any\",e);\n    }\n else {\n      ui.showText(\"\",Core.bundle.format(\"connectfail\",error));\n    }\n    ui.loadfrag.hide();\n    if (client()) {\n      netClient.disconnectQuietly();\n    }\n  }\n  Log.err(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 254,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1959,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Display a network error. Call on the graphics thread. \n */\npublic void showError(Throwable e){\n  if (!headless) {\n    Throwable t=e;\n    while (t.getCause() != null) {\n      t=t.getCause();\n    }\n    String baseError=Strings.getFinalMessage(e);\n    String error=baseError == null ? \"\" : baseError.toLowerCase();\n    String type=t.getClass().toString().toLowerCase();\n    boolean isError=false;\n    if (e instanceof BufferUnderflowException || e instanceof BufferOverflowException) {\n      error=Core.bundle.get(\"error.io\");\n    }\n else     if (error.equals(\"mismatch\")) {\n      error=Core.bundle.get(\"error.mismatch\");\n    }\n else     if (error.contains(\"port out of range\") || error.contains(\"invalid argument\") || (error.contains(\"invalid\") && error.contains(\"address\"))|| Strings.neatError(e).contains(\"address associated\")) {\n      error=Core.bundle.get(\"error.invalidaddress\");\n    }\n else     if (error.contains(\"connection refused\") || error.contains(\"route to host\") || type.contains(\"unknownhost\")) {\n      error=Core.bundle.get(\"error.unreachable\");\n    }\n else     if (type.contains(\"timeout\")) {\n      error=Core.bundle.get(\"error.timedout\");\n    }\n else     if (error.equals(\"alreadyconnected\") || error.contains(\"connection is closed\")) {\n      error=Core.bundle.get(\"error.alreadyconnected\");\n    }\n else     if (!error.isEmpty()) {\n      error=Core.bundle.get(\"error.any\");\n      isError=true;\n    }\n    if (isError) {\n      ui.showException(\"@error.any\",e);\n    }\n else {\n      ui.showText(\"\",Core.bundle.format(\"connectfail\",error));\n    }\n    ui.loadfrag.hide();\n    if (client()) {\n      netClient.disconnectQuietly();\n    }\n  }\n  Log.err(e);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isError) {\n  ui.showException(\"@error.any\",e);\n}\n else {\n  ui.showText(\"\",Core.bundle.format(\"connectfail\",error));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 83,
    "startColumnNumber" : 15,
    "endLineNumber" : 83,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}