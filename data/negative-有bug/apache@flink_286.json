{
  "id" : 286,
  "expression" : "((BasicArrayTypeInfo)typeInfo).getComponentInfo()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowSerializationSchema.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((BasicArrayTypeInfo)typeInfo).getComponentInfo()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 237,
      "startColumnNumber" : 47,
      "endLineNumber" : 237,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 7,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 237,
        "startColumnNumber" : 20,
        "endLineNumber" : 237,
        "endColumnNumber" : 98
      },
      "nodeContext" : "createObjectArrayConverter(((BasicArrayTypeInfo)typeInfo).getComponentInfo())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 236,
        "startColumnNumber" : 19,
        "endLineNumber" : 237,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo)typeInfo).getComponentInfo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 236,
        "startColumnNumber" : 12,
        "endLineNumber" : 237,
        "endColumnNumber" : 100
      },
      "nodeContext" : "return Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo)typeInfo).getComponentInfo()));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 235,
        "startColumnNumber" : 59,
        "endLineNumber" : 238,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo)typeInfo).getComponentInfo()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 235,
        "startColumnNumber" : 15,
        "endLineNumber" : 243,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (typeInfo instanceof BasicArrayTypeInfo) {\n  return Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo)typeInfo).getComponentInfo()));\n}\n else if (isPrimitiveByteArray(typeInfo)) {\n  return Optional.of((mapper,reuse,object) -> mapper.getNodeFactory().binaryNode((byte[])object));\n}\n else {\n  return Optional.empty();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 653,
        "startLineNumber" : 231,
        "startColumnNumber" : 15,
        "endLineNumber" : 243,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (typeInfo instanceof ObjectArrayTypeInfo) {\n  return Optional.of(createObjectArrayConverter(((ObjectArrayTypeInfo)typeInfo).getComponentInfo()));\n}\n else if (typeInfo instanceof BasicArrayTypeInfo) {\n  return Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo)typeInfo).getComponentInfo()));\n}\n else if (isPrimitiveByteArray(typeInfo)) {\n  return Optional.of((mapper,reuse,object) -> mapper.getNodeFactory().binaryNode((byte[])object));\n}\n else {\n  return Optional.empty();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 783,
        "startLineNumber" : 229,
        "startColumnNumber" : 8,
        "endLineNumber" : 243,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (typeInfo instanceof RowTypeInfo) {\n  return Optional.of(createRowConverter((RowTypeInfo)typeInfo));\n}\n else if (typeInfo instanceof ObjectArrayTypeInfo) {\n  return Optional.of(createObjectArrayConverter(((ObjectArrayTypeInfo)typeInfo).getComponentInfo()));\n}\n else if (typeInfo instanceof BasicArrayTypeInfo) {\n  return Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo)typeInfo).getComponentInfo()));\n}\n else if (isPrimitiveByteArray(typeInfo)) {\n  return Optional.of((mapper,reuse,object) -> mapper.getNodeFactory().binaryNode((byte[])object));\n}\n else {\n  return Optional.empty();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 228,
        "startColumnNumber" : 41,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (typeInfo instanceof RowTypeInfo) {\n    return Optional.of(createRowConverter((RowTypeInfo)typeInfo));\n  }\n else   if (typeInfo instanceof ObjectArrayTypeInfo) {\n    return Optional.of(createObjectArrayConverter(((ObjectArrayTypeInfo)typeInfo).getComponentInfo()));\n  }\n else   if (typeInfo instanceof BasicArrayTypeInfo) {\n    return Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo)typeInfo).getComponentInfo()));\n  }\n else   if (isPrimitiveByteArray(typeInfo)) {\n    return Optional.of((mapper,reuse,object) -> mapper.getNodeFactory().binaryNode((byte[])object));\n  }\n else {\n    return Optional.empty();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 914,
        "startLineNumber" : 227,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Optional<SerializationRuntimeConverter> createContainerConverter(TypeInformation<?> typeInfo){\n  if (typeInfo instanceof RowTypeInfo) {\n    return Optional.of(createRowConverter((RowTypeInfo)typeInfo));\n  }\n else   if (typeInfo instanceof ObjectArrayTypeInfo) {\n    return Optional.of(createObjectArrayConverter(((ObjectArrayTypeInfo)typeInfo).getComponentInfo()));\n  }\n else   if (typeInfo instanceof BasicArrayTypeInfo) {\n    return Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo)typeInfo).getComponentInfo()));\n  }\n else   if (isPrimitiveByteArray(typeInfo)) {\n    return Optional.of((mapper,reuse,object) -> mapper.getNodeFactory().binaryNode((byte[])object));\n  }\n else {\n    return Optional.empty();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 237,
        "startColumnNumber" : 20,
        "endLineNumber" : 237,
        "endColumnNumber" : 98
      },
      "nodeContext" : "createObjectArrayConverter(((BasicArrayTypeInfo)typeInfo).getComponentInfo())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "org.apache.flink.api.common.typeinfo.TypeInformation"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 237,
    "startColumnNumber" : 47,
    "endLineNumber" : 237,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}