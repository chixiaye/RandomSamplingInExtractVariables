{
  "id" : 448,
  "expression" : "new ListenableFutureAdapter<>(future)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava/src/com/google/common/util/concurrent/JdkFutureAdapters.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ListenableFutureAdapter<>(future)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 59,
      "startColumnNumber" : 11,
      "endLineNumber" : 59,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 49
      },
      "nodeContext" : "return new ListenableFutureAdapter<>(future);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 55,
        "startColumnNumber" : 24,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (future instanceof ListenableFuture) {\n    return (ListenableFuture<V>)future;\n  }\n  return new ListenableFutureAdapter<>(future);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Assigns a thread to the given  {@link Future} to provide {@link ListenableFuture} functionality.<p><b>Warning:</b> If the input future does not already implement  {@code ListenableFuture}, the returned future will emulate  {@link ListenableFuture#addListener} by taking a thread from aninternal, unbounded pool at the first call to  {@code addListener} and holding it until thefuture is  {@linkplain Future#isDone() done}. <p>Prefer to create  {@code ListenableFuture} instances with {@link SettableFuture},  {@link MoreExecutors#listeningDecorator(java.util.concurrent.ExecutorService)},  {@link ListenableFutureTask},  {@link AbstractFuture}, and other utilities over creating plain  {@code Future} instances to be upgraded to {@code ListenableFuture} after the fact.\n */\npublic static <V extends @Nullable Object>ListenableFuture<V> listenInPoolThread(Future<V> future){\n  if (future instanceof ListenableFuture) {\n    return (ListenableFuture<V>)future;\n  }\n  return new ListenableFutureAdapter<>(future);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 49
      },
      "nodeContext" : "return new ListenableFutureAdapter<>(future);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.google.common.util.concurrent.JdkFutureAdapters.ListenableFutureAdapter<V>"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 59,
    "startColumnNumber" : 11,
    "endLineNumber" : 59,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}