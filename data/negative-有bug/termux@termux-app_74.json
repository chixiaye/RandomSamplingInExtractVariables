{
  "id" : 74,
  "expression" : "path.isEmpty()",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/termux-shared/src/main/java/com/termux/shared/net/socket/local/LocalServerSocket.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "path.isEmpty()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 56,
      "startColumnNumber" : 28,
      "endLineNumber" : 56,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 42
      },
      "nodeContext" : "path == null || path.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (path == null || path.isEmpty()) {\n  return LocalSocketErrno.ERRNO_SERVER_SOCKET_PATH_NULL_OR_EMPTY.getError(mLocalSocketRunConfig.getTitle());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3352,
        "startLineNumber" : 52,
        "startColumnNumber" : 38,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Logger.logDebug(LOG_TAG,\"start\");\n  String path=mLocalSocketRunConfig.getPath();\n  if (path == null || path.isEmpty()) {\n    return LocalSocketErrno.ERRNO_SERVER_SOCKET_PATH_NULL_OR_EMPTY.getError(mLocalSocketRunConfig.getTitle());\n  }\n  if (!mLocalSocketRunConfig.isAbstractNamespaceSocket()) {\n    path=FileUtils.getCanonicalPath(path,null);\n  }\n  if (path.getBytes(StandardCharsets.UTF_8).length > 108) {\n    return LocalSocketErrno.ERRNO_SERVER_SOCKET_PATH_TOO_LONG.getError(mLocalSocketRunConfig.getTitle(),path);\n  }\n  int backlog=mLocalSocketRunConfig.getBacklog();\n  if (backlog <= 0) {\n    return LocalSocketErrno.ERRNO_SERVER_SOCKET_BACKLOG_INVALID.getError(mLocalSocketRunConfig.getTitle(),backlog);\n  }\n  Error error;\n  if (!mLocalSocketRunConfig.isAbstractNamespaceSocket()) {\n    if (!path.startsWith(\"/\"))     return LocalSocketErrno.ERRNO_SERVER_SOCKET_PATH_NOT_ABSOLUTE.getError(mLocalSocketRunConfig.getTitle(),path);\n    String socketParentPath=new File(path).getParent();\n    error=FileUtils.validateDirectoryFileExistenceAndPermissions(mLocalSocketRunConfig.getTitle() + \" server socket file parent\",socketParentPath,null,true,SERVER_SOCKET_PARENT_DIRECTORY_PERMISSIONS,true,true,false,false);\n    if (error != null)     return error;\n    error=deleteServerSocketFile();\n    if (error != null)     return error;\n  }\n  JniResult result=LocalSocketManager.createServerSocket(mLocalSocketRunConfig.getLogTitle() + \" (server)\",path.getBytes(StandardCharsets.UTF_8),backlog);\n  if (result == null || result.retval != 0) {\n    return LocalSocketErrno.ERRNO_CREATE_SERVER_SOCKET_FAILED.getError(mLocalSocketRunConfig.getTitle(),JniResult.getErrorString(result));\n  }\n  int fd=result.intData;\n  if (fd < 0) {\n    return LocalSocketErrno.ERRNO_SERVER_SOCKET_FD_INVALID.getError(fd,mLocalSocketRunConfig.getTitle());\n  }\n  mLocalSocketRunConfig.setFD(fd);\n  mClientSocketListener.setUncaughtExceptionHandler(mLocalSocketManager.getLocalSocketManagerClientThreadUEH());\n  try {\n    mClientSocketListener.start();\n  }\n catch (  Exception e) {\n    Logger.logStackTraceWithMessage(LOG_TAG,\"mClientSocketListener start failed\",e);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 264,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3438,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Start server by creating server socket. \n */\npublic synchronized Error start(){\n  Logger.logDebug(LOG_TAG,\"start\");\n  String path=mLocalSocketRunConfig.getPath();\n  if (path == null || path.isEmpty()) {\n    return LocalSocketErrno.ERRNO_SERVER_SOCKET_PATH_NULL_OR_EMPTY.getError(mLocalSocketRunConfig.getTitle());\n  }\n  if (!mLocalSocketRunConfig.isAbstractNamespaceSocket()) {\n    path=FileUtils.getCanonicalPath(path,null);\n  }\n  if (path.getBytes(StandardCharsets.UTF_8).length > 108) {\n    return LocalSocketErrno.ERRNO_SERVER_SOCKET_PATH_TOO_LONG.getError(mLocalSocketRunConfig.getTitle(),path);\n  }\n  int backlog=mLocalSocketRunConfig.getBacklog();\n  if (backlog <= 0) {\n    return LocalSocketErrno.ERRNO_SERVER_SOCKET_BACKLOG_INVALID.getError(mLocalSocketRunConfig.getTitle(),backlog);\n  }\n  Error error;\n  if (!mLocalSocketRunConfig.isAbstractNamespaceSocket()) {\n    if (!path.startsWith(\"/\"))     return LocalSocketErrno.ERRNO_SERVER_SOCKET_PATH_NOT_ABSOLUTE.getError(mLocalSocketRunConfig.getTitle(),path);\n    String socketParentPath=new File(path).getParent();\n    error=FileUtils.validateDirectoryFileExistenceAndPermissions(mLocalSocketRunConfig.getTitle() + \" server socket file parent\",socketParentPath,null,true,SERVER_SOCKET_PARENT_DIRECTORY_PERMISSIONS,true,true,false,false);\n    if (error != null)     return error;\n    error=deleteServerSocketFile();\n    if (error != null)     return error;\n  }\n  JniResult result=LocalSocketManager.createServerSocket(mLocalSocketRunConfig.getLogTitle() + \" (server)\",path.getBytes(StandardCharsets.UTF_8),backlog);\n  if (result == null || result.retval != 0) {\n    return LocalSocketErrno.ERRNO_CREATE_SERVER_SOCKET_FAILED.getError(mLocalSocketRunConfig.getTitle(),JniResult.getErrorString(result));\n  }\n  int fd=result.intData;\n  if (fd < 0) {\n    return LocalSocketErrno.ERRNO_SERVER_SOCKET_FD_INVALID.getError(fd,mLocalSocketRunConfig.getTitle());\n  }\n  mLocalSocketRunConfig.setFD(fd);\n  mClientSocketListener.setUncaughtExceptionHandler(mLocalSocketManager.getLocalSocketManagerClientThreadUEH());\n  try {\n    mClientSocketListener.start();\n  }\n catch (  Exception e) {\n    Logger.logStackTraceWithMessage(LOG_TAG,\"mClientSocketListener start failed\",e);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 271,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 42
      },
      "nodeContext" : "path == null || path.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 56,
    "startColumnNumber" : 28,
    "endLineNumber" : 56,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}