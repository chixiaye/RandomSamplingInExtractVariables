{
  "id" : 163,
  "expression" : "!ts.awaitTerminalEvent(5,TimeUnit.SECONDS)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/single/SingleTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!ts.awaitTerminalEvent(5,TimeUnit.SECONDS)",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 191,
      "startColumnNumber" : 12,
      "endLineNumber" : 191,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 191,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!ts.awaitTerminalEvent(5,TimeUnit.SECONDS)) {\n  ts.cancel();\n  Assert.fail(\"TestSubscriber timed out.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 588,
        "startLineNumber" : 182,
        "startColumnNumber" : 30,
        "endLineNumber" : 196,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestSubscriber<String> ts=new TestSubscriber<String>();\n  Single.just(\"Hello\").flatMap(new Function<String,Single<String>>(){\n    @Override public Single<String> apply(    String s){\n      return Single.just(s + \" World!\").subscribeOn(Schedulers.computation());\n    }\n  }\n).subscribe(ts);\n  if (!ts.awaitTerminalEvent(5,TimeUnit.SECONDS)) {\n    ts.cancel();\n    Assert.fail(\"TestSubscriber timed out.\");\n  }\n  ts.assertValueSequence(Arrays.asList(\"Hello World!\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 625,
        "startLineNumber" : 181,
        "startColumnNumber" : 4,
        "endLineNumber" : 196,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFlatMap(){\n  TestSubscriber<String> ts=new TestSubscriber<String>();\n  Single.just(\"Hello\").flatMap(new Function<String,Single<String>>(){\n    @Override public Single<String> apply(    String s){\n      return Single.just(s + \" World!\").subscribeOn(Schedulers.computation());\n    }\n  }\n).subscribe(ts);\n  if (!ts.awaitTerminalEvent(5,TimeUnit.SECONDS)) {\n    ts.cancel();\n    Assert.fail(\"TestSubscriber timed out.\");\n  }\n  ts.assertValueSequence(Arrays.asList(\"Hello World!\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 191,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!ts.awaitTerminalEvent(5,TimeUnit.SECONDS)) {\n  ts.cancel();\n  Assert.fail(\"TestSubscriber timed out.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 191,
    "startColumnNumber" : 12,
    "endLineNumber" : 191,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}