{
  "id" : 24,
  "expression" : "this",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/vito/core/src/main/java/com/facebook/fresco/vito/core/FrescoController2Impl.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 51,
      "startColumnNumber" : 54,
      "endLineNumber" : 51,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 58
      },
      "nodeContext" : "frescoDrawable.getDrawableDataSubscriber() == this",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 44
      },
      "nodeContext" : "frescoDrawable.getDrawableDataSubscriber() == this && frescoDrawable.isFetchSubmitted()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 64
      },
      "nodeContext" : "frescoDrawable.getDrawableDataSubscriber() == this && frescoDrawable.isFetchSubmitted() && imageRequest.equals(frescoDrawable.getImageRequest())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (frescoDrawable.getDrawableDataSubscriber() == this && frescoDrawable.isFetchSubmitted() && imageRequest.equals(frescoDrawable.getImageRequest())) {\n  frescoDrawable.cancelReleaseNextFrame();\n  frescoDrawable.cancelReleaseDelayed();\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3225,
        "startLineNumber" : 49,
        "startColumnNumber" : 46,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (frescoDrawable.getDrawableDataSubscriber() == this && frescoDrawable.isFetchSubmitted() && imageRequest.equals(frescoDrawable.getImageRequest())) {\n    frescoDrawable.cancelReleaseNextFrame();\n    frescoDrawable.cancelReleaseDelayed();\n    return true;\n  }\n  frescoDrawable.close();\n  frescoDrawable.setDrawableDataSubscriber(this);\n  frescoDrawable.setImageRequest(imageRequest);\n  frescoDrawable.setCallerContext(callerContext);\n  frescoDrawable.setImageListener(listener);\n  frescoDrawable.setVitoImageRequestListener(mGlobalImageListener);\n  frescoDrawable.setOverlayDrawable(mHierarcher.buildOverlayDrawable(imageRequest.resources,imageRequest.imageOptions));\n  final long imageId=VitoUtils.generateIdentifier();\n  frescoDrawable.setImageId(imageId);\n  frescoDrawable.getImageListener().onSubmit(imageId,imageRequest,callerContext);\n  CloseableReference<CloseableImage> cachedImage=mImagePipeline.getCachedImage(imageRequest);\n  try {\n    if (CloseableReference.isValid(cachedImage)) {\n      frescoDrawable.setImageOrigin(ImageOrigin.MEMORY_BITMAP_SHORTCUT);\n      setActualImage(frescoDrawable,imageRequest,cachedImage,true);\n      return true;\n    }\n  }\n  finally {\n    CloseableReference.closeSafely(cachedImage);\n  }\n  frescoDrawable.setProgressDrawable(mHierarcher.buildProgressDrawable(imageRequest.resources,imageRequest.imageOptions));\n  Drawable placeholder=mHierarcher.buildPlaceholderDrawable(imageRequest.resources,imageRequest.imageOptions);\n  frescoDrawable.setPlaceholderDrawable(placeholder);\n  frescoDrawable.setImageDrawable(null);\n  frescoDrawable.getImageListener().onPlaceholderSet(imageId,imageRequest,placeholder);\n  mLightweightBackgroundThreadExecutor.execute(new Runnable(){\n    @Override public void run(){\n      if (imageId != frescoDrawable.getImageId()) {\n        return;\n      }\n      DataSource<CloseableReference<CloseableImage>> dataSource;\n      if (imageRequest.imageRequest == null) {\n        dataSource=DataSources.immediateFailedDataSource(NO_REQUEST_EXCEPTION);\n      }\n else {\n        dataSource=mImagePipeline.fetchDecodedImage(imageRequest,callerContext,frescoDrawable.getImageOriginListener(),imageId);\n      }\n      frescoDrawable.setDataSource(dataSource);\n      dataSource.subscribe(frescoDrawable,mUiThreadExecutor);\n    }\n  }\n);\n  frescoDrawable.setFetchSubmitted(true);\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 260,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3436,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean fetch(final FrescoDrawable2 frescoDrawable,final VitoImageRequest imageRequest,final @Nullable Object callerContext,final @Nullable ImageListener listener){\n  if (frescoDrawable.getDrawableDataSubscriber() == this && frescoDrawable.isFetchSubmitted() && imageRequest.equals(frescoDrawable.getImageRequest())) {\n    frescoDrawable.cancelReleaseNextFrame();\n    frescoDrawable.cancelReleaseDelayed();\n    return true;\n  }\n  frescoDrawable.close();\n  frescoDrawable.setDrawableDataSubscriber(this);\n  frescoDrawable.setImageRequest(imageRequest);\n  frescoDrawable.setCallerContext(callerContext);\n  frescoDrawable.setImageListener(listener);\n  frescoDrawable.setVitoImageRequestListener(mGlobalImageListener);\n  frescoDrawable.setOverlayDrawable(mHierarcher.buildOverlayDrawable(imageRequest.resources,imageRequest.imageOptions));\n  final long imageId=VitoUtils.generateIdentifier();\n  frescoDrawable.setImageId(imageId);\n  frescoDrawable.getImageListener().onSubmit(imageId,imageRequest,callerContext);\n  CloseableReference<CloseableImage> cachedImage=mImagePipeline.getCachedImage(imageRequest);\n  try {\n    if (CloseableReference.isValid(cachedImage)) {\n      frescoDrawable.setImageOrigin(ImageOrigin.MEMORY_BITMAP_SHORTCUT);\n      setActualImage(frescoDrawable,imageRequest,cachedImage,true);\n      return true;\n    }\n  }\n  finally {\n    CloseableReference.closeSafely(cachedImage);\n  }\n  frescoDrawable.setProgressDrawable(mHierarcher.buildProgressDrawable(imageRequest.resources,imageRequest.imageOptions));\n  Drawable placeholder=mHierarcher.buildPlaceholderDrawable(imageRequest.resources,imageRequest.imageOptions);\n  frescoDrawable.setPlaceholderDrawable(placeholder);\n  frescoDrawable.setImageDrawable(null);\n  frescoDrawable.getImageListener().onPlaceholderSet(imageId,imageRequest,placeholder);\n  mLightweightBackgroundThreadExecutor.execute(new Runnable(){\n    @Override public void run(){\n      if (imageId != frescoDrawable.getImageId()) {\n        return;\n      }\n      DataSource<CloseableReference<CloseableImage>> dataSource;\n      if (imageRequest.imageRequest == null) {\n        dataSource=DataSources.immediateFailedDataSource(NO_REQUEST_EXCEPTION);\n      }\n else {\n        dataSource=mImagePipeline.fetchDecodedImage(imageRequest,callerContext,frescoDrawable.getImageOriginListener(),imageId);\n      }\n      frescoDrawable.setDataSource(dataSource);\n      dataSource.subscribe(frescoDrawable,mUiThreadExecutor);\n    }\n  }\n);\n  frescoDrawable.setFetchSubmitted(true);\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 290,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 58
      },
      "nodeContext" : "frescoDrawable.getDrawableDataSubscriber() == this",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.facebook.fresco.vito.core.FrescoController2Impl"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 61,
      "startColumnNumber" : 45,
      "endLineNumber" : 61,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 50
      },
      "nodeContext" : "frescoDrawable.setDrawableDataSubscriber(this)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 51
      },
      "nodeContext" : "frescoDrawable.setDrawableDataSubscriber(this);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3225,
        "startLineNumber" : 49,
        "startColumnNumber" : 46,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (frescoDrawable.getDrawableDataSubscriber() == this && frescoDrawable.isFetchSubmitted() && imageRequest.equals(frescoDrawable.getImageRequest())) {\n    frescoDrawable.cancelReleaseNextFrame();\n    frescoDrawable.cancelReleaseDelayed();\n    return true;\n  }\n  frescoDrawable.close();\n  frescoDrawable.setDrawableDataSubscriber(this);\n  frescoDrawable.setImageRequest(imageRequest);\n  frescoDrawable.setCallerContext(callerContext);\n  frescoDrawable.setImageListener(listener);\n  frescoDrawable.setVitoImageRequestListener(mGlobalImageListener);\n  frescoDrawable.setOverlayDrawable(mHierarcher.buildOverlayDrawable(imageRequest.resources,imageRequest.imageOptions));\n  final long imageId=VitoUtils.generateIdentifier();\n  frescoDrawable.setImageId(imageId);\n  frescoDrawable.getImageListener().onSubmit(imageId,imageRequest,callerContext);\n  CloseableReference<CloseableImage> cachedImage=mImagePipeline.getCachedImage(imageRequest);\n  try {\n    if (CloseableReference.isValid(cachedImage)) {\n      frescoDrawable.setImageOrigin(ImageOrigin.MEMORY_BITMAP_SHORTCUT);\n      setActualImage(frescoDrawable,imageRequest,cachedImage,true);\n      return true;\n    }\n  }\n  finally {\n    CloseableReference.closeSafely(cachedImage);\n  }\n  frescoDrawable.setProgressDrawable(mHierarcher.buildProgressDrawable(imageRequest.resources,imageRequest.imageOptions));\n  Drawable placeholder=mHierarcher.buildPlaceholderDrawable(imageRequest.resources,imageRequest.imageOptions);\n  frescoDrawable.setPlaceholderDrawable(placeholder);\n  frescoDrawable.setImageDrawable(null);\n  frescoDrawable.getImageListener().onPlaceholderSet(imageId,imageRequest,placeholder);\n  mLightweightBackgroundThreadExecutor.execute(new Runnable(){\n    @Override public void run(){\n      if (imageId != frescoDrawable.getImageId()) {\n        return;\n      }\n      DataSource<CloseableReference<CloseableImage>> dataSource;\n      if (imageRequest.imageRequest == null) {\n        dataSource=DataSources.immediateFailedDataSource(NO_REQUEST_EXCEPTION);\n      }\n else {\n        dataSource=mImagePipeline.fetchDecodedImage(imageRequest,callerContext,frescoDrawable.getImageOriginListener(),imageId);\n      }\n      frescoDrawable.setDataSource(dataSource);\n      dataSource.subscribe(frescoDrawable,mUiThreadExecutor);\n    }\n  }\n);\n  frescoDrawable.setFetchSubmitted(true);\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 260,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3436,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean fetch(final FrescoDrawable2 frescoDrawable,final VitoImageRequest imageRequest,final @Nullable Object callerContext,final @Nullable ImageListener listener){\n  if (frescoDrawable.getDrawableDataSubscriber() == this && frescoDrawable.isFetchSubmitted() && imageRequest.equals(frescoDrawable.getImageRequest())) {\n    frescoDrawable.cancelReleaseNextFrame();\n    frescoDrawable.cancelReleaseDelayed();\n    return true;\n  }\n  frescoDrawable.close();\n  frescoDrawable.setDrawableDataSubscriber(this);\n  frescoDrawable.setImageRequest(imageRequest);\n  frescoDrawable.setCallerContext(callerContext);\n  frescoDrawable.setImageListener(listener);\n  frescoDrawable.setVitoImageRequestListener(mGlobalImageListener);\n  frescoDrawable.setOverlayDrawable(mHierarcher.buildOverlayDrawable(imageRequest.resources,imageRequest.imageOptions));\n  final long imageId=VitoUtils.generateIdentifier();\n  frescoDrawable.setImageId(imageId);\n  frescoDrawable.getImageListener().onSubmit(imageId,imageRequest,callerContext);\n  CloseableReference<CloseableImage> cachedImage=mImagePipeline.getCachedImage(imageRequest);\n  try {\n    if (CloseableReference.isValid(cachedImage)) {\n      frescoDrawable.setImageOrigin(ImageOrigin.MEMORY_BITMAP_SHORTCUT);\n      setActualImage(frescoDrawable,imageRequest,cachedImage,true);\n      return true;\n    }\n  }\n  finally {\n    CloseableReference.closeSafely(cachedImage);\n  }\n  frescoDrawable.setProgressDrawable(mHierarcher.buildProgressDrawable(imageRequest.resources,imageRequest.imageOptions));\n  Drawable placeholder=mHierarcher.buildPlaceholderDrawable(imageRequest.resources,imageRequest.imageOptions);\n  frescoDrawable.setPlaceholderDrawable(placeholder);\n  frescoDrawable.setImageDrawable(null);\n  frescoDrawable.getImageListener().onPlaceholderSet(imageId,imageRequest,placeholder);\n  mLightweightBackgroundThreadExecutor.execute(new Runnable(){\n    @Override public void run(){\n      if (imageId != frescoDrawable.getImageId()) {\n        return;\n      }\n      DataSource<CloseableReference<CloseableImage>> dataSource;\n      if (imageRequest.imageRequest == null) {\n        dataSource=DataSources.immediateFailedDataSource(NO_REQUEST_EXCEPTION);\n      }\n else {\n        dataSource=mImagePipeline.fetchDecodedImage(imageRequest,callerContext,frescoDrawable.getImageOriginListener(),imageId);\n      }\n      frescoDrawable.setDataSource(dataSource);\n      dataSource.subscribe(frescoDrawable,mUiThreadExecutor);\n    }\n  }\n);\n  frescoDrawable.setFetchSubmitted(true);\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 290,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 51
      },
      "nodeContext" : "frescoDrawable.setDrawableDataSubscriber(this);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.facebook.fresco.vito.core.FrescoController2Impl"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 51,
    "startColumnNumber" : 54,
    "endLineNumber" : 51,
    "endColumnNumber" : 58
  }, {
    "charLength" : 4,
    "startLineNumber" : 61,
    "startColumnNumber" : 45,
    "endLineNumber" : 61,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}