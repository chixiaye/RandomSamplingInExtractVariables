{
  "id" : 177,
  "expression" : "doc instanceof HTMLDocument",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/cc/arduino/contributions/packages/ui/ContributedPlatformTableCell.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "doc instanceof HTMLDocument",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 195,
      "startColumnNumber" : 8,
      "endLineNumber" : 195,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (doc instanceof HTMLDocument) {\n  HTMLDocument html=(HTMLDocument)doc;\n  StyleSheet stylesheet=html.getStyleSheet();\n  stylesheet.addRule(\"body { margin: 0; padding: 0;\" + \"font-family: Verdana, Geneva, Arial, Helvetica, sans-serif;\" + \"font-size: 100%;\"+ \"font-size: 0.95em; }\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1262,
        "startLineNumber" : 184,
        "startColumnNumber" : 53,
        "endLineNumber" : 217,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (panel.getComponentCount() > 0) {\n    panel.remove(0);\n  }\n  JTextPane description=new JTextPane();\n  description.setInheritsPopupMenu(true);\n  Insets margin=description.getMargin();\n  margin.bottom=0;\n  description.setMargin(margin);\n  description.setContentType(\"text/html\");\n  Document doc=description.getDocument();\n  if (doc instanceof HTMLDocument) {\n    HTMLDocument html=(HTMLDocument)doc;\n    StyleSheet stylesheet=html.getStyleSheet();\n    stylesheet.addRule(\"body { margin: 0; padding: 0;\" + \"font-family: Verdana, Geneva, Arial, Helvetica, sans-serif;\" + \"font-size: 100%;\"+ \"font-size: 0.95em; }\");\n  }\n  description.setOpaque(false);\n  description.setBorder(new EmptyBorder(4,7,7,7));\n  description.setHighlighter(null);\n  description.setEditable(false);\n  description.addHyperlinkListener(new HyperlinkListener(){\n    @Override public void hyperlinkUpdate(    HyperlinkEvent e){\n      if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {\n        Base.openURL(e.getDescription());\n      }\n    }\n  }\n);\n  description.addKeyListener(new DelegatingKeyListener(parentTable));\n  panel.add(description,0);\n  return description;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1313,
        "startLineNumber" : 184,
        "startColumnNumber" : 2,
        "endLineNumber" : 217,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private JTextPane makeNewDescription(JPanel panel){\n  if (panel.getComponentCount() > 0) {\n    panel.remove(0);\n  }\n  JTextPane description=new JTextPane();\n  description.setInheritsPopupMenu(true);\n  Insets margin=description.getMargin();\n  margin.bottom=0;\n  description.setMargin(margin);\n  description.setContentType(\"text/html\");\n  Document doc=description.getDocument();\n  if (doc instanceof HTMLDocument) {\n    HTMLDocument html=(HTMLDocument)doc;\n    StyleSheet stylesheet=html.getStyleSheet();\n    stylesheet.addRule(\"body { margin: 0; padding: 0;\" + \"font-family: Verdana, Geneva, Arial, Helvetica, sans-serif;\" + \"font-size: 100%;\"+ \"font-size: 0.95em; }\");\n  }\n  description.setOpaque(false);\n  description.setBorder(new EmptyBorder(4,7,7,7));\n  description.setHighlighter(null);\n  description.setEditable(false);\n  description.addHyperlinkListener(new HyperlinkListener(){\n    @Override public void hyperlinkUpdate(    HyperlinkEvent e){\n      if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {\n        Base.openURL(e.getDescription());\n      }\n    }\n  }\n);\n  description.addKeyListener(new DelegatingKeyListener(parentTable));\n  panel.add(description,0);\n  return description;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (doc instanceof HTMLDocument) {\n  HTMLDocument html=(HTMLDocument)doc;\n  StyleSheet stylesheet=html.getStyleSheet();\n  stylesheet.addRule(\"body { margin: 0; padding: 0;\" + \"font-family: Verdana, Geneva, Arial, Helvetica, sans-serif;\" + \"font-size: 100%;\"+ \"font-size: 0.95em; }\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 195,
    "startColumnNumber" : 8,
    "endLineNumber" : 195,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}