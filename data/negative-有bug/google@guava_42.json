{
  "id" : 42,
  "expression" : "ImmutableBiMap.of(\"one\",1).inverse()",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/collect/ImmutableBiMapTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ImmutableBiMap.of(\"one\",1).inverse()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 342,
      "startColumnNumber" : 22,
      "endLineNumber" : 342,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 342,
        "startColumnNumber" : 6,
        "endLineNumber" : 342,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertMapEquals(ImmutableBiMap.of(\"one\",1).inverse(),1,\"one\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 342,
        "startColumnNumber" : 6,
        "endLineNumber" : 342,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertMapEquals(ImmutableBiMap.of(\"one\",1).inverse(),1,\"one\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4292,
        "startLineNumber" : 340,
        "startColumnNumber" : 25,
        "endLineNumber" : 529,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertMapEquals(ImmutableBiMap.of(\"one\",1),\"one\",1);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1).inverse(),1,\"one\");\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2),\"one\",1,\"two\",2);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2).inverse(),1,\"one\",2,\"two\");\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3),\"one\",1,\"two\",2,\"three\",3);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3).inverse(),1,\"one\",2,\"two\",3,\"three\");\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4),\"one\",1,\"two\",2,\"three\",3,\"four\",4);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4).inverse(),1,\"one\",2,\"two\",3,\"three\",4,\"four\");\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5),\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5).inverse(),1,\"one\",2,\"two\",3,\"three\",4,\"four\",5,\"five\");\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6),\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7),\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7,\"eight\",8),\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7,\"eight\",8);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7,\"eight\",8,\"nine\",9),\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7,\"eight\",8,\"nine\",9);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7,\"eight\",8,\"nine\",9,\"ten\",10),\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7,\"eight\",8,\"nine\",9,\"ten\",10);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 381,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4313,
        "startLineNumber" : 340,
        "startColumnNumber" : 4,
        "endLineNumber" : 529,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testOf(){\n  assertMapEquals(ImmutableBiMap.of(\"one\",1),\"one\",1);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1).inverse(),1,\"one\");\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2),\"one\",1,\"two\",2);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2).inverse(),1,\"one\",2,\"two\");\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3),\"one\",1,\"two\",2,\"three\",3);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3).inverse(),1,\"one\",2,\"two\",3,\"three\");\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4),\"one\",1,\"two\",2,\"three\",3,\"four\",4);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4).inverse(),1,\"one\",2,\"two\",3,\"three\",4,\"four\");\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5),\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5).inverse(),1,\"one\",2,\"two\",3,\"three\",4,\"four\",5,\"five\");\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6),\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7),\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7,\"eight\",8),\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7,\"eight\",8);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7,\"eight\",8,\"nine\",9),\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7,\"eight\",8,\"nine\",9);\n  assertMapEquals(ImmutableBiMap.of(\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7,\"eight\",8,\"nine\",9,\"ten\",10),\"one\",1,\"two\",2,\"three\",3,\"four\",4,\"five\",5,\"six\",6,\"seven\",7,\"eight\",8,\"nine\",9,\"ten\",10);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 385,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 342,
        "startColumnNumber" : 6,
        "endLineNumber" : 342,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertMapEquals(ImmutableBiMap.of(\"one\",1).inverse(),1,\"one\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "com.google.common.collect.ImmutableBiMap<java.lang.Integer,java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 342,
    "startColumnNumber" : 22,
    "endLineNumber" : 342,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}