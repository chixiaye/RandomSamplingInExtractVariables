{
  "id" : 132,
  "expression" : "timerTimeMS * 2",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/zxingorg/src/test/java/com/google/zxing/web/DoSTrackerTestCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "timerTimeMS * 2",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 58,
      "startColumnNumber" : 17,
      "endLineNumber" : 58,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Thread.sleep(timerTimeMS * 2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Thread.sleep(timerTimeMS * 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1139,
        "startLineNumber" : 30,
        "startColumnNumber" : 41,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Timer timer=new Timer();\n  long timerTimeMS=500;\n  int maxAccessPerTime=2;\n  DoSTracker tracker=new DoSTracker(timer,\"test\",maxAccessPerTime,timerTimeMS,3,null);\n  assertFalse(tracker.isBanned(\"A\"));\n  assertFalse(tracker.isBanned(\"A\"));\n  assertTrue(tracker.isBanned(\"A\"));\n  assertFalse(tracker.isBanned(\"B\"));\n  assertFalse(tracker.isBanned(\"C\"));\n  assertFalse(tracker.isBanned(\"D\"));\n  assertFalse(tracker.isBanned(\"A\"));\n  assertFalse(tracker.isBanned(\"A\"));\n  assertTrue(tracker.isBanned(\"A\"));\n  Thread.sleep(timerTimeMS * 3);\n  assertFalse(tracker.isBanned(\"A\"));\n  for (int i=0; i < maxAccessPerTime * 5; i++) {\n    tracker.isBanned(\"A\");\n  }\n  Thread.sleep(timerTimeMS * 2);\n  assertTrue(tracker.isBanned(\"A\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1187,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDoS() throws Exception {\n  Timer timer=new Timer();\n  long timerTimeMS=500;\n  int maxAccessPerTime=2;\n  DoSTracker tracker=new DoSTracker(timer,\"test\",maxAccessPerTime,timerTimeMS,3,null);\n  assertFalse(tracker.isBanned(\"A\"));\n  assertFalse(tracker.isBanned(\"A\"));\n  assertTrue(tracker.isBanned(\"A\"));\n  assertFalse(tracker.isBanned(\"B\"));\n  assertFalse(tracker.isBanned(\"C\"));\n  assertFalse(tracker.isBanned(\"D\"));\n  assertFalse(tracker.isBanned(\"A\"));\n  assertFalse(tracker.isBanned(\"A\"));\n  assertTrue(tracker.isBanned(\"A\"));\n  Thread.sleep(timerTimeMS * 3);\n  assertFalse(tracker.isBanned(\"A\"));\n  for (int i=0; i < maxAccessPerTime * 5; i++) {\n    tracker.isBanned(\"A\");\n  }\n  Thread.sleep(timerTimeMS * 2);\n  assertTrue(tracker.isBanned(\"A\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Thread.sleep(timerTimeMS * 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 58,
    "startColumnNumber" : 17,
    "endLineNumber" : 58,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}