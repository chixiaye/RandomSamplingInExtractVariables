{
  "id" : 293,
  "expression" : "connectionFactory",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfigurationTests.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "connectionFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 81,
      "startColumnNumber" : 16,
      "endLineNumber" : 81,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 81,
        "startColumnNumber" : 16,
        "endLineNumber" : 81,
        "endColumnNumber" : 47
      },
      "nodeContext" : "connectionFactory.getUserName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 81,
        "startColumnNumber" : 5,
        "endLineNumber" : 81,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(connectionFactory.getUserName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 81,
        "startColumnNumber" : 5,
        "endLineNumber" : 82,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 81,
        "startColumnNumber" : 5,
        "endLineNumber" : 82,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 74,
        "startColumnNumber" : 22,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 74,
        "startColumnNumber" : 9,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(context) -> {\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 121,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 81,
        "startColumnNumber" : 5,
        "endLineNumber" : 81,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(connectionFactory.getUserName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "connectionFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 83,
      "startColumnNumber" : 16,
      "endLineNumber" : 83,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 83,
        "startColumnNumber" : 16,
        "endLineNumber" : 83,
        "endColumnNumber" : 47
      },
      "nodeContext" : "connectionFactory.getPassword()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 83,
        "startColumnNumber" : 5,
        "endLineNumber" : 83,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(connectionFactory.getPassword())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 83,
        "startColumnNumber" : 5,
        "endLineNumber" : 84,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 83,
        "startColumnNumber" : 5,
        "endLineNumber" : 84,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 74,
        "startColumnNumber" : 22,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 74,
        "startColumnNumber" : 9,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(context) -> {\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 121,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 83,
        "startColumnNumber" : 5,
        "endLineNumber" : 83,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(connectionFactory.getPassword())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "connectionFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 85,
      "startColumnNumber" : 16,
      "endLineNumber" : 85,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 85,
        "startColumnNumber" : 16,
        "endLineNumber" : 85,
        "endColumnNumber" : 51
      },
      "nodeContext" : "connectionFactory.getCloseTimeout()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 85,
        "startColumnNumber" : 5,
        "endLineNumber" : 85,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertThat(connectionFactory.getCloseTimeout())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 85,
        "startColumnNumber" : 5,
        "endLineNumber" : 86,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 85,
        "startColumnNumber" : 5,
        "endLineNumber" : 86,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 74,
        "startColumnNumber" : 22,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 74,
        "startColumnNumber" : 9,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(context) -> {\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 121,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 85,
        "startColumnNumber" : 5,
        "endLineNumber" : 85,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertThat(connectionFactory.getCloseTimeout())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "connectionFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 87,
      "startColumnNumber" : 16,
      "endLineNumber" : 87,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 87,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 59
      },
      "nodeContext" : "connectionFactory.isNonBlockingRedelivery()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 87,
        "startColumnNumber" : 5,
        "endLineNumber" : 87,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertThat(connectionFactory.isNonBlockingRedelivery())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 87,
        "startColumnNumber" : 5,
        "endLineNumber" : 88,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 87,
        "startColumnNumber" : 5,
        "endLineNumber" : 88,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 74,
        "startColumnNumber" : 22,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 74,
        "startColumnNumber" : 9,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(context) -> {\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 121,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 87,
        "startColumnNumber" : 5,
        "endLineNumber" : 87,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertThat(connectionFactory.isNonBlockingRedelivery())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "connectionFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 89,
      "startColumnNumber" : 16,
      "endLineNumber" : 89,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 89,
        "startColumnNumber" : 16,
        "endLineNumber" : 89,
        "endColumnNumber" : 50
      },
      "nodeContext" : "connectionFactory.getSendTimeout()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 89,
        "startColumnNumber" : 5,
        "endLineNumber" : 89,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertThat(connectionFactory.getSendTimeout())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 89,
        "startColumnNumber" : 5,
        "endLineNumber" : 90,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 89,
        "startColumnNumber" : 5,
        "endLineNumber" : 90,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 74,
        "startColumnNumber" : 22,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 74,
        "startColumnNumber" : 9,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(context) -> {\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 121,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 89,
        "startColumnNumber" : 5,
        "endLineNumber" : 89,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertThat(connectionFactory.getSendTimeout())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "connectionFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 91,
      "startColumnNumber" : 16,
      "endLineNumber" : 91,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 91,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 54
      },
      "nodeContext" : "connectionFactory.isTrustAllPackages()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 91,
        "startColumnNumber" : 5,
        "endLineNumber" : 91,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(connectionFactory.isTrustAllPackages())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 91,
        "startColumnNumber" : 5,
        "endLineNumber" : 92,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 91,
        "startColumnNumber" : 5,
        "endLineNumber" : 92,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 74,
        "startColumnNumber" : 22,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 74,
        "startColumnNumber" : 9,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(context) -> {\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 121,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 91,
        "startColumnNumber" : 5,
        "endLineNumber" : 91,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(connectionFactory.isTrustAllPackages())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "connectionFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 93,
      "startColumnNumber" : 16,
      "endLineNumber" : 93,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 93,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 54
      },
      "nodeContext" : "connectionFactory.getTrustedPackages()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 93,
        "startColumnNumber" : 5,
        "endLineNumber" : 93,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(connectionFactory.getTrustedPackages())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 93,
        "startColumnNumber" : 5,
        "endLineNumber" : 94,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 93,
        "startColumnNumber" : 5,
        "endLineNumber" : 94,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 74,
        "startColumnNumber" : 22,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 74,
        "startColumnNumber" : 9,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(context) -> {\n  assertThat(context.getBeansOfType(ActiveMQConnectionFactory.class)).hasSize(1);\n  ActiveMQConnectionFactory connectionFactory=context.getBean(ActiveMQConnectionFactory.class);\n  ActiveMQConnectionFactory defaultFactory=new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n  assertThat(connectionFactory.getUserName()).isEqualTo(defaultFactory.getUserName());\n  assertThat(connectionFactory.getPassword()).isEqualTo(defaultFactory.getPassword());\n  assertThat(connectionFactory.getCloseTimeout()).isEqualTo(defaultFactory.getCloseTimeout());\n  assertThat(connectionFactory.isNonBlockingRedelivery()).isEqualTo(defaultFactory.isNonBlockingRedelivery());\n  assertThat(connectionFactory.getSendTimeout()).isEqualTo(defaultFactory.getSendTimeout());\n  assertThat(connectionFactory.isTrustAllPackages()).isEqualTo(defaultFactory.isTrustAllPackages());\n  assertThat(connectionFactory.getTrustedPackages()).containsExactly(defaultFactory.getTrustedPackages().toArray(new String[]{}));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 121,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 93,
        "startColumnNumber" : 5,
        "endLineNumber" : 93,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(connectionFactory.getTrustedPackages())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 81,
    "startColumnNumber" : 16,
    "endLineNumber" : 81,
    "endColumnNumber" : 33
  }, {
    "charLength" : 17,
    "startLineNumber" : 83,
    "startColumnNumber" : 16,
    "endLineNumber" : 83,
    "endColumnNumber" : 33
  }, {
    "charLength" : 17,
    "startLineNumber" : 85,
    "startColumnNumber" : 16,
    "endLineNumber" : 85,
    "endColumnNumber" : 33
  }, {
    "charLength" : 17,
    "startLineNumber" : 87,
    "startColumnNumber" : 16,
    "endLineNumber" : 87,
    "endColumnNumber" : 33
  }, {
    "charLength" : 17,
    "startLineNumber" : 89,
    "startColumnNumber" : 16,
    "endLineNumber" : 89,
    "endColumnNumber" : 33
  }, {
    "charLength" : 17,
    "startLineNumber" : 91,
    "startColumnNumber" : 16,
    "endLineNumber" : 91,
    "endColumnNumber" : 33
  }, {
    "charLength" : 17,
    "startLineNumber" : 93,
    "startColumnNumber" : 16,
    "endLineNumber" : 93,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  } ]
}