{
  "id" : 197,
  "expression" : "dataCenterInfo.getPublicAddress().getIpAddress()",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-contrib/eureka-karyon-admin/src/main/java/netflix/admin/eureka/EurekaRegistryItemTypeAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dataCenterInfo.getPublicAddress().getIpAddress()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 16,
      "startColumnNumber" : 37,
      "endLineNumber" : 16,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 16,
        "startColumnNumber" : 12,
        "endLineNumber" : 16,
        "endColumnNumber" : 86
      },
      "nodeContext" : "result.addProperty(\"ip\",dataCenterInfo.getPublicAddress().getIpAddress())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 16,
        "startColumnNumber" : 12,
        "endLineNumber" : 16,
        "endColumnNumber" : 87
      },
      "nodeContext" : "result.addProperty(\"ip\",dataCenterInfo.getPublicAddress().getIpAddress());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 13,
        "startColumnNumber" : 99,
        "endLineNumber" : 20,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final AwsDataCenterInfo dataCenterInfo=(AwsDataCenterInfo)instanceInfo.getDataCenterInfo();\n  result.addProperty(\"instId\",dataCenterInfo.getInstanceId());\n  result.addProperty(\"ip\",dataCenterInfo.getPublicAddress().getIpAddress());\n  result.addProperty(\"hostname\",dataCenterInfo.getPublicAddress().getHostName());\n  result.addProperty(\"zone\",dataCenterInfo.getZone());\n  result.addProperty(\"reg\",dataCenterInfo.getRegion());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 597,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (AwsDataCenterInfo.class.isAssignableFrom(instanceInfo.getDataCenterInfo().getClass())) {\n  final AwsDataCenterInfo dataCenterInfo=(AwsDataCenterInfo)instanceInfo.getDataCenterInfo();\n  result.addProperty(\"instId\",dataCenterInfo.getInstanceId());\n  result.addProperty(\"ip\",dataCenterInfo.getPublicAddress().getIpAddress());\n  result.addProperty(\"hostname\",dataCenterInfo.getPublicAddress().getHostName());\n  result.addProperty(\"zone\",dataCenterInfo.getZone());\n  result.addProperty(\"reg\",dataCenterInfo.getRegion());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 878,
        "startLineNumber" : 11,
        "startColumnNumber" : 110,
        "endLineNumber" : 25,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JsonObject result=new JsonObject();\n  if (AwsDataCenterInfo.class.isAssignableFrom(instanceInfo.getDataCenterInfo().getClass())) {\n    final AwsDataCenterInfo dataCenterInfo=(AwsDataCenterInfo)instanceInfo.getDataCenterInfo();\n    result.addProperty(\"instId\",dataCenterInfo.getInstanceId());\n    result.addProperty(\"ip\",dataCenterInfo.getPublicAddress().getIpAddress());\n    result.addProperty(\"hostname\",dataCenterInfo.getPublicAddress().getHostName());\n    result.addProperty(\"zone\",dataCenterInfo.getZone());\n    result.addProperty(\"reg\",dataCenterInfo.getRegion());\n  }\n  result.addProperty(\"appId\",instanceInfo.getApp());\n  result.addProperty(\"status\",instanceInfo.getStatus().name());\n  result.addProperty(\"vip\",instanceInfo.getVipAddress());\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 998,
        "startLineNumber" : 10,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public JsonElement serialize(InstanceInfo instanceInfo,Type typeOfSrc,JsonSerializationContext context){\n  JsonObject result=new JsonObject();\n  if (AwsDataCenterInfo.class.isAssignableFrom(instanceInfo.getDataCenterInfo().getClass())) {\n    final AwsDataCenterInfo dataCenterInfo=(AwsDataCenterInfo)instanceInfo.getDataCenterInfo();\n    result.addProperty(\"instId\",dataCenterInfo.getInstanceId());\n    result.addProperty(\"ip\",dataCenterInfo.getPublicAddress().getIpAddress());\n    result.addProperty(\"hostname\",dataCenterInfo.getPublicAddress().getHostName());\n    result.addProperty(\"zone\",dataCenterInfo.getZone());\n    result.addProperty(\"reg\",dataCenterInfo.getRegion());\n  }\n  result.addProperty(\"appId\",instanceInfo.getApp());\n  result.addProperty(\"status\",instanceInfo.getStatus().name());\n  result.addProperty(\"vip\",instanceInfo.getVipAddress());\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 16,
        "startColumnNumber" : 12,
        "endLineNumber" : 16,
        "endColumnNumber" : 87
      },
      "nodeContext" : "result.addProperty(\"ip\",dataCenterInfo.getPublicAddress().getIpAddress());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 16,
    "startColumnNumber" : 37,
    "endLineNumber" : 16,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}