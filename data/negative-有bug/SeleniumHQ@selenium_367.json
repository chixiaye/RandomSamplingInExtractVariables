{
  "id" : 367,
  "expression" : "\"/version\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/test/org/openqa/selenium/grid/server/NetworkOptionsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"/version\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 78,
      "startColumnNumber" : 42,
      "endLineNumber" : 78,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 78,
        "startColumnNumber" : 21,
        "endLineNumber" : 78,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new HttpRequest(GET,\"/version\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 54
      },
      "nodeContext" : "client.execute(new HttpRequest(GET,\"/version\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "client.execute(new HttpRequest(GET,\"/version\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config config=new MapConfig(emptyMap());\n  Tracer tracer=DefaultTestTracer.createTracer();\n  HttpClient.Factory clientFactory=new NetworkOptions(config).getHttpClientFactory(tracer);\n  Server<?> server=new JreServer(new BaseServerOptions(config),req -> new HttpResponse()).start();\n  HttpClient client=clientFactory.createClient(server.getUrl());\n  client.execute(new HttpRequest(GET,\"/version\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Config config=new MapConfig(emptyMap());\n  Tracer tracer=DefaultTestTracer.createTracer();\n  HttpClient.Factory clientFactory=new NetworkOptions(config).getHttpClientFactory(tracer);\n  Server<?> server=new JreServer(new BaseServerOptions(config),req -> new HttpResponse()).start();\n  HttpClient client=clientFactory.createClient(server.getUrl());\n  client.execute(new HttpRequest(GET,\"/version\"));\n}\n  finally {\n  rootLogger.removeHandler(handler);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 82,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1461,
        "startLineNumber" : 52,
        "startColumnNumber" : 40,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Logger rootLogger=LogManager.getLogManager().getLogger(\"\");\n  CapturingHandler handler=new CapturingHandler(\"io.grpc\");\n  rootLogger.addHandler(handler);\n  try {\n    Config config=new MapConfig(emptyMap());\n    Tracer tracer=DefaultTestTracer.createTracer();\n    HttpClient.Factory clientFactory=new NetworkOptions(config).getHttpClientFactory(tracer);\n    Server<?> server=new JreServer(new BaseServerOptions(config),req -> new HttpResponse()).start();\n    HttpClient client=clientFactory.createClient(server.getUrl());\n    client.execute(new HttpRequest(GET,\"/version\"));\n  }\n  finally {\n    rootLogger.removeHandler(handler);\n  }\n  List<String> messages=handler.getMessages(Level.SEVERE);\n  assertThat(messages).isEmpty();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1745,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * An initial version of our wrapper around OpenTracing caused exceptions to be thrown when spans were closed prematurely and out of order. This test was written to both demonstrate that problem and to resolve it.\n */\n@Test public void triggerFailureInTracing(){\n  Logger rootLogger=LogManager.getLogManager().getLogger(\"\");\n  CapturingHandler handler=new CapturingHandler(\"io.grpc\");\n  rootLogger.addHandler(handler);\n  try {\n    Config config=new MapConfig(emptyMap());\n    Tracer tracer=DefaultTestTracer.createTracer();\n    HttpClient.Factory clientFactory=new NetworkOptions(config).getHttpClientFactory(tracer);\n    Server<?> server=new JreServer(new BaseServerOptions(config),req -> new HttpResponse()).start();\n    HttpClient client=clientFactory.createClient(server.getUrl());\n    client.execute(new HttpRequest(GET,\"/version\"));\n  }\n  finally {\n    rootLogger.removeHandler(handler);\n  }\n  List<String> messages=handler.getMessages(Level.SEVERE);\n  assertThat(messages).isEmpty();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "client.execute(new HttpRequest(GET,\"/version\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 78,
    "startColumnNumber" : 42,
    "endLineNumber" : 78,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}