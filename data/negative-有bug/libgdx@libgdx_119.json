{
  "id" : 119,
  "expression" : "spotLights[i].color.g",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "spotLights[i].color.g",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 869,
      "startColumnNumber" : 5,
      "endLineNumber" : 869,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 869,
        "startColumnNumber" : 5,
        "endLineNumber" : 869,
        "endColumnNumber" : 52
      },
      "nodeContext" : "spotLights[i].color.g * spotLights[i].intensity",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 868,
        "startColumnNumber" : 4,
        "endLineNumber" : 869,
        "endColumnNumber" : 102
      },
      "nodeContext" : "program.setUniformf(idx + spotLightsColorOffset,spotLights[i].color.r * spotLights[i].intensity,spotLights[i].color.g * spotLights[i].intensity,spotLights[i].color.b * spotLights[i].intensity)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 868,
        "startColumnNumber" : 4,
        "endLineNumber" : 869,
        "endColumnNumber" : 103
      },
      "nodeContext" : "program.setUniformf(idx + spotLightsColorOffset,spotLights[i].color.r * spotLights[i].intensity,spotLights[i].color.g * spotLights[i].intensity,spotLights[i].color.b * spotLights[i].intensity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 858,
        "startColumnNumber" : 47,
        "endLineNumber" : 877,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (spots == null || i >= spots.size) {\n    if (lightsSet && spotLights[i].intensity == 0f)     continue;\n    spotLights[i].intensity=0f;\n  }\n else   if (lightsSet && spotLights[i].equals(spots.get(i)))   continue;\n else   spotLights[i].set(spots.get(i));\n  int idx=spotLightsLoc + i * spotLightsSize;\n  program.setUniformf(idx + spotLightsColorOffset,spotLights[i].color.r * spotLights[i].intensity,spotLights[i].color.g * spotLights[i].intensity,spotLights[i].color.b * spotLights[i].intensity);\n  program.setUniformf(idx + spotLightsPositionOffset,spotLights[i].position);\n  program.setUniformf(idx + spotLightsDirectionOffset,spotLights[i].direction);\n  program.setUniformf(idx + spotLightsCutoffAngleOffset,spotLights[i].cutoffAngle);\n  program.setUniformf(idx + spotLightsExponentOffset,spotLights[i].exponent);\n  if (spotLightsIntensityOffset >= 0)   program.setUniformf(idx + spotLightsIntensityOffset,spotLights[i].intensity);\n  if (spotLightsSize <= 0)   break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 858,
        "startColumnNumber" : 3,
        "endLineNumber" : 877,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int i=0; i < spotLights.length; i++) {\n  if (spots == null || i >= spots.size) {\n    if (lightsSet && spotLights[i].intensity == 0f)     continue;\n    spotLights[i].intensity=0f;\n  }\n else   if (lightsSet && spotLights[i].equals(spots.get(i)))   continue;\n else   spotLights[i].set(spots.get(i));\n  int idx=spotLightsLoc + i * spotLightsSize;\n  program.setUniformf(idx + spotLightsColorOffset,spotLights[i].color.r * spotLights[i].intensity,spotLights[i].color.g * spotLights[i].intensity,spotLights[i].color.b * spotLights[i].intensity);\n  program.setUniformf(idx + spotLightsPositionOffset,spotLights[i].position);\n  program.setUniformf(idx + spotLightsDirectionOffset,spotLights[i].direction);\n  program.setUniformf(idx + spotLightsCutoffAngleOffset,spotLights[i].cutoffAngle);\n  program.setUniformf(idx + spotLightsExponentOffset,spotLights[i].exponent);\n  if (spotLightsIntensityOffset >= 0)   program.setUniformf(idx + spotLightsIntensityOffset,spotLights[i].intensity);\n  if (spotLightsSize <= 0)   break;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 191,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1097,
        "startLineNumber" : 857,
        "startColumnNumber" : 26,
        "endLineNumber" : 878,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < spotLights.length; i++) {\n    if (spots == null || i >= spots.size) {\n      if (lightsSet && spotLights[i].intensity == 0f)       continue;\n      spotLights[i].intensity=0f;\n    }\n else     if (lightsSet && spotLights[i].equals(spots.get(i)))     continue;\n else     spotLights[i].set(spots.get(i));\n    int idx=spotLightsLoc + i * spotLightsSize;\n    program.setUniformf(idx + spotLightsColorOffset,spotLights[i].color.r * spotLights[i].intensity,spotLights[i].color.g * spotLights[i].intensity,spotLights[i].color.b * spotLights[i].intensity);\n    program.setUniformf(idx + spotLightsPositionOffset,spotLights[i].position);\n    program.setUniformf(idx + spotLightsDirectionOffset,spotLights[i].direction);\n    program.setUniformf(idx + spotLightsCutoffAngleOffset,spotLights[i].cutoffAngle);\n    program.setUniformf(idx + spotLightsExponentOffset,spotLights[i].exponent);\n    if (spotLightsIntensityOffset >= 0)     program.setUniformf(idx + spotLightsIntensityOffset,spotLights[i].intensity);\n    if (spotLightsSize <= 0)     break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 192,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 857,
        "startColumnNumber" : 2,
        "endLineNumber" : 878,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (spotLightsLoc >= 0) {\n  for (int i=0; i < spotLights.length; i++) {\n    if (spots == null || i >= spots.size) {\n      if (lightsSet && spotLights[i].intensity == 0f)       continue;\n      spotLights[i].intensity=0f;\n    }\n else     if (lightsSet && spotLights[i].equals(spots.get(i)))     continue;\n else     spotLights[i].set(spots.get(i));\n    int idx=spotLightsLoc + i * spotLightsSize;\n    program.setUniformf(idx + spotLightsColorOffset,spotLights[i].color.r * spotLights[i].intensity,spotLights[i].color.g * spotLights[i].intensity,spotLights[i].color.b * spotLights[i].intensity);\n    program.setUniformf(idx + spotLightsPositionOffset,spotLights[i].position);\n    program.setUniformf(idx + spotLightsDirectionOffset,spotLights[i].direction);\n    program.setUniformf(idx + spotLightsCutoffAngleOffset,spotLights[i].cutoffAngle);\n    program.setUniformf(idx + spotLightsExponentOffset,spotLights[i].exponent);\n    if (spotLightsIntensityOffset >= 0)     program.setUniformf(idx + spotLightsIntensityOffset,spotLights[i].intensity);\n    if (spotLightsSize <= 0)     break;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 196,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4011,
        "startLineNumber" : 808,
        "startColumnNumber" : 86,
        "endLineNumber" : 891,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final Environment lights=renderable.environment;\n  final DirectionalLightsAttribute dla=attributes.get(DirectionalLightsAttribute.class,DirectionalLightsAttribute.Type);\n  final Array<DirectionalLight> dirs=dla == null ? null : dla.lights;\n  final PointLightsAttribute pla=attributes.get(PointLightsAttribute.class,PointLightsAttribute.Type);\n  final Array<PointLight> points=pla == null ? null : pla.lights;\n  final SpotLightsAttribute sla=attributes.get(SpotLightsAttribute.class,SpotLightsAttribute.Type);\n  final Array<SpotLight> spots=sla == null ? null : sla.lights;\n  if (dirLightsLoc >= 0) {\n    for (int i=0; i < directionalLights.length; i++) {\n      if (dirs == null || i >= dirs.size) {\n        if (lightsSet && directionalLights[i].color.r == 0f && directionalLights[i].color.g == 0f && directionalLights[i].color.b == 0f)         continue;\n        directionalLights[i].color.set(0,0,0,1);\n      }\n else       if (lightsSet && directionalLights[i].equals(dirs.get(i)))       continue;\n else       directionalLights[i].set(dirs.get(i));\n      int idx=dirLightsLoc + i * dirLightsSize;\n      program.setUniformf(idx + dirLightsColorOffset,directionalLights[i].color.r,directionalLights[i].color.g,directionalLights[i].color.b);\n      program.setUniformf(idx + dirLightsDirectionOffset,directionalLights[i].direction.x,directionalLights[i].direction.y,directionalLights[i].direction.z);\n      if (dirLightsSize <= 0)       break;\n    }\n  }\n  if (pointLightsLoc >= 0) {\n    for (int i=0; i < pointLights.length; i++) {\n      if (points == null || i >= points.size) {\n        if (lightsSet && pointLights[i].intensity == 0f)         continue;\n        pointLights[i].intensity=0f;\n      }\n else       if (lightsSet && pointLights[i].equals(points.get(i)))       continue;\n else       pointLights[i].set(points.get(i));\n      int idx=pointLightsLoc + i * pointLightsSize;\n      program.setUniformf(idx + pointLightsColorOffset,pointLights[i].color.r * pointLights[i].intensity,pointLights[i].color.g * pointLights[i].intensity,pointLights[i].color.b * pointLights[i].intensity);\n      program.setUniformf(idx + pointLightsPositionOffset,pointLights[i].position.x,pointLights[i].position.y,pointLights[i].position.z);\n      if (pointLightsIntensityOffset >= 0)       program.setUniformf(idx + pointLightsIntensityOffset,pointLights[i].intensity);\n      if (pointLightsSize <= 0)       break;\n    }\n  }\n  if (spotLightsLoc >= 0) {\n    for (int i=0; i < spotLights.length; i++) {\n      if (spots == null || i >= spots.size) {\n        if (lightsSet && spotLights[i].intensity == 0f)         continue;\n        spotLights[i].intensity=0f;\n      }\n else       if (lightsSet && spotLights[i].equals(spots.get(i)))       continue;\n else       spotLights[i].set(spots.get(i));\n      int idx=spotLightsLoc + i * spotLightsSize;\n      program.setUniformf(idx + spotLightsColorOffset,spotLights[i].color.r * spotLights[i].intensity,spotLights[i].color.g * spotLights[i].intensity,spotLights[i].color.b * spotLights[i].intensity);\n      program.setUniformf(idx + spotLightsPositionOffset,spotLights[i].position);\n      program.setUniformf(idx + spotLightsDirectionOffset,spotLights[i].direction);\n      program.setUniformf(idx + spotLightsCutoffAngleOffset,spotLights[i].cutoffAngle);\n      program.setUniformf(idx + spotLightsExponentOffset,spotLights[i].exponent);\n      if (spotLightsIntensityOffset >= 0)       program.setUniformf(idx + spotLightsIntensityOffset,spotLights[i].intensity);\n      if (spotLightsSize <= 0)       break;\n    }\n  }\n  if (attributes.has(ColorAttribute.Fog)) {\n    set(u_fogColor,((ColorAttribute)attributes.get(ColorAttribute.Fog)).color);\n  }\n  if (lights != null && lights.shadowMap != null) {\n    set(u_shadowMapProjViewTrans,lights.shadowMap.getProjViewTrans());\n    set(u_shadowTexture,lights.shadowMap.getDepthMap());\n    set(u_shadowPCFOffset,1.f / (2f * lights.shadowMap.getDepthMap().texture.getWidth()));\n  }\n  lightsSet=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 721,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4096,
        "startLineNumber" : 808,
        "startColumnNumber" : 1,
        "endLineNumber" : 891,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected void bindLights(final Renderable renderable,final Attributes attributes){\n  final Environment lights=renderable.environment;\n  final DirectionalLightsAttribute dla=attributes.get(DirectionalLightsAttribute.class,DirectionalLightsAttribute.Type);\n  final Array<DirectionalLight> dirs=dla == null ? null : dla.lights;\n  final PointLightsAttribute pla=attributes.get(PointLightsAttribute.class,PointLightsAttribute.Type);\n  final Array<PointLight> points=pla == null ? null : pla.lights;\n  final SpotLightsAttribute sla=attributes.get(SpotLightsAttribute.class,SpotLightsAttribute.Type);\n  final Array<SpotLight> spots=sla == null ? null : sla.lights;\n  if (dirLightsLoc >= 0) {\n    for (int i=0; i < directionalLights.length; i++) {\n      if (dirs == null || i >= dirs.size) {\n        if (lightsSet && directionalLights[i].color.r == 0f && directionalLights[i].color.g == 0f && directionalLights[i].color.b == 0f)         continue;\n        directionalLights[i].color.set(0,0,0,1);\n      }\n else       if (lightsSet && directionalLights[i].equals(dirs.get(i)))       continue;\n else       directionalLights[i].set(dirs.get(i));\n      int idx=dirLightsLoc + i * dirLightsSize;\n      program.setUniformf(idx + dirLightsColorOffset,directionalLights[i].color.r,directionalLights[i].color.g,directionalLights[i].color.b);\n      program.setUniformf(idx + dirLightsDirectionOffset,directionalLights[i].direction.x,directionalLights[i].direction.y,directionalLights[i].direction.z);\n      if (dirLightsSize <= 0)       break;\n    }\n  }\n  if (pointLightsLoc >= 0) {\n    for (int i=0; i < pointLights.length; i++) {\n      if (points == null || i >= points.size) {\n        if (lightsSet && pointLights[i].intensity == 0f)         continue;\n        pointLights[i].intensity=0f;\n      }\n else       if (lightsSet && pointLights[i].equals(points.get(i)))       continue;\n else       pointLights[i].set(points.get(i));\n      int idx=pointLightsLoc + i * pointLightsSize;\n      program.setUniformf(idx + pointLightsColorOffset,pointLights[i].color.r * pointLights[i].intensity,pointLights[i].color.g * pointLights[i].intensity,pointLights[i].color.b * pointLights[i].intensity);\n      program.setUniformf(idx + pointLightsPositionOffset,pointLights[i].position.x,pointLights[i].position.y,pointLights[i].position.z);\n      if (pointLightsIntensityOffset >= 0)       program.setUniformf(idx + pointLightsIntensityOffset,pointLights[i].intensity);\n      if (pointLightsSize <= 0)       break;\n    }\n  }\n  if (spotLightsLoc >= 0) {\n    for (int i=0; i < spotLights.length; i++) {\n      if (spots == null || i >= spots.size) {\n        if (lightsSet && spotLights[i].intensity == 0f)         continue;\n        spotLights[i].intensity=0f;\n      }\n else       if (lightsSet && spotLights[i].equals(spots.get(i)))       continue;\n else       spotLights[i].set(spots.get(i));\n      int idx=spotLightsLoc + i * spotLightsSize;\n      program.setUniformf(idx + spotLightsColorOffset,spotLights[i].color.r * spotLights[i].intensity,spotLights[i].color.g * spotLights[i].intensity,spotLights[i].color.b * spotLights[i].intensity);\n      program.setUniformf(idx + spotLightsPositionOffset,spotLights[i].position);\n      program.setUniformf(idx + spotLightsDirectionOffset,spotLights[i].direction);\n      program.setUniformf(idx + spotLightsCutoffAngleOffset,spotLights[i].cutoffAngle);\n      program.setUniformf(idx + spotLightsExponentOffset,spotLights[i].exponent);\n      if (spotLightsIntensityOffset >= 0)       program.setUniformf(idx + spotLightsIntensityOffset,spotLights[i].intensity);\n      if (spotLightsSize <= 0)       break;\n    }\n  }\n  if (attributes.has(ColorAttribute.Fog)) {\n    set(u_fogColor,((ColorAttribute)attributes.get(ColorAttribute.Fog)).color);\n  }\n  if (lights != null && lights.shadowMap != null) {\n    set(u_shadowMapProjViewTrans,lights.shadowMap.getProjViewTrans());\n    set(u_shadowTexture,lights.shadowMap.getDepthMap());\n    set(u_shadowPCFOffset,1.f / (2f * lights.shadowMap.getDepthMap().texture.getWidth()));\n  }\n  lightsSet=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 735,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 869,
        "startColumnNumber" : 5,
        "endLineNumber" : 869,
        "endColumnNumber" : 52
      },
      "nodeContext" : "spotLights[i].color.g * spotLights[i].intensity",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 869,
    "startColumnNumber" : 5,
    "endLineNumber" : 869,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}