{
  "id" : 29,
  "expression" : "span.remoteServiceName()",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-tests/src/main/java/zipkin2/storage/ITSpanStoreHeavy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "span.remoteServiceName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 91,
      "startColumnNumber" : 32,
      "endLineNumber" : 91,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 57
      },
      "nodeContext" : "builder.remoteServiceName(span.remoteServiceName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 65
      },
      "nodeContext" : "builder.remoteServiceName(span.remoteServiceName()).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertGetTracesReturnsCount(builder.remoteServiceName(span.remoteServiceName()).build(),traceCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertGetTracesReturnsCount(builder.remoteServiceName(span.remoteServiceName()).build(),traceCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 66,
        "startColumnNumber" : 80,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String testSuffix=testSuffix(testInfo);\n  Span span=spanBuilder(testSuffix).build();\n  Map.Entry<String,String> tag=span.tags().entrySet().iterator().next();\n  int traceCount=1000;\n  Span[] traces=new Span[traceCount];\n  traces[0]=span;\n  IntStream.range(1,traces.length).forEach(i -> traces[i]=spanBuilder(testSuffix).timestamp((TODAY + i) * 1000).duration(10L).build());\n  accept(traces);\n  assertGetTracesReturnsCount(requestBuilder().limit(traceCount).build(),traceCount);\n  QueryRequest.Builder builder=requestBuilder().limit(traceCount).serviceName(span.localServiceName());\n  assertGetTracesReturnsCount(builder.build(),traceCount);\n  assertGetTracesReturnsCount(builder.remoteServiceName(span.remoteServiceName()).build(),traceCount);\n  assertGetTracesReturnsCount(builder.spanName(span.name()).build(),traceCount);\n  assertGetTracesReturnsCount(builder.parseAnnotationQuery(tag.getKey() + \"=\" + tag.getValue()).build(),traceCount);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1350,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Formerly, a bug was present where cassandra didn't index more than bucket count traces per millisecond. This stores a lot of spans to ensure indexes work under high-traffic scenarios.\n */\n@Test protected void getTraces_manyTraces(TestInfo testInfo) throws Exception {\n  String testSuffix=testSuffix(testInfo);\n  Span span=spanBuilder(testSuffix).build();\n  Map.Entry<String,String> tag=span.tags().entrySet().iterator().next();\n  int traceCount=1000;\n  Span[] traces=new Span[traceCount];\n  traces[0]=span;\n  IntStream.range(1,traces.length).forEach(i -> traces[i]=spanBuilder(testSuffix).timestamp((TODAY + i) * 1000).duration(10L).build());\n  accept(traces);\n  assertGetTracesReturnsCount(requestBuilder().limit(traceCount).build(),traceCount);\n  QueryRequest.Builder builder=requestBuilder().limit(traceCount).serviceName(span.localServiceName());\n  assertGetTracesReturnsCount(builder.build(),traceCount);\n  assertGetTracesReturnsCount(builder.remoteServiceName(span.remoteServiceName()).build(),traceCount);\n  assertGetTracesReturnsCount(builder.spanName(span.name()).build(),traceCount);\n  assertGetTracesReturnsCount(builder.parseAnnotationQuery(tag.getKey() + \"=\" + tag.getValue()).build(),traceCount);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 65
      },
      "nodeContext" : "builder.remoteServiceName(span.remoteServiceName()).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 91,
    "startColumnNumber" : 32,
    "endLineNumber" : 91,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}