{
  "id" : 361,
  "expression" : "this.permissionGroups",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/server/pm/parser/VPackage.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.permissionGroups",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 198,
      "startColumnNumber" : 22,
      "endLineNumber" : 198,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 198,
        "startColumnNumber" : 22,
        "endLineNumber" : 198,
        "endColumnNumber" : 50
      },
      "nodeContext" : "this.permissionGroups.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 51
      },
      "nodeContext" : "dest.writeInt(this.permissionGroups.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 52
      },
      "nodeContext" : "dest.writeInt(this.permissionGroups.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4505,
        "startLineNumber" : 125,
        "startColumnNumber" : 54,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  dest.writeInt(this.activities.size());\n  for (  ActivityComponent component : activities) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      ActivityIntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeInt(this.receivers.size());\n  for (  ActivityComponent component : receivers) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      ActivityIntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeInt(this.providers.size());\n  for (  ProviderComponent component : providers) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      ProviderIntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeInt(this.services.size());\n  for (  ServiceComponent component : services) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      ServiceIntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeInt(this.instrumentation.size());\n  for (  InstrumentationComponent component : instrumentation) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      IntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeInt(this.permissions.size());\n  for (  PermissionComponent component : permissions) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      IntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeInt(this.permissionGroups.size());\n  for (  PermissionGroupComponent component : permissionGroups) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      IntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeStringList(this.requestedPermissions);\n  dest.writeStringList(this.protectedBroadcasts);\n  dest.writeParcelable(this.applicationInfo,flags);\n  dest.writeBundle(this.mAppMetaData);\n  dest.writeString(this.packageName);\n  dest.writeInt(this.mPreferredOrder);\n  dest.writeString(this.mVersionName);\n  dest.writeString(this.mSharedUserId);\n  dest.writeStringList(this.usesLibraries);\n  dest.writeInt(this.mVersionCode);\n  dest.writeInt(this.mSharedUserLabel);\n  dest.writeTypedList(this.configPreferences);\n  dest.writeTypedList(this.reqFeatures);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 625,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4569,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void writeToParcel(Parcel dest,int flags){\n  dest.writeInt(this.activities.size());\n  for (  ActivityComponent component : activities) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      ActivityIntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeInt(this.receivers.size());\n  for (  ActivityComponent component : receivers) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      ActivityIntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeInt(this.providers.size());\n  for (  ProviderComponent component : providers) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      ProviderIntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeInt(this.services.size());\n  for (  ServiceComponent component : services) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      ServiceIntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeInt(this.instrumentation.size());\n  for (  InstrumentationComponent component : instrumentation) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      IntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeInt(this.permissions.size());\n  for (  PermissionComponent component : permissions) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      IntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeInt(this.permissionGroups.size());\n  for (  PermissionGroupComponent component : permissionGroups) {\n    dest.writeParcelable(component.info,0);\n    dest.writeString(component.className);\n    dest.writeBundle(component.metaData);\n    dest.writeInt(component.intents != null ? component.intents.size() : 0);\n    if (component.intents != null) {\n      for (      IntentInfo info : component.intents) {\n        info.writeToParcel(dest,flags);\n      }\n    }\n  }\n  dest.writeStringList(this.requestedPermissions);\n  dest.writeStringList(this.protectedBroadcasts);\n  dest.writeParcelable(this.applicationInfo,flags);\n  dest.writeBundle(this.mAppMetaData);\n  dest.writeString(this.packageName);\n  dest.writeInt(this.mPreferredOrder);\n  dest.writeString(this.mVersionName);\n  dest.writeString(this.mSharedUserId);\n  dest.writeStringList(this.usesLibraries);\n  dest.writeInt(this.mVersionCode);\n  dest.writeInt(this.mSharedUserLabel);\n  dest.writeTypedList(this.configPreferences);\n  dest.writeTypedList(this.reqFeatures);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 638,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 52
      },
      "nodeContext" : "dest.writeInt(this.permissionGroups.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayList<com.lody.virtual.server.pm.parser.VPackage.PermissionGroupComponent>"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 198,
    "startColumnNumber" : 22,
    "endLineNumber" : 198,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}