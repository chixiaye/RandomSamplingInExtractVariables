{
  "id" : 297,
  "expression" : "(!downloadPath.isEmpty())",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/settings/NewPipeSettings.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(!downloadPath.isEmpty())",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 66,
      "startColumnNumber" : 38,
      "endLineNumber" : 66,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(downloadPath != null) && (!downloadPath.isEmpty())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((downloadPath != null) && (!downloadPath.isEmpty())) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 62,
        "startColumnNumber" : 66,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(context);\n  final String key=context.getString(keyID);\n  String downloadPath=prefs.getString(key,null);\n  if ((downloadPath != null) && (!downloadPath.isEmpty())) {\n    return;\n  }\n  SharedPreferences.Editor spEditor=prefs.edit();\n  spEditor.putString(key,getNewPipeChildFolderPathForDir(getDir(defaultDirectoryName)));\n  spEditor.apply();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 619,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void getDir(final Context context,final int keyID,final String defaultDirectoryName){\n  SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(context);\n  final String key=context.getString(keyID);\n  String downloadPath=prefs.getString(key,null);\n  if ((downloadPath != null) && (!downloadPath.isEmpty())) {\n    return;\n  }\n  SharedPreferences.Editor spEditor=prefs.edit();\n  spEditor.putString(key,getNewPipeChildFolderPathForDir(getDir(defaultDirectoryName)));\n  spEditor.apply();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(downloadPath != null) && (!downloadPath.isEmpty())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 66,
    "startColumnNumber" : 38,
    "endLineNumber" : 66,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}