{
  "id" : 436,
  "expression" : "\"rootcom.mysql.jdbc.Driver\"",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-setting/src/test/java/cn/hutool/setting/test/SettingTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"rootcom.mysql.jdbc.Driver\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 27,
      "startColumnNumber" : 22,
      "endLineNumber" : 27,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 27,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 27,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 612,
        "startLineNumber" : 18,
        "startColumnNumber" : 27,
        "endLineNumber" : 36,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Setting setting=new Setting(\"test.setting\",true);\n  String driver=setting.getByGroup(\"driver\",\"demo\");\n  Assert.assertEquals(\"com.mysql.jdbc.Driver\",driver);\n  String user=setting.getByGroup(\"user\",\"demo\");\n  Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user);\n  String user2=setting.getByGroup(\"user2\",\"demo\");\n  Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user2);\n  String value=setting.getStr(\"keyNotExist\",\"defaultTest\");\n  Assert.assertEquals(\"defaultTest\",value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 17,
        "startColumnNumber" : 1,
        "endLineNumber" : 36,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void settingTest(){\n  Setting setting=new Setting(\"test.setting\",true);\n  String driver=setting.getByGroup(\"driver\",\"demo\");\n  Assert.assertEquals(\"com.mysql.jdbc.Driver\",driver);\n  String user=setting.getByGroup(\"user\",\"demo\");\n  Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user);\n  String user2=setting.getByGroup(\"user2\",\"demo\");\n  Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user2);\n  String value=setting.getStr(\"keyNotExist\",\"defaultTest\");\n  Assert.assertEquals(\"defaultTest\",value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 27,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"rootcom.mysql.jdbc.Driver\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 31,
      "startColumnNumber" : 22,
      "endLineNumber" : 31,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 612,
        "startLineNumber" : 18,
        "startColumnNumber" : 27,
        "endLineNumber" : 36,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Setting setting=new Setting(\"test.setting\",true);\n  String driver=setting.getByGroup(\"driver\",\"demo\");\n  Assert.assertEquals(\"com.mysql.jdbc.Driver\",driver);\n  String user=setting.getByGroup(\"user\",\"demo\");\n  Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user);\n  String user2=setting.getByGroup(\"user2\",\"demo\");\n  Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user2);\n  String value=setting.getStr(\"keyNotExist\",\"defaultTest\");\n  Assert.assertEquals(\"defaultTest\",value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 17,
        "startColumnNumber" : 1,
        "endLineNumber" : 36,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void settingTest(){\n  Setting setting=new Setting(\"test.setting\",true);\n  String driver=setting.getByGroup(\"driver\",\"demo\");\n  Assert.assertEquals(\"com.mysql.jdbc.Driver\",driver);\n  String user=setting.getByGroup(\"user\",\"demo\");\n  Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user);\n  String user2=setting.getByGroup(\"user2\",\"demo\");\n  Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user2);\n  String value=setting.getStr(\"keyNotExist\",\"defaultTest\");\n  Assert.assertEquals(\"defaultTest\",value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Assert.assertEquals(\"rootcom.mysql.jdbc.Driver\",user2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 27,
    "startColumnNumber" : 22,
    "endLineNumber" : 27,
    "endColumnNumber" : 49
  }, {
    "charLength" : 27,
    "startLineNumber" : 31,
    "startColumnNumber" : 22,
    "endLineNumber" : 31,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}