{
  "id" : 396,
  "expression" : "this",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ArgumentResolverConfigurer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 42,
      "startColumnNumber" : 2,
      "endLineNumber" : 42,
      "endColumnNumber" : 6
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 22
      },
      "nodeContext" : "this.customResolvers",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 54
      },
      "nodeContext" : "this.customResolvers.addAll(Arrays.asList(resolver))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 55
      },
      "nodeContext" : "this.customResolvers.addAll(Arrays.asList(resolver));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 40,
        "startColumnNumber" : 74,
        "endLineNumber" : 43,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.notNull(resolver,\"'resolvers' must not be null\");\n  this.customResolvers.addAll(Arrays.asList(resolver));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 36,
        "startColumnNumber" : 1,
        "endLineNumber" : 43,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Configure resolvers for custom controller method arguments.\n * @param resolver the resolver(s) to add\n */\npublic void addCustomResolver(HandlerMethodArgumentResolver... resolver){\n  Assert.notNull(resolver,\"'resolvers' must not be null\");\n  this.customResolvers.addAll(Arrays.asList(resolver));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 26,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 55
      },
      "nodeContext" : "this.customResolvers.addAll(Arrays.asList(resolver));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 42,
    "startColumnNumber" : 2,
    "endLineNumber" : 42,
    "endColumnNumber" : 6
  } ],
  "layoutRelationDataList" : [ ]
}