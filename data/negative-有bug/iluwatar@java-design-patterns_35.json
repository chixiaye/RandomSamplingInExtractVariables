{
  "id" : 35,
  "expression" : "Action",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/mediator/src/test/java/com/iluwatar/mediator/PartyImplTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Action",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 28,
      "endLineNumber" : 56,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 56,
        "startColumnNumber" : 28,
        "endLineNumber" : 56,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Action.GOLD",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 40
      },
      "nodeContext" : "party.act(partyMember1,Action.GOLD)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 41
      },
      "nodeContext" : "party.act(partyMember1,Action.GOLD);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 45,
        "startColumnNumber" : 32,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final PartyMember partyMember1=mock(PartyMember.class);\n  final PartyMember partyMember2=mock(PartyMember.class);\n  final PartyImpl party=new PartyImpl();\n  party.addMember(partyMember1);\n  party.addMember(partyMember2);\n  verify(partyMember1).joinedParty(party);\n  verify(partyMember2).joinedParty(party);\n  party.act(partyMember1,Action.GOLD);\n  verifyZeroInteractions(partyMember1);\n  verify(partyMember2).partyAction(Action.GOLD);\n  verifyNoMoreInteractions(partyMember1,partyMember2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verify if a member is notified when it's joining a party. Generate an action and see if the other member gets it. Also check members don't get their own actions.\n */\n@Test public void testPartyAction(){\n  final PartyMember partyMember1=mock(PartyMember.class);\n  final PartyMember partyMember2=mock(PartyMember.class);\n  final PartyImpl party=new PartyImpl();\n  party.addMember(partyMember1);\n  party.addMember(partyMember2);\n  verify(partyMember1).joinedParty(party);\n  verify(partyMember2).joinedParty(party);\n  party.act(partyMember1,Action.GOLD);\n  verifyZeroInteractions(partyMember1);\n  verify(partyMember2).partyAction(Action.GOLD);\n  verifyNoMoreInteractions(partyMember1,partyMember2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 41
      },
      "nodeContext" : "party.act(partyMember1,Action.GOLD);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.mediator.Action"
  }, {
    "nodeContext" : "Action",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 58,
      "startColumnNumber" : 37,
      "endLineNumber" : 58,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 58,
        "startColumnNumber" : 37,
        "endLineNumber" : 58,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Action.GOLD",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 49
      },
      "nodeContext" : "verify(partyMember2).partyAction(Action.GOLD)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 50
      },
      "nodeContext" : "verify(partyMember2).partyAction(Action.GOLD);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 45,
        "startColumnNumber" : 32,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final PartyMember partyMember1=mock(PartyMember.class);\n  final PartyMember partyMember2=mock(PartyMember.class);\n  final PartyImpl party=new PartyImpl();\n  party.addMember(partyMember1);\n  party.addMember(partyMember2);\n  verify(partyMember1).joinedParty(party);\n  verify(partyMember2).joinedParty(party);\n  party.act(partyMember1,Action.GOLD);\n  verifyZeroInteractions(partyMember1);\n  verify(partyMember2).partyAction(Action.GOLD);\n  verifyNoMoreInteractions(partyMember1,partyMember2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verify if a member is notified when it's joining a party. Generate an action and see if the other member gets it. Also check members don't get their own actions.\n */\n@Test public void testPartyAction(){\n  final PartyMember partyMember1=mock(PartyMember.class);\n  final PartyMember partyMember2=mock(PartyMember.class);\n  final PartyImpl party=new PartyImpl();\n  party.addMember(partyMember1);\n  party.addMember(partyMember2);\n  verify(partyMember1).joinedParty(party);\n  verify(partyMember2).joinedParty(party);\n  party.act(partyMember1,Action.GOLD);\n  verifyZeroInteractions(partyMember1);\n  verify(partyMember2).partyAction(Action.GOLD);\n  verifyNoMoreInteractions(partyMember1,partyMember2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 50
      },
      "nodeContext" : "verify(partyMember2).partyAction(Action.GOLD);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.mediator.Action"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 28,
    "endLineNumber" : 56,
    "endColumnNumber" : 34
  }, {
    "charLength" : 6,
    "startLineNumber" : 58,
    "startColumnNumber" : 37,
    "endLineNumber" : 58,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}