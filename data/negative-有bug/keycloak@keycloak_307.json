{
  "id" : 307,
  "expression" : "\"test-user-altmail@localhost\"",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/x509/AbstractX509AuthenticationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"test-user-altmail@localhost\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 248,
      "startColumnNumber" : 50,
      "endLineNumber" : 248,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 248,
        "startColumnNumber" : 8,
        "endLineNumber" : 248,
        "endColumnNumber" : 80
      },
      "nodeContext" : "user.singleAttribute(\"alternative_email\",\"test-user-altmail@localhost\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 248,
        "startColumnNumber" : 8,
        "endLineNumber" : 248,
        "endColumnNumber" : 81
      },
      "nodeContext" : "user.singleAttribute(\"alternative_email\",\"test-user-altmail@localhost\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2305,
        "startLineNumber" : 208,
        "startColumnNumber" : 33,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  authMgmtResource=adminClient.realms().realm(REALM_NAME).flows();\n  AuthenticationFlowRepresentation browserFlow=copyBrowserFlow();\n  Assert.assertNotNull(browserFlow);\n  AuthenticationFlowRepresentation directGrantFlow=createDirectGrantFlow();\n  Assert.assertNotNull(directGrantFlow);\n  setBrowserFlow(browserFlow);\n  Assert.assertEquals(testRealm().toRepresentation().getBrowserFlow(),browserFlow.getAlias());\n  setDirectGrantFlow(directGrantFlow);\n  Assert.assertEquals(testRealm().toRepresentation().getDirectGrantFlow(),directGrantFlow.getAlias());\n  Assert.assertEquals(0,directGrantFlow.getAuthenticationExecutions().size());\n  directGrantExecution=addAssertExecution(directGrantFlow,ValidateX509CertificateUsernameFactory.PROVIDER_ID,REQUIRED);\n  Assert.assertNotNull(directGrantExecution);\n  directGrantFlow=authMgmtResource.getFlow(directGrantFlow.getId());\n  Assert.assertNotNull(directGrantFlow.getAuthenticationExecutions());\n  Assert.assertEquals(1,directGrantFlow.getAuthenticationExecutions().size());\n  browserExecution=addAssertExecution(browserFlow,X509ClientCertificateAuthenticatorFactory.PROVIDER_ID,ALTERNATIVE);\n  Assert.assertNotNull(browserExecution);\n  authMgmtResource.raisePriority(browserExecution.getId());\n  UserRepresentation user=findUser(\"test-user@localhost\");\n  userId=user.getId();\n  user.singleAttribute(\"x509_certificate_identity\",\"-\");\n  user.singleAttribute(\"alternative_email\",\"test-user-altmail@localhost\");\n  user.singleAttribute(\"upn\",\"test_upn_name@localhost\");\n  updateUser(user);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 179,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2346,
        "startLineNumber" : 207,
        "startColumnNumber" : 4,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Before public void configureFlows(){\n  authMgmtResource=adminClient.realms().realm(REALM_NAME).flows();\n  AuthenticationFlowRepresentation browserFlow=copyBrowserFlow();\n  Assert.assertNotNull(browserFlow);\n  AuthenticationFlowRepresentation directGrantFlow=createDirectGrantFlow();\n  Assert.assertNotNull(directGrantFlow);\n  setBrowserFlow(browserFlow);\n  Assert.assertEquals(testRealm().toRepresentation().getBrowserFlow(),browserFlow.getAlias());\n  setDirectGrantFlow(directGrantFlow);\n  Assert.assertEquals(testRealm().toRepresentation().getDirectGrantFlow(),directGrantFlow.getAlias());\n  Assert.assertEquals(0,directGrantFlow.getAuthenticationExecutions().size());\n  directGrantExecution=addAssertExecution(directGrantFlow,ValidateX509CertificateUsernameFactory.PROVIDER_ID,REQUIRED);\n  Assert.assertNotNull(directGrantExecution);\n  directGrantFlow=authMgmtResource.getFlow(directGrantFlow.getId());\n  Assert.assertNotNull(directGrantFlow.getAuthenticationExecutions());\n  Assert.assertEquals(1,directGrantFlow.getAuthenticationExecutions().size());\n  browserExecution=addAssertExecution(browserFlow,X509ClientCertificateAuthenticatorFactory.PROVIDER_ID,ALTERNATIVE);\n  Assert.assertNotNull(browserExecution);\n  authMgmtResource.raisePriority(browserExecution.getId());\n  UserRepresentation user=findUser(\"test-user@localhost\");\n  userId=user.getId();\n  user.singleAttribute(\"x509_certificate_identity\",\"-\");\n  user.singleAttribute(\"alternative_email\",\"test-user-altmail@localhost\");\n  user.singleAttribute(\"upn\",\"test_upn_name@localhost\");\n  updateUser(user);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 248,
        "startColumnNumber" : 8,
        "endLineNumber" : 248,
        "endColumnNumber" : 81
      },
      "nodeContext" : "user.singleAttribute(\"alternative_email\",\"test-user-altmail@localhost\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 248,
    "startColumnNumber" : 50,
    "endLineNumber" : 248,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}