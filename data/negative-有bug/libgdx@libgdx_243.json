{
  "id" : 243,
  "expression" : "windowsFile",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/extensions/gdx-setup/src/com/badlogic/gdx/setup/Executor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "windowsFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 32,
      "startColumnNumber" : 106,
      "endLineNumber" : 32,
      "endColumnNumber" : 117
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 32,
        "startColumnNumber" : 54,
        "endLineNumber" : 32,
        "endColumnNumber" : 128
      },
      "nodeContext" : "System.getProperty(\"os.name\").contains(\"Windows\") ? windowsFile : unixFile",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 32,
        "startColumnNumber" : 53,
        "endLineNumber" : 32,
        "endColumnNumber" : 129
      },
      "nodeContext" : "(System.getProperty(\"os.name\").contains(\"Windows\") ? windowsFile : unixFile)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 32,
        "startColumnNumber" : 16,
        "endLineNumber" : 32,
        "endColumnNumber" : 129
      },
      "nodeContext" : "workingDir.getAbsolutePath() + \"/\" + (System.getProperty(\"os.name\").contains(\"Windows\") ? windowsFile : unixFile)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 32,
        "startColumnNumber" : 9,
        "endLineNumber" : 32,
        "endColumnNumber" : 129
      },
      "nodeContext" : "exec=workingDir.getAbsolutePath() + \"/\" + (System.getProperty(\"os.name\").contains(\"Windows\") ? windowsFile : unixFile)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 130
      },
      "nodeContext" : "String exec=workingDir.getAbsolutePath() + \"/\" + (System.getProperty(\"os.name\").contains(\"Windows\") ? windowsFile : unixFile);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 31,
        "startColumnNumber" : 128,
        "endLineNumber" : 47,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String exec=workingDir.getAbsolutePath() + \"/\" + (System.getProperty(\"os.name\").contains(\"Windows\") ? windowsFile : unixFile);\n  String log=\"Executing '\" + exec + \" \"+ parameters+ \"'\";\n  for (int i=0; i < log.length(); i++) {\n    callback.character(log.charAt(i));\n  }\n  callback.character('\\n');\n  String[] params=parameters.split(\" \");\n  String[] commands=new String[params.length + 1];\n  commands[0]=exec;\n  for (int i=0; i < params.length; i++) {\n    commands[i + 1]=params[i];\n  }\n  return startProcess(commands,workingDir,callback);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 796,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 47,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Execute the Ant script file with the given parameters.\n * @return whether the Ant succeeded \n */\npublic static boolean execute(File workingDir,String windowsFile,String unixFile,String parameters,CharCallback callback){\n  String exec=workingDir.getAbsolutePath() + \"/\" + (System.getProperty(\"os.name\").contains(\"Windows\") ? windowsFile : unixFile);\n  String log=\"Executing '\" + exec + \" \"+ parameters+ \"'\";\n  for (int i=0; i < log.length(); i++) {\n    callback.character(log.charAt(i));\n  }\n  callback.character('\\n');\n  String[] params=parameters.split(\" \");\n  String[] commands=new String[params.length + 1];\n  commands[0]=exec;\n  for (int i=0; i < params.length; i++) {\n    commands[i + 1]=params[i];\n  }\n  return startProcess(commands,workingDir,callback);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 130
      },
      "nodeContext" : "String exec=workingDir.getAbsolutePath() + \"/\" + (System.getProperty(\"os.name\").contains(\"Windows\") ? windowsFile : unixFile);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 32,
    "startColumnNumber" : 106,
    "endLineNumber" : 32,
    "endColumnNumber" : 117
  } ],
  "layoutRelationDataList" : [ ]
}