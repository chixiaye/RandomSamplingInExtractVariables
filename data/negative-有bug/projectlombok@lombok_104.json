{
  "id" : 104,
  "expression" : "\"java -jar lombok.jar post-compile\"",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/bytecode/PostCompilerApp.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"java -jar lombok.jar post-compile\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 81,
      "startColumnNumber" : 54,
      "endLineNumber" : 81,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 81,
        "startColumnNumber" : 23,
        "endLineNumber" : 81,
        "endColumnNumber" : 90
      },
      "nodeContext" : "reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 91
      },
      "nodeContext" : "System.out.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 92
      },
      "nodeContext" : "System.out.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 80,
        "startColumnNumber" : 18,
        "endLineNumber" : 83,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  System.out.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 80,
        "startColumnNumber" : 3,
        "endLineNumber" : 83,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (args.help) {\n  System.out.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n  return 0;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  args=reader.make(raw.toArray(new String[0]));\n  if (args.help) {\n    System.out.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n    return 0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  args=reader.make(raw.toArray(new String[0]));\n  if (args.help) {\n    System.out.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n    return 0;\n  }\n}\n catch (InvalidCommandLineException e) {\n  System.err.println(e.getMessage());\n  System.err.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n  return 1;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1348,
        "startLineNumber" : 75,
        "startColumnNumber" : 64,
        "endLineNumber" : 113,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  CmdReader<CmdArgs> reader=CmdReader.of(CmdArgs.class);\n  CmdArgs args;\n  try {\n    args=reader.make(raw.toArray(new String[0]));\n    if (args.help) {\n      System.out.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n      return 0;\n    }\n  }\n catch (  InvalidCommandLineException e) {\n    System.err.println(e.getMessage());\n    System.err.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n    return 1;\n  }\n  int filesVisited=0, filesTouched=0;\n  for (  File file : cmdArgsToFiles(args.classFiles)) {\n    if (!file.exists() || !file.isFile()) {\n      System.out.printf(\"Cannot find file '%s'\\n\",file);\n      continue;\n    }\n    filesVisited++;\n    if (args.verbose)     System.out.println(\"Processing \" + file.getAbsolutePath());\n    byte[] original=readFile(file);\n    byte[] clone=original.clone();\n    byte[] transformed=PostCompiler.applyTransformations(clone,file.toString(),DiagnosticsReceiver.CONSOLE);\n    if (clone != transformed && !Arrays.equals(clone,transformed)) {\n      filesTouched++;\n      if (args.verbose)       System.out.println(\"Rewriting \" + file.getAbsolutePath());\n      writeFile(file,transformed);\n    }\n  }\n  if (args.verbose) {\n    System.out.printf(\"Total files visited: %d total files changed: %d\\n\",filesVisited,filesTouched);\n  }\n  return filesVisited == 0 ? 1 : 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1411,
        "startLineNumber" : 75,
        "startColumnNumber" : 1,
        "endLineNumber" : 113,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public int runApp(List<String> raw) throws Exception {\n  CmdReader<CmdArgs> reader=CmdReader.of(CmdArgs.class);\n  CmdArgs args;\n  try {\n    args=reader.make(raw.toArray(new String[0]));\n    if (args.help) {\n      System.out.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n      return 0;\n    }\n  }\n catch (  InvalidCommandLineException e) {\n    System.err.println(e.getMessage());\n    System.err.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n    return 1;\n  }\n  int filesVisited=0, filesTouched=0;\n  for (  File file : cmdArgsToFiles(args.classFiles)) {\n    if (!file.exists() || !file.isFile()) {\n      System.out.printf(\"Cannot find file '%s'\\n\",file);\n      continue;\n    }\n    filesVisited++;\n    if (args.verbose)     System.out.println(\"Processing \" + file.getAbsolutePath());\n    byte[] original=readFile(file);\n    byte[] clone=original.clone();\n    byte[] transformed=PostCompiler.applyTransformations(clone,file.toString(),DiagnosticsReceiver.CONSOLE);\n    if (clone != transformed && !Arrays.equals(clone,transformed)) {\n      filesTouched++;\n      if (args.verbose)       System.out.println(\"Rewriting \" + file.getAbsolutePath());\n      writeFile(file,transformed);\n    }\n  }\n  if (args.verbose) {\n    System.out.printf(\"Total files visited: %d total files changed: %d\\n\",filesVisited,filesTouched);\n  }\n  return filesVisited == 0 ? 1 : 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 243,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 92
      },
      "nodeContext" : "System.out.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"java -jar lombok.jar post-compile\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 86,
      "startColumnNumber" : 53,
      "endLineNumber" : 86,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 86,
        "startColumnNumber" : 22,
        "endLineNumber" : 86,
        "endColumnNumber" : 89
      },
      "nodeContext" : "reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 86,
        "startColumnNumber" : 3,
        "endLineNumber" : 86,
        "endColumnNumber" : 90
      },
      "nodeContext" : "System.err.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 86,
        "startColumnNumber" : 3,
        "endLineNumber" : 86,
        "endColumnNumber" : 91
      },
      "nodeContext" : "System.err.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 84,
        "startColumnNumber" : 42,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  System.err.println(e.getMessage());\n  System.err.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n  return 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "catch (InvalidCommandLineException e) {\n  System.err.println(e.getMessage());\n  System.err.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n  return 1;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  args=reader.make(raw.toArray(new String[0]));\n  if (args.help) {\n    System.out.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n    return 0;\n  }\n}\n catch (InvalidCommandLineException e) {\n  System.err.println(e.getMessage());\n  System.err.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n  return 1;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1348,
        "startLineNumber" : 75,
        "startColumnNumber" : 64,
        "endLineNumber" : 113,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  CmdReader<CmdArgs> reader=CmdReader.of(CmdArgs.class);\n  CmdArgs args;\n  try {\n    args=reader.make(raw.toArray(new String[0]));\n    if (args.help) {\n      System.out.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n      return 0;\n    }\n  }\n catch (  InvalidCommandLineException e) {\n    System.err.println(e.getMessage());\n    System.err.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n    return 1;\n  }\n  int filesVisited=0, filesTouched=0;\n  for (  File file : cmdArgsToFiles(args.classFiles)) {\n    if (!file.exists() || !file.isFile()) {\n      System.out.printf(\"Cannot find file '%s'\\n\",file);\n      continue;\n    }\n    filesVisited++;\n    if (args.verbose)     System.out.println(\"Processing \" + file.getAbsolutePath());\n    byte[] original=readFile(file);\n    byte[] clone=original.clone();\n    byte[] transformed=PostCompiler.applyTransformations(clone,file.toString(),DiagnosticsReceiver.CONSOLE);\n    if (clone != transformed && !Arrays.equals(clone,transformed)) {\n      filesTouched++;\n      if (args.verbose)       System.out.println(\"Rewriting \" + file.getAbsolutePath());\n      writeFile(file,transformed);\n    }\n  }\n  if (args.verbose) {\n    System.out.printf(\"Total files visited: %d total files changed: %d\\n\",filesVisited,filesTouched);\n  }\n  return filesVisited == 0 ? 1 : 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1411,
        "startLineNumber" : 75,
        "startColumnNumber" : 1,
        "endLineNumber" : 113,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public int runApp(List<String> raw) throws Exception {\n  CmdReader<CmdArgs> reader=CmdReader.of(CmdArgs.class);\n  CmdArgs args;\n  try {\n    args=reader.make(raw.toArray(new String[0]));\n    if (args.help) {\n      System.out.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n      return 0;\n    }\n  }\n catch (  InvalidCommandLineException e) {\n    System.err.println(e.getMessage());\n    System.err.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n    return 1;\n  }\n  int filesVisited=0, filesTouched=0;\n  for (  File file : cmdArgsToFiles(args.classFiles)) {\n    if (!file.exists() || !file.isFile()) {\n      System.out.printf(\"Cannot find file '%s'\\n\",file);\n      continue;\n    }\n    filesVisited++;\n    if (args.verbose)     System.out.println(\"Processing \" + file.getAbsolutePath());\n    byte[] original=readFile(file);\n    byte[] clone=original.clone();\n    byte[] transformed=PostCompiler.applyTransformations(clone,file.toString(),DiagnosticsReceiver.CONSOLE);\n    if (clone != transformed && !Arrays.equals(clone,transformed)) {\n      filesTouched++;\n      if (args.verbose)       System.out.println(\"Rewriting \" + file.getAbsolutePath());\n      writeFile(file,transformed);\n    }\n  }\n  if (args.verbose) {\n    System.out.printf(\"Total files visited: %d total files changed: %d\\n\",filesVisited,filesTouched);\n  }\n  return filesVisited == 0 ? 1 : 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 243,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 86,
        "startColumnNumber" : 3,
        "endLineNumber" : 86,
        "endColumnNumber" : 91
      },
      "nodeContext" : "System.err.println(reader.generateCommandLineHelp(\"java -jar lombok.jar post-compile\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 81,
    "startColumnNumber" : 54,
    "endLineNumber" : 81,
    "endColumnNumber" : 89
  }, {
    "charLength" : 35,
    "startLineNumber" : 86,
    "startColumnNumber" : 53,
    "endLineNumber" : 86,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}