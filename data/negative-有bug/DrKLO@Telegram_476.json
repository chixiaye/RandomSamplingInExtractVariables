{
  "id" : 476,
  "expression" : "PorterDuff",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Components/ThemePreviewDrawable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "PorterDuff",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 149,
      "startColumnNumber" : 91,
      "endLineNumber" : 149,
      "endColumnNumber" : 101
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 149,
        "startColumnNumber" : 91,
        "endLineNumber" : 149,
        "endColumnNumber" : 106
      },
      "nodeContext" : "PorterDuff.Mode",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 149,
        "startColumnNumber" : 91,
        "endLineNumber" : 149,
        "endColumnNumber" : 113
      },
      "nodeContext" : "PorterDuff.Mode.SRC_IN",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 149,
        "startColumnNumber" : 51,
        "endLineNumber" : 149,
        "endColumnNumber" : 114
      },
      "nodeContext" : "new PorterDuffColorFilter(patternColor,PorterDuff.Mode.SRC_IN)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 149,
        "startColumnNumber" : 20,
        "endLineNumber" : 149,
        "endColumnNumber" : 115
      },
      "nodeContext" : "backgroundPaint.setColorFilter(new PorterDuffColorFilter(patternColor,PorterDuff.Mode.SRC_IN))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 149,
        "startColumnNumber" : 20,
        "endLineNumber" : 149,
        "endColumnNumber" : 116
      },
      "nodeContext" : "backgroundPaint.setColorFilter(new PorterDuffColorFilter(patternColor,PorterDuff.Mode.SRC_IN));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 147,
        "startColumnNumber" : 43,
        "endLineNumber" : 161,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Paint backgroundPaint=new Paint(Paint.FILTER_BITMAP_FLAG);\n  backgroundPaint.setColorFilter(new PorterDuffColorFilter(patternColor,PorterDuff.Mode.SRC_IN));\n  backgroundPaint.setAlpha((int)(255 * themeDocument.accent.patternIntensity));\n  float scale=Math.max(560.0f / patternBitmap.getWidth(),678.0f / patternBitmap.getHeight());\n  int w=(int)(patternBitmap.getWidth() * scale);\n  int h=(int)(patternBitmap.getHeight() * scale);\n  int x=(560 - w) / 2;\n  int y=(678 - h) / 2;\n  canvas.save();\n  canvas.translate(x,y);\n  canvas.scale(scale,scale);\n  canvas.drawBitmap(patternBitmap,0,0,backgroundPaint);\n  canvas.restore();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 147,
        "startColumnNumber" : 16,
        "endLineNumber" : 161,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (patternBitmap != null) {\n  Paint backgroundPaint=new Paint(Paint.FILTER_BITMAP_FLAG);\n  backgroundPaint.setColorFilter(new PorterDuffColorFilter(patternColor,PorterDuff.Mode.SRC_IN));\n  backgroundPaint.setAlpha((int)(255 * themeDocument.accent.patternIntensity));\n  float scale=Math.max(560.0f / patternBitmap.getWidth(),678.0f / patternBitmap.getHeight());\n  int w=(int)(patternBitmap.getWidth() * scale);\n  int h=(int)(patternBitmap.getHeight() * scale);\n  int x=(560 - w) / 2;\n  int y=(678 - h) / 2;\n  canvas.save();\n  canvas.translate(x,y);\n  canvas.scale(scale,scale);\n  canvas.drawBitmap(patternBitmap,0,0,backgroundPaint);\n  canvas.restore();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 132,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2653,
        "startLineNumber" : 113,
        "startColumnNumber" : 33,
        "endLineNumber" : 162,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Bitmap patternBitmap;\n  if (\"application/x-tgwallpattern\".equals(themeDocument.mime_type)) {\n    patternBitmap=SvgHelper.getBitmap(pattern,560,678,false);\n  }\n else {\n    BitmapFactory.Options opts=new BitmapFactory.Options();\n    opts.inSampleSize=1;\n    opts.inJustDecodeBounds=true;\n    BitmapFactory.decodeFile(pattern.getAbsolutePath(),opts);\n    float photoW=opts.outWidth;\n    float photoH=opts.outHeight;\n    float scaleFactor;\n    int w_filter=560;\n    int h_filter=678;\n    if (w_filter >= h_filter && photoW > photoH) {\n      scaleFactor=Math.max(photoW / w_filter,photoH / h_filter);\n    }\n else {\n      scaleFactor=Math.min(photoW / w_filter,photoH / h_filter);\n    }\n    if (scaleFactor < 1.2f) {\n      scaleFactor=1;\n    }\n    opts.inJustDecodeBounds=false;\n    if (scaleFactor > 1.0f && (photoW > w_filter || photoH > h_filter)) {\n      int sample=1;\n      do {\n        sample*=2;\n      }\n while (sample * 2 < scaleFactor);\n      opts.inSampleSize=sample;\n    }\n else {\n      opts.inSampleSize=(int)scaleFactor;\n    }\n    patternBitmap=BitmapFactory.decodeFile(pattern.getAbsolutePath(),opts);\n  }\n  if (patternBitmap != null) {\n    Paint backgroundPaint=new Paint(Paint.FILTER_BITMAP_FLAG);\n    backgroundPaint.setColorFilter(new PorterDuffColorFilter(patternColor,PorterDuff.Mode.SRC_IN));\n    backgroundPaint.setAlpha((int)(255 * themeDocument.accent.patternIntensity));\n    float scale=Math.max(560.0f / patternBitmap.getWidth(),678.0f / patternBitmap.getHeight());\n    int w=(int)(patternBitmap.getWidth() * scale);\n    int h=(int)(patternBitmap.getHeight() * scale);\n    int x=(560 - w) / 2;\n    int y=(678 - h) / 2;\n    canvas.save();\n    canvas.translate(x,y);\n    canvas.scale(scale,scale);\n    canvas.drawBitmap(patternBitmap,0,0,backgroundPaint);\n    canvas.restore();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 321,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2674,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 162,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (pattern != null) {\n  Bitmap patternBitmap;\n  if (\"application/x-tgwallpattern\".equals(themeDocument.mime_type)) {\n    patternBitmap=SvgHelper.getBitmap(pattern,560,678,false);\n  }\n else {\n    BitmapFactory.Options opts=new BitmapFactory.Options();\n    opts.inSampleSize=1;\n    opts.inJustDecodeBounds=true;\n    BitmapFactory.decodeFile(pattern.getAbsolutePath(),opts);\n    float photoW=opts.outWidth;\n    float photoH=opts.outHeight;\n    float scaleFactor;\n    int w_filter=560;\n    int h_filter=678;\n    if (w_filter >= h_filter && photoW > photoH) {\n      scaleFactor=Math.max(photoW / w_filter,photoH / h_filter);\n    }\n else {\n      scaleFactor=Math.min(photoW / w_filter,photoH / h_filter);\n    }\n    if (scaleFactor < 1.2f) {\n      scaleFactor=1;\n    }\n    opts.inJustDecodeBounds=false;\n    if (scaleFactor > 1.0f && (photoW > w_filter || photoH > h_filter)) {\n      int sample=1;\n      do {\n        sample*=2;\n      }\n while (sample * 2 < scaleFactor);\n      opts.inSampleSize=sample;\n    }\n else {\n      opts.inSampleSize=(int)scaleFactor;\n    }\n    patternBitmap=BitmapFactory.decodeFile(pattern.getAbsolutePath(),opts);\n  }\n  if (patternBitmap != null) {\n    Paint backgroundPaint=new Paint(Paint.FILTER_BITMAP_FLAG);\n    backgroundPaint.setColorFilter(new PorterDuffColorFilter(patternColor,PorterDuff.Mode.SRC_IN));\n    backgroundPaint.setAlpha((int)(255 * themeDocument.accent.patternIntensity));\n    float scale=Math.max(560.0f / patternBitmap.getWidth(),678.0f / patternBitmap.getHeight());\n    int w=(int)(patternBitmap.getWidth() * scale);\n    int h=(int)(patternBitmap.getHeight() * scale);\n    int x=(560 - w) / 2;\n    int y=(678 - h) / 2;\n    canvas.save();\n    canvas.translate(x,y);\n    canvas.scale(scale,scale);\n    canvas.drawBitmap(patternBitmap,0,0,backgroundPaint);\n    canvas.restore();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 325,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3728,
        "startLineNumber" : 96,
        "startColumnNumber" : 37,
        "endLineNumber" : 165,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Drawable wallpaperDrawable;\n  int patternColor;\n  if (gradientToColor == null) {\n    wallpaperDrawable=new ColorDrawable(backgroundColor);\n    patternColor=AndroidUtilities.getPatternColor(backgroundColor);\n  }\n else {\n    final int[] gradientColors={backgroundColor,gradientToColor};\n    wallpaperDrawable=BackgroundGradientDrawable.createDitheredGradientBitmapDrawable(gradientRotation,gradientColors,bitmap.getWidth(),bitmap.getHeight() - 120);\n    patternColor=AndroidUtilities.getPatternColor(AndroidUtilities.getAverageColor(backgroundColor,gradientToColor));\n  }\n  wallpaperDrawable.setBounds(0,120,bitmap.getWidth(),bitmap.getHeight() - 120);\n  wallpaperDrawable.draw(canvas);\n  if (serviceColor == null) {\n    serviceColor=AndroidUtilities.calcDrawableColor(new ColorDrawable(backgroundColor))[0];\n  }\n  if (pattern != null) {\n    Bitmap patternBitmap;\n    if (\"application/x-tgwallpattern\".equals(themeDocument.mime_type)) {\n      patternBitmap=SvgHelper.getBitmap(pattern,560,678,false);\n    }\n else {\n      BitmapFactory.Options opts=new BitmapFactory.Options();\n      opts.inSampleSize=1;\n      opts.inJustDecodeBounds=true;\n      BitmapFactory.decodeFile(pattern.getAbsolutePath(),opts);\n      float photoW=opts.outWidth;\n      float photoH=opts.outHeight;\n      float scaleFactor;\n      int w_filter=560;\n      int h_filter=678;\n      if (w_filter >= h_filter && photoW > photoH) {\n        scaleFactor=Math.max(photoW / w_filter,photoH / h_filter);\n      }\n else {\n        scaleFactor=Math.min(photoW / w_filter,photoH / h_filter);\n      }\n      if (scaleFactor < 1.2f) {\n        scaleFactor=1;\n      }\n      opts.inJustDecodeBounds=false;\n      if (scaleFactor > 1.0f && (photoW > w_filter || photoH > h_filter)) {\n        int sample=1;\n        do {\n          sample*=2;\n        }\n while (sample * 2 < scaleFactor);\n        opts.inSampleSize=sample;\n      }\n else {\n        opts.inSampleSize=(int)scaleFactor;\n      }\n      patternBitmap=BitmapFactory.decodeFile(pattern.getAbsolutePath(),opts);\n    }\n    if (patternBitmap != null) {\n      Paint backgroundPaint=new Paint(Paint.FILTER_BITMAP_FLAG);\n      backgroundPaint.setColorFilter(new PorterDuffColorFilter(patternColor,PorterDuff.Mode.SRC_IN));\n      backgroundPaint.setAlpha((int)(255 * themeDocument.accent.patternIntensity));\n      float scale=Math.max(560.0f / patternBitmap.getWidth(),678.0f / patternBitmap.getHeight());\n      int w=(int)(patternBitmap.getWidth() * scale);\n      int h=(int)(patternBitmap.getHeight() * scale);\n      int x=(560 - w) / 2;\n      int y=(678 - h) / 2;\n      canvas.save();\n      canvas.translate(x,y);\n      canvas.scale(scale,scale);\n      canvas.drawBitmap(patternBitmap,0,0,backgroundPaint);\n      canvas.restore();\n    }\n  }\n  hasBackground=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 432,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3757,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 165,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (backgroundColor != null) {\n  Drawable wallpaperDrawable;\n  int patternColor;\n  if (gradientToColor == null) {\n    wallpaperDrawable=new ColorDrawable(backgroundColor);\n    patternColor=AndroidUtilities.getPatternColor(backgroundColor);\n  }\n else {\n    final int[] gradientColors={backgroundColor,gradientToColor};\n    wallpaperDrawable=BackgroundGradientDrawable.createDitheredGradientBitmapDrawable(gradientRotation,gradientColors,bitmap.getWidth(),bitmap.getHeight() - 120);\n    patternColor=AndroidUtilities.getPatternColor(AndroidUtilities.getAverageColor(backgroundColor,gradientToColor));\n  }\n  wallpaperDrawable.setBounds(0,120,bitmap.getWidth(),bitmap.getHeight() - 120);\n  wallpaperDrawable.draw(canvas);\n  if (serviceColor == null) {\n    serviceColor=AndroidUtilities.calcDrawableColor(new ColorDrawable(backgroundColor))[0];\n  }\n  if (pattern != null) {\n    Bitmap patternBitmap;\n    if (\"application/x-tgwallpattern\".equals(themeDocument.mime_type)) {\n      patternBitmap=SvgHelper.getBitmap(pattern,560,678,false);\n    }\n else {\n      BitmapFactory.Options opts=new BitmapFactory.Options();\n      opts.inSampleSize=1;\n      opts.inJustDecodeBounds=true;\n      BitmapFactory.decodeFile(pattern.getAbsolutePath(),opts);\n      float photoW=opts.outWidth;\n      float photoH=opts.outHeight;\n      float scaleFactor;\n      int w_filter=560;\n      int h_filter=678;\n      if (w_filter >= h_filter && photoW > photoH) {\n        scaleFactor=Math.max(photoW / w_filter,photoH / h_filter);\n      }\n else {\n        scaleFactor=Math.min(photoW / w_filter,photoH / h_filter);\n      }\n      if (scaleFactor < 1.2f) {\n        scaleFactor=1;\n      }\n      opts.inJustDecodeBounds=false;\n      if (scaleFactor > 1.0f && (photoW > w_filter || photoH > h_filter)) {\n        int sample=1;\n        do {\n          sample*=2;\n        }\n while (sample * 2 < scaleFactor);\n        opts.inSampleSize=sample;\n      }\n else {\n        opts.inSampleSize=(int)scaleFactor;\n      }\n      patternBitmap=BitmapFactory.decodeFile(pattern.getAbsolutePath(),opts);\n    }\n    if (patternBitmap != null) {\n      Paint backgroundPaint=new Paint(Paint.FILTER_BITMAP_FLAG);\n      backgroundPaint.setColorFilter(new PorterDuffColorFilter(patternColor,PorterDuff.Mode.SRC_IN));\n      backgroundPaint.setAlpha((int)(255 * themeDocument.accent.patternIntensity));\n      float scale=Math.max(560.0f / patternBitmap.getWidth(),678.0f / patternBitmap.getHeight());\n      int w=(int)(patternBitmap.getWidth() * scale);\n      int h=(int)(patternBitmap.getHeight() * scale);\n      int x=(560 - w) / 2;\n      int y=(678 - h) / 2;\n      canvas.save();\n      canvas.translate(x,y);\n      canvas.scale(scale,scale);\n      canvas.drawBitmap(patternBitmap,0,0,backgroundPaint);\n      canvas.restore();\n    }\n  }\n  hasBackground=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 436,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9896,
        "startLineNumber" : 38,
        "startColumnNumber" : 98,
        "endLineNumber" : 227,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RectF rect=new RectF();\n  Paint paint=new Paint();\n  Bitmap bitmap=Bitmaps.createBitmap(560,678,Bitmap.Config.ARGB_8888);\n  Canvas canvas=new Canvas(bitmap);\n  HashMap<String,Integer> baseColors=Theme.getThemeFileValues(null,themeDocument.baseTheme.assetName,null);\n  HashMap<String,Integer> colors=new HashMap<>(baseColors);\n  themeDocument.accent.fillAccentColors(baseColors,colors);\n  int actionBarColor=Theme.getPreviewColor(colors,Theme.key_actionBarDefault);\n  int actionBarIconColor=Theme.getPreviewColor(colors,Theme.key_actionBarDefaultIcon);\n  int messageFieldColor=Theme.getPreviewColor(colors,Theme.key_chat_messagePanelBackground);\n  int messageFieldIconColor=Theme.getPreviewColor(colors,Theme.key_chat_messagePanelIcons);\n  int messageInColor=Theme.getPreviewColor(colors,Theme.key_chat_inBubble);\n  int messageOutColor=Theme.getPreviewColor(colors,Theme.key_chat_outBubble);\n  Integer messageOutGradientColor=colors.get(Theme.key_chat_outBubbleGradient);\n  Integer backgroundColor=colors.get(Theme.key_chat_wallpaper);\n  Integer serviceColor=colors.get(Theme.key_chat_serviceBackground);\n  Integer gradientToColor=colors.get(Theme.key_chat_wallpaper_gradient_to);\n  Integer gradientRotation=colors.get(Theme.key_chat_wallpaper_gradient_rotation);\n  if (gradientRotation == null) {\n    gradientRotation=45;\n  }\n  Drawable backDrawable=ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_back).mutate();\n  Theme.setDrawableColor(backDrawable,actionBarIconColor);\n  Drawable otherDrawable=ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_dots).mutate();\n  Theme.setDrawableColor(otherDrawable,actionBarIconColor);\n  Drawable emojiDrawable=ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_smile).mutate();\n  Theme.setDrawableColor(emojiDrawable,messageFieldIconColor);\n  Drawable micDrawable=ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_mic).mutate();\n  Theme.setDrawableColor(micDrawable,messageFieldIconColor);\n  Theme.MessageDrawable[] messageDrawable=new Theme.MessageDrawable[2];\n  for (int a=0; a < 2; a++) {\n    messageDrawable[a]=new Theme.MessageDrawable(Theme.MessageDrawable.TYPE_PREVIEW,a == 1,false){\n      @Override protected int getColor(      String key){\n        Integer color=colors.get(key);\n        if (color == null) {\n          return Theme.getColor(key);\n        }\n        return color;\n      }\n      @Override protected Integer getCurrentColor(      String key){\n        return colors.get(key);\n      }\n    }\n;\n    Theme.setDrawableColor(messageDrawable[a],a == 1 ? messageOutColor : messageInColor);\n  }\n  boolean hasBackground=false;\n  if (backgroundColor != null) {\n    Drawable wallpaperDrawable;\n    int patternColor;\n    if (gradientToColor == null) {\n      wallpaperDrawable=new ColorDrawable(backgroundColor);\n      patternColor=AndroidUtilities.getPatternColor(backgroundColor);\n    }\n else {\n      final int[] gradientColors={backgroundColor,gradientToColor};\n      wallpaperDrawable=BackgroundGradientDrawable.createDitheredGradientBitmapDrawable(gradientRotation,gradientColors,bitmap.getWidth(),bitmap.getHeight() - 120);\n      patternColor=AndroidUtilities.getPatternColor(AndroidUtilities.getAverageColor(backgroundColor,gradientToColor));\n    }\n    wallpaperDrawable.setBounds(0,120,bitmap.getWidth(),bitmap.getHeight() - 120);\n    wallpaperDrawable.draw(canvas);\n    if (serviceColor == null) {\n      serviceColor=AndroidUtilities.calcDrawableColor(new ColorDrawable(backgroundColor))[0];\n    }\n    if (pattern != null) {\n      Bitmap patternBitmap;\n      if (\"application/x-tgwallpattern\".equals(themeDocument.mime_type)) {\n        patternBitmap=SvgHelper.getBitmap(pattern,560,678,false);\n      }\n else {\n        BitmapFactory.Options opts=new BitmapFactory.Options();\n        opts.inSampleSize=1;\n        opts.inJustDecodeBounds=true;\n        BitmapFactory.decodeFile(pattern.getAbsolutePath(),opts);\n        float photoW=opts.outWidth;\n        float photoH=opts.outHeight;\n        float scaleFactor;\n        int w_filter=560;\n        int h_filter=678;\n        if (w_filter >= h_filter && photoW > photoH) {\n          scaleFactor=Math.max(photoW / w_filter,photoH / h_filter);\n        }\n else {\n          scaleFactor=Math.min(photoW / w_filter,photoH / h_filter);\n        }\n        if (scaleFactor < 1.2f) {\n          scaleFactor=1;\n        }\n        opts.inJustDecodeBounds=false;\n        if (scaleFactor > 1.0f && (photoW > w_filter || photoH > h_filter)) {\n          int sample=1;\n          do {\n            sample*=2;\n          }\n while (sample * 2 < scaleFactor);\n          opts.inSampleSize=sample;\n        }\n else {\n          opts.inSampleSize=(int)scaleFactor;\n        }\n        patternBitmap=BitmapFactory.decodeFile(pattern.getAbsolutePath(),opts);\n      }\n      if (patternBitmap != null) {\n        Paint backgroundPaint=new Paint(Paint.FILTER_BITMAP_FLAG);\n        backgroundPaint.setColorFilter(new PorterDuffColorFilter(patternColor,PorterDuff.Mode.SRC_IN));\n        backgroundPaint.setAlpha((int)(255 * themeDocument.accent.patternIntensity));\n        float scale=Math.max(560.0f / patternBitmap.getWidth(),678.0f / patternBitmap.getHeight());\n        int w=(int)(patternBitmap.getWidth() * scale);\n        int h=(int)(patternBitmap.getHeight() * scale);\n        int x=(560 - w) / 2;\n        int y=(678 - h) / 2;\n        canvas.save();\n        canvas.translate(x,y);\n        canvas.scale(scale,scale);\n        canvas.drawBitmap(patternBitmap,0,0,backgroundPaint);\n        canvas.restore();\n      }\n    }\n    hasBackground=true;\n  }\n  if (!hasBackground) {\n    BitmapDrawable catsDrawable=(BitmapDrawable)ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.catstile).mutate();\n    if (serviceColor == null) {\n      serviceColor=AndroidUtilities.calcDrawableColor(catsDrawable)[0];\n    }\n    catsDrawable.setTileModeXY(Shader.TileMode.REPEAT,Shader.TileMode.REPEAT);\n    catsDrawable.setBounds(0,120,bitmap.getWidth(),bitmap.getHeight() - 120);\n    catsDrawable.draw(canvas);\n  }\n  paint.setColor(actionBarColor);\n  canvas.drawRect(0,0,bitmap.getWidth(),120,paint);\n  if (backDrawable != null) {\n    int x=13;\n    int y=(120 - backDrawable.getIntrinsicHeight()) / 2;\n    backDrawable.setBounds(x,y,x + backDrawable.getIntrinsicWidth(),y + backDrawable.getIntrinsicHeight());\n    backDrawable.draw(canvas);\n  }\n  if (otherDrawable != null) {\n    int x=bitmap.getWidth() - otherDrawable.getIntrinsicWidth() - 10;\n    int y=(120 - otherDrawable.getIntrinsicHeight()) / 2;\n    otherDrawable.setBounds(x,y,x + otherDrawable.getIntrinsicWidth(),y + otherDrawable.getIntrinsicHeight());\n    otherDrawable.draw(canvas);\n  }\n  messageDrawable[1].setBounds(161,216,bitmap.getWidth() - 20,216 + 92);\n  messageDrawable[1].setTop(0,522,false,false);\n  messageDrawable[1].draw(canvas);\n  messageDrawable[1].setBounds(161,430,bitmap.getWidth() - 20,430 + 92);\n  messageDrawable[1].setTop(430,522,false,false);\n  messageDrawable[1].draw(canvas);\n  messageDrawable[0].setBounds(20,323,399,323 + 92);\n  messageDrawable[0].setTop(323,522,false,false);\n  messageDrawable[0].draw(canvas);\n  if (serviceColor != null) {\n    int x=(bitmap.getWidth() - 126) / 2;\n    int y=150;\n    rect.set(x,y,x + 126,y + 42);\n    paint.setColor(serviceColor);\n    canvas.drawRoundRect(rect,21,21,paint);\n  }\n  paint.setColor(messageFieldColor);\n  canvas.drawRect(0,bitmap.getHeight() - 120,bitmap.getWidth(),bitmap.getHeight(),paint);\n  if (emojiDrawable != null) {\n    int x=22;\n    int y=bitmap.getHeight() - 120 + (120 - emojiDrawable.getIntrinsicHeight()) / 2;\n    emojiDrawable.setBounds(x,y,x + emojiDrawable.getIntrinsicWidth(),y + emojiDrawable.getIntrinsicHeight());\n    emojiDrawable.draw(canvas);\n  }\n  if (micDrawable != null) {\n    int x=bitmap.getWidth() - micDrawable.getIntrinsicWidth() - 22;\n    int y=bitmap.getHeight() - 120 + (120 - micDrawable.getIntrinsicHeight()) / 2;\n    micDrawable.setBounds(x,y,x + micDrawable.getIntrinsicWidth(),y + micDrawable.getIntrinsicHeight());\n    micDrawable.draw(canvas);\n  }\n  return bitmap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1319,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9990,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 227,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Bitmap createPreview(File pattern,DocumentObject.ThemeDocument themeDocument){\n  RectF rect=new RectF();\n  Paint paint=new Paint();\n  Bitmap bitmap=Bitmaps.createBitmap(560,678,Bitmap.Config.ARGB_8888);\n  Canvas canvas=new Canvas(bitmap);\n  HashMap<String,Integer> baseColors=Theme.getThemeFileValues(null,themeDocument.baseTheme.assetName,null);\n  HashMap<String,Integer> colors=new HashMap<>(baseColors);\n  themeDocument.accent.fillAccentColors(baseColors,colors);\n  int actionBarColor=Theme.getPreviewColor(colors,Theme.key_actionBarDefault);\n  int actionBarIconColor=Theme.getPreviewColor(colors,Theme.key_actionBarDefaultIcon);\n  int messageFieldColor=Theme.getPreviewColor(colors,Theme.key_chat_messagePanelBackground);\n  int messageFieldIconColor=Theme.getPreviewColor(colors,Theme.key_chat_messagePanelIcons);\n  int messageInColor=Theme.getPreviewColor(colors,Theme.key_chat_inBubble);\n  int messageOutColor=Theme.getPreviewColor(colors,Theme.key_chat_outBubble);\n  Integer messageOutGradientColor=colors.get(Theme.key_chat_outBubbleGradient);\n  Integer backgroundColor=colors.get(Theme.key_chat_wallpaper);\n  Integer serviceColor=colors.get(Theme.key_chat_serviceBackground);\n  Integer gradientToColor=colors.get(Theme.key_chat_wallpaper_gradient_to);\n  Integer gradientRotation=colors.get(Theme.key_chat_wallpaper_gradient_rotation);\n  if (gradientRotation == null) {\n    gradientRotation=45;\n  }\n  Drawable backDrawable=ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_back).mutate();\n  Theme.setDrawableColor(backDrawable,actionBarIconColor);\n  Drawable otherDrawable=ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_dots).mutate();\n  Theme.setDrawableColor(otherDrawable,actionBarIconColor);\n  Drawable emojiDrawable=ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_smile).mutate();\n  Theme.setDrawableColor(emojiDrawable,messageFieldIconColor);\n  Drawable micDrawable=ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.preview_mic).mutate();\n  Theme.setDrawableColor(micDrawable,messageFieldIconColor);\n  Theme.MessageDrawable[] messageDrawable=new Theme.MessageDrawable[2];\n  for (int a=0; a < 2; a++) {\n    messageDrawable[a]=new Theme.MessageDrawable(Theme.MessageDrawable.TYPE_PREVIEW,a == 1,false){\n      @Override protected int getColor(      String key){\n        Integer color=colors.get(key);\n        if (color == null) {\n          return Theme.getColor(key);\n        }\n        return color;\n      }\n      @Override protected Integer getCurrentColor(      String key){\n        return colors.get(key);\n      }\n    }\n;\n    Theme.setDrawableColor(messageDrawable[a],a == 1 ? messageOutColor : messageInColor);\n  }\n  boolean hasBackground=false;\n  if (backgroundColor != null) {\n    Drawable wallpaperDrawable;\n    int patternColor;\n    if (gradientToColor == null) {\n      wallpaperDrawable=new ColorDrawable(backgroundColor);\n      patternColor=AndroidUtilities.getPatternColor(backgroundColor);\n    }\n else {\n      final int[] gradientColors={backgroundColor,gradientToColor};\n      wallpaperDrawable=BackgroundGradientDrawable.createDitheredGradientBitmapDrawable(gradientRotation,gradientColors,bitmap.getWidth(),bitmap.getHeight() - 120);\n      patternColor=AndroidUtilities.getPatternColor(AndroidUtilities.getAverageColor(backgroundColor,gradientToColor));\n    }\n    wallpaperDrawable.setBounds(0,120,bitmap.getWidth(),bitmap.getHeight() - 120);\n    wallpaperDrawable.draw(canvas);\n    if (serviceColor == null) {\n      serviceColor=AndroidUtilities.calcDrawableColor(new ColorDrawable(backgroundColor))[0];\n    }\n    if (pattern != null) {\n      Bitmap patternBitmap;\n      if (\"application/x-tgwallpattern\".equals(themeDocument.mime_type)) {\n        patternBitmap=SvgHelper.getBitmap(pattern,560,678,false);\n      }\n else {\n        BitmapFactory.Options opts=new BitmapFactory.Options();\n        opts.inSampleSize=1;\n        opts.inJustDecodeBounds=true;\n        BitmapFactory.decodeFile(pattern.getAbsolutePath(),opts);\n        float photoW=opts.outWidth;\n        float photoH=opts.outHeight;\n        float scaleFactor;\n        int w_filter=560;\n        int h_filter=678;\n        if (w_filter >= h_filter && photoW > photoH) {\n          scaleFactor=Math.max(photoW / w_filter,photoH / h_filter);\n        }\n else {\n          scaleFactor=Math.min(photoW / w_filter,photoH / h_filter);\n        }\n        if (scaleFactor < 1.2f) {\n          scaleFactor=1;\n        }\n        opts.inJustDecodeBounds=false;\n        if (scaleFactor > 1.0f && (photoW > w_filter || photoH > h_filter)) {\n          int sample=1;\n          do {\n            sample*=2;\n          }\n while (sample * 2 < scaleFactor);\n          opts.inSampleSize=sample;\n        }\n else {\n          opts.inSampleSize=(int)scaleFactor;\n        }\n        patternBitmap=BitmapFactory.decodeFile(pattern.getAbsolutePath(),opts);\n      }\n      if (patternBitmap != null) {\n        Paint backgroundPaint=new Paint(Paint.FILTER_BITMAP_FLAG);\n        backgroundPaint.setColorFilter(new PorterDuffColorFilter(patternColor,PorterDuff.Mode.SRC_IN));\n        backgroundPaint.setAlpha((int)(255 * themeDocument.accent.patternIntensity));\n        float scale=Math.max(560.0f / patternBitmap.getWidth(),678.0f / patternBitmap.getHeight());\n        int w=(int)(patternBitmap.getWidth() * scale);\n        int h=(int)(patternBitmap.getHeight() * scale);\n        int x=(560 - w) / 2;\n        int y=(678 - h) / 2;\n        canvas.save();\n        canvas.translate(x,y);\n        canvas.scale(scale,scale);\n        canvas.drawBitmap(patternBitmap,0,0,backgroundPaint);\n        canvas.restore();\n      }\n    }\n    hasBackground=true;\n  }\n  if (!hasBackground) {\n    BitmapDrawable catsDrawable=(BitmapDrawable)ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.catstile).mutate();\n    if (serviceColor == null) {\n      serviceColor=AndroidUtilities.calcDrawableColor(catsDrawable)[0];\n    }\n    catsDrawable.setTileModeXY(Shader.TileMode.REPEAT,Shader.TileMode.REPEAT);\n    catsDrawable.setBounds(0,120,bitmap.getWidth(),bitmap.getHeight() - 120);\n    catsDrawable.draw(canvas);\n  }\n  paint.setColor(actionBarColor);\n  canvas.drawRect(0,0,bitmap.getWidth(),120,paint);\n  if (backDrawable != null) {\n    int x=13;\n    int y=(120 - backDrawable.getIntrinsicHeight()) / 2;\n    backDrawable.setBounds(x,y,x + backDrawable.getIntrinsicWidth(),y + backDrawable.getIntrinsicHeight());\n    backDrawable.draw(canvas);\n  }\n  if (otherDrawable != null) {\n    int x=bitmap.getWidth() - otherDrawable.getIntrinsicWidth() - 10;\n    int y=(120 - otherDrawable.getIntrinsicHeight()) / 2;\n    otherDrawable.setBounds(x,y,x + otherDrawable.getIntrinsicWidth(),y + otherDrawable.getIntrinsicHeight());\n    otherDrawable.draw(canvas);\n  }\n  messageDrawable[1].setBounds(161,216,bitmap.getWidth() - 20,216 + 92);\n  messageDrawable[1].setTop(0,522,false,false);\n  messageDrawable[1].draw(canvas);\n  messageDrawable[1].setBounds(161,430,bitmap.getWidth() - 20,430 + 92);\n  messageDrawable[1].setTop(430,522,false,false);\n  messageDrawable[1].draw(canvas);\n  messageDrawable[0].setBounds(20,323,399,323 + 92);\n  messageDrawable[0].setTop(323,522,false,false);\n  messageDrawable[0].draw(canvas);\n  if (serviceColor != null) {\n    int x=(bitmap.getWidth() - 126) / 2;\n    int y=150;\n    rect.set(x,y,x + 126,y + 42);\n    paint.setColor(serviceColor);\n    canvas.drawRoundRect(rect,21,21,paint);\n  }\n  paint.setColor(messageFieldColor);\n  canvas.drawRect(0,bitmap.getHeight() - 120,bitmap.getWidth(),bitmap.getHeight(),paint);\n  if (emojiDrawable != null) {\n    int x=22;\n    int y=bitmap.getHeight() - 120 + (120 - emojiDrawable.getIntrinsicHeight()) / 2;\n    emojiDrawable.setBounds(x,y,x + emojiDrawable.getIntrinsicWidth(),y + emojiDrawable.getIntrinsicHeight());\n    emojiDrawable.draw(canvas);\n  }\n  if (micDrawable != null) {\n    int x=bitmap.getWidth() - micDrawable.getIntrinsicWidth() - 22;\n    int y=bitmap.getHeight() - 120 + (120 - micDrawable.getIntrinsicHeight()) / 2;\n    micDrawable.setBounds(x,y,x + micDrawable.getIntrinsicWidth(),y + micDrawable.getIntrinsicHeight());\n    micDrawable.draw(canvas);\n  }\n  return bitmap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1335,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 149,
        "startColumnNumber" : 20,
        "endLineNumber" : 149,
        "endColumnNumber" : 116
      },
      "nodeContext" : "backgroundPaint.setColorFilter(new PorterDuffColorFilter(patternColor,PorterDuff.Mode.SRC_IN));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 149,
    "startColumnNumber" : 91,
    "endLineNumber" : 149,
    "endColumnNumber" : 101
  } ],
  "layoutRelationDataList" : [ ]
}