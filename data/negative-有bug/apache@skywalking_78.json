{
  "id" : 78,
  "expression" : "\"templates\"",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/management/ui/template/UITemplateInitializer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"templates\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 57,
      "startColumnNumber" : 49,
      "endLineNumber" : 57,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 57,
        "startColumnNumber" : 36,
        "endLineNumber" : 57,
        "endColumnNumber" : 61
      },
      "nodeContext" : "yamlData.get(\"templates\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 57,
        "startColumnNumber" : 29,
        "endLineNumber" : 57,
        "endColumnNumber" : 61
      },
      "nodeContext" : "(List)yamlData.get(\"templates\")",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 57,
        "startColumnNumber" : 17,
        "endLineNumber" : 57,
        "endColumnNumber" : 61
      },
      "nodeContext" : "templates=(List)yamlData.get(\"templates\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 62
      },
      "nodeContext" : "List templates=(List)yamlData.get(\"templates\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2048,
        "startLineNumber" : 56,
        "startColumnNumber" : 39,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List templates=(List)yamlData.get(\"templates\");\n  if (templates != null) {\n    templates.forEach(templateObj -> {\n      final Map template=(Map)templateObj;\n      UITemplate newTemplate=new UITemplate();\n      final String name=(String)template.get(\"name\");\n      if (StringUtil.isEmpty(name)) {\n        throw new IllegalArgumentException(\"template name shouldn't be null\");\n      }\n      newTemplate.setName(name);\n      final String type=(String)template.getOrDefault(\"type\",TemplateType.DASHBOARD.name());\n      TemplateType.forName(type);\n      newTemplate.setType(type);\n      final String configuration=(String)template.get(\"configuration\");\n      if (StringUtil.isEmpty(configuration)) {\n        throw new IllegalArgumentException(\"template configuration shouldn't be null\");\n      }\n      newTemplate.setConfiguration(configuration);\n      newTemplate.setActivated(BooleanUtils.booleanToValue((Boolean)template.getOrDefault(\"activated\",false)));\n      newTemplate.setDisabled(BooleanUtils.booleanToValue((Boolean)template.getOrDefault(\"disabled\",false)));\n      if (uiTemplates.contains(newTemplate)) {\n        throw new IllegalArgumentException(\"Template \" + newTemplate.getName() + \" name conflicts\");\n      }\n      uiTemplates.add(newTemplate);\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2079,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(yamlData)) {\n  List templates=(List)yamlData.get(\"templates\");\n  if (templates != null) {\n    templates.forEach(templateObj -> {\n      final Map template=(Map)templateObj;\n      UITemplate newTemplate=new UITemplate();\n      final String name=(String)template.get(\"name\");\n      if (StringUtil.isEmpty(name)) {\n        throw new IllegalArgumentException(\"template name shouldn't be null\");\n      }\n      newTemplate.setName(name);\n      final String type=(String)template.getOrDefault(\"type\",TemplateType.DASHBOARD.name());\n      TemplateType.forName(type);\n      newTemplate.setType(type);\n      final String configuration=(String)template.get(\"configuration\");\n      if (StringUtil.isEmpty(configuration)) {\n        throw new IllegalArgumentException(\"template configuration shouldn't be null\");\n      }\n      newTemplate.setConfiguration(configuration);\n      newTemplate.setActivated(BooleanUtils.booleanToValue((Boolean)template.getOrDefault(\"activated\",false)));\n      newTemplate.setDisabled(BooleanUtils.booleanToValue((Boolean)template.getOrDefault(\"disabled\",false)));\n      if (uiTemplates.contains(newTemplate)) {\n        throw new IllegalArgumentException(\"Template \" + newTemplate.getName() + \" name conflicts\");\n      }\n      uiTemplates.add(newTemplate);\n    }\n);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2181,
        "startLineNumber" : 54,
        "startColumnNumber" : 35,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<UITemplate> uiTemplates=new ArrayList<>();\n  if (Objects.nonNull(yamlData)) {\n    List templates=(List)yamlData.get(\"templates\");\n    if (templates != null) {\n      templates.forEach(templateObj -> {\n        final Map template=(Map)templateObj;\n        UITemplate newTemplate=new UITemplate();\n        final String name=(String)template.get(\"name\");\n        if (StringUtil.isEmpty(name)) {\n          throw new IllegalArgumentException(\"template name shouldn't be null\");\n        }\n        newTemplate.setName(name);\n        final String type=(String)template.getOrDefault(\"type\",TemplateType.DASHBOARD.name());\n        TemplateType.forName(type);\n        newTemplate.setType(type);\n        final String configuration=(String)template.get(\"configuration\");\n        if (StringUtil.isEmpty(configuration)) {\n          throw new IllegalArgumentException(\"template configuration shouldn't be null\");\n        }\n        newTemplate.setConfiguration(configuration);\n        newTemplate.setActivated(BooleanUtils.booleanToValue((Boolean)template.getOrDefault(\"activated\",false)));\n        newTemplate.setDisabled(BooleanUtils.booleanToValue((Boolean)template.getOrDefault(\"disabled\",false)));\n        if (uiTemplates.contains(newTemplate)) {\n          throw new IllegalArgumentException(\"Template \" + newTemplate.getName() + \" name conflicts\");\n        }\n        uiTemplates.add(newTemplate);\n      }\n);\n    }\n  }\n  return uiTemplates;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2212,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public List<UITemplate> read(){\n  List<UITemplate> uiTemplates=new ArrayList<>();\n  if (Objects.nonNull(yamlData)) {\n    List templates=(List)yamlData.get(\"templates\");\n    if (templates != null) {\n      templates.forEach(templateObj -> {\n        final Map template=(Map)templateObj;\n        UITemplate newTemplate=new UITemplate();\n        final String name=(String)template.get(\"name\");\n        if (StringUtil.isEmpty(name)) {\n          throw new IllegalArgumentException(\"template name shouldn't be null\");\n        }\n        newTemplate.setName(name);\n        final String type=(String)template.getOrDefault(\"type\",TemplateType.DASHBOARD.name());\n        TemplateType.forName(type);\n        newTemplate.setType(type);\n        final String configuration=(String)template.get(\"configuration\");\n        if (StringUtil.isEmpty(configuration)) {\n          throw new IllegalArgumentException(\"template configuration shouldn't be null\");\n        }\n        newTemplate.setConfiguration(configuration);\n        newTemplate.setActivated(BooleanUtils.booleanToValue((Boolean)template.getOrDefault(\"activated\",false)));\n        newTemplate.setDisabled(BooleanUtils.booleanToValue((Boolean)template.getOrDefault(\"disabled\",false)));\n        if (uiTemplates.contains(newTemplate)) {\n          throw new IllegalArgumentException(\"Template \" + newTemplate.getName() + \" name conflicts\");\n        }\n        uiTemplates.add(newTemplate);\n      }\n);\n    }\n  }\n  return uiTemplates;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 62
      },
      "nodeContext" : "List templates=(List)yamlData.get(\"templates\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 57,
    "startColumnNumber" : 49,
    "endLineNumber" : 57,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}