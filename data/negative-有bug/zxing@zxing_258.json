{
  "id" : 258,
  "expression" : "i",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/UPCAWriter.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 63,
      "startColumnNumber" : 22,
      "endLineNumber" : 63,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 63,
        "startColumnNumber" : 22,
        "endLineNumber" : 63,
        "endColumnNumber" : 28
      },
      "nodeContext" : "i < 11",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 63,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < 11; ++i) {\n  sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 60,
        "startColumnNumber" : 22,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int sum=0;\n  for (int i=0; i < 11; ++i) {\n    sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n  }\n  contents+=(1000 - sum) % 10;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (length == 11) {\n  int sum=0;\n  for (int i=0; i < 11; ++i) {\n    sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n  }\n  contents+=(1000 - sum) % 10;\n}\n else if (length != 12) {\n  throw new IllegalArgumentException(\"Requested contents should be 11 or 12 digits long, but got \" + contents.length());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 58,
        "startColumnNumber" : 51,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int length=contents.length();\n  if (length == 11) {\n    int sum=0;\n    for (int i=0; i < 11; ++i) {\n      sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n    }\n    contents+=(1000 - sum) % 10;\n  }\n else   if (length != 12) {\n    throw new IllegalArgumentException(\"Requested contents should be 11 or 12 digits long, but got \" + contents.length());\n  }\n  return '0' + contents;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 686,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Transform a UPC-A code into the equivalent EAN-13 code, and add a check digit if it is not already present.\n */\nprivate static String preencode(String contents){\n  int length=contents.length();\n  if (length == 11) {\n    int sum=0;\n    for (int i=0; i < 11; ++i) {\n      sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n    }\n    contents+=(1000 - sum) % 10;\n  }\n else   if (length != 12) {\n    throw new IllegalArgumentException(\"Requested contents should be 11 or 12 digits long, but got \" + contents.length());\n  }\n  return '0' + contents;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 63,
        "startColumnNumber" : 22,
        "endLineNumber" : 63,
        "endColumnNumber" : 28
      },
      "nodeContext" : "i < 11",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 64,
      "startColumnNumber" : 32,
      "endLineNumber" : 64,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 64,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 34
      },
      "nodeContext" : "contents.charAt(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 64,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 40
      },
      "nodeContext" : "contents.charAt(i) - '0'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 41
      },
      "nodeContext" : "(contents.charAt(i) - '0')",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 65
      },
      "nodeContext" : "sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 63,
        "startColumnNumber" : 35,
        "endLineNumber" : 65,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 63,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < 11; ++i) {\n  sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 60,
        "startColumnNumber" : 22,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int sum=0;\n  for (int i=0; i < 11; ++i) {\n    sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n  }\n  contents+=(1000 - sum) % 10;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (length == 11) {\n  int sum=0;\n  for (int i=0; i < 11; ++i) {\n    sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n  }\n  contents+=(1000 - sum) % 10;\n}\n else if (length != 12) {\n  throw new IllegalArgumentException(\"Requested contents should be 11 or 12 digits long, but got \" + contents.length());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 58,
        "startColumnNumber" : 51,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int length=contents.length();\n  if (length == 11) {\n    int sum=0;\n    for (int i=0; i < 11; ++i) {\n      sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n    }\n    contents+=(1000 - sum) % 10;\n  }\n else   if (length != 12) {\n    throw new IllegalArgumentException(\"Requested contents should be 11 or 12 digits long, but got \" + contents.length());\n  }\n  return '0' + contents;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 686,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Transform a UPC-A code into the equivalent EAN-13 code, and add a check digit if it is not already present.\n */\nprivate static String preencode(String contents){\n  int length=contents.length();\n  if (length == 11) {\n    int sum=0;\n    for (int i=0; i < 11; ++i) {\n      sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n    }\n    contents+=(1000 - sum) % 10;\n  }\n else   if (length != 12) {\n    throw new IllegalArgumentException(\"Requested contents should be 11 or 12 digits long, but got \" + contents.length());\n  }\n  return '0' + contents;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 65
      },
      "nodeContext" : "sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 64,
      "startColumnNumber" : 45,
      "endLineNumber" : 64,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 64,
        "startColumnNumber" : 45,
        "endLineNumber" : 64,
        "endColumnNumber" : 50
      },
      "nodeContext" : "i % 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 64,
        "startColumnNumber" : 45,
        "endLineNumber" : 64,
        "endColumnNumber" : 55
      },
      "nodeContext" : "i % 2 == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 64,
        "startColumnNumber" : 45,
        "endLineNumber" : 64,
        "endColumnNumber" : 63
      },
      "nodeContext" : "i % 2 == 0 ? 3 : 1",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 64,
        "startColumnNumber" : 44,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "(i % 2 == 0 ? 3 : 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 65
      },
      "nodeContext" : "sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 63,
        "startColumnNumber" : 35,
        "endLineNumber" : 65,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 63,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < 11; ++i) {\n  sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 60,
        "startColumnNumber" : 22,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int sum=0;\n  for (int i=0; i < 11; ++i) {\n    sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n  }\n  contents+=(1000 - sum) % 10;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (length == 11) {\n  int sum=0;\n  for (int i=0; i < 11; ++i) {\n    sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n  }\n  contents+=(1000 - sum) % 10;\n}\n else if (length != 12) {\n  throw new IllegalArgumentException(\"Requested contents should be 11 or 12 digits long, but got \" + contents.length());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 58,
        "startColumnNumber" : 51,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int length=contents.length();\n  if (length == 11) {\n    int sum=0;\n    for (int i=0; i < 11; ++i) {\n      sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n    }\n    contents+=(1000 - sum) % 10;\n  }\n else   if (length != 12) {\n    throw new IllegalArgumentException(\"Requested contents should be 11 or 12 digits long, but got \" + contents.length());\n  }\n  return '0' + contents;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 686,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Transform a UPC-A code into the equivalent EAN-13 code, and add a check digit if it is not already present.\n */\nprivate static String preencode(String contents){\n  int length=contents.length();\n  if (length == 11) {\n    int sum=0;\n    for (int i=0; i < 11; ++i) {\n      sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n    }\n    contents+=(1000 - sum) % 10;\n  }\n else   if (length != 12) {\n    throw new IllegalArgumentException(\"Requested contents should be 11 or 12 digits long, but got \" + contents.length());\n  }\n  return '0' + contents;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 65
      },
      "nodeContext" : "sum+=(contents.charAt(i) - '0') * (i % 2 == 0 ? 3 : 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 63,
    "startColumnNumber" : 22,
    "endLineNumber" : 63,
    "endColumnNumber" : 23
  }, {
    "charLength" : 1,
    "startLineNumber" : 64,
    "startColumnNumber" : 32,
    "endLineNumber" : 64,
    "endColumnNumber" : 33
  }, {
    "charLength" : 1,
    "startLineNumber" : 64,
    "startColumnNumber" : 45,
    "endLineNumber" : 64,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}