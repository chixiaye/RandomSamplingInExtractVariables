{
  "id" : 12,
  "expression" : "\"os\"",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/model/UsageStatisticsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"os\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 126,
      "startColumnNumber" : 39,
      "endLineNumber" : 126,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 44
      },
      "nodeContext" : "((JSONObject)node).remove(\"os\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 45
      },
      "nodeContext" : "((JSONObject)node).remove(\"os\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 125,
        "startColumnNumber" : 34,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ((JSONObject)node).remove(\"os\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Object node : nodes) {\n  ((JSONObject)node).remove(\"os\");\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4305,
        "startLineNumber" : 75,
        "startColumnNumber" : 45,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ((TestPluginManager)j.jenkins.pluginManager).installDetachedPlugin(\"matrix-auth\");\n  j.createOnlineSlave();\n  warmUpNodeMonitorCache();\n  String privateKey=\"30820276020100300d06092a864886f70d0101010500048202603082025c0201000281810084cababdb38040f659c2cb07a36d758f46e84ebc3d6ba39d967aedf1d396b0788ed3ab868d45ce280b1102b434c2a250ddc3254defe1785ab4f94d7038cf69ecca16753d2de3f6ad8976b3f74902d8634111d730982da74e1a6e3fc0bc3523bba53e45b8a8cbfd0321b94efc9f7fefbe66ad85281e3d0323d87f4426ec51204f0203010001028180784deaacdea8bd31f2d44578601954be3f714b93c2d977dbd76efb8f71303e249ad12dbeb2d2a1192a1d7923a6010768d7e06a3597b3df83de1d5688eb0f0e58c76070eddd696682730c93890dc727564c65dc8416bfbde5aad4eb7a97ed923efb55a291daf3c00810c0e43851298472fd539aab355af8cedcf1e9a0cbead661024100c498375102b068806c71dec838dc8dfa5624fb8a524a49cffadc19d10689a8c9c26db514faba6f96e50a605122abd3c9af16e82f2b7565f384528c9f31ea5947024100aceafd31d7f4872a873c7e5fe88f20c2fb086a053c6970026b3ce364768e2033100efb1ad8f2010fe53454a29decedc23a8a0c8df347742b1f13e11bd3a284b9024100931321470cd0f6cd24d4278bf8e61f9d69b6ef2bf3163a944aa340f91c7ffdf33aeea22b18cc43514af6714a21bb148d6cdca14530a8fa65acd7a8f62bfc9b5f024067452059f8438dc61466488336fce3f00ec483ad04db638dce45daf850e5a8cd5635dc39b87f2fab32940247ec5167ddabe06e870858104500967ac687aa73e102407e3b7997503e18d8d0f094d5e0bd5d57cb93cb39a2fc42cec1ea9a1562786438b61139e45813204d72c919f5397e139ad051d98e4d0f8a06d237f42c0d8440fb\";\n  String publicKey=\"30819f300d06092a864886f70d010101050003818d003081890281810084cababdb38040f659c2cb07a36d758f46e84ebc3d6ba39d967aedf1d396b0788ed3ab868d45ce280b1102b434c2a250ddc3254defe1785ab4f94d7038cf69ecca16753d2de3f6ad8976b3f74902d8634111d730982da74e1a6e3fc0bc3523bba53e45b8a8cbfd0321b94efc9f7fefbe66ad85281e3d0323d87f4426ec51204f0203010001\";\n  String data=new UsageStatistics(publicKey).getStatData();\n  KeyFactory keyFactory=KeyFactory.getInstance(\"RSA\");\n  RSAPrivateKey priv=(RSAPrivateKey)keyFactory.generatePrivate(new PKCS8EncodedKeySpec(Util.fromHexString(privateKey)));\n  byte[] cipherText=Base64.getDecoder().decode(data.getBytes(StandardCharsets.UTF_8));\n  InputStreamReader r=new InputStreamReader(new GZIPInputStream(new CombinedCipherInputStream(new ByteArrayInputStream(cipherText),priv,\"AES\")),StandardCharsets.UTF_8);\n  JSONObject o=JSONObject.fromObject(IOUtils.toString(r));\n  Jenkins jenkins=j.jenkins;\n  assertEquals(1,o.getInt(\"stat\"));\n  assertEquals(jenkins.getLegacyInstanceId(),o.getString(\"install\"));\n  assertEquals(jenkins.servletContext.getServerInfo(),o.getString(\"servletContainer\"));\n  assertEquals(Jenkins.VERSION,o.getString(\"version\"));\n  assertTrue(o.has(\"plugins\"));\n  assertTrue(o.has(\"jobs\"));\n  assertTrue(o.has(\"nodes\"));\n  List<JSONObject> plugins=sortPlugins((List<JSONObject>)o.get(\"plugins\"));\n  Set<String> keys=new TreeSet<>();\n  keys.add(\"name\");\n  keys.add(\"version\");\n  Set<String> reported=new TreeSet<>();\n  for (  JSONObject plugin : plugins) {\n    assertThat(plugin.keySet(),is((Set)keys));\n    assertThat(plugin.get(\"name\"),instanceOf(String.class));\n    assertThat(plugin.get(\"version\"),instanceOf(String.class));\n    String name=plugin.getString(\"name\");\n    assertThat(\"No duplicates\",reported.contains(name),is(false));\n    reported.add(name);\n  }\n  assertThat(reported,hasItem(\"matrix-auth\"));\n  compareWithFile(\"jobs.json\",sortJobTypes((JSONObject)o.get(\"jobs\")));\n  JSONArray nodes=o.getJSONArray(\"nodes\");\n  for (  Object node : nodes) {\n    ((JSONObject)node).remove(\"os\");\n  }\n  compareWithFile(\"nodes.json\",nodes);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 364,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4438,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Makes sure that the stat data can be decrypted safely.\n */\n@Test public void roundtrip() throws Exception {\n  ((TestPluginManager)j.jenkins.pluginManager).installDetachedPlugin(\"matrix-auth\");\n  j.createOnlineSlave();\n  warmUpNodeMonitorCache();\n  String privateKey=\"30820276020100300d06092a864886f70d0101010500048202603082025c0201000281810084cababdb38040f659c2cb07a36d758f46e84ebc3d6ba39d967aedf1d396b0788ed3ab868d45ce280b1102b434c2a250ddc3254defe1785ab4f94d7038cf69ecca16753d2de3f6ad8976b3f74902d8634111d730982da74e1a6e3fc0bc3523bba53e45b8a8cbfd0321b94efc9f7fefbe66ad85281e3d0323d87f4426ec51204f0203010001028180784deaacdea8bd31f2d44578601954be3f714b93c2d977dbd76efb8f71303e249ad12dbeb2d2a1192a1d7923a6010768d7e06a3597b3df83de1d5688eb0f0e58c76070eddd696682730c93890dc727564c65dc8416bfbde5aad4eb7a97ed923efb55a291daf3c00810c0e43851298472fd539aab355af8cedcf1e9a0cbead661024100c498375102b068806c71dec838dc8dfa5624fb8a524a49cffadc19d10689a8c9c26db514faba6f96e50a605122abd3c9af16e82f2b7565f384528c9f31ea5947024100aceafd31d7f4872a873c7e5fe88f20c2fb086a053c6970026b3ce364768e2033100efb1ad8f2010fe53454a29decedc23a8a0c8df347742b1f13e11bd3a284b9024100931321470cd0f6cd24d4278bf8e61f9d69b6ef2bf3163a944aa340f91c7ffdf33aeea22b18cc43514af6714a21bb148d6cdca14530a8fa65acd7a8f62bfc9b5f024067452059f8438dc61466488336fce3f00ec483ad04db638dce45daf850e5a8cd5635dc39b87f2fab32940247ec5167ddabe06e870858104500967ac687aa73e102407e3b7997503e18d8d0f094d5e0bd5d57cb93cb39a2fc42cec1ea9a1562786438b61139e45813204d72c919f5397e139ad051d98e4d0f8a06d237f42c0d8440fb\";\n  String publicKey=\"30819f300d06092a864886f70d010101050003818d003081890281810084cababdb38040f659c2cb07a36d758f46e84ebc3d6ba39d967aedf1d396b0788ed3ab868d45ce280b1102b434c2a250ddc3254defe1785ab4f94d7038cf69ecca16753d2de3f6ad8976b3f74902d8634111d730982da74e1a6e3fc0bc3523bba53e45b8a8cbfd0321b94efc9f7fefbe66ad85281e3d0323d87f4426ec51204f0203010001\";\n  String data=new UsageStatistics(publicKey).getStatData();\n  KeyFactory keyFactory=KeyFactory.getInstance(\"RSA\");\n  RSAPrivateKey priv=(RSAPrivateKey)keyFactory.generatePrivate(new PKCS8EncodedKeySpec(Util.fromHexString(privateKey)));\n  byte[] cipherText=Base64.getDecoder().decode(data.getBytes(StandardCharsets.UTF_8));\n  InputStreamReader r=new InputStreamReader(new GZIPInputStream(new CombinedCipherInputStream(new ByteArrayInputStream(cipherText),priv,\"AES\")),StandardCharsets.UTF_8);\n  JSONObject o=JSONObject.fromObject(IOUtils.toString(r));\n  Jenkins jenkins=j.jenkins;\n  assertEquals(1,o.getInt(\"stat\"));\n  assertEquals(jenkins.getLegacyInstanceId(),o.getString(\"install\"));\n  assertEquals(jenkins.servletContext.getServerInfo(),o.getString(\"servletContainer\"));\n  assertEquals(Jenkins.VERSION,o.getString(\"version\"));\n  assertTrue(o.has(\"plugins\"));\n  assertTrue(o.has(\"jobs\"));\n  assertTrue(o.has(\"nodes\"));\n  List<JSONObject> plugins=sortPlugins((List<JSONObject>)o.get(\"plugins\"));\n  Set<String> keys=new TreeSet<>();\n  keys.add(\"name\");\n  keys.add(\"version\");\n  Set<String> reported=new TreeSet<>();\n  for (  JSONObject plugin : plugins) {\n    assertThat(plugin.keySet(),is((Set)keys));\n    assertThat(plugin.get(\"name\"),instanceOf(String.class));\n    assertThat(plugin.get(\"version\"),instanceOf(String.class));\n    String name=plugin.getString(\"name\");\n    assertThat(\"No duplicates\",reported.contains(name),is(false));\n    reported.add(name);\n  }\n  assertThat(reported,hasItem(\"matrix-auth\"));\n  compareWithFile(\"jobs.json\",sortJobTypes((JSONObject)o.get(\"jobs\")));\n  JSONArray nodes=o.getJSONArray(\"nodes\");\n  for (  Object node : nodes) {\n    ((JSONObject)node).remove(\"os\");\n  }\n  compareWithFile(\"nodes.json\",nodes);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 373,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 45
      },
      "nodeContext" : "((JSONObject)node).remove(\"os\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 126,
    "startColumnNumber" : 39,
    "endLineNumber" : 126,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}