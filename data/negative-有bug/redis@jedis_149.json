{
  "id" : 149,
  "expression" : "commandObject",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/main/java/redis/clients/jedis/executors/RetryableCommandExecutor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "commandObject",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 46,
      "startColumnNumber" : 44,
      "endLineNumber" : 46,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 46,
        "startColumnNumber" : 44,
        "endLineNumber" : 46,
        "endColumnNumber" : 72
      },
      "nodeContext" : "commandObject.getArguments()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 46,
        "startColumnNumber" : 21,
        "endLineNumber" : 46,
        "endColumnNumber" : 73
      },
      "nodeContext" : "provider.getConnection(commandObject.getArguments())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 73
      },
      "nodeContext" : "connection=provider.getConnection(commandObject.getArguments())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 74
      },
      "nodeContext" : "connection=provider.getConnection(commandObject.getArguments());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 45,
        "startColumnNumber" : 10,
        "endLineNumber" : 50,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  connection=provider.getConnection(commandObject.getArguments());\n  return execute(connection,commandObject);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  connection=provider.getConnection(commandObject.getArguments());\n  return execute(connection,commandObject);\n}\n catch (JedisConnectionException jce) {\n  lastException=jce;\n  ++consecutiveConnectionFailures;\n  log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n  boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n  if (reset) {\n    consecutiveConnectionFailures=0;\n  }\n}\n finally {\n  if (connection != null) {\n    connection.close();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 43,
        "startColumnNumber" : 80,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Connection connection=null;\n  try {\n    connection=provider.getConnection(commandObject.getArguments());\n    return execute(connection,commandObject);\n  }\n catch (  JedisConnectionException jce) {\n    lastException=jce;\n    ++consecutiveConnectionFailures;\n    log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n    boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n    if (reset) {\n      consecutiveConnectionFailures=0;\n    }\n  }\n finally {\n    if (connection != null) {\n      connection.close();\n    }\n  }\n  if (Instant.now().isAfter(deadline)) {\n    throw new JedisException(\"Retry deadline exceeded.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 968,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int attemptsLeft=this.maxAttempts; attemptsLeft > 0; attemptsLeft--) {\n  Connection connection=null;\n  try {\n    connection=provider.getConnection(commandObject.getArguments());\n    return execute(connection,commandObject);\n  }\n catch (  JedisConnectionException jce) {\n    lastException=jce;\n    ++consecutiveConnectionFailures;\n    log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n    boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n    if (reset) {\n      consecutiveConnectionFailures=0;\n    }\n  }\n finally {\n    if (connection != null) {\n      connection.close();\n    }\n  }\n  if (Instant.now().isAfter(deadline)) {\n    throw new JedisException(\"Retry deadline exceeded.\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 37,
        "startColumnNumber" : 68,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Instant deadline=Instant.now().plus(maxTotalRetriesDuration);\n  int consecutiveConnectionFailures=0;\n  JedisException lastException=null;\n  for (int attemptsLeft=this.maxAttempts; attemptsLeft > 0; attemptsLeft--) {\n    Connection connection=null;\n    try {\n      connection=provider.getConnection(commandObject.getArguments());\n      return execute(connection,commandObject);\n    }\n catch (    JedisConnectionException jce) {\n      lastException=jce;\n      ++consecutiveConnectionFailures;\n      log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n      boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n      if (reset) {\n        consecutiveConnectionFailures=0;\n      }\n    }\n finally {\n      if (connection != null) {\n        connection.close();\n      }\n    }\n    if (Instant.now().isAfter(deadline)) {\n      throw new JedisException(\"Retry deadline exceeded.\");\n    }\n  }\n  JedisException maxAttemptsException=new JedisException(\"No more attempts left.\");\n  maxAttemptsException.addSuppressed(lastException);\n  throw maxAttemptsException;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1398,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public final <T>T executeCommand(CommandObject<T> commandObject){\n  Instant deadline=Instant.now().plus(maxTotalRetriesDuration);\n  int consecutiveConnectionFailures=0;\n  JedisException lastException=null;\n  for (int attemptsLeft=this.maxAttempts; attemptsLeft > 0; attemptsLeft--) {\n    Connection connection=null;\n    try {\n      connection=provider.getConnection(commandObject.getArguments());\n      return execute(connection,commandObject);\n    }\n catch (    JedisConnectionException jce) {\n      lastException=jce;\n      ++consecutiveConnectionFailures;\n      log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n      boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n      if (reset) {\n        consecutiveConnectionFailures=0;\n      }\n    }\n finally {\n      if (connection != null) {\n        connection.close();\n      }\n    }\n    if (Instant.now().isAfter(deadline)) {\n      throw new JedisException(\"Retry deadline exceeded.\");\n    }\n  }\n  JedisException maxAttemptsException=new JedisException(\"No more attempts left.\");\n  maxAttemptsException.addSuppressed(lastException);\n  throw maxAttemptsException;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 74
      },
      "nodeContext" : "connection=provider.getConnection(commandObject.getArguments());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.executors.CommandObject<T>"
  }, {
    "nodeContext" : "commandObject",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 48,
      "startColumnNumber" : 35,
      "endLineNumber" : 48,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 48,
        "endColumnNumber" : 49
      },
      "nodeContext" : "execute(connection,commandObject)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 50
      },
      "nodeContext" : "return execute(connection,commandObject);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 45,
        "startColumnNumber" : 10,
        "endLineNumber" : 50,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  connection=provider.getConnection(commandObject.getArguments());\n  return execute(connection,commandObject);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  connection=provider.getConnection(commandObject.getArguments());\n  return execute(connection,commandObject);\n}\n catch (JedisConnectionException jce) {\n  lastException=jce;\n  ++consecutiveConnectionFailures;\n  log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n  boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n  if (reset) {\n    consecutiveConnectionFailures=0;\n  }\n}\n finally {\n  if (connection != null) {\n    connection.close();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 43,
        "startColumnNumber" : 80,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Connection connection=null;\n  try {\n    connection=provider.getConnection(commandObject.getArguments());\n    return execute(connection,commandObject);\n  }\n catch (  JedisConnectionException jce) {\n    lastException=jce;\n    ++consecutiveConnectionFailures;\n    log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n    boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n    if (reset) {\n      consecutiveConnectionFailures=0;\n    }\n  }\n finally {\n    if (connection != null) {\n      connection.close();\n    }\n  }\n  if (Instant.now().isAfter(deadline)) {\n    throw new JedisException(\"Retry deadline exceeded.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 968,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int attemptsLeft=this.maxAttempts; attemptsLeft > 0; attemptsLeft--) {\n  Connection connection=null;\n  try {\n    connection=provider.getConnection(commandObject.getArguments());\n    return execute(connection,commandObject);\n  }\n catch (  JedisConnectionException jce) {\n    lastException=jce;\n    ++consecutiveConnectionFailures;\n    log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n    boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n    if (reset) {\n      consecutiveConnectionFailures=0;\n    }\n  }\n finally {\n    if (connection != null) {\n      connection.close();\n    }\n  }\n  if (Instant.now().isAfter(deadline)) {\n    throw new JedisException(\"Retry deadline exceeded.\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 37,
        "startColumnNumber" : 68,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Instant deadline=Instant.now().plus(maxTotalRetriesDuration);\n  int consecutiveConnectionFailures=0;\n  JedisException lastException=null;\n  for (int attemptsLeft=this.maxAttempts; attemptsLeft > 0; attemptsLeft--) {\n    Connection connection=null;\n    try {\n      connection=provider.getConnection(commandObject.getArguments());\n      return execute(connection,commandObject);\n    }\n catch (    JedisConnectionException jce) {\n      lastException=jce;\n      ++consecutiveConnectionFailures;\n      log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n      boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n      if (reset) {\n        consecutiveConnectionFailures=0;\n      }\n    }\n finally {\n      if (connection != null) {\n        connection.close();\n      }\n    }\n    if (Instant.now().isAfter(deadline)) {\n      throw new JedisException(\"Retry deadline exceeded.\");\n    }\n  }\n  JedisException maxAttemptsException=new JedisException(\"No more attempts left.\");\n  maxAttemptsException.addSuppressed(lastException);\n  throw maxAttemptsException;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1398,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public final <T>T executeCommand(CommandObject<T> commandObject){\n  Instant deadline=Instant.now().plus(maxTotalRetriesDuration);\n  int consecutiveConnectionFailures=0;\n  JedisException lastException=null;\n  for (int attemptsLeft=this.maxAttempts; attemptsLeft > 0; attemptsLeft--) {\n    Connection connection=null;\n    try {\n      connection=provider.getConnection(commandObject.getArguments());\n      return execute(connection,commandObject);\n    }\n catch (    JedisConnectionException jce) {\n      lastException=jce;\n      ++consecutiveConnectionFailures;\n      log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n      boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n      if (reset) {\n        consecutiveConnectionFailures=0;\n      }\n    }\n finally {\n      if (connection != null) {\n        connection.close();\n      }\n    }\n    if (Instant.now().isAfter(deadline)) {\n      throw new JedisException(\"Retry deadline exceeded.\");\n    }\n  }\n  JedisException maxAttemptsException=new JedisException(\"No more attempts left.\");\n  maxAttemptsException.addSuppressed(lastException);\n  throw maxAttemptsException;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 50
      },
      "nodeContext" : "return execute(connection,commandObject);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.executors.CommandObject<T>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 46,
    "startColumnNumber" : 44,
    "endLineNumber" : 46,
    "endColumnNumber" : 57
  }, {
    "charLength" : 13,
    "startLineNumber" : 48,
    "startColumnNumber" : 35,
    "endLineNumber" : 48,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}