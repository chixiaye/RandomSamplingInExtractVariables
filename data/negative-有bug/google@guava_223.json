{
  "id" : 223,
  "expression" : "new LineProcessor<Integer>(){\n  int seen;\n  @Override public boolean processLine(  String line){\n    seen++;\n    return true;\n  }\n  @Override public Integer getResult(){\n    return seen;\n  }\n}\n",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/io/CharStreamsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new LineProcessor<Integer>(){\n  int seen;\n  @Override public boolean processLine(  String line){\n    seen++;\n    return true;\n  }\n  @Override public Integer getResult(){\n    return seen;\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 300,
      "startLineNumber" : 77,
      "startColumnNumber" : 8,
      "endLineNumber" : 90,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 37,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "alwaysTrue=new LineProcessor<Integer>(){\n  int seen;\n  @Override public boolean processLine(  String line){\n    seen++;\n    return true;\n  }\n  @Override public Integer getResult(){\n    return seen;\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 10
      },
      "nodeContext" : "LineProcessor<Integer> alwaysTrue=new LineProcessor<Integer>(){\n  int seen;\n  @Override public boolean processLine(  String line){\n    seen++;\n    return true;\n  }\n  @Override public Integer getResult(){\n    return seen;\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 49,
        "startColumnNumber" : 67,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String text=\"a\\nb\\nc\";\n  Reader r=new StringReader(text);\n  LineProcessor<Integer> alwaysFalse=new LineProcessor<Integer>(){\n    int seen;\n    @Override public boolean processLine(    String line){\n      seen++;\n      return false;\n    }\n    @Override public Integer getResult(){\n      return seen;\n    }\n  }\n;\n  assertEquals(\"processLine was called more than once\",1,CharStreams.readLines(r,alwaysFalse).intValue());\n  r=new StringReader(text);\n  LineProcessor<Integer> alwaysTrue=new LineProcessor<Integer>(){\n    int seen;\n    @Override public boolean processLine(    String line){\n      seen++;\n      return true;\n    }\n    @Override public Integer getResult(){\n      return seen;\n    }\n  }\n;\n  assertEquals(\"processLine was not called for all the lines\",3,CharStreams.readLines(r,alwaysTrue).intValue());\n  r=new StringReader(text);\n  final StringBuilder sb=new StringBuilder();\n  LineProcessor<Integer> conditional=new LineProcessor<Integer>(){\n    int seen;\n    @Override public boolean processLine(    String line){\n      seen++;\n      sb.append(line);\n      return seen < 2;\n    }\n    @Override public Integer getResult(){\n      return seen;\n    }\n  }\n;\n  assertEquals(2,CharStreams.readLines(r,conditional).intValue());\n  assertEquals(\"ab\",sb.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1918,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testReadLines_withLineProcessor() throws IOException {\n  String text=\"a\\nb\\nc\";\n  Reader r=new StringReader(text);\n  LineProcessor<Integer> alwaysFalse=new LineProcessor<Integer>(){\n    int seen;\n    @Override public boolean processLine(    String line){\n      seen++;\n      return false;\n    }\n    @Override public Integer getResult(){\n      return seen;\n    }\n  }\n;\n  assertEquals(\"processLine was called more than once\",1,CharStreams.readLines(r,alwaysFalse).intValue());\n  r=new StringReader(text);\n  LineProcessor<Integer> alwaysTrue=new LineProcessor<Integer>(){\n    int seen;\n    @Override public boolean processLine(    String line){\n      seen++;\n      return true;\n    }\n    @Override public Integer getResult(){\n      return seen;\n    }\n  }\n;\n  assertEquals(\"processLine was not called for all the lines\",3,CharStreams.readLines(r,alwaysTrue).intValue());\n  r=new StringReader(text);\n  final StringBuilder sb=new StringBuilder();\n  LineProcessor<Integer> conditional=new LineProcessor<Integer>(){\n    int seen;\n    @Override public boolean processLine(    String line){\n      seen++;\n      sb.append(line);\n      return seen < 2;\n    }\n    @Override public Integer getResult(){\n      return seen;\n    }\n  }\n;\n  assertEquals(2,CharStreams.readLines(r,conditional).intValue());\n  assertEquals(\"ab\",sb.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 229,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "alwaysTrue=new LineProcessor<Integer>(){\n  int seen;\n  @Override public boolean processLine(  String line){\n    seen++;\n    return true;\n  }\n  @Override public Integer getResult(){\n    return seen;\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 39,
      "astHeight" : 8
    },
    "tokenLength" : 12,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 300,
    "startLineNumber" : 77,
    "startColumnNumber" : 8,
    "endLineNumber" : 90,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}