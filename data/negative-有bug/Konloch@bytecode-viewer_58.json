{
  "id" : 58,
  "expression" : "tempJarFolder.getAbsolutePath()",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/compilers/impl/SmaliAssembler.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tempJarFolder.getAbsolutePath()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 82,
      "startColumnNumber" : 49,
      "endLineNumber" : 82,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 82,
        "startColumnNumber" : 31,
        "endLineNumber" : 82,
        "endColumnNumber" : 80
      },
      "nodeContext" : "\"Unzipping to \" + tempJarFolder.getAbsolutePath()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 81
      },
      "nodeContext" : "System.out.println(\"Unzipping to \" + tempJarFolder.getAbsolutePath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 82
      },
      "nodeContext" : "System.out.println(\"Unzipping to \" + tempJarFolder.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.out.println(\"Unzipping to \" + tempJarFolder.getAbsolutePath());\n  ZipUtils.unzipFilesToPath(tempJar.getAbsolutePath(),tempJarFolder.getAbsolutePath());\n  File outputClass=null;\n  boolean found=false;\n  File current=tempJarFolder;\n  try {\n    while (!found) {\n      File f=Objects.requireNonNull(current.listFiles())[0];\n      if (f.isDirectory())       current=f;\n else {\n        outputClass=f;\n        found=true;\n      }\n    }\n    System.out.println(\"Saved as: \" + outputClass.getAbsolutePath());\n    return FileUtils.readFileToByteArray(outputClass);\n  }\n catch (  java.lang.NullPointerException ignored) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1112,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  System.out.println(\"Unzipping to \" + tempJarFolder.getAbsolutePath());\n  ZipUtils.unzipFilesToPath(tempJar.getAbsolutePath(),tempJarFolder.getAbsolutePath());\n  File outputClass=null;\n  boolean found=false;\n  File current=tempJarFolder;\n  try {\n    while (!found) {\n      File f=Objects.requireNonNull(current.listFiles())[0];\n      if (f.isDirectory())       current=f;\n else {\n        outputClass=f;\n        found=true;\n      }\n    }\n    System.out.println(\"Saved as: \" + outputClass.getAbsolutePath());\n    return FileUtils.readFileToByteArray(outputClass);\n  }\n catch (  java.lang.NullPointerException ignored) {\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n}\n finally {\n  tempDex.delete();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2676,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String fileStart=tempDirectory + fs + \"temp\";\n  int fileNumber=MiscUtils.getClassNumber(fileStart,\".dex\");\n  final File tempSmaliFolder=new File(fileStart + fileNumber + \"-smalifolder\"+ fs);\n  tempSmaliFolder.mkdir();\n  File tempSmali=new File(tempSmaliFolder.getAbsolutePath() + fs + fileNumber+ \".smali\");\n  File tempDex=new File(\"./out.dex\");\n  File tempJar=new File(fileStart + fileNumber + \".jar\");\n  File tempJarFolder=new File(fileStart + fileNumber + \"-jar\"+ fs);\n  try {\n    DiskWriter.replaceFile(tempSmali.getAbsolutePath(),contents,false);\n  }\n catch (  final Exception e) {\n    e.printStackTrace();\n  }\n  try {\n    com.googlecode.d2j.smali.SmaliCmd.main(new String[]{tempSmaliFolder.getAbsolutePath()});\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionDex.getModel()))   Dex2Jar.dex2Jar(tempDex,tempJar);\n else   if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionEnjarify.getModel()))   Enjarify.apk2Jar(tempDex,tempJar);\n  System.out.println(\"Temporary dex: \" + tempDex.getAbsolutePath());\n  try {\n    System.out.println(\"Unzipping to \" + tempJarFolder.getAbsolutePath());\n    ZipUtils.unzipFilesToPath(tempJar.getAbsolutePath(),tempJarFolder.getAbsolutePath());\n    File outputClass=null;\n    boolean found=false;\n    File current=tempJarFolder;\n    try {\n      while (!found) {\n        File f=Objects.requireNonNull(current.listFiles())[0];\n        if (f.isDirectory())         current=f;\n else {\n          outputClass=f;\n          found=true;\n        }\n      }\n      System.out.println(\"Saved as: \" + outputClass.getAbsolutePath());\n      return FileUtils.readFileToByteArray(outputClass);\n    }\n catch (    java.lang.NullPointerException ignored) {\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n finally {\n    tempDex.delete();\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 313,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2746,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public byte[] compile(String contents,String name){\n  String fileStart=tempDirectory + fs + \"temp\";\n  int fileNumber=MiscUtils.getClassNumber(fileStart,\".dex\");\n  final File tempSmaliFolder=new File(fileStart + fileNumber + \"-smalifolder\"+ fs);\n  tempSmaliFolder.mkdir();\n  File tempSmali=new File(tempSmaliFolder.getAbsolutePath() + fs + fileNumber+ \".smali\");\n  File tempDex=new File(\"./out.dex\");\n  File tempJar=new File(fileStart + fileNumber + \".jar\");\n  File tempJarFolder=new File(fileStart + fileNumber + \"-jar\"+ fs);\n  try {\n    DiskWriter.replaceFile(tempSmali.getAbsolutePath(),contents,false);\n  }\n catch (  final Exception e) {\n    e.printStackTrace();\n  }\n  try {\n    com.googlecode.d2j.smali.SmaliCmd.main(new String[]{tempSmaliFolder.getAbsolutePath()});\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionDex.getModel()))   Dex2Jar.dex2Jar(tempDex,tempJar);\n else   if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionEnjarify.getModel()))   Enjarify.apk2Jar(tempDex,tempJar);\n  System.out.println(\"Temporary dex: \" + tempDex.getAbsolutePath());\n  try {\n    System.out.println(\"Unzipping to \" + tempJarFolder.getAbsolutePath());\n    ZipUtils.unzipFilesToPath(tempJar.getAbsolutePath(),tempJarFolder.getAbsolutePath());\n    File outputClass=null;\n    boolean found=false;\n    File current=tempJarFolder;\n    try {\n      while (!found) {\n        File f=Objects.requireNonNull(current.listFiles())[0];\n        if (f.isDirectory())         current=f;\n else {\n          outputClass=f;\n          found=true;\n        }\n      }\n      System.out.println(\"Saved as: \" + outputClass.getAbsolutePath());\n      return FileUtils.readFileToByteArray(outputClass);\n    }\n catch (    java.lang.NullPointerException ignored) {\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n finally {\n    tempDex.delete();\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 329,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 82
      },
      "nodeContext" : "System.out.println(\"Unzipping to \" + tempJarFolder.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "tempJarFolder.getAbsolutePath()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 83,
      "startColumnNumber" : 65,
      "endLineNumber" : 83,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 97
      },
      "nodeContext" : "ZipUtils.unzipFilesToPath(tempJar.getAbsolutePath(),tempJarFolder.getAbsolutePath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 98
      },
      "nodeContext" : "ZipUtils.unzipFilesToPath(tempJar.getAbsolutePath(),tempJarFolder.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.out.println(\"Unzipping to \" + tempJarFolder.getAbsolutePath());\n  ZipUtils.unzipFilesToPath(tempJar.getAbsolutePath(),tempJarFolder.getAbsolutePath());\n  File outputClass=null;\n  boolean found=false;\n  File current=tempJarFolder;\n  try {\n    while (!found) {\n      File f=Objects.requireNonNull(current.listFiles())[0];\n      if (f.isDirectory())       current=f;\n else {\n        outputClass=f;\n        found=true;\n      }\n    }\n    System.out.println(\"Saved as: \" + outputClass.getAbsolutePath());\n    return FileUtils.readFileToByteArray(outputClass);\n  }\n catch (  java.lang.NullPointerException ignored) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1112,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  System.out.println(\"Unzipping to \" + tempJarFolder.getAbsolutePath());\n  ZipUtils.unzipFilesToPath(tempJar.getAbsolutePath(),tempJarFolder.getAbsolutePath());\n  File outputClass=null;\n  boolean found=false;\n  File current=tempJarFolder;\n  try {\n    while (!found) {\n      File f=Objects.requireNonNull(current.listFiles())[0];\n      if (f.isDirectory())       current=f;\n else {\n        outputClass=f;\n        found=true;\n      }\n    }\n    System.out.println(\"Saved as: \" + outputClass.getAbsolutePath());\n    return FileUtils.readFileToByteArray(outputClass);\n  }\n catch (  java.lang.NullPointerException ignored) {\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n}\n finally {\n  tempDex.delete();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2676,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String fileStart=tempDirectory + fs + \"temp\";\n  int fileNumber=MiscUtils.getClassNumber(fileStart,\".dex\");\n  final File tempSmaliFolder=new File(fileStart + fileNumber + \"-smalifolder\"+ fs);\n  tempSmaliFolder.mkdir();\n  File tempSmali=new File(tempSmaliFolder.getAbsolutePath() + fs + fileNumber+ \".smali\");\n  File tempDex=new File(\"./out.dex\");\n  File tempJar=new File(fileStart + fileNumber + \".jar\");\n  File tempJarFolder=new File(fileStart + fileNumber + \"-jar\"+ fs);\n  try {\n    DiskWriter.replaceFile(tempSmali.getAbsolutePath(),contents,false);\n  }\n catch (  final Exception e) {\n    e.printStackTrace();\n  }\n  try {\n    com.googlecode.d2j.smali.SmaliCmd.main(new String[]{tempSmaliFolder.getAbsolutePath()});\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionDex.getModel()))   Dex2Jar.dex2Jar(tempDex,tempJar);\n else   if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionEnjarify.getModel()))   Enjarify.apk2Jar(tempDex,tempJar);\n  System.out.println(\"Temporary dex: \" + tempDex.getAbsolutePath());\n  try {\n    System.out.println(\"Unzipping to \" + tempJarFolder.getAbsolutePath());\n    ZipUtils.unzipFilesToPath(tempJar.getAbsolutePath(),tempJarFolder.getAbsolutePath());\n    File outputClass=null;\n    boolean found=false;\n    File current=tempJarFolder;\n    try {\n      while (!found) {\n        File f=Objects.requireNonNull(current.listFiles())[0];\n        if (f.isDirectory())         current=f;\n else {\n          outputClass=f;\n          found=true;\n        }\n      }\n      System.out.println(\"Saved as: \" + outputClass.getAbsolutePath());\n      return FileUtils.readFileToByteArray(outputClass);\n    }\n catch (    java.lang.NullPointerException ignored) {\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n finally {\n    tempDex.delete();\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 313,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2746,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public byte[] compile(String contents,String name){\n  String fileStart=tempDirectory + fs + \"temp\";\n  int fileNumber=MiscUtils.getClassNumber(fileStart,\".dex\");\n  final File tempSmaliFolder=new File(fileStart + fileNumber + \"-smalifolder\"+ fs);\n  tempSmaliFolder.mkdir();\n  File tempSmali=new File(tempSmaliFolder.getAbsolutePath() + fs + fileNumber+ \".smali\");\n  File tempDex=new File(\"./out.dex\");\n  File tempJar=new File(fileStart + fileNumber + \".jar\");\n  File tempJarFolder=new File(fileStart + fileNumber + \"-jar\"+ fs);\n  try {\n    DiskWriter.replaceFile(tempSmali.getAbsolutePath(),contents,false);\n  }\n catch (  final Exception e) {\n    e.printStackTrace();\n  }\n  try {\n    com.googlecode.d2j.smali.SmaliCmd.main(new String[]{tempSmaliFolder.getAbsolutePath()});\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionDex.getModel()))   Dex2Jar.dex2Jar(tempDex,tempJar);\n else   if (BytecodeViewer.viewer.apkConversionGroup.isSelected(BytecodeViewer.viewer.apkConversionEnjarify.getModel()))   Enjarify.apk2Jar(tempDex,tempJar);\n  System.out.println(\"Temporary dex: \" + tempDex.getAbsolutePath());\n  try {\n    System.out.println(\"Unzipping to \" + tempJarFolder.getAbsolutePath());\n    ZipUtils.unzipFilesToPath(tempJar.getAbsolutePath(),tempJarFolder.getAbsolutePath());\n    File outputClass=null;\n    boolean found=false;\n    File current=tempJarFolder;\n    try {\n      while (!found) {\n        File f=Objects.requireNonNull(current.listFiles())[0];\n        if (f.isDirectory())         current=f;\n else {\n          outputClass=f;\n          found=true;\n        }\n      }\n      System.out.println(\"Saved as: \" + outputClass.getAbsolutePath());\n      return FileUtils.readFileToByteArray(outputClass);\n    }\n catch (    java.lang.NullPointerException ignored) {\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n finally {\n    tempDex.delete();\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 329,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 98
      },
      "nodeContext" : "ZipUtils.unzipFilesToPath(tempJar.getAbsolutePath(),tempJarFolder.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 82,
    "startColumnNumber" : 49,
    "endLineNumber" : 82,
    "endColumnNumber" : 80
  }, {
    "charLength" : 31,
    "startLineNumber" : 83,
    "startColumnNumber" : 65,
    "endLineNumber" : 83,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}