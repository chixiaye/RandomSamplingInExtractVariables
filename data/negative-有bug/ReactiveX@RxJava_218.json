{
  "id" : 218,
  "expression" : "PublishProcessor.create()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableRetryWithPredicateTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "PublishProcessor.create()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 211,
      "startColumnNumber" : 44,
      "endLineNumber" : 211,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 211,
        "startColumnNumber" : 34,
        "endLineNumber" : 211,
        "endColumnNumber" : 69
      },
      "nodeContext" : "subject=PublishProcessor.create()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 211,
        "startColumnNumber" : 8,
        "endLineNumber" : 211,
        "endColumnNumber" : 70
      },
      "nodeContext" : "PublishProcessor<Integer> subject=PublishProcessor.create();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 210,
        "startColumnNumber" : 43,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PublishProcessor<Integer> subject=PublishProcessor.create();\n  final AtomicInteger count=new AtomicInteger(0);\n  Disposable sub=subject.retry(retryTwice).subscribe(new Consumer<Integer>(){\n    @Override public void accept(    Integer n){\n      count.incrementAndGet();\n    }\n  }\n);\n  subject.onNext(1);\n  sub.dispose();\n  subject.onNext(2);\n  assertEquals(1,count.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 534,
        "startLineNumber" : 209,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUnsubscribeFromRetry(){\n  PublishProcessor<Integer> subject=PublishProcessor.create();\n  final AtomicInteger count=new AtomicInteger(0);\n  Disposable sub=subject.retry(retryTwice).subscribe(new Consumer<Integer>(){\n    @Override public void accept(    Integer n){\n      count.incrementAndGet();\n    }\n  }\n);\n  subject.onNext(1);\n  sub.dispose();\n  subject.onNext(2);\n  assertEquals(1,count.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 211,
        "startColumnNumber" : 8,
        "endLineNumber" : 211,
        "endColumnNumber" : 70
      },
      "nodeContext" : "PublishProcessor<Integer> subject=PublishProcessor.create();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.reactivex.processors.PublishProcessor<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 211,
    "startColumnNumber" : 44,
    "endLineNumber" : 211,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}