{
  "id" : 189,
  "expression" : "embeddedObject",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/main/java/io/realm/DynamicRealm.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "embeddedObject",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 214,
      "startColumnNumber" : 44,
      "endLineNumber" : 214,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 214,
        "startColumnNumber" : 15,
        "endLineNumber" : 214,
        "endColumnNumber" : 59
      },
      "nodeContext" : "new DynamicRealmObject(this,embeddedObject)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 214,
        "endColumnNumber" : 60
      },
      "nodeContext" : "return new DynamicRealmObject(this,embeddedObject);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 189,
        "startColumnNumber" : 74,
        "endLineNumber" : 215,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkIfValid();\n  Util.checkNull(parentObject,\"parentObject\");\n  Util.checkEmpty(parentProperty,\"parentProperty\");\n  if (!RealmObject.isManaged(parentObject) || !RealmObject.isValid(parentObject)) {\n    throw new IllegalArgumentException(\"Only valid, managed objects can be a parent to an embedded object.\");\n  }\n  String pkField=OsObjectStore.getPrimaryKeyForObject(sharedRealm,className);\n  if (pkField != null) {\n    throw new RealmException(String.format(Locale.US,\"'%s' has a primary key field '%s', embedded objects cannot have primary keys.\",className,pkField));\n  }\n  String parentClassName=parentObject.getType();\n  RealmObjectSchema parentObjectSchema=schema.get(parentClassName);\n  if (parentObjectSchema == null) {\n    throw new IllegalStateException(String.format(\"No schema found for '%s'.\",parentClassName));\n  }\n  Row embeddedObject=getEmbeddedObjectRow(className,parentObject,parentProperty,schema,parentObjectSchema);\n  return new DynamicRealmObject(this,embeddedObject);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2316,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Instantiates and adds a new embedded object to the Realm. <p> This method should only be used to create objects of types marked as embedded.\n * @param className the class name of the object to create.\n * @param parentObject The parent object which should hold a reference to the embedded object.If the parent property is a list the embedded object will be added to the end of that list.\n * @param parentProperty the property in the parent class which holds the reference.\n * @return the newly created embedded object.\n * @throws IllegalArgumentException if {@code clazz} is not an embedded class or if the propertyin the parent class cannot hold objects of the appropriate type.\n * @see RealmClass#embedded()\n */\npublic DynamicRealmObject createEmbeddedObject(String className,DynamicRealmObject parentObject,String parentProperty){\n  checkIfValid();\n  Util.checkNull(parentObject,\"parentObject\");\n  Util.checkEmpty(parentProperty,\"parentProperty\");\n  if (!RealmObject.isManaged(parentObject) || !RealmObject.isValid(parentObject)) {\n    throw new IllegalArgumentException(\"Only valid, managed objects can be a parent to an embedded object.\");\n  }\n  String pkField=OsObjectStore.getPrimaryKeyForObject(sharedRealm,className);\n  if (pkField != null) {\n    throw new RealmException(String.format(Locale.US,\"'%s' has a primary key field '%s', embedded objects cannot have primary keys.\",className,pkField));\n  }\n  String parentClassName=parentObject.getType();\n  RealmObjectSchema parentObjectSchema=schema.get(parentClassName);\n  if (parentObjectSchema == null) {\n    throw new IllegalStateException(String.format(\"No schema found for '%s'.\",parentClassName));\n  }\n  Row embeddedObject=getEmbeddedObjectRow(className,parentObject,parentProperty,schema,parentObjectSchema);\n  return new DynamicRealmObject(this,embeddedObject);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 214,
        "endColumnNumber" : 60
      },
      "nodeContext" : "return new DynamicRealmObject(this,embeddedObject);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.realm.internal.Row"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 214,
    "startColumnNumber" : 44,
    "endLineNumber" : 214,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}