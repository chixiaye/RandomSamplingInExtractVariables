{
  "id" : 159,
  "expression" : "4.1",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/CEPITCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "4.1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 354,
      "startColumnNumber" : 64,
      "endLineNumber" : 354,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 354,
        "startColumnNumber" : 42,
        "endLineNumber" : 354,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new Event(3,\"start\",4.1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 354,
        "startColumnNumber" : 32,
        "endLineNumber" : 354,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Tuple2.of(new Event(3,\"start\",4.1),5L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 348,
        "startColumnNumber" : 16,
        "endLineNumber" : 359,
        "endColumnNumber" : 72
      },
      "nodeContext" : "env.fromElements(Tuple2.of(new Event(1,\"start\",1.0),5L),Tuple2.of(new Event(1,\"middle\",2.0),1L),Tuple2.of(new Event(2,\"middle\",2.0),4L),Tuple2.of(new Event(2,\"start\",2.0),3L),Tuple2.of(new Event(1,\"end\",3.0),3L),Tuple2.of(new Event(3,\"start\",4.1),5L),Tuple2.of(new Event(1,\"end\",4.0),10L),Tuple2.of(new Event(2,\"end\",2.0),8L),Tuple2.of(new Event(1,\"middle\",5.0),7L),Tuple2.of(new Event(3,\"middle\",6.0),9L),Tuple2.of(new Event(3,\"end\",7.0),7L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 113,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1726,
        "startLineNumber" : 348,
        "startColumnNumber" : 16,
        "endLineNumber" : 375,
        "endColumnNumber" : 34
      },
      "nodeContext" : "env.fromElements(Tuple2.of(new Event(1,\"start\",1.0),5L),Tuple2.of(new Event(1,\"middle\",2.0),1L),Tuple2.of(new Event(2,\"middle\",2.0),4L),Tuple2.of(new Event(2,\"start\",2.0),3L),Tuple2.of(new Event(1,\"end\",3.0),3L),Tuple2.of(new Event(3,\"start\",4.1),5L),Tuple2.of(new Event(1,\"end\",4.0),10L),Tuple2.of(new Event(2,\"end\",2.0),8L),Tuple2.of(new Event(1,\"middle\",5.0),7L),Tuple2.of(new Event(3,\"middle\",6.0),9L),Tuple2.of(new Event(3,\"end\",7.0),7L)).assignTimestampsAndWatermarks(new AssignerWithPunctuatedWatermarks<Tuple2<Event,Long>>(){\n  @Override public long extractTimestamp(  Tuple2<Event,Long> element,  long currentTimestamp){\n    return element.f1;\n  }\n  @Override public Watermark checkAndGetNextWatermark(  Tuple2<Event,Long> lastElement,  long extractedTimestamp){\n    return new Watermark(lastElement.f1 - 5);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 179,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2112,
        "startLineNumber" : 348,
        "startColumnNumber" : 16,
        "endLineNumber" : 383,
        "endColumnNumber" : 34
      },
      "nodeContext" : "env.fromElements(Tuple2.of(new Event(1,\"start\",1.0),5L),Tuple2.of(new Event(1,\"middle\",2.0),1L),Tuple2.of(new Event(2,\"middle\",2.0),4L),Tuple2.of(new Event(2,\"start\",2.0),3L),Tuple2.of(new Event(1,\"end\",3.0),3L),Tuple2.of(new Event(3,\"start\",4.1),5L),Tuple2.of(new Event(1,\"end\",4.0),10L),Tuple2.of(new Event(2,\"end\",2.0),8L),Tuple2.of(new Event(1,\"middle\",5.0),7L),Tuple2.of(new Event(3,\"middle\",6.0),9L),Tuple2.of(new Event(3,\"end\",7.0),7L)).assignTimestampsAndWatermarks(new AssignerWithPunctuatedWatermarks<Tuple2<Event,Long>>(){\n  @Override public long extractTimestamp(  Tuple2<Event,Long> element,  long currentTimestamp){\n    return element.f1;\n  }\n  @Override public Watermark checkAndGetNextWatermark(  Tuple2<Event,Long> lastElement,  long extractedTimestamp){\n    return new Watermark(lastElement.f1 - 5);\n  }\n}\n).map(new MapFunction<Tuple2<Event,Long>,Event>(){\n  @Override public Event map(  Tuple2<Event,Long> value) throws Exception {\n    return value.f0;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 218,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 2484,
        "startLineNumber" : 348,
        "startColumnNumber" : 16,
        "endLineNumber" : 391,
        "endColumnNumber" : 34
      },
      "nodeContext" : "env.fromElements(Tuple2.of(new Event(1,\"start\",1.0),5L),Tuple2.of(new Event(1,\"middle\",2.0),1L),Tuple2.of(new Event(2,\"middle\",2.0),4L),Tuple2.of(new Event(2,\"start\",2.0),3L),Tuple2.of(new Event(1,\"end\",3.0),3L),Tuple2.of(new Event(3,\"start\",4.1),5L),Tuple2.of(new Event(1,\"end\",4.0),10L),Tuple2.of(new Event(2,\"end\",2.0),8L),Tuple2.of(new Event(1,\"middle\",5.0),7L),Tuple2.of(new Event(3,\"middle\",6.0),9L),Tuple2.of(new Event(3,\"end\",7.0),7L)).assignTimestampsAndWatermarks(new AssignerWithPunctuatedWatermarks<Tuple2<Event,Long>>(){\n  @Override public long extractTimestamp(  Tuple2<Event,Long> element,  long currentTimestamp){\n    return element.f1;\n  }\n  @Override public Watermark checkAndGetNextWatermark(  Tuple2<Event,Long> lastElement,  long extractedTimestamp){\n    return new Watermark(lastElement.f1 - 5);\n  }\n}\n).map(new MapFunction<Tuple2<Event,Long>,Event>(){\n  @Override public Event map(  Tuple2<Event,Long> value) throws Exception {\n    return value.f0;\n  }\n}\n).keyBy(new KeySelector<Event,Integer>(){\n  @Override public Integer getKey(  Event value) throws Exception {\n    return value.getId();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 247,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 2508,
        "startLineNumber" : 347,
        "startColumnNumber" : 26,
        "endLineNumber" : 391,
        "endColumnNumber" : 34
      },
      "nodeContext" : "input=env.fromElements(Tuple2.of(new Event(1,\"start\",1.0),5L),Tuple2.of(new Event(1,\"middle\",2.0),1L),Tuple2.of(new Event(2,\"middle\",2.0),4L),Tuple2.of(new Event(2,\"start\",2.0),3L),Tuple2.of(new Event(1,\"end\",3.0),3L),Tuple2.of(new Event(3,\"start\",4.1),5L),Tuple2.of(new Event(1,\"end\",4.0),10L),Tuple2.of(new Event(2,\"end\",2.0),8L),Tuple2.of(new Event(1,\"middle\",5.0),7L),Tuple2.of(new Event(3,\"middle\",6.0),9L),Tuple2.of(new Event(3,\"end\",7.0),7L)).assignTimestampsAndWatermarks(new AssignerWithPunctuatedWatermarks<Tuple2<Event,Long>>(){\n  @Override public long extractTimestamp(  Tuple2<Event,Long> element,  long currentTimestamp){\n    return element.f1;\n  }\n  @Override public Watermark checkAndGetNextWatermark(  Tuple2<Event,Long> lastElement,  long extractedTimestamp){\n    return new Watermark(lastElement.f1 - 5);\n  }\n}\n).map(new MapFunction<Tuple2<Event,Long>,Event>(){\n  @Override public Event map(  Tuple2<Event,Long> value) throws Exception {\n    return value.f0;\n  }\n}\n).keyBy(new KeySelector<Event,Integer>(){\n  @Override public Integer getKey(  Event value) throws Exception {\n    return value.getId();\n  }\n}\n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 249,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2527,
        "startLineNumber" : 347,
        "startColumnNumber" : 8,
        "endLineNumber" : 391,
        "endColumnNumber" : 35
      },
      "nodeContext" : "DataStream<Event> input=env.fromElements(Tuple2.of(new Event(1,\"start\",1.0),5L),Tuple2.of(new Event(1,\"middle\",2.0),1L),Tuple2.of(new Event(2,\"middle\",2.0),4L),Tuple2.of(new Event(2,\"start\",2.0),3L),Tuple2.of(new Event(1,\"end\",3.0),3L),Tuple2.of(new Event(3,\"start\",4.1),5L),Tuple2.of(new Event(1,\"end\",4.0),10L),Tuple2.of(new Event(2,\"end\",2.0),8L),Tuple2.of(new Event(1,\"middle\",5.0),7L),Tuple2.of(new Event(3,\"middle\",6.0),9L),Tuple2.of(new Event(3,\"end\",7.0),7L)).assignTimestampsAndWatermarks(new AssignerWithPunctuatedWatermarks<Tuple2<Event,Long>>(){\n  @Override public long extractTimestamp(  Tuple2<Event,Long> element,  long currentTimestamp){\n    return element.f1;\n  }\n  @Override public Watermark checkAndGetNextWatermark(  Tuple2<Event,Long> lastElement,  long extractedTimestamp){\n    return new Watermark(lastElement.f1 - 5);\n  }\n}\n).map(new MapFunction<Tuple2<Event,Long>,Event>(){\n  @Override public Event map(  Tuple2<Event,Long> value) throws Exception {\n    return value.f0;\n  }\n}\n).keyBy(new KeySelector<Event,Integer>(){\n  @Override public Integer getKey(  Event value) throws Exception {\n    return value.getId();\n  }\n}\n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 255,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5267,
        "startLineNumber" : 341,
        "startColumnNumber" : 67,
        "endLineNumber" : 448,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment(envConfiguration);\n  env.setParallelism(2);\n  DataStream<Event> input=env.fromElements(Tuple2.of(new Event(1,\"start\",1.0),5L),Tuple2.of(new Event(1,\"middle\",2.0),1L),Tuple2.of(new Event(2,\"middle\",2.0),4L),Tuple2.of(new Event(2,\"start\",2.0),3L),Tuple2.of(new Event(1,\"end\",3.0),3L),Tuple2.of(new Event(3,\"start\",4.1),5L),Tuple2.of(new Event(1,\"end\",4.0),10L),Tuple2.of(new Event(2,\"end\",2.0),8L),Tuple2.of(new Event(1,\"middle\",5.0),7L),Tuple2.of(new Event(3,\"middle\",6.0),9L),Tuple2.of(new Event(3,\"end\",7.0),7L)).assignTimestampsAndWatermarks(new AssignerWithPunctuatedWatermarks<Tuple2<Event,Long>>(){\n    @Override public long extractTimestamp(    Tuple2<Event,Long> element,    long currentTimestamp){\n      return element.f1;\n    }\n    @Override public Watermark checkAndGetNextWatermark(    Tuple2<Event,Long> lastElement,    long extractedTimestamp){\n      return new Watermark(lastElement.f1 - 5);\n    }\n  }\n).map(new MapFunction<Tuple2<Event,Long>,Event>(){\n    @Override public Event map(    Tuple2<Event,Long> value) throws Exception {\n      return value.f0;\n    }\n  }\n).keyBy(new KeySelector<Event,Integer>(){\n    @Override public Integer getKey(    Event value) throws Exception {\n      return value.getId();\n    }\n  }\n);\n  Pattern<Event,?> pattern=Pattern.<Event>begin(\"start\").where(new SimpleCondition<Event>(){\n    @Override public boolean filter(    Event value) throws Exception {\n      return value.getName().equals(\"start\");\n    }\n  }\n).followedByAny(\"middle\").where(new SimpleCondition<Event>(){\n    @Override public boolean filter(    Event value) throws Exception {\n      return value.getName().equals(\"middle\");\n    }\n  }\n).followedByAny(\"end\").where(new SimpleCondition<Event>(){\n    @Override public boolean filter(    Event value) throws Exception {\n      return value.getName().equals(\"end\");\n    }\n  }\n);\n  DataStream<String> result=CEP.pattern(input,pattern).select(new PatternSelectFunction<Event,String>(){\n    @Override public String select(    Map<String,List<Event>> pattern){\n      StringBuilder builder=new StringBuilder();\n      builder.append(pattern.get(\"start\").get(0).getId()).append(\",\").append(pattern.get(\"middle\").get(0).getId()).append(\",\").append(pattern.get(\"end\").get(0).getId());\n      return builder.toString();\n    }\n  }\n);\n  List<String> resultList=new ArrayList<>();\n  DataStreamUtils.collect(result).forEachRemaining(resultList::add);\n  resultList.sort(String::compareTo);\n  assertEquals(Arrays.asList(\"1,1,1\",\"2,2,2\"),resultList);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5340,
        "startLineNumber" : 340,
        "startColumnNumber" : 4,
        "endLineNumber" : 448,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimpleKeyedPatternEventTime() throws Exception {\n  StreamExecutionEnvironment env=StreamExecutionEnvironment.getExecutionEnvironment(envConfiguration);\n  env.setParallelism(2);\n  DataStream<Event> input=env.fromElements(Tuple2.of(new Event(1,\"start\",1.0),5L),Tuple2.of(new Event(1,\"middle\",2.0),1L),Tuple2.of(new Event(2,\"middle\",2.0),4L),Tuple2.of(new Event(2,\"start\",2.0),3L),Tuple2.of(new Event(1,\"end\",3.0),3L),Tuple2.of(new Event(3,\"start\",4.1),5L),Tuple2.of(new Event(1,\"end\",4.0),10L),Tuple2.of(new Event(2,\"end\",2.0),8L),Tuple2.of(new Event(1,\"middle\",5.0),7L),Tuple2.of(new Event(3,\"middle\",6.0),9L),Tuple2.of(new Event(3,\"end\",7.0),7L)).assignTimestampsAndWatermarks(new AssignerWithPunctuatedWatermarks<Tuple2<Event,Long>>(){\n    @Override public long extractTimestamp(    Tuple2<Event,Long> element,    long currentTimestamp){\n      return element.f1;\n    }\n    @Override public Watermark checkAndGetNextWatermark(    Tuple2<Event,Long> lastElement,    long extractedTimestamp){\n      return new Watermark(lastElement.f1 - 5);\n    }\n  }\n).map(new MapFunction<Tuple2<Event,Long>,Event>(){\n    @Override public Event map(    Tuple2<Event,Long> value) throws Exception {\n      return value.f0;\n    }\n  }\n).keyBy(new KeySelector<Event,Integer>(){\n    @Override public Integer getKey(    Event value) throws Exception {\n      return value.getId();\n    }\n  }\n);\n  Pattern<Event,?> pattern=Pattern.<Event>begin(\"start\").where(new SimpleCondition<Event>(){\n    @Override public boolean filter(    Event value) throws Exception {\n      return value.getName().equals(\"start\");\n    }\n  }\n).followedByAny(\"middle\").where(new SimpleCondition<Event>(){\n    @Override public boolean filter(    Event value) throws Exception {\n      return value.getName().equals(\"middle\");\n    }\n  }\n).followedByAny(\"end\").where(new SimpleCondition<Event>(){\n    @Override public boolean filter(    Event value) throws Exception {\n      return value.getName().equals(\"end\");\n    }\n  }\n);\n  DataStream<String> result=CEP.pattern(input,pattern).select(new PatternSelectFunction<Event,String>(){\n    @Override public String select(    Map<String,List<Event>> pattern){\n      StringBuilder builder=new StringBuilder();\n      builder.append(pattern.get(\"start\").get(0).getId()).append(\",\").append(pattern.get(\"middle\").get(0).getId()).append(\",\").append(pattern.get(\"end\").get(0).getId());\n      return builder.toString();\n    }\n  }\n);\n  List<String> resultList=new ArrayList<>();\n  DataStreamUtils.collect(result).forEachRemaining(resultList::add);\n  resultList.sort(String::compareTo);\n  assertEquals(Arrays.asList(\"1,1,1\",\"2,2,2\"),resultList);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 521,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 354,
        "startColumnNumber" : 32,
        "endLineNumber" : 354,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Tuple2.of(new Event(3,\"start\",4.1),5L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 354,
    "startColumnNumber" : 64,
    "endLineNumber" : 354,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}