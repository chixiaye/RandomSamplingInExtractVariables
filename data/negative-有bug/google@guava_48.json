{
  "id" : 48,
  "expression" : "Math.sqrt(productOfSumsOfSquaresOfDeltas)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/math/PairedStatsAccumulator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math.sqrt(productOfSumsOfSquaresOfDeltas)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 179,
      "startColumnNumber" : 53,
      "endLineNumber" : 179,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 179,
        "startColumnNumber" : 29,
        "endLineNumber" : 179,
        "endColumnNumber" : 94
      },
      "nodeContext" : "sumOfProductsOfDeltas / Math.sqrt(productOfSumsOfSquaresOfDeltas)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 179,
        "startColumnNumber" : 11,
        "endLineNumber" : 179,
        "endColumnNumber" : 95
      },
      "nodeContext" : "ensureInUnitRange(sumOfProductsOfDeltas / Math.sqrt(productOfSumsOfSquaresOfDeltas))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 179,
        "startColumnNumber" : 4,
        "endLineNumber" : 179,
        "endColumnNumber" : 96
      },
      "nodeContext" : "return ensureInUnitRange(sumOfProductsOfDeltas / Math.sqrt(productOfSumsOfSquaresOfDeltas));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 710,
        "startLineNumber" : 166,
        "startColumnNumber" : 55,
        "endLineNumber" : 180,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkState(count() > 1);\n  if (isNaN(sumOfProductsOfDeltas)) {\n    return NaN;\n  }\n  double xSumOfSquaresOfDeltas=xStats.sumOfSquaresOfDeltas();\n  double ySumOfSquaresOfDeltas=yStats.sumOfSquaresOfDeltas();\n  checkState(xSumOfSquaresOfDeltas > 0.0);\n  checkState(ySumOfSquaresOfDeltas > 0.0);\n  double productOfSumsOfSquaresOfDeltas=ensurePositive(xSumOfSquaresOfDeltas * ySumOfSquaresOfDeltas);\n  return ensureInUnitRange(sumOfProductsOfDeltas / Math.sqrt(productOfSumsOfSquaresOfDeltas));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1785,
        "startLineNumber" : 150,
        "startColumnNumber" : 2,
        "endLineNumber" : 180,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the <a href=\"http://mathworld.wolfram.com/CorrelationCoefficient.html\">Pearson's or product-moment correlation coefficient</a> of the values. The count must greater than one, and the  {@code x} and {@code y} values must both have non-zero population variance (i.e. {@code xStats().populationVariance() > 0.0 && yStats().populationVariance() > 0.0}). The result is not guaranteed to be exactly +/-1 even when the data are perfectly (anti-)correlated, due to numerical errors. However, it is guaranteed to be in the inclusive range [-1, +1]. <h3>Non-finite values</h3> <p>If the dataset contains any non-finite values ( {@link Double#POSITIVE_INFINITY},  {@link Double#NEGATIVE_INFINITY}, or  {@link Double#NaN}) then the result is  {@link Double#NaN}.\n * @throws IllegalStateException if the dataset is empty or contains a single pair of values, oreither the  {@code x} and {@code y} dataset has zero population variance\n */\npublic final double pearsonsCorrelationCoefficient(){\n  checkState(count() > 1);\n  if (isNaN(sumOfProductsOfDeltas)) {\n    return NaN;\n  }\n  double xSumOfSquaresOfDeltas=xStats.sumOfSquaresOfDeltas();\n  double ySumOfSquaresOfDeltas=yStats.sumOfSquaresOfDeltas();\n  checkState(xSumOfSquaresOfDeltas > 0.0);\n  checkState(ySumOfSquaresOfDeltas > 0.0);\n  double productOfSumsOfSquaresOfDeltas=ensurePositive(xSumOfSquaresOfDeltas * ySumOfSquaresOfDeltas);\n  return ensureInUnitRange(sumOfProductsOfDeltas / Math.sqrt(productOfSumsOfSquaresOfDeltas));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 179,
        "startColumnNumber" : 4,
        "endLineNumber" : 179,
        "endColumnNumber" : 96
      },
      "nodeContext" : "return ensureInUnitRange(sumOfProductsOfDeltas / Math.sqrt(productOfSumsOfSquaresOfDeltas));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 179,
    "startColumnNumber" : 53,
    "endLineNumber" : 179,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}