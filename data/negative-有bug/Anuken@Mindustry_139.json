{
  "id" : 139,
  "expression" : "45f",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/distribution/DirectionBridge.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "45f",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 200,
      "startColumnNumber" : 59,
      "endLineNumber" : 200,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 200,
        "startColumnNumber" : 24,
        "endLineNumber" : 200,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Drawf.square(found.x,found.y,2f,45f,Pal.place)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 200,
        "startColumnNumber" : 24,
        "endLineNumber" : 200,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Drawf.square(found.x,found.y,2f,45f,Pal.place);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 191,
        "startColumnNumber" : 37,
        "endLineNumber" : 201,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  int length=Math.max(Math.abs(found.tileX() - tileX()),Math.abs(found.tileY() - tileY()));\n  Drawf.dashLine(Pal.place,found.x - dx * (tilesize / 2f + 2),found.y - dy * (tilesize / 2f + 2),found.x - dx * (length) * tilesize,found.y - dy * (length) * tilesize);\n  Drawf.square(found.x,found.y,2f,45f,Pal.place);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 560,
        "startLineNumber" : 191,
        "startColumnNumber" : 20,
        "endLineNumber" : 201,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (found != null) {\n  int length=Math.max(Math.abs(found.tileX() - tileX()),Math.abs(found.tileY() - tileY()));\n  Drawf.dashLine(Pal.place,found.x - dx * (tilesize / 2f + 2),found.y - dy * (tilesize / 2f + 2),found.x - dx * (length) * tilesize,found.y - dy * (length) * tilesize);\n  Drawf.square(found.x,found.y,2f,45f,Pal.place);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 187,
        "startColumnNumber" : 35,
        "endLineNumber" : 202,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int dx=Geometry.d4x(dir), dy=Geometry.d4y(dir);\n  Building found=occupied[(dir + 2) % 4];\n  if (found != null) {\n    int length=Math.max(Math.abs(found.tileX() - tileX()),Math.abs(found.tileY() - tileY()));\n    Drawf.dashLine(Pal.place,found.x - dx * (tilesize / 2f + 2),found.y - dy * (tilesize / 2f + 2),found.x - dx * (length) * tilesize,found.y - dy * (length) * tilesize);\n    Drawf.square(found.x,found.y,2f,45f,Pal.place);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 759,
        "startLineNumber" : 187,
        "startColumnNumber" : 16,
        "endLineNumber" : 202,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (dir != rotation) {\n  int dx=Geometry.d4x(dir), dy=Geometry.d4y(dir);\n  Building found=occupied[(dir + 2) % 4];\n  if (found != null) {\n    int length=Math.max(Math.abs(found.tileX() - tileX()),Math.abs(found.tileY() - tileY()));\n    Drawf.dashLine(Pal.place,found.x - dx * (tilesize / 2f + 2),found.y - dy * (tilesize / 2f + 2),found.x - dx * (length) * tilesize,found.y - dy * (length) * tilesize);\n    Drawf.square(found.x,found.y,2f,45f,Pal.place);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 126,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 186,
        "startColumnNumber" : 44,
        "endLineNumber" : 203,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (dir != rotation) {\n    int dx=Geometry.d4x(dir), dy=Geometry.d4y(dir);\n    Building found=occupied[(dir + 2) % 4];\n    if (found != null) {\n      int length=Math.max(Math.abs(found.tileX() - tileX()),Math.abs(found.tileY() - tileY()));\n      Drawf.dashLine(Pal.place,found.x - dx * (tilesize / 2f + 2),found.y - dy * (tilesize / 2f + 2),found.x - dx * (length) * tilesize,found.y - dy * (length) * tilesize);\n      Drawf.square(found.x,found.y,2f,45f,Pal.place);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 825,
        "startLineNumber" : 186,
        "startColumnNumber" : 12,
        "endLineNumber" : 203,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int dir=0; dir < 4; dir++) {\n  if (dir != rotation) {\n    int dx=Geometry.d4x(dir), dy=Geometry.d4y(dir);\n    Building found=occupied[(dir + 2) % 4];\n    if (found != null) {\n      int length=Math.max(Math.abs(found.tileX() - tileX()),Math.abs(found.tileY() - tileY()));\n      Drawf.dashLine(Pal.place,found.x - dx * (tilesize / 2f + 2),found.y - dy * (tilesize / 2f + 2),found.x - dx * (length) * tilesize,found.y - dy * (length) * tilesize);\n      Drawf.square(found.x,found.y,2f,45f,Pal.place);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 138,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 951,
        "startLineNumber" : 183,
        "startColumnNumber" : 32,
        "endLineNumber" : 204,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  drawPlace(tile.x,tile.y,rotation,true,false);\n  for (int dir=0; dir < 4; dir++) {\n    if (dir != rotation) {\n      int dx=Geometry.d4x(dir), dy=Geometry.d4y(dir);\n      Building found=occupied[(dir + 2) % 4];\n      if (found != null) {\n        int length=Math.max(Math.abs(found.tileX() - tileX()),Math.abs(found.tileY() - tileY()));\n        Drawf.dashLine(Pal.place,found.x - dx * (tilesize / 2f + 2),found.y - dy * (tilesize / 2f + 2),found.x - dx * (length) * tilesize,found.y - dy * (length) * tilesize);\n        Drawf.square(found.x,found.y,2f,45f,Pal.place);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 204,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void drawSelect(){\n  drawPlace(tile.x,tile.y,rotation,true,false);\n  for (int dir=0; dir < 4; dir++) {\n    if (dir != rotation) {\n      int dx=Geometry.d4x(dir), dy=Geometry.d4y(dir);\n      Building found=occupied[(dir + 2) % 4];\n      if (found != null) {\n        int length=Math.max(Math.abs(found.tileX() - tileX()),Math.abs(found.tileY() - tileY()));\n        Drawf.dashLine(Pal.place,found.x - dx * (tilesize / 2f + 2),found.y - dy * (tilesize / 2f + 2),found.x - dx * (length) * tilesize,found.y - dy * (length) * tilesize);\n        Drawf.square(found.x,found.y,2f,45f,Pal.place);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 200,
        "startColumnNumber" : 24,
        "endLineNumber" : 200,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Drawf.square(found.x,found.y,2f,45f,Pal.place);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 200,
    "startColumnNumber" : 59,
    "endLineNumber" : 200,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}