{
  "id" : 80,
  "expression" : "\"Invalid instruction value\"",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/bytecode/src/main/java/com/iluwatar/bytecode/Instruction.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Invalid instruction value\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 65,
      "startColumnNumber" : 39,
      "endLineNumber" : 65,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 65,
        "startColumnNumber" : 10,
        "endLineNumber" : 65,
        "endColumnNumber" : 67
      },
      "nodeContext" : "new IllegalArgumentException(\"Invalid instruction value\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 68
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Invalid instruction value\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 59,
        "startColumnNumber" : 54,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (var i=0; i < Instruction.values().length; i++) {\n    if (Instruction.values()[i].getIntValue() == value) {\n      return Instruction.values()[i];\n    }\n  }\n  throw new IllegalArgumentException(\"Invalid instruction value\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts integer value to Instruction.\n * @param value value of instruction\n * @return representation of the instruction\n */\npublic static Instruction getInstruction(int value){\n  for (var i=0; i < Instruction.values().length; i++) {\n    if (Instruction.values()[i].getIntValue() == value) {\n      return Instruction.values()[i];\n    }\n  }\n  throw new IllegalArgumentException(\"Invalid instruction value\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 68
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Invalid instruction value\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 65,
    "startColumnNumber" : 39,
    "endLineNumber" : 65,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}