{
  "id" : 67,
  "expression" : "String::toUpperCase",
  "projectName" : "winterbe@java8-tutorial",
  "commitID" : "89a257129873974e4beb658115e854649b9204b2",
  "filePath" : "/src/com/winterbe/java8/samples/stream/Streams1.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String::toUpperCase",
    "nodeType" : "ExpressionMethodReference",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 50,
      "startColumnNumber" : 21,
      "endLineNumber" : 50,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 41
      },
      "nodeContext" : "stringCollection.stream().map(String::toUpperCase)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 49
      },
      "nodeContext" : "stringCollection.stream().map(String::toUpperCase).sorted((a,b) -> b.compareTo(a))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 45
      },
      "nodeContext" : "stringCollection.stream().map(String::toUpperCase).sorted((a,b) -> b.compareTo(a)).forEach(System.out::println)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 46
      },
      "nodeContext" : "stringCollection.stream().map(String::toUpperCase).sorted((a,b) -> b.compareTo(a)).forEach(System.out::println);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 12,
        "startColumnNumber" : 43,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> stringCollection=new ArrayList<>();\n  stringCollection.add(\"ddd2\");\n  stringCollection.add(\"aaa2\");\n  stringCollection.add(\"bbb1\");\n  stringCollection.add(\"aaa1\");\n  stringCollection.add(\"bbb3\");\n  stringCollection.add(\"ccc\");\n  stringCollection.add(\"bbb2\");\n  stringCollection.add(\"ddd1\");\n  stringCollection.stream().filter((s) -> s.startsWith(\"a\")).forEach(System.out::println);\n  stringCollection.stream().sorted().filter((s) -> s.startsWith(\"a\")).forEach(System.out::println);\n  stringCollection.stream().map(String::toUpperCase).sorted((a,b) -> b.compareTo(a)).forEach(System.out::println);\n  boolean anyStartsWithA=stringCollection.stream().anyMatch((s) -> s.startsWith(\"a\"));\n  System.out.println(anyStartsWithA);\n  boolean allStartsWithA=stringCollection.stream().allMatch((s) -> s.startsWith(\"a\"));\n  System.out.println(allStartsWithA);\n  boolean noneStartsWithZ=stringCollection.stream().noneMatch((s) -> s.startsWith(\"z\"));\n  System.out.println(noneStartsWithZ);\n  long startsWithB=stringCollection.stream().filter((s) -> s.startsWith(\"b\")).count();\n  System.out.println(startsWithB);\n  Optional<String> reduced=stringCollection.stream().sorted().reduce((s1,s2) -> s1 + \"#\" + s2);\n  reduced.ifPresent(System.out::println);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2240,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  List<String> stringCollection=new ArrayList<>();\n  stringCollection.add(\"ddd2\");\n  stringCollection.add(\"aaa2\");\n  stringCollection.add(\"bbb1\");\n  stringCollection.add(\"aaa1\");\n  stringCollection.add(\"bbb3\");\n  stringCollection.add(\"ccc\");\n  stringCollection.add(\"bbb2\");\n  stringCollection.add(\"ddd1\");\n  stringCollection.stream().filter((s) -> s.startsWith(\"a\")).forEach(System.out::println);\n  stringCollection.stream().sorted().filter((s) -> s.startsWith(\"a\")).forEach(System.out::println);\n  stringCollection.stream().map(String::toUpperCase).sorted((a,b) -> b.compareTo(a)).forEach(System.out::println);\n  boolean anyStartsWithA=stringCollection.stream().anyMatch((s) -> s.startsWith(\"a\"));\n  System.out.println(anyStartsWithA);\n  boolean allStartsWithA=stringCollection.stream().allMatch((s) -> s.startsWith(\"a\"));\n  System.out.println(allStartsWithA);\n  boolean noneStartsWithZ=stringCollection.stream().noneMatch((s) -> s.startsWith(\"z\"));\n  System.out.println(noneStartsWithZ);\n  long startsWithB=stringCollection.stream().filter((s) -> s.startsWith(\"b\")).count();\n  System.out.println(startsWithB);\n  Optional<String> reduced=stringCollection.stream().sorted().reduce((s1,s2) -> s1 + \"#\" + s2);\n  reduced.ifPresent(System.out::println);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 260,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 41
      },
      "nodeContext" : "stringCollection.stream().map(String::toUpperCase)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.util.function.Function<? super java.lang.String,? extends java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 50,
    "startColumnNumber" : 21,
    "endLineNumber" : 50,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}