{
  "id" : 83,
  "expression" : "String",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-discovery-service/src/main/java/org/apache/pulsar/discovery/service/BrokerDiscoveryProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 152,
      "startColumnNumber" : 49,
      "endLineNumber" : 152,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 152,
        "startColumnNumber" : 49,
        "endLineNumber" : 153,
        "endColumnNumber" : 62
      },
      "nodeContext" : "String.format(\"Failed to get property %s admin data due to %s\",topicName.getTenant(),e.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 152,
        "startColumnNumber" : 22,
        "endLineNumber" : 153,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new IllegalAccessException(String.format(\"Failed to get property %s admin data due to %s\",topicName.getTenant(),e.getMessage()))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 152,
        "startColumnNumber" : 16,
        "endLineNumber" : 153,
        "endColumnNumber" : 64
      },
      "nodeContext" : "throw new IllegalAccessException(String.format(\"Failed to get property %s admin data due to %s\",topicName.getTenant(),e.getMessage()));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 150,
        "startColumnNumber" : 34,
        "endLineNumber" : 154,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  LOG.error(\"Failed to get property admin data for property\");\n  throw new IllegalAccessException(String.format(\"Failed to get property %s admin data due to %s\",topicName.getTenant(),e.getMessage()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 150,
        "startColumnNumber" : 14,
        "endLineNumber" : 154,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (Exception e) {\n  LOG.error(\"Failed to get property admin data for property\");\n  throw new IllegalAccessException(String.format(\"Failed to get property %s admin data due to %s\",topicName.getTenant(),e.getMessage()));\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 792,
        "startLineNumber" : 143,
        "startColumnNumber" : 12,
        "endLineNumber" : 154,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  tenantInfo=service.getPulsarResources().getTenantResources().get(path(POLICIES,topicName.getTenant())).orElseThrow(() -> new IllegalAccessException(\"Property does not exist\"));\n}\n catch (NotFoundException e) {\n  LOG.warn(\"Failed to get property admin data for non existing property {}\",topicName.getTenant());\n  throw new IllegalAccessException(\"Property does not exist\");\n}\ncatch (Exception e) {\n  LOG.error(\"Failed to get property admin data for property\");\n  throw new IllegalAccessException(String.format(\"Failed to get property %s admin data due to %s\",topicName.getTenant(),e.getMessage()));\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1270,
        "startLineNumber" : 139,
        "startColumnNumber" : 95,
        "endLineNumber" : 159,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.warn(\"[{}] Role {} is not allowed to lookup topic\",topicName,role);\n  TenantInfo tenantInfo;\n  try {\n    tenantInfo=service.getPulsarResources().getTenantResources().get(path(POLICIES,topicName.getTenant())).orElseThrow(() -> new IllegalAccessException(\"Property does not exist\"));\n  }\n catch (  NotFoundException e) {\n    LOG.warn(\"Failed to get property admin data for non existing property {}\",topicName.getTenant());\n    throw new IllegalAccessException(\"Property does not exist\");\n  }\ncatch (  Exception e) {\n    LOG.error(\"Failed to get property admin data for property\");\n    throw new IllegalAccessException(String.format(\"Failed to get property %s admin data due to %s\",topicName.getTenant(),e.getMessage()));\n  }\n  if (!service.getAuthorizationService().isTenantAdmin(topicName.getTenant(),role,tenantInfo,authenticationData).get()) {\n    throw new IllegalAccessException(\"Don't have permission to administrate resources on this property\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1357,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 159,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!service.getAuthorizationService().canLookup(topicName,role,authenticationData)) {\n  LOG.warn(\"[{}] Role {} is not allowed to lookup topic\",topicName,role);\n  TenantInfo tenantInfo;\n  try {\n    tenantInfo=service.getPulsarResources().getTenantResources().get(path(POLICIES,topicName.getTenant())).orElseThrow(() -> new IllegalAccessException(\"Property does not exist\"));\n  }\n catch (  NotFoundException e) {\n    LOG.warn(\"Failed to get property admin data for non existing property {}\",topicName.getTenant());\n    throw new IllegalAccessException(\"Property does not exist\");\n  }\ncatch (  Exception e) {\n    LOG.error(\"Failed to get property admin data for property\");\n    throw new IllegalAccessException(String.format(\"Failed to get property %s admin data due to %s\",topicName.getTenant(),e.getMessage()));\n  }\n  if (!service.getAuthorizationService().isTenantAdmin(topicName.getTenant(),role,tenantInfo,authenticationData).get()) {\n    throw new IllegalAccessException(\"Don't have permission to administrate resources on this property\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1782,
        "startLineNumber" : 132,
        "startColumnNumber" : 29,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!service.getConfiguration().isAuthorizationEnabled() || service.getConfiguration().getSuperUserRoles().contains(role)) {\n    return;\n  }\n  if (!service.getAuthorizationService().canLookup(topicName,role,authenticationData)) {\n    LOG.warn(\"[{}] Role {} is not allowed to lookup topic\",topicName,role);\n    TenantInfo tenantInfo;\n    try {\n      tenantInfo=service.getPulsarResources().getTenantResources().get(path(POLICIES,topicName.getTenant())).orElseThrow(() -> new IllegalAccessException(\"Property does not exist\"));\n    }\n catch (    NotFoundException e) {\n      LOG.warn(\"Failed to get property admin data for non existing property {}\",topicName.getTenant());\n      throw new IllegalAccessException(\"Property does not exist\");\n    }\ncatch (    Exception e) {\n      LOG.error(\"Failed to get property admin data for property\");\n      throw new IllegalAccessException(String.format(\"Failed to get property %s admin data due to %s\",topicName.getTenant(),e.getMessage()));\n    }\n    if (!service.getAuthorizationService().isTenantAdmin(topicName.getTenant(),role,tenantInfo,authenticationData).get()) {\n      throw new IllegalAccessException(\"Don't have permission to administrate resources on this property\");\n    }\n  }\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Successfully authorized {} on property {}\",role,topicName.getTenant());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1969,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected static void checkAuthorization(DiscoveryService service,TopicName topicName,String role,AuthenticationDataSource authenticationData) throws Exception {\n  if (!service.getConfiguration().isAuthorizationEnabled() || service.getConfiguration().getSuperUserRoles().contains(role)) {\n    return;\n  }\n  if (!service.getAuthorizationService().canLookup(topicName,role,authenticationData)) {\n    LOG.warn(\"[{}] Role {} is not allowed to lookup topic\",topicName,role);\n    TenantInfo tenantInfo;\n    try {\n      tenantInfo=service.getPulsarResources().getTenantResources().get(path(POLICIES,topicName.getTenant())).orElseThrow(() -> new IllegalAccessException(\"Property does not exist\"));\n    }\n catch (    NotFoundException e) {\n      LOG.warn(\"Failed to get property admin data for non existing property {}\",topicName.getTenant());\n      throw new IllegalAccessException(\"Property does not exist\");\n    }\ncatch (    Exception e) {\n      LOG.error(\"Failed to get property admin data for property\");\n      throw new IllegalAccessException(String.format(\"Failed to get property %s admin data due to %s\",topicName.getTenant(),e.getMessage()));\n    }\n    if (!service.getAuthorizationService().isTenantAdmin(topicName.getTenant(),role,tenantInfo,authenticationData).get()) {\n      throw new IllegalAccessException(\"Don't have permission to administrate resources on this property\");\n    }\n  }\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Successfully authorized {} on property {}\",role,topicName.getTenant());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 152,
        "startColumnNumber" : 49,
        "endLineNumber" : 153,
        "endColumnNumber" : 62
      },
      "nodeContext" : "String.format(\"Failed to get property %s admin data due to %s\",topicName.getTenant(),e.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 152,
    "startColumnNumber" : 49,
    "endLineNumber" : 152,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}