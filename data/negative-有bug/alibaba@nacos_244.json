{
  "id" : 244,
  "expression" : "getHandleMethod(handlerClazz)",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/core/src/main/java/com/alibaba/nacos/core/auth/RemoteRequestAuthFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getHandleMethod(handlerClazz)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 58,
      "startColumnNumber" : 28,
      "endLineNumber" : 58,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 58,
        "startColumnNumber" : 19,
        "endLineNumber" : 58,
        "endColumnNumber" : 57
      },
      "nodeContext" : "method=getHandleMethod(handlerClazz)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Method method=getHandleMethod(handlerClazz);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1161,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Method method=getHandleMethod(handlerClazz);\n  if (method.isAnnotationPresent(Secured.class) && authConfigs.isAuthEnabled()) {\n    if (Loggers.AUTH.isDebugEnabled()) {\n      Loggers.AUTH.debug(\"auth start, request: {}\",request.getClass().getSimpleName());\n    }\n    Secured secured=method.getAnnotation(Secured.class);\n    String action=secured.action().toString();\n    String resource=secured.resource();\n    if (StringUtils.isBlank(resource)) {\n      ResourceParser parser=secured.parser().newInstance();\n      resource=parser.parseName(request);\n    }\n    if (StringUtils.isBlank(resource)) {\n      throw new AccessException(\"resource name invalid!\");\n    }\n    authManager.auth(new Permission(resource,action),authManager.loginRemote(request));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1937,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Method method=getHandleMethod(handlerClazz);\n  if (method.isAnnotationPresent(Secured.class) && authConfigs.isAuthEnabled()) {\n    if (Loggers.AUTH.isDebugEnabled()) {\n      Loggers.AUTH.debug(\"auth start, request: {}\",request.getClass().getSimpleName());\n    }\n    Secured secured=method.getAnnotation(Secured.class);\n    String action=secured.action().toString();\n    String resource=secured.resource();\n    if (StringUtils.isBlank(resource)) {\n      ResourceParser parser=secured.parser().newInstance();\n      resource=parser.parseName(request);\n    }\n    if (StringUtils.isBlank(resource)) {\n      throw new AccessException(\"resource name invalid!\");\n    }\n    authManager.auth(new Permission(resource,action),authManager.loginRemote(request));\n  }\n}\n catch (AccessException e) {\n  if (Loggers.AUTH.isDebugEnabled()) {\n    Loggers.AUTH.debug(\"access denied, request: {}, reason: {}\",request.getClass().getSimpleName(),e.getErrMsg());\n  }\n  Response defaultResponseInstance=getDefaultResponseInstance(handlerClazz);\n  defaultResponseInstance.setErrorInfo(NacosException.NO_RIGHT,e.getMessage());\n  return defaultResponseInstance;\n}\ncatch (Exception e) {\n  Response defaultResponseInstance=getDefaultResponseInstance(handlerClazz);\n  defaultResponseInstance.setErrorInfo(NacosException.SERVER_ERROR,ExceptionUtil.getAllExceptionMsg(e));\n  return defaultResponseInstance;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 192,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1992,
        "startLineNumber" : 54,
        "startColumnNumber" : 104,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Method method=getHandleMethod(handlerClazz);\n    if (method.isAnnotationPresent(Secured.class) && authConfigs.isAuthEnabled()) {\n      if (Loggers.AUTH.isDebugEnabled()) {\n        Loggers.AUTH.debug(\"auth start, request: {}\",request.getClass().getSimpleName());\n      }\n      Secured secured=method.getAnnotation(Secured.class);\n      String action=secured.action().toString();\n      String resource=secured.resource();\n      if (StringUtils.isBlank(resource)) {\n        ResourceParser parser=secured.parser().newInstance();\n        resource=parser.parseName(request);\n      }\n      if (StringUtils.isBlank(resource)) {\n        throw new AccessException(\"resource name invalid!\");\n      }\n      authManager.auth(new Permission(resource,action),authManager.loginRemote(request));\n    }\n  }\n catch (  AccessException e) {\n    if (Loggers.AUTH.isDebugEnabled()) {\n      Loggers.AUTH.debug(\"access denied, request: {}, reason: {}\",request.getClass().getSimpleName(),e.getErrMsg());\n    }\n    Response defaultResponseInstance=getDefaultResponseInstance(handlerClazz);\n    defaultResponseInstance.setErrorInfo(NacosException.NO_RIGHT,e.getMessage());\n    return defaultResponseInstance;\n  }\ncatch (  Exception e) {\n    Response defaultResponseInstance=getDefaultResponseInstance(handlerClazz);\n    defaultResponseInstance.setErrorInfo(NacosException.SERVER_ERROR,ExceptionUtil.getAllExceptionMsg(e));\n    return defaultResponseInstance;\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2106,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Response filter(Request request,RequestMeta meta,Class handlerClazz) throws NacosException {\n  try {\n    Method method=getHandleMethod(handlerClazz);\n    if (method.isAnnotationPresent(Secured.class) && authConfigs.isAuthEnabled()) {\n      if (Loggers.AUTH.isDebugEnabled()) {\n        Loggers.AUTH.debug(\"auth start, request: {}\",request.getClass().getSimpleName());\n      }\n      Secured secured=method.getAnnotation(Secured.class);\n      String action=secured.action().toString();\n      String resource=secured.resource();\n      if (StringUtils.isBlank(resource)) {\n        ResourceParser parser=secured.parser().newInstance();\n        resource=parser.parseName(request);\n      }\n      if (StringUtils.isBlank(resource)) {\n        throw new AccessException(\"resource name invalid!\");\n      }\n      authManager.auth(new Permission(resource,action),authManager.loginRemote(request));\n    }\n  }\n catch (  AccessException e) {\n    if (Loggers.AUTH.isDebugEnabled()) {\n      Loggers.AUTH.debug(\"access denied, request: {}, reason: {}\",request.getClass().getSimpleName(),e.getErrMsg());\n    }\n    Response defaultResponseInstance=getDefaultResponseInstance(handlerClazz);\n    defaultResponseInstance.setErrorInfo(NacosException.NO_RIGHT,e.getMessage());\n    return defaultResponseInstance;\n  }\ncatch (  Exception e) {\n    Response defaultResponseInstance=getDefaultResponseInstance(handlerClazz);\n    defaultResponseInstance.setErrorInfo(NacosException.SERVER_ERROR,ExceptionUtil.getAllExceptionMsg(e));\n    return defaultResponseInstance;\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Method method=getHandleMethod(handlerClazz);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.reflect.Method"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 58,
    "startColumnNumber" : 28,
    "endLineNumber" : 58,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}