{
  "id" : 187,
  "expression" : "Float.valueOf(0.1f)",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-formats/flink-protobuf/src/test/java/org/apache/flink/formats/protobuf/SimpleRowToProtoTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Float.valueOf(0.1f)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 55,
      "startColumnNumber" : 21,
      "endLineNumber" : 55,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(Float.valueOf(0.1f),Float.valueOf(simpleTest.getD()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(Float.valueOf(0.1f),Float.valueOf(simpleTest.getD()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1130,
        "startLineNumber" : 35,
        "startColumnNumber" : 46,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RowData row=GenericRowData.of(1,2L,false,0.1f,0.01,StringData.fromString(\"hello\"),new byte[]{1},StringData.fromString(\"IMAGES\"),1,2);\n  byte[] bytes=ProtobufTestHelper.rowToPbBytes(row,SimpleTest.class);\n  SimpleTest simpleTest=SimpleTest.parseFrom(bytes);\n  assertTrue(simpleTest.hasA());\n  assertEquals(1,simpleTest.getA());\n  assertEquals(2L,simpleTest.getB());\n  assertFalse(simpleTest.getC());\n  assertEquals(Float.valueOf(0.1f),Float.valueOf(simpleTest.getD()));\n  assertEquals(Double.valueOf(0.01d),Double.valueOf(simpleTest.getE()));\n  assertEquals(\"hello\",simpleTest.getF());\n  assertEquals(1,simpleTest.getG().byteAt(0));\n  assertEquals(SimpleTest.Corpus.IMAGES,simpleTest.getH());\n  assertEquals(1,simpleTest.getFAbc7D());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimple() throws Exception {\n  RowData row=GenericRowData.of(1,2L,false,0.1f,0.01,StringData.fromString(\"hello\"),new byte[]{1},StringData.fromString(\"IMAGES\"),1,2);\n  byte[] bytes=ProtobufTestHelper.rowToPbBytes(row,SimpleTest.class);\n  SimpleTest simpleTest=SimpleTest.parseFrom(bytes);\n  assertTrue(simpleTest.hasA());\n  assertEquals(1,simpleTest.getA());\n  assertEquals(2L,simpleTest.getB());\n  assertFalse(simpleTest.getC());\n  assertEquals(Float.valueOf(0.1f),Float.valueOf(simpleTest.getD()));\n  assertEquals(Double.valueOf(0.01d),Double.valueOf(simpleTest.getE()));\n  assertEquals(\"hello\",simpleTest.getF());\n  assertEquals(1,simpleTest.getG().byteAt(0));\n  assertEquals(SimpleTest.Corpus.IMAGES,simpleTest.getH());\n  assertEquals(1,simpleTest.getFAbc7D());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(Float.valueOf(0.1f),Float.valueOf(simpleTest.getD()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.Float"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 55,
    "startColumnNumber" : 21,
    "endLineNumber" : 55,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}