{
  "id" : 1,
  "expression" : "this.scheduledExecutorService",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/common/src/main/java/org/apache/rocketmq/common/stats/MomentStatsItemSet.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.scheduledExecutorService",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 53,
      "startColumnNumber" : 8,
      "endLineNumber" : 53,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 126
      },
      "nodeContext" : "this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    try {\n      printAtMinutes();\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60 * 5,TimeUnit.MILLISECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 44,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 127
      },
      "nodeContext" : "this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    try {\n      printAtMinutes();\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60 * 5,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 45,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 403,
        "startLineNumber" : 51,
        "startColumnNumber" : 23,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60 * 5,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 422,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void init(){\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60 * 5,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 126
      },
      "nodeContext" : "this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    try {\n      printAtMinutes();\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60 * 5,TimeUnit.MILLISECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 44,
      "astHeight" : 10
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.ScheduledExecutorService"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 53,
    "startColumnNumber" : 8,
    "endLineNumber" : 53,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}