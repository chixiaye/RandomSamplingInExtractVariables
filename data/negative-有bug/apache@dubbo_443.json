{
  "id" : 443,
  "expression" : "MultiValueConverter.find(String.class,List.class)",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/test/java/org/apache/dubbo/common/convert/multiple/MultiValueConverterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MultiValueConverter.find(String.class,List.class)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 57,
      "startColumnNumber" : 20,
      "endLineNumber" : 57,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 70
      },
      "nodeContext" : "converter=MultiValueConverter.find(String.class,List.class)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 71
      },
      "nodeContext" : "converter=MultiValueConverter.find(String.class,List.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1575,
        "startLineNumber" : 41,
        "startColumnNumber" : 27,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MultiValueConverter converter=MultiValueConverter.find(String.class,String[].class);\n  assertEquals(StringToArrayConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,BlockingDeque.class);\n  assertEquals(StringToBlockingDequeConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,BlockingQueue.class);\n  assertEquals(StringToBlockingQueueConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,Collection.class);\n  assertEquals(StringToCollectionConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,Deque.class);\n  assertEquals(StringToDequeConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,List.class);\n  assertEquals(StringToListConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,NavigableSet.class);\n  assertEquals(StringToNavigableSetConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,Queue.class);\n  assertEquals(StringToQueueConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,Set.class);\n  assertEquals(StringToSetConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,TransferQueue.class);\n  assertEquals(StringToTransferQueueConverter.class,converter.getClass());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1608,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFind(){\n  MultiValueConverter converter=MultiValueConverter.find(String.class,String[].class);\n  assertEquals(StringToArrayConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,BlockingDeque.class);\n  assertEquals(StringToBlockingDequeConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,BlockingQueue.class);\n  assertEquals(StringToBlockingQueueConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,Collection.class);\n  assertEquals(StringToCollectionConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,Deque.class);\n  assertEquals(StringToDequeConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,List.class);\n  assertEquals(StringToListConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,NavigableSet.class);\n  assertEquals(StringToNavigableSetConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,Queue.class);\n  assertEquals(StringToQueueConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,Set.class);\n  assertEquals(StringToSetConverter.class,converter.getClass());\n  converter=MultiValueConverter.find(String.class,TransferQueue.class);\n  assertEquals(StringToTransferQueueConverter.class,converter.getClass());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 71
      },
      "nodeContext" : "converter=MultiValueConverter.find(String.class,List.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "org.apache.dubbo.common.convert.multiple.MultiValueConverter<>"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 57,
    "startColumnNumber" : 20,
    "endLineNumber" : 57,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}