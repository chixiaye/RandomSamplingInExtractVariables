{
  "id" : 292,
  "expression" : "span.getSpanEventList()",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/thrift/src/main/java/com/navercorp/pinpoint/thrift/io/ChunkHeaderBufferedTBaseSerializer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "span.getSpanEventList()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 100,
      "startColumnNumber" : 12,
      "endLineNumber" : 100,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 43
      },
      "nodeContext" : "span.getSpanEventList() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (span.getSpanEventList() == null) {\n  write(base);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 637,
        "startLineNumber" : 98,
        "startColumnNumber" : 62,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final TSpan span=(TSpan)base;\n  if (span.getSpanEventList() == null) {\n    write(base);\n    return;\n  }\n  try {\n    for (    TSpanEvent e : span.getSpanEventList()) {\n      eventStream.write(e);\n    }\n    write(span,FIELD_NAME_SPAN_EVENT_LIST,eventStream.split(chunkSize));\n    while (!eventStream.isEmpty()) {\n      final TSpanChunk spanChunk=toSpanChunk(span);\n      write(spanChunk,FIELD_NAME_SPAN_EVENT_LIST,eventStream.split(chunkSize));\n    }\n  }\n  finally {\n    eventStream.clear();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void addTSpan(TBase<?,?> base) throws TException {\n  final TSpan span=(TSpan)base;\n  if (span.getSpanEventList() == null) {\n    write(base);\n    return;\n  }\n  try {\n    for (    TSpanEvent e : span.getSpanEventList()) {\n      eventStream.write(e);\n    }\n    write(span,FIELD_NAME_SPAN_EVENT_LIST,eventStream.split(chunkSize));\n    while (!eventStream.isEmpty()) {\n      final TSpanChunk spanChunk=toSpanChunk(span);\n      write(spanChunk,FIELD_NAME_SPAN_EVENT_LIST,eventStream.split(chunkSize));\n    }\n  }\n  finally {\n    eventStream.clear();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 43
      },
      "nodeContext" : "span.getSpanEventList() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.util.List<com.navercorp.pinpoint.thrift.dto.TSpanEvent>"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 100,
    "startColumnNumber" : 12,
    "endLineNumber" : 100,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}