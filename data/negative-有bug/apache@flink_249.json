{
  "id" : 249,
  "expression" : "optional",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/types/ClassDataTypeConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "optional",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 44,
      "startColumnNumber" : 15,
      "endLineNumber" : 44,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 47,
        "endColumnNumber" : 69
      },
      "nodeContext" : "optional.orElseGet(() -> TypeConversions.fromLegacyInfoToDataType(TypeExtractor.createTypeInfo(clazz)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 70
      },
      "nodeContext" : "return optional.orElseGet(() -> TypeConversions.fromLegacyInfoToDataType(TypeExtractor.createTypeInfo(clazz)));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 283,
        "startLineNumber" : 42,
        "startColumnNumber" : 63,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<DataType> optional=TypeConversions.fromClassToDataType(clazz);\n  return optional.orElseGet(() -> TypeConversions.fromLegacyInfoToDataType(TypeExtractor.createTypeInfo(clazz)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param clazz The class of the type.\n * @return The DataType object for the type described by the hint.\n * @throws InvalidTypesException Cannot extract TypeInformation from Class alone, becausegeneric parameters are missing.\n */\npublic static DataType fromClassToDataType(Class<?> clazz){\n  Optional<DataType> optional=TypeConversions.fromClassToDataType(clazz);\n  return optional.orElseGet(() -> TypeConversions.fromLegacyInfoToDataType(TypeExtractor.createTypeInfo(clazz)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 38,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 47,
        "endColumnNumber" : 69
      },
      "nodeContext" : "optional.orElseGet(() -> TypeConversions.fromLegacyInfoToDataType(TypeExtractor.createTypeInfo(clazz)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Optional<org.apache.flink.table.types.DataType>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 44,
    "startColumnNumber" : 15,
    "endLineNumber" : 44,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}