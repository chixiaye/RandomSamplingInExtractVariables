{
  "id" : 357,
  "expression" : "0",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/main/java/com/facebook/imagepipeline/bitmaps/HoneycombBitmapCreator.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 50,
      "startColumnNumber" : 28,
      "endLineNumber" : 50,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 60
      },
      "nodeContext" : "pooledByteBuffer.read(0,encodedBytesArray,0,length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 61
      },
      "nodeContext" : "pooledByteBuffer.read(0,encodedBytesArray,0,length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  encodedImage=new EncodedImage(jpgRef);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n  int length=jpgRef.get().size();\n  final PooledByteBuffer pooledByteBuffer=jpgRef.get();\n  encodedBytesArrayRef=mFlexByteArrayPool.get(length + 2);\n  byte[] encodedBytesArray=encodedBytesArrayRef.get();\n  pooledByteBuffer.read(0,encodedBytesArray,0,length);\n  Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n  bitmap.setHasAlpha(true);\n  bitmap.eraseColor(Color.TRANSPARENT);\n  return bitmap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  encodedImage=new EncodedImage(jpgRef);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n  int length=jpgRef.get().size();\n  final PooledByteBuffer pooledByteBuffer=jpgRef.get();\n  encodedBytesArrayRef=mFlexByteArrayPool.get(length + 2);\n  byte[] encodedBytesArray=encodedBytesArrayRef.get();\n  pooledByteBuffer.read(0,encodedBytesArray,0,length);\n  Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n  bitmap.setHasAlpha(true);\n  bitmap.eraseColor(Color.TRANSPARENT);\n  return bitmap;\n}\n  finally {\n  CloseableReference.closeSafely(encodedBytesArrayRef);\n  EncodedImage.closeSafely(encodedImage);\n  CloseableReference.closeSafely(jpgRef);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 36,
        "startColumnNumber" : 85,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  CloseableReference<PooledByteBuffer> jpgRef=mJpegGenerator.generate((short)width,(short)height);\n  EncodedImage encodedImage=null;\n  CloseableReference<byte[]> encodedBytesArrayRef=null;\n  try {\n    encodedImage=new EncodedImage(jpgRef);\n    encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n    BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n    int length=jpgRef.get().size();\n    final PooledByteBuffer pooledByteBuffer=jpgRef.get();\n    encodedBytesArrayRef=mFlexByteArrayPool.get(length + 2);\n    byte[] encodedBytesArray=encodedBytesArrayRef.get();\n    pooledByteBuffer.read(0,encodedBytesArray,0,length);\n    Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n    bitmap.setHasAlpha(true);\n    bitmap.eraseColor(Color.TRANSPARENT);\n    return bitmap;\n  }\n  finally {\n    CloseableReference.closeSafely(encodedBytesArrayRef);\n    EncodedImage.closeSafely(encodedImage);\n    CloseableReference.closeSafely(jpgRef);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@TargetApi(Build.VERSION_CODES.HONEYCOMB_MR1) @Override public Bitmap createNakedBitmap(int width,int height,Bitmap.Config bitmapConfig){\n  CloseableReference<PooledByteBuffer> jpgRef=mJpegGenerator.generate((short)width,(short)height);\n  EncodedImage encodedImage=null;\n  CloseableReference<byte[]> encodedBytesArrayRef=null;\n  try {\n    encodedImage=new EncodedImage(jpgRef);\n    encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n    BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n    int length=jpgRef.get().size();\n    final PooledByteBuffer pooledByteBuffer=jpgRef.get();\n    encodedBytesArrayRef=mFlexByteArrayPool.get(length + 2);\n    byte[] encodedBytesArray=encodedBytesArrayRef.get();\n    pooledByteBuffer.read(0,encodedBytesArray,0,length);\n    Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n    bitmap.setHasAlpha(true);\n    bitmap.eraseColor(Color.TRANSPARENT);\n    return bitmap;\n  }\n  finally {\n    CloseableReference.closeSafely(encodedBytesArrayRef);\n    EncodedImage.closeSafely(encodedImage);\n    CloseableReference.closeSafely(jpgRef);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 61
      },
      "nodeContext" : "pooledByteBuffer.read(0,encodedBytesArray,0,length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 50,
      "startColumnNumber" : 50,
      "endLineNumber" : 50,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 60
      },
      "nodeContext" : "pooledByteBuffer.read(0,encodedBytesArray,0,length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 61
      },
      "nodeContext" : "pooledByteBuffer.read(0,encodedBytesArray,0,length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  encodedImage=new EncodedImage(jpgRef);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n  int length=jpgRef.get().size();\n  final PooledByteBuffer pooledByteBuffer=jpgRef.get();\n  encodedBytesArrayRef=mFlexByteArrayPool.get(length + 2);\n  byte[] encodedBytesArray=encodedBytesArrayRef.get();\n  pooledByteBuffer.read(0,encodedBytesArray,0,length);\n  Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n  bitmap.setHasAlpha(true);\n  bitmap.eraseColor(Color.TRANSPARENT);\n  return bitmap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  encodedImage=new EncodedImage(jpgRef);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n  int length=jpgRef.get().size();\n  final PooledByteBuffer pooledByteBuffer=jpgRef.get();\n  encodedBytesArrayRef=mFlexByteArrayPool.get(length + 2);\n  byte[] encodedBytesArray=encodedBytesArrayRef.get();\n  pooledByteBuffer.read(0,encodedBytesArray,0,length);\n  Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n  bitmap.setHasAlpha(true);\n  bitmap.eraseColor(Color.TRANSPARENT);\n  return bitmap;\n}\n  finally {\n  CloseableReference.closeSafely(encodedBytesArrayRef);\n  EncodedImage.closeSafely(encodedImage);\n  CloseableReference.closeSafely(jpgRef);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 36,
        "startColumnNumber" : 85,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  CloseableReference<PooledByteBuffer> jpgRef=mJpegGenerator.generate((short)width,(short)height);\n  EncodedImage encodedImage=null;\n  CloseableReference<byte[]> encodedBytesArrayRef=null;\n  try {\n    encodedImage=new EncodedImage(jpgRef);\n    encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n    BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n    int length=jpgRef.get().size();\n    final PooledByteBuffer pooledByteBuffer=jpgRef.get();\n    encodedBytesArrayRef=mFlexByteArrayPool.get(length + 2);\n    byte[] encodedBytesArray=encodedBytesArrayRef.get();\n    pooledByteBuffer.read(0,encodedBytesArray,0,length);\n    Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n    bitmap.setHasAlpha(true);\n    bitmap.eraseColor(Color.TRANSPARENT);\n    return bitmap;\n  }\n  finally {\n    CloseableReference.closeSafely(encodedBytesArrayRef);\n    EncodedImage.closeSafely(encodedImage);\n    CloseableReference.closeSafely(jpgRef);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@TargetApi(Build.VERSION_CODES.HONEYCOMB_MR1) @Override public Bitmap createNakedBitmap(int width,int height,Bitmap.Config bitmapConfig){\n  CloseableReference<PooledByteBuffer> jpgRef=mJpegGenerator.generate((short)width,(short)height);\n  EncodedImage encodedImage=null;\n  CloseableReference<byte[]> encodedBytesArrayRef=null;\n  try {\n    encodedImage=new EncodedImage(jpgRef);\n    encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n    BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n    int length=jpgRef.get().size();\n    final PooledByteBuffer pooledByteBuffer=jpgRef.get();\n    encodedBytesArrayRef=mFlexByteArrayPool.get(length + 2);\n    byte[] encodedBytesArray=encodedBytesArrayRef.get();\n    pooledByteBuffer.read(0,encodedBytesArray,0,length);\n    Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n    bitmap.setHasAlpha(true);\n    bitmap.eraseColor(Color.TRANSPARENT);\n    return bitmap;\n  }\n  finally {\n    CloseableReference.closeSafely(encodedBytesArrayRef);\n    EncodedImage.closeSafely(encodedImage);\n    CloseableReference.closeSafely(jpgRef);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 61
      },
      "nodeContext" : "pooledByteBuffer.read(0,encodedBytesArray,0,length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 51,
      "startColumnNumber" : 71,
      "endLineNumber" : 51,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 51,
        "startColumnNumber" : 22,
        "endLineNumber" : 51,
        "endColumnNumber" : 90
      },
      "nodeContext" : "BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 51,
        "startColumnNumber" : 13,
        "endLineNumber" : 51,
        "endColumnNumber" : 90
      },
      "nodeContext" : "bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  encodedImage=new EncodedImage(jpgRef);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n  int length=jpgRef.get().size();\n  final PooledByteBuffer pooledByteBuffer=jpgRef.get();\n  encodedBytesArrayRef=mFlexByteArrayPool.get(length + 2);\n  byte[] encodedBytesArray=encodedBytesArrayRef.get();\n  pooledByteBuffer.read(0,encodedBytesArray,0,length);\n  Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n  bitmap.setHasAlpha(true);\n  bitmap.eraseColor(Color.TRANSPARENT);\n  return bitmap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  encodedImage=new EncodedImage(jpgRef);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n  int length=jpgRef.get().size();\n  final PooledByteBuffer pooledByteBuffer=jpgRef.get();\n  encodedBytesArrayRef=mFlexByteArrayPool.get(length + 2);\n  byte[] encodedBytesArray=encodedBytesArrayRef.get();\n  pooledByteBuffer.read(0,encodedBytesArray,0,length);\n  Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n  bitmap.setHasAlpha(true);\n  bitmap.eraseColor(Color.TRANSPARENT);\n  return bitmap;\n}\n  finally {\n  CloseableReference.closeSafely(encodedBytesArrayRef);\n  EncodedImage.closeSafely(encodedImage);\n  CloseableReference.closeSafely(jpgRef);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 36,
        "startColumnNumber" : 85,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  CloseableReference<PooledByteBuffer> jpgRef=mJpegGenerator.generate((short)width,(short)height);\n  EncodedImage encodedImage=null;\n  CloseableReference<byte[]> encodedBytesArrayRef=null;\n  try {\n    encodedImage=new EncodedImage(jpgRef);\n    encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n    BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n    int length=jpgRef.get().size();\n    final PooledByteBuffer pooledByteBuffer=jpgRef.get();\n    encodedBytesArrayRef=mFlexByteArrayPool.get(length + 2);\n    byte[] encodedBytesArray=encodedBytesArrayRef.get();\n    pooledByteBuffer.read(0,encodedBytesArray,0,length);\n    Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n    bitmap.setHasAlpha(true);\n    bitmap.eraseColor(Color.TRANSPARENT);\n    return bitmap;\n  }\n  finally {\n    CloseableReference.closeSafely(encodedBytesArrayRef);\n    EncodedImage.closeSafely(encodedImage);\n    CloseableReference.closeSafely(jpgRef);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@TargetApi(Build.VERSION_CODES.HONEYCOMB_MR1) @Override public Bitmap createNakedBitmap(int width,int height,Bitmap.Config bitmapConfig){\n  CloseableReference<PooledByteBuffer> jpgRef=mJpegGenerator.generate((short)width,(short)height);\n  EncodedImage encodedImage=null;\n  CloseableReference<byte[]> encodedBytesArrayRef=null;\n  try {\n    encodedImage=new EncodedImage(jpgRef);\n    encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n    BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n    int length=jpgRef.get().size();\n    final PooledByteBuffer pooledByteBuffer=jpgRef.get();\n    encodedBytesArrayRef=mFlexByteArrayPool.get(length + 2);\n    byte[] encodedBytesArray=encodedBytesArrayRef.get();\n    pooledByteBuffer.read(0,encodedBytesArray,0,length);\n    Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n    bitmap.setHasAlpha(true);\n    bitmap.eraseColor(Color.TRANSPARENT);\n    return bitmap;\n  }\n  finally {\n    CloseableReference.closeSafely(encodedBytesArrayRef);\n    EncodedImage.closeSafely(encodedImage);\n    CloseableReference.closeSafely(jpgRef);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Bitmap bitmap=BitmapFactory.decodeByteArray(encodedBytesArray,0,length,options);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 50,
    "startColumnNumber" : 28,
    "endLineNumber" : 50,
    "endColumnNumber" : 29
  }, {
    "charLength" : 1,
    "startLineNumber" : 50,
    "startColumnNumber" : 50,
    "endLineNumber" : 50,
    "endColumnNumber" : 51
  }, {
    "charLength" : 1,
    "startLineNumber" : 51,
    "startColumnNumber" : 71,
    "endLineNumber" : 51,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}