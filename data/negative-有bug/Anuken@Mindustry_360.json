{
  "id" : 360,
  "expression" : "1 + offset",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/power/BeamNode.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1 + offset",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 73,
      "startColumnNumber" : 24,
      "endLineNumber" : 73,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 73,
        "startColumnNumber" : 20,
        "endLineNumber" : 73,
        "endColumnNumber" : 34
      },
      "nodeContext" : "j=1 + offset",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 34
      },
      "nodeContext" : "int j=1 + offset",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 535,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=1 + offset; j <= range + offset; j++) {\n  var other=world.build(x + j * dir.x,y + j * dir.y);\n  if (other != null && other.isInsulated()) {\n    break;\n  }\n  if (other != null && other.block.hasPower && other.team == Vars.player.team() && !(other.block instanceof PowerNode)) {\n    maxLen=j;\n    dest=other;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1193,
        "startLineNumber" : 67,
        "startColumnNumber" : 34,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int maxLen=range + size / 2;\n  Building dest=null;\n  var dir=Geometry.d4[i];\n  int dx=dir.x, dy=dir.y;\n  int offset=size / 2;\n  for (int j=1 + offset; j <= range + offset; j++) {\n    var other=world.build(x + j * dir.x,y + j * dir.y);\n    if (other != null && other.isInsulated()) {\n      break;\n    }\n    if (other != null && other.block.hasPower && other.team == Vars.player.team() && !(other.block instanceof PowerNode)) {\n      maxLen=j;\n      dest=other;\n      break;\n    }\n  }\n  Drawf.dashLine(Pal.placing,x * tilesize + dx * (tilesize * size / 2f + 2),y * tilesize + dy * (tilesize * size / 2f + 2),x * tilesize + dx * (maxLen) * tilesize,y * tilesize + dy * (maxLen) * tilesize);\n  if (dest != null) {\n    Drawf.square(dest.x,dest.y,dest.block.size * tilesize / 2f + 2.5f,0f);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 4; i++) {\n  int maxLen=range + size / 2;\n  Building dest=null;\n  var dir=Geometry.d4[i];\n  int dx=dir.x, dy=dir.y;\n  int offset=size / 2;\n  for (int j=1 + offset; j <= range + offset; j++) {\n    var other=world.build(x + j * dir.x,y + j * dir.y);\n    if (other != null && other.isInsulated()) {\n      break;\n    }\n    if (other != null && other.block.hasPower && other.team == Vars.player.team() && !(other.block instanceof PowerNode)) {\n      maxLen=j;\n      dest=other;\n      break;\n    }\n  }\n  Drawf.dashLine(Pal.placing,x * tilesize + dx * (tilesize * size / 2f + 2),y * tilesize + dy * (tilesize * size / 2f + 2),x * tilesize + dx * (maxLen) * tilesize,y * tilesize + dy * (maxLen) * tilesize);\n  if (dest != null) {\n    Drawf.square(dest.x,dest.y,dest.block.size * tilesize / 2f + 2.5f,0f);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 223,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1237,
        "startLineNumber" : 66,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=0; i < 4; i++) {\n    int maxLen=range + size / 2;\n    Building dest=null;\n    var dir=Geometry.d4[i];\n    int dx=dir.x, dy=dir.y;\n    int offset=size / 2;\n    for (int j=1 + offset; j <= range + offset; j++) {\n      var other=world.build(x + j * dir.x,y + j * dir.y);\n      if (other != null && other.isInsulated()) {\n        break;\n      }\n      if (other != null && other.block.hasPower && other.team == Vars.player.team() && !(other.block instanceof PowerNode)) {\n        maxLen=j;\n        dest=other;\n        break;\n      }\n    }\n    Drawf.dashLine(Pal.placing,x * tilesize + dx * (tilesize * size / 2f + 2),y * tilesize + dy * (tilesize * size / 2f + 2),x * tilesize + dx * (maxLen) * tilesize,y * tilesize + dy * (maxLen) * tilesize);\n    if (dest != null) {\n      Drawf.square(dest.x,dest.y,dest.block.size * tilesize / 2f + 2.5f,0f);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawPlace(int x,int y,int rotation,boolean valid){\n  for (int i=0; i < 4; i++) {\n    int maxLen=range + size / 2;\n    Building dest=null;\n    var dir=Geometry.d4[i];\n    int dx=dir.x, dy=dir.y;\n    int offset=size / 2;\n    for (int j=1 + offset; j <= range + offset; j++) {\n      var other=world.build(x + j * dir.x,y + j * dir.y);\n      if (other != null && other.isInsulated()) {\n        break;\n      }\n      if (other != null && other.block.hasPower && other.team == Vars.player.team() && !(other.block instanceof PowerNode)) {\n        maxLen=j;\n        dest=other;\n        break;\n      }\n    }\n    Drawf.dashLine(Pal.placing,x * tilesize + dx * (tilesize * size / 2f + 2),y * tilesize + dy * (tilesize * size / 2f + 2),x * tilesize + dx * (maxLen) * tilesize,y * tilesize + dy * (maxLen) * tilesize);\n    if (dest != null) {\n      Drawf.square(dest.x,dest.y,dest.block.size * tilesize / 2f + 2.5f,0f);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 242,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 34
      },
      "nodeContext" : "int j=1 + offset",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 73,
    "startColumnNumber" : 24,
    "endLineNumber" : 73,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}