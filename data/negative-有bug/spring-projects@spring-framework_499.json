{
  "id" : 499,
  "expression" : "getUrl(\"/echo\")",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-webflux/src/test/java/org/springframework/web/reactive/socket/WebSocketIntegrationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getUrl(\"/echo\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 67,
      "startColumnNumber" : 22,
      "endLineNumber" : 67,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 12
      },
      "nodeContext" : "this.client.execute(getUrl(\"/echo\"),session -> session.send(input.map(session::textMessage)).thenMany(session.receive().take(count).map(WebSocketMessage::getPayloadAsText)).subscribeWith(output).then())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 19
      },
      "nodeContext" : "this.client.execute(getUrl(\"/echo\"),session -> session.send(input.map(session::textMessage)).thenMany(session.receive().take(count).map(WebSocketMessage::getPayloadAsText)).subscribeWith(output).then()).block(TIMEOUT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 20
      },
      "nodeContext" : "this.client.execute(getUrl(\"/echo\"),session -> session.send(input.map(session::textMessage)).thenMany(session.receive().take(count).map(WebSocketMessage::getPayloadAsText)).subscribeWith(output).then()).block(TIMEOUT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 42,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 62,
        "startColumnNumber" : 37,
        "endLineNumber" : 75,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int count=100;\n  Flux<String> input=Flux.range(1,count).map(index -> \"msg-\" + index);\n  ReplayProcessor<Object> output=ReplayProcessor.create(count);\n  this.client.execute(getUrl(\"/echo\"),session -> session.send(input.map(session::textMessage)).thenMany(session.receive().take(count).map(WebSocketMessage::getPayloadAsText)).subscribeWith(output).then()).block(TIMEOUT);\n  assertEquals(input.collectList().block(TIMEOUT),output.collectList().block(TIMEOUT));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 544,
        "startLineNumber" : 61,
        "startColumnNumber" : 1,
        "endLineNumber" : 75,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void echo() throws Exception {\n  int count=100;\n  Flux<String> input=Flux.range(1,count).map(index -> \"msg-\" + index);\n  ReplayProcessor<Object> output=ReplayProcessor.create(count);\n  this.client.execute(getUrl(\"/echo\"),session -> session.send(input.map(session::textMessage)).thenMany(session.receive().take(count).map(WebSocketMessage::getPayloadAsText)).subscribeWith(output).then()).block(TIMEOUT);\n  assertEquals(input.collectList().block(TIMEOUT),output.collectList().block(TIMEOUT));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 12
      },
      "nodeContext" : "this.client.execute(getUrl(\"/echo\"),session -> session.send(input.map(session::textMessage)).thenMany(session.receive().take(count).map(WebSocketMessage::getPayloadAsText)).subscribeWith(output).then())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 9
    },
    "tokenLength" : 2,
    "type" : "java.net.URI"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 67,
    "startColumnNumber" : 22,
    "endLineNumber" : 67,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}