{
  "id" : 95,
  "expression" : "null",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/configuration/CustomizedAnnotationForSmartMockTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 56,
      "startColumnNumber" : 74,
      "endLineNumber" : 56,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 56,
        "startColumnNumber" : 32,
        "endLineNumber" : 56,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Modifier.isStatic(field.getModifiers()) ? null : testClassInstance",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 55,
        "startColumnNumber" : 24,
        "endLineNumber" : 57,
        "endColumnNumber" : 91
      },
      "nodeContext" : "field.set(Modifier.isStatic(field.getModifiers()) ? null : testClassInstance,Mockito.mock(field.getType(),Mockito.RETURNS_SMART_NULLS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 55,
        "startColumnNumber" : 24,
        "endLineNumber" : 57,
        "endColumnNumber" : 92
      },
      "nodeContext" : "field.set(Modifier.isStatic(field.getModifiers()) ? null : testClassInstance,Mockito.mock(field.getType(),Mockito.RETURNS_SMART_NULLS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 54,
        "startColumnNumber" : 24,
        "endLineNumber" : 58,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  field.set(Modifier.isStatic(field.getModifiers()) ? null : testClassInstance,Mockito.mock(field.getType(),Mockito.RETURNS_SMART_NULLS));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 54,
        "startColumnNumber" : 20,
        "endLineNumber" : 60,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  field.set(Modifier.isStatic(field.getModifiers()) ? null : testClassInstance,Mockito.mock(field.getType(),Mockito.RETURNS_SMART_NULLS));\n}\n catch (Exception exception) {\n  throw new AssertionError(exception.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 477,
        "startLineNumber" : 52,
        "startColumnNumber" : 64,
        "endLineNumber" : 61,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  field.setAccessible(true);\n  try {\n    field.set(Modifier.isStatic(field.getModifiers()) ? null : testClassInstance,Mockito.mock(field.getType(),Mockito.RETURNS_SMART_NULLS));\n  }\n catch (  Exception exception) {\n    throw new AssertionError(exception.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 61,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (field.isAnnotationPresent(SmartMock.class)) {\n  field.setAccessible(true);\n  try {\n    field.set(Modifier.isStatic(field.getModifiers()) ? null : testClassInstance,Mockito.mock(field.getType(),Mockito.RETURNS_SMART_NULLS));\n  }\n catch (  Exception exception) {\n    throw new AssertionError(exception.getMessage());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 51,
        "startColumnNumber" : 58,
        "endLineNumber" : 62,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (field.isAnnotationPresent(SmartMock.class)) {\n    field.setAccessible(true);\n    try {\n      field.set(Modifier.isStatic(field.getModifiers()) ? null : testClassInstance,Mockito.mock(field.getType(),Mockito.RETURNS_SMART_NULLS));\n    }\n catch (    Exception exception) {\n      throw new AssertionError(exception.getMessage());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Field field : clazz.getDeclaredFields()) {\n  if (field.isAnnotationPresent(SmartMock.class)) {\n    field.setAccessible(true);\n    try {\n      field.set(Modifier.isStatic(field.getModifiers()) ? null : testClassInstance,Mockito.mock(field.getType(),Mockito.RETURNS_SMART_NULLS));\n    }\n catch (    Exception exception) {\n      throw new AssertionError(exception.getMessage());\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 50,
        "startColumnNumber" : 35,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Field field : clazz.getDeclaredFields()) {\n    if (field.isAnnotationPresent(SmartMock.class)) {\n      field.setAccessible(true);\n      try {\n        field.set(Modifier.isStatic(field.getModifiers()) ? null : testClassInstance,Mockito.mock(field.getType(),Mockito.RETURNS_SMART_NULLS));\n      }\n catch (      Exception exception) {\n        throw new AssertionError(exception.getMessage());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override protected void onInjection(Object testClassInstance,Class<?> clazz,Set<Field> mockDependentFields,Set<Object> mocks){\n  for (  Field field : clazz.getDeclaredFields()) {\n    if (field.isAnnotationPresent(SmartMock.class)) {\n      field.setAccessible(true);\n      try {\n        field.set(Modifier.isStatic(field.getModifiers()) ? null : testClassInstance,Mockito.mock(field.getType(),Mockito.RETURNS_SMART_NULLS));\n      }\n catch (      Exception exception) {\n        throw new AssertionError(exception.getMessage());\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 56,
        "startColumnNumber" : 32,
        "endLineNumber" : 56,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Modifier.isStatic(field.getModifiers()) ? null : testClassInstance",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 56,
    "startColumnNumber" : 74,
    "endLineNumber" : 56,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}