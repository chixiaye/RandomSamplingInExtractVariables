{
  "id" : 61,
  "expression" : "ArgTypeAdapter",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-gui/src/main/java/jadx/gui/utils/codecache/disk/adapters/VarNodeAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ArgTypeAdapter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 28,
      "startColumnNumber" : 2,
      "endLineNumber" : 28,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 28,
        "endColumnNumber" : 25
      },
      "nodeContext" : "ArgTypeAdapter.INSTANCE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 28,
        "endColumnNumber" : 53
      },
      "nodeContext" : "ArgTypeAdapter.INSTANCE.write(out,value.getType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 28,
        "endColumnNumber" : 54
      },
      "nodeContext" : "ArgTypeAdapter.INSTANCE.write(out,value.getType());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 24,
        "startColumnNumber" : 69,
        "endLineNumber" : 30,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  mthAdapter.write(out,value.getMth());\n  writeUVInt(out,value.getReg());\n  writeUVInt(out,value.getSsa());\n  ArgTypeAdapter.INSTANCE.write(out,value.getType());\n  writeNullableUTF(out,value.getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 298,
        "startLineNumber" : 23,
        "startColumnNumber" : 1,
        "endLineNumber" : 30,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void write(DataOutput out,VarNode value) throws IOException {\n  mthAdapter.write(out,value.getMth());\n  writeUVInt(out,value.getReg());\n  writeUVInt(out,value.getSsa());\n  ArgTypeAdapter.INSTANCE.write(out,value.getType());\n  writeNullableUTF(out,value.getName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 28,
        "endColumnNumber" : 54
      },
      "nodeContext" : "ArgTypeAdapter.INSTANCE.write(out,value.getType());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "jadx.gui.utils.codecache.disk.adapters.ArgTypeAdapter"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 28,
    "startColumnNumber" : 2,
    "endLineNumber" : 28,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}