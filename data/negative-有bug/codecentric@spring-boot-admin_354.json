{
  "id" : 354,
  "expression" : "1000",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/eventstore/AbstractEventStoreTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 101,
      "startColumnNumber" : 56,
      "endLineNumber" : 101,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 101,
        "startColumnNumber" : 44,
        "endLineNumber" : 101,
        "endColumnNumber" : 61
      },
      "nodeContext" : "createStore(1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 101,
        "startColumnNumber" : 36,
        "endLineNumber" : 101,
        "endColumnNumber" : 61
      },
      "nodeContext" : "store=createStore(1000)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 62
      },
      "nodeContext" : "ClientApplicationEventStore store=createStore(1000);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1805,
        "startLineNumber" : 99,
        "startColumnNumber" : 41,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ApplicationId id=ApplicationId.of(\"a\");\n  ClientApplicationEventStore store=createStore(1000);\n  Function<Integer,ClientApplicationEvent> eventFactory=i -> new ClientApplicationDeregisteredEvent(id,i);\n  Flux<Void> eventgenerator=Flux.range(0,1000).map(eventFactory).buffer(2).flatMap(events -> store.append(events).onErrorResume(OptimisticLockingException.class,(ex) -> {\n    log.info(\"skipped {}\",ex.getMessage());\n    return Mono.empty();\n  }\n).delayElement(Duration.ofMillis(5L)));\n  StepVerifier.create(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\")).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).then()).verifyComplete();\n  List<Long> versions=store.find(id).map(ClientApplicationEvent::getVersion).collectList().block();\n  List<Long> expected=LongStream.range(0,1000).boxed().collect(toList());\n  assertThat(versions).containsExactlyElementsOf(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1852,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void concurrent_read_writes(){\n  ApplicationId id=ApplicationId.of(\"a\");\n  ClientApplicationEventStore store=createStore(1000);\n  Function<Integer,ClientApplicationEvent> eventFactory=i -> new ClientApplicationDeregisteredEvent(id,i);\n  Flux<Void> eventgenerator=Flux.range(0,1000).map(eventFactory).buffer(2).flatMap(events -> store.append(events).onErrorResume(OptimisticLockingException.class,(ex) -> {\n    log.info(\"skipped {}\",ex.getMessage());\n    return Mono.empty();\n  }\n).delayElement(Duration.ofMillis(5L)));\n  StepVerifier.create(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\")).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).then()).verifyComplete();\n  List<Long> versions=store.find(id).map(ClientApplicationEvent::getVersion).collectList().block();\n  List<Long> expected=LongStream.range(0,1000).boxed().collect(toList());\n  assertThat(versions).containsExactlyElementsOf(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 62
      },
      "nodeContext" : "ClientApplicationEventStore store=createStore(1000);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 104,
      "startColumnNumber" : 50,
      "endLineNumber" : 104,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 104,
        "startColumnNumber" : 36,
        "endLineNumber" : 104,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Flux.range(0,1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 104,
        "startColumnNumber" : 36,
        "endLineNumber" : 105,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Flux.range(0,1000).map(eventFactory)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 104,
        "startColumnNumber" : 36,
        "endLineNumber" : 106,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Flux.range(0,1000).map(eventFactory).buffer(2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 795,
        "startLineNumber" : 104,
        "startColumnNumber" : 36,
        "endLineNumber" : 113,
        "endColumnNumber" : 101
      },
      "nodeContext" : "Flux.range(0,1000).map(eventFactory).buffer(2).flatMap(events -> store.append(events).onErrorResume(OptimisticLockingException.class,(ex) -> {\n  log.info(\"skipped {}\",ex.getMessage());\n  return Mono.empty();\n}\n).delayElement(Duration.ofMillis(5L)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 47,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 104,
        "startColumnNumber" : 19,
        "endLineNumber" : 113,
        "endColumnNumber" : 101
      },
      "nodeContext" : "eventgenerator=Flux.range(0,1000).map(eventFactory).buffer(2).flatMap(events -> store.append(events).onErrorResume(OptimisticLockingException.class,(ex) -> {\n  log.info(\"skipped {}\",ex.getMessage());\n  return Mono.empty();\n}\n).delayElement(Duration.ofMillis(5L)))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 49,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 102
      },
      "nodeContext" : "Flux<Void> eventgenerator=Flux.range(0,1000).map(eventFactory).buffer(2).flatMap(events -> store.append(events).onErrorResume(OptimisticLockingException.class,(ex) -> {\n  log.info(\"skipped {}\",ex.getMessage());\n  return Mono.empty();\n}\n).delayElement(Duration.ofMillis(5L)));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 55,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1805,
        "startLineNumber" : 99,
        "startColumnNumber" : 41,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ApplicationId id=ApplicationId.of(\"a\");\n  ClientApplicationEventStore store=createStore(1000);\n  Function<Integer,ClientApplicationEvent> eventFactory=i -> new ClientApplicationDeregisteredEvent(id,i);\n  Flux<Void> eventgenerator=Flux.range(0,1000).map(eventFactory).buffer(2).flatMap(events -> store.append(events).onErrorResume(OptimisticLockingException.class,(ex) -> {\n    log.info(\"skipped {}\",ex.getMessage());\n    return Mono.empty();\n  }\n).delayElement(Duration.ofMillis(5L)));\n  StepVerifier.create(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\")).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).then()).verifyComplete();\n  List<Long> versions=store.find(id).map(ClientApplicationEvent::getVersion).collectList().block();\n  List<Long> expected=LongStream.range(0,1000).boxed().collect(toList());\n  assertThat(versions).containsExactlyElementsOf(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1852,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void concurrent_read_writes(){\n  ApplicationId id=ApplicationId.of(\"a\");\n  ClientApplicationEventStore store=createStore(1000);\n  Function<Integer,ClientApplicationEvent> eventFactory=i -> new ClientApplicationDeregisteredEvent(id,i);\n  Flux<Void> eventgenerator=Flux.range(0,1000).map(eventFactory).buffer(2).flatMap(events -> store.append(events).onErrorResume(OptimisticLockingException.class,(ex) -> {\n    log.info(\"skipped {}\",ex.getMessage());\n    return Mono.empty();\n  }\n).delayElement(Duration.ofMillis(5L)));\n  StepVerifier.create(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\")).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).then()).verifyComplete();\n  List<Long> versions=store.find(id).map(ClientApplicationEvent::getVersion).collectList().block();\n  List<Long> expected=LongStream.range(0,1000).boxed().collect(toList());\n  assertThat(versions).containsExactlyElementsOf(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 104,
        "startColumnNumber" : 36,
        "endLineNumber" : 104,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Flux.range(0,1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 122,
      "startColumnNumber" : 50,
      "endLineNumber" : 122,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 122,
        "startColumnNumber" : 30,
        "endLineNumber" : 122,
        "endColumnNumber" : 55
      },
      "nodeContext" : "LongStream.range(0,1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 122,
        "startColumnNumber" : 30,
        "endLineNumber" : 122,
        "endColumnNumber" : 63
      },
      "nodeContext" : "LongStream.range(0,1000).boxed()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 122,
        "startColumnNumber" : 30,
        "endLineNumber" : 122,
        "endColumnNumber" : 81
      },
      "nodeContext" : "LongStream.range(0,1000).boxed().collect(toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 122,
        "endColumnNumber" : 81
      },
      "nodeContext" : "expected=LongStream.range(0,1000).boxed().collect(toList())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 82
      },
      "nodeContext" : "List<Long> expected=LongStream.range(0,1000).boxed().collect(toList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1805,
        "startLineNumber" : 99,
        "startColumnNumber" : 41,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ApplicationId id=ApplicationId.of(\"a\");\n  ClientApplicationEventStore store=createStore(1000);\n  Function<Integer,ClientApplicationEvent> eventFactory=i -> new ClientApplicationDeregisteredEvent(id,i);\n  Flux<Void> eventgenerator=Flux.range(0,1000).map(eventFactory).buffer(2).flatMap(events -> store.append(events).onErrorResume(OptimisticLockingException.class,(ex) -> {\n    log.info(\"skipped {}\",ex.getMessage());\n    return Mono.empty();\n  }\n).delayElement(Duration.ofMillis(5L)));\n  StepVerifier.create(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\")).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).then()).verifyComplete();\n  List<Long> versions=store.find(id).map(ClientApplicationEvent::getVersion).collectList().block();\n  List<Long> expected=LongStream.range(0,1000).boxed().collect(toList());\n  assertThat(versions).containsExactlyElementsOf(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1852,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void concurrent_read_writes(){\n  ApplicationId id=ApplicationId.of(\"a\");\n  ClientApplicationEventStore store=createStore(1000);\n  Function<Integer,ClientApplicationEvent> eventFactory=i -> new ClientApplicationDeregisteredEvent(id,i);\n  Flux<Void> eventgenerator=Flux.range(0,1000).map(eventFactory).buffer(2).flatMap(events -> store.append(events).onErrorResume(OptimisticLockingException.class,(ex) -> {\n    log.info(\"skipped {}\",ex.getMessage());\n    return Mono.empty();\n  }\n).delayElement(Duration.ofMillis(5L)));\n  StepVerifier.create(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\")).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).mergeWith(eventgenerator.subscribeOn(Schedulers.newSingle(\"a\"))).then()).verifyComplete();\n  List<Long> versions=store.find(id).map(ClientApplicationEvent::getVersion).collectList().block();\n  List<Long> expected=LongStream.range(0,1000).boxed().collect(toList());\n  assertThat(versions).containsExactlyElementsOf(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 82
      },
      "nodeContext" : "List<Long> expected=LongStream.range(0,1000).boxed().collect(toList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 101,
    "startColumnNumber" : 56,
    "endLineNumber" : 101,
    "endColumnNumber" : 60
  }, {
    "charLength" : 4,
    "startLineNumber" : 104,
    "startColumnNumber" : 50,
    "endLineNumber" : 104,
    "endColumnNumber" : 54
  }, {
    "charLength" : 4,
    "startLineNumber" : 122,
    "startColumnNumber" : 50,
    "endLineNumber" : 122,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}