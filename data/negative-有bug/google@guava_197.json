{
  "id" : 197,
  "expression" : "Iterables.toArray(elements,new Comparable<?>[0])",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava/src/com/google/common/collect/ImmutableList.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Iterables.toArray(elements,new Comparable<?>[0])",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 299,
      "startColumnNumber" : 28,
      "endLineNumber" : 299,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 12,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 299,
        "startColumnNumber" : 20,
        "endLineNumber" : 299,
        "endColumnNumber" : 77
      },
      "nodeContext" : "array=Iterables.toArray(elements,new Comparable<?>[0])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 299,
        "startColumnNumber" : 4,
        "endLineNumber" : 299,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Comparable<?>[] array=Iterables.toArray(elements,new Comparable<?>[0]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 298,
        "startColumnNumber" : 38,
        "endLineNumber" : 303,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Comparable<?>[] array=Iterables.toArray(elements,new Comparable<?>[0]);\n  checkElementsNotNull((Object[])array);\n  Arrays.sort(array);\n  return asImmutableList(array);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 282,
        "startColumnNumber" : 2,
        "endLineNumber" : 303,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns an immutable list containing the given elements, sorted according to their natural order. The sorting algorithm used is stable, so elements that compare as equal will stay in the order in which they appear in the input. <p>If your data has no duplicates, or you wish to deduplicate elements, use  {@code ImmutableSortedSet.copyOf(elements)}; if you want a  {@code List} you can use its {@code asList()} view.<p><b>Java 8 users:</b> If you want to convert a  {@link java.util.stream.Stream} to a sorted{@code ImmutableList}, use  {@code stream.sorted().collect(toImmutableList())}.\n * @throws NullPointerException if any element in the input is null\n * @since 21.0\n */\npublic static <E extends Comparable<? super E>>ImmutableList<E> sortedCopyOf(Iterable<? extends E> elements){\n  Comparable<?>[] array=Iterables.toArray(elements,new Comparable<?>[0]);\n  checkElementsNotNull((Object[])array);\n  Arrays.sort(array);\n  return asImmutableList(array);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 299,
        "startColumnNumber" : 4,
        "endLineNumber" : 299,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Comparable<?>[] array=Iterables.toArray(elements,new Comparable<?>[0]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    },
    "tokenLength" : 6,
    "type" : "java.lang.Comparable<?>[]"
  } ],
  "positionList" : [ {
    "charLength" : 49,
    "startLineNumber" : 299,
    "startColumnNumber" : 28,
    "endLineNumber" : 299,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}