{
  "id" : 42,
  "expression" : "paramType",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/convert/impl/AtomicReferenceConverter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "paramType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 26,
      "startColumnNumber" : 33,
      "endLineNumber" : 26,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 26,
        "startColumnNumber" : 14,
        "endLineNumber" : 26,
        "endColumnNumber" : 43
      },
      "nodeContext" : "TypeUtil.isUnknown(paramType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 26,
        "startColumnNumber" : 5,
        "endLineNumber" : 26,
        "endColumnNumber" : 43
      },
      "nodeContext" : "false == TypeUtil.isUnknown(paramType)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 28,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (false == TypeUtil.isUnknown(paramType)) {\n  targetValue=ConverterRegistry.getInstance().convert(paramType,value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 21,
        "startColumnNumber" : 60,
        "endLineNumber" : 34,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Object targetValue=null;\n  final Type paramType=TypeUtil.getTypeArgument(AtomicReference.class);\n  if (false == TypeUtil.isUnknown(paramType)) {\n    targetValue=ConverterRegistry.getInstance().convert(paramType,value);\n  }\n  if (null == targetValue) {\n    targetValue=value;\n  }\n  return new AtomicReference<>(targetValue);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 20,
        "startColumnNumber" : 1,
        "endLineNumber" : 34,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected AtomicReference<?> convertInternal(Object value){\n  Object targetValue=null;\n  final Type paramType=TypeUtil.getTypeArgument(AtomicReference.class);\n  if (false == TypeUtil.isUnknown(paramType)) {\n    targetValue=ConverterRegistry.getInstance().convert(paramType,value);\n  }\n  if (null == targetValue) {\n    targetValue=value;\n  }\n  return new AtomicReference<>(targetValue);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 26,
        "startColumnNumber" : 5,
        "endLineNumber" : 26,
        "endColumnNumber" : 43
      },
      "nodeContext" : "false == TypeUtil.isUnknown(paramType)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Type"
  }, {
    "nodeContext" : "paramType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 27,
      "startColumnNumber" : 57,
      "endLineNumber" : 27,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 27,
        "startColumnNumber" : 17,
        "endLineNumber" : 27,
        "endColumnNumber" : 74
      },
      "nodeContext" : "ConverterRegistry.getInstance().convert(paramType,value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 27,
        "startColumnNumber" : 3,
        "endLineNumber" : 27,
        "endColumnNumber" : 74
      },
      "nodeContext" : "targetValue=ConverterRegistry.getInstance().convert(paramType,value)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 27,
        "startColumnNumber" : 3,
        "endLineNumber" : 27,
        "endColumnNumber" : 75
      },
      "nodeContext" : "targetValue=ConverterRegistry.getInstance().convert(paramType,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 26,
        "startColumnNumber" : 44,
        "endLineNumber" : 28,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  targetValue=ConverterRegistry.getInstance().convert(paramType,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 28,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (false == TypeUtil.isUnknown(paramType)) {\n  targetValue=ConverterRegistry.getInstance().convert(paramType,value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 21,
        "startColumnNumber" : 60,
        "endLineNumber" : 34,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Object targetValue=null;\n  final Type paramType=TypeUtil.getTypeArgument(AtomicReference.class);\n  if (false == TypeUtil.isUnknown(paramType)) {\n    targetValue=ConverterRegistry.getInstance().convert(paramType,value);\n  }\n  if (null == targetValue) {\n    targetValue=value;\n  }\n  return new AtomicReference<>(targetValue);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 20,
        "startColumnNumber" : 1,
        "endLineNumber" : 34,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected AtomicReference<?> convertInternal(Object value){\n  Object targetValue=null;\n  final Type paramType=TypeUtil.getTypeArgument(AtomicReference.class);\n  if (false == TypeUtil.isUnknown(paramType)) {\n    targetValue=ConverterRegistry.getInstance().convert(paramType,value);\n  }\n  if (null == targetValue) {\n    targetValue=value;\n  }\n  return new AtomicReference<>(targetValue);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 27,
        "startColumnNumber" : 3,
        "endLineNumber" : 27,
        "endColumnNumber" : 75
      },
      "nodeContext" : "targetValue=ConverterRegistry.getInstance().convert(paramType,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Type"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 26,
    "startColumnNumber" : 33,
    "endLineNumber" : 26,
    "endColumnNumber" : 42
  }, {
    "charLength" : 9,
    "startLineNumber" : 27,
    "startColumnNumber" : 57,
    "endLineNumber" : 27,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}