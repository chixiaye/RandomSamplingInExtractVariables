{
  "id" : 390,
  "expression" : "\"Typically, the test class keeps strong reference to the mock object \"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/invocation/mockref/MockWeakReference.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Typically, the test class keeps strong reference to the mock object \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 70,
      "startLineNumber" : 34,
      "startColumnNumber" : 30,
      "endLineNumber" : 34,
      "endColumnNumber" : 100
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 32,
        "startColumnNumber" : 20,
        "endLineNumber" : 39,
        "endColumnNumber" : 44
      },
      "nodeContext" : "\"The mock object was garbage collected. \" + \"This should not happen in normal circumstances when using public API. \" + \"Typically, the test class keeps strong reference to the mock object \"+ \"and it prevents getting the mock collected. Mockito internally needs \"+ \"to keep weak references to mock objects to avoid memory leaks for \"+ \"certain types of MockMaker implementations. If you see this exception \"+ \"using Mockito public API, please file a bug. For more information see \"+ \"issue #1313.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 31,
        "startColumnNumber" : 18,
        "endLineNumber" : 39,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new IllegalStateException(\"The mock object was garbage collected. \" + \"This should not happen in normal circumstances when using public API. \" + \"Typically, the test class keeps strong reference to the mock object \"+ \"and it prevents getting the mock collected. Mockito internally needs \"+ \"to keep weak references to mock objects to avoid memory leaks for \"+ \"certain types of MockMaker implementations. If you see this exception \"+ \"using Mockito public API, please file a bug. For more information see \"+ \"issue #1313.\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 760,
        "startLineNumber" : 31,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 46
      },
      "nodeContext" : "throw new IllegalStateException(\"The mock object was garbage collected. \" + \"This should not happen in normal circumstances when using public API. \" + \"Typically, the test class keeps strong reference to the mock object \"+ \"and it prevents getting the mock collected. Mockito internally needs \"+ \"to keep weak references to mock objects to avoid memory leaks for \"+ \"certain types of MockMaker implementations. If you see this exception \"+ \"using Mockito public API, please file a bug. For more information see \"+ \"issue #1313.\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 30,
        "startColumnNumber" : 25,
        "endLineNumber" : 40,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalStateException(\"The mock object was garbage collected. \" + \"This should not happen in normal circumstances when using public API. \" + \"Typically, the test class keeps strong reference to the mock object \"+ \"and it prevents getting the mock collected. Mockito internally needs \"+ \"to keep weak references to mock objects to avoid memory leaks for \"+ \"certain types of MockMaker implementations. If you see this exception \"+ \"using Mockito public API, please file a bug. For more information see \"+ \"issue #1313.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (ref == null) {\n  throw new IllegalStateException(\"The mock object was garbage collected. \" + \"This should not happen in normal circumstances when using public API. \" + \"Typically, the test class keeps strong reference to the mock object \"+ \"and it prevents getting the mock collected. Mockito internally needs \"+ \"to keep weak references to mock objects to avoid memory leaks for \"+ \"certain types of MockMaker implementations. If you see this exception \"+ \"using Mockito public API, please file a bug. For more information see \"+ \"issue #1313.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 879,
        "startLineNumber" : 27,
        "startColumnNumber" : 19,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  T ref=this.ref.get();\n  if (ref == null) {\n    throw new IllegalStateException(\"The mock object was garbage collected. \" + \"This should not happen in normal circumstances when using public API. \" + \"Typically, the test class keeps strong reference to the mock object \"+ \"and it prevents getting the mock collected. Mockito internally needs \"+ \"to keep weak references to mock objects to avoid memory leaks for \"+ \"certain types of MockMaker implementations. If you see this exception \"+ \"using Mockito public API, please file a bug. For more information see \"+ \"issue #1313.\");\n  }\n  return ref;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public T get(){\n  T ref=this.ref.get();\n  if (ref == null) {\n    throw new IllegalStateException(\"The mock object was garbage collected. \" + \"This should not happen in normal circumstances when using public API. \" + \"Typically, the test class keeps strong reference to the mock object \"+ \"and it prevents getting the mock collected. Mockito internally needs \"+ \"to keep weak references to mock objects to avoid memory leaks for \"+ \"certain types of MockMaker implementations. If you see this exception \"+ \"using Mockito public API, please file a bug. For more information see \"+ \"issue #1313.\");\n  }\n  return ref;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 38,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 32,
        "startColumnNumber" : 20,
        "endLineNumber" : 39,
        "endColumnNumber" : 44
      },
      "nodeContext" : "\"The mock object was garbage collected. \" + \"This should not happen in normal circumstances when using public API. \" + \"Typically, the test class keeps strong reference to the mock object \"+ \"and it prevents getting the mock collected. Mockito internally needs \"+ \"to keep weak references to mock objects to avoid memory leaks for \"+ \"certain types of MockMaker implementations. If you see this exception \"+ \"using Mockito public API, please file a bug. For more information see \"+ \"issue #1313.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 2
    },
    "tokenLength" : 10,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 70,
    "startLineNumber" : 34,
    "startColumnNumber" : 30,
    "endLineNumber" : 34,
    "endColumnNumber" : 100
  } ],
  "layoutRelationDataList" : [ ]
}