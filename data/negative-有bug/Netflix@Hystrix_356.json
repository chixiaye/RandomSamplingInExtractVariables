{
  "id" : 356,
  "expression" : "\"from 'fallbackOverridesDefaultIgnoreExceptions', cause: \" + errorType.getSimpleName()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-javanica/src/test/java/com/netflix/hystrix/contrib/javanica/test/common/error/BasicDefaultRaiseHystrixExceptionsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"from 'fallbackOverridesDefaultIgnoreExceptions', cause: \" + errorType.getSimpleName()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 86,
      "startLineNumber" : 125,
      "startColumnNumber" : 46,
      "endLineNumber" : 125,
      "endColumnNumber" : 132
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 125,
        "startColumnNumber" : 22,
        "endLineNumber" : 125,
        "endColumnNumber" : 133
      },
      "nodeContext" : "new BadRequestException(\"from 'fallbackOverridesDefaultIgnoreExceptions', cause: \" + errorType.getSimpleName())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 125,
        "endColumnNumber" : 134
      },
      "nodeContext" : "throw new BadRequestException(\"from 'fallbackOverridesDefaultIgnoreExceptions', cause: \" + errorType.getSimpleName());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 123,
        "startColumnNumber" : 59,
        "endLineNumber" : 126,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new BadRequestException(\"from 'fallbackOverridesDefaultIgnoreExceptions', cause: \" + errorType.getSimpleName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (errorType.equals(BadRequestException.class)) {\n  throw new BadRequestException(\"from 'fallbackOverridesDefaultIgnoreExceptions', cause: \" + errorType.getSimpleName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 122,
        "startColumnNumber" : 102,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (errorType.equals(BadRequestException.class)) {\n    throw new BadRequestException(\"from 'fallbackOverridesDefaultIgnoreExceptions', cause: \" + errorType.getSimpleName());\n  }\n  throw new SpecificException(\"from 'commandOverridesDefaultIgnoreExceptions', cause: \" + errorType.getSimpleName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@HystrixCommand(ignoreExceptions=SpecificException.class) private Object fallbackOverridesDefaultIgnoreExceptions(Class<? extends Throwable> errorType){\n  if (errorType.equals(BadRequestException.class)) {\n    throw new BadRequestException(\"from 'fallbackOverridesDefaultIgnoreExceptions', cause: \" + errorType.getSimpleName());\n  }\n  throw new SpecificException(\"from 'commandOverridesDefaultIgnoreExceptions', cause: \" + errorType.getSimpleName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 125,
        "endColumnNumber" : 134
      },
      "nodeContext" : "throw new BadRequestException(\"from 'fallbackOverridesDefaultIgnoreExceptions', cause: \" + errorType.getSimpleName());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 86,
    "startLineNumber" : 125,
    "startColumnNumber" : 46,
    "endLineNumber" : 125,
    "endColumnNumber" : 132
  } ],
  "layoutRelationDataList" : [ ]
}