{
  "id" : 186,
  "expression" : "semicolon",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/client/result/VEventResultParser.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "semicolon",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 57,
      "startColumnNumber" : 61,
      "endLineNumber" : 57,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 57,
        "startColumnNumber" : 38,
        "endLineNumber" : 57,
        "endColumnNumber" : 71
      },
      "nodeContext" : "geoString.substring(0,semicolon)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 57,
        "startColumnNumber" : 19,
        "endLineNumber" : 57,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Double.parseDouble(geoString.substring(0,semicolon))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 72
      },
      "nodeContext" : "latitude=Double.parseDouble(geoString.substring(0,semicolon))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 73
      },
      "nodeContext" : "latitude=Double.parseDouble(geoString.substring(0,semicolon));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 59,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  latitude=Double.parseDouble(geoString.substring(0,semicolon));\n  longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  latitude=Double.parseDouble(geoString.substring(0,semicolon));\n  longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n}\n catch (NumberFormatException nfe) {\n  return null;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 54,
        "startColumnNumber" : 11,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int semicolon=geoString.indexOf(';');\n  try {\n    latitude=Double.parseDouble(geoString.substring(0,semicolon));\n    longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n  }\n catch (  NumberFormatException nfe) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 394,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (geoString == null) {\n  latitude=Double.NaN;\n  longitude=Double.NaN;\n}\n else {\n  int semicolon=geoString.indexOf(';');\n  try {\n    latitude=Double.parseDouble(geoString.substring(0,semicolon));\n    longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n  }\n catch (  NumberFormatException nfe) {\n    return null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1337,
        "startLineNumber" : 32,
        "startColumnNumber" : 51,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1399,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public CalendarParsedResult parse(Result result){\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 73
      },
      "nodeContext" : "latitude=Double.parseDouble(geoString.substring(0,semicolon));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "semicolon",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 58,
      "startColumnNumber" : 59,
      "endLineNumber" : 58,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 58,
        "startColumnNumber" : 59,
        "endLineNumber" : 58,
        "endColumnNumber" : 72
      },
      "nodeContext" : "semicolon + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 58,
        "startColumnNumber" : 39,
        "endLineNumber" : 58,
        "endColumnNumber" : 73
      },
      "nodeContext" : "geoString.substring(semicolon + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 58,
        "startColumnNumber" : 20,
        "endLineNumber" : 58,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Double.parseDouble(geoString.substring(semicolon + 1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 74
      },
      "nodeContext" : "longitude=Double.parseDouble(geoString.substring(semicolon + 1))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 75
      },
      "nodeContext" : "longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 59,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  latitude=Double.parseDouble(geoString.substring(0,semicolon));\n  longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  latitude=Double.parseDouble(geoString.substring(0,semicolon));\n  longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n}\n catch (NumberFormatException nfe) {\n  return null;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 54,
        "startColumnNumber" : 11,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int semicolon=geoString.indexOf(';');\n  try {\n    latitude=Double.parseDouble(geoString.substring(0,semicolon));\n    longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n  }\n catch (  NumberFormatException nfe) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 394,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (geoString == null) {\n  latitude=Double.NaN;\n  longitude=Double.NaN;\n}\n else {\n  int semicolon=geoString.indexOf(';');\n  try {\n    latitude=Double.parseDouble(geoString.substring(0,semicolon));\n    longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n  }\n catch (  NumberFormatException nfe) {\n    return null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1337,
        "startLineNumber" : 32,
        "startColumnNumber" : 51,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1399,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public CalendarParsedResult parse(Result result){\n  String rawText=getMassagedText(result);\n  int vEventStart=rawText.indexOf(\"BEGIN:VEVENT\");\n  if (vEventStart < 0) {\n    return null;\n  }\n  String summary=matchSingleVCardPrefixedField(\"SUMMARY\",rawText,true);\n  String start=matchSingleVCardPrefixedField(\"DTSTART\",rawText,true);\n  if (start == null) {\n    return null;\n  }\n  String end=matchSingleVCardPrefixedField(\"DTEND\",rawText,true);\n  String location=matchSingleVCardPrefixedField(\"LOCATION\",rawText,true);\n  String description=matchSingleVCardPrefixedField(\"DESCRIPTION\",rawText,true);\n  String geoString=matchSingleVCardPrefixedField(\"GEO\",rawText,true);\n  double latitude;\n  double longitude;\n  if (geoString == null) {\n    latitude=Double.NaN;\n    longitude=Double.NaN;\n  }\n else {\n    int semicolon=geoString.indexOf(';');\n    try {\n      latitude=Double.parseDouble(geoString.substring(0,semicolon));\n      longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n    }\n catch (    NumberFormatException nfe) {\n      return null;\n    }\n  }\n  try {\n    return new CalendarParsedResult(summary,start,end,location,null,description,latitude,longitude);\n  }\n catch (  IllegalArgumentException iae) {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 75
      },
      "nodeContext" : "longitude=Double.parseDouble(geoString.substring(semicolon + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 57,
    "startColumnNumber" : 61,
    "endLineNumber" : 57,
    "endColumnNumber" : 70
  }, {
    "charLength" : 9,
    "startLineNumber" : 58,
    "startColumnNumber" : 59,
    "endLineNumber" : 58,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}