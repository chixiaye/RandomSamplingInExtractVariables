{
  "id" : 18,
  "expression" : "GuiceInjectors.makeStartupInjector()",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/server/src/test/java/org/apache/druid/server/log/LoggingRequestLoggerProviderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "GuiceInjectors.makeStartupInjector()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 76,
      "startColumnNumber" : 8,
      "endLineNumber" : 76,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 75,
        "startColumnNumber" : 11,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.<Module>of(new QueryableModule(){\n  @Override public void configure(  Binder binder){\n    binder.bind(RequestLogger.class).toProvider(RequestLoggerProvider.class).in(ManageLifecycle.class);\n    binder.bind(Key.get(String.class,Names.named(\"serviceName\"))).toInstance(\"some service\");\n    binder.bind(Key.get(Integer.class,Names.named(\"servicePort\"))).toInstance(0);\n    binder.bind(Key.get(Integer.class,Names.named(\"tlsServicePort\"))).toInstance(-1);\n    JsonConfigProvider.bind(binder,propertyPrefix,RequestLoggerProvider.class);\n  }\n}\n))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 104,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 6
      },
      "nodeContext" : "return Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.<Module>of(new QueryableModule(){\n  @Override public void configure(  Binder binder){\n    binder.bind(RequestLogger.class).toProvider(RequestLoggerProvider.class).in(ManageLifecycle.class);\n    binder.bind(Key.get(String.class,Names.named(\"serviceName\"))).toInstance(\"some service\");\n    binder.bind(Key.get(Integer.class,Names.named(\"servicePort\"))).toInstance(0);\n    binder.bind(Key.get(Integer.class,Names.named(\"tlsServicePort\"))).toInstance(-1);\n    JsonConfigProvider.bind(binder,propertyPrefix,RequestLoggerProvider.class);\n  }\n}\n));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 105,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 74,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.<Module>of(new QueryableModule(){\n    @Override public void configure(    Binder binder){\n      binder.bind(RequestLogger.class).toProvider(RequestLoggerProvider.class).in(ManageLifecycle.class);\n      binder.bind(Key.get(String.class,Names.named(\"serviceName\"))).toInstance(\"some service\");\n      binder.bind(Key.get(Integer.class,Names.named(\"servicePort\"))).toInstance(0);\n      binder.bind(Key.get(Integer.class,Names.named(\"tlsServicePort\"))).toInstance(-1);\n      JsonConfigProvider.bind(binder,propertyPrefix,RequestLoggerProvider.class);\n    }\n  }\n));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 867,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private Injector makeInjector(){\n  return Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.<Module>of(new QueryableModule(){\n    @Override public void configure(    Binder binder){\n      binder.bind(RequestLogger.class).toProvider(RequestLoggerProvider.class).in(ManageLifecycle.class);\n      binder.bind(Key.get(String.class,Names.named(\"serviceName\"))).toInstance(\"some service\");\n      binder.bind(Key.get(Integer.class,Names.named(\"servicePort\"))).toInstance(0);\n      binder.bind(Key.get(Integer.class,Names.named(\"tlsServicePort\"))).toInstance(-1);\n      JsonConfigProvider.bind(binder,propertyPrefix,RequestLoggerProvider.class);\n    }\n  }\n));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 75,
        "startColumnNumber" : 11,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.<Module>of(new QueryableModule(){\n  @Override public void configure(  Binder binder){\n    binder.bind(RequestLogger.class).toProvider(RequestLoggerProvider.class).in(ManageLifecycle.class);\n    binder.bind(Key.get(String.class,Names.named(\"serviceName\"))).toInstance(\"some service\");\n    binder.bind(Key.get(Integer.class,Names.named(\"servicePort\"))).toInstance(0);\n    binder.bind(Key.get(Integer.class,Names.named(\"tlsServicePort\"))).toInstance(-1);\n    JsonConfigProvider.bind(binder,propertyPrefix,RequestLoggerProvider.class);\n  }\n}\n))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 104,
      "astHeight" : 13
    },
    "tokenLength" : 2,
    "type" : "org.apache.druid.guice.Injector"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 76,
    "startColumnNumber" : 8,
    "endLineNumber" : 76,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}