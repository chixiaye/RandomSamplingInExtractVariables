{
  "id" : 51,
  "expression" : "props",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/terminal/TerminalColorScheme.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "props",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 74,
      "startColumnNumber" : 49,
      "endLineNumber" : 74,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 74,
        "startColumnNumber" : 49,
        "endLineNumber" : 74,
        "endColumnNumber" : 65
      },
      "nodeContext" : "props.entrySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1217,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<Object,Object> entries : props.entrySet()) {\n  String key=(String)entries.getKey();\n  String value=(String)entries.getValue();\n  int colorIndex;\n  if (key.equals(\"foreground\")) {\n    colorIndex=TextStyle.COLOR_INDEX_FOREGROUND;\n  }\n else   if (key.equals(\"background\")) {\n    colorIndex=TextStyle.COLOR_INDEX_BACKGROUND;\n  }\n else   if (key.equals(\"cursor\")) {\n    colorIndex=TextStyle.COLOR_INDEX_CURSOR;\n  }\n else   if (key.startsWith(\"color\")) {\n    try {\n      colorIndex=Integer.parseInt(key.substring(5));\n    }\n catch (    NumberFormatException e) {\n      throw new IllegalArgumentException(\"Invalid property: '\" + key + \"'\");\n    }\n  }\n else {\n    throw new IllegalArgumentException(\"Invalid property: '\" + key + \"'\");\n  }\n  int colorValue=TerminalColors.parse(value);\n  if (colorValue == 0)   throw new IllegalArgumentException(\"Property '\" + key + \"' has invalid color: '\"+ value+ \"'\");\n  mDefaultColors[colorIndex]=colorValue;\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 147,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1250,
        "startLineNumber" : 72,
        "startColumnNumber" : 45,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  reset();\n  for (  Map.Entry<Object,Object> entries : props.entrySet()) {\n    String key=(String)entries.getKey();\n    String value=(String)entries.getValue();\n    int colorIndex;\n    if (key.equals(\"foreground\")) {\n      colorIndex=TextStyle.COLOR_INDEX_FOREGROUND;\n    }\n else     if (key.equals(\"background\")) {\n      colorIndex=TextStyle.COLOR_INDEX_BACKGROUND;\n    }\n else     if (key.equals(\"cursor\")) {\n      colorIndex=TextStyle.COLOR_INDEX_CURSOR;\n    }\n else     if (key.startsWith(\"color\")) {\n      try {\n        colorIndex=Integer.parseInt(key.substring(5));\n      }\n catch (      NumberFormatException e) {\n        throw new IllegalArgumentException(\"Invalid property: '\" + key + \"'\");\n      }\n    }\n else {\n      throw new IllegalArgumentException(\"Invalid property: '\" + key + \"'\");\n    }\n    int colorValue=TerminalColors.parse(value);\n    if (colorValue == 0)     throw new IllegalArgumentException(\"Property '\" + key + \"' has invalid color: '\"+ value+ \"'\");\n    mDefaultColors[colorIndex]=colorValue;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1291,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void updateWith(Properties props){\n  reset();\n  for (  Map.Entry<Object,Object> entries : props.entrySet()) {\n    String key=(String)entries.getKey();\n    String value=(String)entries.getValue();\n    int colorIndex;\n    if (key.equals(\"foreground\")) {\n      colorIndex=TextStyle.COLOR_INDEX_FOREGROUND;\n    }\n else     if (key.equals(\"background\")) {\n      colorIndex=TextStyle.COLOR_INDEX_BACKGROUND;\n    }\n else     if (key.equals(\"cursor\")) {\n      colorIndex=TextStyle.COLOR_INDEX_CURSOR;\n    }\n else     if (key.startsWith(\"color\")) {\n      try {\n        colorIndex=Integer.parseInt(key.substring(5));\n      }\n catch (      NumberFormatException e) {\n        throw new IllegalArgumentException(\"Invalid property: '\" + key + \"'\");\n      }\n    }\n else {\n      throw new IllegalArgumentException(\"Invalid property: '\" + key + \"'\");\n    }\n    int colorValue=TerminalColors.parse(value);\n    if (colorValue == 0)     throw new IllegalArgumentException(\"Property '\" + key + \"' has invalid color: '\"+ value+ \"'\");\n    mDefaultColors[colorIndex]=colorValue;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 74,
        "startColumnNumber" : 49,
        "endLineNumber" : 74,
        "endColumnNumber" : 65
      },
      "nodeContext" : "props.entrySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Properties"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 74,
    "startColumnNumber" : 49,
    "endLineNumber" : 74,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}