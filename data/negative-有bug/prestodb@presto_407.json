{
  "id" : 407,
  "expression" : "subTypes",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-bigquery/src/main/java/com/facebook/presto/plugin/bigquery/BigQueryType.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "subTypes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 112,
      "startColumnNumber" : 27,
      "endLineNumber" : 112,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 112,
        "startColumnNumber" : 27,
        "endLineNumber" : 112,
        "endColumnNumber" : 45
      },
      "nodeContext" : "subTypes.isEmpty()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 112,
        "startColumnNumber" : 26,
        "endLineNumber" : 112,
        "endColumnNumber" : 45
      },
      "nodeContext" : "!subTypes.isEmpty()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 89
      },
      "nodeContext" : "checkArgument(!subTypes.isEmpty(),\"a record or struct must have sub-fields\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 90
      },
      "nodeContext" : "checkArgument(!subTypes.isEmpty(),\"a record or struct must have sub-fields\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 109,
        "startColumnNumber" : 28,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map<String,BigQueryType.Adaptor> subTypes=typeAdaptor.getBigQuerySubTypes();\n  checkArgument(!subTypes.isEmpty(),\"a record or struct must have sub-fields\");\n  List<RowType.Field> fields=subTypes.entrySet().stream().map(BigQueryType::toRawTypeField).collect(toList());\n  return RowType.from(fields);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (this == RECORD) {\n  Map<String,BigQueryType.Adaptor> subTypes=typeAdaptor.getBigQuerySubTypes();\n  checkArgument(!subTypes.isEmpty(),\"a record or struct must have sub-fields\");\n  List<RowType.Field> fields=subTypes.entrySet().stream().map(BigQueryType::toRawTypeField).collect(toList());\n  return RowType.from(fields);\n}\n else {\n  return nativeType;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (this == RECORD) {\n    Map<String,BigQueryType.Adaptor> subTypes=typeAdaptor.getBigQuerySubTypes();\n    checkArgument(!subTypes.isEmpty(),\"a record or struct must have sub-fields\");\n    List<RowType.Field> fields=subTypes.entrySet().stream().map(BigQueryType::toRawTypeField).collect(toList());\n    return RowType.from(fields);\n  }\n else {\n    return nativeType;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 544,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Type getNativeType(BigQueryType.Adaptor typeAdaptor){\n  if (this == RECORD) {\n    Map<String,BigQueryType.Adaptor> subTypes=typeAdaptor.getBigQuerySubTypes();\n    checkArgument(!subTypes.isEmpty(),\"a record or struct must have sub-fields\");\n    List<RowType.Field> fields=subTypes.entrySet().stream().map(BigQueryType::toRawTypeField).collect(toList());\n    return RowType.from(fields);\n  }\n else {\n    return nativeType;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 90
      },
      "nodeContext" : "checkArgument(!subTypes.isEmpty(),\"a record or struct must have sub-fields\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,com.facebook.presto.plugin.bigquery.BigQueryType.Adaptor>"
  }, {
    "nodeContext" : "subTypes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 113,
      "startColumnNumber" : 41,
      "endLineNumber" : 113,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 113,
        "startColumnNumber" : 41,
        "endLineNumber" : 113,
        "endColumnNumber" : 60
      },
      "nodeContext" : "subTypes.entrySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 113,
        "startColumnNumber" : 41,
        "endLineNumber" : 113,
        "endColumnNumber" : 69
      },
      "nodeContext" : "subTypes.entrySet().stream()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 113,
        "startColumnNumber" : 41,
        "endLineNumber" : 113,
        "endColumnNumber" : 103
      },
      "nodeContext" : "subTypes.entrySet().stream().map(BigQueryType::toRawTypeField)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 113,
        "startColumnNumber" : 41,
        "endLineNumber" : 113,
        "endColumnNumber" : 121
      },
      "nodeContext" : "subTypes.entrySet().stream().map(BigQueryType::toRawTypeField).collect(toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 113,
        "startColumnNumber" : 32,
        "endLineNumber" : 113,
        "endColumnNumber" : 121
      },
      "nodeContext" : "fields=subTypes.entrySet().stream().map(BigQueryType::toRawTypeField).collect(toList())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 122
      },
      "nodeContext" : "List<RowType.Field> fields=subTypes.entrySet().stream().map(BigQueryType::toRawTypeField).collect(toList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 109,
        "startColumnNumber" : 28,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map<String,BigQueryType.Adaptor> subTypes=typeAdaptor.getBigQuerySubTypes();\n  checkArgument(!subTypes.isEmpty(),\"a record or struct must have sub-fields\");\n  List<RowType.Field> fields=subTypes.entrySet().stream().map(BigQueryType::toRawTypeField).collect(toList());\n  return RowType.from(fields);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (this == RECORD) {\n  Map<String,BigQueryType.Adaptor> subTypes=typeAdaptor.getBigQuerySubTypes();\n  checkArgument(!subTypes.isEmpty(),\"a record or struct must have sub-fields\");\n  List<RowType.Field> fields=subTypes.entrySet().stream().map(BigQueryType::toRawTypeField).collect(toList());\n  return RowType.from(fields);\n}\n else {\n  return nativeType;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (this == RECORD) {\n    Map<String,BigQueryType.Adaptor> subTypes=typeAdaptor.getBigQuerySubTypes();\n    checkArgument(!subTypes.isEmpty(),\"a record or struct must have sub-fields\");\n    List<RowType.Field> fields=subTypes.entrySet().stream().map(BigQueryType::toRawTypeField).collect(toList());\n    return RowType.from(fields);\n  }\n else {\n    return nativeType;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 544,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Type getNativeType(BigQueryType.Adaptor typeAdaptor){\n  if (this == RECORD) {\n    Map<String,BigQueryType.Adaptor> subTypes=typeAdaptor.getBigQuerySubTypes();\n    checkArgument(!subTypes.isEmpty(),\"a record or struct must have sub-fields\");\n    List<RowType.Field> fields=subTypes.entrySet().stream().map(BigQueryType::toRawTypeField).collect(toList());\n    return RowType.from(fields);\n  }\n else {\n    return nativeType;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 122
      },
      "nodeContext" : "List<RowType.Field> fields=subTypes.entrySet().stream().map(BigQueryType::toRawTypeField).collect(toList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,com.facebook.presto.plugin.bigquery.BigQueryType.Adaptor>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 112,
    "startColumnNumber" : 27,
    "endLineNumber" : 112,
    "endColumnNumber" : 35
  }, {
    "charLength" : 8,
    "startLineNumber" : 113,
    "startColumnNumber" : 41,
    "endLineNumber" : 113,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}