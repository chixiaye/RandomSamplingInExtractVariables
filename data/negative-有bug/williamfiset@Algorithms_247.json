{
  "id" : 247,
  "expression" : "6",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/strings/ZAlgorithmTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "6",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 24,
      "startColumnNumber" : 72,
      "endLineNumber" : 24,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 24,
        "startColumnNumber" : 68,
        "endLineNumber" : 24,
        "endColumnNumber" : 89
      },
      "nodeContext" : "{7,6,5,4,3,2,1}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 24,
        "startColumnNumber" : 58,
        "endLineNumber" : 24,
        "endColumnNumber" : 89
      },
      "nodeContext" : "new int[]{7,6,5,4,3,2,1}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertThat(underTest.calculateZ(\"aaaaaaa\")).isEqualTo(new int[]{7,6,5,4,3,2,1})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertThat(underTest.calculateZ(\"aaaaaaa\")).isEqualTo(new int[]{7,6,5,4,3,2,1});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 23,
        "startColumnNumber" : 53,
        "endLineNumber" : 26,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(underTest.calculateZ(\"aaaaaaa\")).isEqualTo(new int[]{7,6,5,4,3,2,1});\n  assertThat(underTest.calculateZ(\"bbbbbbbb\")).isEqualTo(new int[]{8,7,6,5,4,3,2,1});\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 22,
        "startColumnNumber" : 2,
        "endLineNumber" : 26,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void textContainsASingleCharacterRepeated(){\n  assertThat(underTest.calculateZ(\"aaaaaaa\")).isEqualTo(new int[]{7,6,5,4,3,2,1});\n  assertThat(underTest.calculateZ(\"bbbbbbbb\")).isEqualTo(new int[]{8,7,6,5,4,3,2,1});\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertThat(underTest.calculateZ(\"aaaaaaa\")).isEqualTo(new int[]{7,6,5,4,3,2,1});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "6",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 25,
      "startColumnNumber" : 76,
      "endLineNumber" : 25,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 25,
        "startColumnNumber" : 69,
        "endLineNumber" : 25,
        "endColumnNumber" : 93
      },
      "nodeContext" : "{8,7,6,5,4,3,2,1}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 25,
        "startColumnNumber" : 59,
        "endLineNumber" : 25,
        "endColumnNumber" : 93
      },
      "nodeContext" : "new int[]{8,7,6,5,4,3,2,1}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 94
      },
      "nodeContext" : "assertThat(underTest.calculateZ(\"bbbbbbbb\")).isEqualTo(new int[]{8,7,6,5,4,3,2,1})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertThat(underTest.calculateZ(\"bbbbbbbb\")).isEqualTo(new int[]{8,7,6,5,4,3,2,1});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 23,
        "startColumnNumber" : 53,
        "endLineNumber" : 26,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(underTest.calculateZ(\"aaaaaaa\")).isEqualTo(new int[]{7,6,5,4,3,2,1});\n  assertThat(underTest.calculateZ(\"bbbbbbbb\")).isEqualTo(new int[]{8,7,6,5,4,3,2,1});\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 22,
        "startColumnNumber" : 2,
        "endLineNumber" : 26,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void textContainsASingleCharacterRepeated(){\n  assertThat(underTest.calculateZ(\"aaaaaaa\")).isEqualTo(new int[]{7,6,5,4,3,2,1});\n  assertThat(underTest.calculateZ(\"bbbbbbbb\")).isEqualTo(new int[]{8,7,6,5,4,3,2,1});\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertThat(underTest.calculateZ(\"bbbbbbbb\")).isEqualTo(new int[]{8,7,6,5,4,3,2,1});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 24,
    "startColumnNumber" : 72,
    "endLineNumber" : 24,
    "endColumnNumber" : 73
  }, {
    "charLength" : 1,
    "startLineNumber" : 25,
    "startColumnNumber" : 76,
    "endLineNumber" : 25,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}