{
  "id" : 133,
  "expression" : "new RuntimeException(e)",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/integration-tests/src/main/java/org/apache/druid/testing/clients/EventReceiverFirehoseTestClient.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new RuntimeException(e)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 121,
      "startColumnNumber" : 16,
      "endLineNumber" : 121,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 121,
        "startColumnNumber" : 10,
        "endLineNumber" : 121,
        "endColumnNumber" : 40
      },
      "nodeContext" : "throw new RuntimeException(e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 120,
        "startColumnNumber" : 38,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (retryCount > NUM_RETRIES) {\n  throw new RuntimeException(e);\n}\n else {\n  LOG.info(e,\"received exception, sleeping and retrying\");\n  retryCount++;\n  Thread.sleep(DELAY_FOR_RETRIES_MS);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 119,
        "startColumnNumber" : 35,
        "endLineNumber" : 127,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (retryCount > NUM_RETRIES) {\n    throw new RuntimeException(e);\n  }\n else {\n    LOG.info(e,\"received exception, sleeping and retrying\");\n    retryCount++;\n    Thread.sleep(DELAY_FOR_RETRIES_MS);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 300,
        "startLineNumber" : 119,
        "startColumnNumber" : 6,
        "endLineNumber" : 127,
        "endColumnNumber" : 7
      },
      "nodeContext" : "catch (ExecutionException e) {\n  if (retryCount > NUM_RETRIES) {\n    throw new RuntimeException(e);\n  }\n else {\n    LOG.info(e,\"received exception, sleeping and retrying\");\n    retryCount++;\n    Thread.sleep(DELAY_FOR_RETRIES_MS);\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1230,
        "startLineNumber" : 96,
        "startColumnNumber" : 6,
        "endLineNumber" : 130,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  StatusResponseHolder response=httpClient.go(new Request(HttpMethod.POST,new URL(getURL())).setContent(mediaType,objectMapper.writeValueAsBytes(events)),StatusResponseHandler.getInstance()).get();\n  if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n    throw new ISE(\"Error while posting events to url[%s] status[%s] content[%s]\",getURL(),response.getStatus(),response.getContent());\n  }\n  Map<String,Integer> responseData=objectMapper.readValue(response.getContent(),new TypeReference<Map<String,Integer>>(){\n  }\n);\n  return responseData.get(\"eventCount\");\n}\n catch (ExecutionException e) {\n  if (retryCount > NUM_RETRIES) {\n    throw new RuntimeException(e);\n  }\n else {\n    LOG.info(e,\"received exception, sleeping and retrying\");\n    retryCount++;\n    Thread.sleep(DELAY_FOR_RETRIES_MS);\n  }\n}\ncatch (Exception e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 132,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1244,
        "startLineNumber" : 95,
        "startColumnNumber" : 17,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    StatusResponseHolder response=httpClient.go(new Request(HttpMethod.POST,new URL(getURL())).setContent(mediaType,objectMapper.writeValueAsBytes(events)),StatusResponseHandler.getInstance()).get();\n    if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n      throw new ISE(\"Error while posting events to url[%s] status[%s] content[%s]\",getURL(),response.getStatus(),response.getContent());\n    }\n    Map<String,Integer> responseData=objectMapper.readValue(response.getContent(),new TypeReference<Map<String,Integer>>(){\n    }\n);\n    return responseData.get(\"eventCount\");\n  }\n catch (  ExecutionException e) {\n    if (retryCount > NUM_RETRIES) {\n      throw new RuntimeException(e);\n    }\n else {\n      LOG.info(e,\"received exception, sleeping and retrying\");\n      retryCount++;\n      Thread.sleep(DELAY_FOR_RETRIES_MS);\n    }\n  }\ncatch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1257,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  try {\n    StatusResponseHolder response=httpClient.go(new Request(HttpMethod.POST,new URL(getURL())).setContent(mediaType,objectMapper.writeValueAsBytes(events)),StatusResponseHandler.getInstance()).get();\n    if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n      throw new ISE(\"Error while posting events to url[%s] status[%s] content[%s]\",getURL(),response.getStatus(),response.getContent());\n    }\n    Map<String,Integer> responseData=objectMapper.readValue(response.getContent(),new TypeReference<Map<String,Integer>>(){\n    }\n);\n    return responseData.get(\"eventCount\");\n  }\n catch (  ExecutionException e) {\n    if (retryCount > NUM_RETRIES) {\n      throw new RuntimeException(e);\n    }\n else {\n      LOG.info(e,\"received exception, sleeping and retrying\");\n      retryCount++;\n      Thread.sleep(DELAY_FOR_RETRIES_MS);\n    }\n  }\ncatch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 135,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1291,
        "startLineNumber" : 93,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int retryCount=0;\n  while (true) {\n    try {\n      StatusResponseHolder response=httpClient.go(new Request(HttpMethod.POST,new URL(getURL())).setContent(mediaType,objectMapper.writeValueAsBytes(events)),StatusResponseHandler.getInstance()).get();\n      if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n        throw new ISE(\"Error while posting events to url[%s] status[%s] content[%s]\",getURL(),response.getStatus(),response.getContent());\n      }\n      Map<String,Integer> responseData=objectMapper.readValue(response.getContent(),new TypeReference<Map<String,Integer>>(){\n      }\n);\n      return responseData.get(\"eventCount\");\n    }\n catch (    ExecutionException e) {\n      if (retryCount > NUM_RETRIES) {\n        throw new RuntimeException(e);\n      }\n else {\n        LOG.info(e,\"received exception, sleeping and retrying\");\n        retryCount++;\n        Thread.sleep(DELAY_FOR_RETRIES_MS);\n      }\n    }\ncatch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1599,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * post events from the collection and return the count of events accepted\n * @param events Collection of events to be posted\n * @return\n */\npublic int postEvents(Collection<Map<String,Object>> events,ObjectMapper objectMapper,String mediaType) throws InterruptedException {\n  int retryCount=0;\n  while (true) {\n    try {\n      StatusResponseHolder response=httpClient.go(new Request(HttpMethod.POST,new URL(getURL())).setContent(mediaType,objectMapper.writeValueAsBytes(events)),StatusResponseHandler.getInstance()).get();\n      if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n        throw new ISE(\"Error while posting events to url[%s] status[%s] content[%s]\",getURL(),response.getStatus(),response.getContent());\n      }\n      Map<String,Integer> responseData=objectMapper.readValue(response.getContent(),new TypeReference<Map<String,Integer>>(){\n      }\n);\n      return responseData.get(\"eventCount\");\n    }\n catch (    ExecutionException e) {\n      if (retryCount > NUM_RETRIES) {\n        throw new RuntimeException(e);\n      }\n else {\n        LOG.info(e,\"received exception, sleeping and retrying\");\n        retryCount++;\n        Thread.sleep(DELAY_FOR_RETRIES_MS);\n      }\n    }\ncatch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 121,
        "startColumnNumber" : 10,
        "endLineNumber" : 121,
        "endColumnNumber" : 40
      },
      "nodeContext" : "throw new RuntimeException(e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.RuntimeException"
  }, {
    "nodeContext" : "new RuntimeException(e)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 129,
      "startColumnNumber" : 14,
      "endLineNumber" : 129,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 38
      },
      "nodeContext" : "throw new RuntimeException(e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 128,
        "startColumnNumber" : 26,
        "endLineNumber" : 130,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 128,
        "startColumnNumber" : 6,
        "endLineNumber" : 130,
        "endColumnNumber" : 7
      },
      "nodeContext" : "catch (Exception e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1230,
        "startLineNumber" : 96,
        "startColumnNumber" : 6,
        "endLineNumber" : 130,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  StatusResponseHolder response=httpClient.go(new Request(HttpMethod.POST,new URL(getURL())).setContent(mediaType,objectMapper.writeValueAsBytes(events)),StatusResponseHandler.getInstance()).get();\n  if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n    throw new ISE(\"Error while posting events to url[%s] status[%s] content[%s]\",getURL(),response.getStatus(),response.getContent());\n  }\n  Map<String,Integer> responseData=objectMapper.readValue(response.getContent(),new TypeReference<Map<String,Integer>>(){\n  }\n);\n  return responseData.get(\"eventCount\");\n}\n catch (ExecutionException e) {\n  if (retryCount > NUM_RETRIES) {\n    throw new RuntimeException(e);\n  }\n else {\n    LOG.info(e,\"received exception, sleeping and retrying\");\n    retryCount++;\n    Thread.sleep(DELAY_FOR_RETRIES_MS);\n  }\n}\ncatch (Exception e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 132,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1244,
        "startLineNumber" : 95,
        "startColumnNumber" : 17,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    StatusResponseHolder response=httpClient.go(new Request(HttpMethod.POST,new URL(getURL())).setContent(mediaType,objectMapper.writeValueAsBytes(events)),StatusResponseHandler.getInstance()).get();\n    if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n      throw new ISE(\"Error while posting events to url[%s] status[%s] content[%s]\",getURL(),response.getStatus(),response.getContent());\n    }\n    Map<String,Integer> responseData=objectMapper.readValue(response.getContent(),new TypeReference<Map<String,Integer>>(){\n    }\n);\n    return responseData.get(\"eventCount\");\n  }\n catch (  ExecutionException e) {\n    if (retryCount > NUM_RETRIES) {\n      throw new RuntimeException(e);\n    }\n else {\n      LOG.info(e,\"received exception, sleeping and retrying\");\n      retryCount++;\n      Thread.sleep(DELAY_FOR_RETRIES_MS);\n    }\n  }\ncatch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1257,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  try {\n    StatusResponseHolder response=httpClient.go(new Request(HttpMethod.POST,new URL(getURL())).setContent(mediaType,objectMapper.writeValueAsBytes(events)),StatusResponseHandler.getInstance()).get();\n    if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n      throw new ISE(\"Error while posting events to url[%s] status[%s] content[%s]\",getURL(),response.getStatus(),response.getContent());\n    }\n    Map<String,Integer> responseData=objectMapper.readValue(response.getContent(),new TypeReference<Map<String,Integer>>(){\n    }\n);\n    return responseData.get(\"eventCount\");\n  }\n catch (  ExecutionException e) {\n    if (retryCount > NUM_RETRIES) {\n      throw new RuntimeException(e);\n    }\n else {\n      LOG.info(e,\"received exception, sleeping and retrying\");\n      retryCount++;\n      Thread.sleep(DELAY_FOR_RETRIES_MS);\n    }\n  }\ncatch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 135,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1291,
        "startLineNumber" : 93,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int retryCount=0;\n  while (true) {\n    try {\n      StatusResponseHolder response=httpClient.go(new Request(HttpMethod.POST,new URL(getURL())).setContent(mediaType,objectMapper.writeValueAsBytes(events)),StatusResponseHandler.getInstance()).get();\n      if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n        throw new ISE(\"Error while posting events to url[%s] status[%s] content[%s]\",getURL(),response.getStatus(),response.getContent());\n      }\n      Map<String,Integer> responseData=objectMapper.readValue(response.getContent(),new TypeReference<Map<String,Integer>>(){\n      }\n);\n      return responseData.get(\"eventCount\");\n    }\n catch (    ExecutionException e) {\n      if (retryCount > NUM_RETRIES) {\n        throw new RuntimeException(e);\n      }\n else {\n        LOG.info(e,\"received exception, sleeping and retrying\");\n        retryCount++;\n        Thread.sleep(DELAY_FOR_RETRIES_MS);\n      }\n    }\ncatch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1599,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * post events from the collection and return the count of events accepted\n * @param events Collection of events to be posted\n * @return\n */\npublic int postEvents(Collection<Map<String,Object>> events,ObjectMapper objectMapper,String mediaType) throws InterruptedException {\n  int retryCount=0;\n  while (true) {\n    try {\n      StatusResponseHolder response=httpClient.go(new Request(HttpMethod.POST,new URL(getURL())).setContent(mediaType,objectMapper.writeValueAsBytes(events)),StatusResponseHandler.getInstance()).get();\n      if (!response.getStatus().equals(HttpResponseStatus.OK)) {\n        throw new ISE(\"Error while posting events to url[%s] status[%s] content[%s]\",getURL(),response.getStatus(),response.getContent());\n      }\n      Map<String,Integer> responseData=objectMapper.readValue(response.getContent(),new TypeReference<Map<String,Integer>>(){\n      }\n);\n      return responseData.get(\"eventCount\");\n    }\n catch (    ExecutionException e) {\n      if (retryCount > NUM_RETRIES) {\n        throw new RuntimeException(e);\n      }\n else {\n        LOG.info(e,\"received exception, sleeping and retrying\");\n        retryCount++;\n        Thread.sleep(DELAY_FOR_RETRIES_MS);\n      }\n    }\ncatch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 38
      },
      "nodeContext" : "throw new RuntimeException(e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.RuntimeException"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 121,
    "startColumnNumber" : 16,
    "endLineNumber" : 121,
    "endColumnNumber" : 39
  }, {
    "charLength" : 23,
    "startLineNumber" : 129,
    "startColumnNumber" : 14,
    "endLineNumber" : 129,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}