{
  "id" : 305,
  "expression" : "builder.append(event.getMessage())",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/events/PrintingEventHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "builder.append(event.getMessage())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 104,
      "startColumnNumber" : 10,
      "endLineNumber" : 104,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 104,
        "startColumnNumber" : 10,
        "endLineNumber" : 104,
        "endColumnNumber" : 57
      },
      "nodeContext" : "builder.append(event.getMessage()).append(\"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 104,
        "startColumnNumber" : 10,
        "endLineNumber" : 104,
        "endColumnNumber" : 58
      },
      "nodeContext" : "builder.append(event.getMessage()).append(\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 89,
        "startColumnNumber" : 6,
        "endLineNumber" : 107,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (event.getKind()) {\ncase STDOUT:  outErr.getOutputStream().write(event.getMessageBytes());\noutErr.getOutputStream().flush();\nbreak;\ncase STDERR:outErr.getErrorStream().write(event.getMessageBytes());\noutErr.getErrorStream().flush();\nbreak;\ndefault:StringBuilder builder=new StringBuilder();\nbuilder.append(event.getKind()).append(\": \");\nif (event.getLocation() != null) {\nbuilder.append(event.getLocation()).append(\": \");\n}\nbuilder.append(event.getMessage()).append(\"\\n\");\noutErr.getErrorStream().write(builder.toString().getBytes(StandardCharsets.UTF_8));\noutErr.getErrorStream().flush();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 106,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 787,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (event.getKind()) {\ncase STDOUT:    outErr.getOutputStream().write(event.getMessageBytes());\n  outErr.getOutputStream().flush();\nbreak;\ncase STDERR:outErr.getErrorStream().write(event.getMessageBytes());\noutErr.getErrorStream().flush();\nbreak;\ndefault:StringBuilder builder=new StringBuilder();\nbuilder.append(event.getKind()).append(\": \");\nif (event.getLocation() != null) {\nbuilder.append(event.getLocation()).append(\": \");\n}\nbuilder.append(event.getMessage()).append(\"\\n\");\noutErr.getErrorStream().write(builder.toString().getBytes(StandardCharsets.UTF_8));\noutErr.getErrorStream().flush();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1109,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\nswitch (event.getKind()) {\ncase STDOUT:    outErr.getOutputStream().write(event.getMessageBytes());\n  outErr.getOutputStream().flush();\nbreak;\ncase STDERR:outErr.getErrorStream().write(event.getMessageBytes());\noutErr.getErrorStream().flush();\nbreak;\ndefault:StringBuilder builder=new StringBuilder();\nbuilder.append(event.getKind()).append(\": \");\nif (event.getLocation() != null) {\nbuilder.append(event.getLocation()).append(\": \");\n}\nbuilder.append(event.getMessage()).append(\"\\n\");\noutErr.getErrorStream().write(builder.toString().getBytes(StandardCharsets.UTF_8));\noutErr.getErrorStream().flush();\n}\n}\n catch (IOException e) {\noutErr.printErrLn(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 121,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1260,
        "startLineNumber" : 83,
        "startColumnNumber" : 34,
        "endLineNumber" : 118,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!getEventMask().contains(event.getKind())) {\n    handleFollowUpEvents(event);\n    return;\n  }\n  try {\nswitch (event.getKind()) {\ncase STDOUT:      outErr.getOutputStream().write(event.getMessageBytes());\n    outErr.getOutputStream().flush();\n  break;\ncase STDERR:outErr.getErrorStream().write(event.getMessageBytes());\noutErr.getErrorStream().flush();\nbreak;\ndefault:StringBuilder builder=new StringBuilder();\nbuilder.append(event.getKind()).append(\": \");\nif (event.getLocation() != null) {\nbuilder.append(event.getLocation()).append(\": \");\n}\nbuilder.append(event.getMessage()).append(\"\\n\");\noutErr.getErrorStream().write(builder.toString().getBytes(StandardCharsets.UTF_8));\noutErr.getErrorStream().flush();\n}\n}\n catch (IOException e) {\noutErr.printErrLn(e.getMessage());\n}\nhandleFollowUpEvents(event);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1412,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 118,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Print a description of the specified event to the appropriate output or error stream.\n */\n@Override public void handle(Event event){\n  if (!getEventMask().contains(event.getKind())) {\n    handleFollowUpEvents(event);\n    return;\n  }\n  try {\nswitch (event.getKind()) {\ncase STDOUT:      outErr.getOutputStream().write(event.getMessageBytes());\n    outErr.getOutputStream().flush();\n  break;\ncase STDERR:outErr.getErrorStream().write(event.getMessageBytes());\noutErr.getErrorStream().flush();\nbreak;\ndefault:StringBuilder builder=new StringBuilder();\nbuilder.append(event.getKind()).append(\": \");\nif (event.getLocation() != null) {\nbuilder.append(event.getLocation()).append(\": \");\n}\nbuilder.append(event.getMessage()).append(\"\\n\");\noutErr.getErrorStream().write(builder.toString().getBytes(StandardCharsets.UTF_8));\noutErr.getErrorStream().flush();\n}\n}\n catch (IOException e) {\noutErr.printErrLn(e.getMessage());\n}\nhandleFollowUpEvents(event);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 104,
        "startColumnNumber" : 10,
        "endLineNumber" : 104,
        "endColumnNumber" : 58
      },
      "nodeContext" : "builder.append(event.getMessage()).append(\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 104,
    "startColumnNumber" : 10,
    "endLineNumber" : 104,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}