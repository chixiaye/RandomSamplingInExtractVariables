{
  "id" : 471,
  "expression" : "CONTAINER_KEY",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-container/dubbo-container-api/src/main/java/org/apache/dubbo/container/Main.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CONTAINER_KEY",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 57,
      "startColumnNumber" : 56,
      "endLineNumber" : 57,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 57,
        "startColumnNumber" : 32,
        "endLineNumber" : 57,
        "endColumnNumber" : 104
      },
      "nodeContext" : "ConfigUtils.getProperty(CONTAINER_KEY,LOADER.getDefaultExtensionName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 57,
        "startColumnNumber" : 23,
        "endLineNumber" : 57,
        "endColumnNumber" : 104
      },
      "nodeContext" : "config=ConfigUtils.getProperty(CONTAINER_KEY,LOADER.getDefaultExtensionName())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 105
      },
      "nodeContext" : "String config=ConfigUtils.getProperty(CONTAINER_KEY,LOADER.getDefaultExtensionName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 56,
        "startColumnNumber" : 42,
        "endLineNumber" : 59,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String config=ConfigUtils.getProperty(CONTAINER_KEY,LOADER.getDefaultExtensionName());\n  args=COMMA_SPLIT_PATTERN.split(config);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ArrayUtils.isEmpty(args)) {\n  String config=ConfigUtils.getProperty(CONTAINER_KEY,LOADER.getDefaultExtensionName());\n  args=COMMA_SPLIT_PATTERN.split(config);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1875,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (ArrayUtils.isEmpty(args)) {\n    String config=ConfigUtils.getProperty(CONTAINER_KEY,LOADER.getDefaultExtensionName());\n    args=COMMA_SPLIT_PATTERN.split(config);\n  }\n  final List<Container> containers=new ArrayList<Container>();\n  for (int i=0; i < args.length; i++) {\n    containers.add(LOADER.getExtension(args[i]));\n  }\n  logger.info(\"Use container type(\" + Arrays.toString(args) + \") to run dubbo serivce.\");\n  if (\"true\".equals(System.getProperty(SHUTDOWN_HOOK_KEY))) {\n    Runtime.getRuntime().addShutdownHook(new Thread(\"dubbo-container-shutdown-hook\"){\n      @Override public void run(){\n        for (        Container container : containers) {\n          try {\n            container.stop();\n            logger.info(\"Dubbo \" + container.getClass().getSimpleName() + \" stopped!\");\n          }\n catch (          Throwable t) {\n            logger.error(t.getMessage(),t);\n          }\n          try {\n            LOCK.lock();\n            STOP.signal();\n          }\n  finally {\n            LOCK.unlock();\n          }\n        }\n      }\n    }\n);\n  }\n  for (  Container container : containers) {\n    container.start();\n    logger.info(\"Dubbo \" + container.getClass().getSimpleName() + \" started!\");\n  }\n  System.out.println(new SimpleDateFormat(\"[yyyy-MM-dd HH:mm:ss]\").format(new Date()) + \" Dubbo service server started!\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1994,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (ArrayUtils.isEmpty(args)) {\n    String config=ConfigUtils.getProperty(CONTAINER_KEY,LOADER.getDefaultExtensionName());\n    args=COMMA_SPLIT_PATTERN.split(config);\n  }\n  final List<Container> containers=new ArrayList<Container>();\n  for (int i=0; i < args.length; i++) {\n    containers.add(LOADER.getExtension(args[i]));\n  }\n  logger.info(\"Use container type(\" + Arrays.toString(args) + \") to run dubbo serivce.\");\n  if (\"true\".equals(System.getProperty(SHUTDOWN_HOOK_KEY))) {\n    Runtime.getRuntime().addShutdownHook(new Thread(\"dubbo-container-shutdown-hook\"){\n      @Override public void run(){\n        for (        Container container : containers) {\n          try {\n            container.stop();\n            logger.info(\"Dubbo \" + container.getClass().getSimpleName() + \" stopped!\");\n          }\n catch (          Throwable t) {\n            logger.error(t.getMessage(),t);\n          }\n          try {\n            LOCK.lock();\n            STOP.signal();\n          }\n  finally {\n            LOCK.unlock();\n          }\n        }\n      }\n    }\n);\n  }\n  for (  Container container : containers) {\n    container.start();\n    logger.info(\"Dubbo \" + container.getClass().getSimpleName() + \" started!\");\n  }\n  System.out.println(new SimpleDateFormat(\"[yyyy-MM-dd HH:mm:ss]\").format(new Date()) + \" Dubbo service server started!\");\n}\n catch (RuntimeException e) {\n  logger.error(e.getMessage(),e);\n  System.exit(1);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 217,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2275,
        "startLineNumber" : 54,
        "startColumnNumber" : 43,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (ArrayUtils.isEmpty(args)) {\n      String config=ConfigUtils.getProperty(CONTAINER_KEY,LOADER.getDefaultExtensionName());\n      args=COMMA_SPLIT_PATTERN.split(config);\n    }\n    final List<Container> containers=new ArrayList<Container>();\n    for (int i=0; i < args.length; i++) {\n      containers.add(LOADER.getExtension(args[i]));\n    }\n    logger.info(\"Use container type(\" + Arrays.toString(args) + \") to run dubbo serivce.\");\n    if (\"true\".equals(System.getProperty(SHUTDOWN_HOOK_KEY))) {\n      Runtime.getRuntime().addShutdownHook(new Thread(\"dubbo-container-shutdown-hook\"){\n        @Override public void run(){\n          for (          Container container : containers) {\n            try {\n              container.stop();\n              logger.info(\"Dubbo \" + container.getClass().getSimpleName() + \" stopped!\");\n            }\n catch (            Throwable t) {\n              logger.error(t.getMessage(),t);\n            }\n            try {\n              LOCK.lock();\n              STOP.signal();\n            }\n  finally {\n              LOCK.unlock();\n            }\n          }\n        }\n      }\n);\n    }\n    for (    Container container : containers) {\n      container.start();\n      logger.info(\"Dubbo \" + container.getClass().getSimpleName() + \" started!\");\n    }\n    System.out.println(new SimpleDateFormat(\"[yyyy-MM-dd HH:mm:ss]\").format(new Date()) + \" Dubbo service server started!\");\n  }\n catch (  RuntimeException e) {\n    logger.error(e.getMessage(),e);\n    System.exit(1);\n  }\n  try {\n    LOCK.lock();\n    STOP.await();\n  }\n catch (  InterruptedException e) {\n    logger.warn(\"Dubbo service server stopped, interrupted by other thread!\",e);\n  }\n finally {\n    LOCK.unlock();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2314,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  try {\n    if (ArrayUtils.isEmpty(args)) {\n      String config=ConfigUtils.getProperty(CONTAINER_KEY,LOADER.getDefaultExtensionName());\n      args=COMMA_SPLIT_PATTERN.split(config);\n    }\n    final List<Container> containers=new ArrayList<Container>();\n    for (int i=0; i < args.length; i++) {\n      containers.add(LOADER.getExtension(args[i]));\n    }\n    logger.info(\"Use container type(\" + Arrays.toString(args) + \") to run dubbo serivce.\");\n    if (\"true\".equals(System.getProperty(SHUTDOWN_HOOK_KEY))) {\n      Runtime.getRuntime().addShutdownHook(new Thread(\"dubbo-container-shutdown-hook\"){\n        @Override public void run(){\n          for (          Container container : containers) {\n            try {\n              container.stop();\n              logger.info(\"Dubbo \" + container.getClass().getSimpleName() + \" stopped!\");\n            }\n catch (            Throwable t) {\n              logger.error(t.getMessage(),t);\n            }\n            try {\n              LOCK.lock();\n              STOP.signal();\n            }\n  finally {\n              LOCK.unlock();\n            }\n          }\n        }\n      }\n);\n    }\n    for (    Container container : containers) {\n      container.start();\n      logger.info(\"Dubbo \" + container.getClass().getSimpleName() + \" started!\");\n    }\n    System.out.println(new SimpleDateFormat(\"[yyyy-MM-dd HH:mm:ss]\").format(new Date()) + \" Dubbo service server started!\");\n  }\n catch (  RuntimeException e) {\n    logger.error(e.getMessage(),e);\n    System.exit(1);\n  }\n  try {\n    LOCK.lock();\n    STOP.await();\n  }\n catch (  InterruptedException e) {\n    logger.warn(\"Dubbo service server stopped, interrupted by other thread!\",e);\n  }\n finally {\n    LOCK.unlock();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 256,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 105
      },
      "nodeContext" : "String config=ConfigUtils.getProperty(CONTAINER_KEY,LOADER.getDefaultExtensionName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 57,
    "startColumnNumber" : 56,
    "endLineNumber" : 57,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}