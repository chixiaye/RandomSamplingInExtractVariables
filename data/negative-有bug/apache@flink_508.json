{
  "id" : 508,
  "expression" : "casted",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/main/java/org/apache/flink/api/common/typeutils/GenericTypeSerializerSnapshot.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "casted",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 90,
      "startColumnNumber" : 38,
      "endLineNumber" : 90,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 90,
        "startColumnNumber" : 25,
        "endLineNumber" : 90,
        "endColumnNumber" : 45
      },
      "nodeContext" : "getTypeClass(casted)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 45
      },
      "nodeContext" : "typeClass == getTypeClass(casted)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (typeClass == getTypeClass(casted)) {\n  return TypeSerializerSchemaCompatibility.compatibleAsIs();\n}\n else {\n  return TypeSerializerSchemaCompatibility.incompatible();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 439,
        "startLineNumber" : 84,
        "startColumnNumber" : 45,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!serializerClass().isInstance(newSerializer)) {\n    return TypeSerializerSchemaCompatibility.incompatible();\n  }\n  @SuppressWarnings(\"unchecked\") S casted=(S)newSerializer;\n  if (typeClass == getTypeClass(casted)) {\n    return TypeSerializerSchemaCompatibility.compatibleAsIs();\n  }\n else {\n    return TypeSerializerSchemaCompatibility.incompatible();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public final TypeSerializerSchemaCompatibility<T> resolveSchemaCompatibility(TypeSerializer<T> newSerializer){\n  if (!serializerClass().isInstance(newSerializer)) {\n    return TypeSerializerSchemaCompatibility.incompatible();\n  }\n  @SuppressWarnings(\"unchecked\") S casted=(S)newSerializer;\n  if (typeClass == getTypeClass(casted)) {\n    return TypeSerializerSchemaCompatibility.compatibleAsIs();\n  }\n else {\n    return TypeSerializerSchemaCompatibility.incompatible();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 45
      },
      "nodeContext" : "typeClass == getTypeClass(casted)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "S"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 90,
    "startColumnNumber" : 38,
    "endLineNumber" : 90,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}