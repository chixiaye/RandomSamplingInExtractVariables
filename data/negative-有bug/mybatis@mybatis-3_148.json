{
  "id" : 148,
  "expression" : "new BindingException(method.getName() + \" cannot have multiple RowBounds parameters\")",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/main/java/org/apache/ibatis/binding/MapperMethod.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new BindingException(method.getName() + \" cannot have multiple RowBounds parameters\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 85,
      "startLineNumber" : 159,
      "startColumnNumber" : 16,
      "endLineNumber" : 159,
      "endColumnNumber" : 101
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 159,
        "startColumnNumber" : 10,
        "endLineNumber" : 159,
        "endColumnNumber" : 102
      },
      "nodeContext" : "throw new BindingException(method.getName() + \" cannot have multiple RowBounds parameters\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 158,
        "startColumnNumber" : 15,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new BindingException(method.getName() + \" cannot have multiple RowBounds parameters\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 156,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (rowBoundsIndex == null) {\n  rowBoundsIndex=i;\n}\n else {\n  throw new BindingException(method.getName() + \" cannot have multiple RowBounds parameters\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 155,
        "startColumnNumber" : 57,
        "endLineNumber" : 161,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (rowBoundsIndex == null) {\n    rowBoundsIndex=i;\n  }\n else {\n    throw new BindingException(method.getName() + \" cannot have multiple RowBounds parameters\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 764,
        "startLineNumber" : 155,
        "startColumnNumber" : 6,
        "endLineNumber" : 172,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (RowBounds.class.isAssignableFrom(argTypes[i])) {\n  if (rowBoundsIndex == null) {\n    rowBoundsIndex=i;\n  }\n else {\n    throw new BindingException(method.getName() + \" cannot have multiple RowBounds parameters\");\n  }\n}\n else if (ResultHandler.class.isAssignableFrom(argTypes[i])) {\n  if (resultHandlerIndex == null) {\n    resultHandlerIndex=i;\n  }\n else {\n    throw new BindingException(method.getName() + \" cannot have multiple ResultHandler parameters\");\n  }\n}\n else {\n  String paramName=String.valueOf(paramPositions.size());\n  paramName=getParamNameFromAnnotation(i,paramName);\n  paramNames.add(paramName);\n  paramPositions.add(i);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 780,
        "startLineNumber" : 154,
        "startColumnNumber" : 46,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (RowBounds.class.isAssignableFrom(argTypes[i])) {\n    if (rowBoundsIndex == null) {\n      rowBoundsIndex=i;\n    }\n else {\n      throw new BindingException(method.getName() + \" cannot have multiple RowBounds parameters\");\n    }\n  }\n else   if (ResultHandler.class.isAssignableFrom(argTypes[i])) {\n    if (resultHandlerIndex == null) {\n      resultHandlerIndex=i;\n    }\n else {\n      throw new BindingException(method.getName() + \" cannot have multiple ResultHandler parameters\");\n    }\n  }\n else {\n    String paramName=String.valueOf(paramPositions.size());\n    paramName=getParamNameFromAnnotation(i,paramName);\n    paramNames.add(paramName);\n    paramPositions.add(i);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < argTypes.length; i++) {\n  if (RowBounds.class.isAssignableFrom(argTypes[i])) {\n    if (rowBoundsIndex == null) {\n      rowBoundsIndex=i;\n    }\n else {\n      throw new BindingException(method.getName() + \" cannot have multiple RowBounds parameters\");\n    }\n  }\n else   if (ResultHandler.class.isAssignableFrom(argTypes[i])) {\n    if (resultHandlerIndex == null) {\n      resultHandlerIndex=i;\n    }\n else {\n      throw new BindingException(method.getName() + \" cannot have multiple ResultHandler parameters\");\n    }\n  }\n else {\n    String paramName=String.valueOf(paramPositions.size());\n    paramName=getParamNameFromAnnotation(i,paramName);\n    paramNames.add(paramName);\n    paramPositions.add(i);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 101,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1347,
        "startLineNumber" : 138,
        "startColumnNumber" : 38,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (method.getReturnType().equals(Void.TYPE)) {\n    returnsVoid=true;\n  }\n  if (List.class.isAssignableFrom(method.getReturnType())) {\n    returnsList=true;\n  }\n  if (Map.class.isAssignableFrom(method.getReturnType())) {\n    final MapKey mapKeyAnnotation=method.getAnnotation(MapKey.class);\n    if (mapKeyAnnotation != null) {\n      mapKey=mapKeyAnnotation.value();\n      returnsMap=true;\n    }\n  }\n  final Class<?>[] argTypes=method.getParameterTypes();\n  for (int i=0; i < argTypes.length; i++) {\n    if (RowBounds.class.isAssignableFrom(argTypes[i])) {\n      if (rowBoundsIndex == null) {\n        rowBoundsIndex=i;\n      }\n else {\n        throw new BindingException(method.getName() + \" cannot have multiple RowBounds parameters\");\n      }\n    }\n else     if (ResultHandler.class.isAssignableFrom(argTypes[i])) {\n      if (resultHandlerIndex == null) {\n        resultHandlerIndex=i;\n      }\n else {\n        throw new BindingException(method.getName() + \" cannot have multiple ResultHandler parameters\");\n      }\n    }\n else {\n      String paramName=String.valueOf(paramPositions.size());\n      paramName=getParamNameFromAnnotation(i,paramName);\n      paramNames.add(paramName);\n      paramPositions.add(i);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1383,
        "startLineNumber" : 138,
        "startColumnNumber" : 2,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void setupMethodSignature(){\n  if (method.getReturnType().equals(Void.TYPE)) {\n    returnsVoid=true;\n  }\n  if (List.class.isAssignableFrom(method.getReturnType())) {\n    returnsList=true;\n  }\n  if (Map.class.isAssignableFrom(method.getReturnType())) {\n    final MapKey mapKeyAnnotation=method.getAnnotation(MapKey.class);\n    if (mapKeyAnnotation != null) {\n      mapKey=mapKeyAnnotation.value();\n      returnsMap=true;\n    }\n  }\n  final Class<?>[] argTypes=method.getParameterTypes();\n  for (int i=0; i < argTypes.length; i++) {\n    if (RowBounds.class.isAssignableFrom(argTypes[i])) {\n      if (rowBoundsIndex == null) {\n        rowBoundsIndex=i;\n      }\n else {\n        throw new BindingException(method.getName() + \" cannot have multiple RowBounds parameters\");\n      }\n    }\n else     if (ResultHandler.class.isAssignableFrom(argTypes[i])) {\n      if (resultHandlerIndex == null) {\n        resultHandlerIndex=i;\n      }\n else {\n        throw new BindingException(method.getName() + \" cannot have multiple ResultHandler parameters\");\n      }\n    }\n else {\n      String paramName=String.valueOf(paramPositions.size());\n      paramName=getParamNameFromAnnotation(i,paramName);\n      paramNames.add(paramName);\n      paramPositions.add(i);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 159,
        "startColumnNumber" : 10,
        "endLineNumber" : 159,
        "endColumnNumber" : 102
      },
      "nodeContext" : "throw new BindingException(method.getName() + \" cannot have multiple RowBounds parameters\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 9,
    "type" : "org.apache.ibatis.binding.BindingException"
  } ],
  "positionList" : [ {
    "charLength" : 85,
    "startLineNumber" : 159,
    "startColumnNumber" : 16,
    "endLineNumber" : 159,
    "endColumnNumber" : 101
  } ],
  "layoutRelationDataList" : [ ]
}