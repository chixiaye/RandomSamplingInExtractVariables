{
  "id" : 131,
  "expression" : "type == GradientType.Linear",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/GradientFillContent.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "type == GradientType.Linear",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 87,
      "startColumnNumber" : 8,
      "endLineNumber" : 87,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (type == GradientType.Linear) {\n  shader=getLinearGradient();\n}\n else {\n  shader=getRadialGradient();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 678,
        "startLineNumber" : 77,
        "startColumnNumber" : 82,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  L.beginSection(\"GradientFillContent#draw\");\n  path.reset();\n  for (int i=0; i < paths.size(); i++) {\n    path.addPath(paths.get(i).getPath(),parentMatrix);\n  }\n  path.computeBounds(boundsRect,false);\n  Shader shader;\n  if (type == GradientType.Linear) {\n    shader=getLinearGradient();\n  }\n else {\n    shader=getRadialGradient();\n  }\n  shaderMatrix.set(parentMatrix);\n  shader.setLocalMatrix(shaderMatrix);\n  paint.setShader(shader);\n  int alpha=(int)((parentAlpha / 255f * opacityAnimation.getValue() / 100f) * 255);\n  paint.setAlpha(alpha);\n  canvas.drawPath(path,paint);\n  L.endSection(\"GradientFillContent#draw\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 758,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void draw(Canvas canvas,Matrix parentMatrix,int parentAlpha){\n  L.beginSection(\"GradientFillContent#draw\");\n  path.reset();\n  for (int i=0; i < paths.size(); i++) {\n    path.addPath(paths.get(i).getPath(),parentMatrix);\n  }\n  path.computeBounds(boundsRect,false);\n  Shader shader;\n  if (type == GradientType.Linear) {\n    shader=getLinearGradient();\n  }\n else {\n    shader=getRadialGradient();\n  }\n  shaderMatrix.set(parentMatrix);\n  shader.setLocalMatrix(shaderMatrix);\n  paint.setShader(shader);\n  int alpha=(int)((parentAlpha / 255f * opacityAnimation.getValue() / 100f) * 255);\n  paint.setAlpha(alpha);\n  canvas.drawPath(path,paint);\n  L.endSection(\"GradientFillContent#draw\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (type == GradientType.Linear) {\n  shader=getLinearGradient();\n}\n else {\n  shader=getRadialGradient();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 87,
    "startColumnNumber" : 8,
    "endLineNumber" : 87,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}