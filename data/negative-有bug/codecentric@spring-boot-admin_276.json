{
  "id" : 276,
  "expression" : "1000L",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/notify/RemindingNotifierTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1000L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 68,
      "startColumnNumber" : 36,
      "endLineNumber" : 68,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 68,
        "startColumnNumber" : 35,
        "endLineNumber" : 68,
        "endColumnNumber" : 41
      },
      "nodeContext" : "-1000L",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 42
      },
      "nodeContext" : "reminder.setReminderPeriod(-1000L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 43
      },
      "nodeContext" : "reminder.setReminderPeriod(-1000L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 65,
        "startColumnNumber" : 47,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestNotifier notifier=new TestNotifier();\n  RemindingNotifier reminder=new RemindingNotifier(notifier,repository);\n  reminder.setReminderPeriod(-1000L);\n  StepVerifier.create(reminder.notify(appDown)).verifyComplete();\n  StepVerifier.create(reminder.notify(otherAppUp)).verifyComplete();\n  reminder.sendReminders();\n  reminder.sendReminders();\n  assertThat(notifier.getEvents()).containsOnly(appDown,otherAppUp,appDown,appDown);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test_remind() throws Exception {\n  TestNotifier notifier=new TestNotifier();\n  RemindingNotifier reminder=new RemindingNotifier(notifier,repository);\n  reminder.setReminderPeriod(-1000L);\n  StepVerifier.create(reminder.notify(appDown)).verifyComplete();\n  StepVerifier.create(reminder.notify(otherAppUp)).verifyComplete();\n  reminder.sendReminders();\n  reminder.sendReminders();\n  assertThat(notifier.getEvents()).containsOnly(appDown,otherAppUp,appDown,appDown);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 43
      },
      "nodeContext" : "reminder.setReminderPeriod(-1000L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 68,
    "startColumnNumber" : 36,
    "endLineNumber" : 68,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}