{
  "id" : 375,
  "expression" : "keys_set.size()",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/hashtable/HashTableDoubleHashingTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "keys_set.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 153,
      "startColumnNumber" : 31,
      "endLineNumber" : 153,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 153,
        "startColumnNumber" : 6,
        "endLineNumber" : 153,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(map.size(),keys_set.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 153,
        "startColumnNumber" : 6,
        "endLineNumber" : 153,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(map.size(),keys_set.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 139,
        "startColumnNumber" : 45,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  map=new HashTableDoubleHashing<>();\n  map.clear();\n  Set<DoubleHashingTestObject> keys_set=new HashSet<>();\n  for (int i=0; i < MAX_SIZE; i++) {\n    int randomVal=randInt(-MAX_RAND_NUM,MAX_RAND_NUM);\n    DoubleHashingTestObject obj=new DoubleHashingTestObject(randomVal);\n    keys_set.add(obj);\n    map.put(obj,5);\n  }\n  assertEquals(map.size(),keys_set.size());\n  List<DoubleHashingTestObject> keys=map.keys();\n  for (  DoubleHashingTestObject key : keys)   map.remove(key);\n  assertTrue(map.isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 655,
        "startLineNumber" : 139,
        "startColumnNumber" : 4,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int loop=0; loop < LOOPS; loop++) {\n  map=new HashTableDoubleHashing<>();\n  map.clear();\n  Set<DoubleHashingTestObject> keys_set=new HashSet<>();\n  for (int i=0; i < MAX_SIZE; i++) {\n    int randomVal=randInt(-MAX_RAND_NUM,MAX_RAND_NUM);\n    DoubleHashingTestObject obj=new DoubleHashingTestObject(randomVal);\n    keys_set.add(obj);\n    map.put(obj,5);\n  }\n  assertEquals(map.size(),keys_set.size());\n  List<DoubleHashingTestObject> keys=map.keys();\n  for (  DoubleHashingTestObject key : keys)   map.remove(key);\n  assertTrue(map.isEmpty());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 135,
        "startColumnNumber" : 29,
        "endLineNumber" : 160,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  HashTableDoubleHashing<DoubleHashingTestObject,Integer> map;\n  for (int loop=0; loop < LOOPS; loop++) {\n    map=new HashTableDoubleHashing<>();\n    map.clear();\n    Set<DoubleHashingTestObject> keys_set=new HashSet<>();\n    for (int i=0; i < MAX_SIZE; i++) {\n      int randomVal=randInt(-MAX_RAND_NUM,MAX_RAND_NUM);\n      DoubleHashingTestObject obj=new DoubleHashingTestObject(randomVal);\n      keys_set.add(obj);\n      map.put(obj,5);\n    }\n    assertEquals(map.size(),keys_set.size());\n    List<DoubleHashingTestObject> keys=map.keys();\n    for (    DoubleHashingTestObject key : keys)     map.remove(key);\n    assertTrue(map.isEmpty());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 768,
        "startLineNumber" : 134,
        "startColumnNumber" : 2,
        "endLineNumber" : 160,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void randomRemove(){\n  HashTableDoubleHashing<DoubleHashingTestObject,Integer> map;\n  for (int loop=0; loop < LOOPS; loop++) {\n    map=new HashTableDoubleHashing<>();\n    map.clear();\n    Set<DoubleHashingTestObject> keys_set=new HashSet<>();\n    for (int i=0; i < MAX_SIZE; i++) {\n      int randomVal=randInt(-MAX_RAND_NUM,MAX_RAND_NUM);\n      DoubleHashingTestObject obj=new DoubleHashingTestObject(randomVal);\n      keys_set.add(obj);\n      map.put(obj,5);\n    }\n    assertEquals(map.size(),keys_set.size());\n    List<DoubleHashingTestObject> keys=map.keys();\n    for (    DoubleHashingTestObject key : keys)     map.remove(key);\n    assertTrue(map.isEmpty());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 153,
        "startColumnNumber" : 6,
        "endLineNumber" : 153,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(map.size(),keys_set.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 153,
    "startColumnNumber" : 31,
    "endLineNumber" : 153,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}