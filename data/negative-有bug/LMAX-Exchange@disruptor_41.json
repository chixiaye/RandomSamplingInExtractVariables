{
  "id" : 41,
  "expression" : "ITERATIONS",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/perftest/java/com/lmax/disruptor/ThrottledOnePublisherToThreeProcessorPipelineLatencyTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ITERATIONS",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 184,
      "startColumnNumber" : 79,
      "endLineNumber" : 184,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 184,
        "startColumnNumber" : 66,
        "endLineNumber" : 184,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Long.valueOf(ITERATIONS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 184,
        "startColumnNumber" : 63,
        "endLineNumber" : 184,
        "endColumnNumber" : 91
      },
      "nodeContext" : "is(Long.valueOf(ITERATIONS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 184,
        "startColumnNumber" : 16,
        "endLineNumber" : 184,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 184,
        "startColumnNumber" : 16,
        "endLineNumber" : 184,
        "endColumnNumber" : 93
      },
      "nodeContext" : "assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 433,
        "startLineNumber" : 178,
        "startColumnNumber" : 12,
        "endLineNumber" : 189,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  System.gc();\n  histogram.clear();\n  runQueuePass();\n  assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n  queueMeanLatency[i]=histogram.getMean();\n  System.out.format(\"%s run %d BlockingQueue %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n  dumpHistogram(System.out);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 177,
        "startColumnNumber" : 12,
        "endLineNumber" : 189,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < RUNS; i++) {\n  System.gc();\n  histogram.clear();\n  runQueuePass();\n  assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n  queueMeanLatency[i]=histogram.getMean();\n  System.out.format(\"%s run %d BlockingQueue %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n  dumpHistogram(System.out);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 68,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 176,
        "startColumnNumber" : 8,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < RUNS; i++) {\n    System.gc();\n    histogram.clear();\n    runQueuePass();\n    assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n    queueMeanLatency[i]=histogram.getMean();\n    System.out.format(\"%s run %d BlockingQueue %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n    dumpHistogram(System.out);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 765,
        "startLineNumber" : 175,
        "startColumnNumber" : 8,
        "endLineNumber" : 197,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(System.getProperty(\"com.lmax.runQueueTests\",\"true\"))) {\n  for (int i=0; i < RUNS; i++) {\n    System.gc();\n    histogram.clear();\n    runQueuePass();\n    assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n    queueMeanLatency[i]=histogram.getMean();\n    System.out.format(\"%s run %d BlockingQueue %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n    dumpHistogram(System.out);\n  }\n}\n else {\n  for (int i=0; i < RUNS; i++) {\n    queueMeanLatency[i]=new BigDecimal(Long.MAX_VALUE);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1537,
        "startLineNumber" : 169,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int RUNS=3;\n  BigDecimal queueMeanLatency[]=new BigDecimal[RUNS];\n  BigDecimal disruptorMeanLatency[]=new BigDecimal[RUNS];\n  if (\"true\".equalsIgnoreCase(System.getProperty(\"com.lmax.runQueueTests\",\"true\"))) {\n    for (int i=0; i < RUNS; i++) {\n      System.gc();\n      histogram.clear();\n      runQueuePass();\n      assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n      queueMeanLatency[i]=histogram.getMean();\n      System.out.format(\"%s run %d BlockingQueue %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n      dumpHistogram(System.out);\n    }\n  }\n else {\n    for (int i=0; i < RUNS; i++) {\n      queueMeanLatency[i]=new BigDecimal(Long.MAX_VALUE);\n    }\n  }\n  for (int i=0; i < RUNS; i++) {\n    System.gc();\n    histogram.clear();\n    runDisruptorPass();\n    assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n    disruptorMeanLatency[i]=histogram.getMean();\n    System.out.format(\"%s run %d Disruptor %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n    dumpHistogram(System.out);\n  }\n  for (int i=0; i < RUNS; i++) {\n    assertTrue(queueMeanLatency[i].compareTo(disruptorMeanLatency[i]) > 0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1613,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldCompareDisruptorVsQueues() throws Exception {\n  final int RUNS=3;\n  BigDecimal queueMeanLatency[]=new BigDecimal[RUNS];\n  BigDecimal disruptorMeanLatency[]=new BigDecimal[RUNS];\n  if (\"true\".equalsIgnoreCase(System.getProperty(\"com.lmax.runQueueTests\",\"true\"))) {\n    for (int i=0; i < RUNS; i++) {\n      System.gc();\n      histogram.clear();\n      runQueuePass();\n      assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n      queueMeanLatency[i]=histogram.getMean();\n      System.out.format(\"%s run %d BlockingQueue %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n      dumpHistogram(System.out);\n    }\n  }\n else {\n    for (int i=0; i < RUNS; i++) {\n      queueMeanLatency[i]=new BigDecimal(Long.MAX_VALUE);\n    }\n  }\n  for (int i=0; i < RUNS; i++) {\n    System.gc();\n    histogram.clear();\n    runDisruptorPass();\n    assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n    disruptorMeanLatency[i]=histogram.getMean();\n    System.out.format(\"%s run %d Disruptor %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n    dumpHistogram(System.out);\n  }\n  for (int i=0; i < RUNS; i++) {\n    assertTrue(queueMeanLatency[i].compareTo(disruptorMeanLatency[i]) > 0);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 234,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 184,
        "startColumnNumber" : 16,
        "endLineNumber" : 184,
        "endColumnNumber" : 93
      },
      "nodeContext" : "assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "ITERATIONS",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 206,
      "startColumnNumber" : 75,
      "endLineNumber" : 206,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 206,
        "startColumnNumber" : 62,
        "endLineNumber" : 206,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Long.valueOf(ITERATIONS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 206,
        "startColumnNumber" : 59,
        "endLineNumber" : 206,
        "endColumnNumber" : 87
      },
      "nodeContext" : "is(Long.valueOf(ITERATIONS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 206,
        "startColumnNumber" : 12,
        "endLineNumber" : 206,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 206,
        "startColumnNumber" : 12,
        "endLineNumber" : 206,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 211,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.gc();\n  histogram.clear();\n  runDisruptorPass();\n  assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n  disruptorMeanLatency[i]=histogram.getMean();\n  System.out.format(\"%s run %d Disruptor %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n  dumpHistogram(System.out);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 211,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < RUNS; i++) {\n  System.gc();\n  histogram.clear();\n  runDisruptorPass();\n  assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n  disruptorMeanLatency[i]=histogram.getMean();\n  System.out.format(\"%s run %d Disruptor %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n  dumpHistogram(System.out);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 68,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1537,
        "startLineNumber" : 169,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int RUNS=3;\n  BigDecimal queueMeanLatency[]=new BigDecimal[RUNS];\n  BigDecimal disruptorMeanLatency[]=new BigDecimal[RUNS];\n  if (\"true\".equalsIgnoreCase(System.getProperty(\"com.lmax.runQueueTests\",\"true\"))) {\n    for (int i=0; i < RUNS; i++) {\n      System.gc();\n      histogram.clear();\n      runQueuePass();\n      assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n      queueMeanLatency[i]=histogram.getMean();\n      System.out.format(\"%s run %d BlockingQueue %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n      dumpHistogram(System.out);\n    }\n  }\n else {\n    for (int i=0; i < RUNS; i++) {\n      queueMeanLatency[i]=new BigDecimal(Long.MAX_VALUE);\n    }\n  }\n  for (int i=0; i < RUNS; i++) {\n    System.gc();\n    histogram.clear();\n    runDisruptorPass();\n    assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n    disruptorMeanLatency[i]=histogram.getMean();\n    System.out.format(\"%s run %d Disruptor %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n    dumpHistogram(System.out);\n  }\n  for (int i=0; i < RUNS; i++) {\n    assertTrue(queueMeanLatency[i].compareTo(disruptorMeanLatency[i]) > 0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1613,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldCompareDisruptorVsQueues() throws Exception {\n  final int RUNS=3;\n  BigDecimal queueMeanLatency[]=new BigDecimal[RUNS];\n  BigDecimal disruptorMeanLatency[]=new BigDecimal[RUNS];\n  if (\"true\".equalsIgnoreCase(System.getProperty(\"com.lmax.runQueueTests\",\"true\"))) {\n    for (int i=0; i < RUNS; i++) {\n      System.gc();\n      histogram.clear();\n      runQueuePass();\n      assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n      queueMeanLatency[i]=histogram.getMean();\n      System.out.format(\"%s run %d BlockingQueue %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n      dumpHistogram(System.out);\n    }\n  }\n else {\n    for (int i=0; i < RUNS; i++) {\n      queueMeanLatency[i]=new BigDecimal(Long.MAX_VALUE);\n    }\n  }\n  for (int i=0; i < RUNS; i++) {\n    System.gc();\n    histogram.clear();\n    runDisruptorPass();\n    assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n    disruptorMeanLatency[i]=histogram.getMean();\n    System.out.format(\"%s run %d Disruptor %s\\n\",getClass().getSimpleName(),Long.valueOf(i),histogram);\n    dumpHistogram(System.out);\n  }\n  for (int i=0; i < RUNS; i++) {\n    assertTrue(queueMeanLatency[i].compareTo(disruptorMeanLatency[i]) > 0);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 234,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 206,
        "startColumnNumber" : 12,
        "endLineNumber" : 206,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertThat(Long.valueOf(histogram.getCount()),is(Long.valueOf(ITERATIONS)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 184,
    "startColumnNumber" : 79,
    "endLineNumber" : 184,
    "endColumnNumber" : 89
  }, {
    "charLength" : 10,
    "startLineNumber" : 206,
    "startColumnNumber" : 75,
    "endLineNumber" : 206,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}