{
  "id" : 10,
  "expression" : "Container.Entry",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/util/parser/antlr/AbstractJavaListener.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Container.Entry",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 90,
      "startColumnNumber" : 20,
      "endLineNumber" : 90,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 90,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 35
      },
      "nodeContext" : "Container.Entry",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 90,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Container.Entry parent=entry.getParent();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 88,
        "startColumnNumber" : 56,
        "endLineNumber" : 100,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Container.Entry parent=entry.getParent();\n  int packageLength=parent.getPath().length() + 1;\n  for (  Container.Entry child : parent.getChildren()) {\n    if (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\n      qualifiedName=packageName + '/' + name;\n      typeNameCache.put(name,qualifiedName);\n      return qualifiedName;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 88,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (entry.getPath().indexOf('/') != -1) {\n  Container.Entry parent=entry.getParent();\n  int packageLength=parent.getPath().length() + 1;\n  for (  Container.Entry child : parent.getChildren()) {\n    if (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\n      qualifiedName=packageName + '/' + name;\n      typeNameCache.put(name,qualifiedName);\n      return qualifiedName;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2558,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (identifiers.size()) {\ncase 0:  return null;\ncase 1:String name=identifiers.get(0).getText();\nString qualifiedName=typeNameCache.get(name);\nif (qualifiedName != null) {\nreturn qualifiedName;\n}\nString imp=nameToInternalTypeName.get(name);\nif (imp != null) {\nreturn imp;\n}\nString prefix=name + '.';\nif (entry.getPath().indexOf('/') != -1) {\nContainer.Entry parent=entry.getParent();\nint packageLength=parent.getPath().length() + 1;\nfor (Container.Entry child : parent.getChildren()) {\nif (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\nqualifiedName=packageName + '/' + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n}\nfor (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\nif (!child.isDirectory() && child.getPath().startsWith(prefix)) {\ntypeNameCache.put(name,name);\nreturn name;\n}\n}\ntry {\nif (Class.forName(\"java.lang.\" + name) != null) {\nqualifiedName=\"java/lang/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n catch (ClassNotFoundException ignore) {\n}\nqualifiedName=\"*/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\ndefault:return concatIdentifiers(identifiers);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 222,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2576,
        "startLineNumber" : 63,
        "startColumnNumber" : 77,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (identifiers.size()) {\ncase 0:    return null;\ncase 1:  String name=identifiers.get(0).getText();\nString qualifiedName=typeNameCache.get(name);\nif (qualifiedName != null) {\nreturn qualifiedName;\n}\nString imp=nameToInternalTypeName.get(name);\nif (imp != null) {\nreturn imp;\n}\nString prefix=name + '.';\nif (entry.getPath().indexOf('/') != -1) {\nContainer.Entry parent=entry.getParent();\nint packageLength=parent.getPath().length() + 1;\nfor (Container.Entry child : parent.getChildren()) {\nif (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\nqualifiedName=packageName + '/' + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n}\nfor (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\nif (!child.isDirectory() && child.getPath().startsWith(prefix)) {\ntypeNameCache.put(name,name);\nreturn name;\n}\n}\ntry {\nif (Class.forName(\"java.lang.\" + name) != null) {\nqualifiedName=\"java/lang/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n catch (ClassNotFoundException ignore) {\n}\nqualifiedName=\"*/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\ndefault:return concatIdentifiers(identifiers);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2649,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected String resolveInternalTypeName(List<TerminalNode> identifiers){\nswitch (identifiers.size()) {\ncase 0:    return null;\ncase 1:  String name=identifiers.get(0).getText();\nString qualifiedName=typeNameCache.get(name);\nif (qualifiedName != null) {\nreturn qualifiedName;\n}\nString imp=nameToInternalTypeName.get(name);\nif (imp != null) {\nreturn imp;\n}\nString prefix=name + '.';\nif (entry.getPath().indexOf('/') != -1) {\nContainer.Entry parent=entry.getParent();\nint packageLength=parent.getPath().length() + 1;\nfor (Container.Entry child : parent.getChildren()) {\nif (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\nqualifiedName=packageName + '/' + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n}\nfor (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\nif (!child.isDirectory() && child.getPath().startsWith(prefix)) {\ntypeNameCache.put(name,name);\nreturn name;\n}\n}\ntry {\nif (Class.forName(\"java.lang.\" + name) != null) {\nqualifiedName=\"java/lang/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n catch (ClassNotFoundException ignore) {\n}\nqualifiedName=\"*/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\ndefault:return concatIdentifiers(identifiers);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 90,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Container.Entry parent=entry.getParent();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.jd.gui.api.model.Container.Entry"
  }, {
    "nodeContext" : "Container.Entry",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 93,
      "startColumnNumber" : 25,
      "endLineNumber" : 93,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SingleVariableDeclaration,type]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 93,
        "startColumnNumber" : 25,
        "endLineNumber" : 93,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Container.Entry",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 93,
        "startColumnNumber" : 25,
        "endLineNumber" : 93,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Container.Entry child",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 99,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (Container.Entry child : parent.getChildren()) {\n  if (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\n    qualifiedName=packageName + '/' + name;\n    typeNameCache.put(name,qualifiedName);\n    return qualifiedName;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 88,
        "startColumnNumber" : 56,
        "endLineNumber" : 100,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Container.Entry parent=entry.getParent();\n  int packageLength=parent.getPath().length() + 1;\n  for (  Container.Entry child : parent.getChildren()) {\n    if (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\n      qualifiedName=packageName + '/' + name;\n      typeNameCache.put(name,qualifiedName);\n      return qualifiedName;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 88,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (entry.getPath().indexOf('/') != -1) {\n  Container.Entry parent=entry.getParent();\n  int packageLength=parent.getPath().length() + 1;\n  for (  Container.Entry child : parent.getChildren()) {\n    if (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\n      qualifiedName=packageName + '/' + name;\n      typeNameCache.put(name,qualifiedName);\n      return qualifiedName;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2558,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (identifiers.size()) {\ncase 0:  return null;\ncase 1:String name=identifiers.get(0).getText();\nString qualifiedName=typeNameCache.get(name);\nif (qualifiedName != null) {\nreturn qualifiedName;\n}\nString imp=nameToInternalTypeName.get(name);\nif (imp != null) {\nreturn imp;\n}\nString prefix=name + '.';\nif (entry.getPath().indexOf('/') != -1) {\nContainer.Entry parent=entry.getParent();\nint packageLength=parent.getPath().length() + 1;\nfor (Container.Entry child : parent.getChildren()) {\nif (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\nqualifiedName=packageName + '/' + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n}\nfor (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\nif (!child.isDirectory() && child.getPath().startsWith(prefix)) {\ntypeNameCache.put(name,name);\nreturn name;\n}\n}\ntry {\nif (Class.forName(\"java.lang.\" + name) != null) {\nqualifiedName=\"java/lang/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n catch (ClassNotFoundException ignore) {\n}\nqualifiedName=\"*/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\ndefault:return concatIdentifiers(identifiers);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 222,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2576,
        "startLineNumber" : 63,
        "startColumnNumber" : 77,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (identifiers.size()) {\ncase 0:    return null;\ncase 1:  String name=identifiers.get(0).getText();\nString qualifiedName=typeNameCache.get(name);\nif (qualifiedName != null) {\nreturn qualifiedName;\n}\nString imp=nameToInternalTypeName.get(name);\nif (imp != null) {\nreturn imp;\n}\nString prefix=name + '.';\nif (entry.getPath().indexOf('/') != -1) {\nContainer.Entry parent=entry.getParent();\nint packageLength=parent.getPath().length() + 1;\nfor (Container.Entry child : parent.getChildren()) {\nif (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\nqualifiedName=packageName + '/' + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n}\nfor (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\nif (!child.isDirectory() && child.getPath().startsWith(prefix)) {\ntypeNameCache.put(name,name);\nreturn name;\n}\n}\ntry {\nif (Class.forName(\"java.lang.\" + name) != null) {\nqualifiedName=\"java/lang/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n catch (ClassNotFoundException ignore) {\n}\nqualifiedName=\"*/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\ndefault:return concatIdentifiers(identifiers);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2649,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected String resolveInternalTypeName(List<TerminalNode> identifiers){\nswitch (identifiers.size()) {\ncase 0:    return null;\ncase 1:  String name=identifiers.get(0).getText();\nString qualifiedName=typeNameCache.get(name);\nif (qualifiedName != null) {\nreturn qualifiedName;\n}\nString imp=nameToInternalTypeName.get(name);\nif (imp != null) {\nreturn imp;\n}\nString prefix=name + '.';\nif (entry.getPath().indexOf('/') != -1) {\nContainer.Entry parent=entry.getParent();\nint packageLength=parent.getPath().length() + 1;\nfor (Container.Entry child : parent.getChildren()) {\nif (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\nqualifiedName=packageName + '/' + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n}\nfor (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\nif (!child.isDirectory() && child.getPath().startsWith(prefix)) {\ntypeNameCache.put(name,name);\nreturn name;\n}\n}\ntry {\nif (Class.forName(\"java.lang.\" + name) != null) {\nqualifiedName=\"java/lang/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n catch (ClassNotFoundException ignore) {\n}\nqualifiedName=\"*/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\ndefault:return concatIdentifiers(identifiers);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 93,
        "startColumnNumber" : 25,
        "endLineNumber" : 93,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Container.Entry child",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.jd.gui.api.model.Container.Entry"
  }, {
    "nodeContext" : "Container.Entry",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 103,
      "startColumnNumber" : 21,
      "endLineNumber" : 103,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SingleVariableDeclaration,type]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 103,
        "startColumnNumber" : 21,
        "endLineNumber" : 103,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Container.Entry",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 103,
        "startColumnNumber" : 21,
        "endLineNumber" : 103,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Container.Entry child",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 103,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\n  if (!child.isDirectory() && child.getPath().startsWith(prefix)) {\n    typeNameCache.put(name,name);\n    return name;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2558,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (identifiers.size()) {\ncase 0:  return null;\ncase 1:String name=identifiers.get(0).getText();\nString qualifiedName=typeNameCache.get(name);\nif (qualifiedName != null) {\nreturn qualifiedName;\n}\nString imp=nameToInternalTypeName.get(name);\nif (imp != null) {\nreturn imp;\n}\nString prefix=name + '.';\nif (entry.getPath().indexOf('/') != -1) {\nContainer.Entry parent=entry.getParent();\nint packageLength=parent.getPath().length() + 1;\nfor (Container.Entry child : parent.getChildren()) {\nif (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\nqualifiedName=packageName + '/' + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n}\nfor (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\nif (!child.isDirectory() && child.getPath().startsWith(prefix)) {\ntypeNameCache.put(name,name);\nreturn name;\n}\n}\ntry {\nif (Class.forName(\"java.lang.\" + name) != null) {\nqualifiedName=\"java/lang/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n catch (ClassNotFoundException ignore) {\n}\nqualifiedName=\"*/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\ndefault:return concatIdentifiers(identifiers);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 222,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2576,
        "startLineNumber" : 63,
        "startColumnNumber" : 77,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (identifiers.size()) {\ncase 0:    return null;\ncase 1:  String name=identifiers.get(0).getText();\nString qualifiedName=typeNameCache.get(name);\nif (qualifiedName != null) {\nreturn qualifiedName;\n}\nString imp=nameToInternalTypeName.get(name);\nif (imp != null) {\nreturn imp;\n}\nString prefix=name + '.';\nif (entry.getPath().indexOf('/') != -1) {\nContainer.Entry parent=entry.getParent();\nint packageLength=parent.getPath().length() + 1;\nfor (Container.Entry child : parent.getChildren()) {\nif (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\nqualifiedName=packageName + '/' + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n}\nfor (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\nif (!child.isDirectory() && child.getPath().startsWith(prefix)) {\ntypeNameCache.put(name,name);\nreturn name;\n}\n}\ntry {\nif (Class.forName(\"java.lang.\" + name) != null) {\nqualifiedName=\"java/lang/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n catch (ClassNotFoundException ignore) {\n}\nqualifiedName=\"*/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\ndefault:return concatIdentifiers(identifiers);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2649,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected String resolveInternalTypeName(List<TerminalNode> identifiers){\nswitch (identifiers.size()) {\ncase 0:    return null;\ncase 1:  String name=identifiers.get(0).getText();\nString qualifiedName=typeNameCache.get(name);\nif (qualifiedName != null) {\nreturn qualifiedName;\n}\nString imp=nameToInternalTypeName.get(name);\nif (imp != null) {\nreturn imp;\n}\nString prefix=name + '.';\nif (entry.getPath().indexOf('/') != -1) {\nContainer.Entry parent=entry.getParent();\nint packageLength=parent.getPath().length() + 1;\nfor (Container.Entry child : parent.getChildren()) {\nif (!child.isDirectory() && child.getPath().substring(packageLength).startsWith(prefix)) {\nqualifiedName=packageName + '/' + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n}\nfor (Container.Entry child : entry.getContainer().getRoot().getChildren()) {\nif (!child.isDirectory() && child.getPath().startsWith(prefix)) {\ntypeNameCache.put(name,name);\nreturn name;\n}\n}\ntry {\nif (Class.forName(\"java.lang.\" + name) != null) {\nqualifiedName=\"java/lang/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\n}\n}\n catch (ClassNotFoundException ignore) {\n}\nqualifiedName=\"*/\" + name;\ntypeNameCache.put(name,qualifiedName);\nreturn qualifiedName;\ndefault:return concatIdentifiers(identifiers);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 103,
        "startColumnNumber" : 21,
        "endLineNumber" : 103,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Container.Entry child",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.jd.gui.api.model.Container.Entry"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 90,
    "startColumnNumber" : 20,
    "endLineNumber" : 90,
    "endColumnNumber" : 35
  }, {
    "charLength" : 15,
    "startLineNumber" : 93,
    "startColumnNumber" : 25,
    "endLineNumber" : 93,
    "endColumnNumber" : 40
  }, {
    "charLength" : 15,
    "startLineNumber" : 103,
    "startColumnNumber" : 21,
    "endLineNumber" : 103,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}