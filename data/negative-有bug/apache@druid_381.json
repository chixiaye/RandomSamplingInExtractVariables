{
  "id" : 381,
  "expression" : "Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\")",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/sql/src/test/java/org/apache/druid/sql/calcite/CalciteCorrelatedQueryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 94,
      "startLineNumber" : 232,
      "startColumnNumber" : 62,
      "endLineNumber" : 233,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 232,
        "startColumnNumber" : 45,
        "endLineNumber" : 233,
        "endColumnNumber" : 81
      },
      "nodeContext" : "querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3913,
        "startLineNumber" : 181,
        "startColumnNumber" : 12,
        "endLineNumber" : 233,
        "endColumnNumber" : 82
      },
      "nodeContext" : "GroupByQuery.builder().setDataSource(join(new TableDataSource(CalciteTests.USERVISITDATASOURCE),new QueryDataSource(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.USERVISITDATASOURCE).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setVirtualColumns(new ExpressionVirtualColumn(\"v0\",\"timestamp_floor(\\\"__time\\\",'P1D',null,'UTC')\",ValueType.LONG,TestExprMacroTable.INSTANCE)).setDimFilter(not(selector(\"country\",null,null))).setDimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.LONG),new DefaultDimensionSpec(\"country\",\"d1\")).setAggregatorSpecs(new CountAggregatorFactory(\"a0\")).setContext(queryContext).setGranularity(new AllGranularity()).build()).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setDimensions(new DefaultDimensionSpec(\"d1\",\"_d0\")).setAggregatorSpecs(new LongMaxAggregatorFactory(\"_a0\",\"a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"country\"),DruidExpression.fromColumn(\"j0._d0\")),JoinType.LEFT,selector(\"city\",\"B\",null))).setQuerySegmentSpec(querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3995,
        "startLineNumber" : 181,
        "startColumnNumber" : 12,
        "endLineNumber" : 234,
        "endColumnNumber" : 81
      },
      "nodeContext" : "GroupByQuery.builder().setDataSource(join(new TableDataSource(CalciteTests.USERVISITDATASOURCE),new QueryDataSource(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.USERVISITDATASOURCE).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setVirtualColumns(new ExpressionVirtualColumn(\"v0\",\"timestamp_floor(\\\"__time\\\",'P1D',null,'UTC')\",ValueType.LONG,TestExprMacroTable.INSTANCE)).setDimFilter(not(selector(\"country\",null,null))).setDimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.LONG),new DefaultDimensionSpec(\"country\",\"d1\")).setAggregatorSpecs(new CountAggregatorFactory(\"a0\")).setContext(queryContext).setGranularity(new AllGranularity()).build()).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setDimensions(new DefaultDimensionSpec(\"d1\",\"_d0\")).setAggregatorSpecs(new LongMaxAggregatorFactory(\"_a0\",\"a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"country\"),DruidExpression.fromColumn(\"j0._d0\")),JoinType.LEFT,selector(\"city\",\"B\",null))).setQuerySegmentSpec(querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\"))).setDimensions(new DefaultDimensionSpec(\"country\",\"d0\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 154,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 4085,
        "startLineNumber" : 181,
        "startColumnNumber" : 12,
        "endLineNumber" : 235,
        "endColumnNumber" : 89
      },
      "nodeContext" : "GroupByQuery.builder().setDataSource(join(new TableDataSource(CalciteTests.USERVISITDATASOURCE),new QueryDataSource(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.USERVISITDATASOURCE).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setVirtualColumns(new ExpressionVirtualColumn(\"v0\",\"timestamp_floor(\\\"__time\\\",'P1D',null,'UTC')\",ValueType.LONG,TestExprMacroTable.INSTANCE)).setDimFilter(not(selector(\"country\",null,null))).setDimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.LONG),new DefaultDimensionSpec(\"country\",\"d1\")).setAggregatorSpecs(new CountAggregatorFactory(\"a0\")).setContext(queryContext).setGranularity(new AllGranularity()).build()).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setDimensions(new DefaultDimensionSpec(\"d1\",\"_d0\")).setAggregatorSpecs(new LongMaxAggregatorFactory(\"_a0\",\"a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"country\"),DruidExpression.fromColumn(\"j0._d0\")),JoinType.LEFT,selector(\"city\",\"B\",null))).setQuerySegmentSpec(querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\"))).setDimensions(new DefaultDimensionSpec(\"country\",\"d0\")).setAggregatorSpecs(new LongAnyAggregatorFactory(\"a0\",\"j0._a0\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 161,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 4147,
        "startLineNumber" : 181,
        "startColumnNumber" : 12,
        "endLineNumber" : 236,
        "endColumnNumber" : 61
      },
      "nodeContext" : "GroupByQuery.builder().setDataSource(join(new TableDataSource(CalciteTests.USERVISITDATASOURCE),new QueryDataSource(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.USERVISITDATASOURCE).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setVirtualColumns(new ExpressionVirtualColumn(\"v0\",\"timestamp_floor(\\\"__time\\\",'P1D',null,'UTC')\",ValueType.LONG,TestExprMacroTable.INSTANCE)).setDimFilter(not(selector(\"country\",null,null))).setDimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.LONG),new DefaultDimensionSpec(\"country\",\"d1\")).setAggregatorSpecs(new CountAggregatorFactory(\"a0\")).setContext(queryContext).setGranularity(new AllGranularity()).build()).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setDimensions(new DefaultDimensionSpec(\"d1\",\"_d0\")).setAggregatorSpecs(new LongMaxAggregatorFactory(\"_a0\",\"a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"country\"),DruidExpression.fromColumn(\"j0._d0\")),JoinType.LEFT,selector(\"city\",\"B\",null))).setQuerySegmentSpec(querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\"))).setDimensions(new DefaultDimensionSpec(\"country\",\"d0\")).setAggregatorSpecs(new LongAnyAggregatorFactory(\"a0\",\"j0._a0\")).setGranularity(new AllGranularity())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 166,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 4197,
        "startLineNumber" : 181,
        "startColumnNumber" : 12,
        "endLineNumber" : 237,
        "endColumnNumber" : 49
      },
      "nodeContext" : "GroupByQuery.builder().setDataSource(join(new TableDataSource(CalciteTests.USERVISITDATASOURCE),new QueryDataSource(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.USERVISITDATASOURCE).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setVirtualColumns(new ExpressionVirtualColumn(\"v0\",\"timestamp_floor(\\\"__time\\\",'P1D',null,'UTC')\",ValueType.LONG,TestExprMacroTable.INSTANCE)).setDimFilter(not(selector(\"country\",null,null))).setDimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.LONG),new DefaultDimensionSpec(\"country\",\"d1\")).setAggregatorSpecs(new CountAggregatorFactory(\"a0\")).setContext(queryContext).setGranularity(new AllGranularity()).build()).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setDimensions(new DefaultDimensionSpec(\"d1\",\"_d0\")).setAggregatorSpecs(new LongMaxAggregatorFactory(\"_a0\",\"a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"country\"),DruidExpression.fromColumn(\"j0._d0\")),JoinType.LEFT,selector(\"city\",\"B\",null))).setQuerySegmentSpec(querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\"))).setDimensions(new DefaultDimensionSpec(\"country\",\"d0\")).setAggregatorSpecs(new LongAnyAggregatorFactory(\"a0\",\"j0._a0\")).setGranularity(new AllGranularity()).setContext(queryContext)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 4230,
        "startLineNumber" : 181,
        "startColumnNumber" : 12,
        "endLineNumber" : 238,
        "endColumnNumber" : 32
      },
      "nodeContext" : "GroupByQuery.builder().setDataSource(join(new TableDataSource(CalciteTests.USERVISITDATASOURCE),new QueryDataSource(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.USERVISITDATASOURCE).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setVirtualColumns(new ExpressionVirtualColumn(\"v0\",\"timestamp_floor(\\\"__time\\\",'P1D',null,'UTC')\",ValueType.LONG,TestExprMacroTable.INSTANCE)).setDimFilter(not(selector(\"country\",null,null))).setDimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.LONG),new DefaultDimensionSpec(\"country\",\"d1\")).setAggregatorSpecs(new CountAggregatorFactory(\"a0\")).setContext(queryContext).setGranularity(new AllGranularity()).build()).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setDimensions(new DefaultDimensionSpec(\"d1\",\"_d0\")).setAggregatorSpecs(new LongMaxAggregatorFactory(\"_a0\",\"a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"country\"),DruidExpression.fromColumn(\"j0._d0\")),JoinType.LEFT,selector(\"city\",\"B\",null))).setQuerySegmentSpec(querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\"))).setDimensions(new DefaultDimensionSpec(\"country\",\"d0\")).setAggregatorSpecs(new LongAnyAggregatorFactory(\"a0\",\"j0._a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 171,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 4270,
        "startLineNumber" : 180,
        "startColumnNumber" : 8,
        "endLineNumber" : 239,
        "endColumnNumber" : 9
      },
      "nodeContext" : "ImmutableList.of(GroupByQuery.builder().setDataSource(join(new TableDataSource(CalciteTests.USERVISITDATASOURCE),new QueryDataSource(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.USERVISITDATASOURCE).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setVirtualColumns(new ExpressionVirtualColumn(\"v0\",\"timestamp_floor(\\\"__time\\\",'P1D',null,'UTC')\",ValueType.LONG,TestExprMacroTable.INSTANCE)).setDimFilter(not(selector(\"country\",null,null))).setDimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.LONG),new DefaultDimensionSpec(\"country\",\"d1\")).setAggregatorSpecs(new CountAggregatorFactory(\"a0\")).setContext(queryContext).setGranularity(new AllGranularity()).build()).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setDimensions(new DefaultDimensionSpec(\"d1\",\"_d0\")).setAggregatorSpecs(new LongMaxAggregatorFactory(\"_a0\",\"a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"country\"),DruidExpression.fromColumn(\"j0._d0\")),JoinType.LEFT,selector(\"city\",\"B\",null))).setQuerySegmentSpec(querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\"))).setDimensions(new DefaultDimensionSpec(\"country\",\"d0\")).setAggregatorSpecs(new LongAnyAggregatorFactory(\"a0\",\"j0._a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 174,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 4828,
        "startLineNumber" : 170,
        "startColumnNumber" : 4,
        "endLineNumber" : 243,
        "endColumnNumber" : 5
      },
      "nodeContext" : "testQuery(\"select country, ANY_VALUE(\\n\" + \"        select max(\\\"users\\\") from (\\n\" + \"            select floor(__time to day), count(*) \\\"users\\\" from visits f where f.country = visits.country group by 1\\n\"+ \"        )\\n\"+ \"     ) as \\\"dailyVisits\\\"\\n\"+ \"from visits \\n\"+ \" where city = 'B' and __time between '2021-01-01 01:00:00' AND '2021-01-02 23:59:59'\"+ \" group by 1\",queryContext,ImmutableList.of(GroupByQuery.builder().setDataSource(join(new TableDataSource(CalciteTests.USERVISITDATASOURCE),new QueryDataSource(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.USERVISITDATASOURCE).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setVirtualColumns(new ExpressionVirtualColumn(\"v0\",\"timestamp_floor(\\\"__time\\\",'P1D',null,'UTC')\",ValueType.LONG,TestExprMacroTable.INSTANCE)).setDimFilter(not(selector(\"country\",null,null))).setDimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.LONG),new DefaultDimensionSpec(\"country\",\"d1\")).setAggregatorSpecs(new CountAggregatorFactory(\"a0\")).setContext(queryContext).setGranularity(new AllGranularity()).build()).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setDimensions(new DefaultDimensionSpec(\"d1\",\"_d0\")).setAggregatorSpecs(new LongMaxAggregatorFactory(\"_a0\",\"a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"country\"),DruidExpression.fromColumn(\"j0._d0\")),JoinType.LEFT,selector(\"city\",\"B\",null))).setQuerySegmentSpec(querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\"))).setDimensions(new DefaultDimensionSpec(\"country\",\"d0\")).setAggregatorSpecs(new LongAnyAggregatorFactory(\"a0\",\"j0._a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),ImmutableList.of(new Object[]{\"canada\",4L}))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 197,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4829,
        "startLineNumber" : 170,
        "startColumnNumber" : 4,
        "endLineNumber" : 243,
        "endColumnNumber" : 6
      },
      "nodeContext" : "testQuery(\"select country, ANY_VALUE(\\n\" + \"        select max(\\\"users\\\") from (\\n\" + \"            select floor(__time to day), count(*) \\\"users\\\" from visits f where f.country = visits.country group by 1\\n\"+ \"        )\\n\"+ \"     ) as \\\"dailyVisits\\\"\\n\"+ \"from visits \\n\"+ \" where city = 'B' and __time between '2021-01-01 01:00:00' AND '2021-01-02 23:59:59'\"+ \" group by 1\",queryContext,ImmutableList.of(GroupByQuery.builder().setDataSource(join(new TableDataSource(CalciteTests.USERVISITDATASOURCE),new QueryDataSource(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.USERVISITDATASOURCE).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setVirtualColumns(new ExpressionVirtualColumn(\"v0\",\"timestamp_floor(\\\"__time\\\",'P1D',null,'UTC')\",ValueType.LONG,TestExprMacroTable.INSTANCE)).setDimFilter(not(selector(\"country\",null,null))).setDimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.LONG),new DefaultDimensionSpec(\"country\",\"d1\")).setAggregatorSpecs(new CountAggregatorFactory(\"a0\")).setContext(queryContext).setGranularity(new AllGranularity()).build()).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setDimensions(new DefaultDimensionSpec(\"d1\",\"_d0\")).setAggregatorSpecs(new LongMaxAggregatorFactory(\"_a0\",\"a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"country\"),DruidExpression.fromColumn(\"j0._d0\")),JoinType.LEFT,selector(\"city\",\"B\",null))).setQuerySegmentSpec(querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\"))).setDimensions(new DefaultDimensionSpec(\"country\",\"d0\")).setAggregatorSpecs(new LongAnyAggregatorFactory(\"a0\",\"j0._a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),ImmutableList.of(new Object[]{\"canada\",4L}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 198,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4925,
        "startLineNumber" : 166,
        "startColumnNumber" : 2,
        "endLineNumber" : 244,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  cannotVectorize();\n  queryContext=withLeftDirectAccessEnabled(queryContext);\n  testQuery(\"select country, ANY_VALUE(\\n\" + \"        select max(\\\"users\\\") from (\\n\" + \"            select floor(__time to day), count(*) \\\"users\\\" from visits f where f.country = visits.country group by 1\\n\"+ \"        )\\n\"+ \"     ) as \\\"dailyVisits\\\"\\n\"+ \"from visits \\n\"+ \" where city = 'B' and __time between '2021-01-01 01:00:00' AND '2021-01-02 23:59:59'\"+ \" group by 1\",queryContext,ImmutableList.of(GroupByQuery.builder().setDataSource(join(new TableDataSource(CalciteTests.USERVISITDATASOURCE),new QueryDataSource(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.USERVISITDATASOURCE).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setVirtualColumns(new ExpressionVirtualColumn(\"v0\",\"timestamp_floor(\\\"__time\\\",'P1D',null,'UTC')\",ValueType.LONG,TestExprMacroTable.INSTANCE)).setDimFilter(not(selector(\"country\",null,null))).setDimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.LONG),new DefaultDimensionSpec(\"country\",\"d1\")).setAggregatorSpecs(new CountAggregatorFactory(\"a0\")).setContext(queryContext).setGranularity(new AllGranularity()).build()).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setDimensions(new DefaultDimensionSpec(\"d1\",\"_d0\")).setAggregatorSpecs(new LongMaxAggregatorFactory(\"_a0\",\"a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"country\"),DruidExpression.fromColumn(\"j0._d0\")),JoinType.LEFT,selector(\"city\",\"B\",null))).setQuerySegmentSpec(querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\"))).setDimensions(new DefaultDimensionSpec(\"country\",\"d0\")).setAggregatorSpecs(new LongAnyAggregatorFactory(\"a0\",\"j0._a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),ImmutableList.of(new Object[]{\"canada\",4L}));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 208,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5093,
        "startLineNumber" : 163,
        "startColumnNumber" : 2,
        "endLineNumber" : 244,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test @Parameters(source=QueryContextForJoinProvider.class) public void testCorrelatedSubqueryWithLeftFilter(Map<String,Object> queryContext) throws Exception {\n  cannotVectorize();\n  queryContext=withLeftDirectAccessEnabled(queryContext);\n  testQuery(\"select country, ANY_VALUE(\\n\" + \"        select max(\\\"users\\\") from (\\n\" + \"            select floor(__time to day), count(*) \\\"users\\\" from visits f where f.country = visits.country group by 1\\n\"+ \"        )\\n\"+ \"     ) as \\\"dailyVisits\\\"\\n\"+ \"from visits \\n\"+ \" where city = 'B' and __time between '2021-01-01 01:00:00' AND '2021-01-02 23:59:59'\"+ \" group by 1\",queryContext,ImmutableList.of(GroupByQuery.builder().setDataSource(join(new TableDataSource(CalciteTests.USERVISITDATASOURCE),new QueryDataSource(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.USERVISITDATASOURCE).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setVirtualColumns(new ExpressionVirtualColumn(\"v0\",\"timestamp_floor(\\\"__time\\\",'P1D',null,'UTC')\",ValueType.LONG,TestExprMacroTable.INSTANCE)).setDimFilter(not(selector(\"country\",null,null))).setDimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.LONG),new DefaultDimensionSpec(\"country\",\"d1\")).setAggregatorSpecs(new CountAggregatorFactory(\"a0\")).setContext(queryContext).setGranularity(new AllGranularity()).build()).setQuerySegmentSpec(querySegmentSpec(Intervals.ETERNITY)).setDimensions(new DefaultDimensionSpec(\"d1\",\"_d0\")).setAggregatorSpecs(new LongMaxAggregatorFactory(\"_a0\",\"a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"country\"),DruidExpression.fromColumn(\"j0._d0\")),JoinType.LEFT,selector(\"city\",\"B\",null))).setQuerySegmentSpec(querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\"))).setDimensions(new DefaultDimensionSpec(\"country\",\"d0\")).setAggregatorSpecs(new LongAnyAggregatorFactory(\"a0\",\"j0._a0\")).setGranularity(new AllGranularity()).setContext(queryContext).build()),ImmutableList.of(new Object[]{\"canada\",4L}));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 32
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 232,
        "startColumnNumber" : 45,
        "endLineNumber" : 233,
        "endColumnNumber" : 81
      },
      "nodeContext" : "querySegmentSpec(Intervals.of(\"2021-01-01T01:00:00.000Z/2021-01-02T23:59:59.001Z\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 9,
    "type" : "org.apache.druid.java.util.common.Interval"
  } ],
  "positionList" : [ {
    "charLength" : 94,
    "startLineNumber" : 232,
    "startColumnNumber" : 62,
    "endLineNumber" : 233,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}