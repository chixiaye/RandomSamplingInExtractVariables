{
  "id" : 511,
  "expression" : "System.err",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/upgrade-system-tests-20/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System.err",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 35,
      "startColumnNumber" : 12,
      "endLineNumber" : 35,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 110
      },
      "nodeContext" : "System.err.println(\"StreamsUpgradeTest requires one argument (properties-file) but provided none\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 111
      },
      "nodeContext" : "System.err.println(\"StreamsUpgradeTest requires one argument (properties-file) but provided none\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 34,
        "startColumnNumber" : 29,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.err.println(\"StreamsUpgradeTest requires one argument (properties-file) but provided none\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (args.length < 1) {\n  System.err.println(\"StreamsUpgradeTest requires one argument (properties-file) but provided none\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 33,
        "startColumnNumber" : 66,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (args.length < 1) {\n    System.err.println(\"StreamsUpgradeTest requires one argument (properties-file) but provided none\");\n  }\n  final String propFileName=args[0];\n  final Properties streamsProperties=Utils.loadProps(propFileName);\n  System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v2.0)\");\n  System.out.println(\"props=\" + streamsProperties);\n  final StreamsBuilder builder=new StreamsBuilder();\n  final KStream dataStream=builder.stream(\"data\");\n  dataStream.process(printProcessorSupplier());\n  dataStream.to(\"echo\");\n  final Properties config=new Properties();\n  config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG,\"StreamsUpgradeTest\");\n  config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG,1000L);\n  config.putAll(streamsProperties);\n  final KafkaStreams streams=new KafkaStreams(builder.build(),config);\n  streams.start();\n  Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n    streams.close();\n    System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n    System.out.flush();\n  }\n));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public static void main(final String[] args) throws Exception {\n  if (args.length < 1) {\n    System.err.println(\"StreamsUpgradeTest requires one argument (properties-file) but provided none\");\n  }\n  final String propFileName=args[0];\n  final Properties streamsProperties=Utils.loadProps(propFileName);\n  System.out.println(\"StreamsTest instance started (StreamsUpgradeTest v2.0)\");\n  System.out.println(\"props=\" + streamsProperties);\n  final StreamsBuilder builder=new StreamsBuilder();\n  final KStream dataStream=builder.stream(\"data\");\n  dataStream.process(printProcessorSupplier());\n  dataStream.to(\"echo\");\n  final Properties config=new Properties();\n  config.setProperty(StreamsConfig.APPLICATION_ID_CONFIG,\"StreamsUpgradeTest\");\n  config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG,1000L);\n  config.putAll(streamsProperties);\n  final KafkaStreams streams=new KafkaStreams(builder.build(),config);\n  streams.start();\n  Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n    streams.close();\n    System.out.println(\"UPGRADE-TEST-CLIENT-CLOSED\");\n    System.out.flush();\n  }\n));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 111
      },
      "nodeContext" : "System.err.println(\"StreamsUpgradeTest requires one argument (properties-file) but provided none\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 35,
    "startColumnNumber" : 12,
    "endLineNumber" : 35,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}