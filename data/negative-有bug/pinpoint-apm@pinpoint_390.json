{
  "id" : 390,
  "expression" : "trace == null",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/plugins/redis/src/main/java/com/navercorp/pinpoint/plugin/redis/interceptor/ProtocolSendCommandAndReadMethodInterceptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "trace == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 60,
      "startColumnNumber" : 12,
      "endLineNumber" : 60,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (trace == null) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 54,
        "startColumnNumber" : 53,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isDebug) {\n    logger.beforeInterceptor(target,args);\n  }\n  final Trace trace=traceContext.currentTraceObject();\n  if (trace == null) {\n    return;\n  }\n  try {\n    final InterceptorScopeInvocation invocation=interceptorScope.getCurrentInvocation();\n    if (invocation != null && invocation.getAttachment() != null && invocation.getAttachment() instanceof CommandContext) {\n      final CommandContext commandContext=(CommandContext)invocation.getAttachment();\n      if (methodDescriptor.getMethodName().equals(\"sendCommand\")) {\n        commandContext.setWriteBeginTime(System.currentTimeMillis());\n      }\n else {\n        commandContext.setReadBeginTime(System.currentTimeMillis());\n      }\n      logger.debug(\"Set command context {}\",commandContext);\n    }\n  }\n catch (  Throwable t) {\n    logger.warn(\"Failed to BEFORE process. {}\",t.getMessage(),t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1111,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void before(Object target,Object[] args){\n  if (isDebug) {\n    logger.beforeInterceptor(target,args);\n  }\n  final Trace trace=traceContext.currentTraceObject();\n  if (trace == null) {\n    return;\n  }\n  try {\n    final InterceptorScopeInvocation invocation=interceptorScope.getCurrentInvocation();\n    if (invocation != null && invocation.getAttachment() != null && invocation.getAttachment() instanceof CommandContext) {\n      final CommandContext commandContext=(CommandContext)invocation.getAttachment();\n      if (methodDescriptor.getMethodName().equals(\"sendCommand\")) {\n        commandContext.setWriteBeginTime(System.currentTimeMillis());\n      }\n else {\n        commandContext.setReadBeginTime(System.currentTimeMillis());\n      }\n      logger.debug(\"Set command context {}\",commandContext);\n    }\n  }\n catch (  Throwable t) {\n    logger.warn(\"Failed to BEFORE process. {}\",t.getMessage(),t);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (trace == null) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 60,
    "startColumnNumber" : 12,
    "endLineNumber" : 60,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}