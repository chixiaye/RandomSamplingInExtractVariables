{
  "id" : 95,
  "expression" : "m",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/main/java/org/apache/pulsar/broker/stats/metrics/ManagedLedgerCacheMetrics.java",
  "occurrences" : 15,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 49,
      "startColumnNumber" : 8,
      "endLineNumber" : 49,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 71
      },
      "nodeContext" : "m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 72
      },
      "nodeContext" : "m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 72
      },
      "nodeContext" : "m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 50,
      "startColumnNumber" : 8,
      "endLineNumber" : 50,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 72
      },
      "nodeContext" : "m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 73
      },
      "nodeContext" : "m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 73
      },
      "nodeContext" : "m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 51,
      "startColumnNumber" : 8,
      "endLineNumber" : 51,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 81
      },
      "nodeContext" : "m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 82
      },
      "nodeContext" : "m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 82
      },
      "nodeContext" : "m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 52,
      "startColumnNumber" : 8,
      "endLineNumber" : 52,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 72
      },
      "nodeContext" : "m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 73
      },
      "nodeContext" : "m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 73
      },
      "nodeContext" : "m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 53,
      "startColumnNumber" : 8,
      "endLineNumber" : 53,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 76
      },
      "nodeContext" : "m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 77
      },
      "nodeContext" : "m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 77
      },
      "nodeContext" : "m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 54,
      "startColumnNumber" : 8,
      "endLineNumber" : 54,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 84
      },
      "nodeContext" : "m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 85
      },
      "nodeContext" : "m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 85
      },
      "nodeContext" : "m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 55,
      "startColumnNumber" : 8,
      "endLineNumber" : 55,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 88
      },
      "nodeContext" : "m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 89
      },
      "nodeContext" : "m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 89
      },
      "nodeContext" : "m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 84,
      "startColumnNumber" : 8,
      "endLineNumber" : 84,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 60
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_allocated\",totalAllocated)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 61
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 61
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 85,
      "startColumnNumber" : 8,
      "endLineNumber" : 85,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 50
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_used\",totalUsed)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 51
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_used\",totalUsed);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 51
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_used\",totalUsed);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 86,
      "startColumnNumber" : 8,
      "endLineNumber" : 86,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 72
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 73
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 73
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 87,
      "startColumnNumber" : 8,
      "endLineNumber" : 87,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 81
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 82
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 82
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 88,
      "startColumnNumber" : 8,
      "endLineNumber" : 88,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 83
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 84
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 84
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 89,
      "startColumnNumber" : 8,
      "endLineNumber" : 89,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 85
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 86
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 86
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 90,
      "startColumnNumber" : 8,
      "endLineNumber" : 90,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 81
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 82
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 82
      },
      "nodeContext" : "m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 93,
      "startColumnNumber" : 20,
      "endLineNumber" : 93,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 22
      },
      "nodeContext" : "metrics.add(m)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 23
      },
      "nodeContext" : "metrics.add(m);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2438,
        "startLineNumber" : 41,
        "startColumnNumber" : 49,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2497,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized List<Metrics> generate(){\n  ManagedLedgerFactoryMXBean mlCacheStats=getManagedLedgerCacheStats();\n  Metrics m=createMetrics();\n  m.put(\"brk_ml_count\",mlCacheStats.getNumberOfManagedLedgers());\n  m.put(\"brk_ml_cache_used_size\",mlCacheStats.getCacheUsedSize());\n  m.put(\"brk_ml_cache_evictions\",mlCacheStats.getNumberOfCacheEvictions());\n  m.put(\"brk_ml_cache_hits_rate\",mlCacheStats.getCacheHitsRate());\n  m.put(\"brk_ml_cache_misses_rate\",mlCacheStats.getCacheMissesRate());\n  m.put(\"brk_ml_cache_hits_throughput\",mlCacheStats.getCacheHitsThroughput());\n  m.put(\"brk_ml_cache_misses_throughput\",mlCacheStats.getCacheMissesThroughput());\n  PooledByteBufAllocator allocator=EntryCacheImpl.ALLOCATOR;\n  long activeAllocations=0;\n  long activeAllocationsTiny=0;\n  long activeAllocationsSmall=0;\n  long activeAllocationsNormal=0;\n  long activeAllocationsHuge=0;\n  long totalAllocated=0;\n  long totalUsed=0;\n  for (  PoolArenaMetric arena : allocator.metric().directArenas()) {\n    activeAllocations+=arena.numActiveAllocations();\n    activeAllocationsTiny+=arena.numActiveTinyAllocations();\n    activeAllocationsSmall+=arena.numActiveSmallAllocations();\n    activeAllocationsNormal+=arena.numActiveNormalAllocations();\n    activeAllocationsHuge+=arena.numActiveHugeAllocations();\n    for (    PoolChunkListMetric list : arena.chunkLists()) {\n      for (      PoolChunkMetric chunk : list) {\n        int size=chunk.chunkSize();\n        int used=size - chunk.freeBytes();\n        totalAllocated+=size;\n        totalUsed+=used;\n      }\n    }\n  }\n  m.put(\"brk_ml_cache_pool_allocated\",totalAllocated);\n  m.put(\"brk_ml_cache_pool_used\",totalUsed);\n  m.put(\"brk_ml_cache_pool_active_allocations\",activeAllocations);\n  m.put(\"brk_ml_cache_pool_active_allocations_tiny\",activeAllocationsTiny);\n  m.put(\"brk_ml_cache_pool_active_allocations_small\",activeAllocationsSmall);\n  m.put(\"brk_ml_cache_pool_active_allocations_normal\",activeAllocationsNormal);\n  m.put(\"brk_ml_cache_pool_active_allocations_huge\",activeAllocationsHuge);\n  metrics.clear();\n  metrics.add(m);\n  return metrics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 23
      },
      "nodeContext" : "metrics.add(m);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.stats.Metrics"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 49,
    "startColumnNumber" : 8,
    "endLineNumber" : 49,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 50,
    "startColumnNumber" : 8,
    "endLineNumber" : 50,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 51,
    "startColumnNumber" : 8,
    "endLineNumber" : 51,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 52,
    "startColumnNumber" : 8,
    "endLineNumber" : 52,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 53,
    "startColumnNumber" : 8,
    "endLineNumber" : 53,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 54,
    "startColumnNumber" : 8,
    "endLineNumber" : 54,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 55,
    "startColumnNumber" : 8,
    "endLineNumber" : 55,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 84,
    "startColumnNumber" : 8,
    "endLineNumber" : 84,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 85,
    "startColumnNumber" : 8,
    "endLineNumber" : 85,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 86,
    "startColumnNumber" : 8,
    "endLineNumber" : 86,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 87,
    "startColumnNumber" : 8,
    "endLineNumber" : 87,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 88,
    "startColumnNumber" : 8,
    "endLineNumber" : 88,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 89,
    "startColumnNumber" : 8,
    "endLineNumber" : 89,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 90,
    "startColumnNumber" : 8,
    "endLineNumber" : 90,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 93,
    "startColumnNumber" : 20,
    "endLineNumber" : 93,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 2
  } ]
}