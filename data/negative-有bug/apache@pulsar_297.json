{
  "id" : 297,
  "expression" : "configs",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-io/common/src/main/java/org/apache/pulsar/io/common/IOConfigUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "configs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 61,
      "startColumnNumber" : 28,
      "endLineNumber" : 61,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 61,
        "startColumnNumber" : 28,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "configs.put(field.getName(),secret)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 61,
        "startColumnNumber" : 28,
        "endLineNumber" : 61,
        "endColumnNumber" : 65
      },
      "nodeContext" : "configs.put(field.getName(),secret);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 60,
        "startColumnNumber" : 44,
        "endLineNumber" : 62,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  configs.put(field.getName(),secret);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 60,
        "startColumnNumber" : 24,
        "endLineNumber" : 62,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (secret != null) {\n  configs.put(field.getName(),secret);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 507,
        "startLineNumber" : 52,
        "startColumnNumber" : 61,
        "endLineNumber" : 63,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String secret=null;\n  try {\n    secret=secretsGetter.apply(field.getName());\n  }\n catch (  Exception e) {\n    log.warn(\"Failed to read secret {}\",field.getName(),e);\n    break;\n  }\n  if (secret != null) {\n    configs.put(field.getName(),secret);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 52,
        "startColumnNumber" : 20,
        "endLineNumber" : 63,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (((FieldDoc)annotation).sensitive()) {\n  String secret=null;\n  try {\n    secret=secretsGetter.apply(field.getName());\n  }\n catch (  Exception e) {\n    log.warn(\"Failed to read secret {}\",field.getName(),e);\n    break;\n  }\n  if (secret != null) {\n    configs.put(field.getName(),secret);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 588,
        "startLineNumber" : 51,
        "startColumnNumber" : 72,
        "endLineNumber" : 64,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (((FieldDoc)annotation).sensitive()) {\n    String secret=null;\n    try {\n      secret=secretsGetter.apply(field.getName());\n    }\n catch (    Exception e) {\n      log.warn(\"Failed to read secret {}\",field.getName(),e);\n      break;\n    }\n    if (secret != null) {\n      configs.put(field.getName(),secret);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (annotation.annotationType().equals(FieldDoc.class)) {\n  if (((FieldDoc)annotation).sensitive()) {\n    String secret=null;\n    try {\n      secret=secretsGetter.apply(field.getName());\n    }\n catch (    Exception e) {\n      log.warn(\"Failed to read secret {}\",field.getName(),e);\n      break;\n    }\n    if (secret != null) {\n      configs.put(field.getName(),secret);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 50,
        "startColumnNumber" : 65,
        "endLineNumber" : 66,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (annotation.annotationType().equals(FieldDoc.class)) {\n    if (((FieldDoc)annotation).sensitive()) {\n      String secret=null;\n      try {\n        secret=secretsGetter.apply(field.getName());\n      }\n catch (      Exception e) {\n        log.warn(\"Failed to read secret {}\",field.getName(),e);\n        break;\n      }\n      if (secret != null) {\n        configs.put(field.getName(),secret);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Annotation annotation : field.getAnnotations()) {\n  if (annotation.annotationType().equals(FieldDoc.class)) {\n    if (((FieldDoc)annotation).sensitive()) {\n      String secret=null;\n      try {\n        secret=secretsGetter.apply(field.getName());\n      }\n catch (      Exception e) {\n        log.warn(\"Failed to read secret {}\",field.getName(),e);\n        break;\n      }\n      if (secret != null) {\n        configs.put(field.getName(),secret);\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 48,
        "startColumnNumber" : 60,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  field.setAccessible(true);\n  for (  Annotation annotation : field.getAnnotations()) {\n    if (annotation.annotationType().equals(FieldDoc.class)) {\n      if (((FieldDoc)annotation).sensitive()) {\n        String secret=null;\n        try {\n          secret=secretsGetter.apply(field.getName());\n        }\n catch (        Exception e) {\n          log.warn(\"Failed to read secret {}\",field.getName(),e);\n          break;\n        }\n        if (secret != null) {\n          configs.put(field.getName(),secret);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 845,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Field field : Reflections.getAllFields(clazz)) {\n  field.setAccessible(true);\n  for (  Annotation annotation : field.getAnnotations()) {\n    if (annotation.annotationType().equals(FieldDoc.class)) {\n      if (((FieldDoc)annotation).sensitive()) {\n        String secret=null;\n        try {\n          secret=secretsGetter.apply(field.getName());\n        }\n catch (        Exception e) {\n          log.warn(\"Failed to read secret {}\",field.getName(),e);\n          break;\n        }\n        if (secret != null) {\n          configs.put(field.getName(),secret);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 45,
        "startColumnNumber" : 122,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Object> configs=new HashMap<>(map);\n  for (  Field field : Reflections.getAllFields(clazz)) {\n    field.setAccessible(true);\n    for (    Annotation annotation : field.getAnnotations()) {\n      if (annotation.annotationType().equals(FieldDoc.class)) {\n        if (((FieldDoc)annotation).sensitive()) {\n          String secret=null;\n          try {\n            secret=secretsGetter.apply(field.getName());\n          }\n catch (          Exception e) {\n            log.warn(\"Failed to read secret {}\",field.getName(),e);\n            break;\n          }\n          if (secret != null) {\n            configs.put(field.getName(),secret);\n          }\n        }\n      }\n    }\n  }\n  return new ObjectMapper().convertValue(configs,clazz);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static <T>T loadWithSecrets(Map<String,Object> map,Class<T> clazz,Function<String,String> secretsGetter){\n  Map<String,Object> configs=new HashMap<>(map);\n  for (  Field field : Reflections.getAllFields(clazz)) {\n    field.setAccessible(true);\n    for (    Annotation annotation : field.getAnnotations()) {\n      if (annotation.annotationType().equals(FieldDoc.class)) {\n        if (((FieldDoc)annotation).sensitive()) {\n          String secret=null;\n          try {\n            secret=secretsGetter.apply(field.getName());\n          }\n catch (          Exception e) {\n            log.warn(\"Failed to read secret {}\",field.getName(),e);\n            break;\n          }\n          if (secret != null) {\n            configs.put(field.getName(),secret);\n          }\n        }\n      }\n    }\n  }\n  return new ObjectMapper().convertValue(configs,clazz);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 61,
        "startColumnNumber" : 28,
        "endLineNumber" : 61,
        "endColumnNumber" : 65
      },
      "nodeContext" : "configs.put(field.getName(),secret);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "configs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 68,
      "startColumnNumber" : 47,
      "endLineNumber" : 68,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 68,
        "startColumnNumber" : 15,
        "endLineNumber" : 68,
        "endColumnNumber" : 62
      },
      "nodeContext" : "new ObjectMapper().convertValue(configs,clazz)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 63
      },
      "nodeContext" : "return new ObjectMapper().convertValue(configs,clazz);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 45,
        "startColumnNumber" : 122,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Object> configs=new HashMap<>(map);\n  for (  Field field : Reflections.getAllFields(clazz)) {\n    field.setAccessible(true);\n    for (    Annotation annotation : field.getAnnotations()) {\n      if (annotation.annotationType().equals(FieldDoc.class)) {\n        if (((FieldDoc)annotation).sensitive()) {\n          String secret=null;\n          try {\n            secret=secretsGetter.apply(field.getName());\n          }\n catch (          Exception e) {\n            log.warn(\"Failed to read secret {}\",field.getName(),e);\n            break;\n          }\n          if (secret != null) {\n            configs.put(field.getName(),secret);\n          }\n        }\n      }\n    }\n  }\n  return new ObjectMapper().convertValue(configs,clazz);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static <T>T loadWithSecrets(Map<String,Object> map,Class<T> clazz,Function<String,String> secretsGetter){\n  Map<String,Object> configs=new HashMap<>(map);\n  for (  Field field : Reflections.getAllFields(clazz)) {\n    field.setAccessible(true);\n    for (    Annotation annotation : field.getAnnotations()) {\n      if (annotation.annotationType().equals(FieldDoc.class)) {\n        if (((FieldDoc)annotation).sensitive()) {\n          String secret=null;\n          try {\n            secret=secretsGetter.apply(field.getName());\n          }\n catch (          Exception e) {\n            log.warn(\"Failed to read secret {}\",field.getName(),e);\n            break;\n          }\n          if (secret != null) {\n            configs.put(field.getName(),secret);\n          }\n        }\n      }\n    }\n  }\n  return new ObjectMapper().convertValue(configs,clazz);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 63
      },
      "nodeContext" : "return new ObjectMapper().convertValue(configs,clazz);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 61,
    "startColumnNumber" : 28,
    "endLineNumber" : 61,
    "endColumnNumber" : 35
  }, {
    "charLength" : 7,
    "startLineNumber" : 68,
    "startColumnNumber" : 47,
    "endLineNumber" : 68,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 12
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}