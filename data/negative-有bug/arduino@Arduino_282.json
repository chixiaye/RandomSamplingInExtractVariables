{
  "id" : 282,
  "expression" : "!(lastLine == lineIndex && nextLineRequested)",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/syntax/TokenMarker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!(lastLine == lineIndex && nextLineRequested)",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 95,
      "startColumnNumber" : 20,
      "endLineNumber" : 95,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 7,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 95,
        "startColumnNumber" : 17,
        "endLineNumber" : 96,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (!(lastLine == lineIndex && nextLineRequested)) nextLineRequested=(oldToken != token);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3032,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (lineIndex >= length) {\n    throw new IllegalArgumentException(\"Tokenizing invalid line: \" + lineIndex);\n  }\n  lastToken=null;\n  LineInfo info=lineInfo[lineIndex];\n  LineInfo prev;\n  if (lineIndex == 0)   prev=null;\n else   prev=lineInfo[lineIndex - 1];\n  byte oldToken=info.token;\n  byte token=markTokensImpl(prev == null ? Token.NULL : prev.token,line,lineIndex);\n  info.token=token;\n  if (!(lastLine == lineIndex && nextLineRequested))   nextLineRequested=(oldToken != token);\n  lastLine=lineIndex;\n  addToken(0,Token.END);\n  return firstToken;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3327,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * A wrapper for the lower-level <code>markTokensImpl</code> method that is called to split a line up into tokens.\n * @param line The line\n * @param lineIndex The line number\n */\npublic Token markTokens(Segment line,int lineIndex){\n  if (lineIndex >= length) {\n    throw new IllegalArgumentException(\"Tokenizing invalid line: \" + lineIndex);\n  }\n  lastToken=null;\n  LineInfo info=lineInfo[lineIndex];\n  LineInfo prev;\n  if (lineIndex == 0)   prev=null;\n else   prev=lineInfo[lineIndex - 1];\n  byte oldToken=info.token;\n  byte token=markTokensImpl(prev == null ? Token.NULL : prev.token,line,lineIndex);\n  info.token=token;\n  if (!(lastLine == lineIndex && nextLineRequested))   nextLineRequested=(oldToken != token);\n  lastLine=lineIndex;\n  addToken(0,Token.END);\n  return firstToken;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 95,
        "startColumnNumber" : 17,
        "endLineNumber" : 96,
        "endColumnNumber" : 64
      },
      "nodeContext" : "if (!(lastLine == lineIndex && nextLineRequested)) nextLineRequested=(oldToken != token);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 95,
    "startColumnNumber" : 20,
    "endLineNumber" : 95,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}