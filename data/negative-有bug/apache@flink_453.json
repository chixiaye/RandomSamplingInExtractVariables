{
  "id" : 453,
  "expression" : "dataInputViewStream.skip(bigNumberToSkip)",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/DataInputViewStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dataInputViewStream.skip(bigNumberToSkip)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 44,
      "startColumnNumber" : 46,
      "endLineNumber" : 44,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertEquals(bigNumberToSkip,dataInputViewStream.skip(bigNumberToSkip))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertEquals(bigNumberToSkip,dataInputViewStream.skip(bigNumberToSkip));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 39,
        "startColumnNumber" : 99,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  assertEquals(1,dataInputViewStream.skip(1));\n  assertEquals(1,inputStream.skipped);\n  final long bigNumberToSkip=1024L + 2L * Integer.MAX_VALUE;\n  assertEquals(bigNumberToSkip,dataInputViewStream.skip(bigNumberToSkip));\n  assertEquals(1 + bigNumberToSkip,inputStream.skipped);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (DataInputViewStream dataInputViewStream=new DataInputViewStream(dataInputView)){\n  assertEquals(1,dataInputViewStream.skip(1));\n  assertEquals(1,inputStream.skipped);\n  final long bigNumberToSkip=1024L + 2L * Integer.MAX_VALUE;\n  assertEquals(bigNumberToSkip,dataInputViewStream.skip(bigNumberToSkip));\n  assertEquals(1 + bigNumberToSkip,inputStream.skipped);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 38,
        "startColumnNumber" : 83,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try (DataInputViewStream dataInputViewStream=new DataInputViewStream(dataInputView)){\n    assertEquals(1,dataInputViewStream.skip(1));\n    assertEquals(1,inputStream.skipped);\n    final long bigNumberToSkip=1024L + 2L * Integer.MAX_VALUE;\n    assertEquals(bigNumberToSkip,dataInputViewStream.skip(bigNumberToSkip));\n    assertEquals(1 + bigNumberToSkip,inputStream.skipped);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 557,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (TestDataInputView dataInputView=new TestDataInputView(inputStream)){\n  try (DataInputViewStream dataInputViewStream=new DataInputViewStream(dataInputView)){\n    assertEquals(1,dataInputViewStream.skip(1));\n    assertEquals(1,inputStream.skipped);\n    final long bigNumberToSkip=1024L + 2L * Integer.MAX_VALUE;\n    assertEquals(bigNumberToSkip,dataInputViewStream.skip(bigNumberToSkip));\n    assertEquals(1 + bigNumberToSkip,inputStream.skipped);\n  }\n }\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 66,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 640,
        "startLineNumber" : 36,
        "startColumnNumber" : 46,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final TestInputStream inputStream=new TestInputStream();\n  try (TestDataInputView dataInputView=new TestDataInputView(inputStream)){\n    try (DataInputViewStream dataInputViewStream=new DataInputViewStream(dataInputView)){\n      assertEquals(1,dataInputViewStream.skip(1));\n      assertEquals(1,inputStream.skipped);\n      final long bigNumberToSkip=1024L + 2L * Integer.MAX_VALUE;\n      assertEquals(bigNumberToSkip,dataInputViewStream.skip(bigNumberToSkip));\n      assertEquals(1 + bigNumberToSkip,inputStream.skipped);\n    }\n   }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkip() throws IOException {\n  final TestInputStream inputStream=new TestInputStream();\n  try (TestDataInputView dataInputView=new TestDataInputView(inputStream)){\n    try (DataInputViewStream dataInputViewStream=new DataInputViewStream(dataInputView)){\n      assertEquals(1,dataInputViewStream.skip(1));\n      assertEquals(1,inputStream.skipped);\n      final long bigNumberToSkip=1024L + 2L * Integer.MAX_VALUE;\n      assertEquals(bigNumberToSkip,dataInputViewStream.skip(bigNumberToSkip));\n      assertEquals(1 + bigNumberToSkip,inputStream.skipped);\n    }\n   }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertEquals(bigNumberToSkip,dataInputViewStream.skip(bigNumberToSkip));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 44,
    "startColumnNumber" : 46,
    "endLineNumber" : 44,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}