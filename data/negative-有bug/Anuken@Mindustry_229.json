{
  "id" : 229,
  "expression" : "shadowColor",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ui/fragments/ChatFragment.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "shadowColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 129,
      "startColumnNumber" : 19,
      "endLineNumber" : 129,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 31
      },
      "nodeContext" : "Draw.color(shadowColor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Draw.color(shadowColor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1836,
        "startLineNumber" : 125,
        "startColumnNumber" : 22,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float opacity=Core.settings.getInt(\"chatopacity\") / 100f;\n  float textWidth=Math.min(Core.graphics.getWidth() / 1.5f,Scl.scl(700f));\n  Draw.color(shadowColor);\n  if (shown) {\n    Fill.crect(offsetx,chatfield.y + scene.marginBottom,chatfield.getWidth() + 15f,chatfield.getHeight() - 1);\n  }\n  super.draw();\n  float spacing=chatspace;\n  chatfield.visible=shown;\n  fieldlabel.visible=shown;\n  Draw.color(shadowColor);\n  Draw.alpha(shadowColor.a * opacity);\n  float theight=offsety + spacing + getMarginBottom()+ scene.marginBottom;\n  for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n    layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n    theight+=layout.height + textspacing;\n    if (i - scrollPos == 0)     theight-=textspacing + 1;\n    font.getCache().clear();\n    font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n    if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n      font.getCache().setAlphas((fadetime - i) * opacity);\n      Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n    }\n else {\n      font.getCache().setAlphas(opacity);\n    }\n    Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n    Draw.color(shadowColor);\n    Draw.alpha(opacity * shadowColor.a);\n    font.getCache().draw();\n  }\n  Draw.color();\n  if (fadetime > 0 && !shown) {\n    fadetime-=Time.delta / 180f;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(){\n  float opacity=Core.settings.getInt(\"chatopacity\") / 100f;\n  float textWidth=Math.min(Core.graphics.getWidth() / 1.5f,Scl.scl(700f));\n  Draw.color(shadowColor);\n  if (shown) {\n    Fill.crect(offsetx,chatfield.y + scene.marginBottom,chatfield.getWidth() + 15f,chatfield.getHeight() - 1);\n  }\n  super.draw();\n  float spacing=chatspace;\n  chatfield.visible=shown;\n  fieldlabel.visible=shown;\n  Draw.color(shadowColor);\n  Draw.alpha(shadowColor.a * opacity);\n  float theight=offsety + spacing + getMarginBottom()+ scene.marginBottom;\n  for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n    layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n    theight+=layout.height + textspacing;\n    if (i - scrollPos == 0)     theight-=textspacing + 1;\n    font.getCache().clear();\n    font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n    if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n      font.getCache().setAlphas((fadetime - i) * opacity);\n      Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n    }\n else {\n      font.getCache().setAlphas(opacity);\n    }\n    Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n    Draw.color(shadowColor);\n    Draw.alpha(opacity * shadowColor.a);\n    font.getCache().draw();\n  }\n  Draw.color();\n  if (fadetime > 0 && !shown) {\n    fadetime-=Time.delta / 180f;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Draw.color(shadowColor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "mindustry.ui.fragments.Color"
  }, {
    "nodeContext" : "shadowColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 142,
      "startColumnNumber" : 19,
      "endLineNumber" : 142,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 142,
        "startColumnNumber" : 8,
        "endLineNumber" : 142,
        "endColumnNumber" : 31
      },
      "nodeContext" : "Draw.color(shadowColor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 142,
        "startColumnNumber" : 8,
        "endLineNumber" : 142,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Draw.color(shadowColor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1836,
        "startLineNumber" : 125,
        "startColumnNumber" : 22,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float opacity=Core.settings.getInt(\"chatopacity\") / 100f;\n  float textWidth=Math.min(Core.graphics.getWidth() / 1.5f,Scl.scl(700f));\n  Draw.color(shadowColor);\n  if (shown) {\n    Fill.crect(offsetx,chatfield.y + scene.marginBottom,chatfield.getWidth() + 15f,chatfield.getHeight() - 1);\n  }\n  super.draw();\n  float spacing=chatspace;\n  chatfield.visible=shown;\n  fieldlabel.visible=shown;\n  Draw.color(shadowColor);\n  Draw.alpha(shadowColor.a * opacity);\n  float theight=offsety + spacing + getMarginBottom()+ scene.marginBottom;\n  for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n    layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n    theight+=layout.height + textspacing;\n    if (i - scrollPos == 0)     theight-=textspacing + 1;\n    font.getCache().clear();\n    font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n    if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n      font.getCache().setAlphas((fadetime - i) * opacity);\n      Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n    }\n else {\n      font.getCache().setAlphas(opacity);\n    }\n    Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n    Draw.color(shadowColor);\n    Draw.alpha(opacity * shadowColor.a);\n    font.getCache().draw();\n  }\n  Draw.color();\n  if (fadetime > 0 && !shown) {\n    fadetime-=Time.delta / 180f;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(){\n  float opacity=Core.settings.getInt(\"chatopacity\") / 100f;\n  float textWidth=Math.min(Core.graphics.getWidth() / 1.5f,Scl.scl(700f));\n  Draw.color(shadowColor);\n  if (shown) {\n    Fill.crect(offsetx,chatfield.y + scene.marginBottom,chatfield.getWidth() + 15f,chatfield.getHeight() - 1);\n  }\n  super.draw();\n  float spacing=chatspace;\n  chatfield.visible=shown;\n  fieldlabel.visible=shown;\n  Draw.color(shadowColor);\n  Draw.alpha(shadowColor.a * opacity);\n  float theight=offsety + spacing + getMarginBottom()+ scene.marginBottom;\n  for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n    layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n    theight+=layout.height + textspacing;\n    if (i - scrollPos == 0)     theight-=textspacing + 1;\n    font.getCache().clear();\n    font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n    if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n      font.getCache().setAlphas((fadetime - i) * opacity);\n      Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n    }\n else {\n      font.getCache().setAlphas(opacity);\n    }\n    Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n    Draw.color(shadowColor);\n    Draw.alpha(opacity * shadowColor.a);\n    font.getCache().draw();\n  }\n  Draw.color();\n  if (fadetime > 0 && !shown) {\n    fadetime-=Time.delta / 180f;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 142,
        "startColumnNumber" : 8,
        "endLineNumber" : 142,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Draw.color(shadowColor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "mindustry.ui.fragments.Color"
  }, {
    "nodeContext" : "shadowColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 143,
      "startColumnNumber" : 19,
      "endLineNumber" : 143,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 143,
        "startColumnNumber" : 19,
        "endLineNumber" : 143,
        "endColumnNumber" : 32
      },
      "nodeContext" : "shadowColor.a",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 143,
        "startColumnNumber" : 19,
        "endLineNumber" : 143,
        "endColumnNumber" : 42
      },
      "nodeContext" : "shadowColor.a * opacity",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 143,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Draw.alpha(shadowColor.a * opacity)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 143,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Draw.alpha(shadowColor.a * opacity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1836,
        "startLineNumber" : 125,
        "startColumnNumber" : 22,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float opacity=Core.settings.getInt(\"chatopacity\") / 100f;\n  float textWidth=Math.min(Core.graphics.getWidth() / 1.5f,Scl.scl(700f));\n  Draw.color(shadowColor);\n  if (shown) {\n    Fill.crect(offsetx,chatfield.y + scene.marginBottom,chatfield.getWidth() + 15f,chatfield.getHeight() - 1);\n  }\n  super.draw();\n  float spacing=chatspace;\n  chatfield.visible=shown;\n  fieldlabel.visible=shown;\n  Draw.color(shadowColor);\n  Draw.alpha(shadowColor.a * opacity);\n  float theight=offsety + spacing + getMarginBottom()+ scene.marginBottom;\n  for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n    layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n    theight+=layout.height + textspacing;\n    if (i - scrollPos == 0)     theight-=textspacing + 1;\n    font.getCache().clear();\n    font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n    if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n      font.getCache().setAlphas((fadetime - i) * opacity);\n      Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n    }\n else {\n      font.getCache().setAlphas(opacity);\n    }\n    Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n    Draw.color(shadowColor);\n    Draw.alpha(opacity * shadowColor.a);\n    font.getCache().draw();\n  }\n  Draw.color();\n  if (fadetime > 0 && !shown) {\n    fadetime-=Time.delta / 180f;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(){\n  float opacity=Core.settings.getInt(\"chatopacity\") / 100f;\n  float textWidth=Math.min(Core.graphics.getWidth() / 1.5f,Scl.scl(700f));\n  Draw.color(shadowColor);\n  if (shown) {\n    Fill.crect(offsetx,chatfield.y + scene.marginBottom,chatfield.getWidth() + 15f,chatfield.getHeight() - 1);\n  }\n  super.draw();\n  float spacing=chatspace;\n  chatfield.visible=shown;\n  fieldlabel.visible=shown;\n  Draw.color(shadowColor);\n  Draw.alpha(shadowColor.a * opacity);\n  float theight=offsety + spacing + getMarginBottom()+ scene.marginBottom;\n  for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n    layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n    theight+=layout.height + textspacing;\n    if (i - scrollPos == 0)     theight-=textspacing + 1;\n    font.getCache().clear();\n    font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n    if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n      font.getCache().setAlphas((fadetime - i) * opacity);\n      Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n    }\n else {\n      font.getCache().setAlphas(opacity);\n    }\n    Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n    Draw.color(shadowColor);\n    Draw.alpha(opacity * shadowColor.a);\n    font.getCache().draw();\n  }\n  Draw.color();\n  if (fadetime > 0 && !shown) {\n    fadetime-=Time.delta / 180f;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 143,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Draw.alpha(shadowColor.a * opacity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "mindustry.ui.fragments.Color"
  }, {
    "nodeContext" : "shadowColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 157,
      "startColumnNumber" : 36,
      "endLineNumber" : 157,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 157,
        "startColumnNumber" : 36,
        "endLineNumber" : 157,
        "endColumnNumber" : 49
      },
      "nodeContext" : "shadowColor.a",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 157,
        "startColumnNumber" : 36,
        "endLineNumber" : 157,
        "endColumnNumber" : 76
      },
      "nodeContext" : "shadowColor.a * (fadetime - i) * opacity",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 157,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 157,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 155,
        "startColumnNumber" : 65,
        "endLineNumber" : 158,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  font.getCache().setAlphas((fadetime - i) * opacity);\n  Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 155,
        "startColumnNumber" : 12,
        "endLineNumber" : 160,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n  font.getCache().setAlphas((fadetime - i) * opacity);\n  Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n}\n else {\n  font.getCache().setAlphas(opacity);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 146,
        "startColumnNumber" : 114,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n  theight+=layout.height + textspacing;\n  if (i - scrollPos == 0)   theight-=textspacing + 1;\n  font.getCache().clear();\n  font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n  if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n    font.getCache().setAlphas((fadetime - i) * opacity);\n    Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n  }\n else {\n    font.getCache().setAlphas(opacity);\n  }\n  Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n  Draw.color(shadowColor);\n  Draw.alpha(opacity * shadowColor.a);\n  font.getCache().draw();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1076,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n  layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n  theight+=layout.height + textspacing;\n  if (i - scrollPos == 0)   theight-=textspacing + 1;\n  font.getCache().clear();\n  font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n  if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n    font.getCache().setAlphas((fadetime - i) * opacity);\n    Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n  }\n else {\n    font.getCache().setAlphas(opacity);\n  }\n  Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n  Draw.color(shadowColor);\n  Draw.alpha(opacity * shadowColor.a);\n  font.getCache().draw();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 189,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1836,
        "startLineNumber" : 125,
        "startColumnNumber" : 22,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float opacity=Core.settings.getInt(\"chatopacity\") / 100f;\n  float textWidth=Math.min(Core.graphics.getWidth() / 1.5f,Scl.scl(700f));\n  Draw.color(shadowColor);\n  if (shown) {\n    Fill.crect(offsetx,chatfield.y + scene.marginBottom,chatfield.getWidth() + 15f,chatfield.getHeight() - 1);\n  }\n  super.draw();\n  float spacing=chatspace;\n  chatfield.visible=shown;\n  fieldlabel.visible=shown;\n  Draw.color(shadowColor);\n  Draw.alpha(shadowColor.a * opacity);\n  float theight=offsety + spacing + getMarginBottom()+ scene.marginBottom;\n  for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n    layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n    theight+=layout.height + textspacing;\n    if (i - scrollPos == 0)     theight-=textspacing + 1;\n    font.getCache().clear();\n    font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n    if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n      font.getCache().setAlphas((fadetime - i) * opacity);\n      Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n    }\n else {\n      font.getCache().setAlphas(opacity);\n    }\n    Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n    Draw.color(shadowColor);\n    Draw.alpha(opacity * shadowColor.a);\n    font.getCache().draw();\n  }\n  Draw.color();\n  if (fadetime > 0 && !shown) {\n    fadetime-=Time.delta / 180f;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(){\n  float opacity=Core.settings.getInt(\"chatopacity\") / 100f;\n  float textWidth=Math.min(Core.graphics.getWidth() / 1.5f,Scl.scl(700f));\n  Draw.color(shadowColor);\n  if (shown) {\n    Fill.crect(offsetx,chatfield.y + scene.marginBottom,chatfield.getWidth() + 15f,chatfield.getHeight() - 1);\n  }\n  super.draw();\n  float spacing=chatspace;\n  chatfield.visible=shown;\n  fieldlabel.visible=shown;\n  Draw.color(shadowColor);\n  Draw.alpha(shadowColor.a * opacity);\n  float theight=offsety + spacing + getMarginBottom()+ scene.marginBottom;\n  for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n    layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n    theight+=layout.height + textspacing;\n    if (i - scrollPos == 0)     theight-=textspacing + 1;\n    font.getCache().clear();\n    font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n    if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n      font.getCache().setAlphas((fadetime - i) * opacity);\n      Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n    }\n else {\n      font.getCache().setAlphas(opacity);\n    }\n    Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n    Draw.color(shadowColor);\n    Draw.alpha(opacity * shadowColor.a);\n    font.getCache().draw();\n  }\n  Draw.color();\n  if (fadetime > 0 && !shown) {\n    fadetime-=Time.delta / 180f;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 157,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "mindustry.ui.fragments.Color"
  }, {
    "nodeContext" : "shadowColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 163,
      "startColumnNumber" : 23,
      "endLineNumber" : 163,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 163,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 35
      },
      "nodeContext" : "Draw.color(shadowColor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 163,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Draw.color(shadowColor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 146,
        "startColumnNumber" : 114,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n  theight+=layout.height + textspacing;\n  if (i - scrollPos == 0)   theight-=textspacing + 1;\n  font.getCache().clear();\n  font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n  if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n    font.getCache().setAlphas((fadetime - i) * opacity);\n    Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n  }\n else {\n    font.getCache().setAlphas(opacity);\n  }\n  Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n  Draw.color(shadowColor);\n  Draw.alpha(opacity * shadowColor.a);\n  font.getCache().draw();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1076,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n  layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n  theight+=layout.height + textspacing;\n  if (i - scrollPos == 0)   theight-=textspacing + 1;\n  font.getCache().clear();\n  font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n  if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n    font.getCache().setAlphas((fadetime - i) * opacity);\n    Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n  }\n else {\n    font.getCache().setAlphas(opacity);\n  }\n  Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n  Draw.color(shadowColor);\n  Draw.alpha(opacity * shadowColor.a);\n  font.getCache().draw();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 189,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1836,
        "startLineNumber" : 125,
        "startColumnNumber" : 22,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float opacity=Core.settings.getInt(\"chatopacity\") / 100f;\n  float textWidth=Math.min(Core.graphics.getWidth() / 1.5f,Scl.scl(700f));\n  Draw.color(shadowColor);\n  if (shown) {\n    Fill.crect(offsetx,chatfield.y + scene.marginBottom,chatfield.getWidth() + 15f,chatfield.getHeight() - 1);\n  }\n  super.draw();\n  float spacing=chatspace;\n  chatfield.visible=shown;\n  fieldlabel.visible=shown;\n  Draw.color(shadowColor);\n  Draw.alpha(shadowColor.a * opacity);\n  float theight=offsety + spacing + getMarginBottom()+ scene.marginBottom;\n  for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n    layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n    theight+=layout.height + textspacing;\n    if (i - scrollPos == 0)     theight-=textspacing + 1;\n    font.getCache().clear();\n    font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n    if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n      font.getCache().setAlphas((fadetime - i) * opacity);\n      Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n    }\n else {\n      font.getCache().setAlphas(opacity);\n    }\n    Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n    Draw.color(shadowColor);\n    Draw.alpha(opacity * shadowColor.a);\n    font.getCache().draw();\n  }\n  Draw.color();\n  if (fadetime > 0 && !shown) {\n    fadetime-=Time.delta / 180f;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(){\n  float opacity=Core.settings.getInt(\"chatopacity\") / 100f;\n  float textWidth=Math.min(Core.graphics.getWidth() / 1.5f,Scl.scl(700f));\n  Draw.color(shadowColor);\n  if (shown) {\n    Fill.crect(offsetx,chatfield.y + scene.marginBottom,chatfield.getWidth() + 15f,chatfield.getHeight() - 1);\n  }\n  super.draw();\n  float spacing=chatspace;\n  chatfield.visible=shown;\n  fieldlabel.visible=shown;\n  Draw.color(shadowColor);\n  Draw.alpha(shadowColor.a * opacity);\n  float theight=offsety + spacing + getMarginBottom()+ scene.marginBottom;\n  for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n    layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n    theight+=layout.height + textspacing;\n    if (i - scrollPos == 0)     theight-=textspacing + 1;\n    font.getCache().clear();\n    font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n    if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n      font.getCache().setAlphas((fadetime - i) * opacity);\n      Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n    }\n else {\n      font.getCache().setAlphas(opacity);\n    }\n    Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n    Draw.color(shadowColor);\n    Draw.alpha(opacity * shadowColor.a);\n    font.getCache().draw();\n  }\n  Draw.color();\n  if (fadetime > 0 && !shown) {\n    fadetime-=Time.delta / 180f;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 163,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Draw.color(shadowColor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "mindustry.ui.fragments.Color"
  }, {
    "nodeContext" : "shadowColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 164,
      "startColumnNumber" : 33,
      "endLineNumber" : 164,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 164,
        "startColumnNumber" : 33,
        "endLineNumber" : 164,
        "endColumnNumber" : 46
      },
      "nodeContext" : "shadowColor.a",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 164,
        "startColumnNumber" : 23,
        "endLineNumber" : 164,
        "endColumnNumber" : 46
      },
      "nodeContext" : "opacity * shadowColor.a",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 164,
        "startColumnNumber" : 12,
        "endLineNumber" : 164,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Draw.alpha(opacity * shadowColor.a)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 164,
        "startColumnNumber" : 12,
        "endLineNumber" : 164,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Draw.alpha(opacity * shadowColor.a);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 146,
        "startColumnNumber" : 114,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n  theight+=layout.height + textspacing;\n  if (i - scrollPos == 0)   theight-=textspacing + 1;\n  font.getCache().clear();\n  font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n  if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n    font.getCache().setAlphas((fadetime - i) * opacity);\n    Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n  }\n else {\n    font.getCache().setAlphas(opacity);\n  }\n  Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n  Draw.color(shadowColor);\n  Draw.alpha(opacity * shadowColor.a);\n  font.getCache().draw();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1076,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n  layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n  theight+=layout.height + textspacing;\n  if (i - scrollPos == 0)   theight-=textspacing + 1;\n  font.getCache().clear();\n  font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n  if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n    font.getCache().setAlphas((fadetime - i) * opacity);\n    Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n  }\n else {\n    font.getCache().setAlphas(opacity);\n  }\n  Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n  Draw.color(shadowColor);\n  Draw.alpha(opacity * shadowColor.a);\n  font.getCache().draw();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 189,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1836,
        "startLineNumber" : 125,
        "startColumnNumber" : 22,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float opacity=Core.settings.getInt(\"chatopacity\") / 100f;\n  float textWidth=Math.min(Core.graphics.getWidth() / 1.5f,Scl.scl(700f));\n  Draw.color(shadowColor);\n  if (shown) {\n    Fill.crect(offsetx,chatfield.y + scene.marginBottom,chatfield.getWidth() + 15f,chatfield.getHeight() - 1);\n  }\n  super.draw();\n  float spacing=chatspace;\n  chatfield.visible=shown;\n  fieldlabel.visible=shown;\n  Draw.color(shadowColor);\n  Draw.alpha(shadowColor.a * opacity);\n  float theight=offsety + spacing + getMarginBottom()+ scene.marginBottom;\n  for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n    layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n    theight+=layout.height + textspacing;\n    if (i - scrollPos == 0)     theight-=textspacing + 1;\n    font.getCache().clear();\n    font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n    if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n      font.getCache().setAlphas((fadetime - i) * opacity);\n      Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n    }\n else {\n      font.getCache().setAlphas(opacity);\n    }\n    Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n    Draw.color(shadowColor);\n    Draw.alpha(opacity * shadowColor.a);\n    font.getCache().draw();\n  }\n  Draw.color();\n  if (fadetime > 0 && !shown) {\n    fadetime-=Time.delta / 180f;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1868,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(){\n  float opacity=Core.settings.getInt(\"chatopacity\") / 100f;\n  float textWidth=Math.min(Core.graphics.getWidth() / 1.5f,Scl.scl(700f));\n  Draw.color(shadowColor);\n  if (shown) {\n    Fill.crect(offsetx,chatfield.y + scene.marginBottom,chatfield.getWidth() + 15f,chatfield.getHeight() - 1);\n  }\n  super.draw();\n  float spacing=chatspace;\n  chatfield.visible=shown;\n  fieldlabel.visible=shown;\n  Draw.color(shadowColor);\n  Draw.alpha(shadowColor.a * opacity);\n  float theight=offsety + spacing + getMarginBottom()+ scene.marginBottom;\n  for (int i=scrollPos; i < messages.size && i < messagesShown + scrollPos && (i < fadetime || shown); i++) {\n    layout.setText(font,messages.get(i).formattedMessage,Color.white,textWidth,Align.bottomLeft,true);\n    theight+=layout.height + textspacing;\n    if (i - scrollPos == 0)     theight-=textspacing + 1;\n    font.getCache().clear();\n    font.getCache().addText(messages.get(i).formattedMessage,fontoffsetx + offsetx,offsety + theight,textWidth,Align.bottomLeft,true);\n    if (!shown && fadetime - i < 1f && fadetime - i >= 0f) {\n      font.getCache().setAlphas((fadetime - i) * opacity);\n      Draw.color(0,0,0,shadowColor.a * (fadetime - i) * opacity);\n    }\n else {\n      font.getCache().setAlphas(opacity);\n    }\n    Fill.crect(offsetx,theight - layout.height - 2,textWidth + Scl.scl(4f),layout.height + textspacing);\n    Draw.color(shadowColor);\n    Draw.alpha(opacity * shadowColor.a);\n    font.getCache().draw();\n  }\n  Draw.color();\n  if (fadetime > 0 && !shown) {\n    fadetime-=Time.delta / 180f;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 164,
        "startColumnNumber" : 12,
        "endLineNumber" : 164,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Draw.alpha(opacity * shadowColor.a);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "mindustry.ui.fragments.Color"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 129,
    "startColumnNumber" : 19,
    "endLineNumber" : 129,
    "endColumnNumber" : 30
  }, {
    "charLength" : 11,
    "startLineNumber" : 142,
    "startColumnNumber" : 19,
    "endLineNumber" : 142,
    "endColumnNumber" : 30
  }, {
    "charLength" : 11,
    "startLineNumber" : 143,
    "startColumnNumber" : 19,
    "endLineNumber" : 143,
    "endColumnNumber" : 30
  }, {
    "charLength" : 11,
    "startLineNumber" : 157,
    "startColumnNumber" : 36,
    "endLineNumber" : 157,
    "endColumnNumber" : 47
  }, {
    "charLength" : 11,
    "startLineNumber" : 163,
    "startColumnNumber" : 23,
    "endLineNumber" : 163,
    "endColumnNumber" : 34
  }, {
    "charLength" : 11,
    "startLineNumber" : 164,
    "startColumnNumber" : 33,
    "endLineNumber" : 164,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  } ]
}