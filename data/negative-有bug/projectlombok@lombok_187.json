{
  "id" : 187,
  "expression" : "((ArrayType)type0)",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/javac/JavacResolution.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((ArrayType)type0)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 403,
      "startColumnNumber" : 11,
      "endLineNumber" : 403,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 403,
        "startColumnNumber" : 11,
        "endLineNumber" : 403,
        "endColumnNumber" : 38
      },
      "nodeContext" : "((ArrayType)type0).elemtype",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 403,
        "startColumnNumber" : 3,
        "endLineNumber" : 403,
        "endColumnNumber" : 38
      },
      "nodeContext" : "type0=((ArrayType)type0).elemtype",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 403,
        "startColumnNumber" : 3,
        "endLineNumber" : 403,
        "endColumnNumber" : 39
      },
      "nodeContext" : "type0=((ArrayType)type0).elemtype;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 401,
        "startColumnNumber" : 37,
        "endLineNumber" : 404,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  dims++;\n  type0=((ArrayType)type0).elemtype;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 401,
        "startColumnNumber" : 2,
        "endLineNumber" : 404,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (type0 instanceof ArrayType) {\n  dims++;\n  type0=((ArrayType)type0).elemtype;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 398,
        "startColumnNumber" : 144,
        "endLineNumber" : 412,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int dims=0;\n  Type type0=type;\n  while (type0 instanceof ArrayType) {\n    dims++;\n    type0=((ArrayType)type0).elemtype;\n  }\n  JCExpression result=typeToJCTree0(type0,ast,allowCompound,allowVoid);\n  while (dims > 0) {\n    result=ast.getTreeMaker().TypeArray(result);\n    dims--;\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 398,
        "startColumnNumber" : 1,
        "endLineNumber" : 412,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static JCExpression typeToJCTree(Type type,JavacAST ast,boolean allowCompound,boolean allowVoid) throws TypeNotConvertibleException {\n  int dims=0;\n  Type type0=type;\n  while (type0 instanceof ArrayType) {\n    dims++;\n    type0=((ArrayType)type0).elemtype;\n  }\n  JCExpression result=typeToJCTree0(type0,ast,allowCompound,allowVoid);\n  while (dims > 0) {\n    result=ast.getTreeMaker().TypeArray(result);\n    dims--;\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 403,
        "startColumnNumber" : 3,
        "endLineNumber" : 403,
        "endColumnNumber" : 39
      },
      "nodeContext" : "type0=((ArrayType)type0).elemtype;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "lombok.javac.ArrayType"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 403,
    "startColumnNumber" : 11,
    "endLineNumber" : 403,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}