{
  "id" : 182,
  "expression" : "counter",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/util/HystrixRollingNumberTest.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "counter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 35,
      "startColumnNumber" : 30,
      "endLineNumber" : 35,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 35,
        "startColumnNumber" : 30,
        "endLineNumber" : 35,
        "endColumnNumber" : 56
      },
      "nodeContext" : "counter.timeInMilliseconds",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertEquals(200,counter.timeInMilliseconds)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(200,counter.timeInMilliseconds);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(\"Exception: \" + e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 30,
        "startColumnNumber" : 37,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCreatesBuckets(){\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(200,counter.timeInMilliseconds);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.util.HystrixRollingNumber"
  }, {
    "nodeContext" : "counter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 36,
      "startColumnNumber" : 29,
      "endLineNumber" : 36,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 36,
        "startColumnNumber" : 29,
        "endLineNumber" : 36,
        "endColumnNumber" : 52
      },
      "nodeContext" : "counter.numberOfBuckets",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(10,counter.numberOfBuckets)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals(10,counter.numberOfBuckets);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(\"Exception: \" + e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 30,
        "startColumnNumber" : 37,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCreatesBuckets(){\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals(10,counter.numberOfBuckets);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.util.HystrixRollingNumber"
  }, {
    "nodeContext" : "counter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 37,
      "startColumnNumber" : 29,
      "endLineNumber" : 37,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 37,
        "startColumnNumber" : 29,
        "endLineNumber" : 37,
        "endColumnNumber" : 60
      },
      "nodeContext" : "counter.bucketSizeInMillseconds",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(20,counter.bucketSizeInMillseconds)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(20,counter.bucketSizeInMillseconds);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(\"Exception: \" + e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 30,
        "startColumnNumber" : 37,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCreatesBuckets(){\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(20,counter.bucketSizeInMillseconds);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.util.HystrixRollingNumber"
  }, {
    "nodeContext" : "counter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 40,
      "startColumnNumber" : 28,
      "endLineNumber" : 40,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 40,
        "startColumnNumber" : 28,
        "endLineNumber" : 40,
        "endColumnNumber" : 43
      },
      "nodeContext" : "counter.buckets",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 40,
        "startColumnNumber" : 28,
        "endLineNumber" : 40,
        "endColumnNumber" : 50
      },
      "nodeContext" : "counter.buckets.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(0,counter.buckets.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(0,counter.buckets.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(\"Exception: \" + e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 30,
        "startColumnNumber" : 37,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCreatesBuckets(){\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(0,counter.buckets.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.util.HystrixRollingNumber"
  }, {
    "nodeContext" : "counter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 43,
      "startColumnNumber" : 32,
      "endLineNumber" : 43,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 43,
        "startColumnNumber" : 32,
        "endLineNumber" : 43,
        "endColumnNumber" : 55
      },
      "nodeContext" : "counter.numberOfBuckets",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 43,
        "startColumnNumber" : 28,
        "endLineNumber" : 43,
        "endColumnNumber" : 55
      },
      "nodeContext" : "i < counter.numberOfBuckets",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < counter.numberOfBuckets; i++) {\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  time.increment(counter.bucketSizeInMillseconds);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(\"Exception: \" + e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 30,
        "startColumnNumber" : 37,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCreatesBuckets(){\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 43,
        "startColumnNumber" : 28,
        "endLineNumber" : 43,
        "endColumnNumber" : 55
      },
      "nodeContext" : "i < counter.numberOfBuckets",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.util.HystrixRollingNumber"
  }, {
    "nodeContext" : "counter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 44,
      "startColumnNumber" : 16,
      "endLineNumber" : 44,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 68
      },
      "nodeContext" : "counter.increment(HystrixRollingNumberEvent.SUCCESS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 69
      },
      "nodeContext" : "counter.increment(HystrixRollingNumberEvent.SUCCESS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 43,
        "startColumnNumber" : 62,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  time.increment(counter.bucketSizeInMillseconds);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < counter.numberOfBuckets; i++) {\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  time.increment(counter.bucketSizeInMillseconds);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(\"Exception: \" + e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 30,
        "startColumnNumber" : 37,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCreatesBuckets(){\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 69
      },
      "nodeContext" : "counter.increment(HystrixRollingNumberEvent.SUCCESS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.util.HystrixRollingNumber"
  }, {
    "nodeContext" : "counter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 45,
      "startColumnNumber" : 31,
      "endLineNumber" : 45,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 45,
        "startColumnNumber" : 31,
        "endLineNumber" : 45,
        "endColumnNumber" : 62
      },
      "nodeContext" : "counter.bucketSizeInMillseconds",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 63
      },
      "nodeContext" : "time.increment(counter.bucketSizeInMillseconds)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 64
      },
      "nodeContext" : "time.increment(counter.bucketSizeInMillseconds);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 43,
        "startColumnNumber" : 62,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  time.increment(counter.bucketSizeInMillseconds);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < counter.numberOfBuckets; i++) {\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  time.increment(counter.bucketSizeInMillseconds);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(\"Exception: \" + e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 30,
        "startColumnNumber" : 37,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCreatesBuckets(){\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 64
      },
      "nodeContext" : "time.increment(counter.bucketSizeInMillseconds);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.util.HystrixRollingNumber"
  }, {
    "nodeContext" : "counter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 49,
      "startColumnNumber" : 29,
      "endLineNumber" : 49,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 49,
        "startColumnNumber" : 29,
        "endLineNumber" : 49,
        "endColumnNumber" : 44
      },
      "nodeContext" : "counter.buckets",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 49,
        "startColumnNumber" : 29,
        "endLineNumber" : 49,
        "endColumnNumber" : 51
      },
      "nodeContext" : "counter.buckets.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(10,counter.buckets.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(10,counter.buckets.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(\"Exception: \" + e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 30,
        "startColumnNumber" : 37,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCreatesBuckets(){\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(10,counter.buckets.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.util.HystrixRollingNumber"
  }, {
    "nodeContext" : "counter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 52,
      "startColumnNumber" : 12,
      "endLineNumber" : 52,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 64
      },
      "nodeContext" : "counter.increment(HystrixRollingNumberEvent.SUCCESS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 65
      },
      "nodeContext" : "counter.increment(HystrixRollingNumberEvent.SUCCESS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(\"Exception: \" + e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 30,
        "startColumnNumber" : 37,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCreatesBuckets(){\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 65
      },
      "nodeContext" : "counter.increment(HystrixRollingNumberEvent.SUCCESS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.util.HystrixRollingNumber"
  }, {
    "nodeContext" : "counter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 53,
      "startColumnNumber" : 29,
      "endLineNumber" : 53,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 53,
        "startColumnNumber" : 29,
        "endLineNumber" : 53,
        "endColumnNumber" : 44
      },
      "nodeContext" : "counter.buckets",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 53,
        "startColumnNumber" : 29,
        "endLineNumber" : 53,
        "endColumnNumber" : 51
      },
      "nodeContext" : "counter.buckets.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(10,counter.buckets.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(10,counter.buckets.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n  assertEquals(200,counter.timeInMilliseconds);\n  assertEquals(10,counter.numberOfBuckets);\n  assertEquals(20,counter.bucketSizeInMillseconds);\n  assertEquals(0,counter.buckets.size());\n  for (int i=0; i < counter.numberOfBuckets; i++) {\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    time.increment(counter.bucketSizeInMillseconds);\n  }\n  assertEquals(10,counter.buckets.size());\n  counter.increment(HystrixRollingNumberEvent.SUCCESS);\n  assertEquals(10,counter.buckets.size());\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(\"Exception: \" + e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 30,
        "startColumnNumber" : 37,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCreatesBuckets(){\n  MockedTime time=new MockedTime();\n  try {\n    HystrixRollingNumber counter=new HystrixRollingNumber(time,200,10);\n    assertEquals(200,counter.timeInMilliseconds);\n    assertEquals(10,counter.numberOfBuckets);\n    assertEquals(20,counter.bucketSizeInMillseconds);\n    assertEquals(0,counter.buckets.size());\n    for (int i=0; i < counter.numberOfBuckets; i++) {\n      counter.increment(HystrixRollingNumberEvent.SUCCESS);\n      time.increment(counter.bucketSizeInMillseconds);\n    }\n    assertEquals(10,counter.buckets.size());\n    counter.increment(HystrixRollingNumberEvent.SUCCESS);\n    assertEquals(10,counter.buckets.size());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(\"Exception: \" + e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(10,counter.buckets.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.util.HystrixRollingNumber"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 35,
    "startColumnNumber" : 30,
    "endLineNumber" : 35,
    "endColumnNumber" : 37
  }, {
    "charLength" : 7,
    "startLineNumber" : 36,
    "startColumnNumber" : 29,
    "endLineNumber" : 36,
    "endColumnNumber" : 36
  }, {
    "charLength" : 7,
    "startLineNumber" : 37,
    "startColumnNumber" : 29,
    "endLineNumber" : 37,
    "endColumnNumber" : 36
  }, {
    "charLength" : 7,
    "startLineNumber" : 40,
    "startColumnNumber" : 28,
    "endLineNumber" : 40,
    "endColumnNumber" : 35
  }, {
    "charLength" : 7,
    "startLineNumber" : 43,
    "startColumnNumber" : 32,
    "endLineNumber" : 43,
    "endColumnNumber" : 39
  }, {
    "charLength" : 7,
    "startLineNumber" : 44,
    "startColumnNumber" : 16,
    "endLineNumber" : 44,
    "endColumnNumber" : 23
  }, {
    "charLength" : 7,
    "startLineNumber" : 45,
    "startColumnNumber" : 31,
    "endLineNumber" : 45,
    "endColumnNumber" : 38
  }, {
    "charLength" : 7,
    "startLineNumber" : 49,
    "startColumnNumber" : 29,
    "endLineNumber" : 49,
    "endColumnNumber" : 36
  }, {
    "charLength" : 7,
    "startLineNumber" : 52,
    "startColumnNumber" : 12,
    "endLineNumber" : 52,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 53,
    "startColumnNumber" : 29,
    "endLineNumber" : 53,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 4
  } ]
}