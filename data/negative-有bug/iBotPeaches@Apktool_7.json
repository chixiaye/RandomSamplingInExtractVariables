{
  "id" : 7,
  "expression" : "m1",
  "projectName" : "iBotPeaches@Apktool",
  "commitID" : "719a25afd69d2211259a65d4fce197340cbae819",
  "filePath" : "/src/brut/androlib/res/ResSmaliUpdater.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "m1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 77,
      "startColumnNumber" : 26,
      "endLineNumber" : 77,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 77,
        "startColumnNumber" : 26,
        "endLineNumber" : 77,
        "endColumnNumber" : 38
      },
      "nodeContext" : "m1.matches()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 77,
        "startColumnNumber" : 24,
        "endLineNumber" : 77,
        "endColumnNumber" : 38
      },
      "nodeContext" : "!m1.matches()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 77,
        "startColumnNumber" : 20,
        "endLineNumber" : 79,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!m1.matches()) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 73,
        "startColumnNumber" : 37,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String line=it.next();\n  out.println(line);\n  Matcher m1=RES_NAME_PATTERN.matcher(line);\n  if (!m1.matches()) {\n    continue;\n  }\n  Matcher m2=RES_ID_PATTERN.matcher(it.next());\n  if (!m2.matches()) {\n    throw new AndrolibException();\n  }\n  int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n  if (m2.group(1) != null) {\n    out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n  }\n else {\n    out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (it.hasNext()) {\n  String line=it.next();\n  out.println(line);\n  Matcher m1=RES_NAME_PATTERN.matcher(line);\n  if (!m1.matches()) {\n    continue;\n  }\n  Matcher m2=RES_ID_PATTERN.matcher(it.next());\n  if (!m2.matches()) {\n    throw new AndrolibException();\n  }\n  int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n  if (m2.group(1) != null) {\n    out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n  }\n else {\n    out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 69,
        "startColumnNumber" : 55,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n  PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n  while (it.hasNext()) {\n    String line=it.next();\n    out.println(line);\n    Matcher m1=RES_NAME_PATTERN.matcher(line);\n    if (!m1.matches()) {\n      continue;\n    }\n    Matcher m2=RES_ID_PATTERN.matcher(it.next());\n    if (!m2.matches()) {\n      throw new AndrolibException();\n    }\n    int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n    if (m2.group(1) != null) {\n      out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n    }\n else {\n      out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n    }\n  }\n  out.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1288,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String fileName : dir.getFiles(true)) {\n  Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n  PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n  while (it.hasNext()) {\n    String line=it.next();\n    out.println(line);\n    Matcher m1=RES_NAME_PATTERN.matcher(line);\n    if (!m1.matches()) {\n      continue;\n    }\n    Matcher m2=RES_ID_PATTERN.matcher(it.next());\n    if (!m2.matches()) {\n      throw new AndrolibException();\n    }\n    int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n    if (m2.group(1) != null) {\n      out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n    }\n else {\n      out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n    }\n  }\n  out.close();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 160,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1369,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Directory dir=new FileDirectory(smaliDir);\n  for (  String fileName : dir.getFiles(true)) {\n    Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n    PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n    while (it.hasNext()) {\n      String line=it.next();\n      out.println(line);\n      Matcher m1=RES_NAME_PATTERN.matcher(line);\n      if (!m1.matches()) {\n        continue;\n      }\n      Matcher m2=RES_ID_PATTERN.matcher(it.next());\n      if (!m2.matches()) {\n        throw new AndrolibException();\n      }\n      int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n      if (m2.group(1) != null) {\n        out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n      }\n else {\n        out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n      }\n    }\n    out.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1694,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Directory dir=new FileDirectory(smaliDir);\n  for (  String fileName : dir.getFiles(true)) {\n    Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n    PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n    while (it.hasNext()) {\n      String line=it.next();\n      out.println(line);\n      Matcher m1=RES_NAME_PATTERN.matcher(line);\n      if (!m1.matches()) {\n        continue;\n      }\n      Matcher m2=RES_ID_PATTERN.matcher(it.next());\n      if (!m2.matches()) {\n        throw new AndrolibException();\n      }\n      int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n      if (m2.group(1) != null) {\n        out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n      }\n else {\n        out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n      }\n    }\n    out.close();\n  }\n}\n catch (IOException ex) {\n  throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n}\ncatch (DirectoryException ex) {\n  throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 203,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1710,
        "startLineNumber" : 66,
        "startColumnNumber" : 37,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Directory dir=new FileDirectory(smaliDir);\n    for (    String fileName : dir.getFiles(true)) {\n      Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n      PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n      while (it.hasNext()) {\n        String line=it.next();\n        out.println(line);\n        Matcher m1=RES_NAME_PATTERN.matcher(line);\n        if (!m1.matches()) {\n          continue;\n        }\n        Matcher m2=RES_ID_PATTERN.matcher(it.next());\n        if (!m2.matches()) {\n          throw new AndrolibException();\n        }\n        int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n        if (m2.group(1) != null) {\n          out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n        }\n else {\n          out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n        }\n      }\n      out.close();\n    }\n  }\n catch (  IOException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\ncatch (  DirectoryException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1806,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void updateResIDs(ResTable resTable,File smaliDir) throws AndrolibException {\n  try {\n    Directory dir=new FileDirectory(smaliDir);\n    for (    String fileName : dir.getFiles(true)) {\n      Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n      PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n      while (it.hasNext()) {\n        String line=it.next();\n        out.println(line);\n        Matcher m1=RES_NAME_PATTERN.matcher(line);\n        if (!m1.matches()) {\n          continue;\n        }\n        Matcher m2=RES_ID_PATTERN.matcher(it.next());\n        if (!m2.matches()) {\n          throw new AndrolibException();\n        }\n        int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n        if (m2.group(1) != null) {\n          out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n        }\n else {\n          out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n        }\n      }\n      out.close();\n    }\n  }\n catch (  IOException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\ncatch (  DirectoryException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 218,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 77,
        "startColumnNumber" : 24,
        "endLineNumber" : 77,
        "endColumnNumber" : 38
      },
      "nodeContext" : "!m1.matches()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.regex.Matcher"
  }, {
    "nodeContext" : "m1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 84,
      "startColumnNumber" : 52,
      "endLineNumber" : 84,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 84,
        "startColumnNumber" : 52,
        "endLineNumber" : 84,
        "endColumnNumber" : 63
      },
      "nodeContext" : "m1.group(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 84,
        "endColumnNumber" : 64
      },
      "nodeContext" : "resTable.getPackage(m1.group(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "resTable.getPackage(m1.group(1)).getType(m1.group(2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 85,
        "endColumnNumber" : 69
      },
      "nodeContext" : "resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 86,
        "endColumnNumber" : 32
      },
      "nodeContext" : "resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 86,
        "endColumnNumber" : 35
      },
      "nodeContext" : "resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 84,
        "startColumnNumber" : 24,
        "endLineNumber" : 86,
        "endColumnNumber" : 35
      },
      "nodeContext" : "resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 86,
        "endColumnNumber" : 36
      },
      "nodeContext" : "int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 73,
        "startColumnNumber" : 37,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String line=it.next();\n  out.println(line);\n  Matcher m1=RES_NAME_PATTERN.matcher(line);\n  if (!m1.matches()) {\n    continue;\n  }\n  Matcher m2=RES_ID_PATTERN.matcher(it.next());\n  if (!m2.matches()) {\n    throw new AndrolibException();\n  }\n  int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n  if (m2.group(1) != null) {\n    out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n  }\n else {\n    out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (it.hasNext()) {\n  String line=it.next();\n  out.println(line);\n  Matcher m1=RES_NAME_PATTERN.matcher(line);\n  if (!m1.matches()) {\n    continue;\n  }\n  Matcher m2=RES_ID_PATTERN.matcher(it.next());\n  if (!m2.matches()) {\n    throw new AndrolibException();\n  }\n  int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n  if (m2.group(1) != null) {\n    out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n  }\n else {\n    out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 69,
        "startColumnNumber" : 55,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n  PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n  while (it.hasNext()) {\n    String line=it.next();\n    out.println(line);\n    Matcher m1=RES_NAME_PATTERN.matcher(line);\n    if (!m1.matches()) {\n      continue;\n    }\n    Matcher m2=RES_ID_PATTERN.matcher(it.next());\n    if (!m2.matches()) {\n      throw new AndrolibException();\n    }\n    int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n    if (m2.group(1) != null) {\n      out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n    }\n else {\n      out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n    }\n  }\n  out.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1288,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String fileName : dir.getFiles(true)) {\n  Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n  PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n  while (it.hasNext()) {\n    String line=it.next();\n    out.println(line);\n    Matcher m1=RES_NAME_PATTERN.matcher(line);\n    if (!m1.matches()) {\n      continue;\n    }\n    Matcher m2=RES_ID_PATTERN.matcher(it.next());\n    if (!m2.matches()) {\n      throw new AndrolibException();\n    }\n    int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n    if (m2.group(1) != null) {\n      out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n    }\n else {\n      out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n    }\n  }\n  out.close();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 160,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1369,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Directory dir=new FileDirectory(smaliDir);\n  for (  String fileName : dir.getFiles(true)) {\n    Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n    PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n    while (it.hasNext()) {\n      String line=it.next();\n      out.println(line);\n      Matcher m1=RES_NAME_PATTERN.matcher(line);\n      if (!m1.matches()) {\n        continue;\n      }\n      Matcher m2=RES_ID_PATTERN.matcher(it.next());\n      if (!m2.matches()) {\n        throw new AndrolibException();\n      }\n      int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n      if (m2.group(1) != null) {\n        out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n      }\n else {\n        out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n      }\n    }\n    out.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1694,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Directory dir=new FileDirectory(smaliDir);\n  for (  String fileName : dir.getFiles(true)) {\n    Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n    PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n    while (it.hasNext()) {\n      String line=it.next();\n      out.println(line);\n      Matcher m1=RES_NAME_PATTERN.matcher(line);\n      if (!m1.matches()) {\n        continue;\n      }\n      Matcher m2=RES_ID_PATTERN.matcher(it.next());\n      if (!m2.matches()) {\n        throw new AndrolibException();\n      }\n      int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n      if (m2.group(1) != null) {\n        out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n      }\n else {\n        out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n      }\n    }\n    out.close();\n  }\n}\n catch (IOException ex) {\n  throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n}\ncatch (DirectoryException ex) {\n  throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 203,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1710,
        "startLineNumber" : 66,
        "startColumnNumber" : 37,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Directory dir=new FileDirectory(smaliDir);\n    for (    String fileName : dir.getFiles(true)) {\n      Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n      PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n      while (it.hasNext()) {\n        String line=it.next();\n        out.println(line);\n        Matcher m1=RES_NAME_PATTERN.matcher(line);\n        if (!m1.matches()) {\n          continue;\n        }\n        Matcher m2=RES_ID_PATTERN.matcher(it.next());\n        if (!m2.matches()) {\n          throw new AndrolibException();\n        }\n        int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n        if (m2.group(1) != null) {\n          out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n        }\n else {\n          out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n        }\n      }\n      out.close();\n    }\n  }\n catch (  IOException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\ncatch (  DirectoryException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1806,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void updateResIDs(ResTable resTable,File smaliDir) throws AndrolibException {\n  try {\n    Directory dir=new FileDirectory(smaliDir);\n    for (    String fileName : dir.getFiles(true)) {\n      Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n      PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n      while (it.hasNext()) {\n        String line=it.next();\n        out.println(line);\n        Matcher m1=RES_NAME_PATTERN.matcher(line);\n        if (!m1.matches()) {\n          continue;\n        }\n        Matcher m2=RES_ID_PATTERN.matcher(it.next());\n        if (!m2.matches()) {\n          throw new AndrolibException();\n        }\n        int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n        if (m2.group(1) != null) {\n          out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n        }\n else {\n          out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n        }\n      }\n      out.close();\n    }\n  }\n catch (  IOException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\ncatch (  DirectoryException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 218,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 84,
        "endColumnNumber" : 64
      },
      "nodeContext" : "resTable.getPackage(m1.group(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.regex.Matcher"
  }, {
    "nodeContext" : "m1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 85,
      "startColumnNumber" : 33,
      "endLineNumber" : 85,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 85,
        "startColumnNumber" : 33,
        "endLineNumber" : 85,
        "endColumnNumber" : 44
      },
      "nodeContext" : "m1.group(2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "resTable.getPackage(m1.group(1)).getType(m1.group(2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 85,
        "endColumnNumber" : 69
      },
      "nodeContext" : "resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 86,
        "endColumnNumber" : 32
      },
      "nodeContext" : "resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 86,
        "endColumnNumber" : 35
      },
      "nodeContext" : "resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 84,
        "startColumnNumber" : 24,
        "endLineNumber" : 86,
        "endColumnNumber" : 35
      },
      "nodeContext" : "resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 86,
        "endColumnNumber" : 36
      },
      "nodeContext" : "int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 73,
        "startColumnNumber" : 37,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String line=it.next();\n  out.println(line);\n  Matcher m1=RES_NAME_PATTERN.matcher(line);\n  if (!m1.matches()) {\n    continue;\n  }\n  Matcher m2=RES_ID_PATTERN.matcher(it.next());\n  if (!m2.matches()) {\n    throw new AndrolibException();\n  }\n  int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n  if (m2.group(1) != null) {\n    out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n  }\n else {\n    out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (it.hasNext()) {\n  String line=it.next();\n  out.println(line);\n  Matcher m1=RES_NAME_PATTERN.matcher(line);\n  if (!m1.matches()) {\n    continue;\n  }\n  Matcher m2=RES_ID_PATTERN.matcher(it.next());\n  if (!m2.matches()) {\n    throw new AndrolibException();\n  }\n  int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n  if (m2.group(1) != null) {\n    out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n  }\n else {\n    out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 69,
        "startColumnNumber" : 55,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n  PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n  while (it.hasNext()) {\n    String line=it.next();\n    out.println(line);\n    Matcher m1=RES_NAME_PATTERN.matcher(line);\n    if (!m1.matches()) {\n      continue;\n    }\n    Matcher m2=RES_ID_PATTERN.matcher(it.next());\n    if (!m2.matches()) {\n      throw new AndrolibException();\n    }\n    int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n    if (m2.group(1) != null) {\n      out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n    }\n else {\n      out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n    }\n  }\n  out.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1288,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String fileName : dir.getFiles(true)) {\n  Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n  PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n  while (it.hasNext()) {\n    String line=it.next();\n    out.println(line);\n    Matcher m1=RES_NAME_PATTERN.matcher(line);\n    if (!m1.matches()) {\n      continue;\n    }\n    Matcher m2=RES_ID_PATTERN.matcher(it.next());\n    if (!m2.matches()) {\n      throw new AndrolibException();\n    }\n    int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n    if (m2.group(1) != null) {\n      out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n    }\n else {\n      out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n    }\n  }\n  out.close();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 160,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1369,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Directory dir=new FileDirectory(smaliDir);\n  for (  String fileName : dir.getFiles(true)) {\n    Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n    PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n    while (it.hasNext()) {\n      String line=it.next();\n      out.println(line);\n      Matcher m1=RES_NAME_PATTERN.matcher(line);\n      if (!m1.matches()) {\n        continue;\n      }\n      Matcher m2=RES_ID_PATTERN.matcher(it.next());\n      if (!m2.matches()) {\n        throw new AndrolibException();\n      }\n      int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n      if (m2.group(1) != null) {\n        out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n      }\n else {\n        out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n      }\n    }\n    out.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1694,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Directory dir=new FileDirectory(smaliDir);\n  for (  String fileName : dir.getFiles(true)) {\n    Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n    PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n    while (it.hasNext()) {\n      String line=it.next();\n      out.println(line);\n      Matcher m1=RES_NAME_PATTERN.matcher(line);\n      if (!m1.matches()) {\n        continue;\n      }\n      Matcher m2=RES_ID_PATTERN.matcher(it.next());\n      if (!m2.matches()) {\n        throw new AndrolibException();\n      }\n      int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n      if (m2.group(1) != null) {\n        out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n      }\n else {\n        out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n      }\n    }\n    out.close();\n  }\n}\n catch (IOException ex) {\n  throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n}\ncatch (DirectoryException ex) {\n  throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 203,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1710,
        "startLineNumber" : 66,
        "startColumnNumber" : 37,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Directory dir=new FileDirectory(smaliDir);\n    for (    String fileName : dir.getFiles(true)) {\n      Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n      PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n      while (it.hasNext()) {\n        String line=it.next();\n        out.println(line);\n        Matcher m1=RES_NAME_PATTERN.matcher(line);\n        if (!m1.matches()) {\n          continue;\n        }\n        Matcher m2=RES_ID_PATTERN.matcher(it.next());\n        if (!m2.matches()) {\n          throw new AndrolibException();\n        }\n        int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n        if (m2.group(1) != null) {\n          out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n        }\n else {\n          out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n        }\n      }\n      out.close();\n    }\n  }\n catch (  IOException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\ncatch (  DirectoryException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1806,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void updateResIDs(ResTable resTable,File smaliDir) throws AndrolibException {\n  try {\n    Directory dir=new FileDirectory(smaliDir);\n    for (    String fileName : dir.getFiles(true)) {\n      Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n      PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n      while (it.hasNext()) {\n        String line=it.next();\n        out.println(line);\n        Matcher m1=RES_NAME_PATTERN.matcher(line);\n        if (!m1.matches()) {\n          continue;\n        }\n        Matcher m2=RES_ID_PATTERN.matcher(it.next());\n        if (!m2.matches()) {\n          throw new AndrolibException();\n        }\n        int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n        if (m2.group(1) != null) {\n          out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n        }\n else {\n          out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n        }\n      }\n      out.close();\n    }\n  }\n catch (  IOException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\ncatch (  DirectoryException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 218,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 85,
        "startColumnNumber" : 33,
        "endLineNumber" : 85,
        "endColumnNumber" : 44
      },
      "nodeContext" : "m1.group(2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.regex.Matcher"
  }, {
    "nodeContext" : "m1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 85,
      "startColumnNumber" : 57,
      "endLineNumber" : 85,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 85,
        "startColumnNumber" : 57,
        "endLineNumber" : 85,
        "endColumnNumber" : 68
      },
      "nodeContext" : "m1.group(3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 85,
        "endColumnNumber" : 69
      },
      "nodeContext" : "resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 86,
        "endColumnNumber" : 32
      },
      "nodeContext" : "resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 84,
        "startColumnNumber" : 32,
        "endLineNumber" : 86,
        "endColumnNumber" : 35
      },
      "nodeContext" : "resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 84,
        "startColumnNumber" : 24,
        "endLineNumber" : 86,
        "endColumnNumber" : 35
      },
      "nodeContext" : "resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 86,
        "endColumnNumber" : 36
      },
      "nodeContext" : "int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 73,
        "startColumnNumber" : 37,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String line=it.next();\n  out.println(line);\n  Matcher m1=RES_NAME_PATTERN.matcher(line);\n  if (!m1.matches()) {\n    continue;\n  }\n  Matcher m2=RES_ID_PATTERN.matcher(it.next());\n  if (!m2.matches()) {\n    throw new AndrolibException();\n  }\n  int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n  if (m2.group(1) != null) {\n    out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n  }\n else {\n    out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (it.hasNext()) {\n  String line=it.next();\n  out.println(line);\n  Matcher m1=RES_NAME_PATTERN.matcher(line);\n  if (!m1.matches()) {\n    continue;\n  }\n  Matcher m2=RES_ID_PATTERN.matcher(it.next());\n  if (!m2.matches()) {\n    throw new AndrolibException();\n  }\n  int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n  if (m2.group(1) != null) {\n    out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n  }\n else {\n    out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 69,
        "startColumnNumber" : 55,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n  PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n  while (it.hasNext()) {\n    String line=it.next();\n    out.println(line);\n    Matcher m1=RES_NAME_PATTERN.matcher(line);\n    if (!m1.matches()) {\n      continue;\n    }\n    Matcher m2=RES_ID_PATTERN.matcher(it.next());\n    if (!m2.matches()) {\n      throw new AndrolibException();\n    }\n    int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n    if (m2.group(1) != null) {\n      out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n    }\n else {\n      out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n    }\n  }\n  out.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1288,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String fileName : dir.getFiles(true)) {\n  Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n  PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n  while (it.hasNext()) {\n    String line=it.next();\n    out.println(line);\n    Matcher m1=RES_NAME_PATTERN.matcher(line);\n    if (!m1.matches()) {\n      continue;\n    }\n    Matcher m2=RES_ID_PATTERN.matcher(it.next());\n    if (!m2.matches()) {\n      throw new AndrolibException();\n    }\n    int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n    if (m2.group(1) != null) {\n      out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n    }\n else {\n      out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n    }\n  }\n  out.close();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 160,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1369,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Directory dir=new FileDirectory(smaliDir);\n  for (  String fileName : dir.getFiles(true)) {\n    Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n    PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n    while (it.hasNext()) {\n      String line=it.next();\n      out.println(line);\n      Matcher m1=RES_NAME_PATTERN.matcher(line);\n      if (!m1.matches()) {\n        continue;\n      }\n      Matcher m2=RES_ID_PATTERN.matcher(it.next());\n      if (!m2.matches()) {\n        throw new AndrolibException();\n      }\n      int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n      if (m2.group(1) != null) {\n        out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n      }\n else {\n        out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n      }\n    }\n    out.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1694,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Directory dir=new FileDirectory(smaliDir);\n  for (  String fileName : dir.getFiles(true)) {\n    Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n    PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n    while (it.hasNext()) {\n      String line=it.next();\n      out.println(line);\n      Matcher m1=RES_NAME_PATTERN.matcher(line);\n      if (!m1.matches()) {\n        continue;\n      }\n      Matcher m2=RES_ID_PATTERN.matcher(it.next());\n      if (!m2.matches()) {\n        throw new AndrolibException();\n      }\n      int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n      if (m2.group(1) != null) {\n        out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n      }\n else {\n        out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n      }\n    }\n    out.close();\n  }\n}\n catch (IOException ex) {\n  throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n}\ncatch (DirectoryException ex) {\n  throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 203,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1710,
        "startLineNumber" : 66,
        "startColumnNumber" : 37,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Directory dir=new FileDirectory(smaliDir);\n    for (    String fileName : dir.getFiles(true)) {\n      Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n      PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n      while (it.hasNext()) {\n        String line=it.next();\n        out.println(line);\n        Matcher m1=RES_NAME_PATTERN.matcher(line);\n        if (!m1.matches()) {\n          continue;\n        }\n        Matcher m2=RES_ID_PATTERN.matcher(it.next());\n        if (!m2.matches()) {\n          throw new AndrolibException();\n        }\n        int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n        if (m2.group(1) != null) {\n          out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n        }\n else {\n          out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n        }\n      }\n      out.close();\n    }\n  }\n catch (  IOException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\ncatch (  DirectoryException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1806,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void updateResIDs(ResTable resTable,File smaliDir) throws AndrolibException {\n  try {\n    Directory dir=new FileDirectory(smaliDir);\n    for (    String fileName : dir.getFiles(true)) {\n      Iterator<String> it=IOUtils.readLines(dir.getFileInput(fileName)).iterator();\n      PrintWriter out=new PrintWriter(dir.getFileOutput(fileName));\n      while (it.hasNext()) {\n        String line=it.next();\n        out.println(line);\n        Matcher m1=RES_NAME_PATTERN.matcher(line);\n        if (!m1.matches()) {\n          continue;\n        }\n        Matcher m2=RES_ID_PATTERN.matcher(it.next());\n        if (!m2.matches()) {\n          throw new AndrolibException();\n        }\n        int resID=resTable.getPackage(m1.group(1)).getType(m1.group(2)).getResSpec(m1.group(3)).getId().id;\n        if (m2.group(1) != null) {\n          out.println(String.format(RES_ID_FORMAT_FIELD,m2.group(1),resID));\n        }\n else {\n          out.println(String.format(RES_ID_FORMAT_CONST,m2.group(2),resID));\n        }\n      }\n      out.close();\n    }\n  }\n catch (  IOException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\ncatch (  DirectoryException ex) {\n    throw new AndrolibException(\"Could not tag res IDs for: \" + smaliDir.getAbsolutePath(),ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 218,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 85,
        "startColumnNumber" : 57,
        "endLineNumber" : 85,
        "endColumnNumber" : 68
      },
      "nodeContext" : "m1.group(3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.regex.Matcher"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 77,
    "startColumnNumber" : 26,
    "endLineNumber" : 77,
    "endColumnNumber" : 28
  }, {
    "charLength" : 2,
    "startLineNumber" : 84,
    "startColumnNumber" : 52,
    "endLineNumber" : 84,
    "endColumnNumber" : 54
  }, {
    "charLength" : 2,
    "startLineNumber" : 85,
    "startColumnNumber" : 33,
    "endLineNumber" : 85,
    "endColumnNumber" : 35
  }, {
    "charLength" : 2,
    "startLineNumber" : 85,
    "startColumnNumber" : 57,
    "endLineNumber" : 85,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  } ]
}