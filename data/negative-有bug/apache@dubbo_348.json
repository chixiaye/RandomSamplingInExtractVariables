{
  "id" : 348,
  "expression" : "StateListener.NEW_SESSION_CREATED",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-zookeeper/src/main/java/org/apache/dubbo/remoting/zookeeper/curator/CuratorZookeeperClient.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StateListener.NEW_SESSION_CREATED",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 443,
      "startColumnNumber" : 61,
      "endLineNumber" : 443,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 443,
        "startColumnNumber" : 20,
        "endLineNumber" : 443,
        "endColumnNumber" : 95
      },
      "nodeContext" : "CuratorZookeeperClient.this.stateChanged(StateListener.NEW_SESSION_CREATED)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 443,
        "startColumnNumber" : 20,
        "endLineNumber" : 443,
        "endColumnNumber" : 96
      },
      "nodeContext" : "CuratorZookeeperClient.this.stateChanged(StateListener.NEW_SESSION_CREATED);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 439,
        "startColumnNumber" : 23,
        "endLineNumber" : 444,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  logger.warn(\"New session created after old session lost, \" + \"old session \" + Long.toHexString(lastSessionId) + \", new session \"+ Long.toHexString(sessionId));\n  lastSessionId=sessionId;\n  CuratorZookeeperClient.this.stateChanged(StateListener.NEW_SESSION_CREATED);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 435,
        "startColumnNumber" : 16,
        "endLineNumber" : 444,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (lastSessionId == sessionId && sessionId != UNKNOWN_SESSION_ID) {\n  logger.warn(\"Curator zookeeper connection recovered from connection lose, \" + \"reuse the old session \" + Long.toHexString(sessionId));\n  CuratorZookeeperClient.this.stateChanged(StateListener.RECONNECTED);\n}\n else {\n  logger.warn(\"New session created after old session lost, \" + \"old session \" + Long.toHexString(lastSessionId) + \", new session \"+ Long.toHexString(sessionId));\n  lastSessionId=sessionId;\n  CuratorZookeeperClient.this.stateChanged(StateListener.NEW_SESSION_CREATED);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 434,
        "startColumnNumber" : 61,
        "endLineNumber" : 445,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (lastSessionId == sessionId && sessionId != UNKNOWN_SESSION_ID) {\n    logger.warn(\"Curator zookeeper connection recovered from connection lose, \" + \"reuse the old session \" + Long.toHexString(sessionId));\n    CuratorZookeeperClient.this.stateChanged(StateListener.RECONNECTED);\n  }\n else {\n    logger.warn(\"New session created after old session lost, \" + \"old session \" + Long.toHexString(lastSessionId) + \", new session \"+ Long.toHexString(sessionId));\n    lastSessionId=sessionId;\n    CuratorZookeeperClient.this.stateChanged(StateListener.NEW_SESSION_CREATED);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 434,
        "startColumnNumber" : 19,
        "endLineNumber" : 445,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (state == ConnectionState.RECONNECTED) {\n  if (lastSessionId == sessionId && sessionId != UNKNOWN_SESSION_ID) {\n    logger.warn(\"Curator zookeeper connection recovered from connection lose, \" + \"reuse the old session \" + Long.toHexString(sessionId));\n    CuratorZookeeperClient.this.stateChanged(StateListener.RECONNECTED);\n  }\n else {\n    logger.warn(\"New session created after old session lost, \" + \"old session \" + Long.toHexString(lastSessionId) + \", new session \"+ Long.toHexString(sessionId));\n    lastSessionId=sessionId;\n    CuratorZookeeperClient.this.stateChanged(StateListener.NEW_SESSION_CREATED);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 430,
        "startColumnNumber" : 19,
        "endLineNumber" : 445,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (state == ConnectionState.CONNECTED) {\n  lastSessionId=sessionId;\n  logger.info(\"Curator zookeeper client instance initiated successfully, session id is \" + Long.toHexString(sessionId));\n  CuratorZookeeperClient.this.stateChanged(StateListener.CONNECTED);\n}\n else if (state == ConnectionState.RECONNECTED) {\n  if (lastSessionId == sessionId && sessionId != UNKNOWN_SESSION_ID) {\n    logger.warn(\"Curator zookeeper connection recovered from connection lose, \" + \"reuse the old session \" + Long.toHexString(sessionId));\n    CuratorZookeeperClient.this.stateChanged(StateListener.RECONNECTED);\n  }\n else {\n    logger.warn(\"New session created after old session lost, \" + \"old session \" + Long.toHexString(lastSessionId) + \", new session \"+ Long.toHexString(sessionId));\n    lastSessionId=sessionId;\n    CuratorZookeeperClient.this.stateChanged(StateListener.NEW_SESSION_CREATED);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1539,
        "startLineNumber" : 426,
        "startColumnNumber" : 19,
        "endLineNumber" : 445,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (state == ConnectionState.SUSPENDED) {\n  logger.warn(\"Curator zookeeper connection of session \" + Long.toHexString(sessionId) + \" timed out. \"+ \"connection timeout value is \"+ timeout+ \", session expire timeout value is \"+ sessionExpireMs);\n  CuratorZookeeperClient.this.stateChanged(StateListener.SUSPENDED);\n}\n else if (state == ConnectionState.CONNECTED) {\n  lastSessionId=sessionId;\n  logger.info(\"Curator zookeeper client instance initiated successfully, session id is \" + Long.toHexString(sessionId));\n  CuratorZookeeperClient.this.stateChanged(StateListener.CONNECTED);\n}\n else if (state == ConnectionState.RECONNECTED) {\n  if (lastSessionId == sessionId && sessionId != UNKNOWN_SESSION_ID) {\n    logger.warn(\"Curator zookeeper connection recovered from connection lose, \" + \"reuse the old session \" + Long.toHexString(sessionId));\n    CuratorZookeeperClient.this.stateChanged(StateListener.RECONNECTED);\n  }\n else {\n    logger.warn(\"New session created after old session lost, \" + \"old session \" + Long.toHexString(lastSessionId) + \", new session \"+ Long.toHexString(sessionId));\n    lastSessionId=sessionId;\n    CuratorZookeeperClient.this.stateChanged(StateListener.NEW_SESSION_CREATED);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1791,
        "startLineNumber" : 423,
        "startColumnNumber" : 12,
        "endLineNumber" : 445,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (state == ConnectionState.LOST) {\n  logger.warn(\"Curator zookeeper session \" + Long.toHexString(lastSessionId) + \" expired.\");\n  CuratorZookeeperClient.this.stateChanged(StateListener.SESSION_LOST);\n}\n else if (state == ConnectionState.SUSPENDED) {\n  logger.warn(\"Curator zookeeper connection of session \" + Long.toHexString(sessionId) + \" timed out. \"+ \"connection timeout value is \"+ timeout+ \", session expire timeout value is \"+ sessionExpireMs);\n  CuratorZookeeperClient.this.stateChanged(StateListener.SUSPENDED);\n}\n else if (state == ConnectionState.CONNECTED) {\n  lastSessionId=sessionId;\n  logger.info(\"Curator zookeeper client instance initiated successfully, session id is \" + Long.toHexString(sessionId));\n  CuratorZookeeperClient.this.stateChanged(StateListener.CONNECTED);\n}\n else if (state == ConnectionState.RECONNECTED) {\n  if (lastSessionId == sessionId && sessionId != UNKNOWN_SESSION_ID) {\n    logger.warn(\"Curator zookeeper connection recovered from connection lose, \" + \"reuse the old session \" + Long.toHexString(sessionId));\n    CuratorZookeeperClient.this.stateChanged(StateListener.RECONNECTED);\n  }\n else {\n    logger.warn(\"New session created after old session lost, \" + \"old session \" + Long.toHexString(lastSessionId) + \", new session \"+ Long.toHexString(sessionId));\n    lastSessionId=sessionId;\n    CuratorZookeeperClient.this.stateChanged(StateListener.NEW_SESSION_CREATED);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 150,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2337,
        "startLineNumber" : 412,
        "startColumnNumber" : 81,
        "endLineNumber" : 446,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int timeout=url.getParameter(TIMEOUT_KEY,DEFAULT_CONNECTION_TIMEOUT_MS);\n  int sessionExpireMs=url.getParameter(ZK_SESSION_EXPIRE_KEY,DEFAULT_SESSION_TIMEOUT_MS);\n  long sessionId=UNKNOWN_SESSION_ID;\n  try {\n    sessionId=client.getZookeeperClient().getZooKeeper().getSessionId();\n  }\n catch (  Exception e) {\n    logger.warn(\"Curator client state changed, but failed to get the related zk session instance.\");\n  }\n  if (state == ConnectionState.LOST) {\n    logger.warn(\"Curator zookeeper session \" + Long.toHexString(lastSessionId) + \" expired.\");\n    CuratorZookeeperClient.this.stateChanged(StateListener.SESSION_LOST);\n  }\n else   if (state == ConnectionState.SUSPENDED) {\n    logger.warn(\"Curator zookeeper connection of session \" + Long.toHexString(sessionId) + \" timed out. \"+ \"connection timeout value is \"+ timeout+ \", session expire timeout value is \"+ sessionExpireMs);\n    CuratorZookeeperClient.this.stateChanged(StateListener.SUSPENDED);\n  }\n else   if (state == ConnectionState.CONNECTED) {\n    lastSessionId=sessionId;\n    logger.info(\"Curator zookeeper client instance initiated successfully, session id is \" + Long.toHexString(sessionId));\n    CuratorZookeeperClient.this.stateChanged(StateListener.CONNECTED);\n  }\n else   if (state == ConnectionState.RECONNECTED) {\n    if (lastSessionId == sessionId && sessionId != UNKNOWN_SESSION_ID) {\n      logger.warn(\"Curator zookeeper connection recovered from connection lose, \" + \"reuse the old session \" + Long.toHexString(sessionId));\n      CuratorZookeeperClient.this.stateChanged(StateListener.RECONNECTED);\n    }\n else {\n      logger.warn(\"New session created after old session lost, \" + \"old session \" + Long.toHexString(lastSessionId) + \", new session \"+ Long.toHexString(sessionId));\n      lastSessionId=sessionId;\n      CuratorZookeeperClient.this.stateChanged(StateListener.NEW_SESSION_CREATED);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2429,
        "startLineNumber" : 411,
        "startColumnNumber" : 8,
        "endLineNumber" : 446,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void stateChanged(CuratorFramework client,ConnectionState state){\n  int timeout=url.getParameter(TIMEOUT_KEY,DEFAULT_CONNECTION_TIMEOUT_MS);\n  int sessionExpireMs=url.getParameter(ZK_SESSION_EXPIRE_KEY,DEFAULT_SESSION_TIMEOUT_MS);\n  long sessionId=UNKNOWN_SESSION_ID;\n  try {\n    sessionId=client.getZookeeperClient().getZooKeeper().getSessionId();\n  }\n catch (  Exception e) {\n    logger.warn(\"Curator client state changed, but failed to get the related zk session instance.\");\n  }\n  if (state == ConnectionState.LOST) {\n    logger.warn(\"Curator zookeeper session \" + Long.toHexString(lastSessionId) + \" expired.\");\n    CuratorZookeeperClient.this.stateChanged(StateListener.SESSION_LOST);\n  }\n else   if (state == ConnectionState.SUSPENDED) {\n    logger.warn(\"Curator zookeeper connection of session \" + Long.toHexString(sessionId) + \" timed out. \"+ \"connection timeout value is \"+ timeout+ \", session expire timeout value is \"+ sessionExpireMs);\n    CuratorZookeeperClient.this.stateChanged(StateListener.SUSPENDED);\n  }\n else   if (state == ConnectionState.CONNECTED) {\n    lastSessionId=sessionId;\n    logger.info(\"Curator zookeeper client instance initiated successfully, session id is \" + Long.toHexString(sessionId));\n    CuratorZookeeperClient.this.stateChanged(StateListener.CONNECTED);\n  }\n else   if (state == ConnectionState.RECONNECTED) {\n    if (lastSessionId == sessionId && sessionId != UNKNOWN_SESSION_ID) {\n      logger.warn(\"Curator zookeeper connection recovered from connection lose, \" + \"reuse the old session \" + Long.toHexString(sessionId));\n      CuratorZookeeperClient.this.stateChanged(StateListener.RECONNECTED);\n    }\n else {\n      logger.warn(\"New session created after old session lost, \" + \"old session \" + Long.toHexString(lastSessionId) + \", new session \"+ Long.toHexString(sessionId));\n      lastSessionId=sessionId;\n      CuratorZookeeperClient.this.stateChanged(StateListener.NEW_SESSION_CREATED);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 443,
        "startColumnNumber" : 20,
        "endLineNumber" : 443,
        "endColumnNumber" : 96
      },
      "nodeContext" : "CuratorZookeeperClient.this.stateChanged(StateListener.NEW_SESSION_CREATED);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 443,
    "startColumnNumber" : 61,
    "endLineNumber" : 443,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}