{
  "id" : 314,
  "expression" : "7",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableOnBackpressureReduceWithTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "7",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 151,
      "startColumnNumber" : 22,
      "endLineNumber" : 151,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 151,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 24
      },
      "nodeContext" : "source.onNext(7)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 151,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 25
      },
      "nodeContext" : "source.onNext(7);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1500,
        "startLineNumber" : 118,
        "startColumnNumber" : 34,
        "endLineNumber" : 175,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  TestSubscriberEx<List<Integer>> ts=new TestSubscriberEx<>(0L);\n  source.onBackpressureReduce(createTestSupplier(),createTestReducer()).subscribe(ts);\n  ts.assertNoValues();\n  source.onNext(1);\n  ts.request(2);\n  ts.assertValues(Collections.singletonList(1));\n  source.onNext(2);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2));\n  source.onNext(3);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  ts.request(2);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6));\n  source.onNext(7);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7));\n  source.onNext(8);\n  source.onNext(9);\n  source.onComplete();\n  ts.request(1);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7),Arrays.asList(8,9));\n  ts.assertNoErrors();\n  ts.assertTerminated();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1540,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 175,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void synchronousDrop(){\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  TestSubscriberEx<List<Integer>> ts=new TestSubscriberEx<>(0L);\n  source.onBackpressureReduce(createTestSupplier(),createTestReducer()).subscribe(ts);\n  ts.assertNoValues();\n  source.onNext(1);\n  ts.request(2);\n  ts.assertValues(Collections.singletonList(1));\n  source.onNext(2);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2));\n  source.onNext(3);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  ts.request(2);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6));\n  source.onNext(7);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7));\n  source.onNext(8);\n  source.onNext(9);\n  source.onComplete();\n  ts.request(1);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7),Arrays.asList(8,9));\n  ts.assertNoErrors();\n  ts.assertTerminated();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 151,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 25
      },
      "nodeContext" : "source.onNext(7);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "7",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 157,
      "startColumnNumber" : 42,
      "endLineNumber" : 157,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 157,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Collections.singletonList(7)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 9
      },
      "nodeContext" : "ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 10
      },
      "nodeContext" : "ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1500,
        "startLineNumber" : 118,
        "startColumnNumber" : 34,
        "endLineNumber" : 175,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  TestSubscriberEx<List<Integer>> ts=new TestSubscriberEx<>(0L);\n  source.onBackpressureReduce(createTestSupplier(),createTestReducer()).subscribe(ts);\n  ts.assertNoValues();\n  source.onNext(1);\n  ts.request(2);\n  ts.assertValues(Collections.singletonList(1));\n  source.onNext(2);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2));\n  source.onNext(3);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  ts.request(2);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6));\n  source.onNext(7);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7));\n  source.onNext(8);\n  source.onNext(9);\n  source.onComplete();\n  ts.request(1);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7),Arrays.asList(8,9));\n  ts.assertNoErrors();\n  ts.assertTerminated();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1540,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 175,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void synchronousDrop(){\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  TestSubscriberEx<List<Integer>> ts=new TestSubscriberEx<>(0L);\n  source.onBackpressureReduce(createTestSupplier(),createTestReducer()).subscribe(ts);\n  ts.assertNoValues();\n  source.onNext(1);\n  ts.request(2);\n  ts.assertValues(Collections.singletonList(1));\n  source.onNext(2);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2));\n  source.onNext(3);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  ts.request(2);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6));\n  source.onNext(7);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7));\n  source.onNext(8);\n  source.onNext(9);\n  source.onComplete();\n  ts.request(1);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7),Arrays.asList(8,9));\n  ts.assertNoErrors();\n  ts.assertTerminated();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 157,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Collections.singletonList(7)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "7",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 170,
      "startColumnNumber" : 42,
      "endLineNumber" : 170,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 170,
        "startColumnNumber" : 16,
        "endLineNumber" : 170,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Collections.singletonList(7)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 166,
        "startColumnNumber" : 8,
        "endLineNumber" : 172,
        "endColumnNumber" : 9
      },
      "nodeContext" : "ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7),Arrays.asList(8,9))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 166,
        "startColumnNumber" : 8,
        "endLineNumber" : 172,
        "endColumnNumber" : 10
      },
      "nodeContext" : "ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7),Arrays.asList(8,9));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 28,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1500,
        "startLineNumber" : 118,
        "startColumnNumber" : 34,
        "endLineNumber" : 175,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  TestSubscriberEx<List<Integer>> ts=new TestSubscriberEx<>(0L);\n  source.onBackpressureReduce(createTestSupplier(),createTestReducer()).subscribe(ts);\n  ts.assertNoValues();\n  source.onNext(1);\n  ts.request(2);\n  ts.assertValues(Collections.singletonList(1));\n  source.onNext(2);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2));\n  source.onNext(3);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  ts.request(2);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6));\n  source.onNext(7);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7));\n  source.onNext(8);\n  source.onNext(9);\n  source.onComplete();\n  ts.request(1);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7),Arrays.asList(8,9));\n  ts.assertNoErrors();\n  ts.assertTerminated();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1540,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 175,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void synchronousDrop(){\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  TestSubscriberEx<List<Integer>> ts=new TestSubscriberEx<>(0L);\n  source.onBackpressureReduce(createTestSupplier(),createTestReducer()).subscribe(ts);\n  ts.assertNoValues();\n  source.onNext(1);\n  ts.request(2);\n  ts.assertValues(Collections.singletonList(1));\n  source.onNext(2);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2));\n  source.onNext(3);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  ts.request(2);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6));\n  source.onNext(7);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7));\n  source.onNext(8);\n  source.onNext(9);\n  source.onComplete();\n  ts.request(1);\n  ts.assertValues(Collections.singletonList(1),Collections.singletonList(2),Arrays.asList(3,4,5,6),Collections.singletonList(7),Arrays.asList(8,9));\n  ts.assertNoErrors();\n  ts.assertTerminated();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 170,
        "startColumnNumber" : 16,
        "endLineNumber" : 170,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Collections.singletonList(7)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 151,
    "startColumnNumber" : 22,
    "endLineNumber" : 151,
    "endColumnNumber" : 23
  }, {
    "charLength" : 1,
    "startLineNumber" : 157,
    "startColumnNumber" : 42,
    "endLineNumber" : 157,
    "endColumnNumber" : 43
  }, {
    "charLength" : 1,
    "startLineNumber" : 170,
    "startColumnNumber" : 42,
    "endLineNumber" : 170,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}