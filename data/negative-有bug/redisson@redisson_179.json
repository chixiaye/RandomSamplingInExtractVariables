{
  "id" : 179,
  "expression" : "eventPublisher",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-micronaut/redisson-micronaut-20/src/main/java/org/redisson/micronaut/session/RedissonSessionStore.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "eventPublisher",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 84,
      "startColumnNumber" : 30,
      "endLineNumber" : 84,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 44
      },
      "nodeContext" : "this.eventPublisher=eventPublisher",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 45
      },
      "nodeContext" : "this.eventPublisher=eventPublisher;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2807,
        "startLineNumber" : 80,
        "startColumnNumber" : 54,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.sessionIdGenerator=sessionIdGenerator;\n  this.sessionConfiguration=sessionConfiguration;\n  this.eventPublisher=eventPublisher;\n  this.redisson=redisson;\n  deletedTopic=redisson.getPatternTopic(\"__keyevent@*:del\",StringCodec.INSTANCE);\n  expiredTopic=redisson.getPatternTopic(\"__keyevent@*:expired\",StringCodec.INSTANCE);\n  createdTopic=redisson.getTopic(getEventsChannelPrefix(),StringCodec.INSTANCE);\n  deletedTopic.addListener(String.class,this);\n  expiredTopic.addListener(String.class,this);\n  createdTopic.addListener(String.class,this);\n  if (sessionConfiguration.isBroadcastSessionUpdates()) {\n    RTopic updatesTopic=getTopic();\n    messageListener=new MessageListener<AttributeMessage>(){\n      @Override public void onMessage(      CharSequence channel,      AttributeMessage msg){\n        if (msg.getNodeId().equals(nodeId)) {\n          return;\n        }\n        findSession(msg.getSessionId()).thenAccept(s -> {\n          if (s.isPresent()) {\n            return;\n          }\n          try {\n            RedissonSession session=s.get();\n            if (msg instanceof AttributeRemoveMessage) {\n              for (              CharSequence name : ((AttributeRemoveMessage)msg).getNames()) {\n                session.superRemove(name);\n              }\n            }\n            if (msg instanceof AttributesClearMessage) {\n              deleteSession(session.getId());\n            }\n            if (msg instanceof AttributesPutAllMessage) {\n              AttributesPutAllMessage m=(AttributesPutAllMessage)msg;\n              Map<CharSequence,Object> attrs=m.getAttrs(getCodec().getMapValueDecoder());\n              session.load(attrs);\n            }\n            if (msg instanceof AttributeUpdateMessage) {\n              AttributeUpdateMessage m=(AttributeUpdateMessage)msg;\n              session.superPut(m.getName(),m.getValue(getCodec().getMapValueDecoder()));\n            }\n          }\n catch (          Exception e) {\n            LOG.error(\"Unable to handle topic message\",e);\n          }\n        }\n);\n      }\n    }\n;\n    updatesTopic.addListener(AttributeMessage.class,messageListener);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3049,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public RedissonSessionStore(RedissonClient redisson,SessionIdGenerator sessionIdGenerator,RedissonHttpSessionConfiguration sessionConfiguration,ApplicationEventPublisher eventPublisher){\n  this.sessionIdGenerator=sessionIdGenerator;\n  this.sessionConfiguration=sessionConfiguration;\n  this.eventPublisher=eventPublisher;\n  this.redisson=redisson;\n  deletedTopic=redisson.getPatternTopic(\"__keyevent@*:del\",StringCodec.INSTANCE);\n  expiredTopic=redisson.getPatternTopic(\"__keyevent@*:expired\",StringCodec.INSTANCE);\n  createdTopic=redisson.getTopic(getEventsChannelPrefix(),StringCodec.INSTANCE);\n  deletedTopic.addListener(String.class,this);\n  expiredTopic.addListener(String.class,this);\n  createdTopic.addListener(String.class,this);\n  if (sessionConfiguration.isBroadcastSessionUpdates()) {\n    RTopic updatesTopic=getTopic();\n    messageListener=new MessageListener<AttributeMessage>(){\n      @Override public void onMessage(      CharSequence channel,      AttributeMessage msg){\n        if (msg.getNodeId().equals(nodeId)) {\n          return;\n        }\n        findSession(msg.getSessionId()).thenAccept(s -> {\n          if (s.isPresent()) {\n            return;\n          }\n          try {\n            RedissonSession session=s.get();\n            if (msg instanceof AttributeRemoveMessage) {\n              for (              CharSequence name : ((AttributeRemoveMessage)msg).getNames()) {\n                session.superRemove(name);\n              }\n            }\n            if (msg instanceof AttributesClearMessage) {\n              deleteSession(session.getId());\n            }\n            if (msg instanceof AttributesPutAllMessage) {\n              AttributesPutAllMessage m=(AttributesPutAllMessage)msg;\n              Map<CharSequence,Object> attrs=m.getAttrs(getCodec().getMapValueDecoder());\n              session.load(attrs);\n            }\n            if (msg instanceof AttributeUpdateMessage) {\n              AttributeUpdateMessage m=(AttributeUpdateMessage)msg;\n              session.superPut(m.getName(),m.getValue(getCodec().getMapValueDecoder()));\n            }\n          }\n catch (          Exception e) {\n            LOG.error(\"Unable to handle topic message\",e);\n          }\n        }\n);\n      }\n    }\n;\n    updatesTopic.addListener(AttributeMessage.class,messageListener);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 295,
      "astHeight" : 24
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 45
      },
      "nodeContext" : "this.eventPublisher=eventPublisher;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.redisson.micronaut.session.ApplicationEventPublisher"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 84,
    "startColumnNumber" : 30,
    "endLineNumber" : 84,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}