{
  "id" : 89,
  "expression" : "new Consumer<Subscription>(){\n  @Override public void accept(  Subscription s){\n    count.incrementAndGet();\n  }\n}\n",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableAmbTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Consumer<Subscription>(){\n  @Override public void accept(  Subscription s){\n    count.incrementAndGet();\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 171,
      "startLineNumber" : 242,
      "startColumnNumber" : 45,
      "endLineNumber" : 247,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 22,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 242,
        "startColumnNumber" : 31,
        "endLineNumber" : 247,
        "endColumnNumber" : 9
      },
      "nodeContext" : "incrementer=new Consumer<Subscription>(){\n  @Override public void accept(  Subscription s){\n    count.incrementAndGet();\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 242,
        "startColumnNumber" : 8,
        "endLineNumber" : 247,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Consumer<Subscription> incrementer=new Consumer<Subscription>(){\n  @Override public void accept(  Subscription s){\n    count.incrementAndGet();\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 240,
        "startColumnNumber" : 78,
        "endLineNumber" : 261,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicLong count=new AtomicLong();\n  Consumer<Subscription> incrementer=new Consumer<Subscription>(){\n    @Override public void accept(    Subscription s){\n      count.incrementAndGet();\n    }\n  }\n;\n  Flowable<Integer> o1=Flowable.just(1).doOnSubscribe(incrementer).delay(100,TimeUnit.MILLISECONDS).subscribeOn(Schedulers.computation());\n  Flowable<Integer> o2=Flowable.just(1).doOnSubscribe(incrementer).delay(100,TimeUnit.MILLISECONDS).subscribeOn(Schedulers.computation());\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  Flowable.amb(o1,o2).subscribe(ts);\n  ts.request(1);\n  ts.awaitTerminalEvent(5,TimeUnit.SECONDS);\n  ts.assertNoErrors();\n  assertEquals(2,count.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 261,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void testSubscriptionOnlyHappensOnce() throws InterruptedException {\n  final AtomicLong count=new AtomicLong();\n  Consumer<Subscription> incrementer=new Consumer<Subscription>(){\n    @Override public void accept(    Subscription s){\n      count.incrementAndGet();\n    }\n  }\n;\n  Flowable<Integer> o1=Flowable.just(1).doOnSubscribe(incrementer).delay(100,TimeUnit.MILLISECONDS).subscribeOn(Schedulers.computation());\n  Flowable<Integer> o2=Flowable.just(1).doOnSubscribe(incrementer).delay(100,TimeUnit.MILLISECONDS).subscribeOn(Schedulers.computation());\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  Flowable.amb(o1,o2).subscribe(ts);\n  ts.request(1);\n  ts.awaitTerminalEvent(5,TimeUnit.SECONDS);\n  ts.assertNoErrors();\n  assertEquals(2,count.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 242,
        "startColumnNumber" : 8,
        "endLineNumber" : 247,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Consumer<Subscription> incrementer=new Consumer<Subscription>(){\n  @Override public void accept(  Subscription s){\n    count.incrementAndGet();\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    },
    "tokenLength" : 7,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 171,
    "startLineNumber" : 242,
    "startColumnNumber" : 45,
    "endLineNumber" : 247,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}