{
  "id" : 42,
  "expression" : "decoder",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/androidTest/java/com/bumptech/glide/load/resource/gif/StreamGifDecoderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "decoder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 40,
      "startColumnNumber" : 15,
      "endLineNumber" : 40,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 40,
        "endColumnNumber" : 78
      },
      "nodeContext" : "decoder.handles(new ByteArrayInputStream(new byte[0]),options)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(decoder.handles(new ByteArrayInputStream(new byte[0]),options))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertThat(decoder.handles(new ByteArrayInputStream(new byte[0]),options)).isFalse()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertThat(decoder.handles(new ByteArrayInputStream(new byte[0]),options)).isFalse();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 39,
        "startColumnNumber" : 78,
        "endLineNumber" : 41,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(decoder.handles(new ByteArrayInputStream(new byte[0]),options)).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 41,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDoesNotHandleStreamIfEnabledButNotAGif() throws IOException {\n  assertThat(decoder.handles(new ByteArrayInputStream(new byte[0]),options)).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 26,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertThat(decoder.handles(new ByteArrayInputStream(new byte[0]),options)).isFalse();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "com.bumptech.glide.load.resource.gif.StreamGifDecoder"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 40,
    "startColumnNumber" : 15,
    "endLineNumber" : 40,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}