{
  "id" : 55,
  "expression" : "source.lastIndexOf(' ')",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/jenkins/model/labels/LabelAutoCompleteSeeder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "source.lastIndexOf(' ')",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 49,
      "startColumnNumber" : 28,
      "endLineNumber" : 49,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 49,
        "startColumnNumber" : 20,
        "endLineNumber" : 49,
        "endColumnNumber" : 51
      },
      "nodeContext" : "space=source.lastIndexOf(' ')",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 49,
        "startColumnNumber" : 16,
        "endLineNumber" : 49,
        "endColumnNumber" : 52
      },
      "nodeContext" : "int space=source.lastIndexOf(' ');\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 48,
        "startColumnNumber" : 19,
        "endLineNumber" : 55,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int space=source.lastIndexOf(' ');\n  if (space > -1) {\n    terms.add(source.substring(space + 1));\n  }\n else {\n    terms.add(source);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (leadingQuote) {\n  int quote=source.lastIndexOf('\"');\n  if (quote == 0) {\n    terms.add(source.substring(1));\n  }\n else {\n    terms.add(\"\");\n  }\n}\n else {\n  int space=source.lastIndexOf(' ');\n  if (space > -1) {\n    terms.add(source.substring(space + 1));\n  }\n else {\n    terms.add(source);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (leadingQuote) {\n    int quote=source.lastIndexOf('\"');\n    if (quote == 0) {\n      terms.add(source.substring(1));\n    }\n else {\n      terms.add(\"\");\n    }\n  }\n else {\n    int space=source.lastIndexOf(' ');\n    if (space > -1) {\n      terms.add(source.substring(space + 1));\n    }\n else {\n      terms.add(source);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 639,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (trailingQuote || (trailingSpace && !leadingQuote)) {\n  terms.add(\"\");\n}\n else {\n  if (leadingQuote) {\n    int quote=source.lastIndexOf('\"');\n    if (quote == 0) {\n      terms.add(source.substring(1));\n    }\n else {\n      terms.add(\"\");\n    }\n  }\n else {\n    int space=source.lastIndexOf(' ');\n    if (space > -1) {\n      terms.add(source.substring(space + 1));\n    }\n else {\n      terms.add(source);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 33,
        "startColumnNumber" : 35,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ArrayList<String> terms=new ArrayList<>();\n  boolean trailingQuote=source.endsWith(\"\\\"\");\n  boolean leadingQuote=source.startsWith(\"\\\"\");\n  boolean trailingSpace=source.endsWith(\" \");\n  if (trailingQuote || (trailingSpace && !leadingQuote)) {\n    terms.add(\"\");\n  }\n else {\n    if (leadingQuote) {\n      int quote=source.lastIndexOf('\"');\n      if (quote == 0) {\n        terms.add(source.substring(1));\n      }\n else {\n        terms.add(\"\");\n      }\n    }\n else {\n      int space=source.lastIndexOf(' ');\n      if (space > -1) {\n        terms.add(source.substring(space + 1));\n      }\n else {\n        terms.add(source);\n      }\n    }\n  }\n  return terms;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1094,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Gets a list of seeds for label auto-completion.\n * @return A list of seeds for label auto-completion.\n */\n@NonNull public List<String> getSeeds(){\n  final ArrayList<String> terms=new ArrayList<>();\n  boolean trailingQuote=source.endsWith(\"\\\"\");\n  boolean leadingQuote=source.startsWith(\"\\\"\");\n  boolean trailingSpace=source.endsWith(\" \");\n  if (trailingQuote || (trailingSpace && !leadingQuote)) {\n    terms.add(\"\");\n  }\n else {\n    if (leadingQuote) {\n      int quote=source.lastIndexOf('\"');\n      if (quote == 0) {\n        terms.add(source.substring(1));\n      }\n else {\n        terms.add(\"\");\n      }\n    }\n else {\n      int space=source.lastIndexOf(' ');\n      if (space > -1) {\n        terms.add(source.substring(space + 1));\n      }\n else {\n        terms.add(source);\n      }\n    }\n  }\n  return terms;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 49,
        "startColumnNumber" : 16,
        "endLineNumber" : 49,
        "endColumnNumber" : 52
      },
      "nodeContext" : "int space=source.lastIndexOf(' ');\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 49,
    "startColumnNumber" : 28,
    "endLineNumber" : 49,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}