{
  "id" : 383,
  "expression" : "\"    when(foo.runWithInt(anyFloat())).thenReturn(5);\"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/subprojects/errorprone/src/test/java/org/mockito/errorprone/bugpatterns/MockitoAnyIncorrectPrimitiveTypeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"    when(foo.runWithInt(anyFloat())).thenReturn(5);\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 78,
      "startColumnNumber" : 12,
      "endLineNumber" : 78,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 16
      },
      "nodeContext" : "compilationHelper.addSourceLines(\"Test.java\",\"package org.mockito;\",\"import static org.mockito.ArgumentMatchers.any;\",\"import static org.mockito.ArgumentMatchers.anyFloat;\",\"import static org.mockito.ArgumentMatchers.anyLong;\",\"import static org.mockito.Mockito.mock;\",\"import static org.mockito.Mockito.when;\",\"class Test {\",\"  public void test() {\",\"    Foo foo = mock(Foo.class);\",\"    when(foo.runWithInt(anyFloat())).thenReturn(5);\",\"    when(foo.runWithBoth(any(String.class), anyLong())).thenReturn(5);\",\"  }\",\"  static class Foo {\",\"    int run(String arg) {\",\"      return 42;\",\"    }\",\"    int runWithInt(float arg) {\",\"      return 42;\",\"    }\",\"    int runWithBoth(String arg1, long arg2) {\",\"      return 42;\",\"    }\",\"  }\",\"}\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1120,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 17
      },
      "nodeContext" : "compilationHelper.addSourceLines(\"Test.java\",\"package org.mockito;\",\"import static org.mockito.ArgumentMatchers.any;\",\"import static org.mockito.ArgumentMatchers.anyFloat;\",\"import static org.mockito.ArgumentMatchers.anyLong;\",\"import static org.mockito.Mockito.mock;\",\"import static org.mockito.Mockito.when;\",\"class Test {\",\"  public void test() {\",\"    Foo foo = mock(Foo.class);\",\"    when(foo.runWithInt(anyFloat())).thenReturn(5);\",\"    when(foo.runWithBoth(any(String.class), anyLong())).thenReturn(5);\",\"  }\",\"  static class Foo {\",\"    int run(String arg) {\",\"      return 42;\",\"    }\",\"    int runWithInt(float arg) {\",\"      return 42;\",\"    }\",\"    int runWithBoth(String arg1, long arg2) {\",\"      return 42;\",\"    }\",\"  }\",\"}\").doTest()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 18
      },
      "nodeContext" : "compilationHelper.addSourceLines(\"Test.java\",\"package org.mockito;\",\"import static org.mockito.ArgumentMatchers.any;\",\"import static org.mockito.ArgumentMatchers.anyFloat;\",\"import static org.mockito.ArgumentMatchers.anyLong;\",\"import static org.mockito.Mockito.mock;\",\"import static org.mockito.Mockito.when;\",\"class Test {\",\"  public void test() {\",\"    Foo foo = mock(Foo.class);\",\"    when(foo.runWithInt(anyFloat())).thenReturn(5);\",\"    when(foo.runWithBoth(any(String.class), anyLong())).thenReturn(5);\",\"  }\",\"  static class Foo {\",\"    int run(String arg) {\",\"      return 42;\",\"    }\",\"    int runWithInt(float arg) {\",\"      return 42;\",\"    }\",\"    int runWithBoth(String arg1, long arg2) {\",\"      return 42;\",\"    }\",\"  }\",\"}\").doTest();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 65,
        "startColumnNumber" : 34,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  compilationHelper.addSourceLines(\"Test.java\",\"package org.mockito;\",\"import static org.mockito.ArgumentMatchers.any;\",\"import static org.mockito.ArgumentMatchers.anyFloat;\",\"import static org.mockito.ArgumentMatchers.anyLong;\",\"import static org.mockito.Mockito.mock;\",\"import static org.mockito.Mockito.when;\",\"class Test {\",\"  public void test() {\",\"    Foo foo = mock(Foo.class);\",\"    when(foo.runWithInt(anyFloat())).thenReturn(5);\",\"    when(foo.runWithBoth(any(String.class), anyLong())).thenReturn(5);\",\"  }\",\"  static class Foo {\",\"    int run(String arg) {\",\"      return 42;\",\"    }\",\"    int runWithInt(float arg) {\",\"      return 42;\",\"    }\",\"    int runWithBoth(String arg1, long arg2) {\",\"      return 42;\",\"    }\",\"  }\",\"}\").doTest();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1174,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testNegativeCases(){\n  compilationHelper.addSourceLines(\"Test.java\",\"package org.mockito;\",\"import static org.mockito.ArgumentMatchers.any;\",\"import static org.mockito.ArgumentMatchers.anyFloat;\",\"import static org.mockito.ArgumentMatchers.anyLong;\",\"import static org.mockito.Mockito.mock;\",\"import static org.mockito.Mockito.when;\",\"class Test {\",\"  public void test() {\",\"    Foo foo = mock(Foo.class);\",\"    when(foo.runWithInt(anyFloat())).thenReturn(5);\",\"    when(foo.runWithBoth(any(String.class), anyLong())).thenReturn(5);\",\"  }\",\"  static class Foo {\",\"    int run(String arg) {\",\"      return 42;\",\"    }\",\"    int runWithInt(float arg) {\",\"      return 42;\",\"    }\",\"    int runWithBoth(String arg1, long arg2) {\",\"      return 42;\",\"    }\",\"  }\",\"}\").doTest();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 38,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 16
      },
      "nodeContext" : "compilationHelper.addSourceLines(\"Test.java\",\"package org.mockito;\",\"import static org.mockito.ArgumentMatchers.any;\",\"import static org.mockito.ArgumentMatchers.anyFloat;\",\"import static org.mockito.ArgumentMatchers.anyLong;\",\"import static org.mockito.Mockito.mock;\",\"import static org.mockito.Mockito.when;\",\"class Test {\",\"  public void test() {\",\"    Foo foo = mock(Foo.class);\",\"    when(foo.runWithInt(anyFloat())).thenReturn(5);\",\"    when(foo.runWithBoth(any(String.class), anyLong())).thenReturn(5);\",\"  }\",\"  static class Foo {\",\"    int run(String arg) {\",\"      return 42;\",\"    }\",\"    int runWithInt(float arg) {\",\"      return 42;\",\"    }\",\"    int runWithBoth(String arg1, long arg2) {\",\"      return 42;\",\"    }\",\"  }\",\"}\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 2
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 78,
    "startColumnNumber" : 12,
    "endLineNumber" : 78,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}