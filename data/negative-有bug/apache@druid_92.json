{
  "id" : 92,
  "expression" : "5",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/datasketches/src/test/java/org/apache/druid/query/aggregation/datasketches/theta/BufferHashGrouperUsingSketchMergeAggregatorFactoryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 73,
      "startColumnNumber" : 34,
      "endLineNumber" : 73,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 35
      },
      "nodeContext" : "expectedMaxSize=5",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 73,
        "startColumnNumber" : 6,
        "endLineNumber" : 73,
        "endColumnNumber" : 36
      },
      "nodeContext" : "final int expectedMaxSize=5;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int expectedMaxSize=5;\n  SketchHolder sketchHolder=SketchHolder.of(Sketches.updateSketchBuilder().setNominalEntries(16).build());\n  UpdateSketch updateSketch=(UpdateSketch)sketchHolder.getSketch();\n  updateSketch.update(1);\n  columnSelectorFactory.setRow(new MapBasedRow(0,ImmutableMap.of(\"sketch\",sketchHolder)));\n  for (int i=0; i < expectedMaxSize; i++) {\n    Assert.assertTrue(String.valueOf(i),grouper.aggregate(i).isOk());\n  }\n  updateSketch.update(3);\n  columnSelectorFactory.setRow(new MapBasedRow(0,ImmutableMap.of(\"sketch\",sketchHolder)));\n  for (int i=0; i < expectedMaxSize; i++) {\n    Assert.assertTrue(String.valueOf(i),grouper.aggregate(i).isOk());\n  }\n  Object[] holders=Lists.newArrayList(grouper.iterator(true)).get(0).getValues();\n  Assert.assertEquals(2.0d,((SketchHolder)holders[0]).getEstimate(),0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 973,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  final int expectedMaxSize=5;\n  SketchHolder sketchHolder=SketchHolder.of(Sketches.updateSketchBuilder().setNominalEntries(16).build());\n  UpdateSketch updateSketch=(UpdateSketch)sketchHolder.getSketch();\n  updateSketch.update(1);\n  columnSelectorFactory.setRow(new MapBasedRow(0,ImmutableMap.of(\"sketch\",sketchHolder)));\n  for (int i=0; i < expectedMaxSize; i++) {\n    Assert.assertTrue(String.valueOf(i),grouper.aggregate(i).isOk());\n  }\n  updateSketch.update(3);\n  columnSelectorFactory.setRow(new MapBasedRow(0,ImmutableMap.of(\"sketch\",sketchHolder)));\n  for (int i=0; i < expectedMaxSize; i++) {\n    Assert.assertTrue(String.valueOf(i),grouper.aggregate(i).isOk());\n  }\n  Object[] holders=Lists.newArrayList(grouper.iterator(true)).get(0).getValues();\n  Assert.assertEquals(2.0d,((SketchHolder)holders[0]).getEstimate(),0);\n}\n  finally {\n  grouper.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 162,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final TestColumnSelectorFactory columnSelectorFactory=GrouperTestUtil.newColumnSelectorFactory();\n  final Grouper<Integer> grouper=makeGrouper(columnSelectorFactory,100000,2);\n  try {\n    final int expectedMaxSize=5;\n    SketchHolder sketchHolder=SketchHolder.of(Sketches.updateSketchBuilder().setNominalEntries(16).build());\n    UpdateSketch updateSketch=(UpdateSketch)sketchHolder.getSketch();\n    updateSketch.update(1);\n    columnSelectorFactory.setRow(new MapBasedRow(0,ImmutableMap.of(\"sketch\",sketchHolder)));\n    for (int i=0; i < expectedMaxSize; i++) {\n      Assert.assertTrue(String.valueOf(i),grouper.aggregate(i).isOk());\n    }\n    updateSketch.update(3);\n    columnSelectorFactory.setRow(new MapBasedRow(0,ImmutableMap.of(\"sketch\",sketchHolder)));\n    for (int i=0; i < expectedMaxSize; i++) {\n      Assert.assertTrue(String.valueOf(i),grouper.aggregate(i).isOk());\n    }\n    Object[] holders=Lists.newArrayList(grouper.iterator(true)).get(0).getValues();\n    Assert.assertEquals(2.0d,((SketchHolder)holders[0]).getEstimate(),0);\n  }\n  finally {\n    grouper.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1220,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testGrowingBufferGrouper(){\n  final TestColumnSelectorFactory columnSelectorFactory=GrouperTestUtil.newColumnSelectorFactory();\n  final Grouper<Integer> grouper=makeGrouper(columnSelectorFactory,100000,2);\n  try {\n    final int expectedMaxSize=5;\n    SketchHolder sketchHolder=SketchHolder.of(Sketches.updateSketchBuilder().setNominalEntries(16).build());\n    UpdateSketch updateSketch=(UpdateSketch)sketchHolder.getSketch();\n    updateSketch.update(1);\n    columnSelectorFactory.setRow(new MapBasedRow(0,ImmutableMap.of(\"sketch\",sketchHolder)));\n    for (int i=0; i < expectedMaxSize; i++) {\n      Assert.assertTrue(String.valueOf(i),grouper.aggregate(i).isOk());\n    }\n    updateSketch.update(3);\n    columnSelectorFactory.setRow(new MapBasedRow(0,ImmutableMap.of(\"sketch\",sketchHolder)));\n    for (int i=0; i < expectedMaxSize; i++) {\n      Assert.assertTrue(String.valueOf(i),grouper.aggregate(i).isOk());\n    }\n    Object[] holders=Lists.newArrayList(grouper.iterator(true)).get(0).getValues();\n    Assert.assertEquals(2.0d,((SketchHolder)holders[0]).getEstimate(),0);\n  }\n  finally {\n    grouper.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 73,
        "startColumnNumber" : 6,
        "endLineNumber" : 73,
        "endColumnNumber" : 36
      },
      "nodeContext" : "final int expectedMaxSize=5;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 73,
    "startColumnNumber" : 34,
    "endLineNumber" : 73,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}