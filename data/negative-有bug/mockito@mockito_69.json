{
  "id" : 69,
  "expression" : "new HashSet<Field>()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/configuration/injection/scanner/InjectMocksScanner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new HashSet<Field>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 49,
      "startColumnNumber" : 41,
      "endLineNumber" : 49,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 49,
        "startColumnNumber" : 19,
        "endLineNumber" : 49,
        "endColumnNumber" : 61
      },
      "nodeContext" : "mockDependentFields=new HashSet<Field>()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Set<Field> mockDependentFields=new HashSet<Field>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 48,
        "startColumnNumber" : 30,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Set<Field> mockDependentFields=new HashSet<Field>();\n  Field[] fields=clazz.getDeclaredFields();\n  for (  Field field : fields) {\n    if (null != field.getAnnotation(InjectMocks.class)) {\n      assertNoAnnotations(field,Mock.class,Captor.class);\n      mockDependentFields.add(field);\n    }\n  }\n  return mockDependentFields;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Scan fields annotated by &#064;InjectMocks\n * @return Fields that depends on Mock\n */\n@SuppressWarnings(\"unchecked\") private Set<Field> scan(){\n  Set<Field> mockDependentFields=new HashSet<Field>();\n  Field[] fields=clazz.getDeclaredFields();\n  for (  Field field : fields) {\n    if (null != field.getAnnotation(InjectMocks.class)) {\n      assertNoAnnotations(field,Mock.class,Captor.class);\n      mockDependentFields.add(field);\n    }\n  }\n  return mockDependentFields;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Set<Field> mockDependentFields=new HashSet<Field>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.HashSet<java.lang.reflect.Field>"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 49,
    "startColumnNumber" : 41,
    "endLineNumber" : 49,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}