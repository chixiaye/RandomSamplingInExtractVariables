{
  "id" : 423,
  "expression" : "entry.getValue()",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/SymbolRecords.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entry.getValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 169,
      "startColumnNumber" : 18,
      "endLineNumber" : 169,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 169,
        "startColumnNumber" : 3,
        "endLineNumber" : 169,
        "endColumnNumber" : 35
      },
      "nodeContext" : "builder.append(entry.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 169,
        "startColumnNumber" : 3,
        "endLineNumber" : 169,
        "endColumnNumber" : 36
      },
      "nodeContext" : "builder.append(entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 165,
        "startColumnNumber" : 79,
        "endLineNumber" : 171,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder builder=new StringBuilder();\n  builder.append(\"\\n------------------------------------------------------------\\n\");\n  builder.append(String.format(\"Offset: 0X%08X\\n\",entry.getKey()));\n  builder.append(entry.getValue());\n  writer.write(builder.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 165,
        "startColumnNumber" : 2,
        "endLineNumber" : 171,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Map.Entry<Long,AbstractMsSymbol> entry : mySymbolsByOffset.entrySet()) {\n  StringBuilder builder=new StringBuilder();\n  builder.append(\"\\n------------------------------------------------------------\\n\");\n  builder.append(String.format(\"Offset: 0X%08X\\n\",entry.getKey()));\n  builder.append(entry.getValue());\n  writer.write(builder.toString());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 163,
        "startColumnNumber" : 22,
        "endLineNumber" : 173,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  writer.write(\"SymbolMap---------------------------------------------------\");\n  for (  Map.Entry<Long,AbstractMsSymbol> entry : mySymbolsByOffset.entrySet()) {\n    StringBuilder builder=new StringBuilder();\n    builder.append(\"\\n------------------------------------------------------------\\n\");\n    builder.append(String.format(\"Offset: 0X%08X\\n\",entry.getKey()));\n    builder.append(entry.getValue());\n    writer.write(builder.toString());\n  }\n  writer.write(\"\\nEnd SymbolMap-----------------------------------------------\\n\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 969,
        "startLineNumber" : 156,
        "startColumnNumber" : 1,
        "endLineNumber" : 173,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Debug method for dumping the symbols from a symbol map\n * @param mySymbolsByOffset the {@link Map}&lt; {@link Long}, {@link AbstractMsSymbol}&gt; to dump.\n * @param writer {@link Writer} to which to dump the information.\n * @throws IOException Upon IOException writing to the {@link Writer}.\n */\nprotected void dumpSymbolMap(Map<Long,AbstractMsSymbol> mySymbolsByOffset,Writer writer) throws IOException {\n  writer.write(\"SymbolMap---------------------------------------------------\");\n  for (  Map.Entry<Long,AbstractMsSymbol> entry : mySymbolsByOffset.entrySet()) {\n    StringBuilder builder=new StringBuilder();\n    builder.append(\"\\n------------------------------------------------------------\\n\");\n    builder.append(String.format(\"Offset: 0X%08X\\n\",entry.getKey()));\n    builder.append(entry.getValue());\n    writer.write(builder.toString());\n  }\n  writer.write(\"\\nEnd SymbolMap-----------------------------------------------\\n\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 169,
        "startColumnNumber" : 3,
        "endLineNumber" : 169,
        "endColumnNumber" : 36
      },
      "nodeContext" : "builder.append(entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "ghidra.app.util.bin.format.pdb2.pdbreader.symbol.AbstractMsSymbol"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 169,
    "startColumnNumber" : 18,
    "endLineNumber" : 169,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}