{
  "id" : 293,
  "expression" : "resource != null",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/NotFoundExceptionMapper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "resource != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 197,
      "startColumnNumber" : 16,
      "endLineNumber" : 197,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 197,
        "startColumnNumber" : 16,
        "endLineNumber" : 197,
        "endColumnNumber" : 58
      },
      "nodeContext" : "resource != null && Files.exists(resource)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 197,
        "startColumnNumber" : 12,
        "endLineNumber" : 215,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (resource != null && Files.exists(resource)) {\n  try (Stream<java.nio.file.Path> fileTreeElements=Files.walk(resource)){\n    fileTreeElements.forEach(new Consumer<java.nio.file.Path>(){\n      @Override public void accept(      java.nio.file.Path path){\n        if (resource.equals(path)) {\n          return;\n        }\n        java.nio.file.Path rel=resource.relativize(path);\n        if (!Files.isDirectory(path)) {\n          knownFiles.add(rel.toString());\n        }\n      }\n    }\n);\n  }\n catch (  IOException e) {\n    LOG.error(\"Failed to read static resources\",e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 196,
        "startColumnNumber" : 64,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (resource != null && Files.exists(resource)) {\n    try (Stream<java.nio.file.Path> fileTreeElements=Files.walk(resource)){\n      fileTreeElements.forEach(new Consumer<java.nio.file.Path>(){\n        @Override public void accept(        java.nio.file.Path path){\n          if (resource.equals(path)) {\n            return;\n          }\n          java.nio.file.Path rel=resource.relativize(path);\n          if (!Files.isDirectory(path)) {\n            knownFiles.add(rel.toString());\n          }\n        }\n      }\n);\n    }\n catch (    IOException e) {\n      LOG.error(\"Failed to read static resources\",e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (java.nio.file.Path resource : staticResourceRoots) {\n  if (resource != null && Files.exists(resource)) {\n    try (Stream<java.nio.file.Path> fileTreeElements=Files.walk(resource)){\n      fileTreeElements.forEach(new Consumer<java.nio.file.Path>(){\n        @Override public void accept(        java.nio.file.Path path){\n          if (resource.equals(path)) {\n            return;\n          }\n          java.nio.file.Path rel=resource.relativize(path);\n          if (!Files.isDirectory(path)) {\n            knownFiles.add(rel.toString());\n          }\n        }\n      }\n);\n    }\n catch (    IOException e) {\n      LOG.error(\"Failed to read static resources\",e);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 125,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1682,
        "startLineNumber" : 191,
        "startColumnNumber" : 45,
        "endLineNumber" : 228,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Set<String> knownFiles=new HashSet<>();\n  for (  java.nio.file.Path resource : staticResourceRoots) {\n    if (resource != null && Files.exists(resource)) {\n      try (Stream<java.nio.file.Path> fileTreeElements=Files.walk(resource)){\n        fileTreeElements.forEach(new Consumer<java.nio.file.Path>(){\n          @Override public void accept(          java.nio.file.Path path){\n            if (resource.equals(path)) {\n              return;\n            }\n            java.nio.file.Path rel=resource.relativize(path);\n            if (!Files.isDirectory(path)) {\n              knownFiles.add(rel.toString());\n            }\n          }\n        }\n);\n      }\n catch (      IOException e) {\n        LOG.error(\"Failed to read static resources\",e);\n      }\n    }\n  }\n  try {\n    ClassPathUtils.consumeAsPaths(META_INF_RESOURCES,p -> {\n      collectKnownPaths(p,knownFiles);\n    }\n);\n  }\n catch (  IOException e) {\n    LOG.error(\"Failed to read static resources\",e);\n  }\n  return knownFiles.stream().filter(this::isHtmlFileName).limit(1000).distinct().sorted(Comparator.naturalOrder()).collect(Collectors.toList());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1723,
        "startLineNumber" : 191,
        "startColumnNumber" : 4,
        "endLineNumber" : 228,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private List<String> findRealResources(){\n  Set<String> knownFiles=new HashSet<>();\n  for (  java.nio.file.Path resource : staticResourceRoots) {\n    if (resource != null && Files.exists(resource)) {\n      try (Stream<java.nio.file.Path> fileTreeElements=Files.walk(resource)){\n        fileTreeElements.forEach(new Consumer<java.nio.file.Path>(){\n          @Override public void accept(          java.nio.file.Path path){\n            if (resource.equals(path)) {\n              return;\n            }\n            java.nio.file.Path rel=resource.relativize(path);\n            if (!Files.isDirectory(path)) {\n              knownFiles.add(rel.toString());\n            }\n          }\n        }\n);\n      }\n catch (      IOException e) {\n        LOG.error(\"Failed to read static resources\",e);\n      }\n    }\n  }\n  try {\n    ClassPathUtils.consumeAsPaths(META_INF_RESOURCES,p -> {\n      collectKnownPaths(p,knownFiles);\n    }\n);\n  }\n catch (  IOException e) {\n    LOG.error(\"Failed to read static resources\",e);\n  }\n  return knownFiles.stream().filter(this::isHtmlFileName).limit(1000).distinct().sorted(Comparator.naturalOrder()).collect(Collectors.toList());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 197,
        "startColumnNumber" : 16,
        "endLineNumber" : 197,
        "endColumnNumber" : 58
      },
      "nodeContext" : "resource != null && Files.exists(resource)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 197,
    "startColumnNumber" : 16,
    "endLineNumber" : 197,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}