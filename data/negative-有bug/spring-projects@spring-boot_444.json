{
  "id" : 444,
  "expression" : "getDatabaseName(dataSource)",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jdbc/EmbeddedDataSourceConfigurationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getDatabaseName(dataSource)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 63,
      "startColumnNumber" : 14,
      "endLineNumber" : 63,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 63,
        "startColumnNumber" : 3,
        "endLineNumber" : 63,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertThat(getDatabaseName(dataSource))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 63,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(getDatabaseName(dataSource)).isNotEqualTo(getDatabaseName(dataSource2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 63,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertThat(getDatabaseName(dataSource)).isNotEqualTo(getDatabaseName(dataSource2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 60,
        "startColumnNumber" : 52,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DataSource dataSource=this.context.getBean(DataSource.class);\n  DataSource dataSource2=context2.getBean(DataSource.class);\n  assertThat(getDatabaseName(dataSource)).isNotEqualTo(getDatabaseName(dataSource2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try (AnnotationConfigApplicationContext context2=load(\"spring.datasource.generate-unique-name=true\")){\n  DataSource dataSource=this.context.getBean(DataSource.class);\n  DataSource dataSource2=context2.getBean(DataSource.class);\n  assertThat(getDatabaseName(dataSource)).isNotEqualTo(getDatabaseName(dataSource2));\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 57,
        "startColumnNumber" : 51,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this.context=load(\"spring.datasource.generate-unique-name=true\");\n  try (AnnotationConfigApplicationContext context2=load(\"spring.datasource.generate-unique-name=true\")){\n    DataSource dataSource=this.context.getBean(DataSource.class);\n    DataSource dataSource2=context2.getBean(DataSource.class);\n    assertThat(getDatabaseName(dataSource)).isNotEqualTo(getDatabaseName(dataSource2));\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 66,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void generateUniqueName() throws Exception {\n  this.context=load(\"spring.datasource.generate-unique-name=true\");\n  try (AnnotationConfigApplicationContext context2=load(\"spring.datasource.generate-unique-name=true\")){\n    DataSource dataSource=this.context.getBean(DataSource.class);\n    DataSource dataSource2=context2.getBean(DataSource.class);\n    assertThat(getDatabaseName(dataSource)).isNotEqualTo(getDatabaseName(dataSource2));\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 63,
        "startColumnNumber" : 3,
        "endLineNumber" : 63,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertThat(getDatabaseName(dataSource))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 63,
    "startColumnNumber" : 14,
    "endLineNumber" : 63,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}