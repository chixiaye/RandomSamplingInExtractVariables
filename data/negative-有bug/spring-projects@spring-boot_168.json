{
  "id" : 168,
  "expression" : "new ConstantExpression(\"test:parent:1.0.0\")",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/compiler/GenericBomAstTransformationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ConstantExpression(\"test:parent:1.0.0\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 88,
      "startColumnNumber" : 32,
      "endLineNumber" : 88,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 76
      },
      "nodeContext" : "annotation.addMember(\"value\",new ConstantExpression(\"test:parent:1.0.0\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 77
      },
      "nodeContext" : "annotation.addMember(\"value\",new ConstantExpression(\"test:parent:1.0.0\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 82,
        "startColumnNumber" : 68,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this.moduleNode.setPackage(new PackageNode(\"foo\"));\n  ClassNode cls=ClassHelper.make(\"MyClass\");\n  this.moduleNode.addClass(cls);\n  AnnotationNode annotation=new AnnotationNode(ClassHelper.make(DependencyManagementBom.class));\n  annotation.addMember(\"value\",new ConstantExpression(\"test:parent:1.0.0\"));\n  cls.addAnnotation(annotation);\n  this.transformation.visit(new ASTNode[]{this.moduleNode},this.sourceUnit);\n  assertThat(getValue().toString()).isEqualTo(\"[test:parent:1.0.0, test:child:1.0.0]\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 601,
        "startLineNumber" : 81,
        "startColumnNumber" : 1,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void transformationOfClassWithExistingManagedDependencies(){\n  this.moduleNode.setPackage(new PackageNode(\"foo\"));\n  ClassNode cls=ClassHelper.make(\"MyClass\");\n  this.moduleNode.addClass(cls);\n  AnnotationNode annotation=new AnnotationNode(ClassHelper.make(DependencyManagementBom.class));\n  annotation.addMember(\"value\",new ConstantExpression(\"test:parent:1.0.0\"));\n  cls.addAnnotation(annotation);\n  this.transformation.visit(new ASTNode[]{this.moduleNode},this.sourceUnit);\n  assertThat(getValue().toString()).isEqualTo(\"[test:parent:1.0.0, test:child:1.0.0]\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 77
      },
      "nodeContext" : "annotation.addMember(\"value\",new ConstantExpression(\"test:parent:1.0.0\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "org.springframework.boot.cli.compiler.ConstantExpression"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 88,
    "startColumnNumber" : 32,
    "endLineNumber" : 88,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}