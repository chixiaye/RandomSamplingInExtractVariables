{
  "id" : 42,
  "expression" : "i * blockSize",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/serializer/stream/StreamWriterTest_writeArray2.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i * blockSize",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 35,
      "startColumnNumber" : 48,
      "endLineNumber" : 35,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 35,
        "startColumnNumber" : 48,
        "endLineNumber" : 35,
        "endColumnNumber" : 65
      },
      "nodeContext" : "i * blockSize + j",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 35,
        "startColumnNumber" : 36,
        "endLineNumber" : 35,
        "endColumnNumber" : 66
      },
      "nodeContext" : "text.charAt(i * blockSize + j)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Assert.assertEquals(text.charAt(i * blockSize + j),(char)('a' + i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assert.assertEquals(text.charAt(i * blockSize + j),(char)('a' + i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 34,
        "startColumnNumber" : 48,
        "endLineNumber" : 36,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Assert.assertEquals(text.charAt(i * blockSize + j),(char)('a' + i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < blockSize; ++j) {\n  Assert.assertEquals(text.charAt(i * blockSize + j),(char)('a' + i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 33,
        "startColumnNumber" : 37,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int j=0; j < blockSize; ++j) {\n    Assert.assertEquals(text.charAt(i * blockSize + j),(char)('a' + i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 26; ++i) {\n  for (int j=0; j < blockSize; ++j) {\n    Assert.assertEquals(text.charAt(i * blockSize + j),(char)('a' + i));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 804,
        "startLineNumber" : 14,
        "startColumnNumber" : 42,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringWriter out=new StringWriter();\n  SerializeWriter writer=new SerializeWriter(out,10);\n  Assert.assertEquals(10,SerializeWriterTestUtils.getBufferLength(writer));\n  int blockSize=21;\n  for (char ch='a'; ch <= 'z'; ++ch) {\n    char[] chars=new char[blockSize];\n    for (int i=0; i < blockSize; ++i) {\n      chars[i]=ch;\n    }\n    writer.write(chars,0,chars.length);\n  }\n  writer.close();\n  String text=out.toString();\n  Assert.assertEquals(26 * blockSize,text.length());\n  for (int i=0; i < 26; ++i) {\n    for (int j=0; j < blockSize; ++j) {\n      Assert.assertEquals(text.charAt(i * blockSize + j),(char)('a' + i));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 842,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0() throws Exception {\n  StringWriter out=new StringWriter();\n  SerializeWriter writer=new SerializeWriter(out,10);\n  Assert.assertEquals(10,SerializeWriterTestUtils.getBufferLength(writer));\n  int blockSize=21;\n  for (char ch='a'; ch <= 'z'; ++ch) {\n    char[] chars=new char[blockSize];\n    for (int i=0; i < blockSize; ++i) {\n      chars[i]=ch;\n    }\n    writer.write(chars,0,chars.length);\n  }\n  writer.close();\n  String text=out.toString();\n  Assert.assertEquals(26 * blockSize,text.length());\n  for (int i=0; i < 26; ++i) {\n    for (int j=0; j < blockSize; ++j) {\n      Assert.assertEquals(text.charAt(i * blockSize + j),(char)('a' + i));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assert.assertEquals(text.charAt(i * blockSize + j),(char)('a' + i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 35,
    "startColumnNumber" : 48,
    "endLineNumber" : 35,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}