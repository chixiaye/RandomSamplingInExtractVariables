{
  "id" : 425,
  "expression" : "firstFrameAfterSeekTimeUs == expectedTrackOutput.getSampleTimeUs(i)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/extensions/flac/src/androidTest/java/com/google/android/exoplayer2/ext/flac/FlacExtractorSeekTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "firstFrameAfterSeekTimeUs == expectedTrackOutput.getSampleTimeUs(i)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 67,
      "startLineNumber" : 258,
      "startColumnNumber" : 10,
      "endLineNumber" : 258,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 258,
        "startColumnNumber" : 6,
        "endLineNumber" : 267,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (firstFrameAfterSeekTimeUs == expectedTrackOutput.getSampleTimeUs(i)) {\n  trackOutput.assertSample(firstFrameIndexAfterSeek,expectedTrackOutput.getSampleData(i),expectedTrackOutput.getSampleTimeUs(i),expectedTrackOutput.getSampleFlags(i),expectedTrackOutput.getSampleCryptoData(i));\n  frameFound=true;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 420,
        "startLineNumber" : 257,
        "startColumnNumber" : 45,
        "endLineNumber" : 268,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (firstFrameAfterSeekTimeUs == expectedTrackOutput.getSampleTimeUs(i)) {\n    trackOutput.assertSample(firstFrameIndexAfterSeek,expectedTrackOutput.getSampleData(i),expectedTrackOutput.getSampleTimeUs(i),expectedTrackOutput.getSampleFlags(i),expectedTrackOutput.getSampleCryptoData(i));\n    frameFound=true;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 257,
        "startColumnNumber" : 4,
        "endLineNumber" : 268,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=maxFrameIndex; i >= 0; i--) {\n  if (firstFrameAfterSeekTimeUs == expectedTrackOutput.getSampleTimeUs(i)) {\n    trackOutput.assertSample(firstFrameIndexAfterSeek,expectedTrackOutput.getSampleData(i),expectedTrackOutput.getSampleTimeUs(i),expectedTrackOutput.getSampleFlags(i),expectedTrackOutput.getSampleCryptoData(i));\n    frameFound=true;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 859,
        "startLineNumber" : 249,
        "startColumnNumber" : 25,
        "endLineNumber" : 271,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FakeTrackOutput expectedTrackOutput=getExpectedTrackOutput(fileName);\n  int maxFrameIndex=getFrameIndex(expectedTrackOutput,targetSeekTimeUs);\n  long firstFrameAfterSeekTimeUs=trackOutput.getSampleTimeUs(firstFrameIndexAfterSeek);\n  assertThat(firstFrameAfterSeekTimeUs).isAtMost(targetSeekTimeUs);\n  boolean frameFound=false;\n  for (int i=maxFrameIndex; i >= 0; i--) {\n    if (firstFrameAfterSeekTimeUs == expectedTrackOutput.getSampleTimeUs(i)) {\n      trackOutput.assertSample(firstFrameIndexAfterSeek,expectedTrackOutput.getSampleData(i),expectedTrackOutput.getSampleTimeUs(i),expectedTrackOutput.getSampleFlags(i),expectedTrackOutput.getSampleCryptoData(i));\n      frameFound=true;\n      break;\n    }\n  }\n  assertThat(frameFound).isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1076,
        "startLineNumber" : 244,
        "startColumnNumber" : 2,
        "endLineNumber" : 271,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertFirstFrameAfterSeekPrecedesTargetSeekTime(String fileName,FakeTrackOutput trackOutput,long targetSeekTimeUs,int firstFrameIndexAfterSeek) throws IOException {\n  FakeTrackOutput expectedTrackOutput=getExpectedTrackOutput(fileName);\n  int maxFrameIndex=getFrameIndex(expectedTrackOutput,targetSeekTimeUs);\n  long firstFrameAfterSeekTimeUs=trackOutput.getSampleTimeUs(firstFrameIndexAfterSeek);\n  assertThat(firstFrameAfterSeekTimeUs).isAtMost(targetSeekTimeUs);\n  boolean frameFound=false;\n  for (int i=maxFrameIndex; i >= 0; i--) {\n    if (firstFrameAfterSeekTimeUs == expectedTrackOutput.getSampleTimeUs(i)) {\n      trackOutput.assertSample(firstFrameIndexAfterSeek,expectedTrackOutput.getSampleData(i),expectedTrackOutput.getSampleTimeUs(i),expectedTrackOutput.getSampleFlags(i),expectedTrackOutput.getSampleCryptoData(i));\n      frameFound=true;\n      break;\n    }\n  }\n  assertThat(frameFound).isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 258,
        "startColumnNumber" : 6,
        "endLineNumber" : 267,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (firstFrameAfterSeekTimeUs == expectedTrackOutput.getSampleTimeUs(i)) {\n  trackOutput.assertSample(firstFrameIndexAfterSeek,expectedTrackOutput.getSampleData(i),expectedTrackOutput.getSampleTimeUs(i),expectedTrackOutput.getSampleFlags(i),expectedTrackOutput.getSampleCryptoData(i));\n  frameFound=true;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 67,
    "startLineNumber" : 258,
    "startColumnNumber" : 10,
    "endLineNumber" : 258,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}