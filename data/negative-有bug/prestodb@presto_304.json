{
  "id" : 304,
  "expression" : "SchemaTableName.valueOf(definedTable)",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-redis/src/main/java/com/facebook/presto/redis/RedisTableDescriptionSupplier.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SchemaTableName.valueOf(definedTable)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 75,
      "startColumnNumber" : 32,
      "endLineNumber" : 75,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 75,
        "startColumnNumber" : 20,
        "endLineNumber" : 75,
        "endColumnNumber" : 69
      },
      "nodeContext" : "tableName=SchemaTableName.valueOf(definedTable)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 75,
        "startColumnNumber" : 20,
        "endLineNumber" : 75,
        "endColumnNumber" : 70
      },
      "nodeContext" : "tableName=SchemaTableName.valueOf(definedTable);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 74,
        "startColumnNumber" : 20,
        "endLineNumber" : 76,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  tableName=SchemaTableName.valueOf(definedTable);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  tableName=SchemaTableName.valueOf(definedTable);\n}\n catch (IllegalArgumentException iae) {\n  tableName=new SchemaTableName(redisConnectorConfig.getDefaultSchema(),definedTable);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1231,
        "startLineNumber" : 72,
        "startColumnNumber" : 77,
        "endLineNumber" : 94,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  SchemaTableName tableName;\n  try {\n    tableName=SchemaTableName.valueOf(definedTable);\n  }\n catch (  IllegalArgumentException iae) {\n    tableName=new SchemaTableName(redisConnectorConfig.getDefaultSchema(),definedTable);\n  }\n  if (tableDefinitions.containsKey(tableName)) {\n    RedisTableDescription redisTable=tableDefinitions.get(tableName);\n    log.debug(\"Found Table definition for %s: %s\",tableName,redisTable);\n    builder.put(tableName,redisTable);\n  }\n else {\n    log.debug(\"Created dummy Table definition for %s\",tableName);\n    builder.put(tableName,new RedisTableDescription(tableName.getTableName(),tableName.getSchemaName(),new RedisTableFieldGroup(DummyRowDecoder.NAME,null,ImmutableList.of()),new RedisTableFieldGroup(DummyRowDecoder.NAME,null,ImmutableList.of())));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String definedTable : redisConnectorConfig.getTableNames()) {\n  SchemaTableName tableName;\n  try {\n    tableName=SchemaTableName.valueOf(definedTable);\n  }\n catch (  IllegalArgumentException iae) {\n    tableName=new SchemaTableName(redisConnectorConfig.getDefaultSchema(),definedTable);\n  }\n  if (tableDefinitions.containsKey(tableName)) {\n    RedisTableDescription redisTable=tableDefinitions.get(tableName);\n    log.debug(\"Found Table definition for %s: %s\",tableName,redisTable);\n    builder.put(tableName,redisTable);\n  }\n else {\n    log.debug(\"Created dummy Table definition for %s\",tableName);\n    builder.put(tableName,new RedisTableDescription(tableName.getTableName(),tableName.getSchemaName(),new RedisTableFieldGroup(DummyRowDecoder.NAME,null,ImmutableList.of()),new RedisTableFieldGroup(DummyRowDecoder.NAME,null,ImmutableList.of())));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2195,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  File file : listFiles(redisConnectorConfig.getTableDescriptionDir())) {\n    if (file.isFile() && file.getName().endsWith(\".json\")) {\n      RedisTableDescription table=tableDescriptionCodec.fromJson(readAllBytes(file.toPath()));\n      String schemaName=firstNonNull(table.getSchemaName(),redisConnectorConfig.getDefaultSchema());\n      log.debug(\"Redis table %s.%s: %s\",schemaName,table.getTableName(),table);\n      builder.put(new SchemaTableName(schemaName,table.getTableName()),table);\n    }\n  }\n  Map<SchemaTableName,RedisTableDescription> tableDefinitions=builder.build();\n  log.debug(\"Loaded table definitions: %s\",tableDefinitions.keySet());\n  builder=ImmutableMap.builder();\n  for (  String definedTable : redisConnectorConfig.getTableNames()) {\n    SchemaTableName tableName;\n    try {\n      tableName=SchemaTableName.valueOf(definedTable);\n    }\n catch (    IllegalArgumentException iae) {\n      tableName=new SchemaTableName(redisConnectorConfig.getDefaultSchema(),definedTable);\n    }\n    if (tableDefinitions.containsKey(tableName)) {\n      RedisTableDescription redisTable=tableDefinitions.get(tableName);\n      log.debug(\"Found Table definition for %s: %s\",tableName,redisTable);\n      builder.put(tableName,redisTable);\n    }\n else {\n      log.debug(\"Created dummy Table definition for %s\",tableName);\n      builder.put(tableName,new RedisTableDescription(tableName.getTableName(),tableName.getSchemaName(),new RedisTableFieldGroup(DummyRowDecoder.NAME,null,ImmutableList.of()),new RedisTableFieldGroup(DummyRowDecoder.NAME,null,ImmutableList.of())));\n    }\n  }\n  return builder.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2324,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  for (  File file : listFiles(redisConnectorConfig.getTableDescriptionDir())) {\n    if (file.isFile() && file.getName().endsWith(\".json\")) {\n      RedisTableDescription table=tableDescriptionCodec.fromJson(readAllBytes(file.toPath()));\n      String schemaName=firstNonNull(table.getSchemaName(),redisConnectorConfig.getDefaultSchema());\n      log.debug(\"Redis table %s.%s: %s\",schemaName,table.getTableName(),table);\n      builder.put(new SchemaTableName(schemaName,table.getTableName()),table);\n    }\n  }\n  Map<SchemaTableName,RedisTableDescription> tableDefinitions=builder.build();\n  log.debug(\"Loaded table definitions: %s\",tableDefinitions.keySet());\n  builder=ImmutableMap.builder();\n  for (  String definedTable : redisConnectorConfig.getTableNames()) {\n    SchemaTableName tableName;\n    try {\n      tableName=SchemaTableName.valueOf(definedTable);\n    }\n catch (    IllegalArgumentException iae) {\n      tableName=new SchemaTableName(redisConnectorConfig.getDefaultSchema(),definedTable);\n    }\n    if (tableDefinitions.containsKey(tableName)) {\n      RedisTableDescription redisTable=tableDefinitions.get(tableName);\n      log.debug(\"Found Table definition for %s: %s\",tableName,redisTable);\n      builder.put(tableName,redisTable);\n    }\n else {\n      log.debug(\"Created dummy Table definition for %s\",tableName);\n      builder.put(tableName,new RedisTableDescription(tableName.getTableName(),tableName.getSchemaName(),new RedisTableFieldGroup(DummyRowDecoder.NAME,null,ImmutableList.of()),new RedisTableFieldGroup(DummyRowDecoder.NAME,null,ImmutableList.of())));\n    }\n  }\n  return builder.build();\n}\n catch (IOException e) {\n  log.warn(e,\"Error: \");\n  throw new UncheckedIOException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 229,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2444,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImmutableMap.Builder<SchemaTableName,RedisTableDescription> builder=ImmutableMap.builder();\n  try {\n    for (    File file : listFiles(redisConnectorConfig.getTableDescriptionDir())) {\n      if (file.isFile() && file.getName().endsWith(\".json\")) {\n        RedisTableDescription table=tableDescriptionCodec.fromJson(readAllBytes(file.toPath()));\n        String schemaName=firstNonNull(table.getSchemaName(),redisConnectorConfig.getDefaultSchema());\n        log.debug(\"Redis table %s.%s: %s\",schemaName,table.getTableName(),table);\n        builder.put(new SchemaTableName(schemaName,table.getTableName()),table);\n      }\n    }\n    Map<SchemaTableName,RedisTableDescription> tableDefinitions=builder.build();\n    log.debug(\"Loaded table definitions: %s\",tableDefinitions.keySet());\n    builder=ImmutableMap.builder();\n    for (    String definedTable : redisConnectorConfig.getTableNames()) {\n      SchemaTableName tableName;\n      try {\n        tableName=SchemaTableName.valueOf(definedTable);\n      }\n catch (      IllegalArgumentException iae) {\n        tableName=new SchemaTableName(redisConnectorConfig.getDefaultSchema(),definedTable);\n      }\n      if (tableDefinitions.containsKey(tableName)) {\n        RedisTableDescription redisTable=tableDefinitions.get(tableName);\n        log.debug(\"Found Table definition for %s: %s\",tableName,redisTable);\n        builder.put(tableName,redisTable);\n      }\n else {\n        log.debug(\"Created dummy Table definition for %s\",tableName);\n        builder.put(tableName,new RedisTableDescription(tableName.getTableName(),tableName.getSchemaName(),new RedisTableFieldGroup(DummyRowDecoder.NAME,null,ImmutableList.of()),new RedisTableFieldGroup(DummyRowDecoder.NAME,null,ImmutableList.of())));\n      }\n    }\n    return builder.build();\n  }\n catch (  IOException e) {\n    log.warn(e,\"Error: \");\n    throw new UncheckedIOException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2519,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Map<SchemaTableName,RedisTableDescription> get(){\n  ImmutableMap.Builder<SchemaTableName,RedisTableDescription> builder=ImmutableMap.builder();\n  try {\n    for (    File file : listFiles(redisConnectorConfig.getTableDescriptionDir())) {\n      if (file.isFile() && file.getName().endsWith(\".json\")) {\n        RedisTableDescription table=tableDescriptionCodec.fromJson(readAllBytes(file.toPath()));\n        String schemaName=firstNonNull(table.getSchemaName(),redisConnectorConfig.getDefaultSchema());\n        log.debug(\"Redis table %s.%s: %s\",schemaName,table.getTableName(),table);\n        builder.put(new SchemaTableName(schemaName,table.getTableName()),table);\n      }\n    }\n    Map<SchemaTableName,RedisTableDescription> tableDefinitions=builder.build();\n    log.debug(\"Loaded table definitions: %s\",tableDefinitions.keySet());\n    builder=ImmutableMap.builder();\n    for (    String definedTable : redisConnectorConfig.getTableNames()) {\n      SchemaTableName tableName;\n      try {\n        tableName=SchemaTableName.valueOf(definedTable);\n      }\n catch (      IllegalArgumentException iae) {\n        tableName=new SchemaTableName(redisConnectorConfig.getDefaultSchema(),definedTable);\n      }\n      if (tableDefinitions.containsKey(tableName)) {\n        RedisTableDescription redisTable=tableDefinitions.get(tableName);\n        log.debug(\"Found Table definition for %s: %s\",tableName,redisTable);\n        builder.put(tableName,redisTable);\n      }\n else {\n        log.debug(\"Created dummy Table definition for %s\",tableName);\n        builder.put(tableName,new RedisTableDescription(tableName.getTableName(),tableName.getSchemaName(),new RedisTableFieldGroup(DummyRowDecoder.NAME,null,ImmutableList.of()),new RedisTableFieldGroup(DummyRowDecoder.NAME,null,ImmutableList.of())));\n      }\n    }\n    return builder.build();\n  }\n catch (  IOException e) {\n    log.warn(e,\"Error: \");\n    throw new UncheckedIOException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 75,
        "startColumnNumber" : 20,
        "endLineNumber" : 75,
        "endColumnNumber" : 70
      },
      "nodeContext" : "tableName=SchemaTableName.valueOf(definedTable);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "com.facebook.presto.spi.SchemaTableName"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 75,
    "startColumnNumber" : 32,
    "endLineNumber" : 75,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}