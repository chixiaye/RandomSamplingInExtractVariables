{
  "id" : 406,
  "expression" : "ClassConstants.METHOD_ARGUMENTS_CLOSE",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/java/proguard/proguard6.2.2/src/proguard/classfile/util/AllParameterVisitor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ClassConstants.METHOD_ARGUMENTS_CLOSE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 159,
      "startColumnNumber" : 21,
      "endLineNumber" : 159,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 159,
        "startColumnNumber" : 16,
        "endLineNumber" : 159,
        "endColumnNumber" : 59
      },
      "nodeContext" : "case ClassConstants.METHOD_ARGUMENTS_CLOSE:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1382,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\n    parameterSize++;\n    break;\n  }\ndefault:{\n  break;\n}\ncase ClassConstants.TYPE_CLASS_START:{\nindex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\nbreak;\n}\ncase ClassConstants.TYPE_ARRAY:{\nwhile ((c=descriptor.charAt(index++)) == ClassConstants.TYPE_ARRAY) {\n}\nif (c == ClassConstants.TYPE_CLASS_START) {\nindex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n}\nbreak;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nbreak loop;\n}\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 82,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1515,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char c=descriptor.charAt(index++);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\n      parameterSize++;\n      break;\n    }\ndefault:{\n    break;\n  }\ncase ClassConstants.TYPE_CLASS_START:{\n  index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n  break;\n}\ncase ClassConstants.TYPE_ARRAY:{\nwhile ((c=descriptor.charAt(index++)) == ClassConstants.TYPE_ARRAY) {\n}\nif (c == ClassConstants.TYPE_CLASS_START) {\n  index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n}\nbreak;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nbreak loop;\n}\n}\nparameterCount++;\nparameterSize++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LabeledStatement,body]",
      "nodePosition" : {
        "charLength" : 1536,
        "startLineNumber" : 122,
        "startColumnNumber" : 14,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (true) {\n  char c=descriptor.charAt(index++);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\n      parameterSize++;\n      break;\n    }\ndefault:{\n    break;\n  }\ncase ClassConstants.TYPE_CLASS_START:{\n  index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n  break;\n}\ncase ClassConstants.TYPE_ARRAY:{\nwhile ((c=descriptor.charAt(index++)) == ClassConstants.TYPE_ARRAY) {\n}\nif (c == ClassConstants.TYPE_CLASS_START) {\n  index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n}\nbreak;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nbreak loop;\n}\n}\nparameterCount++;\nparameterSize++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 100,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1542,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "loop: while (true) {\n  char c=descriptor.charAt(index++);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\n      parameterSize++;\n      break;\n    }\ndefault:{\n    break;\n  }\ncase ClassConstants.TYPE_CLASS_START:{\n  index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n  break;\n}\ncase ClassConstants.TYPE_ARRAY:{\nwhile ((c=descriptor.charAt(index++)) == ClassConstants.TYPE_ARRAY) {\n}\nif (c == ClassConstants.TYPE_CLASS_START) {\n  index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n}\nbreak;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nbreak loop;\n}\n}\nparameterCount++;\nparameterSize++;\n}\n",
      "nodeType" : "LabeledStatement",
      "astNodeNumber" : 102,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5210,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String descriptor=method.getDescriptor(clazz);\n  int parameterCount=0;\n  int parameterSize=0;\n  int index=1;\n  loop:   while (true) {\n    char c=descriptor.charAt(index++);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\n        parameterSize++;\n        break;\n      }\ndefault:{\n      break;\n    }\ncase ClassConstants.TYPE_CLASS_START:{\n    index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n    break;\n  }\ncase ClassConstants.TYPE_ARRAY:{\n  while ((c=descriptor.charAt(index++)) == ClassConstants.TYPE_ARRAY) {\n  }\n  if (c == ClassConstants.TYPE_CLASS_START) {\n    index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n  }\n  break;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nbreak loop;\n}\n}\nparameterCount++;\nparameterSize++;\n}\nint parameterIndex=0;\nint parameterOffset=0;\nint referenceClassIndex=0;\nif (includeThisParameter && (method.getAccessFlags() & ClassConstants.ACC_STATIC) == 0) {\nparameterVisitor.visitParameter(clazz,method,parameterIndex++,++parameterCount,parameterOffset++,++parameterSize,ClassUtil.internalTypeFromClassName(clazz.getName()),clazz);\n}\nindex=1;\nwhile (true) {\nint newIndex=index + 1;\nint thisParameterSize=1;\nClazz referencedClass=null;\nchar c=descriptor.charAt(index);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\nthisParameterSize=2;\nbreak;\n}\ndefault:{\nbreak;\n}\ncase ClassConstants.TYPE_CLASS_START:{\nnewIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\nreferencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\nbreak;\n}\ncase ClassConstants.TYPE_ARRAY:{\nwhile ((c=descriptor.charAt(newIndex++)) == ClassConstants.TYPE_ARRAY) {\n}\nif (c == ClassConstants.TYPE_CLASS_START) {\nnewIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\nreferencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\n}\nbreak;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nreturn;\n}\n}\nparameterVisitor.visitParameter(clazz,method,parameterIndex++,parameterCount,parameterOffset,parameterSize,descriptor.substring(index,newIndex),referencedClass);\nindex=newIndex;\nparameterOffset+=thisParameterSize;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 341,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5459,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Lets the parameter visitor visit the parameters of the given method.\n */\nprivate void visitParameters(Clazz clazz,Method method,Clazz[] referencedClasses){\n  String descriptor=method.getDescriptor(clazz);\n  int parameterCount=0;\n  int parameterSize=0;\n  int index=1;\n  loop:   while (true) {\n    char c=descriptor.charAt(index++);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\n        parameterSize++;\n        break;\n      }\ndefault:{\n      break;\n    }\ncase ClassConstants.TYPE_CLASS_START:{\n    index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n    break;\n  }\ncase ClassConstants.TYPE_ARRAY:{\n  while ((c=descriptor.charAt(index++)) == ClassConstants.TYPE_ARRAY) {\n  }\n  if (c == ClassConstants.TYPE_CLASS_START) {\n    index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n  }\n  break;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nbreak loop;\n}\n}\nparameterCount++;\nparameterSize++;\n}\nint parameterIndex=0;\nint parameterOffset=0;\nint referenceClassIndex=0;\nif (includeThisParameter && (method.getAccessFlags() & ClassConstants.ACC_STATIC) == 0) {\nparameterVisitor.visitParameter(clazz,method,parameterIndex++,++parameterCount,parameterOffset++,++parameterSize,ClassUtil.internalTypeFromClassName(clazz.getName()),clazz);\n}\nindex=1;\nwhile (true) {\nint newIndex=index + 1;\nint thisParameterSize=1;\nClazz referencedClass=null;\nchar c=descriptor.charAt(index);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\nthisParameterSize=2;\nbreak;\n}\ndefault:{\nbreak;\n}\ncase ClassConstants.TYPE_CLASS_START:{\nnewIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\nreferencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\nbreak;\n}\ncase ClassConstants.TYPE_ARRAY:{\nwhile ((c=descriptor.charAt(newIndex++)) == ClassConstants.TYPE_ARRAY) {\n}\nif (c == ClassConstants.TYPE_CLASS_START) {\nnewIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\nreferencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\n}\nbreak;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nreturn;\n}\n}\nparameterVisitor.visitParameter(clazz,method,parameterIndex++,parameterCount,parameterOffset,parameterSize,descriptor.substring(index,newIndex),referencedClass);\nindex=newIndex;\nparameterOffset+=thisParameterSize;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 360,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 159,
        "startColumnNumber" : 16,
        "endLineNumber" : 159,
        "endColumnNumber" : 59
      },
      "nodeContext" : "case ClassConstants.METHOD_ARGUMENTS_CLOSE:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "char"
  }, {
    "nodeContext" : "ClassConstants.METHOD_ARGUMENTS_CLOSE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 235,
      "startColumnNumber" : 21,
      "endLineNumber" : 235,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 235,
        "startColumnNumber" : 16,
        "endLineNumber" : 235,
        "endColumnNumber" : 59
      },
      "nodeContext" : "case ClassConstants.METHOD_ARGUMENTS_CLOSE:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1738,
        "startLineNumber" : 197,
        "startColumnNumber" : 12,
        "endLineNumber" : 240,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\n    thisParameterSize=2;\n    break;\n  }\ndefault:{\n  break;\n}\ncase ClassConstants.TYPE_CLASS_START:{\nnewIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\nreferencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\nbreak;\n}\ncase ClassConstants.TYPE_ARRAY:{\nwhile ((c=descriptor.charAt(newIndex++)) == ClassConstants.TYPE_ARRAY) {\n}\nif (c == ClassConstants.TYPE_CLASS_START) {\nnewIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\nreferencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\n}\nbreak;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nreturn;\n}\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2568,
        "startLineNumber" : 191,
        "startColumnNumber" : 8,
        "endLineNumber" : 254,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int newIndex=index + 1;\n  int thisParameterSize=1;\n  Clazz referencedClass=null;\n  char c=descriptor.charAt(index);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\n      thisParameterSize=2;\n      break;\n    }\ndefault:{\n    break;\n  }\ncase ClassConstants.TYPE_CLASS_START:{\n  newIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\n  referencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\n  break;\n}\ncase ClassConstants.TYPE_ARRAY:{\nwhile ((c=descriptor.charAt(newIndex++)) == ClassConstants.TYPE_ARRAY) {\n}\nif (c == ClassConstants.TYPE_CLASS_START) {\n  newIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\n  referencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\n}\nbreak;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nreturn;\n}\n}\nparameterVisitor.visitParameter(clazz,method,parameterIndex++,parameterCount,parameterOffset,parameterSize,descriptor.substring(index,newIndex),referencedClass);\nindex=newIndex;\nparameterOffset+=thisParameterSize;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2589,
        "startLineNumber" : 190,
        "startColumnNumber" : 8,
        "endLineNumber" : 254,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (true) {\n  int newIndex=index + 1;\n  int thisParameterSize=1;\n  Clazz referencedClass=null;\n  char c=descriptor.charAt(index);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\n      thisParameterSize=2;\n      break;\n    }\ndefault:{\n    break;\n  }\ncase ClassConstants.TYPE_CLASS_START:{\n  newIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\n  referencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\n  break;\n}\ncase ClassConstants.TYPE_ARRAY:{\nwhile ((c=descriptor.charAt(newIndex++)) == ClassConstants.TYPE_ARRAY) {\n}\nif (c == ClassConstants.TYPE_CLASS_START) {\n  newIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\n  referencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\n}\nbreak;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nreturn;\n}\n}\nparameterVisitor.visitParameter(clazz,method,parameterIndex++,parameterCount,parameterOffset,parameterSize,descriptor.substring(index,newIndex),referencedClass);\nindex=newIndex;\nparameterOffset+=thisParameterSize;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 160,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5210,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String descriptor=method.getDescriptor(clazz);\n  int parameterCount=0;\n  int parameterSize=0;\n  int index=1;\n  loop:   while (true) {\n    char c=descriptor.charAt(index++);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\n        parameterSize++;\n        break;\n      }\ndefault:{\n      break;\n    }\ncase ClassConstants.TYPE_CLASS_START:{\n    index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n    break;\n  }\ncase ClassConstants.TYPE_ARRAY:{\n  while ((c=descriptor.charAt(index++)) == ClassConstants.TYPE_ARRAY) {\n  }\n  if (c == ClassConstants.TYPE_CLASS_START) {\n    index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n  }\n  break;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nbreak loop;\n}\n}\nparameterCount++;\nparameterSize++;\n}\nint parameterIndex=0;\nint parameterOffset=0;\nint referenceClassIndex=0;\nif (includeThisParameter && (method.getAccessFlags() & ClassConstants.ACC_STATIC) == 0) {\nparameterVisitor.visitParameter(clazz,method,parameterIndex++,++parameterCount,parameterOffset++,++parameterSize,ClassUtil.internalTypeFromClassName(clazz.getName()),clazz);\n}\nindex=1;\nwhile (true) {\nint newIndex=index + 1;\nint thisParameterSize=1;\nClazz referencedClass=null;\nchar c=descriptor.charAt(index);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\nthisParameterSize=2;\nbreak;\n}\ndefault:{\nbreak;\n}\ncase ClassConstants.TYPE_CLASS_START:{\nnewIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\nreferencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\nbreak;\n}\ncase ClassConstants.TYPE_ARRAY:{\nwhile ((c=descriptor.charAt(newIndex++)) == ClassConstants.TYPE_ARRAY) {\n}\nif (c == ClassConstants.TYPE_CLASS_START) {\nnewIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\nreferencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\n}\nbreak;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nreturn;\n}\n}\nparameterVisitor.visitParameter(clazz,method,parameterIndex++,parameterCount,parameterOffset,parameterSize,descriptor.substring(index,newIndex),referencedClass);\nindex=newIndex;\nparameterOffset+=thisParameterSize;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 341,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5459,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Lets the parameter visitor visit the parameters of the given method.\n */\nprivate void visitParameters(Clazz clazz,Method method,Clazz[] referencedClasses){\n  String descriptor=method.getDescriptor(clazz);\n  int parameterCount=0;\n  int parameterSize=0;\n  int index=1;\n  loop:   while (true) {\n    char c=descriptor.charAt(index++);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\n        parameterSize++;\n        break;\n      }\ndefault:{\n      break;\n    }\ncase ClassConstants.TYPE_CLASS_START:{\n    index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n    break;\n  }\ncase ClassConstants.TYPE_ARRAY:{\n  while ((c=descriptor.charAt(index++)) == ClassConstants.TYPE_ARRAY) {\n  }\n  if (c == ClassConstants.TYPE_CLASS_START) {\n    index=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,index) + 1;\n  }\n  break;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nbreak loop;\n}\n}\nparameterCount++;\nparameterSize++;\n}\nint parameterIndex=0;\nint parameterOffset=0;\nint referenceClassIndex=0;\nif (includeThisParameter && (method.getAccessFlags() & ClassConstants.ACC_STATIC) == 0) {\nparameterVisitor.visitParameter(clazz,method,parameterIndex++,++parameterCount,parameterOffset++,++parameterSize,ClassUtil.internalTypeFromClassName(clazz.getName()),clazz);\n}\nindex=1;\nwhile (true) {\nint newIndex=index + 1;\nint thisParameterSize=1;\nClazz referencedClass=null;\nchar c=descriptor.charAt(index);\nswitch (c) {\ncase ClassConstants.TYPE_LONG:case ClassConstants.TYPE_DOUBLE:{\nthisParameterSize=2;\nbreak;\n}\ndefault:{\nbreak;\n}\ncase ClassConstants.TYPE_CLASS_START:{\nnewIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\nreferencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\nbreak;\n}\ncase ClassConstants.TYPE_ARRAY:{\nwhile ((c=descriptor.charAt(newIndex++)) == ClassConstants.TYPE_ARRAY) {\n}\nif (c == ClassConstants.TYPE_CLASS_START) {\nnewIndex=descriptor.indexOf(ClassConstants.TYPE_CLASS_END,newIndex) + 1;\nreferencedClass=referencedClasses == null ? null : referencedClasses[referenceClassIndex++];\n}\nbreak;\n}\ncase ClassConstants.METHOD_ARGUMENTS_CLOSE:{\nreturn;\n}\n}\nparameterVisitor.visitParameter(clazz,method,parameterIndex++,parameterCount,parameterOffset,parameterSize,descriptor.substring(index,newIndex),referencedClass);\nindex=newIndex;\nparameterOffset+=thisParameterSize;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 360,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 235,
        "startColumnNumber" : 16,
        "endLineNumber" : 235,
        "endColumnNumber" : 59
      },
      "nodeContext" : "case ClassConstants.METHOD_ARGUMENTS_CLOSE:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 159,
    "startColumnNumber" : 21,
    "endLineNumber" : 159,
    "endColumnNumber" : 58
  }, {
    "charLength" : 37,
    "startLineNumber" : 235,
    "startColumnNumber" : 21,
    "endLineNumber" : 235,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}