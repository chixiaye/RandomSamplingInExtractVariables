{
  "id" : 291,
  "expression" : "servletPaths.stream()",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/WebServer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "servletPaths.stream()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 153,
      "startColumnNumber" : 40,
      "endLineNumber" : 153,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 153,
        "startColumnNumber" : 40,
        "endLineNumber" : 153,
        "endColumnNumber" : 97
      },
      "nodeContext" : "servletPaths.stream().filter(p -> p.startsWith(basePath))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 153,
        "startColumnNumber" : 40,
        "endLineNumber" : 153,
        "endColumnNumber" : 109
      },
      "nodeContext" : "servletPaths.stream().filter(p -> p.startsWith(basePath)).findFirst()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 153,
        "startColumnNumber" : 25,
        "endLineNumber" : 153,
        "endColumnNumber" : 109
      },
      "nodeContext" : "existingPath=servletPaths.stream().filter(p -> p.startsWith(basePath)).findFirst()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 110
      },
      "nodeContext" : "Optional<String> existingPath=servletPaths.stream().filter(p -> p.startsWith(basePath)).findFirst();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1252,
        "startLineNumber" : 152,
        "startColumnNumber" : 143,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<String> existingPath=servletPaths.stream().filter(p -> p.startsWith(basePath)).findFirst();\n  if (existingPath.isPresent()) {\n    throw new IllegalArgumentException(String.format(\"Cannot add servlet at %s, path %s already exists\",basePath,existingPath.get()));\n  }\n  servletPaths.add(basePath);\n  ServletContextHandler context=new ServletContextHandler(ServletContextHandler.SESSIONS);\n  context.setContextPath(basePath);\n  context.addServlet(servletHolder,\"/*\");\n  for (  Pair<String,Object> attribute : attributes) {\n    context.setAttribute(attribute.getLeft(),attribute.getRight());\n  }\n  if (config.isAuthenticationEnabled() && requireAuthentication) {\n    FilterHolder filter=new FilterHolder(new AuthenticationFilter(authenticationService));\n    context.addFilter(filter,MATCH_ALL,EnumSet.allOf(DispatcherType.class));\n  }\n  if (config.isHttpRequestsLimitEnabled()) {\n    context.addFilter(new FilterHolder(new RateLimitingFilter(config.getHttpRequestsMaxPerSecond())),MATCH_ALL,EnumSet.allOf(DispatcherType.class));\n  }\n  handlers.add(context);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1391,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void addServlet(String basePath,ServletHolder servletHolder,List<Pair<String,Object>> attributes,boolean requireAuthentication){\n  Optional<String> existingPath=servletPaths.stream().filter(p -> p.startsWith(basePath)).findFirst();\n  if (existingPath.isPresent()) {\n    throw new IllegalArgumentException(String.format(\"Cannot add servlet at %s, path %s already exists\",basePath,existingPath.get()));\n  }\n  servletPaths.add(basePath);\n  ServletContextHandler context=new ServletContextHandler(ServletContextHandler.SESSIONS);\n  context.setContextPath(basePath);\n  context.addServlet(servletHolder,\"/*\");\n  for (  Pair<String,Object> attribute : attributes) {\n    context.setAttribute(attribute.getLeft(),attribute.getRight());\n  }\n  if (config.isAuthenticationEnabled() && requireAuthentication) {\n    FilterHolder filter=new FilterHolder(new AuthenticationFilter(authenticationService));\n    context.addFilter(filter,MATCH_ALL,EnumSet.allOf(DispatcherType.class));\n  }\n  if (config.isHttpRequestsLimitEnabled()) {\n    context.addFilter(new FilterHolder(new RateLimitingFilter(config.getHttpRequestsMaxPerSecond())),MATCH_ALL,EnumSet.allOf(DispatcherType.class));\n  }\n  handlers.add(context);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 110
      },
      "nodeContext" : "Optional<String> existingPath=servletPaths.stream().filter(p -> p.startsWith(basePath)).findFirst();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.util.stream.Stream<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 153,
    "startColumnNumber" : 40,
    "endLineNumber" : 153,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}