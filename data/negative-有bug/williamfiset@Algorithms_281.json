{
  "id" : 281,
  "expression" : "minValue",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/priorityqueue/MinIndexedBinaryHeapTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "minValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 152,
      "startColumnNumber" : 17,
      "endLineNumber" : 152,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 152,
        "startColumnNumber" : 6,
        "endLineNumber" : 152,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertThat(minValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 152,
        "startColumnNumber" : 6,
        "endLineNumber" : 152,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertThat(minValue).isEqualTo(pairs[i][1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 152,
        "startColumnNumber" : 6,
        "endLineNumber" : 152,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(minValue).isEqualTo(pairs[i][1]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 149,
        "startColumnNumber" : 32,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(pq.valueOf(pairs[i][0])).isEqualTo(pairs[i][1]);\n  minValue=pq.peekMinValue();\n  assertThat(minValue).isEqualTo(pairs[i][1]);\n  minValue=pq.pollMinValue();\n  assertThat(minValue).isEqualTo(pairs[i][1]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < n; i++) {\n  assertThat(pq.valueOf(pairs[i][0])).isEqualTo(pairs[i][1]);\n  minValue=pq.peekMinValue();\n  assertThat(minValue).isEqualTo(pairs[i][1]);\n  minValue=pq.pollMinValue();\n  assertThat(minValue).isEqualTo(pairs[i][1]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 127,
        "startColumnNumber" : 40,
        "endLineNumber" : 156,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Integer[][] pairs={{4,1},{7,5},{1,6},{5,8},{3,7},{6,9},{8,0},{2,4},{9,3},{0,2}};\n  sortPairsByValue(pairs);\n  int n=pairs.length;\n  MinIndexedBinaryHeap<Integer> pq=new MinIndexedBinaryHeap<Integer>(n);\n  for (int i=0; i < n; i++)   pq.insert(pairs[i][0],pairs[i][1]);\n  Integer minValue;\n  for (int i=0; i < n; i++) {\n    assertThat(pq.valueOf(pairs[i][0])).isEqualTo(pairs[i][1]);\n    minValue=pq.peekMinValue();\n    assertThat(minValue).isEqualTo(pairs[i][1]);\n    minValue=pq.pollMinValue();\n    assertThat(minValue).isEqualTo(pairs[i][1]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 792,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 156,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPeekAndPollMinValue(){\n  Integer[][] pairs={{4,1},{7,5},{1,6},{5,8},{3,7},{6,9},{8,0},{2,4},{9,3},{0,2}};\n  sortPairsByValue(pairs);\n  int n=pairs.length;\n  MinIndexedBinaryHeap<Integer> pq=new MinIndexedBinaryHeap<Integer>(n);\n  for (int i=0; i < n; i++)   pq.insert(pairs[i][0],pairs[i][1]);\n  Integer minValue;\n  for (int i=0; i < n; i++) {\n    assertThat(pq.valueOf(pairs[i][0])).isEqualTo(pairs[i][1]);\n    minValue=pq.peekMinValue();\n    assertThat(minValue).isEqualTo(pairs[i][1]);\n    minValue=pq.pollMinValue();\n    assertThat(minValue).isEqualTo(pairs[i][1]);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 152,
        "startColumnNumber" : 6,
        "endLineNumber" : 152,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(minValue).isEqualTo(pairs[i][1]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  }, {
    "nodeContext" : "minValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 154,
      "startColumnNumber" : 17,
      "endLineNumber" : 154,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 154,
        "startColumnNumber" : 6,
        "endLineNumber" : 154,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertThat(minValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 154,
        "startColumnNumber" : 6,
        "endLineNumber" : 154,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertThat(minValue).isEqualTo(pairs[i][1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 154,
        "startColumnNumber" : 6,
        "endLineNumber" : 154,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(minValue).isEqualTo(pairs[i][1]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 149,
        "startColumnNumber" : 32,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(pq.valueOf(pairs[i][0])).isEqualTo(pairs[i][1]);\n  minValue=pq.peekMinValue();\n  assertThat(minValue).isEqualTo(pairs[i][1]);\n  minValue=pq.pollMinValue();\n  assertThat(minValue).isEqualTo(pairs[i][1]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < n; i++) {\n  assertThat(pq.valueOf(pairs[i][0])).isEqualTo(pairs[i][1]);\n  minValue=pq.peekMinValue();\n  assertThat(minValue).isEqualTo(pairs[i][1]);\n  minValue=pq.pollMinValue();\n  assertThat(minValue).isEqualTo(pairs[i][1]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 127,
        "startColumnNumber" : 40,
        "endLineNumber" : 156,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Integer[][] pairs={{4,1},{7,5},{1,6},{5,8},{3,7},{6,9},{8,0},{2,4},{9,3},{0,2}};\n  sortPairsByValue(pairs);\n  int n=pairs.length;\n  MinIndexedBinaryHeap<Integer> pq=new MinIndexedBinaryHeap<Integer>(n);\n  for (int i=0; i < n; i++)   pq.insert(pairs[i][0],pairs[i][1]);\n  Integer minValue;\n  for (int i=0; i < n; i++) {\n    assertThat(pq.valueOf(pairs[i][0])).isEqualTo(pairs[i][1]);\n    minValue=pq.peekMinValue();\n    assertThat(minValue).isEqualTo(pairs[i][1]);\n    minValue=pq.pollMinValue();\n    assertThat(minValue).isEqualTo(pairs[i][1]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 792,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 156,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPeekAndPollMinValue(){\n  Integer[][] pairs={{4,1},{7,5},{1,6},{5,8},{3,7},{6,9},{8,0},{2,4},{9,3},{0,2}};\n  sortPairsByValue(pairs);\n  int n=pairs.length;\n  MinIndexedBinaryHeap<Integer> pq=new MinIndexedBinaryHeap<Integer>(n);\n  for (int i=0; i < n; i++)   pq.insert(pairs[i][0],pairs[i][1]);\n  Integer minValue;\n  for (int i=0; i < n; i++) {\n    assertThat(pq.valueOf(pairs[i][0])).isEqualTo(pairs[i][1]);\n    minValue=pq.peekMinValue();\n    assertThat(minValue).isEqualTo(pairs[i][1]);\n    minValue=pq.pollMinValue();\n    assertThat(minValue).isEqualTo(pairs[i][1]);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 154,
        "startColumnNumber" : 6,
        "endLineNumber" : 154,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(minValue).isEqualTo(pairs[i][1]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 152,
    "startColumnNumber" : 17,
    "endLineNumber" : 152,
    "endColumnNumber" : 25
  }, {
    "charLength" : 8,
    "startLineNumber" : 154,
    "startColumnNumber" : 17,
    "endLineNumber" : 154,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}