{
  "id" : 317,
  "expression" : "i",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/tests/gdx-tests/src/com/badlogic/gdx/tests/extensions/FreeTypeDisposeTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 37,
      "startColumnNumber" : 19,
      "endLineNumber" : 37,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 37,
        "startColumnNumber" : 19,
        "endLineNumber" : 37,
        "endColumnNumber" : 25
      },
      "nodeContext" : "i < 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 37,
        "startColumnNumber" : 3,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  if (font != null) {\n    font.dispose();\n  }\n  FileHandle fontFile=Gdx.files.internal(\"data/arial.ttf\");\n  FreeTypeFontGenerator generator=new FreeTypeFontGenerator(fontFile);\n  FreeTypeFontParameter parameter=new FreeTypeFontParameter();\n  parameter.size=15;\n  font=generator.generateFont(parameter);\n  generator.dispose();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 604,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < 10; i++) {\n    if (font != null) {\n      font.dispose();\n    }\n    FileHandle fontFile=Gdx.files.internal(\"data/arial.ttf\");\n    FreeTypeFontGenerator generator=new FreeTypeFontGenerator(fontFile);\n    FreeTypeFontParameter parameter=new FreeTypeFontParameter();\n    parameter.size=15;\n    font=generator.generateFont(parameter);\n    generator.dispose();\n  }\n  for (int i=0; i < 10; i++)   System.gc();\n  Gdx.app.log(\"FreeTypeDisposeTest\",\"generated 10 fonts\");\n  Gdx.app.log(\"FreeTypeDisposeTest\",Gdx.app.getJavaHeap() + \", \" + Gdx.app.getNativeHeap());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (Gdx.input.justTouched()) {\n  for (int i=0; i < 10; i++) {\n    if (font != null) {\n      font.dispose();\n    }\n    FileHandle fontFile=Gdx.files.internal(\"data/arial.ttf\");\n    FreeTypeFontGenerator generator=new FreeTypeFontGenerator(fontFile);\n    FreeTypeFontParameter parameter=new FreeTypeFontParameter();\n    parameter.size=15;\n    font=generator.generateFont(parameter);\n    generator.dispose();\n  }\n  for (int i=0; i < 10; i++)   System.gc();\n  Gdx.app.log(\"FreeTypeDisposeTest\",\"generated 10 fonts\");\n  Gdx.app.log(\"FreeTypeDisposeTest\",Gdx.app.getJavaHeap() + \", \" + Gdx.app.getNativeHeap());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 115,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 640,
        "startLineNumber" : 35,
        "startColumnNumber" : 23,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (Gdx.input.justTouched()) {\n    for (int i=0; i < 10; i++) {\n      if (font != null) {\n        font.dispose();\n      }\n      FileHandle fontFile=Gdx.files.internal(\"data/arial.ttf\");\n      FreeTypeFontGenerator generator=new FreeTypeFontGenerator(fontFile);\n      FreeTypeFontParameter parameter=new FreeTypeFontParameter();\n      parameter.size=15;\n      font=generator.generateFont(parameter);\n      generator.dispose();\n    }\n    for (int i=0; i < 10; i++)     System.gc();\n    Gdx.app.log(\"FreeTypeDisposeTest\",\"generated 10 fonts\");\n    Gdx.app.log(\"FreeTypeDisposeTest\",Gdx.app.getJavaHeap() + \", \" + Gdx.app.getNativeHeap());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 35,
        "startColumnNumber" : 1,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void render(){\n  if (Gdx.input.justTouched()) {\n    for (int i=0; i < 10; i++) {\n      if (font != null) {\n        font.dispose();\n      }\n      FileHandle fontFile=Gdx.files.internal(\"data/arial.ttf\");\n      FreeTypeFontGenerator generator=new FreeTypeFontGenerator(fontFile);\n      FreeTypeFontParameter parameter=new FreeTypeFontParameter();\n      parameter.size=15;\n      font=generator.generateFont(parameter);\n      generator.dispose();\n    }\n    for (int i=0; i < 10; i++)     System.gc();\n    Gdx.app.log(\"FreeTypeDisposeTest\",\"generated 10 fonts\");\n    Gdx.app.log(\"FreeTypeDisposeTest\",Gdx.app.getJavaHeap() + \", \" + Gdx.app.getNativeHeap());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 37,
        "startColumnNumber" : 19,
        "endLineNumber" : 37,
        "endColumnNumber" : 25
      },
      "nodeContext" : "i < 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 50,
      "startColumnNumber" : 19,
      "endLineNumber" : 50,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 50,
        "startColumnNumber" : 19,
        "endLineNumber" : 50,
        "endColumnNumber" : 25
      },
      "nodeContext" : "i < 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 50,
        "startColumnNumber" : 3,
        "endLineNumber" : 51,
        "endColumnNumber" : 16
      },
      "nodeContext" : "for (int i=0; i < 10; i++) System.gc();\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 604,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < 10; i++) {\n    if (font != null) {\n      font.dispose();\n    }\n    FileHandle fontFile=Gdx.files.internal(\"data/arial.ttf\");\n    FreeTypeFontGenerator generator=new FreeTypeFontGenerator(fontFile);\n    FreeTypeFontParameter parameter=new FreeTypeFontParameter();\n    parameter.size=15;\n    font=generator.generateFont(parameter);\n    generator.dispose();\n  }\n  for (int i=0; i < 10; i++)   System.gc();\n  Gdx.app.log(\"FreeTypeDisposeTest\",\"generated 10 fonts\");\n  Gdx.app.log(\"FreeTypeDisposeTest\",Gdx.app.getJavaHeap() + \", \" + Gdx.app.getNativeHeap());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (Gdx.input.justTouched()) {\n  for (int i=0; i < 10; i++) {\n    if (font != null) {\n      font.dispose();\n    }\n    FileHandle fontFile=Gdx.files.internal(\"data/arial.ttf\");\n    FreeTypeFontGenerator generator=new FreeTypeFontGenerator(fontFile);\n    FreeTypeFontParameter parameter=new FreeTypeFontParameter();\n    parameter.size=15;\n    font=generator.generateFont(parameter);\n    generator.dispose();\n  }\n  for (int i=0; i < 10; i++)   System.gc();\n  Gdx.app.log(\"FreeTypeDisposeTest\",\"generated 10 fonts\");\n  Gdx.app.log(\"FreeTypeDisposeTest\",Gdx.app.getJavaHeap() + \", \" + Gdx.app.getNativeHeap());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 115,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 640,
        "startLineNumber" : 35,
        "startColumnNumber" : 23,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (Gdx.input.justTouched()) {\n    for (int i=0; i < 10; i++) {\n      if (font != null) {\n        font.dispose();\n      }\n      FileHandle fontFile=Gdx.files.internal(\"data/arial.ttf\");\n      FreeTypeFontGenerator generator=new FreeTypeFontGenerator(fontFile);\n      FreeTypeFontParameter parameter=new FreeTypeFontParameter();\n      parameter.size=15;\n      font=generator.generateFont(parameter);\n      generator.dispose();\n    }\n    for (int i=0; i < 10; i++)     System.gc();\n    Gdx.app.log(\"FreeTypeDisposeTest\",\"generated 10 fonts\");\n    Gdx.app.log(\"FreeTypeDisposeTest\",Gdx.app.getJavaHeap() + \", \" + Gdx.app.getNativeHeap());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 35,
        "startColumnNumber" : 1,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void render(){\n  if (Gdx.input.justTouched()) {\n    for (int i=0; i < 10; i++) {\n      if (font != null) {\n        font.dispose();\n      }\n      FileHandle fontFile=Gdx.files.internal(\"data/arial.ttf\");\n      FreeTypeFontGenerator generator=new FreeTypeFontGenerator(fontFile);\n      FreeTypeFontParameter parameter=new FreeTypeFontParameter();\n      parameter.size=15;\n      font=generator.generateFont(parameter);\n      generator.dispose();\n    }\n    for (int i=0; i < 10; i++)     System.gc();\n    Gdx.app.log(\"FreeTypeDisposeTest\",\"generated 10 fonts\");\n    Gdx.app.log(\"FreeTypeDisposeTest\",Gdx.app.getJavaHeap() + \", \" + Gdx.app.getNativeHeap());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 50,
        "startColumnNumber" : 19,
        "endLineNumber" : 50,
        "endColumnNumber" : 25
      },
      "nodeContext" : "i < 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 37,
    "startColumnNumber" : 19,
    "endLineNumber" : 37,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 50,
    "startColumnNumber" : 19,
    "endLineNumber" : 50,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}