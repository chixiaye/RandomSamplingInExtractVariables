{
  "id" : 77,
  "expression" : "getScalar(vn)",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/hover/FunctionSignatureDecompilerHover.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getScalar(vn)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 99,
      "startColumnNumber" : 19,
      "endLineNumber" : 99,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 99,
        "startColumnNumber" : 10,
        "endLineNumber" : 99,
        "endColumnNumber" : 32
      },
      "nodeContext" : "scalar=getScalar(vn)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 99,
        "startColumnNumber" : 3,
        "endLineNumber" : 99,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Scalar scalar=getScalar(vn);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 499,
        "startLineNumber" : 95,
        "startColumnNumber" : 48,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Varnode vn=((ClangVariableToken)token).getVarnode();\n  Scalar scalar=getScalar(vn);\n  Function function=getFunctionAtAddress(program,scalar);\n  if (function != null) {\n    String content=ToolTipUtils.getToolTipText(function,false);\n    content=content.replaceFirst(HTML,HTML + italic(bold(\"Reference to Function\")) + \"<br/><br/>\");\n    return createTooltipComponent(content);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 95,
        "startColumnNumber" : 7,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (token instanceof ClangVariableToken) {\n  Varnode vn=((ClangVariableToken)token).getVarnode();\n  Scalar scalar=getScalar(vn);\n  Function function=getFunctionAtAddress(program,scalar);\n  if (function != null) {\n    String content=ToolTipUtils.getToolTipText(function,false);\n    content=content.replaceFirst(HTML,HTML + italic(bold(\"Reference to Function\")) + \"<br/><br/>\");\n    return createTooltipComponent(content);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 896,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (token instanceof ClangFuncNameToken) {\n  Function function=DecompilerUtils.getFunction(program,(ClangFuncNameToken)token);\n  if (function == null) {\n    return null;\n  }\n  String content=ToolTipUtils.getToolTipText(function,false);\n  return createTooltipComponent(content);\n}\n else if (token instanceof ClangVariableToken) {\n  Varnode vn=((ClangVariableToken)token).getVarnode();\n  Scalar scalar=getScalar(vn);\n  Function function=getFunctionAtAddress(program,scalar);\n  if (function != null) {\n    String content=ToolTipUtils.getToolTipText(function,false);\n    content=content.replaceFirst(HTML,HTML + italic(bold(\"Reference to Function\")) + \"<br/><br/>\");\n    return createTooltipComponent(content);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 109,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1109,
        "startLineNumber" : 75,
        "startColumnNumber" : 45,
        "endLineNumber" : 110,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (!enabled) {\n    return null;\n  }\n  if (!(field instanceof ClangTextField)) {\n    return null;\n  }\n  ClangToken token=((ClangTextField)field).getToken(fieldLocation);\n  if (token instanceof ClangFuncNameToken) {\n    Function function=DecompilerUtils.getFunction(program,(ClangFuncNameToken)token);\n    if (function == null) {\n      return null;\n    }\n    String content=ToolTipUtils.getToolTipText(function,false);\n    return createTooltipComponent(content);\n  }\n else   if (token instanceof ClangVariableToken) {\n    Varnode vn=((ClangVariableToken)token).getVarnode();\n    Scalar scalar=getScalar(vn);\n    Function function=getFunctionAtAddress(program,scalar);\n    if (function != null) {\n      String content=ToolTipUtils.getToolTipText(function,false);\n      content=content.replaceFirst(HTML,HTML + italic(bold(\"Reference to Function\")) + \"<br/><br/>\");\n      return createTooltipComponent(content);\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 110,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public JComponent getHoverComponent(Program program,ProgramLocation programLocation,FieldLocation fieldLocation,Field field){\n  if (!enabled) {\n    return null;\n  }\n  if (!(field instanceof ClangTextField)) {\n    return null;\n  }\n  ClangToken token=((ClangTextField)field).getToken(fieldLocation);\n  if (token instanceof ClangFuncNameToken) {\n    Function function=DecompilerUtils.getFunction(program,(ClangFuncNameToken)token);\n    if (function == null) {\n      return null;\n    }\n    String content=ToolTipUtils.getToolTipText(function,false);\n    return createTooltipComponent(content);\n  }\n else   if (token instanceof ClangVariableToken) {\n    Varnode vn=((ClangVariableToken)token).getVarnode();\n    Scalar scalar=getScalar(vn);\n    Function function=getFunctionAtAddress(program,scalar);\n    if (function != null) {\n      String content=ToolTipUtils.getToolTipText(function,false);\n      content=content.replaceFirst(HTML,HTML + italic(bold(\"Reference to Function\")) + \"<br/><br/>\");\n      return createTooltipComponent(content);\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 99,
        "startColumnNumber" : 3,
        "endLineNumber" : 99,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Scalar scalar=getScalar(vn);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "ghidra.program.model.scalar.Scalar"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 99,
    "startColumnNumber" : 19,
    "endLineNumber" : 99,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}