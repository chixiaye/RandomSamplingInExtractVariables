{
  "id" : 341,
  "expression" : "perChannel != null",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/handler/src/main/java/io/netty/handler/traffic/GlobalTrafficShapingHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "perChannel != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 267,
      "startColumnNumber" : 12,
      "endLineNumber" : 267,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 267,
        "startColumnNumber" : 8,
        "endLineNumber" : 288,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (perChannel != null) {\nsynchronized (perChannel) {\n    if (channel.isActive()) {\n      for (      ToSend toSend : perChannel.messagesQueue) {\n        long size=calculateSize(toSend.toSend);\n        trafficCounter.bytesRealWriteFlowControl(size);\n        perChannel.queueSize-=size;\n        queuesSize.addAndGet(-size);\n        ctx.write(toSend.toSend).cascadeTo(toSend.promise);\n      }\n    }\n else {\n      queuesSize.addAndGet(-perChannel.queueSize);\n      for (      ToSend toSend : perChannel.messagesQueue) {\n        if (toSend.toSend instanceof ByteBufConvertible) {\n          ((ByteBufConvertible)toSend.toSend).asByteBuf().release();\n        }\n      }\n    }\n    perChannel.messagesQueue.clear();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1327,
        "startLineNumber" : 263,
        "startColumnNumber" : 75,
        "endLineNumber" : 292,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Channel channel=ctx.channel();\n  Integer key=channel.hashCode();\n  PerChannel perChannel=channelQueues.remove(key);\n  if (perChannel != null) {\nsynchronized (perChannel) {\n      if (channel.isActive()) {\n        for (        ToSend toSend : perChannel.messagesQueue) {\n          long size=calculateSize(toSend.toSend);\n          trafficCounter.bytesRealWriteFlowControl(size);\n          perChannel.queueSize-=size;\n          queuesSize.addAndGet(-size);\n          ctx.write(toSend.toSend).cascadeTo(toSend.promise);\n        }\n      }\n else {\n        queuesSize.addAndGet(-perChannel.queueSize);\n        for (        ToSend toSend : perChannel.messagesQueue) {\n          if (toSend.toSend instanceof ByteBufConvertible) {\n            ((ByteBufConvertible)toSend.toSend).asByteBuf().release();\n          }\n        }\n      }\n      perChannel.messagesQueue.clear();\n    }\n  }\n  releaseWriteSuspended(ctx);\n  releaseReadSuspended(ctx);\n  super.handlerRemoved(ctx);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1413,
        "startLineNumber" : 262,
        "startColumnNumber" : 4,
        "endLineNumber" : 292,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handlerRemoved(ChannelHandlerContext ctx) throws Exception {\n  Channel channel=ctx.channel();\n  Integer key=channel.hashCode();\n  PerChannel perChannel=channelQueues.remove(key);\n  if (perChannel != null) {\nsynchronized (perChannel) {\n      if (channel.isActive()) {\n        for (        ToSend toSend : perChannel.messagesQueue) {\n          long size=calculateSize(toSend.toSend);\n          trafficCounter.bytesRealWriteFlowControl(size);\n          perChannel.queueSize-=size;\n          queuesSize.addAndGet(-size);\n          ctx.write(toSend.toSend).cascadeTo(toSend.promise);\n        }\n      }\n else {\n        queuesSize.addAndGet(-perChannel.queueSize);\n        for (        ToSend toSend : perChannel.messagesQueue) {\n          if (toSend.toSend instanceof ByteBufConvertible) {\n            ((ByteBufConvertible)toSend.toSend).asByteBuf().release();\n          }\n        }\n      }\n      perChannel.messagesQueue.clear();\n    }\n  }\n  releaseWriteSuspended(ctx);\n  releaseReadSuspended(ctx);\n  super.handlerRemoved(ctx);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 267,
        "startColumnNumber" : 8,
        "endLineNumber" : 288,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (perChannel != null) {\nsynchronized (perChannel) {\n    if (channel.isActive()) {\n      for (      ToSend toSend : perChannel.messagesQueue) {\n        long size=calculateSize(toSend.toSend);\n        trafficCounter.bytesRealWriteFlowControl(size);\n        perChannel.queueSize-=size;\n        queuesSize.addAndGet(-size);\n        ctx.write(toSend.toSend).cascadeTo(toSend.promise);\n      }\n    }\n else {\n      queuesSize.addAndGet(-perChannel.queueSize);\n      for (      ToSend toSend : perChannel.messagesQueue) {\n        if (toSend.toSend instanceof ByteBufConvertible) {\n          ((ByteBufConvertible)toSend.toSend).asByteBuf().release();\n        }\n      }\n    }\n    perChannel.messagesQueue.clear();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 17
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 267,
    "startColumnNumber" : 12,
    "endLineNumber" : 267,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}