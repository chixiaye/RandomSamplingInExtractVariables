{
  "id" : 496,
  "expression" : "ec",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/model/LoadBalancer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ec",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 91,
      "startColumnNumber" : 30,
      "endLineNumber" : 91,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 48
      },
      "nodeContext" : "toAdd.put(ec,ec.size() * 100)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 49
      },
      "nodeContext" : "toAdd.put(ec,ec.size() * 100);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 90,
        "startColumnNumber" : 48,
        "endLineNumber" : 92,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  toAdd.put(ec,ec.size() * 100);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (ExecutorChunk ec : chunks) {\n  toAdd.put(ec,ec.size() * 100);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 84,
        "startColumnNumber" : 50,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n  List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n  Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n  for (  ExecutorChunk ec : chunks) {\n    toAdd.put(ec,ec.size() * 100);\n  }\n  hash.addAll(toAdd);\n  hashes.add(hash);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 669,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < ws.works.size(); i++) {\n  ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n  List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n  Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n  for (  ExecutorChunk ec : chunks) {\n    toAdd.put(ec,ec.size() * 100);\n  }\n  hash.addAll(toAdd);\n  hashes.add(hash);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 88,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 81,
        "startColumnNumber" : 59,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<ConsistentHash<ExecutorChunk>> hashes=new ArrayList<>(ws.works.size());\n  for (int i=0; i < ws.works.size(); i++) {\n    ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n    List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n    Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n    for (    ExecutorChunk ec : chunks) {\n      toAdd.put(ec,ec.size() * 100);\n    }\n    hash.addAll(toAdd);\n    hashes.add(hash);\n  }\n  Mapping m=ws.new Mapping();\n  assert m.size() == ws.works.size();\n  if (assignGreedily(m,task,hashes,0)) {\n    assert m.isCompletelyValid();\n    return m;\n  }\n else   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Mapping map(Task task,MappingWorksheet ws){\n  List<ConsistentHash<ExecutorChunk>> hashes=new ArrayList<>(ws.works.size());\n  for (int i=0; i < ws.works.size(); i++) {\n    ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n    List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n    Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n    for (    ExecutorChunk ec : chunks) {\n      toAdd.put(ec,ec.size() * 100);\n    }\n    hash.addAll(toAdd);\n    hashes.add(hash);\n  }\n  Mapping m=ws.new Mapping();\n  assert m.size() == ws.works.size();\n  if (assignGreedily(m,task,hashes,0)) {\n    assert m.isCompletelyValid();\n    return m;\n  }\n else   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 49
      },
      "nodeContext" : "toAdd.put(ec,ec.size() * 100);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "hudson.model.queue.MappingWorksheet.ExecutorChunk"
  }, {
    "nodeContext" : "ec",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 91,
      "startColumnNumber" : 34,
      "endLineNumber" : 91,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 91,
        "startColumnNumber" : 34,
        "endLineNumber" : 91,
        "endColumnNumber" : 43
      },
      "nodeContext" : "ec.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 91,
        "startColumnNumber" : 34,
        "endLineNumber" : 91,
        "endColumnNumber" : 47
      },
      "nodeContext" : "ec.size() * 100",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 48
      },
      "nodeContext" : "toAdd.put(ec,ec.size() * 100)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 49
      },
      "nodeContext" : "toAdd.put(ec,ec.size() * 100);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 90,
        "startColumnNumber" : 48,
        "endLineNumber" : 92,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  toAdd.put(ec,ec.size() * 100);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 92,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (ExecutorChunk ec : chunks) {\n  toAdd.put(ec,ec.size() * 100);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 84,
        "startColumnNumber" : 50,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n  List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n  Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n  for (  ExecutorChunk ec : chunks) {\n    toAdd.put(ec,ec.size() * 100);\n  }\n  hash.addAll(toAdd);\n  hashes.add(hash);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 669,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < ws.works.size(); i++) {\n  ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n  List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n  Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n  for (  ExecutorChunk ec : chunks) {\n    toAdd.put(ec,ec.size() * 100);\n  }\n  hash.addAll(toAdd);\n  hashes.add(hash);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 88,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 81,
        "startColumnNumber" : 59,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<ConsistentHash<ExecutorChunk>> hashes=new ArrayList<>(ws.works.size());\n  for (int i=0; i < ws.works.size(); i++) {\n    ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n    List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n    Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n    for (    ExecutorChunk ec : chunks) {\n      toAdd.put(ec,ec.size() * 100);\n    }\n    hash.addAll(toAdd);\n    hashes.add(hash);\n  }\n  Mapping m=ws.new Mapping();\n  assert m.size() == ws.works.size();\n  if (assignGreedily(m,task,hashes,0)) {\n    assert m.isCompletelyValid();\n    return m;\n  }\n else   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Mapping map(Task task,MappingWorksheet ws){\n  List<ConsistentHash<ExecutorChunk>> hashes=new ArrayList<>(ws.works.size());\n  for (int i=0; i < ws.works.size(); i++) {\n    ConsistentHash<ExecutorChunk> hash=new ConsistentHash<>(ExecutorChunk::getName);\n    List<ExecutorChunk> chunks=ws.works(i).applicableExecutorChunks();\n    Map<ExecutorChunk,Integer> toAdd=Maps.newHashMapWithExpectedSize(chunks.size());\n    for (    ExecutorChunk ec : chunks) {\n      toAdd.put(ec,ec.size() * 100);\n    }\n    hash.addAll(toAdd);\n    hashes.add(hash);\n  }\n  Mapping m=ws.new Mapping();\n  assert m.size() == ws.works.size();\n  if (assignGreedily(m,task,hashes,0)) {\n    assert m.isCompletelyValid();\n    return m;\n  }\n else   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 49
      },
      "nodeContext" : "toAdd.put(ec,ec.size() * 100);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "hudson.model.queue.MappingWorksheet.ExecutorChunk"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 91,
    "startColumnNumber" : 30,
    "endLineNumber" : 91,
    "endColumnNumber" : 32
  }, {
    "charLength" : 2,
    "startLineNumber" : 91,
    "startColumnNumber" : 34,
    "endLineNumber" : 91,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}