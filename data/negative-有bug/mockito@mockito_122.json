{
  "id" : 122,
  "expression" : "mockFun",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/bugs/ActualInvocationHasNullArgumentNPEBugTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mockFun",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 23,
      "startColumnNumber" : 13,
      "endLineNumber" : 23,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 23,
        "startColumnNumber" : 13,
        "endLineNumber" : 23,
        "endColumnNumber" : 48
      },
      "nodeContext" : "mockFun.doFun((String)anyObject())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 49
      },
      "nodeContext" : "when(mockFun.doFun((String)anyObject()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 69
      },
      "nodeContext" : "when(mockFun.doFun((String)anyObject())).thenReturn(\"value\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 70
      },
      "nodeContext" : "when(mockFun.doFun((String)anyObject())).thenReturn(\"value\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 20,
        "startColumnNumber" : 49,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Fun mockFun=mock(Fun.class);\n  when(mockFun.doFun((String)anyObject())).thenReturn(\"value\");\n  mockFun.doFun(null);\n  try {\n    verify(mockFun).doFun(\"hello\");\n  }\n catch (  AssertionError r) {\n    return;\n  }\n  fail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldAllowPassingNullArgument(){\n  Fun mockFun=mock(Fun.class);\n  when(mockFun.doFun((String)anyObject())).thenReturn(\"value\");\n  mockFun.doFun(null);\n  try {\n    verify(mockFun).doFun(\"hello\");\n  }\n catch (  AssertionError r) {\n    return;\n  }\n  fail();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 70
      },
      "nodeContext" : "when(mockFun.doFun((String)anyObject())).thenReturn(\"value\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest.Fun"
  }, {
    "nodeContext" : "mockFun",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 26,
      "startColumnNumber" : 8,
      "endLineNumber" : 26,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 27
      },
      "nodeContext" : "mockFun.doFun(null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 28
      },
      "nodeContext" : "mockFun.doFun(null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 20,
        "startColumnNumber" : 49,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Fun mockFun=mock(Fun.class);\n  when(mockFun.doFun((String)anyObject())).thenReturn(\"value\");\n  mockFun.doFun(null);\n  try {\n    verify(mockFun).doFun(\"hello\");\n  }\n catch (  AssertionError r) {\n    return;\n  }\n  fail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldAllowPassingNullArgument(){\n  Fun mockFun=mock(Fun.class);\n  when(mockFun.doFun((String)anyObject())).thenReturn(\"value\");\n  mockFun.doFun(null);\n  try {\n    verify(mockFun).doFun(\"hello\");\n  }\n catch (  AssertionError r) {\n    return;\n  }\n  fail();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 28
      },
      "nodeContext" : "mockFun.doFun(null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest.Fun"
  }, {
    "nodeContext" : "mockFun",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 30,
      "startColumnNumber" : 19,
      "endLineNumber" : 30,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 30,
        "startColumnNumber" : 12,
        "endLineNumber" : 30,
        "endColumnNumber" : 27
      },
      "nodeContext" : "verify(mockFun)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 30,
        "startColumnNumber" : 12,
        "endLineNumber" : 30,
        "endColumnNumber" : 42
      },
      "nodeContext" : "verify(mockFun).doFun(\"hello\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 30,
        "startColumnNumber" : 12,
        "endLineNumber" : 30,
        "endColumnNumber" : 43
      },
      "nodeContext" : "verify(mockFun).doFun(\"hello\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 29,
        "startColumnNumber" : 12,
        "endLineNumber" : 31,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  verify(mockFun).doFun(\"hello\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  verify(mockFun).doFun(\"hello\");\n}\n catch (AssertionError r) {\n  return;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 20,
        "startColumnNumber" : 49,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Fun mockFun=mock(Fun.class);\n  when(mockFun.doFun((String)anyObject())).thenReturn(\"value\");\n  mockFun.doFun(null);\n  try {\n    verify(mockFun).doFun(\"hello\");\n  }\n catch (  AssertionError r) {\n    return;\n  }\n  fail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldAllowPassingNullArgument(){\n  Fun mockFun=mock(Fun.class);\n  when(mockFun.doFun((String)anyObject())).thenReturn(\"value\");\n  mockFun.doFun(null);\n  try {\n    verify(mockFun).doFun(\"hello\");\n  }\n catch (  AssertionError r) {\n    return;\n  }\n  fail();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 30,
        "startColumnNumber" : 12,
        "endLineNumber" : 30,
        "endColumnNumber" : 43
      },
      "nodeContext" : "verify(mockFun).doFun(\"hello\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest.Fun"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 23,
    "startColumnNumber" : 13,
    "endLineNumber" : 23,
    "endColumnNumber" : 20
  }, {
    "charLength" : 7,
    "startLineNumber" : 26,
    "startColumnNumber" : 8,
    "endLineNumber" : 26,
    "endColumnNumber" : 15
  }, {
    "charLength" : 7,
    "startLineNumber" : 30,
    "startColumnNumber" : 19,
    "endLineNumber" : 30,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}