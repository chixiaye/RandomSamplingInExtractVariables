{
  "id" : 153,
  "expression" : "currentRules::contains",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/main/java/org/apache/shardingsphere/sharding/distsql/handler/update/CreateShardingKeyGeneratorStatementUpdater.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "currentRules::contains",
    "nodeType" : "ExpressionMethodReference",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 70,
      "startColumnNumber" : 61,
      "endLineNumber" : 70,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 70,
        "startColumnNumber" : 32,
        "endLineNumber" : 70,
        "endColumnNumber" : 84
      },
      "nodeContext" : "requireRules.stream().filter(currentRules::contains)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 70,
        "startColumnNumber" : 32,
        "endLineNumber" : 70,
        "endColumnNumber" : 112
      },
      "nodeContext" : "requireRules.stream().filter(currentRules::contains).collect(Collectors.toSet())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 70,
        "startColumnNumber" : 20,
        "endLineNumber" : 70,
        "endColumnNumber" : 112
      },
      "nodeContext" : "identical=requireRules.stream().filter(currentRules::contains).collect(Collectors.toSet())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 113
      },
      "nodeContext" : "Set<String> identical=requireRules.stream().filter(currentRules::contains).collect(Collectors.toSet());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 69,
        "startColumnNumber" : 185,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Set<String> identical=requireRules.stream().filter(currentRules::contains).collect(Collectors.toSet());\n  DistSQLException.predictionThrow(identical.isEmpty(),thrower.apply(identical));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void checkExist(final Collection<String> requireRules,final Collection<String> currentRules,final Function<Set<String>,DistSQLException> thrower) throws DistSQLException {\n  Set<String> identical=requireRules.stream().filter(currentRules::contains).collect(Collectors.toSet());\n  DistSQLException.predictionThrow(identical.isEmpty(),thrower.apply(identical));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 113
      },
      "nodeContext" : "Set<String> identical=requireRules.stream().filter(currentRules::contains).collect(Collectors.toSet());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.util.function.Predicate<? super java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 70,
    "startColumnNumber" : 61,
    "endLineNumber" : 70,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}