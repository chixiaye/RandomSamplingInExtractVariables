{
  "id" : 4,
  "expression" : "i < mItems.length",
  "projectName" : "iBotPeaches@Apktool",
  "commitID" : "719a25afd69d2211259a65d4fce197340cbae819",
  "filePath" : "/src/brut/androlib/res/data/value/ResPluralsValue.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < mItems.length",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 51,
      "startColumnNumber" : 24,
      "endLineNumber" : 51,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mItems.length; i++) {\n  String item=mItems[i];\n  if (item == null) {\n    continue;\n  }\n  serializer.startTag(null,\"item\");\n  serializer.attribute(null,\"quantity\",QUANTITY_MAP[i]);\n  serializer.text(item);\n  serializer.endTag(null,\"item\");\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 534,
        "startLineNumber" : 48,
        "startColumnNumber" : 50,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  serializer.startTag(null,\"plurals\");\n  serializer.attribute(null,\"name\",res.getResSpec().getName());\n  for (int i=0; i < mItems.length; i++) {\n    String item=mItems[i];\n    if (item == null) {\n      continue;\n    }\n    serializer.startTag(null,\"item\");\n    serializer.attribute(null,\"quantity\",QUANTITY_MAP[i]);\n    serializer.text(item);\n    serializer.endTag(null,\"item\");\n  }\n  serializer.endTag(null,\"plurals\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void serializeToXml(XmlSerializer serializer,ResResource res) throws IOException, AndrolibException {\n  serializer.startTag(null,\"plurals\");\n  serializer.attribute(null,\"name\",res.getResSpec().getName());\n  for (int i=0; i < mItems.length; i++) {\n    String item=mItems[i];\n    if (item == null) {\n      continue;\n    }\n    serializer.startTag(null,\"item\");\n    serializer.attribute(null,\"quantity\",QUANTITY_MAP[i]);\n    serializer.text(item);\n    serializer.endTag(null,\"item\");\n  }\n  serializer.endTag(null,\"plurals\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mItems.length; i++) {\n  String item=mItems[i];\n  if (item == null) {\n    continue;\n  }\n  serializer.startTag(null,\"item\");\n  serializer.attribute(null,\"quantity\",QUANTITY_MAP[i]);\n  serializer.text(item);\n  serializer.endTag(null,\"item\");\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 51,
    "startColumnNumber" : 24,
    "endLineNumber" : 51,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}