{
  "id" : 178,
  "expression" : "resolveBeanMetadata(referenceConfig)",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-spring-boot/dubbo-spring-boot-compatible/actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/endpoint/metadata/DubboReferencesMetadata.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "resolveBeanMetadata(referenceConfig)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 65,
      "startColumnNumber" : 31,
      "endLineNumber" : 65,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 67
      },
      "nodeContext" : "beanMetadata=resolveBeanMetadata(referenceConfig)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 68
      },
      "nodeContext" : "beanMetadata=resolveBeanMetadata(referenceConfig);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 64,
        "startColumnNumber" : 41,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  beanMetadata=resolveBeanMetadata(referenceConfig);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (referenceConfig != null) {\n  beanMetadata=resolveBeanMetadata(referenceConfig);\n}\n else {\n  beanMetadata=new LinkedHashMap<>();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 56,
        "startColumnNumber" : 60,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  InjectionMetadata.InjectedElement injectedElement=entry.getKey();\n  ReferenceBean<?> referenceBean=entry.getValue();\n  ReferenceConfig referenceConfig=referenceBean.getReferenceConfig();\n  Map<String,Object> beanMetadata=null;\n  if (referenceConfig != null) {\n    beanMetadata=resolveBeanMetadata(referenceConfig);\n  }\n else {\n    beanMetadata=new LinkedHashMap<>();\n  }\n  referencesMetadata.put(String.valueOf(injectedElement.getMember()),beanMetadata);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<InjectionMetadata.InjectedElement,ReferenceBean<?>> entry : injectedElementReferenceBeanMap.entrySet()) {\n  InjectionMetadata.InjectedElement injectedElement=entry.getKey();\n  ReferenceBean<?> referenceBean=entry.getValue();\n  ReferenceConfig referenceConfig=referenceBean.getReferenceConfig();\n  Map<String,Object> beanMetadata=null;\n  if (referenceConfig != null) {\n    beanMetadata=resolveBeanMetadata(referenceConfig);\n  }\n else {\n    beanMetadata=new LinkedHashMap<>();\n  }\n  referencesMetadata.put(String.valueOf(injectedElement.getMember()),beanMetadata);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1030,
        "startLineNumber" : 52,
        "startColumnNumber" : 102,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Map<String,Object>> referencesMetadata=new LinkedHashMap<>();\n  for (  Map.Entry<InjectionMetadata.InjectedElement,ReferenceBean<?>> entry : injectedElementReferenceBeanMap.entrySet()) {\n    InjectionMetadata.InjectedElement injectedElement=entry.getKey();\n    ReferenceBean<?> referenceBean=entry.getValue();\n    ReferenceConfig referenceConfig=referenceBean.getReferenceConfig();\n    Map<String,Object> beanMetadata=null;\n    if (referenceConfig != null) {\n      beanMetadata=resolveBeanMetadata(referenceConfig);\n    }\n else {\n      beanMetadata=new LinkedHashMap<>();\n    }\n    referencesMetadata.put(String.valueOf(injectedElement.getMember()),beanMetadata);\n  }\n  return referencesMetadata;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1199,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Map<String,Map<String,Object>> buildReferencesMetadata(Map<InjectionMetadata.InjectedElement,ReferenceBean<?>> injectedElementReferenceBeanMap){\n  Map<String,Map<String,Object>> referencesMetadata=new LinkedHashMap<>();\n  for (  Map.Entry<InjectionMetadata.InjectedElement,ReferenceBean<?>> entry : injectedElementReferenceBeanMap.entrySet()) {\n    InjectionMetadata.InjectedElement injectedElement=entry.getKey();\n    ReferenceBean<?> referenceBean=entry.getValue();\n    ReferenceConfig referenceConfig=referenceBean.getReferenceConfig();\n    Map<String,Object> beanMetadata=null;\n    if (referenceConfig != null) {\n      beanMetadata=resolveBeanMetadata(referenceConfig);\n    }\n else {\n      beanMetadata=new LinkedHashMap<>();\n    }\n    referencesMetadata.put(String.valueOf(injectedElement.getMember()),beanMetadata);\n  }\n  return referencesMetadata;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 68
      },
      "nodeContext" : "beanMetadata=resolveBeanMetadata(referenceConfig);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 65,
    "startColumnNumber" : 31,
    "endLineNumber" : 65,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}