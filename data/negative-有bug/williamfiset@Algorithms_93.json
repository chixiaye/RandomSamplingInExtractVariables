{
  "id" : 93,
  "expression" : "node8",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/graphtheory/treealgorithms/RootingTreeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "node8",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 56,
      "startColumnNumber" : 55,
      "endLineNumber" : 56,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertThat(children).containsExactly(node2,node7,node8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(children).containsExactly(node2,node7,node8);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1259,
        "startLineNumber" : 37,
        "startColumnNumber" : 35,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<List<Integer>> graph1=getGraph1();\n  TreeNode node6=RootingTree.rootTree(graph1,6);\n  assertThat(node6.id()).isEqualTo(6);\n  assertThat(node6.parent()).isEqualTo(null);\n  List<TreeNode> children=node6.children();\n  TreeNode node2=new TreeNode(2,node6);\n  TreeNode node7=new TreeNode(7,node6);\n  TreeNode node8=new TreeNode(8,node6);\n  assertThat(children).containsExactly(node2,node7,node8);\n  TreeNode node1=new TreeNode(1,node2);\n  TreeNode node3=new TreeNode(3,node2);\n  assertThat(node6.children().get(0).children()).containsExactly(node1,node3);\n  TreeNode node0=new TreeNode(0,node1);\n  TreeNode node4=new TreeNode(4,node3);\n  TreeNode node5=new TreeNode(5,node3);\n  assertThat(node6.children().get(0).children().get(0).children()).containsExactly(node0);\n  assertThat(node6.children().get(0).children().get(1).children()).containsExactly(node4,node5);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSimpleRooting1(){\n  List<List<Integer>> graph1=getGraph1();\n  TreeNode node6=RootingTree.rootTree(graph1,6);\n  assertThat(node6.id()).isEqualTo(6);\n  assertThat(node6.parent()).isEqualTo(null);\n  List<TreeNode> children=node6.children();\n  TreeNode node2=new TreeNode(2,node6);\n  TreeNode node7=new TreeNode(7,node6);\n  TreeNode node8=new TreeNode(8,node6);\n  assertThat(children).containsExactly(node2,node7,node8);\n  TreeNode node1=new TreeNode(1,node2);\n  TreeNode node3=new TreeNode(3,node2);\n  assertThat(node6.children().get(0).children()).containsExactly(node1,node3);\n  TreeNode node0=new TreeNode(0,node1);\n  TreeNode node4=new TreeNode(4,node3);\n  TreeNode node5=new TreeNode(5,node3);\n  assertThat(node6.children().get(0).children().get(0).children()).containsExactly(node0);\n  assertThat(node6.children().get(0).children().get(1).children()).containsExactly(node4,node5);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 202,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(children).containsExactly(node2,node7,node8);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree.TreeNode"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 56,
    "startColumnNumber" : 55,
    "endLineNumber" : 56,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}