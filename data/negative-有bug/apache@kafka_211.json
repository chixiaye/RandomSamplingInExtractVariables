{
  "id" : 211,
  "expression" : "topicsNumPartitions.size()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/processor/internals/RackAwarenessStreamsPartitionAssignorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "topicsNumPartitions.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 545,
      "startColumnNumber" : 38,
      "endLineNumber" : 545,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 545,
        "startColumnNumber" : 12,
        "endLineNumber" : 545,
        "endColumnNumber" : 64
      },
      "nodeContext" : "changelogTopics.size() != topicsNumPartitions.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 545,
        "startColumnNumber" : 8,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (changelogTopics.size() != topicsNumPartitions.size()) {\n  throw new IllegalStateException(\"Passed in \" + changelogTopics.size() + \" changelog topic names, but \"+ topicsNumPartitions.size()+ \" different numPartitions for the topics\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 544,
        "startColumnNumber" : 114,
        "endLineNumber" : 558,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (changelogTopics.size() != topicsNumPartitions.size()) {\n    throw new IllegalStateException(\"Passed in \" + changelogTopics.size() + \" changelog topic names, but \"+ topicsNumPartitions.size()+ \" different numPartitions for the topics\");\n  }\n  final Map<TopicPartition,Long> changelogEndOffsets=new HashMap<>();\n  for (int i=0; i < changelogTopics.size(); ++i) {\n    final String topic=changelogTopics.get(i);\n    final int numPartitions=topicsNumPartitions.get(i);\n    for (int partition=0; partition < numPartitions; ++partition) {\n      changelogEndOffsets.put(new TopicPartition(topic,partition),Long.MAX_VALUE);\n    }\n  }\n  return changelogEndOffsets;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1479,
        "startLineNumber" : 537,
        "startColumnNumber" : 4,
        "endLineNumber" : 558,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Helper for building the input to createMockAdminClient in cases where we don't care about the actual offsets\n * @param changelogTopics The names of all changelog topics in the topology\n * @param topicsNumPartitions The number of partitions for the corresponding changelog topic, such that the numberof partitions of the ith topic in changelogTopics is given by the ith element of topicsNumPartitions\n */\nprivate static Map<TopicPartition,Long> getTopicPartitionOffsetsMap(final List<String> changelogTopics,final List<Integer> topicsNumPartitions){\n  if (changelogTopics.size() != topicsNumPartitions.size()) {\n    throw new IllegalStateException(\"Passed in \" + changelogTopics.size() + \" changelog topic names, but \"+ topicsNumPartitions.size()+ \" different numPartitions for the topics\");\n  }\n  final Map<TopicPartition,Long> changelogEndOffsets=new HashMap<>();\n  for (int i=0; i < changelogTopics.size(); ++i) {\n    final String topic=changelogTopics.get(i);\n    final int numPartitions=topicsNumPartitions.get(i);\n    for (int partition=0; partition < numPartitions; ++partition) {\n      changelogEndOffsets.put(new TopicPartition(topic,partition),Long.MAX_VALUE);\n    }\n  }\n  return changelogEndOffsets;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 545,
        "startColumnNumber" : 12,
        "endLineNumber" : 545,
        "endColumnNumber" : 64
      },
      "nodeContext" : "changelogTopics.size() != topicsNumPartitions.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "topicsNumPartitions.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 547,
      "startColumnNumber" : 20,
      "endLineNumber" : 547,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 546,
        "startColumnNumber" : 44,
        "endLineNumber" : 547,
        "endColumnNumber" : 90
      },
      "nodeContext" : "\"Passed in \" + changelogTopics.size() + \" changelog topic names, but \"+ topicsNumPartitions.size()+ \" different numPartitions for the topics\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 546,
        "startColumnNumber" : 18,
        "endLineNumber" : 547,
        "endColumnNumber" : 91
      },
      "nodeContext" : "new IllegalStateException(\"Passed in \" + changelogTopics.size() + \" changelog topic names, but \"+ topicsNumPartitions.size()+ \" different numPartitions for the topics\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 546,
        "startColumnNumber" : 12,
        "endLineNumber" : 547,
        "endColumnNumber" : 92
      },
      "nodeContext" : "throw new IllegalStateException(\"Passed in \" + changelogTopics.size() + \" changelog topic names, but \"+ topicsNumPartitions.size()+ \" different numPartitions for the topics\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 545,
        "startColumnNumber" : 66,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalStateException(\"Passed in \" + changelogTopics.size() + \" changelog topic names, but \"+ topicsNumPartitions.size()+ \" different numPartitions for the topics\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 545,
        "startColumnNumber" : 8,
        "endLineNumber" : 548,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (changelogTopics.size() != topicsNumPartitions.size()) {\n  throw new IllegalStateException(\"Passed in \" + changelogTopics.size() + \" changelog topic names, but \"+ topicsNumPartitions.size()+ \" different numPartitions for the topics\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 544,
        "startColumnNumber" : 114,
        "endLineNumber" : 558,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (changelogTopics.size() != topicsNumPartitions.size()) {\n    throw new IllegalStateException(\"Passed in \" + changelogTopics.size() + \" changelog topic names, but \"+ topicsNumPartitions.size()+ \" different numPartitions for the topics\");\n  }\n  final Map<TopicPartition,Long> changelogEndOffsets=new HashMap<>();\n  for (int i=0; i < changelogTopics.size(); ++i) {\n    final String topic=changelogTopics.get(i);\n    final int numPartitions=topicsNumPartitions.get(i);\n    for (int partition=0; partition < numPartitions; ++partition) {\n      changelogEndOffsets.put(new TopicPartition(topic,partition),Long.MAX_VALUE);\n    }\n  }\n  return changelogEndOffsets;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1479,
        "startLineNumber" : 537,
        "startColumnNumber" : 4,
        "endLineNumber" : 558,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Helper for building the input to createMockAdminClient in cases where we don't care about the actual offsets\n * @param changelogTopics The names of all changelog topics in the topology\n * @param topicsNumPartitions The number of partitions for the corresponding changelog topic, such that the numberof partitions of the ith topic in changelogTopics is given by the ith element of topicsNumPartitions\n */\nprivate static Map<TopicPartition,Long> getTopicPartitionOffsetsMap(final List<String> changelogTopics,final List<Integer> topicsNumPartitions){\n  if (changelogTopics.size() != topicsNumPartitions.size()) {\n    throw new IllegalStateException(\"Passed in \" + changelogTopics.size() + \" changelog topic names, but \"+ topicsNumPartitions.size()+ \" different numPartitions for the topics\");\n  }\n  final Map<TopicPartition,Long> changelogEndOffsets=new HashMap<>();\n  for (int i=0; i < changelogTopics.size(); ++i) {\n    final String topic=changelogTopics.get(i);\n    final int numPartitions=topicsNumPartitions.get(i);\n    for (int partition=0; partition < numPartitions; ++partition) {\n      changelogEndOffsets.put(new TopicPartition(topic,partition),Long.MAX_VALUE);\n    }\n  }\n  return changelogEndOffsets;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 546,
        "startColumnNumber" : 44,
        "endLineNumber" : 547,
        "endColumnNumber" : 90
      },
      "nodeContext" : "\"Passed in \" + changelogTopics.size() + \" changelog topic names, but \"+ topicsNumPartitions.size()+ \" different numPartitions for the topics\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 545,
    "startColumnNumber" : 38,
    "endLineNumber" : 545,
    "endColumnNumber" : 64
  }, {
    "charLength" : 26,
    "startLineNumber" : 547,
    "startColumnNumber" : 20,
    "endLineNumber" : 547,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}