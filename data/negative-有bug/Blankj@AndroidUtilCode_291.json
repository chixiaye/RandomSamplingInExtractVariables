{
  "id" : 291,
  "expression" : "new ClickableSpan(){\n  @Override public void onClick(  View widget){\n    ToastUtils.showShort(\"事件触发了\");\n  }\n  @Override public void updateDrawState(  TextPaint ds){\n    ds.setColor(Color.BLUE);\n    ds.setUnderlineText(false);\n  }\n}\n",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/app/src/main/java/com/blankj/androidutilcode/core/span/SpanActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ClickableSpan(){\n  @Override public void onClick(  View widget){\n    ToastUtils.showShort(\"事件触发了\");\n  }\n  @Override public void updateDrawState(  TextPaint ds){\n    ds.setColor(Color.BLUE);\n    ds.setUnderlineText(false);\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 339,
      "startLineNumber" : 85,
      "startColumnNumber" : 38,
      "endLineNumber" : 96,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 43,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 355,
        "startLineNumber" : 85,
        "startColumnNumber" : 22,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "clickableSpan=new ClickableSpan(){\n  @Override public void onClick(  View widget){\n    ToastUtils.showShort(\"事件触发了\");\n  }\n  @Override public void updateDrawState(  TextPaint ds){\n    ds.setColor(Color.BLUE);\n    ds.setUnderlineText(false);\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 10
      },
      "nodeContext" : "ClickableSpan clickableSpan=new ClickableSpan(){\n  @Override public void onClick(  View widget){\n    ToastUtils.showShort(\"事件触发了\");\n  }\n  @Override public void updateDrawState(  TextPaint ds){\n    ds.setColor(Color.BLUE);\n    ds.setUnderlineText(false);\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6279,
        "startLineNumber" : 82,
        "startColumnNumber" : 63,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  getToolBar().setTitle(getString(R.string.demo_span));\n  ClickableSpan clickableSpan=new ClickableSpan(){\n    @Override public void onClick(    View widget){\n      ToastUtils.showShort(\"事件触发了\");\n    }\n    @Override public void updateDrawState(    TextPaint ds){\n      ds.setColor(Color.BLUE);\n      ds.setUnderlineText(false);\n    }\n  }\n;\n  tvAboutSpan=(TextView)findViewById(R.id.tv_about_span);\n  tvAboutAnimRainbow=(TextView)findViewById(R.id.tv_about_anim_span);\n  tvAboutSpan.setMovementMethod(LinkMovementMethod.getInstance());\n  tvAboutSpan.setHighlightColor(ContextCompat.getColor(this,android.R.color.transparent));\n  lineHeight=tvAboutSpan.getLineHeight();\n  textSize=tvAboutSpan.getTextSize();\n  density=getResources().getDisplayMetrics().density;\n  tvAboutSpan.setText(new SpanUtils().appendLine(\"SpanUtils\").setBackgroundColor(Color.LTGRAY).setBold().setForegroundColor(Color.YELLOW).setAlign(Layout.Alignment.ALIGN_CENTER).appendLine(\"前景色\").setForegroundColor(Color.GREEN).appendLine(\"背景色\").setBackgroundColor(Color.LTGRAY).appendLine(\"行高顶部对齐\").setLineHeight(2 * lineHeight,SpanUtils.ALIGN_TOP).setBackgroundColor(Color.GREEN).appendLine(\"行高居中对齐\").setLineHeight(2 * lineHeight,SpanUtils.ALIGN_CENTER).setBackgroundColor(Color.LTGRAY).appendLine(\"行高底部对齐\").setLineHeight(2 * lineHeight,SpanUtils.ALIGN_BOTTOM).setBackgroundColor(Color.GREEN).appendLine(\"测试段落缩，首行缩进两字，其他行不缩进\").setLeadingMargin((int)textSize * 2,10).setBackgroundColor(Color.GREEN).appendLine(\"测试引用，后面的字是为了凑到两行的效果\").setQuoteColor(Color.GREEN,10,10).setBackgroundColor(Color.LTGRAY).appendLine(\"测试列表项，后面的字是为了凑到两行的效果\").setBullet(Color.GREEN,20,10).setBackgroundColor(Color.LTGRAY).setBackgroundColor(Color.GREEN).appendLine(\"测试图标文字顶部对齐，后面的字是为了凑到两行的效果\").setIconMargin(R.drawable.shape_spannable_block_high,20,SpanUtils.ALIGN_TOP).setBackgroundColor(Color.LTGRAY).appendLine(\"测试图标文字居中对齐，后面的字是为了凑到两行的效果\").setIconMargin(R.drawable.shape_spannable_block_high,20,SpanUtils.ALIGN_CENTER).setBackgroundColor(Color.GREEN).appendLine(\"测试图标文字底部对齐，后面的字是为了凑到两行的效果\").setIconMargin(R.drawable.shape_spannable_block_high,20,SpanUtils.ALIGN_BOTTOM).setBackgroundColor(Color.LTGRAY).appendLine(\"测试图标顶部对齐，后面的字是为了凑到两行的效果\").setIconMargin(R.drawable.shape_spannable_block_low,20,SpanUtils.ALIGN_TOP).setBackgroundColor(Color.GREEN).appendLine(\"测试图标居中对齐，后面的字是为了凑到两行的效果\").setIconMargin(R.drawable.shape_spannable_block_low,20,SpanUtils.ALIGN_CENTER).setBackgroundColor(Color.LTGRAY).appendLine(\"测试图标底部对齐，后面的字是为了凑到两行的效果\").setIconMargin(R.drawable.shape_spannable_block_low,20,SpanUtils.ALIGN_BOTTOM).setBackgroundColor(Color.GREEN).appendLine(\"32dp字体\").setFontSize(32,true).appendLine(\"2倍字体\").setFontProportion(2).appendLine(\"横向2倍字体\").setFontXProportion(1.5f).appendLine(\"删除线\").setStrikethrough().appendLine(\"下划线\").setUnderline().append(\"测试\").appendLine(\"上标\").setSuperscript().append(\"测试\").appendLine(\"下标\").setSubscript().appendLine(\"粗体\").setBold().appendLine(\"斜体\").setItalic().appendLine(\"粗斜体\").setBoldItalic().appendLine(\"monospace字体\").setFontFamily(\"monospace\").appendLine(\"自定义字体\").setTypeface(Typeface.createFromAsset(getAssets(),\"fonts/dnmbhs.ttf\")).appendLine(\"相反对齐\").setAlign(Layout.Alignment.ALIGN_OPPOSITE).appendLine(\"居中对齐\").setAlign(Layout.Alignment.ALIGN_CENTER).appendLine(\"正常对齐\").setAlign(Layout.Alignment.ALIGN_NORMAL).append(\"测试\").appendLine(\"点击事件\").setClickSpan(clickableSpan).append(\"测试\").appendLine(\"Url\").setUrl(\"https://github.com/Blankj/AndroidUtilCode\").append(\"测试\").appendLine(\"模糊\").setBlur(3,BlurMaskFilter.Blur.NORMAL).appendLine(\"颜色渐变\").setShader(new LinearGradient(0,0,64 * density * 4,0,getResources().getIntArray(R.array.rainbow),null,Shader.TileMode.REPEAT)).setFontSize(64,true).appendLine(\"图片着色\").setFontSize(64,true).setShader(new BitmapShader(BitmapFactory.decodeResource(getResources(),R.drawable.cheetah),Shader.TileMode.REPEAT,Shader.TileMode.REPEAT)).appendLine(\"阴影效果\").setFontSize(64,true).setBackgroundColor(Color.BLACK).setShadow(24,8,8,Color.WHITE).append(\"测试小图对齐\").setBackgroundColor(Color.LTGRAY).appendImage(R.drawable.shape_spannable_block_low,SpanUtils.ALIGN_TOP).appendImage(R.drawable.shape_spannable_block_low,SpanUtils.ALIGN_CENTER).appendImage(R.drawable.shape_spannable_block_low,SpanUtils.ALIGN_BASELINE).appendImage(R.drawable.shape_spannable_block_low,SpanUtils.ALIGN_BOTTOM).appendLine(\"end\").setBackgroundColor(Color.LTGRAY).append(\"测试大图字体顶部对齐\").setBackgroundColor(Color.GREEN).appendImage(R.drawable.shape_spannable_block_high,SpanUtils.ALIGN_TOP).appendLine().append(\"测试大图字体居中对齐\").setBackgroundColor(Color.LTGRAY).appendImage(R.drawable.shape_spannable_block_high,SpanUtils.ALIGN_CENTER).appendLine().append(\"测试大图字体底部对齐\").setBackgroundColor(Color.GREEN).appendImage(R.drawable.shape_spannable_block_high,SpanUtils.ALIGN_BOTTOM).appendLine().append(\"测试空格\").appendSpace(30,Color.LTGRAY).appendSpace(50,Color.GREEN).appendSpace(100).appendSpace(30,Color.LTGRAY).appendSpace(50,Color.GREEN).create());\n  initAnimSpan();\n  startAnim();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 767,
      "astHeight" : 130
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6352,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void initView(Bundle savedInstanceState,View view){\n  getToolBar().setTitle(getString(R.string.demo_span));\n  ClickableSpan clickableSpan=new ClickableSpan(){\n    @Override public void onClick(    View widget){\n      ToastUtils.showShort(\"事件触发了\");\n    }\n    @Override public void updateDrawState(    TextPaint ds){\n      ds.setColor(Color.BLUE);\n      ds.setUnderlineText(false);\n    }\n  }\n;\n  tvAboutSpan=(TextView)findViewById(R.id.tv_about_span);\n  tvAboutAnimRainbow=(TextView)findViewById(R.id.tv_about_anim_span);\n  tvAboutSpan.setMovementMethod(LinkMovementMethod.getInstance());\n  tvAboutSpan.setHighlightColor(ContextCompat.getColor(this,android.R.color.transparent));\n  lineHeight=tvAboutSpan.getLineHeight();\n  textSize=tvAboutSpan.getTextSize();\n  density=getResources().getDisplayMetrics().density;\n  tvAboutSpan.setText(new SpanUtils().appendLine(\"SpanUtils\").setBackgroundColor(Color.LTGRAY).setBold().setForegroundColor(Color.YELLOW).setAlign(Layout.Alignment.ALIGN_CENTER).appendLine(\"前景色\").setForegroundColor(Color.GREEN).appendLine(\"背景色\").setBackgroundColor(Color.LTGRAY).appendLine(\"行高顶部对齐\").setLineHeight(2 * lineHeight,SpanUtils.ALIGN_TOP).setBackgroundColor(Color.GREEN).appendLine(\"行高居中对齐\").setLineHeight(2 * lineHeight,SpanUtils.ALIGN_CENTER).setBackgroundColor(Color.LTGRAY).appendLine(\"行高底部对齐\").setLineHeight(2 * lineHeight,SpanUtils.ALIGN_BOTTOM).setBackgroundColor(Color.GREEN).appendLine(\"测试段落缩，首行缩进两字，其他行不缩进\").setLeadingMargin((int)textSize * 2,10).setBackgroundColor(Color.GREEN).appendLine(\"测试引用，后面的字是为了凑到两行的效果\").setQuoteColor(Color.GREEN,10,10).setBackgroundColor(Color.LTGRAY).appendLine(\"测试列表项，后面的字是为了凑到两行的效果\").setBullet(Color.GREEN,20,10).setBackgroundColor(Color.LTGRAY).setBackgroundColor(Color.GREEN).appendLine(\"测试图标文字顶部对齐，后面的字是为了凑到两行的效果\").setIconMargin(R.drawable.shape_spannable_block_high,20,SpanUtils.ALIGN_TOP).setBackgroundColor(Color.LTGRAY).appendLine(\"测试图标文字居中对齐，后面的字是为了凑到两行的效果\").setIconMargin(R.drawable.shape_spannable_block_high,20,SpanUtils.ALIGN_CENTER).setBackgroundColor(Color.GREEN).appendLine(\"测试图标文字底部对齐，后面的字是为了凑到两行的效果\").setIconMargin(R.drawable.shape_spannable_block_high,20,SpanUtils.ALIGN_BOTTOM).setBackgroundColor(Color.LTGRAY).appendLine(\"测试图标顶部对齐，后面的字是为了凑到两行的效果\").setIconMargin(R.drawable.shape_spannable_block_low,20,SpanUtils.ALIGN_TOP).setBackgroundColor(Color.GREEN).appendLine(\"测试图标居中对齐，后面的字是为了凑到两行的效果\").setIconMargin(R.drawable.shape_spannable_block_low,20,SpanUtils.ALIGN_CENTER).setBackgroundColor(Color.LTGRAY).appendLine(\"测试图标底部对齐，后面的字是为了凑到两行的效果\").setIconMargin(R.drawable.shape_spannable_block_low,20,SpanUtils.ALIGN_BOTTOM).setBackgroundColor(Color.GREEN).appendLine(\"32dp字体\").setFontSize(32,true).appendLine(\"2倍字体\").setFontProportion(2).appendLine(\"横向2倍字体\").setFontXProportion(1.5f).appendLine(\"删除线\").setStrikethrough().appendLine(\"下划线\").setUnderline().append(\"测试\").appendLine(\"上标\").setSuperscript().append(\"测试\").appendLine(\"下标\").setSubscript().appendLine(\"粗体\").setBold().appendLine(\"斜体\").setItalic().appendLine(\"粗斜体\").setBoldItalic().appendLine(\"monospace字体\").setFontFamily(\"monospace\").appendLine(\"自定义字体\").setTypeface(Typeface.createFromAsset(getAssets(),\"fonts/dnmbhs.ttf\")).appendLine(\"相反对齐\").setAlign(Layout.Alignment.ALIGN_OPPOSITE).appendLine(\"居中对齐\").setAlign(Layout.Alignment.ALIGN_CENTER).appendLine(\"正常对齐\").setAlign(Layout.Alignment.ALIGN_NORMAL).append(\"测试\").appendLine(\"点击事件\").setClickSpan(clickableSpan).append(\"测试\").appendLine(\"Url\").setUrl(\"https://github.com/Blankj/AndroidUtilCode\").append(\"测试\").appendLine(\"模糊\").setBlur(3,BlurMaskFilter.Blur.NORMAL).appendLine(\"颜色渐变\").setShader(new LinearGradient(0,0,64 * density * 4,0,getResources().getIntArray(R.array.rainbow),null,Shader.TileMode.REPEAT)).setFontSize(64,true).appendLine(\"图片着色\").setFontSize(64,true).setShader(new BitmapShader(BitmapFactory.decodeResource(getResources(),R.drawable.cheetah),Shader.TileMode.REPEAT,Shader.TileMode.REPEAT)).appendLine(\"阴影效果\").setFontSize(64,true).setBackgroundColor(Color.BLACK).setShadow(24,8,8,Color.WHITE).append(\"测试小图对齐\").setBackgroundColor(Color.LTGRAY).appendImage(R.drawable.shape_spannable_block_low,SpanUtils.ALIGN_TOP).appendImage(R.drawable.shape_spannable_block_low,SpanUtils.ALIGN_CENTER).appendImage(R.drawable.shape_spannable_block_low,SpanUtils.ALIGN_BASELINE).appendImage(R.drawable.shape_spannable_block_low,SpanUtils.ALIGN_BOTTOM).appendLine(\"end\").setBackgroundColor(Color.LTGRAY).append(\"测试大图字体顶部对齐\").setBackgroundColor(Color.GREEN).appendImage(R.drawable.shape_spannable_block_high,SpanUtils.ALIGN_TOP).appendLine().append(\"测试大图字体居中对齐\").setBackgroundColor(Color.LTGRAY).appendImage(R.drawable.shape_spannable_block_high,SpanUtils.ALIGN_CENTER).appendLine().append(\"测试大图字体底部对齐\").setBackgroundColor(Color.GREEN).appendImage(R.drawable.shape_spannable_block_high,SpanUtils.ALIGN_BOTTOM).appendLine().append(\"测试空格\").appendSpace(30,Color.LTGRAY).appendSpace(50,Color.GREEN).appendSpace(100).appendSpace(30,Color.LTGRAY).appendSpace(50,Color.GREEN).create());\n  initAnimSpan();\n  startAnim();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 781,
      "astHeight" : 131
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 10
      },
      "nodeContext" : "ClickableSpan clickableSpan=new ClickableSpan(){\n  @Override public void onClick(  View widget){\n    ToastUtils.showShort(\"事件触发了\");\n  }\n  @Override public void updateDrawState(  TextPaint ds){\n    ds.setColor(Color.BLUE);\n    ds.setUnderlineText(false);\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    },
    "tokenLength" : 19,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 339,
    "startLineNumber" : 85,
    "startColumnNumber" : 38,
    "endLineNumber" : 96,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}