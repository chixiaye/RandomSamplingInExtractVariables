{
  "id" : 60,
  "expression" : "clazz == Long.class",
  "projectName" : "facebook@stetho",
  "commitID" : "fee68519d93899dc5cfe6b992f56916a03b279f2",
  "filePath" : "/stetho/src/main/java/com/facebook/stetho/json/ObjectMapper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "clazz == Long.class",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 139,
      "startColumnNumber" : 23,
      "endLineNumber" : 139,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 139,
        "startColumnNumber" : 23,
        "endLineNumber" : 139,
        "endColumnNumber" : 65
      },
      "nodeContext" : "clazz == Long.class || clazz == long.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 700,
        "startLineNumber" : 139,
        "startColumnNumber" : 19,
        "endLineNumber" : 151,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (clazz == Long.class || clazz == long.class) {\n  return numberValue.longValue();\n}\n else if (clazz == Double.class || clazz == double.class) {\n  return numberValue.doubleValue();\n}\n else if (clazz == Float.class || clazz == float.class) {\n  return numberValue.floatValue();\n}\n else if (clazz == Byte.class || clazz == byte.class) {\n  return numberValue.byteValue();\n}\n else if (clazz == Short.class || clazz == short.class) {\n  return numberValue.shortValue();\n}\n else {\n  throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 151,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (clazz == Integer.class || clazz == int.class) {\n  return numberValue.intValue();\n}\n else if (clazz == Long.class || clazz == long.class) {\n  return numberValue.longValue();\n}\n else if (clazz == Double.class || clazz == double.class) {\n  return numberValue.doubleValue();\n}\n else if (clazz == Float.class || clazz == float.class) {\n  return numberValue.floatValue();\n}\n else if (clazz == Byte.class || clazz == byte.class) {\n  return numberValue.byteValue();\n}\n else if (clazz == Short.class || clazz == short.class) {\n  return numberValue.shortValue();\n}\n else {\n  throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 132,
        "startColumnNumber" : 46,
        "endLineNumber" : 152,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  Number numberValue=(Number)value;\n  Class<?> clazz=field.getType();\n  if (clazz == Integer.class || clazz == int.class) {\n    return numberValue.intValue();\n  }\n else   if (clazz == Long.class || clazz == long.class) {\n    return numberValue.longValue();\n  }\n else   if (clazz == Double.class || clazz == double.class) {\n    return numberValue.doubleValue();\n  }\n else   if (clazz == Float.class || clazz == float.class) {\n    return numberValue.floatValue();\n  }\n else   if (clazz == Byte.class || clazz == byte.class) {\n    return numberValue.byteValue();\n  }\n else   if (clazz == Short.class || clazz == short.class) {\n    return numberValue.shortValue();\n  }\n else {\n    throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1120,
        "startLineNumber" : 132,
        "startColumnNumber" : 17,
        "endLineNumber" : 152,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (value instanceof Number) {\n  Number numberValue=(Number)value;\n  Class<?> clazz=field.getType();\n  if (clazz == Integer.class || clazz == int.class) {\n    return numberValue.intValue();\n  }\n else   if (clazz == Long.class || clazz == long.class) {\n    return numberValue.longValue();\n  }\n else   if (clazz == Double.class || clazz == double.class) {\n    return numberValue.doubleValue();\n  }\n else   if (clazz == Float.class || clazz == float.class) {\n    return numberValue.floatValue();\n  }\n else   if (clazz == Byte.class || clazz == byte.class) {\n    return numberValue.byteValue();\n  }\n else   if (clazz == Short.class || clazz == short.class) {\n    return numberValue.shortValue();\n  }\n else {\n    throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 131,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 130,
        "startColumnNumber" : 17,
        "endLineNumber" : 152,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (value instanceof JSONArray) {\n  return convertArrayToList(field,(JSONArray)value);\n}\n else if (value instanceof Number) {\n  Number numberValue=(Number)value;\n  Class<?> clazz=field.getType();\n  if (clazz == Integer.class || clazz == int.class) {\n    return numberValue.intValue();\n  }\n else   if (clazz == Long.class || clazz == long.class) {\n    return numberValue.longValue();\n  }\n else   if (clazz == Double.class || clazz == double.class) {\n    return numberValue.doubleValue();\n  }\n else   if (clazz == Float.class || clazz == float.class) {\n    return numberValue.floatValue();\n  }\n else   if (clazz == Byte.class || clazz == byte.class) {\n    return numberValue.byteValue();\n  }\n else   if (clazz == Short.class || clazz == short.class) {\n    return numberValue.shortValue();\n  }\n else {\n    throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 145,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1374,
        "startLineNumber" : 128,
        "startColumnNumber" : 10,
        "endLineNumber" : 152,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (field.getType().isEnum()) {\n  return getEnumValue((String)value,field.getType().asSubclass(Enum.class));\n}\n else if (value instanceof JSONArray) {\n  return convertArrayToList(field,(JSONArray)value);\n}\n else if (value instanceof Number) {\n  Number numberValue=(Number)value;\n  Class<?> clazz=field.getType();\n  if (clazz == Integer.class || clazz == int.class) {\n    return numberValue.intValue();\n  }\n else   if (clazz == Long.class || clazz == long.class) {\n    return numberValue.longValue();\n  }\n else   if (clazz == Double.class || clazz == double.class) {\n    return numberValue.doubleValue();\n  }\n else   if (clazz == Float.class || clazz == float.class) {\n    return numberValue.floatValue();\n  }\n else   if (clazz == Byte.class || clazz == byte.class) {\n    return numberValue.byteValue();\n  }\n else   if (clazz == Short.class || clazz == short.class) {\n    return numberValue.shortValue();\n  }\n else {\n    throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1396,
        "startLineNumber" : 127,
        "startColumnNumber" : 15,
        "endLineNumber" : 153,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (field.getType().isEnum()) {\n    return getEnumValue((String)value,field.getType().asSubclass(Enum.class));\n  }\n else   if (value instanceof JSONArray) {\n    return convertArrayToList(field,(JSONArray)value);\n  }\n else   if (value instanceof Number) {\n    Number numberValue=(Number)value;\n    Class<?> clazz=field.getType();\n    if (clazz == Integer.class || clazz == int.class) {\n      return numberValue.intValue();\n    }\n else     if (clazz == Long.class || clazz == long.class) {\n      return numberValue.longValue();\n    }\n else     if (clazz == Double.class || clazz == double.class) {\n      return numberValue.doubleValue();\n    }\n else     if (clazz == Float.class || clazz == float.class) {\n      return numberValue.floatValue();\n    }\n else     if (clazz == Byte.class || clazz == byte.class) {\n      return numberValue.byteValue();\n    }\n else     if (clazz == Short.class || clazz == short.class) {\n      return numberValue.shortValue();\n    }\n else {\n      throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value instanceof JSONObject) {\n  return convertValue(value,field.getType());\n}\n else {\n  if (field.getType().isEnum()) {\n    return getEnumValue((String)value,field.getType().asSubclass(Enum.class));\n  }\n else   if (value instanceof JSONArray) {\n    return convertArrayToList(field,(JSONArray)value);\n  }\n else   if (value instanceof Number) {\n    Number numberValue=(Number)value;\n    Class<?> clazz=field.getType();\n    if (clazz == Integer.class || clazz == int.class) {\n      return numberValue.intValue();\n    }\n else     if (clazz == Long.class || clazz == long.class) {\n      return numberValue.longValue();\n    }\n else     if (clazz == Double.class || clazz == double.class) {\n      return numberValue.doubleValue();\n    }\n else     if (clazz == Float.class || clazz == float.class) {\n      return numberValue.floatValue();\n    }\n else     if (clazz == Byte.class || clazz == byte.class) {\n      return numberValue.byteValue();\n    }\n else     if (clazz == Short.class || clazz == short.class) {\n      return numberValue.shortValue();\n    }\n else {\n      throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 181,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1677,
        "startLineNumber" : 118,
        "startColumnNumber" : 25,
        "endLineNumber" : 154,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (value == JSONObject.NULL) {\n    return null;\n  }\n  if (value.getClass() == field.getType()) {\n    return value;\n  }\n  if (value instanceof JSONObject) {\n    return convertValue(value,field.getType());\n  }\n else {\n    if (field.getType().isEnum()) {\n      return getEnumValue((String)value,field.getType().asSubclass(Enum.class));\n    }\n else     if (value instanceof JSONArray) {\n      return convertArrayToList(field,(JSONArray)value);\n    }\n else     if (value instanceof Number) {\n      Number numberValue=(Number)value;\n      Class<?> clazz=field.getType();\n      if (clazz == Integer.class || clazz == int.class) {\n        return numberValue.intValue();\n      }\n else       if (clazz == Long.class || clazz == long.class) {\n        return numberValue.longValue();\n      }\n else       if (clazz == Double.class || clazz == double.class) {\n        return numberValue.doubleValue();\n      }\n else       if (clazz == Float.class || clazz == float.class) {\n        return numberValue.floatValue();\n      }\n else       if (clazz == Byte.class || clazz == byte.class) {\n        return numberValue.byteValue();\n      }\n else       if (clazz == Short.class || clazz == short.class) {\n        return numberValue.shortValue();\n      }\n else {\n        throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1696,
        "startLineNumber" : 118,
        "startColumnNumber" : 6,
        "endLineNumber" : 154,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (value != null) {\n  if (value == JSONObject.NULL) {\n    return null;\n  }\n  if (value.getClass() == field.getType()) {\n    return value;\n  }\n  if (value instanceof JSONObject) {\n    return convertValue(value,field.getType());\n  }\n else {\n    if (field.getType().isEnum()) {\n      return getEnumValue((String)value,field.getType().asSubclass(Enum.class));\n    }\n else     if (value instanceof JSONArray) {\n      return convertArrayToList(field,(JSONArray)value);\n    }\n else     if (value instanceof Number) {\n      Number numberValue=(Number)value;\n      Class<?> clazz=field.getType();\n      if (clazz == Integer.class || clazz == int.class) {\n        return numberValue.intValue();\n      }\n else       if (clazz == Long.class || clazz == long.class) {\n        return numberValue.longValue();\n      }\n else       if (clazz == Double.class || clazz == double.class) {\n        return numberValue.doubleValue();\n      }\n else       if (clazz == Float.class || clazz == float.class) {\n        return numberValue.floatValue();\n      }\n else       if (clazz == Byte.class || clazz == byte.class) {\n        return numberValue.byteValue();\n      }\n else       if (clazz == Short.class || clazz == short.class) {\n        return numberValue.shortValue();\n      }\n else {\n        throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 206,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1710,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (value != null) {\n    if (value == JSONObject.NULL) {\n      return null;\n    }\n    if (value.getClass() == field.getType()) {\n      return value;\n    }\n    if (value instanceof JSONObject) {\n      return convertValue(value,field.getType());\n    }\n else {\n      if (field.getType().isEnum()) {\n        return getEnumValue((String)value,field.getType().asSubclass(Enum.class));\n      }\n else       if (value instanceof JSONArray) {\n        return convertArrayToList(field,(JSONArray)value);\n      }\n else       if (value instanceof Number) {\n        Number numberValue=(Number)value;\n        Class<?> clazz=field.getType();\n        if (clazz == Integer.class || clazz == int.class) {\n          return numberValue.intValue();\n        }\n else         if (clazz == Long.class || clazz == long.class) {\n          return numberValue.longValue();\n        }\n else         if (clazz == Double.class || clazz == double.class) {\n          return numberValue.doubleValue();\n        }\n else         if (clazz == Float.class || clazz == float.class) {\n          return numberValue.floatValue();\n        }\n else         if (clazz == Byte.class || clazz == byte.class) {\n          return numberValue.byteValue();\n        }\n else         if (clazz == Short.class || clazz == short.class) {\n          return numberValue.shortValue();\n        }\n else {\n          throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1852,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 157,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  if (value != null) {\n    if (value == JSONObject.NULL) {\n      return null;\n    }\n    if (value.getClass() == field.getType()) {\n      return value;\n    }\n    if (value instanceof JSONObject) {\n      return convertValue(value,field.getType());\n    }\n else {\n      if (field.getType().isEnum()) {\n        return getEnumValue((String)value,field.getType().asSubclass(Enum.class));\n      }\n else       if (value instanceof JSONArray) {\n        return convertArrayToList(field,(JSONArray)value);\n      }\n else       if (value instanceof Number) {\n        Number numberValue=(Number)value;\n        Class<?> clazz=field.getType();\n        if (clazz == Integer.class || clazz == int.class) {\n          return numberValue.intValue();\n        }\n else         if (clazz == Long.class || clazz == long.class) {\n          return numberValue.longValue();\n        }\n else         if (clazz == Double.class || clazz == double.class) {\n          return numberValue.doubleValue();\n        }\n else         if (clazz == Float.class || clazz == float.class) {\n          return numberValue.floatValue();\n        }\n else         if (clazz == Byte.class || clazz == byte.class) {\n          return numberValue.byteValue();\n        }\n else         if (clazz == Short.class || clazz == short.class) {\n          return numberValue.shortValue();\n        }\n else {\n          throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n        }\n      }\n    }\n  }\n}\n catch (IllegalAccessException e) {\n  throw new IllegalArgumentException(\"Unable to set value for field \" + field.getName(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 224,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1880,
        "startLineNumber" : 116,
        "startColumnNumber" : 27,
        "endLineNumber" : 159,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    if (value != null) {\n      if (value == JSONObject.NULL) {\n        return null;\n      }\n      if (value.getClass() == field.getType()) {\n        return value;\n      }\n      if (value instanceof JSONObject) {\n        return convertValue(value,field.getType());\n      }\n else {\n        if (field.getType().isEnum()) {\n          return getEnumValue((String)value,field.getType().asSubclass(Enum.class));\n        }\n else         if (value instanceof JSONArray) {\n          return convertArrayToList(field,(JSONArray)value);\n        }\n else         if (value instanceof Number) {\n          Number numberValue=(Number)value;\n          Class<?> clazz=field.getType();\n          if (clazz == Integer.class || clazz == int.class) {\n            return numberValue.intValue();\n          }\n else           if (clazz == Long.class || clazz == long.class) {\n            return numberValue.longValue();\n          }\n else           if (clazz == Double.class || clazz == double.class) {\n            return numberValue.doubleValue();\n          }\n else           if (clazz == Float.class || clazz == float.class) {\n            return numberValue.floatValue();\n          }\n else           if (clazz == Byte.class || clazz == byte.class) {\n            return numberValue.byteValue();\n          }\n else           if (clazz == Short.class || clazz == short.class) {\n            return numberValue.shortValue();\n          }\n else {\n            throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n          }\n        }\n      }\n    }\n  }\n catch (  IllegalAccessException e) {\n    throw new IllegalArgumentException(\"Unable to set value for field \" + field.getName(),e);\n  }\n  return value;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1966,
        "startLineNumber" : 115,
        "startColumnNumber" : 2,
        "endLineNumber" : 159,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private Object getValueForField(Field field,Object value) throws JSONException {\n  try {\n    if (value != null) {\n      if (value == JSONObject.NULL) {\n        return null;\n      }\n      if (value.getClass() == field.getType()) {\n        return value;\n      }\n      if (value instanceof JSONObject) {\n        return convertValue(value,field.getType());\n      }\n else {\n        if (field.getType().isEnum()) {\n          return getEnumValue((String)value,field.getType().asSubclass(Enum.class));\n        }\n else         if (value instanceof JSONArray) {\n          return convertArrayToList(field,(JSONArray)value);\n        }\n else         if (value instanceof Number) {\n          Number numberValue=(Number)value;\n          Class<?> clazz=field.getType();\n          if (clazz == Integer.class || clazz == int.class) {\n            return numberValue.intValue();\n          }\n else           if (clazz == Long.class || clazz == long.class) {\n            return numberValue.longValue();\n          }\n else           if (clazz == Double.class || clazz == double.class) {\n            return numberValue.doubleValue();\n          }\n else           if (clazz == Float.class || clazz == float.class) {\n            return numberValue.floatValue();\n          }\n else           if (clazz == Byte.class || clazz == byte.class) {\n            return numberValue.byteValue();\n          }\n else           if (clazz == Short.class || clazz == short.class) {\n            return numberValue.shortValue();\n          }\n else {\n            throw new IllegalArgumentException(\"Not setup to handle class \" + clazz.getName());\n          }\n        }\n      }\n    }\n  }\n catch (  IllegalAccessException e) {\n    throw new IllegalArgumentException(\"Unable to set value for field \" + field.getName(),e);\n  }\n  return value;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 242,
      "astHeight" : 24
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 139,
        "startColumnNumber" : 23,
        "endLineNumber" : 139,
        "endColumnNumber" : 65
      },
      "nodeContext" : "clazz == Long.class || clazz == long.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 139,
    "startColumnNumber" : 23,
    "endLineNumber" : 139,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}