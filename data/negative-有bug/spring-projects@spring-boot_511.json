{
  "id" : 511,
  "expression" : "registrations",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/security/oauth2/client/OAuth2ClientPropertiesRegistrationAdapterTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "registrations",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 66,
      "startColumnNumber" : 31,
      "endLineNumber" : 66,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 66,
        "startColumnNumber" : 31,
        "endLineNumber" : 66,
        "endColumnNumber" : 64
      },
      "nodeContext" : "registrations.get(\"registration\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 66,
        "startColumnNumber" : 21,
        "endLineNumber" : 66,
        "endColumnNumber" : 64
      },
      "nodeContext" : "adapted=registrations.get(\"registration\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 65
      },
      "nodeContext" : "ClientRegistration adapted=registrations.get(\"registration\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2248,
        "startLineNumber" : 46,
        "startColumnNumber" : 20,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  OAuth2ClientProperties properties=new OAuth2ClientProperties();\n  Provider provider=new Provider();\n  provider.setAuthorizationUri(\"http://example.com/auth\");\n  provider.setTokenUri(\"http://example.com/token\");\n  provider.setUserInfoUri(\"http://example.com/info\");\n  provider.setJwkSetUri(\"http://example.com/jwk\");\n  Registration registration=new Registration();\n  registration.setProvider(\"provider\");\n  registration.setClientId(\"clientId\");\n  registration.setClientSecret(\"clientSecret\");\n  registration.setClientAuthenticationMethod(\"post\");\n  registration.setAuthorizationGrantType(\"authorization_code\");\n  registration.setRedirectUriTemplate(\"http://example.com/redirect\");\n  registration.setScope(Collections.singleton(\"scope\"));\n  registration.setClientName(\"clientName\");\n  properties.getProvider().put(\"provider\",provider);\n  properties.getRegistration().put(\"registration\",registration);\n  Map<String,ClientRegistration> registrations=OAuth2ClientPropertiesRegistrationAdapter.getClientRegistrations(properties);\n  ClientRegistration adapted=registrations.get(\"registration\");\n  ProviderDetails adaptedProvider=adapted.getProviderDetails();\n  assertThat(adaptedProvider.getAuthorizationUri()).isEqualTo(\"http://example.com/auth\");\n  assertThat(adaptedProvider.getTokenUri()).isEqualTo(\"http://example.com/token\");\n  assertThat(adaptedProvider.getUserInfoEndpoint().getUri()).isEqualTo(\"http://example.com/info\");\n  assertThat(adaptedProvider.getJwkSetUri()).isEqualTo(\"http://example.com/jwk\");\n  assertThat(adapted.getRegistrationId()).isEqualTo(\"registration\");\n  assertThat(adapted.getClientId()).isEqualTo(\"clientId\");\n  assertThat(adapted.getClientSecret()).isEqualTo(\"clientSecret\");\n  assertThat(adapted.getClientAuthenticationMethod()).isEqualTo(org.springframework.security.oauth2.core.ClientAuthenticationMethod.POST);\n  assertThat(adapted.getAuthorizationGrantType()).isEqualTo(org.springframework.security.oauth2.core.AuthorizationGrantType.AUTHORIZATION_CODE);\n  assertThat(adapted.getRedirectUriTemplate()).isEqualTo(\"http://example.com/redirect\");\n  assertThat(adapted.getScopes()).containsExactly(\"scope\");\n  assertThat(adapted.getClientName()).isEqualTo(\"clientName\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 269,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2347,
        "startLineNumber" : 44,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void getClientRegistrationsWhenUsingDefinedProviderShouldAdapt() throws Exception {\n  OAuth2ClientProperties properties=new OAuth2ClientProperties();\n  Provider provider=new Provider();\n  provider.setAuthorizationUri(\"http://example.com/auth\");\n  provider.setTokenUri(\"http://example.com/token\");\n  provider.setUserInfoUri(\"http://example.com/info\");\n  provider.setJwkSetUri(\"http://example.com/jwk\");\n  Registration registration=new Registration();\n  registration.setProvider(\"provider\");\n  registration.setClientId(\"clientId\");\n  registration.setClientSecret(\"clientSecret\");\n  registration.setClientAuthenticationMethod(\"post\");\n  registration.setAuthorizationGrantType(\"authorization_code\");\n  registration.setRedirectUriTemplate(\"http://example.com/redirect\");\n  registration.setScope(Collections.singleton(\"scope\"));\n  registration.setClientName(\"clientName\");\n  properties.getProvider().put(\"provider\",provider);\n  properties.getRegistration().put(\"registration\",registration);\n  Map<String,ClientRegistration> registrations=OAuth2ClientPropertiesRegistrationAdapter.getClientRegistrations(properties);\n  ClientRegistration adapted=registrations.get(\"registration\");\n  ProviderDetails adaptedProvider=adapted.getProviderDetails();\n  assertThat(adaptedProvider.getAuthorizationUri()).isEqualTo(\"http://example.com/auth\");\n  assertThat(adaptedProvider.getTokenUri()).isEqualTo(\"http://example.com/token\");\n  assertThat(adaptedProvider.getUserInfoEndpoint().getUri()).isEqualTo(\"http://example.com/info\");\n  assertThat(adaptedProvider.getJwkSetUri()).isEqualTo(\"http://example.com/jwk\");\n  assertThat(adapted.getRegistrationId()).isEqualTo(\"registration\");\n  assertThat(adapted.getClientId()).isEqualTo(\"clientId\");\n  assertThat(adapted.getClientSecret()).isEqualTo(\"clientSecret\");\n  assertThat(adapted.getClientAuthenticationMethod()).isEqualTo(org.springframework.security.oauth2.core.ClientAuthenticationMethod.POST);\n  assertThat(adapted.getAuthorizationGrantType()).isEqualTo(org.springframework.security.oauth2.core.AuthorizationGrantType.AUTHORIZATION_CODE);\n  assertThat(adapted.getRedirectUriTemplate()).isEqualTo(\"http://example.com/redirect\");\n  assertThat(adapted.getScopes()).containsExactly(\"scope\");\n  assertThat(adapted.getClientName()).isEqualTo(\"clientName\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 277,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 65
      },
      "nodeContext" : "ClientRegistration adapted=registrations.get(\"registration\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.security.oauth2.client.ClientRegistration>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 66,
    "startColumnNumber" : 31,
    "endLineNumber" : 66,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}