{
  "id" : 33,
  "expression" : "(ByteArrayInputStream)callback.data",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/test/src/test/java/com/bumptech/glide/load/model/DataUrlLoaderTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(ByteArrayInputStream)callback.data",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 88,
      "startColumnNumber" : 30,
      "endLineNumber" : 88,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 88,
        "startColumnNumber" : 29,
        "endLineNumber" : 88,
        "endColumnNumber" : 67
      },
      "nodeContext" : "((ByteArrayInputStream)callback.data)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayCreation,dimensions]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 88,
        "startColumnNumber" : 29,
        "endLineNumber" : 88,
        "endColumnNumber" : 79
      },
      "nodeContext" : "((ByteArrayInputStream)callback.data).available()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 88,
        "startColumnNumber" : 20,
        "endLineNumber" : 88,
        "endColumnNumber" : 80
      },
      "nodeContext" : "new byte[((ByteArrayInputStream)callback.data).available()]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 88,
        "startColumnNumber" : 11,
        "endLineNumber" : 88,
        "endColumnNumber" : 80
      },
      "nodeContext" : "result=new byte[((ByteArrayInputStream)callback.data).available()]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 81
      },
      "nodeContext" : "byte[] result=new byte[((ByteArrayInputStream)callback.data).available()];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 83,
        "startColumnNumber" : 46,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] expected=Base64.decode(VALID_PNG.substring(VALID_PNG.indexOf(',') + 1),Base64.DEFAULT);\n  CallBack callback=new CallBack();\n  fetcher.loadData(Priority.HIGH,callback);\n  byte[] result=new byte[((ByteArrayInputStream)callback.data).available()];\n  assertEquals(result.length,((ByteArrayInputStream)callback.data).read(result));\n  assertTrue(Arrays.equals(result,expected));\n  assertNull(callback.exception);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDecode() throws IOException {\n  byte[] expected=Base64.decode(VALID_PNG.substring(VALID_PNG.indexOf(',') + 1),Base64.DEFAULT);\n  CallBack callback=new CallBack();\n  fetcher.loadData(Priority.HIGH,callback);\n  byte[] result=new byte[((ByteArrayInputStream)callback.data).available()];\n  assertEquals(result.length,((ByteArrayInputStream)callback.data).read(result));\n  assertTrue(Arrays.equals(result,expected));\n  assertNull(callback.exception);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 81
      },
      "nodeContext" : "byte[] result=new byte[((ByteArrayInputStream)callback.data).available()];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "java.io.ByteArrayInputStream"
  }, {
    "nodeContext" : "(ByteArrayInputStream)callback.data",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 89,
      "startColumnNumber" : 33,
      "endLineNumber" : 89,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 89,
        "startColumnNumber" : 32,
        "endLineNumber" : 89,
        "endColumnNumber" : 70
      },
      "nodeContext" : "((ByteArrayInputStream)callback.data)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 89,
        "startColumnNumber" : 32,
        "endLineNumber" : 89,
        "endColumnNumber" : 83
      },
      "nodeContext" : "((ByteArrayInputStream)callback.data).read(result)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 84
      },
      "nodeContext" : "assertEquals(result.length,((ByteArrayInputStream)callback.data).read(result))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 85
      },
      "nodeContext" : "assertEquals(result.length,((ByteArrayInputStream)callback.data).read(result));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 83,
        "startColumnNumber" : 46,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] expected=Base64.decode(VALID_PNG.substring(VALID_PNG.indexOf(',') + 1),Base64.DEFAULT);\n  CallBack callback=new CallBack();\n  fetcher.loadData(Priority.HIGH,callback);\n  byte[] result=new byte[((ByteArrayInputStream)callback.data).available()];\n  assertEquals(result.length,((ByteArrayInputStream)callback.data).read(result));\n  assertTrue(Arrays.equals(result,expected));\n  assertNull(callback.exception);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDecode() throws IOException {\n  byte[] expected=Base64.decode(VALID_PNG.substring(VALID_PNG.indexOf(',') + 1),Base64.DEFAULT);\n  CallBack callback=new CallBack();\n  fetcher.loadData(Priority.HIGH,callback);\n  byte[] result=new byte[((ByteArrayInputStream)callback.data).available()];\n  assertEquals(result.length,((ByteArrayInputStream)callback.data).read(result));\n  assertTrue(Arrays.equals(result,expected));\n  assertNull(callback.exception);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 85
      },
      "nodeContext" : "assertEquals(result.length,((ByteArrayInputStream)callback.data).read(result));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "java.io.ByteArrayInputStream"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 88,
    "startColumnNumber" : 30,
    "endLineNumber" : 88,
    "endColumnNumber" : 66
  }, {
    "charLength" : 36,
    "startLineNumber" : 89,
    "startColumnNumber" : 33,
    "endLineNumber" : 89,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}