{
  "id" : 116,
  "expression" : "new NumberCoercer<>(Short.class,Number::shortValue)",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/org/openqa/selenium/json/JsonTypeCoercer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new NumberCoercer<>(Short.class,Number::shortValue)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 86,
      "startColumnNumber" : 16,
      "endLineNumber" : 86,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 69
      },
      "nodeContext" : "builder.add(new NumberCoercer<>(Short.class,Number::shortValue))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 70
      },
      "nodeContext" : "builder.add(new NumberCoercer<>(Short.class,Number::shortValue));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2432,
        "startLineNumber" : 61,
        "startColumnNumber" : 59,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.additionalCoercers=coercers.collect(collectingAndThen(toSet(),Collections::unmodifiableSet));\n  Set<TypeCoercer<?>> builder=new LinkedHashSet<>(additionalCoercers);\n  builder.add(new BooleanCoercer());\n  builder.add(new NumberCoercer<>(Byte.class,Number::byteValue));\n  builder.add(new NumberCoercer<>(Double.class,Number::doubleValue));\n  builder.add(new NumberCoercer<>(Float.class,Number::floatValue));\n  builder.add(new NumberCoercer<>(Integer.class,Number::intValue));\n  builder.add(new NumberCoercer<>(Long.class,Number::longValue));\n  builder.add(new NumberCoercer<>(Number.class,num -> {\n    double doubleValue=num.doubleValue();\n    if (doubleValue % 1 != 0 || doubleValue > Long.MAX_VALUE) {\n      return doubleValue;\n    }\n    return num.longValue();\n  }\n));\n  builder.add(new NumberCoercer<>(Short.class,Number::shortValue));\n  builder.add(new StringCoercer());\n  builder.add(new EnumCoercer<>());\n  builder.add(new UriCoercer());\n  builder.add(new UrlCoercer());\n  builder.add(new UuidCoercer());\n  builder.add(new InstantCoercer());\n  builder.add(new MapCoercer<>(Capabilities.class,this,Collector.of(MutableCapabilities::new,(caps,entry) -> caps.setCapability((String)entry.getKey(),entry.getValue()),MutableCapabilities::merge,UNORDERED)));\n  builder.add(new CollectionCoercer<>(List.class,this,Collectors.toCollection(ArrayList::new)));\n  builder.add(new CollectionCoercer<>(Set.class,this,Collectors.toCollection(HashSet::new)));\n  builder.add(new StaticInitializerCoercer());\n  builder.add(new MapCoercer<>(Map.class,this,Collector.of(LinkedHashMap::new,(map,entry) -> map.put(entry.getKey(),entry.getValue()),(l,r) -> {\n    l.putAll(r);\n    return l;\n  }\n,UNORDERED,CONCURRENT)));\n  builder.add(new ObjectCoercer(this));\n  builder.add(new InstanceCoercer(this));\n  this.coercers=Collections.unmodifiableSet(builder);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 360,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2489,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private JsonTypeCoercer(Stream<TypeCoercer<?>> coercers){\n  this.additionalCoercers=coercers.collect(collectingAndThen(toSet(),Collections::unmodifiableSet));\n  Set<TypeCoercer<?>> builder=new LinkedHashSet<>(additionalCoercers);\n  builder.add(new BooleanCoercer());\n  builder.add(new NumberCoercer<>(Byte.class,Number::byteValue));\n  builder.add(new NumberCoercer<>(Double.class,Number::doubleValue));\n  builder.add(new NumberCoercer<>(Float.class,Number::floatValue));\n  builder.add(new NumberCoercer<>(Integer.class,Number::intValue));\n  builder.add(new NumberCoercer<>(Long.class,Number::longValue));\n  builder.add(new NumberCoercer<>(Number.class,num -> {\n    double doubleValue=num.doubleValue();\n    if (doubleValue % 1 != 0 || doubleValue > Long.MAX_VALUE) {\n      return doubleValue;\n    }\n    return num.longValue();\n  }\n));\n  builder.add(new NumberCoercer<>(Short.class,Number::shortValue));\n  builder.add(new StringCoercer());\n  builder.add(new EnumCoercer<>());\n  builder.add(new UriCoercer());\n  builder.add(new UrlCoercer());\n  builder.add(new UuidCoercer());\n  builder.add(new InstantCoercer());\n  builder.add(new MapCoercer<>(Capabilities.class,this,Collector.of(MutableCapabilities::new,(caps,entry) -> caps.setCapability((String)entry.getKey(),entry.getValue()),MutableCapabilities::merge,UNORDERED)));\n  builder.add(new CollectionCoercer<>(List.class,this,Collectors.toCollection(ArrayList::new)));\n  builder.add(new CollectionCoercer<>(Set.class,this,Collectors.toCollection(HashSet::new)));\n  builder.add(new StaticInitializerCoercer());\n  builder.add(new MapCoercer<>(Map.class,this,Collector.of(LinkedHashMap::new,(map,entry) -> map.put(entry.getKey(),entry.getValue()),(l,r) -> {\n    l.putAll(r);\n    return l;\n  }\n,UNORDERED,CONCURRENT)));\n  builder.add(new ObjectCoercer(this));\n  builder.add(new InstanceCoercer(this));\n  this.coercers=Collections.unmodifiableSet(builder);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 372,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 70
      },
      "nodeContext" : "builder.add(new NumberCoercer<>(Short.class,Number::shortValue));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "org.openqa.selenium.json.NumberCoercer<java.lang.Short>"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 86,
    "startColumnNumber" : 16,
    "endLineNumber" : 86,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}