{
  "id" : 459,
  "expression" : "second == secondAgain",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/common/utils/ImplicitLinkedHashCollectionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "second == secondAgain",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 128,
      "startColumnNumber" : 19,
      "endLineNumber" : 128,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertTrue(second == secondAgain)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertTrue(second == secondAgain);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 805,
        "startLineNumber" : 117,
        "startColumnNumber" : 35,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImplicitLinkedHashCollection<TestElement> coll=new ImplicitLinkedHashCollection<>(100);\n  assertTrue(coll.add(new TestElement(1)));\n  TestElement second=new TestElement(2);\n  assertTrue(coll.add(second));\n  assertTrue(coll.add(new TestElement(3)));\n  assertFalse(coll.add(new TestElement(3)));\n  assertEquals(3,coll.size());\n  assertTrue(coll.contains(new TestElement(1)));\n  assertFalse(coll.contains(new TestElement(4)));\n  TestElement secondAgain=coll.find(new TestElement(2));\n  assertTrue(second == secondAgain);\n  assertTrue(coll.remove(new TestElement(1)));\n  assertFalse(coll.remove(new TestElement(1)));\n  assertEquals(2,coll.size());\n  coll.clear();\n  assertEquals(0,coll.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInsertDelete(){\n  ImplicitLinkedHashCollection<TestElement> coll=new ImplicitLinkedHashCollection<>(100);\n  assertTrue(coll.add(new TestElement(1)));\n  TestElement second=new TestElement(2);\n  assertTrue(coll.add(second));\n  assertTrue(coll.add(new TestElement(3)));\n  assertFalse(coll.add(new TestElement(3)));\n  assertEquals(3,coll.size());\n  assertTrue(coll.contains(new TestElement(1)));\n  assertFalse(coll.contains(new TestElement(4)));\n  TestElement secondAgain=coll.find(new TestElement(2));\n  assertTrue(second == secondAgain);\n  assertTrue(coll.remove(new TestElement(1)));\n  assertFalse(coll.remove(new TestElement(1)));\n  assertEquals(2,coll.size());\n  coll.clear();\n  assertEquals(0,coll.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertTrue(second == secondAgain);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 128,
    "startColumnNumber" : 19,
    "endLineNumber" : 128,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}