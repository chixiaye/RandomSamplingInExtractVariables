{
  "id" : 219,
  "expression" : "scrape()",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-server/src/test/java/zipkin2/server/internal/prometheus/ITZipkinMetricsDirty.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "scrape()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 154,
      "startColumnNumber" : 15,
      "endLineNumber" : 154,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 24
      },
      "nodeContext" : "assertThat(scrape())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertThat(scrape()).doesNotContain(\"zipkin_collector_spans_total \" + messagesCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 85
      },
      "nodeContext" : "assertThat(scrape()).doesNotContain(\"zipkin_collector_spans_total \" + messagesCount).contains(\"zipkin_collector_spans_total{transport=\\\"http\\\",} \" + messagesCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 159,
        "endColumnNumber" : 22
      },
      "nodeContext" : "assertThat(scrape()).doesNotContain(\"zipkin_collector_spans_total \" + messagesCount).contains(\"zipkin_collector_spans_total{transport=\\\"http\\\",} \" + messagesCount).contains(\"http_server_requests_seconds_count{method=\\\"POST\\\",status=\\\"202\\\",uri=\\\"/api/v2/spans\\\",} \" + httpCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 319,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 159,
        "endColumnNumber" : 23
      },
      "nodeContext" : "assertThat(scrape()).doesNotContain(\"zipkin_collector_spans_total \" + messagesCount).contains(\"zipkin_collector_spans_total{transport=\\\"http\\\",} \" + messagesCount).contains(\"http_server_requests_seconds_count{method=\\\"POST\\\",status=\\\"202\\\",uri=\\\"/api/v2/spans\\\",} \" + httpCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 136,
        "startColumnNumber" : 68,
        "endLineNumber" : 160,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Span> spans=asList(LOTS_OF_SPANS[0],LOTS_OF_SPANS[1],LOTS_OF_SPANS[2]);\n  byte[] body=SpanBytesEncoder.JSON_V2.encodeList(spans);\n  post(\"/api/v2/spans\",body);\n  post(\"/api/v2/spans\",body);\n  Thread.sleep(100);\n  double messagesCount=registry.counter(\"zipkin_collector.spans\",\"transport\",\"http\").count();\n  long httpCount=registry.find(\"http.server.requests\").tag(\"uri\",\"/api/v2/spans\").timer().count();\n  assertThat(scrape()).doesNotContain(\"zipkin_collector_spans_total \" + messagesCount).contains(\"zipkin_collector_spans_total{transport=\\\"http\\\",} \" + messagesCount).contains(\"http_server_requests_seconds_count{method=\\\"POST\\\",status=\\\"202\\\",uri=\\\"/api/v2/spans\\\",} \" + httpCount);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 133,
        "startColumnNumber" : 2,
        "endLineNumber" : 160,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Makes sure the prometheus filter doesn't count twice\n */\n@Test void writeSpans_updatesPrometheusMetrics() throws Exception {\n  List<Span> spans=asList(LOTS_OF_SPANS[0],LOTS_OF_SPANS[1],LOTS_OF_SPANS[2]);\n  byte[] body=SpanBytesEncoder.JSON_V2.encodeList(spans);\n  post(\"/api/v2/spans\",body);\n  post(\"/api/v2/spans\",body);\n  Thread.sleep(100);\n  double messagesCount=registry.counter(\"zipkin_collector.spans\",\"transport\",\"http\").count();\n  long httpCount=registry.find(\"http.server.requests\").tag(\"uri\",\"/api/v2/spans\").timer().count();\n  assertThat(scrape()).doesNotContain(\"zipkin_collector_spans_total \" + messagesCount).contains(\"zipkin_collector_spans_total{transport=\\\"http\\\",} \" + messagesCount).contains(\"http_server_requests_seconds_count{method=\\\"POST\\\",status=\\\"202\\\",uri=\\\"/api/v2/spans\\\",} \" + httpCount);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 24
      },
      "nodeContext" : "assertThat(scrape())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 154,
    "startColumnNumber" : 15,
    "endLineNumber" : 154,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}