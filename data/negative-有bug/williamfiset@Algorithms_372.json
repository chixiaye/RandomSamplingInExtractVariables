{
  "id" : 372,
  "expression" : "5",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/graphtheory/treealgorithms/TreeIsomorphismWithBfsTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 40,
      "startColumnNumber" : 48,
      "endLineNumber" : 40,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 40,
        "startColumnNumber" : 32,
        "endLineNumber" : 40,
        "endColumnNumber" : 50
      },
      "nodeContext" : "createEmptyTree(5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 40,
        "startColumnNumber" : 24,
        "endLineNumber" : 40,
        "endColumnNumber" : 50
      },
      "nodeContext" : "tree1=createEmptyTree(5)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 51
      },
      "nodeContext" : "List<List<Integer>> tree1=createEmptyTree(5);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 39,
        "startColumnNumber" : 26,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<List<Integer>> tree1=createEmptyTree(5);\n  List<List<Integer>> tree2=createEmptyTree(5);\n  addUndirectedEdge(tree1,2,0);\n  addUndirectedEdge(tree1,2,1);\n  addUndirectedEdge(tree1,2,3);\n  addUndirectedEdge(tree1,3,4);\n  addUndirectedEdge(tree2,1,3);\n  addUndirectedEdge(tree2,1,0);\n  addUndirectedEdge(tree2,1,2);\n  addUndirectedEdge(tree2,2,4);\n  assertThat(treesAreIsomorphic(tree1,tree2)).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSmall(){\n  List<List<Integer>> tree1=createEmptyTree(5);\n  List<List<Integer>> tree2=createEmptyTree(5);\n  addUndirectedEdge(tree1,2,0);\n  addUndirectedEdge(tree1,2,1);\n  addUndirectedEdge(tree1,2,3);\n  addUndirectedEdge(tree1,3,4);\n  addUndirectedEdge(tree2,1,3);\n  addUndirectedEdge(tree2,1,0);\n  addUndirectedEdge(tree2,1,2);\n  addUndirectedEdge(tree2,2,4);\n  assertThat(treesAreIsomorphic(tree1,tree2)).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 51
      },
      "nodeContext" : "List<List<Integer>> tree1=createEmptyTree(5);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 41,
      "startColumnNumber" : 48,
      "endLineNumber" : 41,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 41,
        "startColumnNumber" : 32,
        "endLineNumber" : 41,
        "endColumnNumber" : 50
      },
      "nodeContext" : "createEmptyTree(5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 41,
        "startColumnNumber" : 24,
        "endLineNumber" : 41,
        "endColumnNumber" : 50
      },
      "nodeContext" : "tree2=createEmptyTree(5)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 51
      },
      "nodeContext" : "List<List<Integer>> tree2=createEmptyTree(5);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 39,
        "startColumnNumber" : 26,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<List<Integer>> tree1=createEmptyTree(5);\n  List<List<Integer>> tree2=createEmptyTree(5);\n  addUndirectedEdge(tree1,2,0);\n  addUndirectedEdge(tree1,2,1);\n  addUndirectedEdge(tree1,2,3);\n  addUndirectedEdge(tree1,3,4);\n  addUndirectedEdge(tree2,1,3);\n  addUndirectedEdge(tree2,1,0);\n  addUndirectedEdge(tree2,1,2);\n  addUndirectedEdge(tree2,2,4);\n  assertThat(treesAreIsomorphic(tree1,tree2)).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSmall(){\n  List<List<Integer>> tree1=createEmptyTree(5);\n  List<List<Integer>> tree2=createEmptyTree(5);\n  addUndirectedEdge(tree1,2,0);\n  addUndirectedEdge(tree1,2,1);\n  addUndirectedEdge(tree1,2,3);\n  addUndirectedEdge(tree1,3,4);\n  addUndirectedEdge(tree2,1,3);\n  addUndirectedEdge(tree2,1,0);\n  addUndirectedEdge(tree2,1,2);\n  addUndirectedEdge(tree2,2,4);\n  assertThat(treesAreIsomorphic(tree1,tree2)).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 51
      },
      "nodeContext" : "List<List<Integer>> tree2=createEmptyTree(5);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 40,
    "startColumnNumber" : 48,
    "endLineNumber" : 40,
    "endColumnNumber" : 49
  }, {
    "charLength" : 1,
    "startLineNumber" : 41,
    "startColumnNumber" : 48,
    "endLineNumber" : 41,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}