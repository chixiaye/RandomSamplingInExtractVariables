{
  "id" : 117,
  "expression" : "jedis.incrBy(\"foo\",Integer.MAX_VALUE)",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/test/java/redis/clients/jedis/tests/commands/StringValuesCommandsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "jedis.incrBy(\"foo\",Integer.MAX_VALUE)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 189,
      "startColumnNumber" : 48,
      "endLineNumber" : 189,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 189,
        "startColumnNumber" : 41,
        "endLineNumber" : 189,
        "endColumnNumber" : 86
      },
      "nodeContext" : "(long)jedis.incrBy(\"foo\",Integer.MAX_VALUE)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 189,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertEquals(1L + Integer.MAX_VALUE,(long)jedis.incrBy(\"foo\",Integer.MAX_VALUE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 189,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertEquals(1L + Integer.MAX_VALUE,(long)jedis.incrBy(\"foo\",Integer.MAX_VALUE));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 186,
        "startColumnNumber" : 33,
        "endLineNumber" : 190,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  long value=jedis.incr(\"foo\");\n  assertEquals(1,value);\n  assertEquals(1L + Integer.MAX_VALUE,(long)jedis.incrBy(\"foo\",Integer.MAX_VALUE));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 185,
        "startColumnNumber" : 2,
        "endLineNumber" : 190,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void incrLargeNumbers(){\n  long value=jedis.incr(\"foo\");\n  assertEquals(1,value);\n  assertEquals(1L + Integer.MAX_VALUE,(long)jedis.incrBy(\"foo\",Integer.MAX_VALUE));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 189,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertEquals(1L + Integer.MAX_VALUE,(long)jedis.incrBy(\"foo\",Integer.MAX_VALUE));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "java.lang.Long"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 189,
    "startColumnNumber" : 48,
    "endLineNumber" : 189,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}