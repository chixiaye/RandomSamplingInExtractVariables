{
  "id" : 128,
  "expression" : "new IllegalStateException(\"Mismatched Hive columns and types. Hive columns names\" + \" found : \" + columnNames + \" . And Hive types found : \"+ columnTypes)",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-hive/src/test/java/com/facebook/presto/hive/parquet/write/SingleLevelArrayMapKeyValuesSchemaConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IllegalStateException(\"Mismatched Hive columns and types. Hive columns names\" + \" found : \" + columnNames + \" . And Hive types found : \"+ columnTypes)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 175,
      "startLineNumber" : 58,
      "startColumnNumber" : 18,
      "endLineNumber" : 59,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 92
      },
      "nodeContext" : "throw new IllegalStateException(\"Mismatched Hive columns and types. Hive columns names\" + \" found : \" + columnNames + \" . And Hive types found : \"+ columnTypes);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 57,
        "startColumnNumber" : 54,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalStateException(\"Mismatched Hive columns and types. Hive columns names\" + \" found : \" + columnNames + \" . And Hive types found : \"+ columnTypes);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (columnNames.size() != columnTypes.size()) {\n  throw new IllegalStateException(\"Mismatched Hive columns and types. Hive columns names\" + \" found : \" + columnNames + \" . And Hive types found : \"+ columnTypes);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 490,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (columnNames.size() != columnTypes.size()) {\n    throw new IllegalStateException(\"Mismatched Hive columns and types. Hive columns names\" + \" found : \" + columnNames + \" . And Hive types found : \"+ columnTypes);\n  }\n  final Type[] types=new Type[columnNames.size()];\n  for (int i=0; i < columnNames.size(); ++i) {\n    types[i]=convertType(columnNames.get(i),columnTypes.get(i));\n  }\n  return types;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Type[] convertTypes(final List<String> columnNames,final List<TypeInfo> columnTypes){\n  if (columnNames.size() != columnTypes.size()) {\n    throw new IllegalStateException(\"Mismatched Hive columns and types. Hive columns names\" + \" found : \" + columnNames + \" . And Hive types found : \"+ columnTypes);\n  }\n  final Type[] types=new Type[columnNames.size()];\n  for (int i=0; i < columnNames.size(); ++i) {\n    types[i]=convertType(columnNames.get(i),columnTypes.get(i));\n  }\n  return types;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 92
      },
      "nodeContext" : "throw new IllegalStateException(\"Mismatched Hive columns and types. Hive columns names\" + \" found : \" + columnNames + \" . And Hive types found : \"+ columnTypes);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 20,
    "type" : "java.lang.IllegalStateException"
  } ],
  "positionList" : [ {
    "charLength" : 175,
    "startLineNumber" : 58,
    "startColumnNumber" : 18,
    "endLineNumber" : 59,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}