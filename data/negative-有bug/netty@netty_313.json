{
  "id" : 313,
  "expression" : "contentLen != INADDRSZ6",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/resolver-dns/src/main/java/io/netty/resolver/dns/DnsAddressDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "contentLen != INADDRSZ6",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 51,
      "startColumnNumber" : 39,
      "endLineNumber" : 51,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 62
      },
      "nodeContext" : "contentLen != INADDRSZ4 && contentLen != INADDRSZ6",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (contentLen != INADDRSZ4 && contentLen != INADDRSZ6) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 45,
        "startColumnNumber" : 87,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(record instanceof DnsRawRecord)) {\n    return null;\n  }\n  final ByteBuf content=((ByteBufHolder)record).content();\n  final int contentLen=content.readableBytes();\n  if (contentLen != INADDRSZ4 && contentLen != INADDRSZ6) {\n    return null;\n  }\n  final byte[] addrBytes=new byte[contentLen];\n  content.getBytes(content.readerIndex(),addrBytes);\n  try {\n    return InetAddress.getByAddress(decodeIdn ? IDN.toUnicode(name) : name,addrBytes);\n  }\n catch (  UnknownHostException e) {\n    throw new Error(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Decodes an  {@link InetAddress} from an A or AAAA {@link DnsRawRecord}.\n * @param record the {@link DnsRecord}, most likely a  {@link DnsRawRecord}\n * @param name the host name of the decoded address\n * @param decodeIdn whether to convert {@code name} to a unicode host name\n * @return the {@link InetAddress}, or  {@code null} if {@code record} is not a {@link DnsRawRecord} orits content is malformed\n */\nstatic InetAddress decodeAddress(DnsRecord record,String name,boolean decodeIdn){\n  if (!(record instanceof DnsRawRecord)) {\n    return null;\n  }\n  final ByteBuf content=((ByteBufHolder)record).content();\n  final int contentLen=content.readableBytes();\n  if (contentLen != INADDRSZ4 && contentLen != INADDRSZ6) {\n    return null;\n  }\n  final byte[] addrBytes=new byte[contentLen];\n  content.getBytes(content.readerIndex(),addrBytes);\n  try {\n    return InetAddress.getByAddress(decodeIdn ? IDN.toUnicode(name) : name,addrBytes);\n  }\n catch (  UnknownHostException e) {\n    throw new Error(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 62
      },
      "nodeContext" : "contentLen != INADDRSZ4 && contentLen != INADDRSZ6",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 51,
    "startColumnNumber" : 39,
    "endLineNumber" : 51,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}