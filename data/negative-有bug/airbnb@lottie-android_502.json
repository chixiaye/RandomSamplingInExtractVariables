{
  "id" : 502,
  "expression" : "Integer.MAX_VALUE - 1",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/test/java/com/airbnb/lottie/MeanCalculatorTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer.MAX_VALUE - 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 46,
      "startColumnNumber" : 23,
      "endLineNumber" : 46,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 45
      },
      "nodeContext" : "meanCalculator.add(Integer.MAX_VALUE - 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 46
      },
      "nodeContext" : "meanCalculator.add(Integer.MAX_VALUE - 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 45,
        "startColumnNumber" : 39,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  meanCalculator.add(Integer.MAX_VALUE - 1);\n  meanCalculator.add(Integer.MAX_VALUE - 1);\n  assertThat(meanCalculator.getMean(),equalTo((float)(Integer.MAX_VALUE - 1)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMeanWithHugeNumber(){\n  meanCalculator.add(Integer.MAX_VALUE - 1);\n  meanCalculator.add(Integer.MAX_VALUE - 1);\n  assertThat(meanCalculator.getMean(),equalTo((float)(Integer.MAX_VALUE - 1)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 41,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 46
      },
      "nodeContext" : "meanCalculator.add(Integer.MAX_VALUE - 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "int"
  }, {
    "nodeContext" : "Integer.MAX_VALUE - 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 47,
      "startColumnNumber" : 23,
      "endLineNumber" : 47,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 45
      },
      "nodeContext" : "meanCalculator.add(Integer.MAX_VALUE - 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 46
      },
      "nodeContext" : "meanCalculator.add(Integer.MAX_VALUE - 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 45,
        "startColumnNumber" : 39,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  meanCalculator.add(Integer.MAX_VALUE - 1);\n  meanCalculator.add(Integer.MAX_VALUE - 1);\n  assertThat(meanCalculator.getMean(),equalTo((float)(Integer.MAX_VALUE - 1)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMeanWithHugeNumber(){\n  meanCalculator.add(Integer.MAX_VALUE - 1);\n  meanCalculator.add(Integer.MAX_VALUE - 1);\n  assertThat(meanCalculator.getMean(),equalTo((float)(Integer.MAX_VALUE - 1)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 41,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 46
      },
      "nodeContext" : "meanCalculator.add(Integer.MAX_VALUE - 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "int"
  }, {
    "nodeContext" : "Integer.MAX_VALUE - 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 48,
      "startColumnNumber" : 58,
      "endLineNumber" : 48,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 48,
        "startColumnNumber" : 57,
        "endLineNumber" : 48,
        "endColumnNumber" : 80
      },
      "nodeContext" : "(Integer.MAX_VALUE - 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 48,
        "startColumnNumber" : 49,
        "endLineNumber" : 48,
        "endColumnNumber" : 80
      },
      "nodeContext" : "(float)(Integer.MAX_VALUE - 1)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 48,
        "startColumnNumber" : 41,
        "endLineNumber" : 48,
        "endColumnNumber" : 81
      },
      "nodeContext" : "equalTo((float)(Integer.MAX_VALUE - 1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertThat(meanCalculator.getMean(),equalTo((float)(Integer.MAX_VALUE - 1)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 83
      },
      "nodeContext" : "assertThat(meanCalculator.getMean(),equalTo((float)(Integer.MAX_VALUE - 1)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 45,
        "startColumnNumber" : 39,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  meanCalculator.add(Integer.MAX_VALUE - 1);\n  meanCalculator.add(Integer.MAX_VALUE - 1);\n  assertThat(meanCalculator.getMean(),equalTo((float)(Integer.MAX_VALUE - 1)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMeanWithHugeNumber(){\n  meanCalculator.add(Integer.MAX_VALUE - 1);\n  meanCalculator.add(Integer.MAX_VALUE - 1);\n  assertThat(meanCalculator.getMean(),equalTo((float)(Integer.MAX_VALUE - 1)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 41,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 83
      },
      "nodeContext" : "assertThat(meanCalculator.getMean(),equalTo((float)(Integer.MAX_VALUE - 1)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 46,
    "startColumnNumber" : 23,
    "endLineNumber" : 46,
    "endColumnNumber" : 44
  }, {
    "charLength" : 21,
    "startLineNumber" : 47,
    "startColumnNumber" : 23,
    "endLineNumber" : 47,
    "endColumnNumber" : 44
  }, {
    "charLength" : 21,
    "startLineNumber" : 48,
    "startColumnNumber" : 58,
    "endLineNumber" : 48,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}