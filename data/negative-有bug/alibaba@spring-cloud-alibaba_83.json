{
  "id" : 83,
  "expression" : "false",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alibaba-starters/spring-cloud-starter-stream-rocketmq/src/main/java/com/alibaba/cloud/stream/binder/rocketmq/integration/inbound/pull/RocketMQMessageSource.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 94,
      "startColumnNumber" : 31,
      "endLineNumber" : 94,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 94,
        "startColumnNumber" : 3,
        "endLineNumber" : 94,
        "endColumnNumber" : 37
      },
      "nodeContext" : "this.consumer.setAutoCommit(false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 94,
        "startColumnNumber" : 3,
        "endLineNumber" : 94,
        "endColumnNumber" : 38
      },
      "nodeContext" : "this.consumer.setAutoCommit(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 826,
        "startLineNumber" : 84,
        "startColumnNumber" : 6,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (this.isRunning()) {\n    throw new IllegalStateException(\"pull consumer already running. \" + this.toString());\n  }\n  this.consumer=RocketMQConsumerFactory.initPullConsumer(topic,extendedConsumerProperties);\n  this.consumer.subscribe(topic,messageSelector);\n  this.consumer.setAutoCommit(false);\n  consumer.registerTopicMessageQueueChangeListener(topic,messageQueuesForTopic::put);\n  this.consumer.start();\n  messageQueuesForTopic.put(topic,consumer.fetchMessageQueues(topic));\n  instrumentation.markStartedSuccessfully();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  if (this.isRunning()) {\n    throw new IllegalStateException(\"pull consumer already running. \" + this.toString());\n  }\n  this.consumer=RocketMQConsumerFactory.initPullConsumer(topic,extendedConsumerProperties);\n  this.consumer.subscribe(topic,messageSelector);\n  this.consumer.setAutoCommit(false);\n  consumer.registerTopicMessageQueueChangeListener(topic,messageQueuesForTopic::put);\n  this.consumer.start();\n  messageQueuesForTopic.put(topic,consumer.fetchMessageQueues(topic));\n  instrumentation.markStartedSuccessfully();\n}\n catch (MQClientException e) {\n  instrumentation.markStartFailed(e);\n  log.error(\"DefaultMQPullConsumer startup error: \" + e.getMessage(),e);\n}\n finally {\n  InstrumentationManager.addHealthInstrumentation(instrumentation);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 95,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1176,
        "startLineNumber" : 82,
        "startColumnNumber" : 34,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Instrumentation instrumentation=new Instrumentation(topic,this);\n  try {\n    if (this.isRunning()) {\n      throw new IllegalStateException(\"pull consumer already running. \" + this.toString());\n    }\n    this.consumer=RocketMQConsumerFactory.initPullConsumer(topic,extendedConsumerProperties);\n    this.consumer.subscribe(topic,messageSelector);\n    this.consumer.setAutoCommit(false);\n    consumer.registerTopicMessageQueueChangeListener(topic,messageQueuesForTopic::put);\n    this.consumer.start();\n    messageQueuesForTopic.put(topic,consumer.fetchMessageQueues(topic));\n    instrumentation.markStartedSuccessfully();\n  }\n catch (  MQClientException e) {\n    instrumentation.markStartFailed(e);\n    log.error(\"DefaultMQPullConsumer startup error: \" + e.getMessage(),e);\n  }\n finally {\n    InstrumentationManager.addHealthInstrumentation(instrumentation);\n  }\n  this.running=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1221,
        "startLineNumber" : 81,
        "startColumnNumber" : 1,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public synchronized void start(){\n  Instrumentation instrumentation=new Instrumentation(topic,this);\n  try {\n    if (this.isRunning()) {\n      throw new IllegalStateException(\"pull consumer already running. \" + this.toString());\n    }\n    this.consumer=RocketMQConsumerFactory.initPullConsumer(topic,extendedConsumerProperties);\n    this.consumer.subscribe(topic,messageSelector);\n    this.consumer.setAutoCommit(false);\n    consumer.registerTopicMessageQueueChangeListener(topic,messageQueuesForTopic::put);\n    this.consumer.start();\n    messageQueuesForTopic.put(topic,consumer.fetchMessageQueues(topic));\n    instrumentation.markStartedSuccessfully();\n  }\n catch (  MQClientException e) {\n    instrumentation.markStartFailed(e);\n    log.error(\"DefaultMQPullConsumer startup error: \" + e.getMessage(),e);\n  }\n finally {\n    InstrumentationManager.addHealthInstrumentation(instrumentation);\n  }\n  this.running=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 94,
        "startColumnNumber" : 3,
        "endLineNumber" : 94,
        "endColumnNumber" : 38
      },
      "nodeContext" : "this.consumer.setAutoCommit(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 94,
    "startColumnNumber" : 31,
    "endLineNumber" : 94,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}