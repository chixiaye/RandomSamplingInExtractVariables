{
  "id" : 177,
  "expression" : "JSONAssert",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-test/src/main/java/org/springframework/test/util/JsonExpectationsHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JSONAssert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 61,
      "startColumnNumber" : 2,
      "endLineNumber" : 61,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 51
      },
      "nodeContext" : "JSONAssert.assertEquals(expected,actual,strict)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 52
      },
      "nodeContext" : "JSONAssert.assertEquals(expected,actual,strict);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 60,
        "startColumnNumber" : 94,
        "endLineNumber" : 62,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  JSONAssert.assertEquals(expected,actual,strict);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 46,
        "startColumnNumber" : 1,
        "endLineNumber" : 62,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Parse the expected and actual strings as JSON and assert the two are \"similar\" - i.e. they contain the same attribute-value pairs regardless of formatting. <p>Can compare in two modes, depending on  {@code strict} parameter value:<ul> <li> {@code true}: strict checking. Not extensible, and strict array ordering.</li> <li> {@code false}: lenient checking. Extensible, and non-strict array ordering.</li> </ul>\n * @param expected the expected JSON content\n * @param actual the actual JSON content\n * @param strict enables strict checking\n * @since 4.2\n */\npublic void assertJsonEqual(String expected,String actual,boolean strict) throws Exception {\n  JSONAssert.assertEquals(expected,actual,strict);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 26,
      "astHeight" : 5
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 52
      },
      "nodeContext" : "JSONAssert.assertEquals(expected,actual,strict);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 61,
    "startColumnNumber" : 2,
    "endLineNumber" : 61,
    "endColumnNumber" : 12
  } ],
  "layoutRelationDataList" : [ ]
}