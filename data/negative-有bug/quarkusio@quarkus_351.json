{
  "id" : 351,
  "expression" : "platform.recommended == null",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/commands/handlers/InfoCommandHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "platform.recommended == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 79,
      "startColumnNumber" : 20,
      "endLineNumber" : 79,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1992,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (platform.recommended == null) {\n  if (rectify) {\n    sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.REMOVE,platform.imported.toCompactCoords()));\n    recommendationsAvailable=true;\n  }\n else {\n    sb.append(\"  \");\n    sb.append(platform.imported.toCompactCoords());\n    if (!projectState.getExtensions().isEmpty()) {\n      sb.append(\" | unnecessary\");\n      recommendationsAvailable=true;\n    }\n  }\n}\n else if (platform.isVersionUpdateRecommended()) {\n  if (rectify) {\n    sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.UPDATE,platform.imported.toCompactCoords()));\n    sb.append(platform.imported.toCompactCoords()).append(\" -> \").append(platform.getRecommendedVersion());\n  }\n else {\n    sb.append(\"  \");\n    sb.append(platform.imported.toCompactCoords()).append(\" | misaligned\");\n  }\n  recommendationsAvailable=true;\n}\n else {\n  if (rectify) {\n    sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,\"\",platform.imported.toCompactCoords()));\n  }\n else {\n    sb.append(\"  \").append(platform.imported.toCompactCoords());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 162,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2274,
        "startLineNumber" : 73,
        "startColumnNumber" : 64,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (platform.imported == null) {\n    recommendExtraImports=true;\n    continue;\n  }\n  final StringBuilder sb=new StringBuilder();\n  if (platform.recommended == null) {\n    if (rectify) {\n      sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.REMOVE,platform.imported.toCompactCoords()));\n      recommendationsAvailable=true;\n    }\n else {\n      sb.append(\"  \");\n      sb.append(platform.imported.toCompactCoords());\n      if (!projectState.getExtensions().isEmpty()) {\n        sb.append(\" | unnecessary\");\n        recommendationsAvailable=true;\n      }\n    }\n  }\n else   if (platform.isVersionUpdateRecommended()) {\n    if (rectify) {\n      sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.UPDATE,platform.imported.toCompactCoords()));\n      sb.append(platform.imported.toCompactCoords()).append(\" -> \").append(platform.getRecommendedVersion());\n    }\n else {\n      sb.append(\"  \");\n      sb.append(platform.imported.toCompactCoords()).append(\" | misaligned\");\n    }\n    recommendationsAvailable=true;\n  }\n else {\n    if (rectify) {\n      sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,\"\",platform.imported.toCompactCoords()));\n    }\n else {\n      sb.append(\"  \").append(platform.imported.toCompactCoords());\n    }\n  }\n  log.info(sb.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2326,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (PlatformInfo platform : providerInfo.values()) {\n  if (platform.imported == null) {\n    recommendExtraImports=true;\n    continue;\n  }\n  final StringBuilder sb=new StringBuilder();\n  if (platform.recommended == null) {\n    if (rectify) {\n      sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.REMOVE,platform.imported.toCompactCoords()));\n      recommendationsAvailable=true;\n    }\n else {\n      sb.append(\"  \");\n      sb.append(platform.imported.toCompactCoords());\n      if (!projectState.getExtensions().isEmpty()) {\n        sb.append(\" | unnecessary\");\n        recommendationsAvailable=true;\n      }\n    }\n  }\n else   if (platform.isVersionUpdateRecommended()) {\n    if (rectify) {\n      sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.UPDATE,platform.imported.toCompactCoords()));\n      sb.append(platform.imported.toCompactCoords()).append(\" -> \").append(platform.getRecommendedVersion());\n    }\n else {\n      sb.append(\"  \");\n      sb.append(platform.imported.toCompactCoords()).append(\" | misaligned\");\n    }\n    recommendationsAvailable=true;\n  }\n else {\n    if (rectify) {\n      sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,\"\",platform.imported.toCompactCoords()));\n    }\n else {\n      sb.append(\"  \").append(platform.imported.toCompactCoords());\n    }\n  }\n  log.info(sb.toString());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 199,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2920,
        "startLineNumber" : 70,
        "startColumnNumber" : 15,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  log.info(\"Quarkus platform BOMs:\");\n  boolean recommendExtraImports=false;\n  for (  PlatformInfo platform : providerInfo.values()) {\n    if (platform.imported == null) {\n      recommendExtraImports=true;\n      continue;\n    }\n    final StringBuilder sb=new StringBuilder();\n    if (platform.recommended == null) {\n      if (rectify) {\n        sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.REMOVE,platform.imported.toCompactCoords()));\n        recommendationsAvailable=true;\n      }\n else {\n        sb.append(\"  \");\n        sb.append(platform.imported.toCompactCoords());\n        if (!projectState.getExtensions().isEmpty()) {\n          sb.append(\" | unnecessary\");\n          recommendationsAvailable=true;\n        }\n      }\n    }\n else     if (platform.isVersionUpdateRecommended()) {\n      if (rectify) {\n        sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.UPDATE,platform.imported.toCompactCoords()));\n        sb.append(platform.imported.toCompactCoords()).append(\" -> \").append(platform.getRecommendedVersion());\n      }\n else {\n        sb.append(\"  \");\n        sb.append(platform.imported.toCompactCoords()).append(\" | misaligned\");\n      }\n      recommendationsAvailable=true;\n    }\n else {\n      if (rectify) {\n        sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,\"\",platform.imported.toCompactCoords()));\n      }\n else {\n        sb.append(\"  \").append(platform.imported.toCompactCoords());\n      }\n    }\n    log.info(sb.toString());\n  }\n  if (rectify && recommendExtraImports) {\n    for (    PlatformInfo platform : providerInfo.values()) {\n      if (platform.imported == null) {\n        log.info(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.ADD,platform.recommended.toCompactCoords()));\n      }\n    }\n    recommendationsAvailable=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 253,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3021,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (providerInfo.isEmpty()) {\n  log.info(\"No Quarkus platform BOMs found\");\n}\n else {\n  log.info(\"Quarkus platform BOMs:\");\n  boolean recommendExtraImports=false;\n  for (  PlatformInfo platform : providerInfo.values()) {\n    if (platform.imported == null) {\n      recommendExtraImports=true;\n      continue;\n    }\n    final StringBuilder sb=new StringBuilder();\n    if (platform.recommended == null) {\n      if (rectify) {\n        sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.REMOVE,platform.imported.toCompactCoords()));\n        recommendationsAvailable=true;\n      }\n else {\n        sb.append(\"  \");\n        sb.append(platform.imported.toCompactCoords());\n        if (!projectState.getExtensions().isEmpty()) {\n          sb.append(\" | unnecessary\");\n          recommendationsAvailable=true;\n        }\n      }\n    }\n else     if (platform.isVersionUpdateRecommended()) {\n      if (rectify) {\n        sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.UPDATE,platform.imported.toCompactCoords()));\n        sb.append(platform.imported.toCompactCoords()).append(\" -> \").append(platform.getRecommendedVersion());\n      }\n else {\n        sb.append(\"  \");\n        sb.append(platform.imported.toCompactCoords()).append(\" | misaligned\");\n      }\n      recommendationsAvailable=true;\n    }\n else {\n      if (rectify) {\n        sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,\"\",platform.imported.toCompactCoords()));\n      }\n else {\n        sb.append(\"  \").append(platform.imported.toCompactCoords());\n      }\n    }\n    log.info(sb.toString());\n  }\n  if (rectify && recommendExtraImports) {\n    for (    PlatformInfo platform : providerInfo.values()) {\n      if (platform.imported == null) {\n        log.info(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.ADD,platform.recommended.toCompactCoords()));\n      }\n    }\n    recommendationsAvailable=true;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 263,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5102,
        "startLineNumber" : 52,
        "startColumnNumber" : 31,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean recommendationsAvailable=false;\n  final Map<ArtifactKey,PlatformInfo> providerInfo=new LinkedHashMap<>();\n  for (  ArtifactCoords bom : projectState.getPlatformBoms()) {\n    providerInfo.computeIfAbsent(bom.getKey(),k -> new PlatformInfo()).imported=bom;\n  }\n  for (  TopExtensionDependency dep : projectState.getExtensions()) {\n    final ExtensionOrigin origin=dep.getOrigin();\n    if (origin != null && origin.isPlatform()) {\n      providerInfo.computeIfAbsent(origin.getBom().getKey(),k -> new PlatformInfo()).recommended=origin.getBom();\n    }\n  }\n  if (providerInfo.isEmpty()) {\n    log.info(\"No Quarkus platform BOMs found\");\n  }\n else {\n    log.info(\"Quarkus platform BOMs:\");\n    boolean recommendExtraImports=false;\n    for (    PlatformInfo platform : providerInfo.values()) {\n      if (platform.imported == null) {\n        recommendExtraImports=true;\n        continue;\n      }\n      final StringBuilder sb=new StringBuilder();\n      if (platform.recommended == null) {\n        if (rectify) {\n          sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.REMOVE,platform.imported.toCompactCoords()));\n          recommendationsAvailable=true;\n        }\n else {\n          sb.append(\"  \");\n          sb.append(platform.imported.toCompactCoords());\n          if (!projectState.getExtensions().isEmpty()) {\n            sb.append(\" | unnecessary\");\n            recommendationsAvailable=true;\n          }\n        }\n      }\n else       if (platform.isVersionUpdateRecommended()) {\n        if (rectify) {\n          sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.UPDATE,platform.imported.toCompactCoords()));\n          sb.append(platform.imported.toCompactCoords()).append(\" -> \").append(platform.getRecommendedVersion());\n        }\n else {\n          sb.append(\"  \");\n          sb.append(platform.imported.toCompactCoords()).append(\" | misaligned\");\n        }\n        recommendationsAvailable=true;\n      }\n else {\n        if (rectify) {\n          sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,\"\",platform.imported.toCompactCoords()));\n        }\n else {\n          sb.append(\"  \").append(platform.imported.toCompactCoords());\n        }\n      }\n      log.info(sb.toString());\n    }\n    if (rectify && recommendExtraImports) {\n      for (      PlatformInfo platform : providerInfo.values()) {\n        if (platform.imported == null) {\n          log.info(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.ADD,platform.recommended.toCompactCoords()));\n        }\n      }\n      recommendationsAvailable=true;\n    }\n  }\n  if (projectState.getExtensions().isEmpty()) {\n    log.info(\"\");\n    log.info(\"No Quarkus extensions found among the project dependencies\");\n    return recommendationsAvailable;\n  }\n  log.info(\"\");\n  if (perModule) {\n    final ModuleState mainModule=projectState.getMainModule();\n    final Path baseDir=mainModule.getModuleDir();\n    recommendationsAvailable|=logModuleInfo(projectState,mainModule,baseDir,log,rectify);\n    for (    ModuleState module : projectState.getModules()) {\n      if (!module.isMain()) {\n        recommendationsAvailable|=logModuleInfo(projectState,module,baseDir,log,rectify);\n      }\n    }\n  }\n else {\n    for (    ExtensionProvider provider : projectState.getExtensionProviders()) {\n      if (provider.isPlatform()) {\n        recommendationsAvailable=logProvidedExtensions(provider,rectify,log,recommendationsAvailable);\n      }\n    }\n    for (    ExtensionProvider provider : projectState.getExtensionProviders()) {\n      if (!provider.isPlatform()) {\n        recommendationsAvailable=logProvidedExtensions(provider,rectify,log,recommendationsAvailable);\n      }\n    }\n  }\n  return recommendationsAvailable;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 488,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5230,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected static boolean logState(ProjectState projectState,boolean perModule,boolean rectify,MessageWriter log){\n  boolean recommendationsAvailable=false;\n  final Map<ArtifactKey,PlatformInfo> providerInfo=new LinkedHashMap<>();\n  for (  ArtifactCoords bom : projectState.getPlatformBoms()) {\n    providerInfo.computeIfAbsent(bom.getKey(),k -> new PlatformInfo()).imported=bom;\n  }\n  for (  TopExtensionDependency dep : projectState.getExtensions()) {\n    final ExtensionOrigin origin=dep.getOrigin();\n    if (origin != null && origin.isPlatform()) {\n      providerInfo.computeIfAbsent(origin.getBom().getKey(),k -> new PlatformInfo()).recommended=origin.getBom();\n    }\n  }\n  if (providerInfo.isEmpty()) {\n    log.info(\"No Quarkus platform BOMs found\");\n  }\n else {\n    log.info(\"Quarkus platform BOMs:\");\n    boolean recommendExtraImports=false;\n    for (    PlatformInfo platform : providerInfo.values()) {\n      if (platform.imported == null) {\n        recommendExtraImports=true;\n        continue;\n      }\n      final StringBuilder sb=new StringBuilder();\n      if (platform.recommended == null) {\n        if (rectify) {\n          sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.REMOVE,platform.imported.toCompactCoords()));\n          recommendationsAvailable=true;\n        }\n else {\n          sb.append(\"  \");\n          sb.append(platform.imported.toCompactCoords());\n          if (!projectState.getExtensions().isEmpty()) {\n            sb.append(\" | unnecessary\");\n            recommendationsAvailable=true;\n          }\n        }\n      }\n else       if (platform.isVersionUpdateRecommended()) {\n        if (rectify) {\n          sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.UPDATE,platform.imported.toCompactCoords()));\n          sb.append(platform.imported.toCompactCoords()).append(\" -> \").append(platform.getRecommendedVersion());\n        }\n else {\n          sb.append(\"  \");\n          sb.append(platform.imported.toCompactCoords()).append(\" | misaligned\");\n        }\n        recommendationsAvailable=true;\n      }\n else {\n        if (rectify) {\n          sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,\"\",platform.imported.toCompactCoords()));\n        }\n else {\n          sb.append(\"  \").append(platform.imported.toCompactCoords());\n        }\n      }\n      log.info(sb.toString());\n    }\n    if (rectify && recommendExtraImports) {\n      for (      PlatformInfo platform : providerInfo.values()) {\n        if (platform.imported == null) {\n          log.info(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.ADD,platform.recommended.toCompactCoords()));\n        }\n      }\n      recommendationsAvailable=true;\n    }\n  }\n  if (projectState.getExtensions().isEmpty()) {\n    log.info(\"\");\n    log.info(\"No Quarkus extensions found among the project dependencies\");\n    return recommendationsAvailable;\n  }\n  log.info(\"\");\n  if (perModule) {\n    final ModuleState mainModule=projectState.getMainModule();\n    final Path baseDir=mainModule.getModuleDir();\n    recommendationsAvailable|=logModuleInfo(projectState,mainModule,baseDir,log,rectify);\n    for (    ModuleState module : projectState.getModules()) {\n      if (!module.isMain()) {\n        recommendationsAvailable|=logModuleInfo(projectState,module,baseDir,log,rectify);\n      }\n    }\n  }\n else {\n    for (    ExtensionProvider provider : projectState.getExtensionProviders()) {\n      if (provider.isPlatform()) {\n        recommendationsAvailable=logProvidedExtensions(provider,rectify,log,recommendationsAvailable);\n      }\n    }\n    for (    ExtensionProvider provider : projectState.getExtensionProviders()) {\n      if (!provider.isPlatform()) {\n        recommendationsAvailable=logProvidedExtensions(provider,rectify,log,recommendationsAvailable);\n      }\n    }\n  }\n  return recommendationsAvailable;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 507,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1992,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (platform.recommended == null) {\n  if (rectify) {\n    sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.REMOVE,platform.imported.toCompactCoords()));\n    recommendationsAvailable=true;\n  }\n else {\n    sb.append(\"  \");\n    sb.append(platform.imported.toCompactCoords());\n    if (!projectState.getExtensions().isEmpty()) {\n      sb.append(\" | unnecessary\");\n      recommendationsAvailable=true;\n    }\n  }\n}\n else if (platform.isVersionUpdateRecommended()) {\n  if (rectify) {\n    sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,UpdateCommandHandler.UPDATE,platform.imported.toCompactCoords()));\n    sb.append(platform.imported.toCompactCoords()).append(\" -> \").append(platform.getRecommendedVersion());\n  }\n else {\n    sb.append(\"  \");\n    sb.append(platform.imported.toCompactCoords()).append(\" | misaligned\");\n  }\n  recommendationsAvailable=true;\n}\n else {\n  if (rectify) {\n    sb.append(String.format(UpdateCommandHandler.PLATFORM_RECTIFY_FORMAT,\"\",platform.imported.toCompactCoords()));\n  }\n else {\n    sb.append(\"  \").append(platform.imported.toCompactCoords());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 162,
      "astHeight" : 12
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 79,
    "startColumnNumber" : 20,
    "endLineNumber" : 79,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}