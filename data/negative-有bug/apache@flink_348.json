{
  "id" : 348,
  "expression" : "checksum",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-libraries/flink-gelly/src/test/java/org/apache/flink/graph/asm/degree/annotate/directed/VertexDegreesTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "checksum",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 114,
      "startColumnNumber" : 26,
      "endLineNumber" : 114,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 114,
        "startColumnNumber" : 26,
        "endLineNumber" : 114,
        "endColumnNumber" : 45
      },
      "nodeContext" : "checksum.getCount()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertEquals(902,checksum.getCount())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(902,checksum.getCount());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 107,
        "startColumnNumber" : 53,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DataSet<Vertex<LongValue,Degrees>> degrees=directedRMatGraph(10,16).run(new VertexDegrees<>());\n  Checksum checksum=new ChecksumHashCode<Vertex<LongValue,Degrees>>().run(degrees).execute();\n  assertEquals(902,checksum.getCount());\n  assertEquals(0x000001a3305dd86aL,checksum.getChecksum());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testWithRMatGraph() throws Exception {\n  DataSet<Vertex<LongValue,Degrees>> degrees=directedRMatGraph(10,16).run(new VertexDegrees<>());\n  Checksum checksum=new ChecksumHashCode<Vertex<LongValue,Degrees>>().run(degrees).execute();\n  assertEquals(902,checksum.getCount());\n  assertEquals(0x000001a3305dd86aL,checksum.getChecksum());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(902,checksum.getCount());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.graph.asm.dataset.ChecksumHashCode.Checksum"
  }, {
    "nodeContext" : "checksum",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 115,
      "startColumnNumber" : 42,
      "endLineNumber" : 115,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 115,
        "startColumnNumber" : 42,
        "endLineNumber" : 115,
        "endColumnNumber" : 64
      },
      "nodeContext" : "checksum.getChecksum()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertEquals(0x000001a3305dd86aL,checksum.getChecksum())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertEquals(0x000001a3305dd86aL,checksum.getChecksum());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 107,
        "startColumnNumber" : 53,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DataSet<Vertex<LongValue,Degrees>> degrees=directedRMatGraph(10,16).run(new VertexDegrees<>());\n  Checksum checksum=new ChecksumHashCode<Vertex<LongValue,Degrees>>().run(degrees).execute();\n  assertEquals(902,checksum.getCount());\n  assertEquals(0x000001a3305dd86aL,checksum.getChecksum());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testWithRMatGraph() throws Exception {\n  DataSet<Vertex<LongValue,Degrees>> degrees=directedRMatGraph(10,16).run(new VertexDegrees<>());\n  Checksum checksum=new ChecksumHashCode<Vertex<LongValue,Degrees>>().run(degrees).execute();\n  assertEquals(902,checksum.getCount());\n  assertEquals(0x000001a3305dd86aL,checksum.getChecksum());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertEquals(0x000001a3305dd86aL,checksum.getChecksum());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.graph.asm.dataset.ChecksumHashCode.Checksum"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 114,
    "startColumnNumber" : 26,
    "endLineNumber" : 114,
    "endColumnNumber" : 34
  }, {
    "charLength" : 8,
    "startLineNumber" : 115,
    "startColumnNumber" : 42,
    "endLineNumber" : 115,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}