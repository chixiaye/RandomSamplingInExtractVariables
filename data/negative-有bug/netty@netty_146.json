{
  "id" : 146,
  "expression" : "16",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/buffer/src/test/java/io/netty/buffer/api/tests/BufferEnsureWritableTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "16",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 68,
      "startColumnNumber" : 62,
      "endLineNumber" : 68,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(buf.capacity()).isGreaterThanOrEqualTo(16)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(buf.capacity()).isGreaterThanOrEqualTo(16);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 62,
        "startColumnNumber" : 49,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertThat(buf.writableBytes()).isEqualTo(8);\n  buf.writeLong(0x0102030405060708L);\n  assertThat(buf.writableBytes()).isEqualTo(0);\n  buf.ensureWritable(8);\n  assertThat(buf.writableBytes()).isGreaterThanOrEqualTo(8);\n  assertThat(buf.capacity()).isGreaterThanOrEqualTo(16);\n  buf.writeLong(0xA1A2A3A4A5A6A7A8L);\n  assertThat(buf.readableBytes()).isEqualTo(16);\n  assertThat(buf.readLong()).isEqualTo(0x0102030405060708L);\n  assertThat(buf.readLong()).isEqualTo(0xA1A2A3A4A5A6A7A8L);\n  assertThrows(IndexOutOfBoundsException.class,buf::readByte);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n  assertThat(buf.writableBytes()).isEqualTo(8);\n  buf.writeLong(0x0102030405060708L);\n  assertThat(buf.writableBytes()).isEqualTo(0);\n  buf.ensureWritable(8);\n  assertThat(buf.writableBytes()).isGreaterThanOrEqualTo(8);\n  assertThat(buf.capacity()).isGreaterThanOrEqualTo(16);\n  buf.writeLong(0xA1A2A3A4A5A6A7A8L);\n  assertThat(buf.readableBytes()).isEqualTo(16);\n  assertThat(buf.readLong()).isEqualTo(0x0102030405060708L);\n  assertThat(buf.readLong()).isEqualTo(0xA1A2A3A4A5A6A7A8L);\n  assertThrows(IndexOutOfBoundsException.class,buf::readByte);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 60,
        "startColumnNumber" : 72,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    assertThat(buf.writableBytes()).isEqualTo(8);\n    buf.writeLong(0x0102030405060708L);\n    assertThat(buf.writableBytes()).isEqualTo(0);\n    buf.ensureWritable(8);\n    assertThat(buf.writableBytes()).isGreaterThanOrEqualTo(8);\n    assertThat(buf.capacity()).isGreaterThanOrEqualTo(16);\n    buf.writeLong(0xA1A2A3A4A5A6A7A8L);\n    assertThat(buf.readableBytes()).isEqualTo(16);\n    assertThat(buf.readLong()).isEqualTo(0x0102030405060708L);\n    assertThat(buf.readLong()).isEqualTo(0xA1A2A3A4A5A6A7A8L);\n    assertThrows(IndexOutOfBoundsException.class,buf::readByte);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1051,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @MethodSource(\"allocators\") public void ensureWritableMustExpandBufferCapacity(Fixture fixture){\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    assertThat(buf.writableBytes()).isEqualTo(8);\n    buf.writeLong(0x0102030405060708L);\n    assertThat(buf.writableBytes()).isEqualTo(0);\n    buf.ensureWritable(8);\n    assertThat(buf.writableBytes()).isGreaterThanOrEqualTo(8);\n    assertThat(buf.capacity()).isGreaterThanOrEqualTo(16);\n    buf.writeLong(0xA1A2A3A4A5A6A7A8L);\n    assertThat(buf.readableBytes()).isEqualTo(16);\n    assertThat(buf.readLong()).isEqualTo(0x0102030405060708L);\n    assertThat(buf.readLong()).isEqualTo(0xA1A2A3A4A5A6A7A8L);\n    assertThrows(IndexOutOfBoundsException.class,buf::readByte);\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(buf.capacity()).isGreaterThanOrEqualTo(16);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "16",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 70,
      "startColumnNumber" : 54,
      "endLineNumber" : 70,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertThat(buf.readableBytes()).isEqualTo(16)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertThat(buf.readableBytes()).isEqualTo(16);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 62,
        "startColumnNumber" : 49,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertThat(buf.writableBytes()).isEqualTo(8);\n  buf.writeLong(0x0102030405060708L);\n  assertThat(buf.writableBytes()).isEqualTo(0);\n  buf.ensureWritable(8);\n  assertThat(buf.writableBytes()).isGreaterThanOrEqualTo(8);\n  assertThat(buf.capacity()).isGreaterThanOrEqualTo(16);\n  buf.writeLong(0xA1A2A3A4A5A6A7A8L);\n  assertThat(buf.readableBytes()).isEqualTo(16);\n  assertThat(buf.readLong()).isEqualTo(0x0102030405060708L);\n  assertThat(buf.readLong()).isEqualTo(0xA1A2A3A4A5A6A7A8L);\n  assertThrows(IndexOutOfBoundsException.class,buf::readByte);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n  assertThat(buf.writableBytes()).isEqualTo(8);\n  buf.writeLong(0x0102030405060708L);\n  assertThat(buf.writableBytes()).isEqualTo(0);\n  buf.ensureWritable(8);\n  assertThat(buf.writableBytes()).isGreaterThanOrEqualTo(8);\n  assertThat(buf.capacity()).isGreaterThanOrEqualTo(16);\n  buf.writeLong(0xA1A2A3A4A5A6A7A8L);\n  assertThat(buf.readableBytes()).isEqualTo(16);\n  assertThat(buf.readLong()).isEqualTo(0x0102030405060708L);\n  assertThat(buf.readLong()).isEqualTo(0xA1A2A3A4A5A6A7A8L);\n  assertThrows(IndexOutOfBoundsException.class,buf::readByte);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 926,
        "startLineNumber" : 60,
        "startColumnNumber" : 72,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    assertThat(buf.writableBytes()).isEqualTo(8);\n    buf.writeLong(0x0102030405060708L);\n    assertThat(buf.writableBytes()).isEqualTo(0);\n    buf.ensureWritable(8);\n    assertThat(buf.writableBytes()).isGreaterThanOrEqualTo(8);\n    assertThat(buf.capacity()).isGreaterThanOrEqualTo(16);\n    buf.writeLong(0xA1A2A3A4A5A6A7A8L);\n    assertThat(buf.readableBytes()).isEqualTo(16);\n    assertThat(buf.readLong()).isEqualTo(0x0102030405060708L);\n    assertThat(buf.readLong()).isEqualTo(0xA1A2A3A4A5A6A7A8L);\n    assertThrows(IndexOutOfBoundsException.class,buf::readByte);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1051,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @MethodSource(\"allocators\") public void ensureWritableMustExpandBufferCapacity(Fixture fixture){\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(8)){\n    assertThat(buf.writableBytes()).isEqualTo(8);\n    buf.writeLong(0x0102030405060708L);\n    assertThat(buf.writableBytes()).isEqualTo(0);\n    buf.ensureWritable(8);\n    assertThat(buf.writableBytes()).isGreaterThanOrEqualTo(8);\n    assertThat(buf.capacity()).isGreaterThanOrEqualTo(16);\n    buf.writeLong(0xA1A2A3A4A5A6A7A8L);\n    assertThat(buf.readableBytes()).isEqualTo(16);\n    assertThat(buf.readLong()).isEqualTo(0x0102030405060708L);\n    assertThat(buf.readLong()).isEqualTo(0xA1A2A3A4A5A6A7A8L);\n    assertThrows(IndexOutOfBoundsException.class,buf::readByte);\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertThat(buf.readableBytes()).isEqualTo(16);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 68,
    "startColumnNumber" : 62,
    "endLineNumber" : 68,
    "endColumnNumber" : 64
  }, {
    "charLength" : 2,
    "startLineNumber" : 70,
    "startColumnNumber" : 54,
    "endLineNumber" : 70,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}