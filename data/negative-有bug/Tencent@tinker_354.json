{
  "id" : 354,
  "expression" : "new ConcurrentLinkedQueue<File>()",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/FileUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ConcurrentLinkedQueue<File>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 102,
      "startColumnNumber" : 28,
      "endLineNumber" : 102,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 61
      },
      "nodeContext" : "queue=new ConcurrentLinkedQueue<File>()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Queue<File> queue=new ConcurrentLinkedQueue<File>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1372,
        "startLineNumber" : 97,
        "startColumnNumber" : 187,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  fileSuffix=StringUtil.nullToBlank(fileSuffix);\n  somethingAppendToRear=StringUtil.nullToBlank(somethingAppendToRear);\n  List<String> list=new ArrayList<String>();\n  File sourceDirectoryFile=new File(sourceDirectory);\n  Queue<File> queue=new ConcurrentLinkedQueue<File>();\n  queue.add(sourceDirectoryFile);\n  while (!queue.isEmpty()) {\n    File file=queue.poll();\n    if (file.isHidden() && !includeHidden) {\n      continue;\n    }\n    if (file.isDirectory()) {\n      File[] fileArray=file.listFiles();\n      if (fileArray != null) {\n        queue.addAll(Arrays.asList(fileArray));\n      }\n    }\n else     if (file.isFile()) {\n      if (file.getName().toLowerCase().endsWith(fileSuffix.toLowerCase())) {\n        if (isFindMatchFile) {\n          list.add(file.getAbsolutePath() + somethingAppendToRear);\n        }\n else {\n          String parentPath=file.getParent();\n          parentPath=parentPath + somethingAppendToRear;\n          if (!list.contains(parentPath)) {\n            list.add(parentPath);\n          }\n        }\n      }\n    }\n  }\n  return list;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1802,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * find match file or match file directory\n * @param sourceDirectory\n * @param fileSuffix\n * @param somethingAppendToRear\n * @param isFindMatchFile\n * @param includeHidden\n * @return List<String>\n */\nprivate static List<String> findMatchFileOrMatchFileDirectory(String sourceDirectory,String fileSuffix,String somethingAppendToRear,boolean isFindMatchFile,boolean includeHidden){\n  fileSuffix=StringUtil.nullToBlank(fileSuffix);\n  somethingAppendToRear=StringUtil.nullToBlank(somethingAppendToRear);\n  List<String> list=new ArrayList<String>();\n  File sourceDirectoryFile=new File(sourceDirectory);\n  Queue<File> queue=new ConcurrentLinkedQueue<File>();\n  queue.add(sourceDirectoryFile);\n  while (!queue.isEmpty()) {\n    File file=queue.poll();\n    if (file.isHidden() && !includeHidden) {\n      continue;\n    }\n    if (file.isDirectory()) {\n      File[] fileArray=file.listFiles();\n      if (fileArray != null) {\n        queue.addAll(Arrays.asList(fileArray));\n      }\n    }\n else     if (file.isFile()) {\n      if (file.getName().toLowerCase().endsWith(fileSuffix.toLowerCase())) {\n        if (isFindMatchFile) {\n          list.add(file.getAbsolutePath() + somethingAppendToRear);\n        }\n else {\n          String parentPath=file.getParent();\n          parentPath=parentPath + somethingAppendToRear;\n          if (!list.contains(parentPath)) {\n            list.add(parentPath);\n          }\n        }\n      }\n    }\n  }\n  return list;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Queue<File> queue=new ConcurrentLinkedQueue<File>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.ConcurrentLinkedQueue<java.io.File>"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 102,
    "startColumnNumber" : 28,
    "endLineNumber" : 102,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}