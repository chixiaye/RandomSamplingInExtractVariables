{
  "id" : 300,
  "expression" : "name.toLowerCase()",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/codegen/target/GoTarget.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "name.toLowerCase()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 168,
      "startColumnNumber" : 11,
      "endLineNumber" : 168,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 168,
        "startColumnNumber" : 11,
        "endLineNumber" : 168,
        "endColumnNumber" : 42
      },
      "nodeContext" : "name.toLowerCase() + \"_parser.go\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 43
      },
      "nodeContext" : "return name.toLowerCase() + \"_parser.go\";\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 165,
        "startColumnNumber" : 2,
        "endLineNumber" : 176,
        "endColumnNumber" : 3
      },
      "nodeContext" : "switch (g.getType()) {\ncase ANTLRParser.PARSER:  name=g.name.endsWith(\"Parser\") ? g.name.substring(0,g.name.length() - 6) : g.name;\nreturn name.toLowerCase() + \"_parser.go\";\ncase ANTLRParser.LEXER:name=g.name.endsWith(\"Lexer\") ? g.name.substring(0,g.name.length() - 5) : g.name;\nreturn name.toLowerCase() + \"_lexer.go\";\ncase ANTLRParser.COMBINED:return g.name.toLowerCase() + \"_parser.go\";\ndefault:return \"INVALID_FILE_NAME\";\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 160,
        "startColumnNumber" : 53,
        "endLineNumber" : 177,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  CodeGenerator gen=getCodeGenerator();\n  Grammar g=gen.g;\n  assert g != null;\n  String name;\nswitch (g.getType()) {\ncase ANTLRParser.PARSER:    name=g.name.endsWith(\"Parser\") ? g.name.substring(0,g.name.length() - 6) : g.name;\n  return name.toLowerCase() + \"_parser.go\";\ncase ANTLRParser.LEXER:name=g.name.endsWith(\"Lexer\") ? g.name.substring(0,g.name.length() - 5) : g.name;\nreturn name.toLowerCase() + \"_lexer.go\";\ncase ANTLRParser.COMBINED:return g.name.toLowerCase() + \"_parser.go\";\ndefault:return \"INVALID_FILE_NAME\";\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 657,
        "startLineNumber" : 160,
        "startColumnNumber" : 1,
        "endLineNumber" : 177,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public String getRecognizerFileName(boolean header){\n  CodeGenerator gen=getCodeGenerator();\n  Grammar g=gen.g;\n  assert g != null;\n  String name;\nswitch (g.getType()) {\ncase ANTLRParser.PARSER:    name=g.name.endsWith(\"Parser\") ? g.name.substring(0,g.name.length() - 6) : g.name;\n  return name.toLowerCase() + \"_parser.go\";\ncase ANTLRParser.LEXER:name=g.name.endsWith(\"Lexer\") ? g.name.substring(0,g.name.length() - 5) : g.name;\nreturn name.toLowerCase() + \"_lexer.go\";\ncase ANTLRParser.COMBINED:return g.name.toLowerCase() + \"_parser.go\";\ndefault:return \"INVALID_FILE_NAME\";\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 43
      },
      "nodeContext" : "return name.toLowerCase() + \"_parser.go\";\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "name.toLowerCase()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 171,
      "startColumnNumber" : 11,
      "endLineNumber" : 171,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 171,
        "startColumnNumber" : 11,
        "endLineNumber" : 171,
        "endColumnNumber" : 41
      },
      "nodeContext" : "name.toLowerCase() + \"_lexer.go\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 171,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 42
      },
      "nodeContext" : "return name.toLowerCase() + \"_lexer.go\";\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 165,
        "startColumnNumber" : 2,
        "endLineNumber" : 176,
        "endColumnNumber" : 3
      },
      "nodeContext" : "switch (g.getType()) {\ncase ANTLRParser.PARSER:  name=g.name.endsWith(\"Parser\") ? g.name.substring(0,g.name.length() - 6) : g.name;\nreturn name.toLowerCase() + \"_parser.go\";\ncase ANTLRParser.LEXER:name=g.name.endsWith(\"Lexer\") ? g.name.substring(0,g.name.length() - 5) : g.name;\nreturn name.toLowerCase() + \"_lexer.go\";\ncase ANTLRParser.COMBINED:return g.name.toLowerCase() + \"_parser.go\";\ndefault:return \"INVALID_FILE_NAME\";\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 160,
        "startColumnNumber" : 53,
        "endLineNumber" : 177,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  CodeGenerator gen=getCodeGenerator();\n  Grammar g=gen.g;\n  assert g != null;\n  String name;\nswitch (g.getType()) {\ncase ANTLRParser.PARSER:    name=g.name.endsWith(\"Parser\") ? g.name.substring(0,g.name.length() - 6) : g.name;\n  return name.toLowerCase() + \"_parser.go\";\ncase ANTLRParser.LEXER:name=g.name.endsWith(\"Lexer\") ? g.name.substring(0,g.name.length() - 5) : g.name;\nreturn name.toLowerCase() + \"_lexer.go\";\ncase ANTLRParser.COMBINED:return g.name.toLowerCase() + \"_parser.go\";\ndefault:return \"INVALID_FILE_NAME\";\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 657,
        "startLineNumber" : 160,
        "startColumnNumber" : 1,
        "endLineNumber" : 177,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public String getRecognizerFileName(boolean header){\n  CodeGenerator gen=getCodeGenerator();\n  Grammar g=gen.g;\n  assert g != null;\n  String name;\nswitch (g.getType()) {\ncase ANTLRParser.PARSER:    name=g.name.endsWith(\"Parser\") ? g.name.substring(0,g.name.length() - 6) : g.name;\n  return name.toLowerCase() + \"_parser.go\";\ncase ANTLRParser.LEXER:name=g.name.endsWith(\"Lexer\") ? g.name.substring(0,g.name.length() - 5) : g.name;\nreturn name.toLowerCase() + \"_lexer.go\";\ncase ANTLRParser.COMBINED:return g.name.toLowerCase() + \"_parser.go\";\ndefault:return \"INVALID_FILE_NAME\";\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 171,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 42
      },
      "nodeContext" : "return name.toLowerCase() + \"_lexer.go\";\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 168,
    "startColumnNumber" : 11,
    "endLineNumber" : 168,
    "endColumnNumber" : 29
  }, {
    "charLength" : 18,
    "startLineNumber" : 171,
    "startColumnNumber" : 11,
    "endLineNumber" : 171,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}