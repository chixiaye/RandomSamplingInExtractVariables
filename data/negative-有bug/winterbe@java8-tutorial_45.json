{
  "id" : 45,
  "expression" : "\"val9\"",
  "projectName" : "winterbe@java8-tutorial",
  "commitID" : "89a257129873974e4beb658115e854649b9204b2",
  "filePath" : "/src/com/winterbe/java8/samples/misc/Maps1.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"val9\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 41,
      "startColumnNumber" : 21,
      "endLineNumber" : 41,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 73
      },
      "nodeContext" : "map.merge(9,\"val9\",(value,newValue) -> value.concat(newValue))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 74
      },
      "nodeContext" : "map.merge(9,\"val9\",(value,newValue) -> value.concat(newValue));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1218,
        "startLineNumber" : 11,
        "startColumnNumber" : 43,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Integer,String> map=new HashMap<>();\n  for (int i=0; i < 10; i++) {\n    map.putIfAbsent(i,\"val\" + i);\n  }\n  map.forEach((id,val) -> System.out.println(val));\n  map.computeIfPresent(3,(num,val) -> val + num);\n  System.out.println(map.get(3));\n  map.computeIfPresent(9,(num,val) -> null);\n  System.out.println(map.containsKey(9));\n  map.computeIfAbsent(23,num -> \"val\" + num);\n  System.out.println(map.containsKey(23));\n  map.computeIfAbsent(3,num -> \"bam\");\n  System.out.println(map.get(3));\n  System.out.println(map.getOrDefault(42,\"not found\"));\n  map.remove(3,\"val3\");\n  System.out.println(map.get(3));\n  map.remove(3,\"val33\");\n  System.out.println(map.get(3));\n  map.merge(9,\"val9\",(value,newValue) -> value.concat(newValue));\n  System.out.println(map.get(9));\n  map.merge(9,\"concat\",(value,newValue) -> value.concat(newValue));\n  System.out.println(map.get(9));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1257,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  Map<Integer,String> map=new HashMap<>();\n  for (int i=0; i < 10; i++) {\n    map.putIfAbsent(i,\"val\" + i);\n  }\n  map.forEach((id,val) -> System.out.println(val));\n  map.computeIfPresent(3,(num,val) -> val + num);\n  System.out.println(map.get(3));\n  map.computeIfPresent(9,(num,val) -> null);\n  System.out.println(map.containsKey(9));\n  map.computeIfAbsent(23,num -> \"val\" + num);\n  System.out.println(map.containsKey(23));\n  map.computeIfAbsent(3,num -> \"bam\");\n  System.out.println(map.get(3));\n  System.out.println(map.getOrDefault(42,\"not found\"));\n  map.remove(3,\"val3\");\n  System.out.println(map.get(3));\n  map.remove(3,\"val33\");\n  System.out.println(map.get(3));\n  map.merge(9,\"val9\",(value,newValue) -> value.concat(newValue));\n  System.out.println(map.get(9));\n  map.merge(9,\"concat\",(value,newValue) -> value.concat(newValue));\n  System.out.println(map.get(9));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 238,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 74
      },
      "nodeContext" : "map.merge(9,\"val9\",(value,newValue) -> value.concat(newValue));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 41,
    "startColumnNumber" : 21,
    "endLineNumber" : 41,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}