{
  "id" : 371,
  "expression" : "assertContext.getText(\"Actual reference model select subquery size assertion error: \")",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/segment/model/ModelClauseAssert.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "assertContext.getText(\"Actual reference model select subquery size assertion error: \")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 86,
      "startLineNumber" : 58,
      "startColumnNumber" : 23,
      "endLineNumber" : 58,
      "endColumnNumber" : 109
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 198
      },
      "nodeContext" : "assertThat(assertContext.getText(\"Actual reference model select subquery size assertion error: \"),actual.getReferenceModelSelect().size(),is(expected.getReferenceModelSelect().size()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 199
      },
      "nodeContext" : "assertThat(assertContext.getText(\"Actual reference model select subquery size assertion error: \"),actual.getReferenceModelSelect().size(),is(expected.getReferenceModelSelect().size()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 56,
        "startColumnNumber" : 56,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertNotNull(assertContext.getText(\"Actual reference model select subquery should exist.\"),actual.getReferenceModelSelect());\n  assertThat(assertContext.getText(\"Actual reference model select subquery size assertion error: \"),actual.getReferenceModelSelect().size(),is(expected.getReferenceModelSelect().size()));\n  assertReferenceModelSelectStatements(assertContext,actual.getReferenceModelSelect(),expected.getReferenceModelSelect());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 534,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != expected.getReferenceModelSelect()) {\n  assertNotNull(assertContext.getText(\"Actual reference model select subquery should exist.\"),actual.getReferenceModelSelect());\n  assertThat(assertContext.getText(\"Actual reference model select subquery size assertion error: \"),actual.getReferenceModelSelect().size(),is(expected.getReferenceModelSelect().size()));\n  assertReferenceModelSelectStatements(assertContext,actual.getReferenceModelSelect(),expected.getReferenceModelSelect());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2144,
        "startLineNumber" : 54,
        "startColumnNumber" : 137,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLSegmentAssert.assertIs(assertContext,actual,expected);\n  if (null != expected.getReferenceModelSelect()) {\n    assertNotNull(assertContext.getText(\"Actual reference model select subquery should exist.\"),actual.getReferenceModelSelect());\n    assertThat(assertContext.getText(\"Actual reference model select subquery size assertion error: \"),actual.getReferenceModelSelect().size(),is(expected.getReferenceModelSelect().size()));\n    assertReferenceModelSelectStatements(assertContext,actual.getReferenceModelSelect(),expected.getReferenceModelSelect());\n  }\n  if (null != expected.getOrderBySegments()) {\n    assertNotNull(assertContext.getText(\"Actual order by segments should exist.\"),actual.getOrderBySegments());\n    assertThat(assertContext.getText(\"Actual order by segments size assertion error: \"),actual.getOrderBySegments().size(),is(expected.getOrderBySegments().size()));\n    assertOrderBySegments(assertContext,actual.getOrderBySegments(),expected.getOrderBySegments());\n  }\n  if (null != expected.getCellAssignmentColumns()) {\n    assertNotNull(assertContext.getText(\"Actual cell assignment columns should exist.\"),actual.getCellAssignmentColumns());\n    assertThat(assertContext.getText(\"Actual cell assignment columns assertion error: \"),actual.getCellAssignmentColumns().size(),is(expected.getCellAssignmentColumns().size()));\n    assertCellAssignmentColumns(assertContext,actual.getCellAssignmentColumns(),expected.getCellAssignmentColumns());\n  }\n  if (null != expected.getCellAssignmentSelect()) {\n    assertNotNull(assertContext.getText(\"Actual cell assignment select subquery should exist.\"),actual.getCellAsssignmentSelect());\n    assertThat(assertContext.getText(\"Actual cell assignment select size assertion error: \"),actual.getCellAsssignmentSelect().size(),is(expected.getCellAssignmentSelect().size()));\n    assertCellAssignmentSelectStatements(assertContext,actual.getCellAsssignmentSelect(),expected.getCellAssignmentSelect());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 192,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2482,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert actual model segment is correct with expected model clause.\n * @param assertContext assert context\n * @param actual actual model\n * @param expected expected model\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final ModelSegment actual,final ExpectedModelClause expected){\n  SQLSegmentAssert.assertIs(assertContext,actual,expected);\n  if (null != expected.getReferenceModelSelect()) {\n    assertNotNull(assertContext.getText(\"Actual reference model select subquery should exist.\"),actual.getReferenceModelSelect());\n    assertThat(assertContext.getText(\"Actual reference model select subquery size assertion error: \"),actual.getReferenceModelSelect().size(),is(expected.getReferenceModelSelect().size()));\n    assertReferenceModelSelectStatements(assertContext,actual.getReferenceModelSelect(),expected.getReferenceModelSelect());\n  }\n  if (null != expected.getOrderBySegments()) {\n    assertNotNull(assertContext.getText(\"Actual order by segments should exist.\"),actual.getOrderBySegments());\n    assertThat(assertContext.getText(\"Actual order by segments size assertion error: \"),actual.getOrderBySegments().size(),is(expected.getOrderBySegments().size()));\n    assertOrderBySegments(assertContext,actual.getOrderBySegments(),expected.getOrderBySegments());\n  }\n  if (null != expected.getCellAssignmentColumns()) {\n    assertNotNull(assertContext.getText(\"Actual cell assignment columns should exist.\"),actual.getCellAssignmentColumns());\n    assertThat(assertContext.getText(\"Actual cell assignment columns assertion error: \"),actual.getCellAssignmentColumns().size(),is(expected.getCellAssignmentColumns().size()));\n    assertCellAssignmentColumns(assertContext,actual.getCellAssignmentColumns(),expected.getCellAssignmentColumns());\n  }\n  if (null != expected.getCellAssignmentSelect()) {\n    assertNotNull(assertContext.getText(\"Actual cell assignment select subquery should exist.\"),actual.getCellAsssignmentSelect());\n    assertThat(assertContext.getText(\"Actual cell assignment select size assertion error: \"),actual.getCellAsssignmentSelect().size(),is(expected.getCellAssignmentSelect().size()));\n    assertCellAssignmentSelectStatements(assertContext,actual.getCellAsssignmentSelect(),expected.getCellAssignmentSelect());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 213,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 199
      },
      "nodeContext" : "assertThat(assertContext.getText(\"Actual reference model select subquery size assertion error: \"),actual.getReferenceModelSelect().size(),is(expected.getReferenceModelSelect().size()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 10,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 86,
    "startLineNumber" : 58,
    "startColumnNumber" : 23,
    "endLineNumber" : 58,
    "endColumnNumber" : 109
  } ],
  "layoutRelationDataList" : [ ]
}