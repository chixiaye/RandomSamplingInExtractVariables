{
  "id" : 389,
  "expression" : "boxType",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/text/webvtt/Mp4WebvttDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "boxType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 65,
      "startColumnNumber" : 10,
      "endLineNumber" : 65,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 65,
        "startColumnNumber" : 10,
        "endLineNumber" : 65,
        "endColumnNumber" : 30
      },
      "nodeContext" : "boxType == TYPE_vttc",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 70,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (boxType == TYPE_vttc) {\n  resultingCueList.add(parseVttCueBox(sampleData,builder,boxSize - BOX_HEADER_SIZE));\n}\n else {\n  sampleData.skipBytes(boxSize - BOX_HEADER_SIZE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 59,
        "startColumnNumber" : 39,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (sampleData.bytesLeft() < BOX_HEADER_SIZE) {\n    throw new SubtitleDecoderException(\"Incomplete Mp4Webvtt Top Level box header found.\");\n  }\n  int boxSize=sampleData.readInt();\n  int boxType=sampleData.readInt();\n  if (boxType == TYPE_vttc) {\n    resultingCueList.add(parseVttCueBox(sampleData,builder,boxSize - BOX_HEADER_SIZE));\n  }\n else {\n    sampleData.skipBytes(boxSize - BOX_HEADER_SIZE);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (sampleData.bytesLeft() > 0) {\n  if (sampleData.bytesLeft() < BOX_HEADER_SIZE) {\n    throw new SubtitleDecoderException(\"Incomplete Mp4Webvtt Top Level box header found.\");\n  }\n  int boxSize=sampleData.readInt();\n  int boxType=sampleData.readInt();\n  if (boxType == TYPE_vttc) {\n    resultingCueList.add(parseVttCueBox(sampleData,builder,boxSize - BOX_HEADER_SIZE));\n  }\n else {\n    sampleData.skipBytes(boxSize - BOX_HEADER_SIZE);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 867,
        "startLineNumber" : 54,
        "startColumnNumber" : 38,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  sampleData.reset(bytes,length);\n  List<Cue> resultingCueList=new ArrayList<>();\n  while (sampleData.bytesLeft() > 0) {\n    if (sampleData.bytesLeft() < BOX_HEADER_SIZE) {\n      throw new SubtitleDecoderException(\"Incomplete Mp4Webvtt Top Level box header found.\");\n    }\n    int boxSize=sampleData.readInt();\n    int boxType=sampleData.readInt();\n    if (boxType == TYPE_vttc) {\n      resultingCueList.add(parseVttCueBox(sampleData,builder,boxSize - BOX_HEADER_SIZE));\n    }\n else {\n      sampleData.skipBytes(boxSize - BOX_HEADER_SIZE);\n    }\n  }\n  return new Mp4WebvttSubtitle(resultingCueList);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected Subtitle decode(byte[] bytes,int length,boolean reset) throws SubtitleDecoderException {\n  sampleData.reset(bytes,length);\n  List<Cue> resultingCueList=new ArrayList<>();\n  while (sampleData.bytesLeft() > 0) {\n    if (sampleData.bytesLeft() < BOX_HEADER_SIZE) {\n      throw new SubtitleDecoderException(\"Incomplete Mp4Webvtt Top Level box header found.\");\n    }\n    int boxSize=sampleData.readInt();\n    int boxType=sampleData.readInt();\n    if (boxType == TYPE_vttc) {\n      resultingCueList.add(parseVttCueBox(sampleData,builder,boxSize - BOX_HEADER_SIZE));\n    }\n else {\n      sampleData.skipBytes(boxSize - BOX_HEADER_SIZE);\n    }\n  }\n  return new Mp4WebvttSubtitle(resultingCueList);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 65,
        "startColumnNumber" : 10,
        "endLineNumber" : 65,
        "endColumnNumber" : 30
      },
      "nodeContext" : "boxType == TYPE_vttc",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 65,
    "startColumnNumber" : 10,
    "endLineNumber" : 65,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}