{
  "id" : 234,
  "expression" : "nestedIndex[keyIndex] - nestedSkipped[keyIndex]",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-orc/src/main/java/com/facebook/presto/orc/reader/MapFlatSelectiveStreamReader.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "nestedIndex[keyIndex] - nestedSkipped[keyIndex]",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 594,
      "startColumnNumber" : 56,
      "endLineNumber" : 594,
      "endColumnNumber" : 103
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 594,
        "startColumnNumber" : 24,
        "endLineNumber" : 594,
        "endColumnNumber" : 104
      },
      "nodeContext" : "nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 594,
        "startColumnNumber" : 24,
        "endLineNumber" : 594,
        "endColumnNumber" : 161
      },
      "nodeContext" : "nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 594,
        "startColumnNumber" : 24,
        "endLineNumber" : 594,
        "endColumnNumber" : 162
      },
      "nodeContext" : "nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 593,
        "startColumnNumber" : 53,
        "endLineNumber" : 596,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n  nestedIndex[keyIndex]++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 593,
        "startColumnNumber" : 20,
        "endLineNumber" : 596,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (inMap[keyIndex][inMapIndex]) {\n  nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n  nestedIndex[keyIndex]++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 591,
        "startColumnNumber" : 72,
        "endLineNumber" : 597,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  inMap[keyIndex][inMapIndex - inMapSkipped]=inMap[keyIndex][inMapIndex];\n  if (inMap[keyIndex][inMapIndex]) {\n    nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n    nestedIndex[keyIndex]++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 591,
        "startColumnNumber" : 16,
        "endLineNumber" : 597,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n  inMap[keyIndex][inMapIndex - inMapSkipped]=inMap[keyIndex][inMapIndex];\n  if (inMap[keyIndex][inMapIndex]) {\n    nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n    nestedIndex[keyIndex]++;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 588,
        "startColumnNumber" : 44,
        "endLineNumber" : 599,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  nestedLengths[inMapIndex - inMapSkipped]=nestedLengths[inMapIndex];\n  for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n    inMap[keyIndex][inMapIndex - inMapSkipped]=inMap[keyIndex][inMapIndex];\n    if (inMap[keyIndex][inMapIndex]) {\n      nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n      nestedIndex[keyIndex]++;\n    }\n  }\n  inMapIndex++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 666,
        "startLineNumber" : 588,
        "startColumnNumber" : 12,
        "endLineNumber" : 599,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!includeNulls || !nulls[i]) {\n  nestedLengths[inMapIndex - inMapSkipped]=nestedLengths[inMapIndex];\n  for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n    inMap[keyIndex][inMapIndex - inMapSkipped]=inMap[keyIndex][inMapIndex];\n    if (inMap[keyIndex][inMapIndex]) {\n      nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n      nestedIndex[keyIndex]++;\n    }\n  }\n  inMapIndex++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 80,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1639,
        "startLineNumber" : 566,
        "startColumnNumber" : 54,
        "endLineNumber" : 607,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (outputPositions[i] < nextPosition) {\n    if (!includeNulls || !nulls[i]) {\n      for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n        if (inMap[keyIndex][inMapIndex]) {\n          nestedSkipped[keyIndex]++;\n          nestedIndex[keyIndex]++;\n        }\n      }\n      inMapSkipped++;\n      inMapIndex++;\n    }\n    skipped++;\n    continue;\n  }\n  outputPositions[i - skipped]=outputPositions[i];\n  if (includeNulls) {\n    nulls[i - skipped]=nulls[i];\n  }\n  if (!includeNulls || !nulls[i]) {\n    nestedLengths[inMapIndex - inMapSkipped]=nestedLengths[inMapIndex];\n    for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n      inMap[keyIndex][inMapIndex - inMapSkipped]=inMap[keyIndex][inMapIndex];\n      if (inMap[keyIndex][inMapIndex]) {\n        nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n        nestedIndex[keyIndex]++;\n      }\n    }\n    inMapIndex++;\n  }\n  positionIndex++;\n  if (positionIndex >= positionCount) {\n    break;\n  }\n  nextPosition=positions[positionIndex];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1685,
        "startLineNumber" : 566,
        "startColumnNumber" : 8,
        "endLineNumber" : 607,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < outputPositionCount; i++) {\n  if (outputPositions[i] < nextPosition) {\n    if (!includeNulls || !nulls[i]) {\n      for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n        if (inMap[keyIndex][inMapIndex]) {\n          nestedSkipped[keyIndex]++;\n          nestedIndex[keyIndex]++;\n        }\n      }\n      inMapSkipped++;\n      inMapIndex++;\n    }\n    skipped++;\n    continue;\n  }\n  outputPositions[i - skipped]=outputPositions[i];\n  if (includeNulls) {\n    nulls[i - skipped]=nulls[i];\n  }\n  if (!includeNulls || !nulls[i]) {\n    nestedLengths[inMapIndex - inMapSkipped]=nestedLengths[inMapIndex];\n    for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n      inMap[keyIndex][inMapIndex - inMapSkipped]=inMap[keyIndex][inMapIndex];\n      if (inMap[keyIndex][inMapIndex]) {\n        nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n        nestedIndex[keyIndex]++;\n      }\n    }\n    inMapIndex++;\n  }\n  positionIndex++;\n  if (positionIndex >= positionCount) {\n    break;\n  }\n  nextPosition=positions[positionIndex];\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 185,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2360,
        "startLineNumber" : 551,
        "startColumnNumber" : 4,
        "endLineNumber" : 613,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (outputPositionsReadOnly) {\n    outputPositions=Arrays.copyOf(outputPositions,outputPositionCount);\n    outputPositionsReadOnly=false;\n  }\n  int positionIndex=0;\n  int nextPosition=positions[positionIndex];\n  int skipped=0;\n  int inMapSkipped=0;\n  int inMapIndex=0;\n  int[] nestedSkipped=new int[keyCount];\n  int[] nestedIndex=new int[keyCount];\n  for (int i=0; i < outputPositionCount; i++) {\n    if (outputPositions[i] < nextPosition) {\n      if (!includeNulls || !nulls[i]) {\n        for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n          if (inMap[keyIndex][inMapIndex]) {\n            nestedSkipped[keyIndex]++;\n            nestedIndex[keyIndex]++;\n          }\n        }\n        inMapSkipped++;\n        inMapIndex++;\n      }\n      skipped++;\n      continue;\n    }\n    outputPositions[i - skipped]=outputPositions[i];\n    if (includeNulls) {\n      nulls[i - skipped]=nulls[i];\n    }\n    if (!includeNulls || !nulls[i]) {\n      nestedLengths[inMapIndex - inMapSkipped]=nestedLengths[inMapIndex];\n      for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n        inMap[keyIndex][inMapIndex - inMapSkipped]=inMap[keyIndex][inMapIndex];\n        if (inMap[keyIndex][inMapIndex]) {\n          nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n          nestedIndex[keyIndex]++;\n        }\n      }\n      inMapIndex++;\n    }\n    positionIndex++;\n    if (positionIndex >= positionCount) {\n      break;\n    }\n    nextPosition=positions[positionIndex];\n  }\n  outputPositionCount=positionCount;\n  for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n    nestedPositionCounts[keyIndex]=nestedIndex[keyIndex] - nestedSkipped[keyIndex];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2449,
        "startLineNumber" : 550,
        "startColumnNumber" : 4,
        "endLineNumber" : 613,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void compactValues(int[] positions,int positionCount,boolean includeNulls){\n  if (outputPositionsReadOnly) {\n    outputPositions=Arrays.copyOf(outputPositions,outputPositionCount);\n    outputPositionsReadOnly=false;\n  }\n  int positionIndex=0;\n  int nextPosition=positions[positionIndex];\n  int skipped=0;\n  int inMapSkipped=0;\n  int inMapIndex=0;\n  int[] nestedSkipped=new int[keyCount];\n  int[] nestedIndex=new int[keyCount];\n  for (int i=0; i < outputPositionCount; i++) {\n    if (outputPositions[i] < nextPosition) {\n      if (!includeNulls || !nulls[i]) {\n        for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n          if (inMap[keyIndex][inMapIndex]) {\n            nestedSkipped[keyIndex]++;\n            nestedIndex[keyIndex]++;\n          }\n        }\n        inMapSkipped++;\n        inMapIndex++;\n      }\n      skipped++;\n      continue;\n    }\n    outputPositions[i - skipped]=outputPositions[i];\n    if (includeNulls) {\n      nulls[i - skipped]=nulls[i];\n    }\n    if (!includeNulls || !nulls[i]) {\n      nestedLengths[inMapIndex - inMapSkipped]=nestedLengths[inMapIndex];\n      for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n        inMap[keyIndex][inMapIndex - inMapSkipped]=inMap[keyIndex][inMapIndex];\n        if (inMap[keyIndex][inMapIndex]) {\n          nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n          nestedIndex[keyIndex]++;\n        }\n      }\n      inMapIndex++;\n    }\n    positionIndex++;\n    if (positionIndex >= positionCount) {\n      break;\n    }\n    nextPosition=positions[positionIndex];\n  }\n  outputPositionCount=positionCount;\n  for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n    nestedPositionCounts[keyIndex]=nestedIndex[keyIndex] - nestedSkipped[keyIndex];\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 293,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 594,
        "startColumnNumber" : 24,
        "endLineNumber" : 594,
        "endColumnNumber" : 162
      },
      "nodeContext" : "nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "int"
  }, {
    "nodeContext" : "nestedIndex[keyIndex] - nestedSkipped[keyIndex]",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 611,
      "startColumnNumber" : 45,
      "endLineNumber" : 611,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 611,
        "startColumnNumber" : 12,
        "endLineNumber" : 611,
        "endColumnNumber" : 92
      },
      "nodeContext" : "nestedPositionCounts[keyIndex]=nestedIndex[keyIndex] - nestedSkipped[keyIndex]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 611,
        "startColumnNumber" : 12,
        "endLineNumber" : 611,
        "endColumnNumber" : 93
      },
      "nodeContext" : "nestedPositionCounts[keyIndex]=nestedIndex[keyIndex] - nestedSkipped[keyIndex];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 610,
        "startColumnNumber" : 64,
        "endLineNumber" : 612,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  nestedPositionCounts[keyIndex]=nestedIndex[keyIndex] - nestedSkipped[keyIndex];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 610,
        "startColumnNumber" : 8,
        "endLineNumber" : 612,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n  nestedPositionCounts[keyIndex]=nestedIndex[keyIndex] - nestedSkipped[keyIndex];\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2360,
        "startLineNumber" : 551,
        "startColumnNumber" : 4,
        "endLineNumber" : 613,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (outputPositionsReadOnly) {\n    outputPositions=Arrays.copyOf(outputPositions,outputPositionCount);\n    outputPositionsReadOnly=false;\n  }\n  int positionIndex=0;\n  int nextPosition=positions[positionIndex];\n  int skipped=0;\n  int inMapSkipped=0;\n  int inMapIndex=0;\n  int[] nestedSkipped=new int[keyCount];\n  int[] nestedIndex=new int[keyCount];\n  for (int i=0; i < outputPositionCount; i++) {\n    if (outputPositions[i] < nextPosition) {\n      if (!includeNulls || !nulls[i]) {\n        for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n          if (inMap[keyIndex][inMapIndex]) {\n            nestedSkipped[keyIndex]++;\n            nestedIndex[keyIndex]++;\n          }\n        }\n        inMapSkipped++;\n        inMapIndex++;\n      }\n      skipped++;\n      continue;\n    }\n    outputPositions[i - skipped]=outputPositions[i];\n    if (includeNulls) {\n      nulls[i - skipped]=nulls[i];\n    }\n    if (!includeNulls || !nulls[i]) {\n      nestedLengths[inMapIndex - inMapSkipped]=nestedLengths[inMapIndex];\n      for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n        inMap[keyIndex][inMapIndex - inMapSkipped]=inMap[keyIndex][inMapIndex];\n        if (inMap[keyIndex][inMapIndex]) {\n          nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n          nestedIndex[keyIndex]++;\n        }\n      }\n      inMapIndex++;\n    }\n    positionIndex++;\n    if (positionIndex >= positionCount) {\n      break;\n    }\n    nextPosition=positions[positionIndex];\n  }\n  outputPositionCount=positionCount;\n  for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n    nestedPositionCounts[keyIndex]=nestedIndex[keyIndex] - nestedSkipped[keyIndex];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2449,
        "startLineNumber" : 550,
        "startColumnNumber" : 4,
        "endLineNumber" : 613,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void compactValues(int[] positions,int positionCount,boolean includeNulls){\n  if (outputPositionsReadOnly) {\n    outputPositions=Arrays.copyOf(outputPositions,outputPositionCount);\n    outputPositionsReadOnly=false;\n  }\n  int positionIndex=0;\n  int nextPosition=positions[positionIndex];\n  int skipped=0;\n  int inMapSkipped=0;\n  int inMapIndex=0;\n  int[] nestedSkipped=new int[keyCount];\n  int[] nestedIndex=new int[keyCount];\n  for (int i=0; i < outputPositionCount; i++) {\n    if (outputPositions[i] < nextPosition) {\n      if (!includeNulls || !nulls[i]) {\n        for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n          if (inMap[keyIndex][inMapIndex]) {\n            nestedSkipped[keyIndex]++;\n            nestedIndex[keyIndex]++;\n          }\n        }\n        inMapSkipped++;\n        inMapIndex++;\n      }\n      skipped++;\n      continue;\n    }\n    outputPositions[i - skipped]=outputPositions[i];\n    if (includeNulls) {\n      nulls[i - skipped]=nulls[i];\n    }\n    if (!includeNulls || !nulls[i]) {\n      nestedLengths[inMapIndex - inMapSkipped]=nestedLengths[inMapIndex];\n      for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n        inMap[keyIndex][inMapIndex - inMapSkipped]=inMap[keyIndex][inMapIndex];\n        if (inMap[keyIndex][inMapIndex]) {\n          nestedOutputPositions[keyIndex][nestedIndex[keyIndex] - nestedSkipped[keyIndex]]=nestedOutputPositions[keyIndex][nestedIndex[keyIndex]];\n          nestedIndex[keyIndex]++;\n        }\n      }\n      inMapIndex++;\n    }\n    positionIndex++;\n    if (positionIndex >= positionCount) {\n      break;\n    }\n    nextPosition=positions[positionIndex];\n  }\n  outputPositionCount=positionCount;\n  for (int keyIndex=0; keyIndex < keyCount; keyIndex++) {\n    nestedPositionCounts[keyIndex]=nestedIndex[keyIndex] - nestedSkipped[keyIndex];\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 293,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 611,
        "startColumnNumber" : 12,
        "endLineNumber" : 611,
        "endColumnNumber" : 93
      },
      "nodeContext" : "nestedPositionCounts[keyIndex]=nestedIndex[keyIndex] - nestedSkipped[keyIndex];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 594,
    "startColumnNumber" : 56,
    "endLineNumber" : 594,
    "endColumnNumber" : 103
  }, {
    "charLength" : 47,
    "startLineNumber" : 611,
    "startColumnNumber" : 45,
    "endLineNumber" : 611,
    "endColumnNumber" : 92
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 11
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}