{
  "id" : 146,
  "expression" : "OAuthBearerToken.class",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslClientCallbackHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "OAuthBearerToken.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 101,
      "startColumnNumber" : 44,
      "endLineNumber" : 101,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 101,
        "startColumnNumber" : 14,
        "endLineNumber" : 101,
        "endColumnNumber" : 67
      },
      "nodeContext" : "subject.getPrivateCredentials(OAuthBearerToken.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 100,
        "startColumnNumber" : 51,
        "endLineNumber" : 102,
        "endColumnNumber" : 36
      },
      "nodeContext" : "subject != null ? subject.getPrivateCredentials(OAuthBearerToken.class) : Collections.emptySet()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 100,
        "startColumnNumber" : 30,
        "endLineNumber" : 102,
        "endColumnNumber" : 36
      },
      "nodeContext" : "privateCredentials=subject != null ? subject.getPrivateCredentials(OAuthBearerToken.class) : Collections.emptySet()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Set<OAuthBearerToken> privateCredentials=subject != null ? subject.getPrivateCredentials(OAuthBearerToken.class) : Collections.emptySet();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2183,
        "startLineNumber" : 96,
        "startColumnNumber" : 86,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (callback.token() != null)   throw new IllegalArgumentException(\"Callback had a token already\");\n  Subject subject=Subject.getSubject(AccessController.getContext());\n  Set<OAuthBearerToken> privateCredentials=subject != null ? subject.getPrivateCredentials(OAuthBearerToken.class) : Collections.emptySet();\n  if (privateCredentials.size() == 0)   throw new IOException(\"No OAuth Bearer tokens in Subject's private credentials\");\n  if (privateCredentials.size() == 1)   callback.token(privateCredentials.iterator().next());\n else {\n    SortedSet<OAuthBearerToken> sortedByLifetime=new TreeSet<>(new Comparator<OAuthBearerToken>(){\n      @Override public int compare(      OAuthBearerToken o1,      OAuthBearerToken o2){\n        return Long.compare(o1.lifetimeMs(),o2.lifetimeMs());\n      }\n    }\n);\n    sortedByLifetime.addAll(privateCredentials);\n    log.warn(\"Found {} OAuth Bearer tokens in Subject's private credentials; the oldest expires at {}, will use the newest, which expires at {}\",sortedByLifetime.size(),new Date(sortedByLifetime.first().lifetimeMs()),new Date(sortedByLifetime.last().lifetimeMs()));\n    callback.token(sortedByLifetime.last());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void handleCallback(OAuthBearerTokenCallback callback) throws IOException {\n  if (callback.token() != null)   throw new IllegalArgumentException(\"Callback had a token already\");\n  Subject subject=Subject.getSubject(AccessController.getContext());\n  Set<OAuthBearerToken> privateCredentials=subject != null ? subject.getPrivateCredentials(OAuthBearerToken.class) : Collections.emptySet();\n  if (privateCredentials.size() == 0)   throw new IOException(\"No OAuth Bearer tokens in Subject's private credentials\");\n  if (privateCredentials.size() == 1)   callback.token(privateCredentials.iterator().next());\n else {\n    SortedSet<OAuthBearerToken> sortedByLifetime=new TreeSet<>(new Comparator<OAuthBearerToken>(){\n      @Override public int compare(      OAuthBearerToken o1,      OAuthBearerToken o2){\n        return Long.compare(o1.lifetimeMs(),o2.lifetimeMs());\n      }\n    }\n);\n    sortedByLifetime.addAll(privateCredentials);\n    log.warn(\"Found {} OAuth Bearer tokens in Subject's private credentials; the oldest expires at {}, will use the newest, which expires at {}\",sortedByLifetime.size(),new Date(sortedByLifetime.first().lifetimeMs()),new Date(sortedByLifetime.last().lifetimeMs()));\n    callback.token(sortedByLifetime.last());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 101,
        "startColumnNumber" : 14,
        "endLineNumber" : 101,
        "endColumnNumber" : 67
      },
      "nodeContext" : "subject.getPrivateCredentials(OAuthBearerToken.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.kafka.common.security.oauthbearer.OAuthBearerToken>"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 101,
    "startColumnNumber" : 44,
    "endLineNumber" : 101,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}