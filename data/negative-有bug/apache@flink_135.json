{
  "id" : 135,
  "expression" : "initialTime + 1",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-python/src/test/java/org/apache/flink/table/runtime/operators/python/scalar/PythonScalarFunctionOperatorTestBase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "initialTime + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 82,
      "startColumnNumber" : 65,
      "endLineNumber" : 82,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 81
      },
      "nodeContext" : "new StreamRecord<>(newRow(true,\"c1\",\"c2\",0L),initialTime + 1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 82
      },
      "nodeContext" : "testHarness.processElement(new StreamRecord<>(newRow(true,\"c1\",\"c2\",0L),initialTime + 1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 83
      },
      "nodeContext" : "testHarness.processElement(new StreamRecord<>(newRow(true,\"c1\",\"c2\",0L),initialTime + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 997,
        "startLineNumber" : 73,
        "startColumnNumber" : 59,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  OneInputStreamOperatorTestHarness<IN,OUT> testHarness=getTestHarness(new Configuration());\n  long initialTime=0L;\n  ConcurrentLinkedQueue<Object> expectedOutput=new ConcurrentLinkedQueue<>();\n  testHarness.open();\n  testHarness.processElement(new StreamRecord<>(newRow(true,\"c1\",\"c2\",0L),initialTime + 1));\n  testHarness.processElement(new StreamRecord<>(newRow(false,\"c3\",\"c4\",1L),initialTime + 2));\n  testHarness.processElement(new StreamRecord<>(newRow(false,\"c5\",\"c6\",2L),initialTime + 3));\n  testHarness.close();\n  expectedOutput.add(new StreamRecord<>(newRow(true,\"c1\",\"c2\",0L)));\n  expectedOutput.add(new StreamRecord<>(newRow(false,\"c3\",\"c4\",1L)));\n  expectedOutput.add(new StreamRecord<>(newRow(false,\"c5\",\"c6\",2L)));\n  assertOutputEquals(\"Output was not correct.\",expectedOutput,testHarness.getOutput());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRetractionFieldKept() throws Exception {\n  OneInputStreamOperatorTestHarness<IN,OUT> testHarness=getTestHarness(new Configuration());\n  long initialTime=0L;\n  ConcurrentLinkedQueue<Object> expectedOutput=new ConcurrentLinkedQueue<>();\n  testHarness.open();\n  testHarness.processElement(new StreamRecord<>(newRow(true,\"c1\",\"c2\",0L),initialTime + 1));\n  testHarness.processElement(new StreamRecord<>(newRow(false,\"c3\",\"c4\",1L),initialTime + 2));\n  testHarness.processElement(new StreamRecord<>(newRow(false,\"c5\",\"c6\",2L),initialTime + 3));\n  testHarness.close();\n  expectedOutput.add(new StreamRecord<>(newRow(true,\"c1\",\"c2\",0L)));\n  expectedOutput.add(new StreamRecord<>(newRow(false,\"c3\",\"c4\",1L)));\n  expectedOutput.add(new StreamRecord<>(newRow(false,\"c5\",\"c6\",2L)));\n  assertOutputEquals(\"Output was not correct.\",expectedOutput,testHarness.getOutput());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 81
      },
      "nodeContext" : "new StreamRecord<>(newRow(true,\"c1\",\"c2\",0L),initialTime + 1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 82,
    "startColumnNumber" : 65,
    "endLineNumber" : 82,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}