{
  "id" : 347,
  "expression" : "con",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/desktop/src/mindustry/desktop/steam/SNet.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "con",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 65,
      "startColumnNumber" : 35,
      "endLineNumber" : 65,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 65,
        "startColumnNumber" : 35,
        "endLineNumber" : 65,
        "endColumnNumber" : 46
      },
      "nodeContext" : "con == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 65,
        "startColumnNumber" : 32,
        "endLineNumber" : 75,
        "endColumnNumber" : 33
      },
      "nodeContext" : "if (con == null) {\n  con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n  Connect c=new Connect();\n  c.addressTCP=\"steam:\" + from.getAccountID();\n  Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n  steamConnections.put(from.getAccountID(),con);\n  connections.add(con);\n  net.handleServerReceived(con,c);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 63,
        "startColumnNumber" : 31,
        "endLineNumber" : 78,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  if (con == null) {\n    con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n    Connect c=new Connect();\n    c.addressTCP=\"steam:\" + from.getAccountID();\n    Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n    steamConnections.put(from.getAccountID(),con);\n    connections.add(con);\n    net.handleServerReceived(con,c);\n  }\n  net.handleServerReceived(con,output);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 904,
        "startLineNumber" : 63,
        "startColumnNumber" : 28,
        "endLineNumber" : 80,
        "endColumnNumber" : 29
      },
      "nodeContext" : "try {\n  if (con == null) {\n    con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n    Connect c=new Connect();\n    c.addressTCP=\"steam:\" + from.getAccountID();\n    Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n    steamConnections.put(from.getAccountID(),con);\n    connections.add(con);\n    net.handleServerReceived(con,c);\n  }\n  net.handleServerReceived(con,output);\n}\n catch (Throwable e) {\n  Log.err(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 61,
        "startColumnNumber" : 40,
        "endLineNumber" : 81,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  SteamConnection con=steamConnections.get(fromID);\n  try {\n    if (con == null) {\n      con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n      Connect c=new Connect();\n      c.addressTCP=\"steam:\" + from.getAccountID();\n      Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n      steamConnections.put(from.getAccountID(),con);\n      connections.add(con);\n      net.handleServerReceived(con,c);\n    }\n    net.handleServerReceived(con,output);\n  }\n catch (  Throwable e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1389,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 87,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (net.server()) {\n  SteamConnection con=steamConnections.get(fromID);\n  try {\n    if (con == null) {\n      con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n      Connect c=new Connect();\n      c.addressTCP=\"steam:\" + from.getAccountID();\n      Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n      steamConnections.put(from.getAccountID(),con);\n      connections.add(con);\n      net.handleServerReceived(con,c);\n    }\n    net.handleServerReceived(con,output);\n  }\n catch (  Throwable e) {\n    Log.err(e);\n  }\n}\n else if (currentServer != null && fromID == currentServer.getAccountID()) {\n  try {\n    net.handleClientReceived(output);\n  }\n catch (  Throwable t) {\n    net.handleException(t);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 55,
        "startColumnNumber" : 23,
        "endLineNumber" : 88,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  readBuffer.position(0);\n  snet.readP2PPacket(from,readBuffer,0);\n  int fromID=from.getAccountID();\n  Object output=serializer.read(readBuffer);\n  if (net.server()) {\n    SteamConnection con=steamConnections.get(fromID);\n    try {\n      if (con == null) {\n        con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n        Connect c=new Connect();\n        c.addressTCP=\"steam:\" + from.getAccountID();\n        Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n        steamConnections.put(from.getAccountID(),con);\n        connections.add(con);\n        net.handleServerReceived(con,c);\n      }\n      net.handleServerReceived(con,output);\n    }\n catch (    Throwable e) {\n      Log.err(e);\n    }\n  }\n else   if (currentServer != null && fromID == currentServer.getAccountID()) {\n    try {\n      net.handleClientReceived(output);\n    }\n catch (    Throwable t) {\n      net.handleException(t);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1763,
        "startLineNumber" : 55,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  readBuffer.position(0);\n  snet.readP2PPacket(from,readBuffer,0);\n  int fromID=from.getAccountID();\n  Object output=serializer.read(readBuffer);\n  if (net.server()) {\n    SteamConnection con=steamConnections.get(fromID);\n    try {\n      if (con == null) {\n        con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n        Connect c=new Connect();\n        c.addressTCP=\"steam:\" + from.getAccountID();\n        Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n        steamConnections.put(from.getAccountID(),con);\n        connections.add(con);\n        net.handleServerReceived(con,c);\n      }\n      net.handleServerReceived(con,output);\n    }\n catch (    Throwable e) {\n      Log.err(e);\n    }\n  }\n else   if (currentServer != null && fromID == currentServer.getAccountID()) {\n    try {\n      net.handleClientReceived(output);\n    }\n catch (    Throwable t) {\n      net.handleException(t);\n    }\n  }\n}\n catch (SteamException e) {\n  Log.err(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 165,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1803,
        "startLineNumber" : 54,
        "startColumnNumber" : 67,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    readBuffer.position(0);\n    snet.readP2PPacket(from,readBuffer,0);\n    int fromID=from.getAccountID();\n    Object output=serializer.read(readBuffer);\n    if (net.server()) {\n      SteamConnection con=steamConnections.get(fromID);\n      try {\n        if (con == null) {\n          con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n          Connect c=new Connect();\n          c.addressTCP=\"steam:\" + from.getAccountID();\n          Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n          steamConnections.put(from.getAccountID(),con);\n          connections.add(con);\n          net.handleServerReceived(con,c);\n        }\n        net.handleServerReceived(con,output);\n      }\n catch (      Throwable e) {\n        Log.err(e);\n      }\n    }\n else     if (currentServer != null && fromID == currentServer.getAccountID()) {\n      try {\n        net.handleClientReceived(output);\n      }\n catch (      Throwable t) {\n        net.handleException(t);\n      }\n    }\n  }\n catch (  SteamException e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1854,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n  try {\n    readBuffer.position(0);\n    snet.readP2PPacket(from,readBuffer,0);\n    int fromID=from.getAccountID();\n    Object output=serializer.read(readBuffer);\n    if (net.server()) {\n      SteamConnection con=steamConnections.get(fromID);\n      try {\n        if (con == null) {\n          con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n          Connect c=new Connect();\n          c.addressTCP=\"steam:\" + from.getAccountID();\n          Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n          steamConnections.put(from.getAccountID(),con);\n          connections.add(con);\n          net.handleServerReceived(con,c);\n        }\n        net.handleServerReceived(con,output);\n      }\n catch (      Throwable e) {\n        Log.err(e);\n      }\n    }\n else     if (currentServer != null && fromID == currentServer.getAccountID()) {\n      try {\n        net.handleClientReceived(output);\n      }\n catch (      Throwable t) {\n        net.handleException(t);\n      }\n    }\n  }\n catch (  SteamException e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 176,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1886,
        "startLineNumber" : 53,
        "startColumnNumber" : 32,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n    try {\n      readBuffer.position(0);\n      snet.readP2PPacket(from,readBuffer,0);\n      int fromID=from.getAccountID();\n      Object output=serializer.read(readBuffer);\n      if (net.server()) {\n        SteamConnection con=steamConnections.get(fromID);\n        try {\n          if (con == null) {\n            con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n            Connect c=new Connect();\n            c.addressTCP=\"steam:\" + from.getAccountID();\n            Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n            steamConnections.put(from.getAccountID(),con);\n            connections.add(con);\n            net.handleServerReceived(con,c);\n          }\n          net.handleServerReceived(con,output);\n        }\n catch (        Throwable e) {\n          Log.err(e);\n        }\n      }\n else       if (currentServer != null && fromID == currentServer.getAccountID()) {\n        try {\n          net.handleClientReceived(output);\n        }\n catch (        Throwable t) {\n          net.handleException(t);\n        }\n      }\n    }\n catch (    SteamException e) {\n      Log.err(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1928,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void update(){\n  while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n    try {\n      readBuffer.position(0);\n      snet.readP2PPacket(from,readBuffer,0);\n      int fromID=from.getAccountID();\n      Object output=serializer.read(readBuffer);\n      if (net.server()) {\n        SteamConnection con=steamConnections.get(fromID);\n        try {\n          if (con == null) {\n            con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n            Connect c=new Connect();\n            c.addressTCP=\"steam:\" + from.getAccountID();\n            Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n            steamConnections.put(from.getAccountID(),con);\n            connections.add(con);\n            net.handleServerReceived(con,c);\n          }\n          net.handleServerReceived(con,output);\n        }\n catch (        Throwable e) {\n          Log.err(e);\n        }\n      }\n else       if (currentServer != null && fromID == currentServer.getAccountID()) {\n        try {\n          net.handleClientReceived(output);\n        }\n catch (        Throwable t) {\n          net.handleException(t);\n        }\n      }\n    }\n catch (    SteamException e) {\n      Log.err(e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 65,
        "startColumnNumber" : 35,
        "endLineNumber" : 65,
        "endColumnNumber" : 46
      },
      "nodeContext" : "con == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "con",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 72,
      "startColumnNumber" : 78,
      "endLineNumber" : 72,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 72,
        "startColumnNumber" : 36,
        "endLineNumber" : 72,
        "endColumnNumber" : 82
      },
      "nodeContext" : "steamConnections.put(from.getAccountID(),con)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 72,
        "startColumnNumber" : 36,
        "endLineNumber" : 72,
        "endColumnNumber" : 83
      },
      "nodeContext" : "steamConnections.put(from.getAccountID(),con);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 65,
        "startColumnNumber" : 47,
        "endLineNumber" : 75,
        "endColumnNumber" : 33
      },
      "nodeContext" : "{\n  con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n  Connect c=new Connect();\n  c.addressTCP=\"steam:\" + from.getAccountID();\n  Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n  steamConnections.put(from.getAccountID(),con);\n  connections.add(con);\n  net.handleServerReceived(con,c);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 65,
        "startColumnNumber" : 32,
        "endLineNumber" : 75,
        "endColumnNumber" : 33
      },
      "nodeContext" : "if (con == null) {\n  con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n  Connect c=new Connect();\n  c.addressTCP=\"steam:\" + from.getAccountID();\n  Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n  steamConnections.put(from.getAccountID(),con);\n  connections.add(con);\n  net.handleServerReceived(con,c);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 63,
        "startColumnNumber" : 31,
        "endLineNumber" : 78,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  if (con == null) {\n    con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n    Connect c=new Connect();\n    c.addressTCP=\"steam:\" + from.getAccountID();\n    Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n    steamConnections.put(from.getAccountID(),con);\n    connections.add(con);\n    net.handleServerReceived(con,c);\n  }\n  net.handleServerReceived(con,output);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 904,
        "startLineNumber" : 63,
        "startColumnNumber" : 28,
        "endLineNumber" : 80,
        "endColumnNumber" : 29
      },
      "nodeContext" : "try {\n  if (con == null) {\n    con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n    Connect c=new Connect();\n    c.addressTCP=\"steam:\" + from.getAccountID();\n    Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n    steamConnections.put(from.getAccountID(),con);\n    connections.add(con);\n    net.handleServerReceived(con,c);\n  }\n  net.handleServerReceived(con,output);\n}\n catch (Throwable e) {\n  Log.err(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 61,
        "startColumnNumber" : 40,
        "endLineNumber" : 81,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  SteamConnection con=steamConnections.get(fromID);\n  try {\n    if (con == null) {\n      con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n      Connect c=new Connect();\n      c.addressTCP=\"steam:\" + from.getAccountID();\n      Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n      steamConnections.put(from.getAccountID(),con);\n      connections.add(con);\n      net.handleServerReceived(con,c);\n    }\n    net.handleServerReceived(con,output);\n  }\n catch (  Throwable e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1389,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 87,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (net.server()) {\n  SteamConnection con=steamConnections.get(fromID);\n  try {\n    if (con == null) {\n      con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n      Connect c=new Connect();\n      c.addressTCP=\"steam:\" + from.getAccountID();\n      Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n      steamConnections.put(from.getAccountID(),con);\n      connections.add(con);\n      net.handleServerReceived(con,c);\n    }\n    net.handleServerReceived(con,output);\n  }\n catch (  Throwable e) {\n    Log.err(e);\n  }\n}\n else if (currentServer != null && fromID == currentServer.getAccountID()) {\n  try {\n    net.handleClientReceived(output);\n  }\n catch (  Throwable t) {\n    net.handleException(t);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 55,
        "startColumnNumber" : 23,
        "endLineNumber" : 88,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  readBuffer.position(0);\n  snet.readP2PPacket(from,readBuffer,0);\n  int fromID=from.getAccountID();\n  Object output=serializer.read(readBuffer);\n  if (net.server()) {\n    SteamConnection con=steamConnections.get(fromID);\n    try {\n      if (con == null) {\n        con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n        Connect c=new Connect();\n        c.addressTCP=\"steam:\" + from.getAccountID();\n        Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n        steamConnections.put(from.getAccountID(),con);\n        connections.add(con);\n        net.handleServerReceived(con,c);\n      }\n      net.handleServerReceived(con,output);\n    }\n catch (    Throwable e) {\n      Log.err(e);\n    }\n  }\n else   if (currentServer != null && fromID == currentServer.getAccountID()) {\n    try {\n      net.handleClientReceived(output);\n    }\n catch (    Throwable t) {\n      net.handleException(t);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1763,
        "startLineNumber" : 55,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  readBuffer.position(0);\n  snet.readP2PPacket(from,readBuffer,0);\n  int fromID=from.getAccountID();\n  Object output=serializer.read(readBuffer);\n  if (net.server()) {\n    SteamConnection con=steamConnections.get(fromID);\n    try {\n      if (con == null) {\n        con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n        Connect c=new Connect();\n        c.addressTCP=\"steam:\" + from.getAccountID();\n        Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n        steamConnections.put(from.getAccountID(),con);\n        connections.add(con);\n        net.handleServerReceived(con,c);\n      }\n      net.handleServerReceived(con,output);\n    }\n catch (    Throwable e) {\n      Log.err(e);\n    }\n  }\n else   if (currentServer != null && fromID == currentServer.getAccountID()) {\n    try {\n      net.handleClientReceived(output);\n    }\n catch (    Throwable t) {\n      net.handleException(t);\n    }\n  }\n}\n catch (SteamException e) {\n  Log.err(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 165,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1803,
        "startLineNumber" : 54,
        "startColumnNumber" : 67,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    readBuffer.position(0);\n    snet.readP2PPacket(from,readBuffer,0);\n    int fromID=from.getAccountID();\n    Object output=serializer.read(readBuffer);\n    if (net.server()) {\n      SteamConnection con=steamConnections.get(fromID);\n      try {\n        if (con == null) {\n          con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n          Connect c=new Connect();\n          c.addressTCP=\"steam:\" + from.getAccountID();\n          Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n          steamConnections.put(from.getAccountID(),con);\n          connections.add(con);\n          net.handleServerReceived(con,c);\n        }\n        net.handleServerReceived(con,output);\n      }\n catch (      Throwable e) {\n        Log.err(e);\n      }\n    }\n else     if (currentServer != null && fromID == currentServer.getAccountID()) {\n      try {\n        net.handleClientReceived(output);\n      }\n catch (      Throwable t) {\n        net.handleException(t);\n      }\n    }\n  }\n catch (  SteamException e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1854,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n  try {\n    readBuffer.position(0);\n    snet.readP2PPacket(from,readBuffer,0);\n    int fromID=from.getAccountID();\n    Object output=serializer.read(readBuffer);\n    if (net.server()) {\n      SteamConnection con=steamConnections.get(fromID);\n      try {\n        if (con == null) {\n          con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n          Connect c=new Connect();\n          c.addressTCP=\"steam:\" + from.getAccountID();\n          Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n          steamConnections.put(from.getAccountID(),con);\n          connections.add(con);\n          net.handleServerReceived(con,c);\n        }\n        net.handleServerReceived(con,output);\n      }\n catch (      Throwable e) {\n        Log.err(e);\n      }\n    }\n else     if (currentServer != null && fromID == currentServer.getAccountID()) {\n      try {\n        net.handleClientReceived(output);\n      }\n catch (      Throwable t) {\n        net.handleException(t);\n      }\n    }\n  }\n catch (  SteamException e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 176,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1886,
        "startLineNumber" : 53,
        "startColumnNumber" : 32,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n    try {\n      readBuffer.position(0);\n      snet.readP2PPacket(from,readBuffer,0);\n      int fromID=from.getAccountID();\n      Object output=serializer.read(readBuffer);\n      if (net.server()) {\n        SteamConnection con=steamConnections.get(fromID);\n        try {\n          if (con == null) {\n            con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n            Connect c=new Connect();\n            c.addressTCP=\"steam:\" + from.getAccountID();\n            Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n            steamConnections.put(from.getAccountID(),con);\n            connections.add(con);\n            net.handleServerReceived(con,c);\n          }\n          net.handleServerReceived(con,output);\n        }\n catch (        Throwable e) {\n          Log.err(e);\n        }\n      }\n else       if (currentServer != null && fromID == currentServer.getAccountID()) {\n        try {\n          net.handleClientReceived(output);\n        }\n catch (        Throwable t) {\n          net.handleException(t);\n        }\n      }\n    }\n catch (    SteamException e) {\n      Log.err(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1928,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void update(){\n  while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n    try {\n      readBuffer.position(0);\n      snet.readP2PPacket(from,readBuffer,0);\n      int fromID=from.getAccountID();\n      Object output=serializer.read(readBuffer);\n      if (net.server()) {\n        SteamConnection con=steamConnections.get(fromID);\n        try {\n          if (con == null) {\n            con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n            Connect c=new Connect();\n            c.addressTCP=\"steam:\" + from.getAccountID();\n            Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n            steamConnections.put(from.getAccountID(),con);\n            connections.add(con);\n            net.handleServerReceived(con,c);\n          }\n          net.handleServerReceived(con,output);\n        }\n catch (        Throwable e) {\n          Log.err(e);\n        }\n      }\n else       if (currentServer != null && fromID == currentServer.getAccountID()) {\n        try {\n          net.handleClientReceived(output);\n        }\n catch (        Throwable t) {\n          net.handleException(t);\n        }\n      }\n    }\n catch (    SteamException e) {\n      Log.err(e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 72,
        "startColumnNumber" : 36,
        "endLineNumber" : 72,
        "endColumnNumber" : 83
      },
      "nodeContext" : "steamConnections.put(from.getAccountID(),con);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "con",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 73,
      "startColumnNumber" : 52,
      "endLineNumber" : 73,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 73,
        "startColumnNumber" : 36,
        "endLineNumber" : 73,
        "endColumnNumber" : 56
      },
      "nodeContext" : "connections.add(con)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 73,
        "startColumnNumber" : 36,
        "endLineNumber" : 73,
        "endColumnNumber" : 57
      },
      "nodeContext" : "connections.add(con);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 65,
        "startColumnNumber" : 47,
        "endLineNumber" : 75,
        "endColumnNumber" : 33
      },
      "nodeContext" : "{\n  con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n  Connect c=new Connect();\n  c.addressTCP=\"steam:\" + from.getAccountID();\n  Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n  steamConnections.put(from.getAccountID(),con);\n  connections.add(con);\n  net.handleServerReceived(con,c);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 65,
        "startColumnNumber" : 32,
        "endLineNumber" : 75,
        "endColumnNumber" : 33
      },
      "nodeContext" : "if (con == null) {\n  con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n  Connect c=new Connect();\n  c.addressTCP=\"steam:\" + from.getAccountID();\n  Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n  steamConnections.put(from.getAccountID(),con);\n  connections.add(con);\n  net.handleServerReceived(con,c);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 63,
        "startColumnNumber" : 31,
        "endLineNumber" : 78,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  if (con == null) {\n    con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n    Connect c=new Connect();\n    c.addressTCP=\"steam:\" + from.getAccountID();\n    Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n    steamConnections.put(from.getAccountID(),con);\n    connections.add(con);\n    net.handleServerReceived(con,c);\n  }\n  net.handleServerReceived(con,output);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 904,
        "startLineNumber" : 63,
        "startColumnNumber" : 28,
        "endLineNumber" : 80,
        "endColumnNumber" : 29
      },
      "nodeContext" : "try {\n  if (con == null) {\n    con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n    Connect c=new Connect();\n    c.addressTCP=\"steam:\" + from.getAccountID();\n    Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n    steamConnections.put(from.getAccountID(),con);\n    connections.add(con);\n    net.handleServerReceived(con,c);\n  }\n  net.handleServerReceived(con,output);\n}\n catch (Throwable e) {\n  Log.err(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 61,
        "startColumnNumber" : 40,
        "endLineNumber" : 81,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  SteamConnection con=steamConnections.get(fromID);\n  try {\n    if (con == null) {\n      con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n      Connect c=new Connect();\n      c.addressTCP=\"steam:\" + from.getAccountID();\n      Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n      steamConnections.put(from.getAccountID(),con);\n      connections.add(con);\n      net.handleServerReceived(con,c);\n    }\n    net.handleServerReceived(con,output);\n  }\n catch (  Throwable e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1389,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 87,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (net.server()) {\n  SteamConnection con=steamConnections.get(fromID);\n  try {\n    if (con == null) {\n      con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n      Connect c=new Connect();\n      c.addressTCP=\"steam:\" + from.getAccountID();\n      Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n      steamConnections.put(from.getAccountID(),con);\n      connections.add(con);\n      net.handleServerReceived(con,c);\n    }\n    net.handleServerReceived(con,output);\n  }\n catch (  Throwable e) {\n    Log.err(e);\n  }\n}\n else if (currentServer != null && fromID == currentServer.getAccountID()) {\n  try {\n    net.handleClientReceived(output);\n  }\n catch (  Throwable t) {\n    net.handleException(t);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 55,
        "startColumnNumber" : 23,
        "endLineNumber" : 88,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  readBuffer.position(0);\n  snet.readP2PPacket(from,readBuffer,0);\n  int fromID=from.getAccountID();\n  Object output=serializer.read(readBuffer);\n  if (net.server()) {\n    SteamConnection con=steamConnections.get(fromID);\n    try {\n      if (con == null) {\n        con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n        Connect c=new Connect();\n        c.addressTCP=\"steam:\" + from.getAccountID();\n        Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n        steamConnections.put(from.getAccountID(),con);\n        connections.add(con);\n        net.handleServerReceived(con,c);\n      }\n      net.handleServerReceived(con,output);\n    }\n catch (    Throwable e) {\n      Log.err(e);\n    }\n  }\n else   if (currentServer != null && fromID == currentServer.getAccountID()) {\n    try {\n      net.handleClientReceived(output);\n    }\n catch (    Throwable t) {\n      net.handleException(t);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1763,
        "startLineNumber" : 55,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  readBuffer.position(0);\n  snet.readP2PPacket(from,readBuffer,0);\n  int fromID=from.getAccountID();\n  Object output=serializer.read(readBuffer);\n  if (net.server()) {\n    SteamConnection con=steamConnections.get(fromID);\n    try {\n      if (con == null) {\n        con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n        Connect c=new Connect();\n        c.addressTCP=\"steam:\" + from.getAccountID();\n        Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n        steamConnections.put(from.getAccountID(),con);\n        connections.add(con);\n        net.handleServerReceived(con,c);\n      }\n      net.handleServerReceived(con,output);\n    }\n catch (    Throwable e) {\n      Log.err(e);\n    }\n  }\n else   if (currentServer != null && fromID == currentServer.getAccountID()) {\n    try {\n      net.handleClientReceived(output);\n    }\n catch (    Throwable t) {\n      net.handleException(t);\n    }\n  }\n}\n catch (SteamException e) {\n  Log.err(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 165,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1803,
        "startLineNumber" : 54,
        "startColumnNumber" : 67,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    readBuffer.position(0);\n    snet.readP2PPacket(from,readBuffer,0);\n    int fromID=from.getAccountID();\n    Object output=serializer.read(readBuffer);\n    if (net.server()) {\n      SteamConnection con=steamConnections.get(fromID);\n      try {\n        if (con == null) {\n          con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n          Connect c=new Connect();\n          c.addressTCP=\"steam:\" + from.getAccountID();\n          Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n          steamConnections.put(from.getAccountID(),con);\n          connections.add(con);\n          net.handleServerReceived(con,c);\n        }\n        net.handleServerReceived(con,output);\n      }\n catch (      Throwable e) {\n        Log.err(e);\n      }\n    }\n else     if (currentServer != null && fromID == currentServer.getAccountID()) {\n      try {\n        net.handleClientReceived(output);\n      }\n catch (      Throwable t) {\n        net.handleException(t);\n      }\n    }\n  }\n catch (  SteamException e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1854,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n  try {\n    readBuffer.position(0);\n    snet.readP2PPacket(from,readBuffer,0);\n    int fromID=from.getAccountID();\n    Object output=serializer.read(readBuffer);\n    if (net.server()) {\n      SteamConnection con=steamConnections.get(fromID);\n      try {\n        if (con == null) {\n          con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n          Connect c=new Connect();\n          c.addressTCP=\"steam:\" + from.getAccountID();\n          Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n          steamConnections.put(from.getAccountID(),con);\n          connections.add(con);\n          net.handleServerReceived(con,c);\n        }\n        net.handleServerReceived(con,output);\n      }\n catch (      Throwable e) {\n        Log.err(e);\n      }\n    }\n else     if (currentServer != null && fromID == currentServer.getAccountID()) {\n      try {\n        net.handleClientReceived(output);\n      }\n catch (      Throwable t) {\n        net.handleException(t);\n      }\n    }\n  }\n catch (  SteamException e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 176,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1886,
        "startLineNumber" : 53,
        "startColumnNumber" : 32,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n    try {\n      readBuffer.position(0);\n      snet.readP2PPacket(from,readBuffer,0);\n      int fromID=from.getAccountID();\n      Object output=serializer.read(readBuffer);\n      if (net.server()) {\n        SteamConnection con=steamConnections.get(fromID);\n        try {\n          if (con == null) {\n            con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n            Connect c=new Connect();\n            c.addressTCP=\"steam:\" + from.getAccountID();\n            Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n            steamConnections.put(from.getAccountID(),con);\n            connections.add(con);\n            net.handleServerReceived(con,c);\n          }\n          net.handleServerReceived(con,output);\n        }\n catch (        Throwable e) {\n          Log.err(e);\n        }\n      }\n else       if (currentServer != null && fromID == currentServer.getAccountID()) {\n        try {\n          net.handleClientReceived(output);\n        }\n catch (        Throwable t) {\n          net.handleException(t);\n        }\n      }\n    }\n catch (    SteamException e) {\n      Log.err(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1928,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void update(){\n  while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n    try {\n      readBuffer.position(0);\n      snet.readP2PPacket(from,readBuffer,0);\n      int fromID=from.getAccountID();\n      Object output=serializer.read(readBuffer);\n      if (net.server()) {\n        SteamConnection con=steamConnections.get(fromID);\n        try {\n          if (con == null) {\n            con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n            Connect c=new Connect();\n            c.addressTCP=\"steam:\" + from.getAccountID();\n            Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n            steamConnections.put(from.getAccountID(),con);\n            connections.add(con);\n            net.handleServerReceived(con,c);\n          }\n          net.handleServerReceived(con,output);\n        }\n catch (        Throwable e) {\n          Log.err(e);\n        }\n      }\n else       if (currentServer != null && fromID == currentServer.getAccountID()) {\n        try {\n          net.handleClientReceived(output);\n        }\n catch (        Throwable t) {\n          net.handleException(t);\n        }\n      }\n    }\n catch (    SteamException e) {\n      Log.err(e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 73,
        "startColumnNumber" : 36,
        "endLineNumber" : 73,
        "endColumnNumber" : 57
      },
      "nodeContext" : "connections.add(con);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "con",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 74,
      "startColumnNumber" : 61,
      "endLineNumber" : 74,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 74,
        "startColumnNumber" : 36,
        "endLineNumber" : 74,
        "endColumnNumber" : 68
      },
      "nodeContext" : "net.handleServerReceived(con,c)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 74,
        "startColumnNumber" : 36,
        "endLineNumber" : 74,
        "endColumnNumber" : 69
      },
      "nodeContext" : "net.handleServerReceived(con,c);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 65,
        "startColumnNumber" : 47,
        "endLineNumber" : 75,
        "endColumnNumber" : 33
      },
      "nodeContext" : "{\n  con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n  Connect c=new Connect();\n  c.addressTCP=\"steam:\" + from.getAccountID();\n  Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n  steamConnections.put(from.getAccountID(),con);\n  connections.add(con);\n  net.handleServerReceived(con,c);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 65,
        "startColumnNumber" : 32,
        "endLineNumber" : 75,
        "endColumnNumber" : 33
      },
      "nodeContext" : "if (con == null) {\n  con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n  Connect c=new Connect();\n  c.addressTCP=\"steam:\" + from.getAccountID();\n  Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n  steamConnections.put(from.getAccountID(),con);\n  connections.add(con);\n  net.handleServerReceived(con,c);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 63,
        "startColumnNumber" : 31,
        "endLineNumber" : 78,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  if (con == null) {\n    con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n    Connect c=new Connect();\n    c.addressTCP=\"steam:\" + from.getAccountID();\n    Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n    steamConnections.put(from.getAccountID(),con);\n    connections.add(con);\n    net.handleServerReceived(con,c);\n  }\n  net.handleServerReceived(con,output);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 904,
        "startLineNumber" : 63,
        "startColumnNumber" : 28,
        "endLineNumber" : 80,
        "endColumnNumber" : 29
      },
      "nodeContext" : "try {\n  if (con == null) {\n    con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n    Connect c=new Connect();\n    c.addressTCP=\"steam:\" + from.getAccountID();\n    Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n    steamConnections.put(from.getAccountID(),con);\n    connections.add(con);\n    net.handleServerReceived(con,c);\n  }\n  net.handleServerReceived(con,output);\n}\n catch (Throwable e) {\n  Log.err(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 61,
        "startColumnNumber" : 40,
        "endLineNumber" : 81,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  SteamConnection con=steamConnections.get(fromID);\n  try {\n    if (con == null) {\n      con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n      Connect c=new Connect();\n      c.addressTCP=\"steam:\" + from.getAccountID();\n      Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n      steamConnections.put(from.getAccountID(),con);\n      connections.add(con);\n      net.handleServerReceived(con,c);\n    }\n    net.handleServerReceived(con,output);\n  }\n catch (  Throwable e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1389,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 87,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (net.server()) {\n  SteamConnection con=steamConnections.get(fromID);\n  try {\n    if (con == null) {\n      con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n      Connect c=new Connect();\n      c.addressTCP=\"steam:\" + from.getAccountID();\n      Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n      steamConnections.put(from.getAccountID(),con);\n      connections.add(con);\n      net.handleServerReceived(con,c);\n    }\n    net.handleServerReceived(con,output);\n  }\n catch (  Throwable e) {\n    Log.err(e);\n  }\n}\n else if (currentServer != null && fromID == currentServer.getAccountID()) {\n  try {\n    net.handleClientReceived(output);\n  }\n catch (  Throwable t) {\n    net.handleException(t);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 55,
        "startColumnNumber" : 23,
        "endLineNumber" : 88,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  readBuffer.position(0);\n  snet.readP2PPacket(from,readBuffer,0);\n  int fromID=from.getAccountID();\n  Object output=serializer.read(readBuffer);\n  if (net.server()) {\n    SteamConnection con=steamConnections.get(fromID);\n    try {\n      if (con == null) {\n        con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n        Connect c=new Connect();\n        c.addressTCP=\"steam:\" + from.getAccountID();\n        Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n        steamConnections.put(from.getAccountID(),con);\n        connections.add(con);\n        net.handleServerReceived(con,c);\n      }\n      net.handleServerReceived(con,output);\n    }\n catch (    Throwable e) {\n      Log.err(e);\n    }\n  }\n else   if (currentServer != null && fromID == currentServer.getAccountID()) {\n    try {\n      net.handleClientReceived(output);\n    }\n catch (    Throwable t) {\n      net.handleException(t);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1763,
        "startLineNumber" : 55,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  readBuffer.position(0);\n  snet.readP2PPacket(from,readBuffer,0);\n  int fromID=from.getAccountID();\n  Object output=serializer.read(readBuffer);\n  if (net.server()) {\n    SteamConnection con=steamConnections.get(fromID);\n    try {\n      if (con == null) {\n        con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n        Connect c=new Connect();\n        c.addressTCP=\"steam:\" + from.getAccountID();\n        Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n        steamConnections.put(from.getAccountID(),con);\n        connections.add(con);\n        net.handleServerReceived(con,c);\n      }\n      net.handleServerReceived(con,output);\n    }\n catch (    Throwable e) {\n      Log.err(e);\n    }\n  }\n else   if (currentServer != null && fromID == currentServer.getAccountID()) {\n    try {\n      net.handleClientReceived(output);\n    }\n catch (    Throwable t) {\n      net.handleException(t);\n    }\n  }\n}\n catch (SteamException e) {\n  Log.err(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 165,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1803,
        "startLineNumber" : 54,
        "startColumnNumber" : 67,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    readBuffer.position(0);\n    snet.readP2PPacket(from,readBuffer,0);\n    int fromID=from.getAccountID();\n    Object output=serializer.read(readBuffer);\n    if (net.server()) {\n      SteamConnection con=steamConnections.get(fromID);\n      try {\n        if (con == null) {\n          con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n          Connect c=new Connect();\n          c.addressTCP=\"steam:\" + from.getAccountID();\n          Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n          steamConnections.put(from.getAccountID(),con);\n          connections.add(con);\n          net.handleServerReceived(con,c);\n        }\n        net.handleServerReceived(con,output);\n      }\n catch (      Throwable e) {\n        Log.err(e);\n      }\n    }\n else     if (currentServer != null && fromID == currentServer.getAccountID()) {\n      try {\n        net.handleClientReceived(output);\n      }\n catch (      Throwable t) {\n        net.handleException(t);\n      }\n    }\n  }\n catch (  SteamException e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1854,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n  try {\n    readBuffer.position(0);\n    snet.readP2PPacket(from,readBuffer,0);\n    int fromID=from.getAccountID();\n    Object output=serializer.read(readBuffer);\n    if (net.server()) {\n      SteamConnection con=steamConnections.get(fromID);\n      try {\n        if (con == null) {\n          con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n          Connect c=new Connect();\n          c.addressTCP=\"steam:\" + from.getAccountID();\n          Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n          steamConnections.put(from.getAccountID(),con);\n          connections.add(con);\n          net.handleServerReceived(con,c);\n        }\n        net.handleServerReceived(con,output);\n      }\n catch (      Throwable e) {\n        Log.err(e);\n      }\n    }\n else     if (currentServer != null && fromID == currentServer.getAccountID()) {\n      try {\n        net.handleClientReceived(output);\n      }\n catch (      Throwable t) {\n        net.handleException(t);\n      }\n    }\n  }\n catch (  SteamException e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 176,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1886,
        "startLineNumber" : 53,
        "startColumnNumber" : 32,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n    try {\n      readBuffer.position(0);\n      snet.readP2PPacket(from,readBuffer,0);\n      int fromID=from.getAccountID();\n      Object output=serializer.read(readBuffer);\n      if (net.server()) {\n        SteamConnection con=steamConnections.get(fromID);\n        try {\n          if (con == null) {\n            con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n            Connect c=new Connect();\n            c.addressTCP=\"steam:\" + from.getAccountID();\n            Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n            steamConnections.put(from.getAccountID(),con);\n            connections.add(con);\n            net.handleServerReceived(con,c);\n          }\n          net.handleServerReceived(con,output);\n        }\n catch (        Throwable e) {\n          Log.err(e);\n        }\n      }\n else       if (currentServer != null && fromID == currentServer.getAccountID()) {\n        try {\n          net.handleClientReceived(output);\n        }\n catch (        Throwable t) {\n          net.handleException(t);\n        }\n      }\n    }\n catch (    SteamException e) {\n      Log.err(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1928,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void update(){\n  while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n    try {\n      readBuffer.position(0);\n      snet.readP2PPacket(from,readBuffer,0);\n      int fromID=from.getAccountID();\n      Object output=serializer.read(readBuffer);\n      if (net.server()) {\n        SteamConnection con=steamConnections.get(fromID);\n        try {\n          if (con == null) {\n            con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n            Connect c=new Connect();\n            c.addressTCP=\"steam:\" + from.getAccountID();\n            Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n            steamConnections.put(from.getAccountID(),con);\n            connections.add(con);\n            net.handleServerReceived(con,c);\n          }\n          net.handleServerReceived(con,output);\n        }\n catch (        Throwable e) {\n          Log.err(e);\n        }\n      }\n else       if (currentServer != null && fromID == currentServer.getAccountID()) {\n        try {\n          net.handleClientReceived(output);\n        }\n catch (        Throwable t) {\n          net.handleException(t);\n        }\n      }\n    }\n catch (    SteamException e) {\n      Log.err(e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 74,
        "startColumnNumber" : 36,
        "endLineNumber" : 74,
        "endColumnNumber" : 69
      },
      "nodeContext" : "net.handleServerReceived(con,c);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "con",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 77,
      "startColumnNumber" : 57,
      "endLineNumber" : 77,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 77,
        "startColumnNumber" : 32,
        "endLineNumber" : 77,
        "endColumnNumber" : 69
      },
      "nodeContext" : "net.handleServerReceived(con,output)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 77,
        "startColumnNumber" : 32,
        "endLineNumber" : 77,
        "endColumnNumber" : 70
      },
      "nodeContext" : "net.handleServerReceived(con,output);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 63,
        "startColumnNumber" : 31,
        "endLineNumber" : 78,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  if (con == null) {\n    con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n    Connect c=new Connect();\n    c.addressTCP=\"steam:\" + from.getAccountID();\n    Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n    steamConnections.put(from.getAccountID(),con);\n    connections.add(con);\n    net.handleServerReceived(con,c);\n  }\n  net.handleServerReceived(con,output);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 904,
        "startLineNumber" : 63,
        "startColumnNumber" : 28,
        "endLineNumber" : 80,
        "endColumnNumber" : 29
      },
      "nodeContext" : "try {\n  if (con == null) {\n    con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n    Connect c=new Connect();\n    c.addressTCP=\"steam:\" + from.getAccountID();\n    Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n    steamConnections.put(from.getAccountID(),con);\n    connections.add(con);\n    net.handleServerReceived(con,c);\n  }\n  net.handleServerReceived(con,output);\n}\n catch (Throwable e) {\n  Log.err(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 61,
        "startColumnNumber" : 40,
        "endLineNumber" : 81,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  SteamConnection con=steamConnections.get(fromID);\n  try {\n    if (con == null) {\n      con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n      Connect c=new Connect();\n      c.addressTCP=\"steam:\" + from.getAccountID();\n      Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n      steamConnections.put(from.getAccountID(),con);\n      connections.add(con);\n      net.handleServerReceived(con,c);\n    }\n    net.handleServerReceived(con,output);\n  }\n catch (  Throwable e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1389,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 87,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (net.server()) {\n  SteamConnection con=steamConnections.get(fromID);\n  try {\n    if (con == null) {\n      con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n      Connect c=new Connect();\n      c.addressTCP=\"steam:\" + from.getAccountID();\n      Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n      steamConnections.put(from.getAccountID(),con);\n      connections.add(con);\n      net.handleServerReceived(con,c);\n    }\n    net.handleServerReceived(con,output);\n  }\n catch (  Throwable e) {\n    Log.err(e);\n  }\n}\n else if (currentServer != null && fromID == currentServer.getAccountID()) {\n  try {\n    net.handleClientReceived(output);\n  }\n catch (  Throwable t) {\n    net.handleException(t);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 55,
        "startColumnNumber" : 23,
        "endLineNumber" : 88,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  readBuffer.position(0);\n  snet.readP2PPacket(from,readBuffer,0);\n  int fromID=from.getAccountID();\n  Object output=serializer.read(readBuffer);\n  if (net.server()) {\n    SteamConnection con=steamConnections.get(fromID);\n    try {\n      if (con == null) {\n        con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n        Connect c=new Connect();\n        c.addressTCP=\"steam:\" + from.getAccountID();\n        Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n        steamConnections.put(from.getAccountID(),con);\n        connections.add(con);\n        net.handleServerReceived(con,c);\n      }\n      net.handleServerReceived(con,output);\n    }\n catch (    Throwable e) {\n      Log.err(e);\n    }\n  }\n else   if (currentServer != null && fromID == currentServer.getAccountID()) {\n    try {\n      net.handleClientReceived(output);\n    }\n catch (    Throwable t) {\n      net.handleException(t);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1763,
        "startLineNumber" : 55,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  readBuffer.position(0);\n  snet.readP2PPacket(from,readBuffer,0);\n  int fromID=from.getAccountID();\n  Object output=serializer.read(readBuffer);\n  if (net.server()) {\n    SteamConnection con=steamConnections.get(fromID);\n    try {\n      if (con == null) {\n        con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n        Connect c=new Connect();\n        c.addressTCP=\"steam:\" + from.getAccountID();\n        Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n        steamConnections.put(from.getAccountID(),con);\n        connections.add(con);\n        net.handleServerReceived(con,c);\n      }\n      net.handleServerReceived(con,output);\n    }\n catch (    Throwable e) {\n      Log.err(e);\n    }\n  }\n else   if (currentServer != null && fromID == currentServer.getAccountID()) {\n    try {\n      net.handleClientReceived(output);\n    }\n catch (    Throwable t) {\n      net.handleException(t);\n    }\n  }\n}\n catch (SteamException e) {\n  Log.err(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 165,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1803,
        "startLineNumber" : 54,
        "startColumnNumber" : 67,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    readBuffer.position(0);\n    snet.readP2PPacket(from,readBuffer,0);\n    int fromID=from.getAccountID();\n    Object output=serializer.read(readBuffer);\n    if (net.server()) {\n      SteamConnection con=steamConnections.get(fromID);\n      try {\n        if (con == null) {\n          con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n          Connect c=new Connect();\n          c.addressTCP=\"steam:\" + from.getAccountID();\n          Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n          steamConnections.put(from.getAccountID(),con);\n          connections.add(con);\n          net.handleServerReceived(con,c);\n        }\n        net.handleServerReceived(con,output);\n      }\n catch (      Throwable e) {\n        Log.err(e);\n      }\n    }\n else     if (currentServer != null && fromID == currentServer.getAccountID()) {\n      try {\n        net.handleClientReceived(output);\n      }\n catch (      Throwable t) {\n        net.handleException(t);\n      }\n    }\n  }\n catch (  SteamException e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1854,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n  try {\n    readBuffer.position(0);\n    snet.readP2PPacket(from,readBuffer,0);\n    int fromID=from.getAccountID();\n    Object output=serializer.read(readBuffer);\n    if (net.server()) {\n      SteamConnection con=steamConnections.get(fromID);\n      try {\n        if (con == null) {\n          con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n          Connect c=new Connect();\n          c.addressTCP=\"steam:\" + from.getAccountID();\n          Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n          steamConnections.put(from.getAccountID(),con);\n          connections.add(con);\n          net.handleServerReceived(con,c);\n        }\n        net.handleServerReceived(con,output);\n      }\n catch (      Throwable e) {\n        Log.err(e);\n      }\n    }\n else     if (currentServer != null && fromID == currentServer.getAccountID()) {\n      try {\n        net.handleClientReceived(output);\n      }\n catch (      Throwable t) {\n        net.handleException(t);\n      }\n    }\n  }\n catch (  SteamException e) {\n    Log.err(e);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 176,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1886,
        "startLineNumber" : 53,
        "startColumnNumber" : 32,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n    try {\n      readBuffer.position(0);\n      snet.readP2PPacket(from,readBuffer,0);\n      int fromID=from.getAccountID();\n      Object output=serializer.read(readBuffer);\n      if (net.server()) {\n        SteamConnection con=steamConnections.get(fromID);\n        try {\n          if (con == null) {\n            con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n            Connect c=new Connect();\n            c.addressTCP=\"steam:\" + from.getAccountID();\n            Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n            steamConnections.put(from.getAccountID(),con);\n            connections.add(con);\n            net.handleServerReceived(con,c);\n          }\n          net.handleServerReceived(con,output);\n        }\n catch (        Throwable e) {\n          Log.err(e);\n        }\n      }\n else       if (currentServer != null && fromID == currentServer.getAccountID()) {\n        try {\n          net.handleClientReceived(output);\n        }\n catch (        Throwable t) {\n          net.handleException(t);\n        }\n      }\n    }\n catch (    SteamException e) {\n      Log.err(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1928,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void update(){\n  while ((length=snet.isP2PPacketAvailable(0)) != 0) {\n    try {\n      readBuffer.position(0);\n      snet.readP2PPacket(from,readBuffer,0);\n      int fromID=from.getAccountID();\n      Object output=serializer.read(readBuffer);\n      if (net.server()) {\n        SteamConnection con=steamConnections.get(fromID);\n        try {\n          if (con == null) {\n            con=new SteamConnection(SteamID.createFromNativeHandle(from.handle()));\n            Connect c=new Connect();\n            c.addressTCP=\"steam:\" + from.getAccountID();\n            Log.info(\"&bReceived STEAM connection: @\",c.addressTCP);\n            steamConnections.put(from.getAccountID(),con);\n            connections.add(con);\n            net.handleServerReceived(con,c);\n          }\n          net.handleServerReceived(con,output);\n        }\n catch (        Throwable e) {\n          Log.err(e);\n        }\n      }\n else       if (currentServer != null && fromID == currentServer.getAccountID()) {\n        try {\n          net.handleClientReceived(output);\n        }\n catch (        Throwable t) {\n          net.handleException(t);\n        }\n      }\n    }\n catch (    SteamException e) {\n      Log.err(e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 77,
        "startColumnNumber" : 32,
        "endLineNumber" : 77,
        "endColumnNumber" : 70
      },
      "nodeContext" : "net.handleServerReceived(con,output);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 65,
    "startColumnNumber" : 35,
    "endLineNumber" : 65,
    "endColumnNumber" : 38
  }, {
    "charLength" : 3,
    "startLineNumber" : 72,
    "startColumnNumber" : 78,
    "endLineNumber" : 72,
    "endColumnNumber" : 81
  }, {
    "charLength" : 3,
    "startLineNumber" : 73,
    "startColumnNumber" : 52,
    "endLineNumber" : 73,
    "endColumnNumber" : 55
  }, {
    "charLength" : 3,
    "startLineNumber" : 74,
    "startColumnNumber" : 61,
    "endLineNumber" : 74,
    "endColumnNumber" : 64
  }, {
    "charLength" : 3,
    "startLineNumber" : 77,
    "startColumnNumber" : 57,
    "endLineNumber" : 77,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}