{
  "id" : 360,
  "expression" : "XMLOutput.class",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/test/java/hudson/model/RunTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "XMLOutput.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 314,
      "startColumnNumber" : 53,
      "endLineNumber" : 314,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 314,
        "startColumnNumber" : 40,
        "endLineNumber" : 314,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Mockito.mock(XMLOutput.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 314,
        "startColumnNumber" : 28,
        "endLineNumber" : 314,
        "endColumnNumber" : 69
      },
      "nodeContext" : "xmlOutput=Mockito.mock(XMLOutput.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 314,
        "startColumnNumber" : 12,
        "endLineNumber" : 314,
        "endColumnNumber" : 70
      },
      "nodeContext" : "final XMLOutput xmlOutput=Mockito.mock(XMLOutput.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 964,
        "startLineNumber" : 295,
        "startColumnNumber" : 10,
        "endLineNumber" : 318,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < 5; i++) {\n    ps.print(SAMPLE_BUILD_OUTPUT);\n  }\n  ps.print(\"Finished: SUCCESS.\\n\");\n  final Run<? extends Job<?,?>,? extends Run<?,?>> r=new Run(Mockito.mock(Job.class)){\n    @NonNull @Override public AnnotatedLargeText<?> getLogText(){\n      return new AnnotatedLargeText<>(buf,StandardCharsets.UTF_8,true,null);\n    }\n    @NonNull @Override public InputStream getLogInputStream() throws IOException {\n      return buf.newInputStream();\n    }\n  }\n;\n  final XMLOutput xmlOutput=Mockito.mock(XMLOutput.class);\n  Mockito.when(xmlOutput.asWriter()).thenReturn(writer);\n  r.writeLogTo(offset,xmlOutput);\n  assertEquals(expectedOutput,writer.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1141,
        "startLineNumber" : 291,
        "startColumnNumber" : 8,
        "endLineNumber" : 318,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (ByteBuffer buf=new ByteBuffer();PrintStream ps=new PrintStream(buf,true);StringWriter writer=new StringWriter()){\n  for (int i=0; i < 5; i++) {\n    ps.print(SAMPLE_BUILD_OUTPUT);\n  }\n  ps.print(\"Finished: SUCCESS.\\n\");\n  final Run<? extends Job<?,?>,? extends Run<?,?>> r=new Run(Mockito.mock(Job.class)){\n    @NonNull @Override public AnnotatedLargeText<?> getLogText(){\n      return new AnnotatedLargeText<>(buf,StandardCharsets.UTF_8,true,null);\n    }\n    @NonNull @Override public InputStream getLogInputStream() throws IOException {\n      return buf.newInputStream();\n    }\n  }\n;\n  final XMLOutput xmlOutput=Mockito.mock(XMLOutput.class);\n  Mockito.when(xmlOutput.asWriter()).thenReturn(writer);\n  r.writeLogTo(offset,xmlOutput);\n  assertEquals(expectedOutput,writer.toString());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 153,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1159,
        "startLineNumber" : 290,
        "startColumnNumber" : 93,
        "endLineNumber" : 319,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (ByteBuffer buf=new ByteBuffer();PrintStream ps=new PrintStream(buf,true);StringWriter writer=new StringWriter()){\n    for (int i=0; i < 5; i++) {\n      ps.print(SAMPLE_BUILD_OUTPUT);\n    }\n    ps.print(\"Finished: SUCCESS.\\n\");\n    final Run<? extends Job<?,?>,? extends Run<?,?>> r=new Run(Mockito.mock(Job.class)){\n      @NonNull @Override public AnnotatedLargeText<?> getLogText(){\n        return new AnnotatedLargeText<>(buf,StandardCharsets.UTF_8,true,null);\n      }\n      @NonNull @Override public InputStream getLogInputStream() throws IOException {\n        return buf.newInputStream();\n      }\n    }\n;\n    final XMLOutput xmlOutput=Mockito.mock(XMLOutput.class);\n    Mockito.when(xmlOutput.asWriter()).thenReturn(writer);\n    r.writeLogTo(offset,xmlOutput);\n    assertEquals(expectedOutput,writer.toString());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 290,
        "startColumnNumber" : 4,
        "endLineNumber" : 319,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void assertWriteLogToEquals(String expectedOutput,long offset) throws Exception {\n  try (ByteBuffer buf=new ByteBuffer();PrintStream ps=new PrintStream(buf,true);StringWriter writer=new StringWriter()){\n    for (int i=0; i < 5; i++) {\n      ps.print(SAMPLE_BUILD_OUTPUT);\n    }\n    ps.print(\"Finished: SUCCESS.\\n\");\n    final Run<? extends Job<?,?>,? extends Run<?,?>> r=new Run(Mockito.mock(Job.class)){\n      @NonNull @Override public AnnotatedLargeText<?> getLogText(){\n        return new AnnotatedLargeText<>(buf,StandardCharsets.UTF_8,true,null);\n      }\n      @NonNull @Override public InputStream getLogInputStream() throws IOException {\n        return buf.newInputStream();\n      }\n    }\n;\n    final XMLOutput xmlOutput=Mockito.mock(XMLOutput.class);\n    Mockito.when(xmlOutput.asWriter()).thenReturn(writer);\n    r.writeLogTo(offset,xmlOutput);\n    assertEquals(expectedOutput,writer.toString());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 314,
        "startColumnNumber" : 12,
        "endLineNumber" : 314,
        "endColumnNumber" : 70
      },
      "nodeContext" : "final XMLOutput xmlOutput=Mockito.mock(XMLOutput.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<hudson.model.XMLOutput>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 314,
    "startColumnNumber" : 53,
    "endLineNumber" : 314,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}