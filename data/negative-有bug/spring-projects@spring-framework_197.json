{
  "id" : 197,
  "expression" : "outputMessage.getHeaders().getContentType()",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-web/src/main/java/org/springframework/http/converter/StringHttpMessageConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "outputMessage.getHeaders().getContentType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 105,
      "startColumnNumber" : 42,
      "endLineNumber" : 105,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 105,
        "startColumnNumber" : 20,
        "endLineNumber" : 105,
        "endColumnNumber" : 86
      },
      "nodeContext" : "getContentTypeCharset(outputMessage.getHeaders().getContentType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 105,
        "startColumnNumber" : 10,
        "endLineNumber" : 105,
        "endColumnNumber" : 86
      },
      "nodeContext" : "charset=getContentTypeCharset(outputMessage.getHeaders().getContentType())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 105,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Charset charset=getContentTypeCharset(outputMessage.getHeaders().getContentType());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 101,
        "startColumnNumber" : 94,
        "endLineNumber" : 107,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (this.writeAcceptCharset) {\n    outputMessage.getHeaders().setAcceptCharset(getAcceptedCharsets());\n  }\n  Charset charset=getContentTypeCharset(outputMessage.getHeaders().getContentType());\n  StreamUtils.copy(str,charset,outputMessage.getBody());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 100,
        "startColumnNumber" : 1,
        "endLineNumber" : 107,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected void writeInternal(String str,HttpOutputMessage outputMessage) throws IOException {\n  if (this.writeAcceptCharset) {\n    outputMessage.getHeaders().setAcceptCharset(getAcceptedCharsets());\n  }\n  Charset charset=getContentTypeCharset(outputMessage.getHeaders().getContentType());\n  StreamUtils.copy(str,charset,outputMessage.getBody());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 105,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Charset charset=getContentTypeCharset(outputMessage.getHeaders().getContentType());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "org.springframework.http.MediaType"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 105,
    "startColumnNumber" : 42,
    "endLineNumber" : 105,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}