{
  "id" : 105,
  "expression" : "tuningConfig",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexIngestionSpec.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tuningConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 45,
      "startColumnNumber" : 32,
      "endLineNumber" : 45,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 46
      },
      "nodeContext" : "super(dataSchema,ioConfig,tuningConfig);\n",
      "nodeType" : "SuperConstructorInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(dataSchema,ioConfig,tuningConfig);\n  if (dataSchema.getParserMap() != null && ioConfig.getInputSource() != null) {\n    if (!(ioConfig.getInputSource() instanceof FirehoseFactoryToInputSourceAdaptor)) {\n      throw new IAE(\"Cannot use parser and inputSource together. Try using inputFormat instead of parser.\");\n    }\n  }\n  if (ioConfig.getInputSource() != null && ioConfig.getInputSource().needsFormat()) {\n    Checks.checkOneNotNullOrEmpty(ImmutableList.of(new Property<>(\"parser\",dataSchema.getParserMap()),new Property<>(\"inputFormat\",ioConfig.getInputFormat())));\n  }\n  this.dataSchema=dataSchema;\n  this.ioConfig=ioConfig;\n  this.tuningConfig=tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1089,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@JsonCreator public ParallelIndexIngestionSpec(@JsonProperty(\"dataSchema\") DataSchema dataSchema,@JsonProperty(\"ioConfig\") ParallelIndexIOConfig ioConfig,@JsonProperty(\"tuningConfig\") ParallelIndexTuningConfig tuningConfig){\n  super(dataSchema,ioConfig,tuningConfig);\n  if (dataSchema.getParserMap() != null && ioConfig.getInputSource() != null) {\n    if (!(ioConfig.getInputSource() instanceof FirehoseFactoryToInputSourceAdaptor)) {\n      throw new IAE(\"Cannot use parser and inputSource together. Try using inputFormat instead of parser.\");\n    }\n  }\n  if (ioConfig.getInputSource() != null && ioConfig.getInputSource().needsFormat()) {\n    Checks.checkOneNotNullOrEmpty(ImmutableList.of(new Property<>(\"parser\",dataSchema.getParserMap()),new Property<>(\"inputFormat\",ioConfig.getInputFormat())));\n  }\n  this.dataSchema=dataSchema;\n  this.ioConfig=ioConfig;\n  this.tuningConfig=tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 46
      },
      "nodeContext" : "super(dataSchema,ioConfig,tuningConfig);\n",
      "nodeType" : "SuperConstructorInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.indexing.common.task.batch.parallel.ParallelIndexTuningConfig"
  }, {
    "nodeContext" : "tuningConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 63,
      "startColumnNumber" : 24,
      "endLineNumber" : 63,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 63,
        "startColumnNumber" : 24,
        "endLineNumber" : 63,
        "endColumnNumber" : 44
      },
      "nodeContext" : "tuningConfig == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 63,
        "startColumnNumber" : 24,
        "endLineNumber" : 63,
        "endColumnNumber" : 103
      },
      "nodeContext" : "tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 103
      },
      "nodeContext" : "this.tuningConfig=tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 104
      },
      "nodeContext" : "this.tuningConfig=tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(dataSchema,ioConfig,tuningConfig);\n  if (dataSchema.getParserMap() != null && ioConfig.getInputSource() != null) {\n    if (!(ioConfig.getInputSource() instanceof FirehoseFactoryToInputSourceAdaptor)) {\n      throw new IAE(\"Cannot use parser and inputSource together. Try using inputFormat instead of parser.\");\n    }\n  }\n  if (ioConfig.getInputSource() != null && ioConfig.getInputSource().needsFormat()) {\n    Checks.checkOneNotNullOrEmpty(ImmutableList.of(new Property<>(\"parser\",dataSchema.getParserMap()),new Property<>(\"inputFormat\",ioConfig.getInputFormat())));\n  }\n  this.dataSchema=dataSchema;\n  this.ioConfig=ioConfig;\n  this.tuningConfig=tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1089,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@JsonCreator public ParallelIndexIngestionSpec(@JsonProperty(\"dataSchema\") DataSchema dataSchema,@JsonProperty(\"ioConfig\") ParallelIndexIOConfig ioConfig,@JsonProperty(\"tuningConfig\") ParallelIndexTuningConfig tuningConfig){\n  super(dataSchema,ioConfig,tuningConfig);\n  if (dataSchema.getParserMap() != null && ioConfig.getInputSource() != null) {\n    if (!(ioConfig.getInputSource() instanceof FirehoseFactoryToInputSourceAdaptor)) {\n      throw new IAE(\"Cannot use parser and inputSource together. Try using inputFormat instead of parser.\");\n    }\n  }\n  if (ioConfig.getInputSource() != null && ioConfig.getInputSource().needsFormat()) {\n    Checks.checkOneNotNullOrEmpty(ImmutableList.of(new Property<>(\"parser\",dataSchema.getParserMap()),new Property<>(\"inputFormat\",ioConfig.getInputFormat())));\n  }\n  this.dataSchema=dataSchema;\n  this.ioConfig=ioConfig;\n  this.tuningConfig=tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 104
      },
      "nodeContext" : "this.tuningConfig=tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.indexing.common.task.batch.parallel.ParallelIndexTuningConfig"
  }, {
    "nodeContext" : "tuningConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 63,
      "startColumnNumber" : 91,
      "endLineNumber" : 63,
      "endColumnNumber" : 103
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 63,
        "startColumnNumber" : 24,
        "endLineNumber" : 63,
        "endColumnNumber" : 103
      },
      "nodeContext" : "tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 103
      },
      "nodeContext" : "this.tuningConfig=tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 104
      },
      "nodeContext" : "this.tuningConfig=tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(dataSchema,ioConfig,tuningConfig);\n  if (dataSchema.getParserMap() != null && ioConfig.getInputSource() != null) {\n    if (!(ioConfig.getInputSource() instanceof FirehoseFactoryToInputSourceAdaptor)) {\n      throw new IAE(\"Cannot use parser and inputSource together. Try using inputFormat instead of parser.\");\n    }\n  }\n  if (ioConfig.getInputSource() != null && ioConfig.getInputSource().needsFormat()) {\n    Checks.checkOneNotNullOrEmpty(ImmutableList.of(new Property<>(\"parser\",dataSchema.getParserMap()),new Property<>(\"inputFormat\",ioConfig.getInputFormat())));\n  }\n  this.dataSchema=dataSchema;\n  this.ioConfig=ioConfig;\n  this.tuningConfig=tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1089,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@JsonCreator public ParallelIndexIngestionSpec(@JsonProperty(\"dataSchema\") DataSchema dataSchema,@JsonProperty(\"ioConfig\") ParallelIndexIOConfig ioConfig,@JsonProperty(\"tuningConfig\") ParallelIndexTuningConfig tuningConfig){\n  super(dataSchema,ioConfig,tuningConfig);\n  if (dataSchema.getParserMap() != null && ioConfig.getInputSource() != null) {\n    if (!(ioConfig.getInputSource() instanceof FirehoseFactoryToInputSourceAdaptor)) {\n      throw new IAE(\"Cannot use parser and inputSource together. Try using inputFormat instead of parser.\");\n    }\n  }\n  if (ioConfig.getInputSource() != null && ioConfig.getInputSource().needsFormat()) {\n    Checks.checkOneNotNullOrEmpty(ImmutableList.of(new Property<>(\"parser\",dataSchema.getParserMap()),new Property<>(\"inputFormat\",ioConfig.getInputFormat())));\n  }\n  this.dataSchema=dataSchema;\n  this.ioConfig=ioConfig;\n  this.tuningConfig=tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 104
      },
      "nodeContext" : "this.tuningConfig=tuningConfig == null ? ParallelIndexTuningConfig.defaultConfig() : tuningConfig;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.indexing.common.task.batch.parallel.ParallelIndexTuningConfig"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 45,
    "startColumnNumber" : 32,
    "endLineNumber" : 45,
    "endColumnNumber" : 44
  }, {
    "charLength" : 12,
    "startLineNumber" : 63,
    "startColumnNumber" : 24,
    "endLineNumber" : 63,
    "endColumnNumber" : 36
  }, {
    "charLength" : 12,
    "startLineNumber" : 63,
    "startColumnNumber" : 91,
    "endLineNumber" : 63,
    "endColumnNumber" : 103
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 0
  } ]
}