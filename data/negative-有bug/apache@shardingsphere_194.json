{
  "id" : 194,
  "expression" : "OrderedServicesCache",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-infra/shardingsphere-infra-util/src/main/java/org/apache/shardingsphere/infra/util/spi/type/ordered/OrderedSPIRegistry.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "OrderedServicesCache",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 81,
      "startColumnNumber" : 45,
      "endLineNumber" : 81,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 81,
        "startColumnNumber" : 45,
        "endLineNumber" : 81,
        "endColumnNumber" : 101
      },
      "nodeContext" : "OrderedServicesCache.findCachedServices(spiClass,types)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 81,
        "startColumnNumber" : 45,
        "endLineNumber" : 81,
        "endColumnNumber" : 139
      },
      "nodeContext" : "OrderedServicesCache.findCachedServices(spiClass,types).map(optional -> (Map<K,V>)optional)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 81,
        "startColumnNumber" : 28,
        "endLineNumber" : 81,
        "endColumnNumber" : 139
      },
      "nodeContext" : "cachedServices=OrderedServicesCache.findCachedServices(spiClass,types).map(optional -> (Map<K,V>)optional)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 140
      },
      "nodeContext" : "Optional<Map<K,V>> cachedServices=OrderedServicesCache.findCachedServices(spiClass,types).map(optional -> (Map<K,V>)optional);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 80,
        "startColumnNumber" : 174,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<Map<K,V>> cachedServices=OrderedServicesCache.findCachedServices(spiClass,types).map(optional -> (Map<K,V>)optional);\n  if (cachedServices.isPresent()) {\n    return cachedServices.get();\n  }\n  Collection<V> registeredServices=getRegisteredServices(spiClass,orderComparator);\n  Map<K,V> result=new LinkedHashMap<>(registeredServices.size(),1);\n  for (  V each : registeredServices) {\n    types.stream().filter(type -> each.getTypeClass() == type.getClass()).forEach(type -> result.put(type,each));\n  }\n  OrderedServicesCache.cacheServices(spiClass,types,result);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1167,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get registered services.\n * @param spiClass class of ordered SPI\n * @param types types\n * @param < K > type of key\n * @param < V > type of ordered SPI class\n * @param orderComparator order comparator\n * @return registered services\n */\n@SuppressWarnings(\"unchecked\") public static <K,V extends OrderedSPI<?>>Map<K,V> getRegisteredServices(final Class<V> spiClass,final Collection<K> types,final Comparator<Integer> orderComparator){\n  Optional<Map<K,V>> cachedServices=OrderedServicesCache.findCachedServices(spiClass,types).map(optional -> (Map<K,V>)optional);\n  if (cachedServices.isPresent()) {\n    return cachedServices.get();\n  }\n  Collection<V> registeredServices=getRegisteredServices(spiClass,orderComparator);\n  Map<K,V> result=new LinkedHashMap<>(registeredServices.size(),1);\n  for (  V each : registeredServices) {\n    types.stream().filter(type -> each.getTypeClass() == type.getClass()).forEach(type -> result.put(type,each));\n  }\n  OrderedServicesCache.cacheServices(spiClass,types,result);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 140
      },
      "nodeContext" : "Optional<Map<K,V>> cachedServices=OrderedServicesCache.findCachedServices(spiClass,types).map(optional -> (Map<K,V>)optional);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.infra.util.spi.type.ordered.cache.OrderedServicesCache"
  }, {
    "nodeContext" : "OrderedServicesCache",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 90,
      "startColumnNumber" : 8,
      "endLineNumber" : 90,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 67
      },
      "nodeContext" : "OrderedServicesCache.cacheServices(spiClass,types,result)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 68
      },
      "nodeContext" : "OrderedServicesCache.cacheServices(spiClass,types,result);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 80,
        "startColumnNumber" : 174,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<Map<K,V>> cachedServices=OrderedServicesCache.findCachedServices(spiClass,types).map(optional -> (Map<K,V>)optional);\n  if (cachedServices.isPresent()) {\n    return cachedServices.get();\n  }\n  Collection<V> registeredServices=getRegisteredServices(spiClass,orderComparator);\n  Map<K,V> result=new LinkedHashMap<>(registeredServices.size(),1);\n  for (  V each : registeredServices) {\n    types.stream().filter(type -> each.getTypeClass() == type.getClass()).forEach(type -> result.put(type,each));\n  }\n  OrderedServicesCache.cacheServices(spiClass,types,result);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1167,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get registered services.\n * @param spiClass class of ordered SPI\n * @param types types\n * @param < K > type of key\n * @param < V > type of ordered SPI class\n * @param orderComparator order comparator\n * @return registered services\n */\n@SuppressWarnings(\"unchecked\") public static <K,V extends OrderedSPI<?>>Map<K,V> getRegisteredServices(final Class<V> spiClass,final Collection<K> types,final Comparator<Integer> orderComparator){\n  Optional<Map<K,V>> cachedServices=OrderedServicesCache.findCachedServices(spiClass,types).map(optional -> (Map<K,V>)optional);\n  if (cachedServices.isPresent()) {\n    return cachedServices.get();\n  }\n  Collection<V> registeredServices=getRegisteredServices(spiClass,orderComparator);\n  Map<K,V> result=new LinkedHashMap<>(registeredServices.size(),1);\n  for (  V each : registeredServices) {\n    types.stream().filter(type -> each.getTypeClass() == type.getClass()).forEach(type -> result.put(type,each));\n  }\n  OrderedServicesCache.cacheServices(spiClass,types,result);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 68
      },
      "nodeContext" : "OrderedServicesCache.cacheServices(spiClass,types,result);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.infra.util.spi.type.ordered.cache.OrderedServicesCache"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 81,
    "startColumnNumber" : 45,
    "endLineNumber" : 81,
    "endColumnNumber" : 65
  }, {
    "charLength" : 20,
    "startLineNumber" : 90,
    "startColumnNumber" : 8,
    "endLineNumber" : 90,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}