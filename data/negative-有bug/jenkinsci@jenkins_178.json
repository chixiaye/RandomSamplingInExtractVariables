{
  "id" : 178,
  "expression" : "0",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/security/BasicAuthenticationFilter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 129,
      "startColumnNumber" : 19,
      "endLineNumber" : 129,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 20
      },
      "nodeContext" : "idx >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (idx >= 0) {\n  username=uidpassword.substring(0,idx);\n  password=uidpassword.substring(idx + 1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2885,
        "startLineNumber" : 100,
        "startColumnNumber" : 131,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpServletRequest req=(HttpServletRequest)request;\n  HttpServletResponse rsp=(HttpServletResponse)response;\n  String authorization=req.getHeader(\"Authorization\");\n  String path=req.getServletPath();\n  if (authorization == null || req.getUserPrincipal() != null || path.startsWith(\"/secured/\") || !Jenkins.get().isUseSecurity()) {\n    if (req.getUserPrincipal() != null) {\n      SecurityContextHolder.getContext().setAuthentication(new ContainerAuthentication(req));\n    }\n    try {\n      chain.doFilter(request,response);\n    }\n  finally {\n      SecurityContextHolder.clearContext();\n    }\n    return;\n  }\n  String username=null;\n  String password=null;\n  String uidpassword=Scrambler.descramble(authorization.substring(6));\n  int idx=uidpassword.indexOf(':');\n  if (idx >= 0) {\n    username=uidpassword.substring(0,idx);\n    password=uidpassword.substring(idx + 1);\n  }\n  if (username == null) {\n    rsp.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n    rsp.setHeader(\"WWW-Authenticate\",\"Basic realm=\\\"Jenkins user\\\"\");\n    return;\n  }\n{\n    User u=BasicApiTokenHelper.isConnectingUsingApiToken(username,password);\n    if (u != null) {\n      UserDetails userDetails=u.getUserDetailsForImpersonation2();\n      Authentication auth=u.impersonate(userDetails);\n      SecurityListener.fireAuthenticated2(userDetails);\n      SecurityContextHolder.getContext().setAuthentication(auth);\n      try {\n        chain.doFilter(request,response);\n      }\n  finally {\n        SecurityContextHolder.clearContext();\n      }\n      return;\n    }\n  }\n  path=req.getContextPath() + \"/secured\" + path;\n  String q=req.getQueryString();\n  if (q != null)   path+='?' + q;\n  prepareRedirect(rsp,path);\n  RequestDispatcher d=servletContext.getRequestDispatcher(\"/j_security_check?j_username=\" + URLEncoder.encode(username,\"UTF-8\") + \"&j_password=\"+ URLEncoder.encode(password,\"UTF-8\"));\n  d.include(req,rsp);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 281,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3054,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"ACL.impersonate\") public void doFilter(ServletRequest request,ServletResponse response,FilterChain chain) throws IOException, ServletException {\n  HttpServletRequest req=(HttpServletRequest)request;\n  HttpServletResponse rsp=(HttpServletResponse)response;\n  String authorization=req.getHeader(\"Authorization\");\n  String path=req.getServletPath();\n  if (authorization == null || req.getUserPrincipal() != null || path.startsWith(\"/secured/\") || !Jenkins.get().isUseSecurity()) {\n    if (req.getUserPrincipal() != null) {\n      SecurityContextHolder.getContext().setAuthentication(new ContainerAuthentication(req));\n    }\n    try {\n      chain.doFilter(request,response);\n    }\n  finally {\n      SecurityContextHolder.clearContext();\n    }\n    return;\n  }\n  String username=null;\n  String password=null;\n  String uidpassword=Scrambler.descramble(authorization.substring(6));\n  int idx=uidpassword.indexOf(':');\n  if (idx >= 0) {\n    username=uidpassword.substring(0,idx);\n    password=uidpassword.substring(idx + 1);\n  }\n  if (username == null) {\n    rsp.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n    rsp.setHeader(\"WWW-Authenticate\",\"Basic realm=\\\"Jenkins user\\\"\");\n    return;\n  }\n{\n    User u=BasicApiTokenHelper.isConnectingUsingApiToken(username,password);\n    if (u != null) {\n      UserDetails userDetails=u.getUserDetailsForImpersonation2();\n      Authentication auth=u.impersonate(userDetails);\n      SecurityListener.fireAuthenticated2(userDetails);\n      SecurityContextHolder.getContext().setAuthentication(auth);\n      try {\n        chain.doFilter(request,response);\n      }\n  finally {\n        SecurityContextHolder.clearContext();\n      }\n      return;\n    }\n  }\n  path=req.getContextPath() + \"/secured\" + path;\n  String q=req.getQueryString();\n  if (q != null)   path+='?' + q;\n  prepareRedirect(rsp,path);\n  RequestDispatcher d=servletContext.getRequestDispatcher(\"/j_security_check?j_username=\" + URLEncoder.encode(username,\"UTF-8\") + \"&j_password=\"+ URLEncoder.encode(password,\"UTF-8\"));\n  d.include(req,rsp);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 304,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 20
      },
      "nodeContext" : "idx >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 130,
      "startColumnNumber" : 45,
      "endLineNumber" : 130,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 130,
        "startColumnNumber" : 23,
        "endLineNumber" : 130,
        "endColumnNumber" : 52
      },
      "nodeContext" : "uidpassword.substring(0,idx)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 52
      },
      "nodeContext" : "username=uidpassword.substring(0,idx)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 53
      },
      "nodeContext" : "username=uidpassword.substring(0,idx);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 129,
        "startColumnNumber" : 22,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  username=uidpassword.substring(0,idx);\n  password=uidpassword.substring(idx + 1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (idx >= 0) {\n  username=uidpassword.substring(0,idx);\n  password=uidpassword.substring(idx + 1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2885,
        "startLineNumber" : 100,
        "startColumnNumber" : 131,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpServletRequest req=(HttpServletRequest)request;\n  HttpServletResponse rsp=(HttpServletResponse)response;\n  String authorization=req.getHeader(\"Authorization\");\n  String path=req.getServletPath();\n  if (authorization == null || req.getUserPrincipal() != null || path.startsWith(\"/secured/\") || !Jenkins.get().isUseSecurity()) {\n    if (req.getUserPrincipal() != null) {\n      SecurityContextHolder.getContext().setAuthentication(new ContainerAuthentication(req));\n    }\n    try {\n      chain.doFilter(request,response);\n    }\n  finally {\n      SecurityContextHolder.clearContext();\n    }\n    return;\n  }\n  String username=null;\n  String password=null;\n  String uidpassword=Scrambler.descramble(authorization.substring(6));\n  int idx=uidpassword.indexOf(':');\n  if (idx >= 0) {\n    username=uidpassword.substring(0,idx);\n    password=uidpassword.substring(idx + 1);\n  }\n  if (username == null) {\n    rsp.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n    rsp.setHeader(\"WWW-Authenticate\",\"Basic realm=\\\"Jenkins user\\\"\");\n    return;\n  }\n{\n    User u=BasicApiTokenHelper.isConnectingUsingApiToken(username,password);\n    if (u != null) {\n      UserDetails userDetails=u.getUserDetailsForImpersonation2();\n      Authentication auth=u.impersonate(userDetails);\n      SecurityListener.fireAuthenticated2(userDetails);\n      SecurityContextHolder.getContext().setAuthentication(auth);\n      try {\n        chain.doFilter(request,response);\n      }\n  finally {\n        SecurityContextHolder.clearContext();\n      }\n      return;\n    }\n  }\n  path=req.getContextPath() + \"/secured\" + path;\n  String q=req.getQueryString();\n  if (q != null)   path+='?' + q;\n  prepareRedirect(rsp,path);\n  RequestDispatcher d=servletContext.getRequestDispatcher(\"/j_security_check?j_username=\" + URLEncoder.encode(username,\"UTF-8\") + \"&j_password=\"+ URLEncoder.encode(password,\"UTF-8\"));\n  d.include(req,rsp);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 281,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3054,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"ACL.impersonate\") public void doFilter(ServletRequest request,ServletResponse response,FilterChain chain) throws IOException, ServletException {\n  HttpServletRequest req=(HttpServletRequest)request;\n  HttpServletResponse rsp=(HttpServletResponse)response;\n  String authorization=req.getHeader(\"Authorization\");\n  String path=req.getServletPath();\n  if (authorization == null || req.getUserPrincipal() != null || path.startsWith(\"/secured/\") || !Jenkins.get().isUseSecurity()) {\n    if (req.getUserPrincipal() != null) {\n      SecurityContextHolder.getContext().setAuthentication(new ContainerAuthentication(req));\n    }\n    try {\n      chain.doFilter(request,response);\n    }\n  finally {\n      SecurityContextHolder.clearContext();\n    }\n    return;\n  }\n  String username=null;\n  String password=null;\n  String uidpassword=Scrambler.descramble(authorization.substring(6));\n  int idx=uidpassword.indexOf(':');\n  if (idx >= 0) {\n    username=uidpassword.substring(0,idx);\n    password=uidpassword.substring(idx + 1);\n  }\n  if (username == null) {\n    rsp.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n    rsp.setHeader(\"WWW-Authenticate\",\"Basic realm=\\\"Jenkins user\\\"\");\n    return;\n  }\n{\n    User u=BasicApiTokenHelper.isConnectingUsingApiToken(username,password);\n    if (u != null) {\n      UserDetails userDetails=u.getUserDetailsForImpersonation2();\n      Authentication auth=u.impersonate(userDetails);\n      SecurityListener.fireAuthenticated2(userDetails);\n      SecurityContextHolder.getContext().setAuthentication(auth);\n      try {\n        chain.doFilter(request,response);\n      }\n  finally {\n        SecurityContextHolder.clearContext();\n      }\n      return;\n    }\n  }\n  path=req.getContextPath() + \"/secured\" + path;\n  String q=req.getQueryString();\n  if (q != null)   path+='?' + q;\n  prepareRedirect(rsp,path);\n  RequestDispatcher d=servletContext.getRequestDispatcher(\"/j_security_check?j_username=\" + URLEncoder.encode(username,\"UTF-8\") + \"&j_password=\"+ URLEncoder.encode(password,\"UTF-8\"));\n  d.include(req,rsp);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 304,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 53
      },
      "nodeContext" : "username=uidpassword.substring(0,idx);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 129,
    "startColumnNumber" : 19,
    "endLineNumber" : 129,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 130,
    "startColumnNumber" : 45,
    "endLineNumber" : 130,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}