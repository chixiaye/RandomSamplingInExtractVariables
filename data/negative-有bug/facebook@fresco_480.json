{
  "id" : 480,
  "expression" : "i < array.length",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/fbcore/src/main/java/com/facebook/common/util/Hex.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < array.length",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 73,
      "startColumnNumber" : 20,
      "endLineNumber" : 73,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < array.length; i++) {\n  int index=array[i] & 0xFF;\n  if (index == 0 && zeroTerminated) {\n    break;\n  }\n  cArray[j++]=FIRST_CHAR[index];\n  cArray[j++]=SECOND_CHAR[index];\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 69,
        "startColumnNumber" : 71,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  char[] cArray=new char[array.length * 2];\n  int j=0;\n  for (int i=0; i < array.length; i++) {\n    int index=array[i] & 0xFF;\n    if (index == 0 && zeroTerminated) {\n      break;\n    }\n    cArray[j++]=FIRST_CHAR[index];\n    cArray[j++]=SECOND_CHAR[index];\n  }\n  return new String(cArray,0,j);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Quickly converts a byte array to a hexadecimal string representation.\n * @param array byte array, possibly zero-terminated.\n */\npublic static String encodeHex(byte[] array,boolean zeroTerminated){\n  char[] cArray=new char[array.length * 2];\n  int j=0;\n  for (int i=0; i < array.length; i++) {\n    int index=array[i] & 0xFF;\n    if (index == 0 && zeroTerminated) {\n      break;\n    }\n    cArray[j++]=FIRST_CHAR[index];\n    cArray[j++]=SECOND_CHAR[index];\n  }\n  return new String(cArray,0,j);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < array.length; i++) {\n  int index=array[i] & 0xFF;\n  if (index == 0 && zeroTerminated) {\n    break;\n  }\n  cArray[j++]=FIRST_CHAR[index];\n  cArray[j++]=SECOND_CHAR[index];\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 73,
    "startColumnNumber" : 20,
    "endLineNumber" : 73,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}