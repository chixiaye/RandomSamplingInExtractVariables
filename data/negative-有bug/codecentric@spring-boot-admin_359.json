{
  "id" : 359,
  "expression" : "\"'status' must not be empty.\"",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/domain/values/StatusInfoTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"'status' must not be empty.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 29,
      "startColumnNumber" : 68,
      "endLineNumber" : 29,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertThatThrownBy(() -> StatusInfo.valueOf(\"\")).isInstanceOf(IllegalArgumentException.class).hasMessage(\"'status' must not be empty.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 99
      },
      "nodeContext" : "assertThatThrownBy(() -> StatusInfo.valueOf(\"\")).isInstanceOf(IllegalArgumentException.class).hasMessage(\"'status' must not be empty.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 27,
        "startColumnNumber" : 29,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThatThrownBy(() -> StatusInfo.valueOf(\"\")).isInstanceOf(IllegalArgumentException.class).hasMessage(\"'status' must not be empty.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void invariants(){\n  assertThatThrownBy(() -> StatusInfo.valueOf(\"\")).isInstanceOf(IllegalArgumentException.class).hasMessage(\"'status' must not be empty.\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 23,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertThatThrownBy(() -> StatusInfo.valueOf(\"\")).isInstanceOf(IllegalArgumentException.class).hasMessage(\"'status' must not be empty.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 29,
    "startColumnNumber" : 68,
    "endLineNumber" : 29,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}