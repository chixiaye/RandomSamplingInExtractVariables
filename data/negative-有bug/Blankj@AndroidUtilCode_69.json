{
  "id" : 69,
  "expression" : "new BufferedInputStream(new FileInputStream(file))",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/utilcode/src/main/java/com/blankj/utilcode/util/FileUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new BufferedInputStream(new FileInputStream(file))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 684,
      "startColumnNumber" : 17,
      "endLineNumber" : 684,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 684,
        "startColumnNumber" : 12,
        "endLineNumber" : 684,
        "endColumnNumber" : 67
      },
      "nodeContext" : "is=new BufferedInputStream(new FileInputStream(file))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 684,
        "startColumnNumber" : 12,
        "endLineNumber" : 684,
        "endColumnNumber" : 68
      },
      "nodeContext" : "is=new BufferedInputStream(new FileInputStream(file));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 683,
        "startColumnNumber" : 12,
        "endLineNumber" : 686,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  is=new BufferedInputStream(new FileInputStream(file));\n  p=(is.read() << 8) + is.read();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 683,
        "startColumnNumber" : 8,
        "endLineNumber" : 690,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  is=new BufferedInputStream(new FileInputStream(file));\n  p=(is.read() << 8) + is.read();\n}\n catch (IOException e) {\n  e.printStackTrace();\n}\n finally {\n  CloseUtils.closeIO(is);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 577,
        "startLineNumber" : 680,
        "startColumnNumber" : 63,
        "endLineNumber" : 701,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int p=0;\n  InputStream is=null;\n  try {\n    is=new BufferedInputStream(new FileInputStream(file));\n    p=(is.read() << 8) + is.read();\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n  }\n finally {\n    CloseUtils.closeIO(is);\n  }\nswitch (p) {\ncase 0xefbb:    return \"UTF-8\";\ncase 0xfffe:  return \"Unicode\";\ncase 0xfeff:return \"UTF-16BE\";\ndefault:return \"GBK\";\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 719,
        "startLineNumber" : 674,
        "startColumnNumber" : 4,
        "endLineNumber" : 701,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 简单获取文件编码格式\n * @param file 文件\n * @return 文件编码\n */\npublic static String getFileCharsetSimple(final File file){\n  int p=0;\n  InputStream is=null;\n  try {\n    is=new BufferedInputStream(new FileInputStream(file));\n    p=(is.read() << 8) + is.read();\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n  }\n finally {\n    CloseUtils.closeIO(is);\n  }\nswitch (p) {\ncase 0xefbb:    return \"UTF-8\";\ncase 0xfffe:  return \"Unicode\";\ncase 0xfeff:return \"UTF-16BE\";\ndefault:return \"GBK\";\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 684,
        "startColumnNumber" : 12,
        "endLineNumber" : 684,
        "endColumnNumber" : 68
      },
      "nodeContext" : "is=new BufferedInputStream(new FileInputStream(file));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.io.BufferedInputStream"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 684,
    "startColumnNumber" : 17,
    "endLineNumber" : 684,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}