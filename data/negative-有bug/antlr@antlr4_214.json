{
  "id" : 214,
  "expression" : "g.rules",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/analysis/AnalysisPipeline.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "g.rules",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 46,
      "startColumnNumber" : 19,
      "endLineNumber" : 46,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 46,
        "startColumnNumber" : 19,
        "endLineNumber" : 46,
        "endColumnNumber" : 35
      },
      "nodeContext" : "g.rules.values()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Rule rule : g.rules.values()) {\n  if (rule.isFragment()) {\n    continue;\n  }\n  LL1Analyzer analyzer=new LL1Analyzer(g.atn);\n  IntervalSet look=analyzer.LOOK(g.atn.ruleToStartState[rule.index],null);\n  if (look.contains(Token.EPSILON)) {\n    g.tool.errMgr.grammarError(ErrorType.EPSILON_TOKEN,g.fileName,((GrammarAST)rule.ast.getChild(0)).getToken(),rule.name);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 83,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 44,
        "startColumnNumber" : 31,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  for (  Rule rule : g.rules.values()) {\n    if (rule.isFragment()) {\n      continue;\n    }\n    LL1Analyzer analyzer=new LL1Analyzer(g.atn);\n    IntervalSet look=analyzer.LOOK(g.atn.ruleToStartState[rule.index],null);\n    if (look.contains(Token.EPSILON)) {\n      g.tool.errMgr.grammarError(ErrorType.EPSILON_TOKEN,g.fileName,((GrammarAST)rule.ast.getChild(0)).getToken(),rule.name);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 44,
        "startColumnNumber" : 1,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected void processLexer(){\n  for (  Rule rule : g.rules.values()) {\n    if (rule.isFragment()) {\n      continue;\n    }\n    LL1Analyzer analyzer=new LL1Analyzer(g.atn);\n    IntervalSet look=analyzer.LOOK(g.atn.ruleToStartState[rule.index],null);\n    if (look.contains(Token.EPSILON)) {\n      g.tool.errMgr.grammarError(ErrorType.EPSILON_TOKEN,g.fileName,((GrammarAST)rule.ast.getChild(0)).getToken(),rule.name);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 46,
        "startColumnNumber" : 19,
        "endLineNumber" : 46,
        "endColumnNumber" : 35
      },
      "nodeContext" : "g.rules.values()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "org.antlr.v4.misc.OrderedHashMap<java.lang.String,org.antlr.v4.tool.Rule>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 46,
    "startColumnNumber" : 19,
    "endLineNumber" : 46,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}