{
  "id" : 268,
  "expression" : "arrowBlurRegion",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/production/BurstDrill.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "arrowBlurRegion",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 155,
      "startColumnNumber" : 23,
      "endLineNumber" : 155,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 155,
        "startColumnNumber" : 23,
        "endLineNumber" : 155,
        "endColumnNumber" : 46
      },
      "nodeContext" : "arrowBlurRegion.found()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 155,
        "startColumnNumber" : 20,
        "endLineNumber" : 161,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (arrowBlurRegion.found()) {\n  Draw.z(Layer.blockAdditive);\n  Draw.blend(Blending.additive);\n  Draw.alpha(Mathf.pow(a,10f));\n  Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n  Draw.blend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 143,
        "startColumnNumber" : 47,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  float arrowFract=(arrows - 1 - j);\n  float a=Mathf.clamp(fract * arrows - arrowFract);\n  Tmp.v1.trns(i * 90 + 45,j * arrowSpacing + arrowOffset);\n  Draw.z(Layer.block);\n  Draw.color(baseArrowColor,arrowColor,a);\n  Draw.rect(arrowRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n  Draw.color(arrowColor);\n  if (arrowBlurRegion.found()) {\n    Draw.z(Layer.blockAdditive);\n    Draw.blend(Blending.additive);\n    Draw.alpha(Mathf.pow(a,10f));\n    Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n    Draw.blend();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 948,
        "startLineNumber" : 143,
        "startColumnNumber" : 16,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int j=0; j < arrows; j++) {\n  float arrowFract=(arrows - 1 - j);\n  float a=Mathf.clamp(fract * arrows - arrowFract);\n  Tmp.v1.trns(i * 90 + 45,j * arrowSpacing + arrowOffset);\n  Draw.z(Layer.block);\n  Draw.color(baseArrowColor,arrowColor,a);\n  Draw.rect(arrowRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n  Draw.color(arrowColor);\n  if (arrowBlurRegion.found()) {\n    Draw.z(Layer.blockAdditive);\n    Draw.blend(Blending.additive);\n    Draw.alpha(Mathf.pow(a,10f));\n    Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n    Draw.blend();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 982,
        "startLineNumber" : 142,
        "startColumnNumber" : 38,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (int j=0; j < arrows; j++) {\n    float arrowFract=(arrows - 1 - j);\n    float a=Mathf.clamp(fract * arrows - arrowFract);\n    Tmp.v1.trns(i * 90 + 45,j * arrowSpacing + arrowOffset);\n    Draw.z(Layer.block);\n    Draw.color(baseArrowColor,arrowColor,a);\n    Draw.rect(arrowRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n    Draw.color(arrowColor);\n    if (arrowBlurRegion.found()) {\n      Draw.z(Layer.blockAdditive);\n      Draw.blend(Blending.additive);\n      Draw.alpha(Mathf.pow(a,10f));\n      Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n      Draw.blend();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1008,
        "startLineNumber" : 142,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < 4; i++) {\n  for (int j=0; j < arrows; j++) {\n    float arrowFract=(arrows - 1 - j);\n    float a=Mathf.clamp(fract * arrows - arrowFract);\n    Tmp.v1.trns(i * 90 + 45,j * arrowSpacing + arrowOffset);\n    Draw.z(Layer.block);\n    Draw.color(baseArrowColor,arrowColor,a);\n    Draw.rect(arrowRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n    Draw.color(arrowColor);\n    if (arrowBlurRegion.found()) {\n      Draw.z(Layer.blockAdditive);\n      Draw.blend(Blending.additive);\n      Draw.alpha(Mathf.pow(a,10f));\n      Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n      Draw.blend();\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 156,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1842,
        "startLineNumber" : 123,
        "startColumnNumber" : 26,
        "endLineNumber" : 169,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Draw.rect(region,x,y);\n  drawDefaultCracks();\n  Draw.rect(topRegion,x,y);\n  if (invertTime > 0 && topInvertRegion.found()) {\n    Draw.alpha(Interp.pow3Out.apply(invertTime));\n    Draw.rect(topInvertRegion,x,y);\n    Draw.color();\n  }\n  if (dominantItem != null && drawMineItem) {\n    Draw.color(dominantItem.color);\n    Draw.rect(itemRegion,x,y);\n    Draw.color();\n  }\n  float fract=smoothProgress;\n  Draw.color(arrowColor);\n  for (int i=0; i < 4; i++) {\n    for (int j=0; j < arrows; j++) {\n      float arrowFract=(arrows - 1 - j);\n      float a=Mathf.clamp(fract * arrows - arrowFract);\n      Tmp.v1.trns(i * 90 + 45,j * arrowSpacing + arrowOffset);\n      Draw.z(Layer.block);\n      Draw.color(baseArrowColor,arrowColor,a);\n      Draw.rect(arrowRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n      Draw.color(arrowColor);\n      if (arrowBlurRegion.found()) {\n        Draw.z(Layer.blockAdditive);\n        Draw.blend(Blending.additive);\n        Draw.alpha(Mathf.pow(a,10f));\n        Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n        Draw.blend();\n      }\n    }\n  }\n  Draw.color();\n  if (glowRegion.found()) {\n    Drawf.additive(glowRegion,Tmp.c2.set(glowColor).a(Mathf.pow(fract,3f) * glowColor.a),x,y);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 272,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1879,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 169,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void draw(){\n  Draw.rect(region,x,y);\n  drawDefaultCracks();\n  Draw.rect(topRegion,x,y);\n  if (invertTime > 0 && topInvertRegion.found()) {\n    Draw.alpha(Interp.pow3Out.apply(invertTime));\n    Draw.rect(topInvertRegion,x,y);\n    Draw.color();\n  }\n  if (dominantItem != null && drawMineItem) {\n    Draw.color(dominantItem.color);\n    Draw.rect(itemRegion,x,y);\n    Draw.color();\n  }\n  float fract=smoothProgress;\n  Draw.color(arrowColor);\n  for (int i=0; i < 4; i++) {\n    for (int j=0; j < arrows; j++) {\n      float arrowFract=(arrows - 1 - j);\n      float a=Mathf.clamp(fract * arrows - arrowFract);\n      Tmp.v1.trns(i * 90 + 45,j * arrowSpacing + arrowOffset);\n      Draw.z(Layer.block);\n      Draw.color(baseArrowColor,arrowColor,a);\n      Draw.rect(arrowRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n      Draw.color(arrowColor);\n      if (arrowBlurRegion.found()) {\n        Draw.z(Layer.blockAdditive);\n        Draw.blend(Blending.additive);\n        Draw.alpha(Mathf.pow(a,10f));\n        Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n        Draw.blend();\n      }\n    }\n  }\n  Draw.color();\n  if (glowRegion.found()) {\n    Drawf.additive(glowRegion,Tmp.c2.set(glowColor).a(Mathf.pow(fract,3f) * glowColor.a),x,y);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 278,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 155,
        "startColumnNumber" : 23,
        "endLineNumber" : 155,
        "endColumnNumber" : 46
      },
      "nodeContext" : "arrowBlurRegion.found()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.blocks.production.TextureRegion"
  }, {
    "nodeContext" : "arrowBlurRegion",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 159,
      "startColumnNumber" : 34,
      "endLineNumber" : 159,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 159,
        "startColumnNumber" : 24,
        "endLineNumber" : 159,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 159,
        "startColumnNumber" : 24,
        "endLineNumber" : 159,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 155,
        "startColumnNumber" : 47,
        "endLineNumber" : 161,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Draw.z(Layer.blockAdditive);\n  Draw.blend(Blending.additive);\n  Draw.alpha(Mathf.pow(a,10f));\n  Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n  Draw.blend();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 155,
        "startColumnNumber" : 20,
        "endLineNumber" : 161,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (arrowBlurRegion.found()) {\n  Draw.z(Layer.blockAdditive);\n  Draw.blend(Blending.additive);\n  Draw.alpha(Mathf.pow(a,10f));\n  Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n  Draw.blend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 143,
        "startColumnNumber" : 47,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  float arrowFract=(arrows - 1 - j);\n  float a=Mathf.clamp(fract * arrows - arrowFract);\n  Tmp.v1.trns(i * 90 + 45,j * arrowSpacing + arrowOffset);\n  Draw.z(Layer.block);\n  Draw.color(baseArrowColor,arrowColor,a);\n  Draw.rect(arrowRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n  Draw.color(arrowColor);\n  if (arrowBlurRegion.found()) {\n    Draw.z(Layer.blockAdditive);\n    Draw.blend(Blending.additive);\n    Draw.alpha(Mathf.pow(a,10f));\n    Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n    Draw.blend();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 948,
        "startLineNumber" : 143,
        "startColumnNumber" : 16,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int j=0; j < arrows; j++) {\n  float arrowFract=(arrows - 1 - j);\n  float a=Mathf.clamp(fract * arrows - arrowFract);\n  Tmp.v1.trns(i * 90 + 45,j * arrowSpacing + arrowOffset);\n  Draw.z(Layer.block);\n  Draw.color(baseArrowColor,arrowColor,a);\n  Draw.rect(arrowRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n  Draw.color(arrowColor);\n  if (arrowBlurRegion.found()) {\n    Draw.z(Layer.blockAdditive);\n    Draw.blend(Blending.additive);\n    Draw.alpha(Mathf.pow(a,10f));\n    Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n    Draw.blend();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 982,
        "startLineNumber" : 142,
        "startColumnNumber" : 38,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (int j=0; j < arrows; j++) {\n    float arrowFract=(arrows - 1 - j);\n    float a=Mathf.clamp(fract * arrows - arrowFract);\n    Tmp.v1.trns(i * 90 + 45,j * arrowSpacing + arrowOffset);\n    Draw.z(Layer.block);\n    Draw.color(baseArrowColor,arrowColor,a);\n    Draw.rect(arrowRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n    Draw.color(arrowColor);\n    if (arrowBlurRegion.found()) {\n      Draw.z(Layer.blockAdditive);\n      Draw.blend(Blending.additive);\n      Draw.alpha(Mathf.pow(a,10f));\n      Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n      Draw.blend();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1008,
        "startLineNumber" : 142,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < 4; i++) {\n  for (int j=0; j < arrows; j++) {\n    float arrowFract=(arrows - 1 - j);\n    float a=Mathf.clamp(fract * arrows - arrowFract);\n    Tmp.v1.trns(i * 90 + 45,j * arrowSpacing + arrowOffset);\n    Draw.z(Layer.block);\n    Draw.color(baseArrowColor,arrowColor,a);\n    Draw.rect(arrowRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n    Draw.color(arrowColor);\n    if (arrowBlurRegion.found()) {\n      Draw.z(Layer.blockAdditive);\n      Draw.blend(Blending.additive);\n      Draw.alpha(Mathf.pow(a,10f));\n      Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n      Draw.blend();\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 156,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1842,
        "startLineNumber" : 123,
        "startColumnNumber" : 26,
        "endLineNumber" : 169,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Draw.rect(region,x,y);\n  drawDefaultCracks();\n  Draw.rect(topRegion,x,y);\n  if (invertTime > 0 && topInvertRegion.found()) {\n    Draw.alpha(Interp.pow3Out.apply(invertTime));\n    Draw.rect(topInvertRegion,x,y);\n    Draw.color();\n  }\n  if (dominantItem != null && drawMineItem) {\n    Draw.color(dominantItem.color);\n    Draw.rect(itemRegion,x,y);\n    Draw.color();\n  }\n  float fract=smoothProgress;\n  Draw.color(arrowColor);\n  for (int i=0; i < 4; i++) {\n    for (int j=0; j < arrows; j++) {\n      float arrowFract=(arrows - 1 - j);\n      float a=Mathf.clamp(fract * arrows - arrowFract);\n      Tmp.v1.trns(i * 90 + 45,j * arrowSpacing + arrowOffset);\n      Draw.z(Layer.block);\n      Draw.color(baseArrowColor,arrowColor,a);\n      Draw.rect(arrowRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n      Draw.color(arrowColor);\n      if (arrowBlurRegion.found()) {\n        Draw.z(Layer.blockAdditive);\n        Draw.blend(Blending.additive);\n        Draw.alpha(Mathf.pow(a,10f));\n        Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n        Draw.blend();\n      }\n    }\n  }\n  Draw.color();\n  if (glowRegion.found()) {\n    Drawf.additive(glowRegion,Tmp.c2.set(glowColor).a(Mathf.pow(fract,3f) * glowColor.a),x,y);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 272,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1879,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 169,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void draw(){\n  Draw.rect(region,x,y);\n  drawDefaultCracks();\n  Draw.rect(topRegion,x,y);\n  if (invertTime > 0 && topInvertRegion.found()) {\n    Draw.alpha(Interp.pow3Out.apply(invertTime));\n    Draw.rect(topInvertRegion,x,y);\n    Draw.color();\n  }\n  if (dominantItem != null && drawMineItem) {\n    Draw.color(dominantItem.color);\n    Draw.rect(itemRegion,x,y);\n    Draw.color();\n  }\n  float fract=smoothProgress;\n  Draw.color(arrowColor);\n  for (int i=0; i < 4; i++) {\n    for (int j=0; j < arrows; j++) {\n      float arrowFract=(arrows - 1 - j);\n      float a=Mathf.clamp(fract * arrows - arrowFract);\n      Tmp.v1.trns(i * 90 + 45,j * arrowSpacing + arrowOffset);\n      Draw.z(Layer.block);\n      Draw.color(baseArrowColor,arrowColor,a);\n      Draw.rect(arrowRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n      Draw.color(arrowColor);\n      if (arrowBlurRegion.found()) {\n        Draw.z(Layer.blockAdditive);\n        Draw.blend(Blending.additive);\n        Draw.alpha(Mathf.pow(a,10f));\n        Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n        Draw.blend();\n      }\n    }\n  }\n  Draw.color();\n  if (glowRegion.found()) {\n    Drawf.additive(glowRegion,Tmp.c2.set(glowColor).a(Mathf.pow(fract,3f) * glowColor.a),x,y);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 278,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 159,
        "startColumnNumber" : 24,
        "endLineNumber" : 159,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Draw.rect(arrowBlurRegion,x + Tmp.v1.x,y + Tmp.v1.y,i * 90);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.blocks.production.TextureRegion"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 155,
    "startColumnNumber" : 23,
    "endLineNumber" : 155,
    "endColumnNumber" : 38
  }, {
    "charLength" : 15,
    "startLineNumber" : 159,
    "startColumnNumber" : 34,
    "endLineNumber" : 159,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}