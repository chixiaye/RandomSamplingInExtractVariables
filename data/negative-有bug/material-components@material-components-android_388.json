{
  "id" : 388,
  "expression" : "minuteTextInput.getTextInput().getEditText()",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/timepicker/TimePickerTextInputPresenter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "minuteTextInput.getTextInput().getEditText()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 129,
      "startColumnNumber" : 21,
      "endLineNumber" : 129,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 65
      },
      "nodeContext" : "minuteEditText=minuteTextInput.getTextInput().getEditText()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 66
      },
      "nodeContext" : "minuteEditText=minuteTextInput.getTextInput().getEditText();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3028,
        "startLineNumber" : 97,
        "startColumnNumber" : 95,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.timePickerView=timePickerView;\n  this.time=time;\n  Resources res=timePickerView.getResources();\n  minuteTextInput=timePickerView.findViewById(R.id.material_minute_text_input);\n  hourTextInput=timePickerView.findViewById(R.id.material_hour_text_input);\n  TextView minuteLabel=minuteTextInput.findViewById(R.id.material_label);\n  TextView hourLabel=hourTextInput.findViewById(R.id.material_label);\n  minuteLabel.setText(res.getString(R.string.material_timepicker_minute));\n  hourLabel.setText(res.getString(R.string.material_timepicker_hour));\n  minuteTextInput.setTag(R.id.selection_type,MINUTE);\n  hourTextInput.setTag(R.id.selection_type,HOUR);\n  if (time.format == CLOCK_12H) {\n    setupPeriodToggle();\n  }\n  OnClickListener onClickListener=new OnClickListener(){\n    @Override public void onClick(    View v){\n      onSelectionChanged((int)v.getTag(R.id.selection_type));\n    }\n  }\n;\n  hourTextInput.setOnClickListener(onClickListener);\n  minuteTextInput.setOnClickListener(onClickListener);\n  hourTextInput.addInputFilter(time.getHourInputValidator());\n  minuteTextInput.addInputFilter(time.getMinuteInputValidator());\n  hourEditText=hourTextInput.getTextInput().getEditText();\n  minuteEditText=minuteTextInput.getTextInput().getEditText();\n  if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP) {\n    int primaryColor=MaterialColors.getColor(timePickerView,R.attr.colorPrimary);\n    setCursorDrawableColor(hourEditText,primaryColor);\n    setCursorDrawableColor(minuteEditText,primaryColor);\n  }\n  controller=new TimePickerTextInputKeyController(hourTextInput,minuteTextInput,time);\n  hourTextInput.setChipDelegate(new ClickActionDelegate(timePickerView.getContext(),R.string.material_hour_selection){\n    @Override public void onInitializeAccessibilityNodeInfo(    View host,    AccessibilityNodeInfoCompat info){\n      super.onInitializeAccessibilityNodeInfo(host,info);\n      info.setContentDescription(host.getResources().getString(time.getHourContentDescriptionResId(),String.valueOf(time.getHourForDisplay())));\n    }\n  }\n);\n  minuteTextInput.setChipDelegate(new ClickActionDelegate(timePickerView.getContext(),R.string.material_minute_selection){\n    @Override public void onInitializeAccessibilityNodeInfo(    View host,    AccessibilityNodeInfoCompat info){\n      super.onInitializeAccessibilityNodeInfo(host,info);\n      info.setContentDescription(host.getResources().getString(R.string.material_minute_suffix,String.valueOf(time.minute)));\n    }\n  }\n);\n  initialize();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3121,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public TimePickerTextInputPresenter(final LinearLayout timePickerView,final TimeModel time){\n  this.timePickerView=timePickerView;\n  this.time=time;\n  Resources res=timePickerView.getResources();\n  minuteTextInput=timePickerView.findViewById(R.id.material_minute_text_input);\n  hourTextInput=timePickerView.findViewById(R.id.material_hour_text_input);\n  TextView minuteLabel=minuteTextInput.findViewById(R.id.material_label);\n  TextView hourLabel=hourTextInput.findViewById(R.id.material_label);\n  minuteLabel.setText(res.getString(R.string.material_timepicker_minute));\n  hourLabel.setText(res.getString(R.string.material_timepicker_hour));\n  minuteTextInput.setTag(R.id.selection_type,MINUTE);\n  hourTextInput.setTag(R.id.selection_type,HOUR);\n  if (time.format == CLOCK_12H) {\n    setupPeriodToggle();\n  }\n  OnClickListener onClickListener=new OnClickListener(){\n    @Override public void onClick(    View v){\n      onSelectionChanged((int)v.getTag(R.id.selection_type));\n    }\n  }\n;\n  hourTextInput.setOnClickListener(onClickListener);\n  minuteTextInput.setOnClickListener(onClickListener);\n  hourTextInput.addInputFilter(time.getHourInputValidator());\n  minuteTextInput.addInputFilter(time.getMinuteInputValidator());\n  hourEditText=hourTextInput.getTextInput().getEditText();\n  minuteEditText=minuteTextInput.getTextInput().getEditText();\n  if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP) {\n    int primaryColor=MaterialColors.getColor(timePickerView,R.attr.colorPrimary);\n    setCursorDrawableColor(hourEditText,primaryColor);\n    setCursorDrawableColor(minuteEditText,primaryColor);\n  }\n  controller=new TimePickerTextInputKeyController(hourTextInput,minuteTextInput,time);\n  hourTextInput.setChipDelegate(new ClickActionDelegate(timePickerView.getContext(),R.string.material_hour_selection){\n    @Override public void onInitializeAccessibilityNodeInfo(    View host,    AccessibilityNodeInfoCompat info){\n      super.onInitializeAccessibilityNodeInfo(host,info);\n      info.setContentDescription(host.getResources().getString(time.getHourContentDescriptionResId(),String.valueOf(time.getHourForDisplay())));\n    }\n  }\n);\n  minuteTextInput.setChipDelegate(new ClickActionDelegate(timePickerView.getContext(),R.string.material_minute_selection){\n    @Override public void onInitializeAccessibilityNodeInfo(    View host,    AccessibilityNodeInfoCompat info){\n      super.onInitializeAccessibilityNodeInfo(host,info);\n      info.setContentDescription(host.getResources().getString(R.string.material_minute_suffix,String.valueOf(time.minute)));\n    }\n  }\n);\n  initialize();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 363,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 66
      },
      "nodeContext" : "minuteEditText=minuteTextInput.getTextInput().getEditText();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "com.google.android.material.textfield.EditText"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 129,
    "startColumnNumber" : 21,
    "endLineNumber" : 129,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}