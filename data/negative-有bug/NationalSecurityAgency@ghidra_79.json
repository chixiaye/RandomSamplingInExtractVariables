{
  "id" : 79,
  "expression" : "dtmService",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/stackeditor/StackEditorDnDTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dtmService",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 62,
      "startColumnNumber" : 24,
      "endLineNumber" : 62,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 62,
        "startColumnNumber" : 24,
        "endLineNumber" : 62,
        "endColumnNumber" : 63
      },
      "nodeContext" : "dtmService.getBuiltInDataTypesManager()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 62,
        "startColumnNumber" : 24,
        "endLineNumber" : 62,
        "endColumnNumber" : 87
      },
      "nodeContext" : "dtmService.getBuiltInDataTypesManager().getDataType(\"/pointer\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 62,
        "startColumnNumber" : 18,
        "endLineNumber" : 62,
        "endColumnNumber" : 87
      },
      "nodeContext" : "dt3=dtmService.getBuiltInDataTypesManager().getDataType(\"/pointer\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 62,
        "startColumnNumber" : 3,
        "endLineNumber" : 62,
        "endColumnNumber" : 88
      },
      "nodeContext" : "final DataType dt3=dtmService.getBuiltInDataTypesManager().getDataType(\"/pointer\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1816,
        "startLineNumber" : 41,
        "startColumnNumber" : 6,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int dtCol=model.getDataTypeColumn();\n  DataType dt;\n  assertEquals(20,model.getNumComponents());\n  dt=stackModel.getOriginalDataTypeManager().getDataType(\"/byte\");\n  assertNotNull(dt);\n  addAtPoint(dt,0,0);\n  assertEquals(23,model.getNumComponents());\n  assertCellString(\"byte\",0,dtCol);\n  assertTrue(getDataType(0).isEquivalent(dt));\n  assertEquals(dt.getLength(),model.getComponent(0).getLength());\n  dt=stackModel.getOriginalDataTypeManager().getDataType(\"/dword\");\n  assertNotNull(dt);\n  addAtPoint(dt,4,0);\n  assertEquals(20,model.getNumComponents());\n  assertCellString(\"dword\",4,dtCol);\n  assertTrue(getDataType(4).isEquivalent(dt));\n  assertEquals(dt.getLength(),model.getComponent(4).getLength());\n  final DataType dt3=dtmService.getBuiltInDataTypesManager().getDataType(\"/pointer\");\n  assertNotNull(dt3);\n  addAtPoint(dt3,6,0);\n  assertEquals(17,model.getNumComponents());\n  assertCellString(\"pointer\",6,dtCol);\n  assertTrue(getDataType(6) instanceof Pointer);\n  assertNull(((Pointer)getDataType(6)).getDataType());\n  assertEquals(dt.getLength(),model.getComponent(6).getLength());\n  addAtPoint(dt,6,0);\n  assertEquals(17,model.getNumComponents());\n  assertTrue(getDataType(6) instanceof Pointer);\n  assertCellString(\"dword *\",6,dtCol);\n  assertTrue(((Pointer)getDataType(6)).getDataType().isEquivalent(dt));\n  assertEquals(4,model.getComponent(6).getLength());\n  addAtPoint(dt3,6,0);\n  assertEquals(17,model.getNumComponents());\n  assertTrue(getDataType(6) instanceof Pointer);\n  assertCellString(\"dword * *\",6,dtCol);\n  assertTrue(((Pointer)getDataType(6)).getDataType().isEquivalent(new PointerDataType(dt)));\n  assertEquals(4,model.getComponent(6).getLength());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 303,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  int dtCol=model.getDataTypeColumn();\n  DataType dt;\n  assertEquals(20,model.getNumComponents());\n  dt=stackModel.getOriginalDataTypeManager().getDataType(\"/byte\");\n  assertNotNull(dt);\n  addAtPoint(dt,0,0);\n  assertEquals(23,model.getNumComponents());\n  assertCellString(\"byte\",0,dtCol);\n  assertTrue(getDataType(0).isEquivalent(dt));\n  assertEquals(dt.getLength(),model.getComponent(0).getLength());\n  dt=stackModel.getOriginalDataTypeManager().getDataType(\"/dword\");\n  assertNotNull(dt);\n  addAtPoint(dt,4,0);\n  assertEquals(20,model.getNumComponents());\n  assertCellString(\"dword\",4,dtCol);\n  assertTrue(getDataType(4).isEquivalent(dt));\n  assertEquals(dt.getLength(),model.getComponent(4).getLength());\n  final DataType dt3=dtmService.getBuiltInDataTypesManager().getDataType(\"/pointer\");\n  assertNotNull(dt3);\n  addAtPoint(dt3,6,0);\n  assertEquals(17,model.getNumComponents());\n  assertCellString(\"pointer\",6,dtCol);\n  assertTrue(getDataType(6) instanceof Pointer);\n  assertNull(((Pointer)getDataType(6)).getDataType());\n  assertEquals(dt.getLength(),model.getComponent(6).getLength());\n  addAtPoint(dt,6,0);\n  assertEquals(17,model.getNumComponents());\n  assertTrue(getDataType(6) instanceof Pointer);\n  assertCellString(\"dword *\",6,dtCol);\n  assertTrue(((Pointer)getDataType(6)).getDataType().isEquivalent(dt));\n  assertEquals(4,model.getComponent(6).getLength());\n  addAtPoint(dt3,6,0);\n  assertEquals(17,model.getNumComponents());\n  assertTrue(getDataType(6) instanceof Pointer);\n  assertCellString(\"dword * *\",6,dtCol);\n  assertTrue(((Pointer)getDataType(6)).getDataType().isEquivalent(new PointerDataType(dt)));\n  assertEquals(4,model.getComponent(6).getLength());\n}\n  finally {\n  cleanup();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 308,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1881,
        "startLineNumber" : 39,
        "startColumnNumber" : 63,
        "endLineNumber" : 89,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  env.showTool();\n  try {\n    int dtCol=model.getDataTypeColumn();\n    DataType dt;\n    assertEquals(20,model.getNumComponents());\n    dt=stackModel.getOriginalDataTypeManager().getDataType(\"/byte\");\n    assertNotNull(dt);\n    addAtPoint(dt,0,0);\n    assertEquals(23,model.getNumComponents());\n    assertCellString(\"byte\",0,dtCol);\n    assertTrue(getDataType(0).isEquivalent(dt));\n    assertEquals(dt.getLength(),model.getComponent(0).getLength());\n    dt=stackModel.getOriginalDataTypeManager().getDataType(\"/dword\");\n    assertNotNull(dt);\n    addAtPoint(dt,4,0);\n    assertEquals(20,model.getNumComponents());\n    assertCellString(\"dword\",4,dtCol);\n    assertTrue(getDataType(4).isEquivalent(dt));\n    assertEquals(dt.getLength(),model.getComponent(4).getLength());\n    final DataType dt3=dtmService.getBuiltInDataTypesManager().getDataType(\"/pointer\");\n    assertNotNull(dt3);\n    addAtPoint(dt3,6,0);\n    assertEquals(17,model.getNumComponents());\n    assertCellString(\"pointer\",6,dtCol);\n    assertTrue(getDataType(6) instanceof Pointer);\n    assertNull(((Pointer)getDataType(6)).getDataType());\n    assertEquals(dt.getLength(),model.getComponent(6).getLength());\n    addAtPoint(dt,6,0);\n    assertEquals(17,model.getNumComponents());\n    assertTrue(getDataType(6) instanceof Pointer);\n    assertCellString(\"dword *\",6,dtCol);\n    assertTrue(((Pointer)getDataType(6)).getDataType().isEquivalent(dt));\n    assertEquals(4,model.getComponent(6).getLength());\n    addAtPoint(dt3,6,0);\n    assertEquals(17,model.getNumComponents());\n    assertTrue(getDataType(6) instanceof Pointer);\n    assertCellString(\"dword * *\",6,dtCol);\n    assertTrue(((Pointer)getDataType(6)).getDataType().isEquivalent(new PointerDataType(dt)));\n    assertEquals(4,model.getComponent(6).getLength());\n  }\n  finally {\n    cleanup();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 313,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1951,
        "startLineNumber" : 38,
        "startColumnNumber" : 1,
        "endLineNumber" : 89,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testDragNDropAddDifferentTypes() throws Exception {\n  env.showTool();\n  try {\n    int dtCol=model.getDataTypeColumn();\n    DataType dt;\n    assertEquals(20,model.getNumComponents());\n    dt=stackModel.getOriginalDataTypeManager().getDataType(\"/byte\");\n    assertNotNull(dt);\n    addAtPoint(dt,0,0);\n    assertEquals(23,model.getNumComponents());\n    assertCellString(\"byte\",0,dtCol);\n    assertTrue(getDataType(0).isEquivalent(dt));\n    assertEquals(dt.getLength(),model.getComponent(0).getLength());\n    dt=stackModel.getOriginalDataTypeManager().getDataType(\"/dword\");\n    assertNotNull(dt);\n    addAtPoint(dt,4,0);\n    assertEquals(20,model.getNumComponents());\n    assertCellString(\"dword\",4,dtCol);\n    assertTrue(getDataType(4).isEquivalent(dt));\n    assertEquals(dt.getLength(),model.getComponent(4).getLength());\n    final DataType dt3=dtmService.getBuiltInDataTypesManager().getDataType(\"/pointer\");\n    assertNotNull(dt3);\n    addAtPoint(dt3,6,0);\n    assertEquals(17,model.getNumComponents());\n    assertCellString(\"pointer\",6,dtCol);\n    assertTrue(getDataType(6) instanceof Pointer);\n    assertNull(((Pointer)getDataType(6)).getDataType());\n    assertEquals(dt.getLength(),model.getComponent(6).getLength());\n    addAtPoint(dt,6,0);\n    assertEquals(17,model.getNumComponents());\n    assertTrue(getDataType(6) instanceof Pointer);\n    assertCellString(\"dword *\",6,dtCol);\n    assertTrue(((Pointer)getDataType(6)).getDataType().isEquivalent(dt));\n    assertEquals(4,model.getComponent(6).getLength());\n    addAtPoint(dt3,6,0);\n    assertEquals(17,model.getNumComponents());\n    assertTrue(getDataType(6) instanceof Pointer);\n    assertCellString(\"dword * *\",6,dtCol);\n    assertTrue(((Pointer)getDataType(6)).getDataType().isEquivalent(new PointerDataType(dt)));\n    assertEquals(4,model.getComponent(6).getLength());\n  }\n  finally {\n    cleanup();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 321,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 62,
        "startColumnNumber" : 3,
        "endLineNumber" : 62,
        "endColumnNumber" : 88
      },
      "nodeContext" : "final DataType dt3=dtmService.getBuiltInDataTypesManager().getDataType(\"/pointer\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "ghidra.app.services.DataTypeManagerService"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 62,
    "startColumnNumber" : 24,
    "endLineNumber" : 62,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}