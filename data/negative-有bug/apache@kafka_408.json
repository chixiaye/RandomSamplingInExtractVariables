{
  "id" : 408,
  "expression" : "this.valueDeserializer.deserialize(partition.topic(),headers,valueByteArray)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.valueDeserializer.deserialize(partition.topic(),headers,valueByteArray)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 78,
      "startLineNumber" : 1426,
      "startColumnNumber" : 50,
      "endLineNumber" : 1426,
      "endColumnNumber" : 128
    },
    "astNodeNumber" : 10,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 1426,
        "startColumnNumber" : 22,
        "endLineNumber" : 1426,
        "endColumnNumber" : 128
      },
      "nodeContext" : "valueBytes == null ? null : this.valueDeserializer.deserialize(partition.topic(),headers,valueByteArray)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 1426,
        "startColumnNumber" : 14,
        "endLineNumber" : 1426,
        "endColumnNumber" : 128
      },
      "nodeContext" : "value=valueBytes == null ? null : this.valueDeserializer.deserialize(partition.topic(),headers,valueByteArray)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 1426,
        "startColumnNumber" : 12,
        "endLineNumber" : 1426,
        "endColumnNumber" : 129
      },
      "nodeContext" : "V value=valueBytes == null ? null : this.valueDeserializer.deserialize(partition.topic(),headers,valueByteArray);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 1415,
        "startColumnNumber" : 12,
        "endLineNumber" : 1432,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  long offset=record.offset();\n  long timestamp=record.timestamp();\n  Optional<Integer> leaderEpoch=maybeLeaderEpoch(batch.partitionLeaderEpoch());\n  TimestampType timestampType=batch.timestampType();\n  Headers headers=new RecordHeaders(record.headers());\n  ByteBuffer keyBytes=record.key();\n  byte[] keyByteArray=keyBytes == null ? null : Utils.toArray(keyBytes);\n  K key=keyBytes == null ? null : this.keyDeserializer.deserialize(partition.topic(),headers,keyByteArray);\n  ByteBuffer valueBytes=record.value();\n  byte[] valueByteArray=valueBytes == null ? null : Utils.toArray(valueBytes);\n  V value=valueBytes == null ? null : this.valueDeserializer.deserialize(partition.topic(),headers,valueByteArray);\n  return new ConsumerRecord<>(partition.topic(),partition.partition(),offset,timestamp,timestampType,keyByteArray == null ? ConsumerRecord.NULL_SIZE : keyByteArray.length,valueByteArray == null ? ConsumerRecord.NULL_SIZE : valueByteArray.length,key,value,headers,leaderEpoch);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1640,
        "startLineNumber" : 1415,
        "startColumnNumber" : 8,
        "endLineNumber" : 1436,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  long offset=record.offset();\n  long timestamp=record.timestamp();\n  Optional<Integer> leaderEpoch=maybeLeaderEpoch(batch.partitionLeaderEpoch());\n  TimestampType timestampType=batch.timestampType();\n  Headers headers=new RecordHeaders(record.headers());\n  ByteBuffer keyBytes=record.key();\n  byte[] keyByteArray=keyBytes == null ? null : Utils.toArray(keyBytes);\n  K key=keyBytes == null ? null : this.keyDeserializer.deserialize(partition.topic(),headers,keyByteArray);\n  ByteBuffer valueBytes=record.value();\n  byte[] valueByteArray=valueBytes == null ? null : Utils.toArray(valueBytes);\n  V value=valueBytes == null ? null : this.valueDeserializer.deserialize(partition.topic(),headers,valueByteArray);\n  return new ConsumerRecord<>(partition.topic(),partition.partition(),offset,timestamp,timestampType,keyByteArray == null ? ConsumerRecord.NULL_SIZE : keyByteArray.length,valueByteArray == null ? ConsumerRecord.NULL_SIZE : valueByteArray.length,key,value,headers,leaderEpoch);\n}\n catch (RuntimeException e) {\n  throw new RecordDeserializationException(partition,record.offset(),\"Error deserializing key/value for partition \" + partition + \" at offset \"+ record.offset()+ \". If needed, please seek past the record to continue consumption.\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 195,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1656,
        "startLineNumber" : 1414,
        "startColumnNumber" : 60,
        "endLineNumber" : 1437,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    long offset=record.offset();\n    long timestamp=record.timestamp();\n    Optional<Integer> leaderEpoch=maybeLeaderEpoch(batch.partitionLeaderEpoch());\n    TimestampType timestampType=batch.timestampType();\n    Headers headers=new RecordHeaders(record.headers());\n    ByteBuffer keyBytes=record.key();\n    byte[] keyByteArray=keyBytes == null ? null : Utils.toArray(keyBytes);\n    K key=keyBytes == null ? null : this.keyDeserializer.deserialize(partition.topic(),headers,keyByteArray);\n    ByteBuffer valueBytes=record.value();\n    byte[] valueByteArray=valueBytes == null ? null : Utils.toArray(valueBytes);\n    V value=valueBytes == null ? null : this.valueDeserializer.deserialize(partition.topic(),headers,valueByteArray);\n    return new ConsumerRecord<>(partition.topic(),partition.partition(),offset,timestamp,timestampType,keyByteArray == null ? ConsumerRecord.NULL_SIZE : keyByteArray.length,valueByteArray == null ? ConsumerRecord.NULL_SIZE : valueByteArray.length,key,value,headers,leaderEpoch);\n  }\n catch (  RuntimeException e) {\n    throw new RecordDeserializationException(partition,record.offset(),\"Error deserializing key/value for partition \" + partition + \" at offset \"+ record.offset()+ \". If needed, please seek past the record to continue consumption.\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1944,
        "startLineNumber" : 1409,
        "startColumnNumber" : 4,
        "endLineNumber" : 1437,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Parse the record entry, deserializing the key / value fields if necessary\n */\nprivate ConsumerRecord<K,V> parseRecord(TopicPartition partition,RecordBatch batch,Record record){\n  try {\n    long offset=record.offset();\n    long timestamp=record.timestamp();\n    Optional<Integer> leaderEpoch=maybeLeaderEpoch(batch.partitionLeaderEpoch());\n    TimestampType timestampType=batch.timestampType();\n    Headers headers=new RecordHeaders(record.headers());\n    ByteBuffer keyBytes=record.key();\n    byte[] keyByteArray=keyBytes == null ? null : Utils.toArray(keyBytes);\n    K key=keyBytes == null ? null : this.keyDeserializer.deserialize(partition.topic(),headers,keyByteArray);\n    ByteBuffer valueBytes=record.value();\n    byte[] valueByteArray=valueBytes == null ? null : Utils.toArray(valueBytes);\n    V value=valueBytes == null ? null : this.valueDeserializer.deserialize(partition.topic(),headers,valueByteArray);\n    return new ConsumerRecord<>(partition.topic(),partition.partition(),offset,timestamp,timestampType,keyByteArray == null ? ConsumerRecord.NULL_SIZE : keyByteArray.length,valueByteArray == null ? ConsumerRecord.NULL_SIZE : valueByteArray.length,key,value,headers,leaderEpoch);\n  }\n catch (  RuntimeException e) {\n    throw new RecordDeserializationException(partition,record.offset(),\"Error deserializing key/value for partition \" + partition + \" at offset \"+ record.offset()+ \". If needed, please seek past the record to continue consumption.\",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 219,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 1426,
        "startColumnNumber" : 12,
        "endLineNumber" : 1426,
        "endColumnNumber" : 129
      },
      "nodeContext" : "V value=valueBytes == null ? null : this.valueDeserializer.deserialize(partition.topic(),headers,valueByteArray);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "V"
  } ],
  "positionList" : [ {
    "charLength" : 78,
    "startLineNumber" : 1426,
    "startColumnNumber" : 50,
    "endLineNumber" : 1426,
    "endColumnNumber" : 128
  } ],
  "layoutRelationDataList" : [ ]
}