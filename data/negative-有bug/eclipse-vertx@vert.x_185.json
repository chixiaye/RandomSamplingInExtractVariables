{
  "id" : 185,
  "expression" : "argument.getArgName() != null ? argument.getArgName() : argument.getIndex()",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/cli/InvalidValueException.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "argument.getArgName() != null ? argument.getArgName() : argument.getIndex()",
    "nodeType" : "ConditionalExpression",
    "nodePosition" : {
      "charLength" : 75,
      "startLineNumber" : 50,
      "startColumnNumber" : 11,
      "endLineNumber" : 50,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 12,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 50,
        "startColumnNumber" : 10,
        "endLineNumber" : 50,
        "endColumnNumber" : 87
      },
      "nodeContext" : "(argument.getArgName() != null ? argument.getArgName() : argument.getIndex())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SuperConstructorInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 49,
        "startColumnNumber" : 10,
        "endLineNumber" : 50,
        "endColumnNumber" : 93
      },
      "nodeContext" : "\"The value '\" + value + \"' is not accepted by the argument '\"+ (argument.getArgName() != null ? argument.getArgName() : argument.getIndex())+ \"'\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 102
      },
      "nodeContext" : "super(\"The value '\" + value + \"' is not accepted by the argument '\"+ (argument.getArgName() != null ? argument.getArgName() : argument.getIndex())+ \"'\",cause);\n",
      "nodeType" : "SuperConstructorInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 48,
        "startColumnNumber" : 81,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(\"The value '\" + value + \"' is not accepted by the argument '\"+ (argument.getArgName() != null ? argument.getArgName() : argument.getIndex())+ \"'\",cause);\n  this.option=null;\n  this.value=value;\n  this.argument=argument;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a new instance of  {@link InvalidValueException} for the given argument and the given value. Thisconstructor is used when the argument receives a value that cannot be \"converted\" to the desired type.\n * @param argument the argument\n * @param value    the value\n * @param cause    the cause\n */\npublic InvalidValueException(Argument argument,String value,Exception cause){\n  super(\"The value '\" + value + \"' is not accepted by the argument '\"+ (argument.getArgName() != null ? argument.getArgName() : argument.getIndex())+ \"'\",cause);\n  this.option=null;\n  this.value=value;\n  this.argument=argument;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 50,
        "startColumnNumber" : 10,
        "endLineNumber" : 50,
        "endColumnNumber" : 87
      },
      "nodeContext" : "(argument.getArgName() != null ? argument.getArgName() : argument.getIndex())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 8,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 75,
    "startLineNumber" : 50,
    "startColumnNumber" : 11,
    "endLineNumber" : 50,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}