{
  "id" : 28,
  "expression" : "ResultCode",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-collector/scribe/src/test/java/zipkin2/collector/scribe/ScribeSpanConsumerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ResultCode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 145,
      "startColumnNumber" : 46,
      "endLineNumber" : 145,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 145,
        "startColumnNumber" : 46,
        "endLineNumber" : 145,
        "endColumnNumber" : 59
      },
      "nodeContext" : "ResultCode.OK",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 145,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertThat(callback.resultCode).isEqualTo(ResultCode.OK)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 145,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertThat(callback.resultCode).isEqualTo(ResultCode.OK);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 141,
        "startColumnNumber" : 89,
        "endLineNumber" : 146,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  CaptureAsyncMethodCallback callback=new CaptureAsyncMethodCallback();\n  scribe.Log(asList(entry),callback);\n  callback.latch.await(10,TimeUnit.SECONDS);\n  assertThat(callback.resultCode).isEqualTo(ResultCode.OK);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 319,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 146,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void expectSuccess(ScribeSpanConsumer scribe,LogEntry entry) throws Exception {\n  CaptureAsyncMethodCallback callback=new CaptureAsyncMethodCallback();\n  scribe.Log(asList(entry),callback);\n  callback.latch.await(10,TimeUnit.SECONDS);\n  assertThat(callback.resultCode).isEqualTo(ResultCode.OK);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 145,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertThat(callback.resultCode).isEqualTo(ResultCode.OK);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "zipkin2.collector.scribe.generated.ResultCode"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 145,
    "startColumnNumber" : 46,
    "endLineNumber" : 145,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}