{
  "id" : 45,
  "expression" : "response",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/filters/common/GZipResponseFilter.java",
  "occurrences" : 9,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 69,
      "startColumnNumber" : 31,
      "endLineNumber" : 69,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 69,
        "endColumnNumber" : 49
      },
      "nodeContext" : "response.hasBody()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 69,
        "startColumnNumber" : 30,
        "endLineNumber" : 69,
        "endColumnNumber" : 49
      },
      "nodeContext" : "!response.hasBody()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 93
      },
      "nodeContext" : "!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 68,
        "startColumnNumber" : 62,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean shouldFilter(HttpResponseMessage response){\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 93
      },
      "nodeContext" : "!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.message.http.HttpResponseMessage"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 69,
      "startColumnNumber" : 53,
      "endLineNumber" : 69,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 69,
        "startColumnNumber" : 53,
        "endLineNumber" : 69,
        "endColumnNumber" : 74
      },
      "nodeContext" : "response.getContext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 69,
        "startColumnNumber" : 53,
        "endLineNumber" : 69,
        "endColumnNumber" : 93
      },
      "nodeContext" : "response.getContext().isInBrownoutMode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 93
      },
      "nodeContext" : "!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 68,
        "startColumnNumber" : 62,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean shouldFilter(HttpResponseMessage response){\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 93
      },
      "nodeContext" : "!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.message.http.HttpResponseMessage"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 73,
      "startColumnNumber" : 12,
      "endLineNumber" : 73,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 33
      },
      "nodeContext" : "response.getContext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 64
      },
      "nodeContext" : "response.getContext().get(CommonContextKeys.GZIPPER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 72
      },
      "nodeContext" : "response.getContext().get(CommonContextKeys.GZIPPER) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 68,
        "startColumnNumber" : 62,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean shouldFilter(HttpResponseMessage response){\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 72
      },
      "nodeContext" : "response.getContext().get(CommonContextKeys.GZIPPER) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.message.http.HttpResponseMessage"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 78,
      "startColumnNumber" : 40,
      "endLineNumber" : 78,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 78,
        "startColumnNumber" : 40,
        "endLineNumber" : 78,
        "endColumnNumber" : 68
      },
      "nodeContext" : "response.getInboundRequest()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 78,
        "startColumnNumber" : 30,
        "endLineNumber" : 78,
        "endColumnNumber" : 68
      },
      "nodeContext" : "request=response.getInboundRequest()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 69
      },
      "nodeContext" : "final HttpRequestInfo request=response.getInboundRequest();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 68,
        "startColumnNumber" : 62,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean shouldFilter(HttpResponseMessage response){\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 69
      },
      "nodeContext" : "final HttpRequestInfo request=response.getInboundRequest();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.message.http.HttpResponseMessage"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 79,
      "startColumnNumber" : 58,
      "endLineNumber" : 79,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 79,
        "startColumnNumber" : 58,
        "endLineNumber" : 79,
        "endColumnNumber" : 79
      },
      "nodeContext" : "response.getContext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 79,
        "startColumnNumber" : 58,
        "endLineNumber" : 79,
        "endColumnNumber" : 126
      },
      "nodeContext" : "response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 79,
        "startColumnNumber" : 48,
        "endLineNumber" : 79,
        "endColumnNumber" : 126
      },
      "nodeContext" : "(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 79,
        "startColumnNumber" : 22,
        "endLineNumber" : 79,
        "endColumnNumber" : 126
      },
      "nodeContext" : "overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 127
      },
      "nodeContext" : "final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 68,
        "startColumnNumber" : 62,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean shouldFilter(HttpResponseMessage response){\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 127
      },
      "nodeContext" : "final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.message.http.HttpResponseMessage"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 84,
      "startColumnNumber" : 36,
      "endLineNumber" : 84,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 84,
        "startColumnNumber" : 36,
        "endLineNumber" : 84,
        "endColumnNumber" : 57
      },
      "nodeContext" : "response.getHeaders()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 84,
        "startColumnNumber" : 22,
        "endLineNumber" : 84,
        "endColumnNumber" : 57
      },
      "nodeContext" : "respHeaders=response.getHeaders()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 58
      },
      "nodeContext" : "final Headers respHeaders=response.getHeaders();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 68,
        "startColumnNumber" : 62,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean shouldFilter(HttpResponseMessage response){\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 58
      },
      "nodeContext" : "final Headers respHeaders=response.getHeaders();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.message.http.HttpResponseMessage"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 88,
      "startColumnNumber" : 58,
      "endLineNumber" : 88,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 88,
        "startColumnNumber" : 35,
        "endLineNumber" : 88,
        "endColumnNumber" : 67
      },
      "nodeContext" : "isGzippableContentType(response)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 88,
        "startColumnNumber" : 35,
        "endLineNumber" : 88,
        "endColumnNumber" : 140
      },
      "nodeContext" : "isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 88,
        "startColumnNumber" : 22,
        "endLineNumber" : 88,
        "endColumnNumber" : 140
      },
      "nodeContext" : "shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 141
      },
      "nodeContext" : "final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 68,
        "startColumnNumber" : 62,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean shouldFilter(HttpResponseMessage response){\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 141
      },
      "nodeContext" : "final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.message.http.HttpResponseMessage"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 88,
      "startColumnNumber" : 131,
      "endLineNumber" : 88,
      "endColumnNumber" : 139
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 88,
        "startColumnNumber" : 112,
        "endLineNumber" : 88,
        "endColumnNumber" : 140
      },
      "nodeContext" : "isRightSizeForGzip(response)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 88,
        "startColumnNumber" : 35,
        "endLineNumber" : 88,
        "endColumnNumber" : 140
      },
      "nodeContext" : "isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 88,
        "startColumnNumber" : 22,
        "endLineNumber" : 88,
        "endColumnNumber" : 140
      },
      "nodeContext" : "shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 141
      },
      "nodeContext" : "final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 68,
        "startColumnNumber" : 62,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean shouldFilter(HttpResponseMessage response){\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 141
      },
      "nodeContext" : "final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.message.http.HttpResponseMessage"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 90,
      "startColumnNumber" : 12,
      "endLineNumber" : 90,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 33
      },
      "nodeContext" : "response.getContext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 78
      },
      "nodeContext" : "response.getContext().set(CommonContextKeys.GZIPPER,getGzipper())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 79
      },
      "nodeContext" : "response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 89,
        "startColumnNumber" : 24,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (shouldGzip) {\n  response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 68,
        "startColumnNumber" : 62,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean shouldFilter(HttpResponseMessage response){\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 79
      },
      "nodeContext" : "response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.message.http.HttpResponseMessage"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 69,
    "startColumnNumber" : 31,
    "endLineNumber" : 69,
    "endColumnNumber" : 39
  }, {
    "charLength" : 8,
    "startLineNumber" : 69,
    "startColumnNumber" : 53,
    "endLineNumber" : 69,
    "endColumnNumber" : 61
  }, {
    "charLength" : 8,
    "startLineNumber" : 73,
    "startColumnNumber" : 12,
    "endLineNumber" : 73,
    "endColumnNumber" : 20
  }, {
    "charLength" : 8,
    "startLineNumber" : 78,
    "startColumnNumber" : 40,
    "endLineNumber" : 78,
    "endColumnNumber" : 48
  }, {
    "charLength" : 8,
    "startLineNumber" : 79,
    "startColumnNumber" : 58,
    "endLineNumber" : 79,
    "endColumnNumber" : 66
  }, {
    "charLength" : 8,
    "startLineNumber" : 84,
    "startColumnNumber" : 36,
    "endLineNumber" : 84,
    "endColumnNumber" : 44
  }, {
    "charLength" : 8,
    "startLineNumber" : 88,
    "startColumnNumber" : 58,
    "endLineNumber" : 88,
    "endColumnNumber" : 66
  }, {
    "charLength" : 8,
    "startLineNumber" : 88,
    "startColumnNumber" : 131,
    "endLineNumber" : 88,
    "endColumnNumber" : 139
  }, {
    "charLength" : 8,
    "startLineNumber" : 90,
    "startColumnNumber" : 12,
    "endLineNumber" : 90,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 5
  } ]
}