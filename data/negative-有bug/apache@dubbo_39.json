{
  "id" : 39,
  "expression" : "BlockingQueue.class",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/test/java/org/apache/dubbo/common/convert/multiple/StringToBlockingDequeConverterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BlockingQueue.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 80,
      "startColumnNumber" : 51,
      "endLineNumber" : 80,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 80,
        "startColumnNumber" : 20,
        "endLineNumber" : 80,
        "endColumnNumber" : 71
      },
      "nodeContext" : "converter.accept(String.class,BlockingQueue.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertFalse(converter.accept(String.class,BlockingQueue.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertFalse(converter.accept(String.class,BlockingQueue.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertFalse(converter.accept(String.class,Collection.class));\n  assertFalse(converter.accept(String.class,List.class));\n  assertFalse(converter.accept(String.class,AbstractList.class));\n  assertFalse(converter.accept(String.class,ArrayList.class));\n  assertFalse(converter.accept(String.class,LinkedList.class));\n  assertFalse(converter.accept(String.class,Set.class));\n  assertFalse(converter.accept(String.class,SortedSet.class));\n  assertFalse(converter.accept(String.class,NavigableSet.class));\n  assertFalse(converter.accept(String.class,TreeSet.class));\n  assertFalse(converter.accept(String.class,ConcurrentSkipListSet.class));\n  assertFalse(converter.accept(String.class,Queue.class));\n  assertFalse(converter.accept(String.class,BlockingQueue.class));\n  assertFalse(converter.accept(String.class,TransferQueue.class));\n  assertFalse(converter.accept(String.class,Deque.class));\n  assertTrue(converter.accept(String.class,BlockingDeque.class));\n  assertFalse(converter.accept(null,char[].class));\n  assertFalse(converter.accept(null,String.class));\n  assertFalse(converter.accept(null,String.class));\n  assertFalse(converter.accept(null,null));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1335,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAccept(){\n  assertFalse(converter.accept(String.class,Collection.class));\n  assertFalse(converter.accept(String.class,List.class));\n  assertFalse(converter.accept(String.class,AbstractList.class));\n  assertFalse(converter.accept(String.class,ArrayList.class));\n  assertFalse(converter.accept(String.class,LinkedList.class));\n  assertFalse(converter.accept(String.class,Set.class));\n  assertFalse(converter.accept(String.class,SortedSet.class));\n  assertFalse(converter.accept(String.class,NavigableSet.class));\n  assertFalse(converter.accept(String.class,TreeSet.class));\n  assertFalse(converter.accept(String.class,ConcurrentSkipListSet.class));\n  assertFalse(converter.accept(String.class,Queue.class));\n  assertFalse(converter.accept(String.class,BlockingQueue.class));\n  assertFalse(converter.accept(String.class,TransferQueue.class));\n  assertFalse(converter.accept(String.class,Deque.class));\n  assertTrue(converter.accept(String.class,BlockingDeque.class));\n  assertFalse(converter.accept(null,char[].class));\n  assertFalse(converter.accept(null,String.class));\n  assertFalse(converter.accept(null,String.class));\n  assertFalse(converter.accept(null,null));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 226,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertFalse(converter.accept(String.class,BlockingQueue.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.util.concurrent.BlockingQueue>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 80,
    "startColumnNumber" : 51,
    "endLineNumber" : 80,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}