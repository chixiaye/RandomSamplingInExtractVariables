{
  "id" : 15,
  "expression" : "new CallExecuteObservable<>(call)",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit-adapters/rxjava3/src/main/java/retrofit2/adapter/rxjava3/RxJava3CallAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new CallExecuteObservable<>(call)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 68,
      "startColumnNumber" : 54,
      "endLineNumber" : 68,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 87
      },
      "nodeContext" : "isAsync ? new CallEnqueueObservable<>(call) : new CallExecuteObservable<>(call)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 67,
        "startColumnNumber" : 28,
        "endLineNumber" : 68,
        "endColumnNumber" : 87
      },
      "nodeContext" : "responseObservable=isAsync ? new CallEnqueueObservable<>(call) : new CallExecuteObservable<>(call)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Observable<Response<R>> responseObservable=isAsync ? new CallEnqueueObservable<>(call) : new CallExecuteObservable<>(call);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1011,
        "startLineNumber" : 66,
        "startColumnNumber" : 36,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Observable<Response<R>> responseObservable=isAsync ? new CallEnqueueObservable<>(call) : new CallExecuteObservable<>(call);\n  Observable<?> observable;\n  if (isResult) {\n    observable=new ResultObservable<>(responseObservable);\n  }\n else   if (isBody) {\n    observable=new BodyObservable<>(responseObservable);\n  }\n else {\n    observable=responseObservable;\n  }\n  if (scheduler != null) {\n    observable=observable.subscribeOn(scheduler);\n  }\n  if (isFlowable) {\n    return observable.toFlowable(BackpressureStrategy.MISSING);\n  }\n  if (isSingle) {\n    return observable.singleOrError();\n  }\n  if (isMaybe) {\n    return observable.singleElement();\n  }\n  if (isCompletable) {\n    return observable.ignoreElements();\n  }\n  return RxJavaPlugins.onAssembly(observable);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1057,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Object adapt(Call<R> call){\n  Observable<Response<R>> responseObservable=isAsync ? new CallEnqueueObservable<>(call) : new CallExecuteObservable<>(call);\n  Observable<?> observable;\n  if (isResult) {\n    observable=new ResultObservable<>(responseObservable);\n  }\n else   if (isBody) {\n    observable=new BodyObservable<>(responseObservable);\n  }\n else {\n    observable=responseObservable;\n  }\n  if (scheduler != null) {\n    observable=observable.subscribeOn(scheduler);\n  }\n  if (isFlowable) {\n    return observable.toFlowable(BackpressureStrategy.MISSING);\n  }\n  if (isSingle) {\n    return observable.singleOrError();\n  }\n  if (isMaybe) {\n    return observable.singleElement();\n  }\n  if (isCompletable) {\n    return observable.ignoreElements();\n  }\n  return RxJavaPlugins.onAssembly(observable);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 87
      },
      "nodeContext" : "isAsync ? new CallEnqueueObservable<>(call) : new CallExecuteObservable<>(call)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "retrofit2.adapter.rxjava3.CallExecuteObservable"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 68,
    "startColumnNumber" : 54,
    "endLineNumber" : 68,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}