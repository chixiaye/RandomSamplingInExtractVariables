{
  "id" : 36,
  "expression" : "preferredColorSpace == PreferredColorSpace.DISPLAY_P3",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/main/java/com/bumptech/glide/load/resource/DefaultOnHeaderDecodedListener.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "preferredColorSpace == PreferredColorSpace.DISPLAY_P3",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 120,
      "startColumnNumber" : 12,
      "endLineNumber" : 120,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 47
      },
      "nodeContext" : "preferredColorSpace == PreferredColorSpace.DISPLAY_P3 && info.getColorSpace() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 53
      },
      "nodeContext" : "preferredColorSpace == PreferredColorSpace.DISPLAY_P3 && info.getColorSpace() != null && info.getColorSpace().isWideGamut()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 119,
        "startColumnNumber" : 16,
        "endLineNumber" : 122,
        "endColumnNumber" : 53
      },
      "nodeContext" : "isP3Eligible=preferredColorSpace == PreferredColorSpace.DISPLAY_P3 && info.getColorSpace() != null && info.getColorSpace().isWideGamut()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 54
      },
      "nodeContext" : "boolean isP3Eligible=preferredColorSpace == PreferredColorSpace.DISPLAY_P3 && info.getColorSpace() != null && info.getColorSpace().isWideGamut();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 118,
        "startColumnNumber" : 58,
        "endLineNumber" : 125,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  boolean isP3Eligible=preferredColorSpace == PreferredColorSpace.DISPLAY_P3 && info.getColorSpace() != null && info.getColorSpace().isWideGamut();\n  decoder.setTargetColorSpace(ColorSpace.get(isP3Eligible ? ColorSpace.Named.DISPLAY_P3 : ColorSpace.Named.SRGB));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 547,
        "startLineNumber" : 118,
        "startColumnNumber" : 6,
        "endLineNumber" : 127,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n  boolean isP3Eligible=preferredColorSpace == PreferredColorSpace.DISPLAY_P3 && info.getColorSpace() != null && info.getColorSpace().isWideGamut();\n  decoder.setTargetColorSpace(ColorSpace.get(isP3Eligible ? ColorSpace.Named.DISPLAY_P3 : ColorSpace.Named.SRGB));\n}\n else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n  decoder.setTargetColorSpace(ColorSpace.get(ColorSpace.Named.SRGB));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 563,
        "startLineNumber" : 117,
        "startColumnNumber" : 37,
        "endLineNumber" : 128,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n    boolean isP3Eligible=preferredColorSpace == PreferredColorSpace.DISPLAY_P3 && info.getColorSpace() != null && info.getColorSpace().isWideGamut();\n    decoder.setTargetColorSpace(ColorSpace.get(isP3Eligible ? ColorSpace.Named.DISPLAY_P3 : ColorSpace.Named.SRGB));\n  }\n else   if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n    decoder.setTargetColorSpace(ColorSpace.get(ColorSpace.Named.SRGB));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (preferredColorSpace != null) {\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n    boolean isP3Eligible=preferredColorSpace == PreferredColorSpace.DISPLAY_P3 && info.getColorSpace() != null && info.getColorSpace().isWideGamut();\n    decoder.setTargetColorSpace(ColorSpace.get(isP3Eligible ? ColorSpace.Named.DISPLAY_P3 : ColorSpace.Named.SRGB));\n  }\n else   if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n    decoder.setTargetColorSpace(ColorSpace.get(ColorSpace.Named.SRGB));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2408,
        "startLineNumber" : 59,
        "startColumnNumber" : 86,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (hardwareConfigState.isHardwareConfigAllowed(requestedWidth,requestedHeight,isHardwareConfigAllowed,false)) {\n    decoder.setAllocator(ImageDecoder.ALLOCATOR_HARDWARE);\n  }\n else {\n    decoder.setAllocator(ImageDecoder.ALLOCATOR_SOFTWARE);\n  }\n  if (decodeFormat == DecodeFormat.PREFER_RGB_565) {\n    decoder.setMemorySizePolicy(ImageDecoder.MEMORY_POLICY_LOW_RAM);\n  }\n  decoder.setOnPartialImageListener(new OnPartialImageListener(){\n    @Override public boolean onPartialImage(    @NonNull DecodeException e){\n      return false;\n    }\n  }\n);\n  Size size=info.getSize();\n  int targetWidth=requestedWidth;\n  if (requestedWidth == Target.SIZE_ORIGINAL) {\n    targetWidth=size.getWidth();\n  }\n  int targetHeight=requestedHeight;\n  if (requestedHeight == Target.SIZE_ORIGINAL) {\n    targetHeight=size.getHeight();\n  }\n  float scaleFactor=strategy.getScaleFactor(size.getWidth(),size.getHeight(),targetWidth,targetHeight);\n  int resizeWidth=Math.round(scaleFactor * size.getWidth());\n  int resizeHeight=Math.round(scaleFactor * size.getHeight());\n  if (Log.isLoggable(TAG,Log.VERBOSE)) {\n    Log.v(TAG,\"Resizing\" + \" from [\" + size.getWidth() + \"x\"+ size.getHeight()+ \"]\"+ \" to [\"+ resizeWidth+ \"x\"+ resizeHeight+ \"]\"+ \" scaleFactor: \"+ scaleFactor);\n  }\n  decoder.setTargetSize(resizeWidth,resizeHeight);\n  if (preferredColorSpace != null) {\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n      boolean isP3Eligible=preferredColorSpace == PreferredColorSpace.DISPLAY_P3 && info.getColorSpace() != null && info.getColorSpace().isWideGamut();\n      decoder.setTargetColorSpace(ColorSpace.get(isP3Eligible ? ColorSpace.Named.DISPLAY_P3 : ColorSpace.Named.SRGB));\n    }\n else     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n      decoder.setTargetColorSpace(ColorSpace.get(ColorSpace.Named.SRGB));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 267,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2537,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onHeaderDecoded(@NonNull ImageDecoder decoder,@NonNull ImageInfo info,@NonNull Source source){\n  if (hardwareConfigState.isHardwareConfigAllowed(requestedWidth,requestedHeight,isHardwareConfigAllowed,false)) {\n    decoder.setAllocator(ImageDecoder.ALLOCATOR_HARDWARE);\n  }\n else {\n    decoder.setAllocator(ImageDecoder.ALLOCATOR_SOFTWARE);\n  }\n  if (decodeFormat == DecodeFormat.PREFER_RGB_565) {\n    decoder.setMemorySizePolicy(ImageDecoder.MEMORY_POLICY_LOW_RAM);\n  }\n  decoder.setOnPartialImageListener(new OnPartialImageListener(){\n    @Override public boolean onPartialImage(    @NonNull DecodeException e){\n      return false;\n    }\n  }\n);\n  Size size=info.getSize();\n  int targetWidth=requestedWidth;\n  if (requestedWidth == Target.SIZE_ORIGINAL) {\n    targetWidth=size.getWidth();\n  }\n  int targetHeight=requestedHeight;\n  if (requestedHeight == Target.SIZE_ORIGINAL) {\n    targetHeight=size.getHeight();\n  }\n  float scaleFactor=strategy.getScaleFactor(size.getWidth(),size.getHeight(),targetWidth,targetHeight);\n  int resizeWidth=Math.round(scaleFactor * size.getWidth());\n  int resizeHeight=Math.round(scaleFactor * size.getHeight());\n  if (Log.isLoggable(TAG,Log.VERBOSE)) {\n    Log.v(TAG,\"Resizing\" + \" from [\" + size.getWidth() + \"x\"+ size.getHeight()+ \"]\"+ \" to [\"+ resizeWidth+ \"x\"+ resizeHeight+ \"]\"+ \" scaleFactor: \"+ scaleFactor);\n  }\n  decoder.setTargetSize(resizeWidth,resizeHeight);\n  if (preferredColorSpace != null) {\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n      boolean isP3Eligible=preferredColorSpace == PreferredColorSpace.DISPLAY_P3 && info.getColorSpace() != null && info.getColorSpace().isWideGamut();\n      decoder.setTargetColorSpace(ColorSpace.get(isP3Eligible ? ColorSpace.Named.DISPLAY_P3 : ColorSpace.Named.SRGB));\n    }\n else     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n      decoder.setTargetColorSpace(ColorSpace.get(ColorSpace.Named.SRGB));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 47
      },
      "nodeContext" : "preferredColorSpace == PreferredColorSpace.DISPLAY_P3 && info.getColorSpace() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 120,
    "startColumnNumber" : 12,
    "endLineNumber" : 120,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}