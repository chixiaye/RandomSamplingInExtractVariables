{
  "id" : 79,
  "expression" : "patternIndex * checkWeight",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/main/java/com/google/zxing/oned/Code128Writer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "patternIndex * checkWeight",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 247,
      "startColumnNumber" : 18,
      "endLineNumber" : 247,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 247,
        "startColumnNumber" : 6,
        "endLineNumber" : 247,
        "endColumnNumber" : 44
      },
      "nodeContext" : "checkSum+=patternIndex * checkWeight",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 247,
        "startColumnNumber" : 6,
        "endLineNumber" : 247,
        "endColumnNumber" : 45
      },
      "nodeContext" : "checkSum+=patternIndex * checkWeight;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2914,
        "startLineNumber" : 164,
        "startColumnNumber" : 30,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int newCodeSet;\n  if (forcedCodeSet == -1) {\n    newCodeSet=chooseCode(contents,position,codeSet);\n  }\n else {\n    newCodeSet=forcedCodeSet;\n  }\n  int patternIndex;\n  if (newCodeSet == codeSet) {\nswitch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:      patternIndex=CODE_FNC_1;\n    break;\ncase ESCAPE_FNC_2:  patternIndex=CODE_FNC_2;\nbreak;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nbreak;\ncase ESCAPE_FNC_4:if (codeSet == CODE_CODE_A) {\npatternIndex=CODE_FNC_4_A;\n}\n else {\npatternIndex=CODE_FNC_4_B;\n}\nbreak;\ndefault:switch (codeSet) {\ncase CODE_CODE_A:patternIndex=contents.charAt(position) - ' ';\nif (patternIndex < 0) {\npatternIndex+='`';\n}\nbreak;\ncase CODE_CODE_B:patternIndex=contents.charAt(position) - ' ';\nbreak;\ndefault:if (position + 1 == length) {\nthrow new IllegalArgumentException(\"Bad number of characters for digit only encoding.\");\n}\npatternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition++;\nbreak;\n}\n}\nposition++;\n}\n else {\nif (codeSet == 0) {\nswitch (newCodeSet) {\ncase CODE_CODE_A:patternIndex=CODE_START_A;\nbreak;\ncase CODE_CODE_B:patternIndex=CODE_START_B;\nbreak;\ndefault:patternIndex=CODE_START_C;\nbreak;\n}\n}\n else {\npatternIndex=newCodeSet;\n}\ncodeSet=newCodeSet;\n}\npatterns.add(Code128Reader.CODE_PATTERNS[patternIndex]);\ncheckSum+=patternIndex * checkWeight;\nif (position != 0) {\ncheckWeight++;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2940,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (position < length) {\n  int newCodeSet;\n  if (forcedCodeSet == -1) {\n    newCodeSet=chooseCode(contents,position,codeSet);\n  }\n else {\n    newCodeSet=forcedCodeSet;\n  }\n  int patternIndex;\n  if (newCodeSet == codeSet) {\nswitch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:      patternIndex=CODE_FNC_1;\n    break;\ncase ESCAPE_FNC_2:  patternIndex=CODE_FNC_2;\nbreak;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nbreak;\ncase ESCAPE_FNC_4:if (codeSet == CODE_CODE_A) {\npatternIndex=CODE_FNC_4_A;\n}\n else {\npatternIndex=CODE_FNC_4_B;\n}\nbreak;\ndefault:switch (codeSet) {\ncase CODE_CODE_A:patternIndex=contents.charAt(position) - ' ';\nif (patternIndex < 0) {\npatternIndex+='`';\n}\nbreak;\ncase CODE_CODE_B:patternIndex=contents.charAt(position) - ' ';\nbreak;\ndefault:if (position + 1 == length) {\nthrow new IllegalArgumentException(\"Bad number of characters for digit only encoding.\");\n}\npatternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition++;\nbreak;\n}\n}\nposition++;\n}\n else {\nif (codeSet == 0) {\nswitch (newCodeSet) {\ncase CODE_CODE_A:patternIndex=CODE_START_A;\nbreak;\ncase CODE_CODE_B:patternIndex=CODE_START_B;\nbreak;\ndefault:patternIndex=CODE_START_C;\nbreak;\n}\n}\n else {\npatternIndex=newCodeSet;\n}\ncodeSet=newCodeSet;\n}\npatterns.add(Code128Reader.CODE_PATTERNS[patternIndex]);\ncheckSum+=patternIndex * checkWeight;\nif (position != 0) {\ncheckWeight++;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 209,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3291,
        "startLineNumber" : 155,
        "startColumnNumber" : 74,
        "endLineNumber" : 253,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int length=contents.length();\n  Collection<int[]> patterns=new ArrayList<>();\n  int checkSum=0;\n  int checkWeight=1;\n  int codeSet=0;\n  int position=0;\n  while (position < length) {\n    int newCodeSet;\n    if (forcedCodeSet == -1) {\n      newCodeSet=chooseCode(contents,position,codeSet);\n    }\n else {\n      newCodeSet=forcedCodeSet;\n    }\n    int patternIndex;\n    if (newCodeSet == codeSet) {\nswitch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:        patternIndex=CODE_FNC_1;\n      break;\ncase ESCAPE_FNC_2:    patternIndex=CODE_FNC_2;\n  break;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nbreak;\ncase ESCAPE_FNC_4:if (codeSet == CODE_CODE_A) {\npatternIndex=CODE_FNC_4_A;\n}\n else {\npatternIndex=CODE_FNC_4_B;\n}\nbreak;\ndefault:switch (codeSet) {\ncase CODE_CODE_A:patternIndex=contents.charAt(position) - ' ';\nif (patternIndex < 0) {\npatternIndex+='`';\n}\nbreak;\ncase CODE_CODE_B:patternIndex=contents.charAt(position) - ' ';\nbreak;\ndefault:if (position + 1 == length) {\nthrow new IllegalArgumentException(\"Bad number of characters for digit only encoding.\");\n}\npatternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition++;\nbreak;\n}\n}\nposition++;\n}\n else {\nif (codeSet == 0) {\nswitch (newCodeSet) {\ncase CODE_CODE_A:patternIndex=CODE_START_A;\nbreak;\ncase CODE_CODE_B:patternIndex=CODE_START_B;\nbreak;\ndefault:patternIndex=CODE_START_C;\nbreak;\n}\n}\n else {\npatternIndex=newCodeSet;\n}\ncodeSet=newCodeSet;\n}\npatterns.add(Code128Reader.CODE_PATTERNS[patternIndex]);\ncheckSum+=patternIndex * checkWeight;\nif (position != 0) {\ncheckWeight++;\n}\n}\nreturn produceResult(patterns,checkSum);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 255,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3363,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 253,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static boolean[] encodeFast(String contents,int forcedCodeSet){\n  int length=contents.length();\n  Collection<int[]> patterns=new ArrayList<>();\n  int checkSum=0;\n  int checkWeight=1;\n  int codeSet=0;\n  int position=0;\n  while (position < length) {\n    int newCodeSet;\n    if (forcedCodeSet == -1) {\n      newCodeSet=chooseCode(contents,position,codeSet);\n    }\n else {\n      newCodeSet=forcedCodeSet;\n    }\n    int patternIndex;\n    if (newCodeSet == codeSet) {\nswitch (contents.charAt(position)) {\ncase ESCAPE_FNC_1:        patternIndex=CODE_FNC_1;\n      break;\ncase ESCAPE_FNC_2:    patternIndex=CODE_FNC_2;\n  break;\ncase ESCAPE_FNC_3:patternIndex=CODE_FNC_3;\nbreak;\ncase ESCAPE_FNC_4:if (codeSet == CODE_CODE_A) {\npatternIndex=CODE_FNC_4_A;\n}\n else {\npatternIndex=CODE_FNC_4_B;\n}\nbreak;\ndefault:switch (codeSet) {\ncase CODE_CODE_A:patternIndex=contents.charAt(position) - ' ';\nif (patternIndex < 0) {\npatternIndex+='`';\n}\nbreak;\ncase CODE_CODE_B:patternIndex=contents.charAt(position) - ' ';\nbreak;\ndefault:if (position + 1 == length) {\nthrow new IllegalArgumentException(\"Bad number of characters for digit only encoding.\");\n}\npatternIndex=Integer.parseInt(contents.substring(position,position + 2));\nposition++;\nbreak;\n}\n}\nposition++;\n}\n else {\nif (codeSet == 0) {\nswitch (newCodeSet) {\ncase CODE_CODE_A:patternIndex=CODE_START_A;\nbreak;\ncase CODE_CODE_B:patternIndex=CODE_START_B;\nbreak;\ndefault:patternIndex=CODE_START_C;\nbreak;\n}\n}\n else {\npatternIndex=newCodeSet;\n}\ncodeSet=newCodeSet;\n}\npatterns.add(Code128Reader.CODE_PATTERNS[patternIndex]);\ncheckSum+=patternIndex * checkWeight;\nif (position != 0) {\ncheckWeight++;\n}\n}\nreturn produceResult(patterns,checkSum);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 247,
        "startColumnNumber" : 6,
        "endLineNumber" : 247,
        "endColumnNumber" : 45
      },
      "nodeContext" : "checkSum+=patternIndex * checkWeight;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 247,
    "startColumnNumber" : 18,
    "endLineNumber" : 247,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}