{
  "id" : 458,
  "expression" : "state.rules.lighting",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/power/SolarGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "state.rules.lighting",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 29,
      "startColumnNumber" : 21,
      "endLineNumber" : 29,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 29,
        "startColumnNumber" : 21,
        "endLineNumber" : 31,
        "endColumnNumber" : 26
      },
      "nodeContext" : "state.rules.lighting ? 1f - state.rules.ambientLight.a : 1f",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 29,
        "startColumnNumber" : 20,
        "endLineNumber" : 32,
        "endColumnNumber" : 21
      },
      "nodeContext" : "(state.rules.lighting ? 1f - state.rules.ambientLight.a : 1f)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 28,
        "startColumnNumber" : 30,
        "endLineNumber" : 32,
        "endColumnNumber" : 21
      },
      "nodeContext" : "Attribute.light.env() + (state.rules.lighting ? 1f - state.rules.ambientLight.a : 1f)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 28,
        "startColumnNumber" : 16,
        "endLineNumber" : 32,
        "endColumnNumber" : 22
      },
      "nodeContext" : "Mathf.maxZero(Attribute.light.env() + (state.rules.lighting ? 1f - state.rules.ambientLight.a : 1f))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 27,
        "startColumnNumber" : 35,
        "endLineNumber" : 32,
        "endColumnNumber" : 27
      },
      "nodeContext" : "enabled ? Mathf.maxZero(Attribute.light.env() + (state.rules.lighting ? 1f - state.rules.ambientLight.a : 1f)) : 0f",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 29,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 27,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 27
      },
      "nodeContext" : "productionEfficiency=enabled ? Mathf.maxZero(Attribute.light.env() + (state.rules.lighting ? 1f - state.rules.ambientLight.a : 1f)) : 0f",
      "nodeType" : "Assignment",
      "astNodeNumber" : 31,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 27,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 28
      },
      "nodeContext" : "productionEfficiency=enabled ? Mathf.maxZero(Attribute.light.env() + (state.rules.lighting ? 1f - state.rules.ambientLight.a : 1f)) : 0f;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 26,
        "startColumnNumber" : 32,
        "endLineNumber" : 33,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  productionEfficiency=enabled ? Mathf.maxZero(Attribute.light.env() + (state.rules.lighting ? 1f - state.rules.ambientLight.a : 1f)) : 0f;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void updateTile(){\n  productionEfficiency=enabled ? Mathf.maxZero(Attribute.light.env() + (state.rules.lighting ? 1f - state.rules.ambientLight.a : 1f)) : 0f;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 39,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 29,
        "startColumnNumber" : 21,
        "endLineNumber" : 31,
        "endColumnNumber" : 26
      },
      "nodeContext" : "state.rules.lighting ? 1f - state.rules.ambientLight.a : 1f",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 29,
    "startColumnNumber" : 21,
    "endLineNumber" : 29,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}