{
  "id" : 115,
  "expression" : "((ChannelExec)channel)",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/NetworkMonitor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((ChannelExec)channel)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 96,
      "startColumnNumber" : 4,
      "endLineNumber" : 96,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 63
      },
      "nodeContext" : "((ChannelExec)channel).setCommand(\"telnet localhost 6571\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 64
      },
      "nodeContext" : "((ChannelExec)channel).setCommand(\"telnet localhost 6571\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 81,
        "startColumnNumber" : 62,
        "endLineNumber" : 123,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  connectionAttempts++;\n  if (connectionAttempts > 1) {\n    try {\n      Thread.sleep(2000);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  if (!session.isConnected()) {\n    return;\n  }\n  channel=session.openChannel(\"exec\");\n  ((ChannelExec)channel).setCommand(\"telnet localhost 6571\");\n  InputStream inputStream=channel.getInputStream();\n  InputStream errStream=((ChannelExec)channel).getErrStream();\n  channel.connect();\n  inputConsumer=new MessageSiphon(inputStream,this);\n  new MessageSiphon(errStream,this);\n  if (connectionAttempts > 1) {\n    SwingUtilities.invokeLater(new Runnable(){\n      @Override public void run(){\n        try {\n          Thread.sleep(1000);\n        }\n catch (        InterruptedException e) {\n        }\n        if (channel.isConnected()) {\n          NetworkMonitor.this.message(_(\"connected!\") + '\\n');\n        }\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1053,
        "startLineNumber" : 81,
        "startColumnNumber" : 2,
        "endLineNumber" : 123,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void tryConnect() throws JSchException, IOException {\n  connectionAttempts++;\n  if (connectionAttempts > 1) {\n    try {\n      Thread.sleep(2000);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  if (!session.isConnected()) {\n    return;\n  }\n  channel=session.openChannel(\"exec\");\n  ((ChannelExec)channel).setCommand(\"telnet localhost 6571\");\n  InputStream inputStream=channel.getInputStream();\n  InputStream errStream=((ChannelExec)channel).getErrStream();\n  channel.connect();\n  inputConsumer=new MessageSiphon(inputStream,this);\n  new MessageSiphon(errStream,this);\n  if (connectionAttempts > 1) {\n    SwingUtilities.invokeLater(new Runnable(){\n      @Override public void run(){\n        try {\n          Thread.sleep(1000);\n        }\n catch (        InterruptedException e) {\n        }\n        if (channel.isConnected()) {\n          NetworkMonitor.this.message(_(\"connected!\") + '\\n');\n        }\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 64
      },
      "nodeContext" : "((ChannelExec)channel).setCommand(\"telnet localhost 6571\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "processing.app.ChannelExec"
  }, {
    "nodeContext" : "((ChannelExec)channel)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 99,
      "startColumnNumber" : 28,
      "endLineNumber" : 99,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 99,
        "startColumnNumber" : 28,
        "endLineNumber" : 99,
        "endColumnNumber" : 66
      },
      "nodeContext" : "((ChannelExec)channel).getErrStream()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 66
      },
      "nodeContext" : "errStream=((ChannelExec)channel).getErrStream()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 67
      },
      "nodeContext" : "InputStream errStream=((ChannelExec)channel).getErrStream();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 81,
        "startColumnNumber" : 62,
        "endLineNumber" : 123,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  connectionAttempts++;\n  if (connectionAttempts > 1) {\n    try {\n      Thread.sleep(2000);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  if (!session.isConnected()) {\n    return;\n  }\n  channel=session.openChannel(\"exec\");\n  ((ChannelExec)channel).setCommand(\"telnet localhost 6571\");\n  InputStream inputStream=channel.getInputStream();\n  InputStream errStream=((ChannelExec)channel).getErrStream();\n  channel.connect();\n  inputConsumer=new MessageSiphon(inputStream,this);\n  new MessageSiphon(errStream,this);\n  if (connectionAttempts > 1) {\n    SwingUtilities.invokeLater(new Runnable(){\n      @Override public void run(){\n        try {\n          Thread.sleep(1000);\n        }\n catch (        InterruptedException e) {\n        }\n        if (channel.isConnected()) {\n          NetworkMonitor.this.message(_(\"connected!\") + '\\n');\n        }\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1053,
        "startLineNumber" : 81,
        "startColumnNumber" : 2,
        "endLineNumber" : 123,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void tryConnect() throws JSchException, IOException {\n  connectionAttempts++;\n  if (connectionAttempts > 1) {\n    try {\n      Thread.sleep(2000);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  if (!session.isConnected()) {\n    return;\n  }\n  channel=session.openChannel(\"exec\");\n  ((ChannelExec)channel).setCommand(\"telnet localhost 6571\");\n  InputStream inputStream=channel.getInputStream();\n  InputStream errStream=((ChannelExec)channel).getErrStream();\n  channel.connect();\n  inputConsumer=new MessageSiphon(inputStream,this);\n  new MessageSiphon(errStream,this);\n  if (connectionAttempts > 1) {\n    SwingUtilities.invokeLater(new Runnable(){\n      @Override public void run(){\n        try {\n          Thread.sleep(1000);\n        }\n catch (        InterruptedException e) {\n        }\n        if (channel.isConnected()) {\n          NetworkMonitor.this.message(_(\"connected!\") + '\\n');\n        }\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 67
      },
      "nodeContext" : "InputStream errStream=((ChannelExec)channel).getErrStream();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "processing.app.ChannelExec"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 96,
    "startColumnNumber" : 4,
    "endLineNumber" : 96,
    "endColumnNumber" : 27
  }, {
    "charLength" : 23,
    "startLineNumber" : 99,
    "startColumnNumber" : 28,
    "endLineNumber" : 99,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}