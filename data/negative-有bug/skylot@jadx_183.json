{
  "id" : 183,
  "expression" : "pred.get(AType.SPLITTER_BLOCK)",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockFinish.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pred.get(AType.SPLITTER_BLOCK)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 51,
      "startColumnNumber" : 36,
      "endLineNumber" : 51,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 51,
        "startColumnNumber" : 21,
        "endLineNumber" : 51,
        "endColumnNumber" : 66
      },
      "nodeContext" : "splitterAttr=pred.get(AType.SPLITTER_BLOCK)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 51,
        "startColumnNumber" : 3,
        "endLineNumber" : 51,
        "endColumnNumber" : 67
      },
      "nodeContext" : "SplitterBlockAttr splitterAttr=pred.get(AType.SPLITTER_BLOCK);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 49,
        "startColumnNumber" : 56,
        "endLineNumber" : 55,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  pred=BlockUtils.skipSyntheticPredecessor(pred);\n  SplitterBlockAttr splitterAttr=pred.get(AType.SPLITTER_BLOCK);\n  if (splitterAttr != null && pred == splitterAttr.getBlock()) {\n    splitters.put(pred,splitterAttr);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (BlockNode pred : handlerBlock.getPredecessors()) {\n  pred=BlockUtils.skipSyntheticPredecessor(pred);\n  SplitterBlockAttr splitterAttr=pred.get(AType.SPLITTER_BLOCK);\n  if (splitterAttr != null && pred == splitterAttr.getBlock()) {\n    splitters.put(pred,splitterAttr);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1239,
        "startLineNumber" : 39,
        "startColumnNumber" : 71,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ExcHandlerAttr excHandlerAttr=block.get(AType.EXC_HANDLER);\n  if (excHandlerAttr == null) {\n    return;\n  }\n  BlockNode handlerBlock=excHandlerAttr.getHandler().getHandlerBlock();\n  if (handlerBlock.getPredecessors().size() < 2) {\n    return;\n  }\n  Map<BlockNode,SplitterBlockAttr> splitters=new HashMap<>();\n  for (  BlockNode pred : handlerBlock.getPredecessors()) {\n    pred=BlockUtils.skipSyntheticPredecessor(pred);\n    SplitterBlockAttr splitterAttr=pred.get(AType.SPLITTER_BLOCK);\n    if (splitterAttr != null && pred == splitterAttr.getBlock()) {\n      splitters.put(pred,splitterAttr);\n    }\n  }\n  if (splitters.size() < 2) {\n    return;\n  }\n  BlockNode topSplitter=BlockUtils.getTopBlock(splitters.keySet());\n  if (topSplitter == null) {\n    mth.addWarn(\"Unknown top exception splitter block from list: \" + splitters);\n    return;\n  }\n  for (  Map.Entry<BlockNode,SplitterBlockAttr> entry : splitters.entrySet()) {\n    BlockNode pred=entry.getKey();\n    SplitterBlockAttr splitterAttr=entry.getValue();\n    if (pred == topSplitter) {\n      block.addAttr(splitterAttr);\n    }\n else {\n      pred.remove(AType.SPLITTER_BLOCK);\n      for (      BlockNode s : pred.getCleanSuccessors()) {\n        s.remove(AType.SPLITTER_BLOCK);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1438,
        "startLineNumber" : 35,
        "startColumnNumber" : 1,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * For evey exception handler must be only one splitter block, select correct one and remove others if necessary.\n */\nprivate static void fixSplitterBlock(MethodNode mth,BlockNode block){\n  ExcHandlerAttr excHandlerAttr=block.get(AType.EXC_HANDLER);\n  if (excHandlerAttr == null) {\n    return;\n  }\n  BlockNode handlerBlock=excHandlerAttr.getHandler().getHandlerBlock();\n  if (handlerBlock.getPredecessors().size() < 2) {\n    return;\n  }\n  Map<BlockNode,SplitterBlockAttr> splitters=new HashMap<>();\n  for (  BlockNode pred : handlerBlock.getPredecessors()) {\n    pred=BlockUtils.skipSyntheticPredecessor(pred);\n    SplitterBlockAttr splitterAttr=pred.get(AType.SPLITTER_BLOCK);\n    if (splitterAttr != null && pred == splitterAttr.getBlock()) {\n      splitters.put(pred,splitterAttr);\n    }\n  }\n  if (splitters.size() < 2) {\n    return;\n  }\n  BlockNode topSplitter=BlockUtils.getTopBlock(splitters.keySet());\n  if (topSplitter == null) {\n    mth.addWarn(\"Unknown top exception splitter block from list: \" + splitters);\n    return;\n  }\n  for (  Map.Entry<BlockNode,SplitterBlockAttr> entry : splitters.entrySet()) {\n    BlockNode pred=entry.getKey();\n    SplitterBlockAttr splitterAttr=entry.getValue();\n    if (pred == topSplitter) {\n      block.addAttr(splitterAttr);\n    }\n else {\n      pred.remove(AType.SPLITTER_BLOCK);\n      for (      BlockNode s : pred.getCleanSuccessors()) {\n        s.remove(AType.SPLITTER_BLOCK);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 51,
        "startColumnNumber" : 3,
        "endLineNumber" : 51,
        "endColumnNumber" : 67
      },
      "nodeContext" : "SplitterBlockAttr splitterAttr=pred.get(AType.SPLITTER_BLOCK);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "jadx.core.dex.trycatch.SplitterBlockAttr"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 51,
    "startColumnNumber" : 36,
    "endLineNumber" : 51,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}