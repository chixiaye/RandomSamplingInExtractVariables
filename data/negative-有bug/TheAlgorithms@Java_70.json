{
  "id" : 70,
  "expression" : "horizintalBlend",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Others/PerlinNoise.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "horizintalBlend",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 88,
      "startColumnNumber" : 68,
      "endLineNumber" : 88,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 88,
        "startColumnNumber" : 28,
        "endLineNumber" : 88,
        "endColumnNumber" : 84
      },
      "nodeContext" : "interpolate(base[x0][y0],base[x1][y0],horizintalBlend)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 88,
        "startColumnNumber" : 22,
        "endLineNumber" : 88,
        "endColumnNumber" : 84
      },
      "nodeContext" : "top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 88,
        "startColumnNumber" : 16,
        "endLineNumber" : 88,
        "endColumnNumber" : 85
      },
      "nodeContext" : "float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 81,
        "startColumnNumber" : 44,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int y0=(y / period) * period;\n  int y1=(y0 + period) % height;\n  float verticalBlend=(y - y0) * frequency;\n  float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n  float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n  perlinNoiseLayer[x][y]=interpolate(top,bottom,verticalBlend);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 694,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int y=0; y < height; y++) {\n  int y0=(y / period) * period;\n  int y1=(y0 + period) % height;\n  float verticalBlend=(y - y0) * frequency;\n  float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n  float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n  perlinNoiseLayer[x][y]=interpolate(top,bottom,verticalBlend);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 88,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 75,
        "startColumnNumber" : 39,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int x0=(x / period) * period;\n  int x1=(x0 + period) % width;\n  float horizintalBlend=(x - x0) * frequency;\n  for (int y=0; y < height; y++) {\n    int y0=(y / period) * period;\n    int y1=(y0 + period) % height;\n    float verticalBlend=(y - y0) * frequency;\n    float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n    float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n    perlinNoiseLayer[x][y]=interpolate(top,bottom,verticalBlend);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int x=0; x < width; x++) {\n  int x0=(x / period) * period;\n  int x1=(x0 + period) % width;\n  float horizintalBlend=(x - x0) * frequency;\n  for (int y=0; y < height; y++) {\n    int y0=(y / period) * period;\n    int y1=(y0 + period) % height;\n    float verticalBlend=(y - y0) * frequency;\n    float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n    float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n    perlinNoiseLayer[x][y]=interpolate(top,bottom,verticalBlend);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 130,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1217,
        "startLineNumber" : 68,
        "startColumnNumber" : 97,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float[][] perlinNoiseLayer=new float[width][height];\n  int period=1 << octave;\n  float frequency=1f / period;\n  for (int x=0; x < width; x++) {\n    int x0=(x / period) * period;\n    int x1=(x0 + period) % width;\n    float horizintalBlend=(x - x0) * frequency;\n    for (int y=0; y < height; y++) {\n      int y0=(y / period) * period;\n      int y1=(y0 + period) % height;\n      float verticalBlend=(y - y0) * frequency;\n      float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n      float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n      perlinNoiseLayer[x][y]=interpolate(top,bottom,verticalBlend);\n    }\n  }\n  return perlinNoiseLayer;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1565,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param base base random float array\n * @param width width of noise array\n * @param height height of noise array\n * @param octave current layer\n * @return float array containing calculated \"Perlin-Noise-Layer\" values\n */\nstatic float[][] generatePerlinNoiseLayer(float[][] base,int width,int height,int octave){\n  float[][] perlinNoiseLayer=new float[width][height];\n  int period=1 << octave;\n  float frequency=1f / period;\n  for (int x=0; x < width; x++) {\n    int x0=(x / period) * period;\n    int x1=(x0 + period) % width;\n    float horizintalBlend=(x - x0) * frequency;\n    for (int y=0; y < height; y++) {\n      int y0=(y / period) * period;\n      int y1=(y0 + period) % height;\n      float verticalBlend=(y - y0) * frequency;\n      float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n      float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n      perlinNoiseLayer[x][y]=interpolate(top,bottom,verticalBlend);\n    }\n  }\n  return perlinNoiseLayer;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 88,
        "startColumnNumber" : 16,
        "endLineNumber" : 88,
        "endColumnNumber" : 85
      },
      "nodeContext" : "float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "horizintalBlend",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 91,
      "startColumnNumber" : 71,
      "endLineNumber" : 91,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 91,
        "startColumnNumber" : 31,
        "endLineNumber" : 91,
        "endColumnNumber" : 87
      },
      "nodeContext" : "interpolate(base[x0][y1],base[x1][y1],horizintalBlend)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 91,
        "startColumnNumber" : 22,
        "endLineNumber" : 91,
        "endColumnNumber" : 87
      },
      "nodeContext" : "bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 91,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 88
      },
      "nodeContext" : "float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 81,
        "startColumnNumber" : 44,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int y0=(y / period) * period;\n  int y1=(y0 + period) % height;\n  float verticalBlend=(y - y0) * frequency;\n  float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n  float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n  perlinNoiseLayer[x][y]=interpolate(top,bottom,verticalBlend);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 694,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int y=0; y < height; y++) {\n  int y0=(y / period) * period;\n  int y1=(y0 + period) % height;\n  float verticalBlend=(y - y0) * frequency;\n  float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n  float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n  perlinNoiseLayer[x][y]=interpolate(top,bottom,verticalBlend);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 88,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 75,
        "startColumnNumber" : 39,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int x0=(x / period) * period;\n  int x1=(x0 + period) % width;\n  float horizintalBlend=(x - x0) * frequency;\n  for (int y=0; y < height; y++) {\n    int y0=(y / period) * period;\n    int y1=(y0 + period) % height;\n    float verticalBlend=(y - y0) * frequency;\n    float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n    float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n    perlinNoiseLayer[x][y]=interpolate(top,bottom,verticalBlend);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int x=0; x < width; x++) {\n  int x0=(x / period) * period;\n  int x1=(x0 + period) % width;\n  float horizintalBlend=(x - x0) * frequency;\n  for (int y=0; y < height; y++) {\n    int y0=(y / period) * period;\n    int y1=(y0 + period) % height;\n    float verticalBlend=(y - y0) * frequency;\n    float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n    float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n    perlinNoiseLayer[x][y]=interpolate(top,bottom,verticalBlend);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 130,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1217,
        "startLineNumber" : 68,
        "startColumnNumber" : 97,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float[][] perlinNoiseLayer=new float[width][height];\n  int period=1 << octave;\n  float frequency=1f / period;\n  for (int x=0; x < width; x++) {\n    int x0=(x / period) * period;\n    int x1=(x0 + period) % width;\n    float horizintalBlend=(x - x0) * frequency;\n    for (int y=0; y < height; y++) {\n      int y0=(y / period) * period;\n      int y1=(y0 + period) % height;\n      float verticalBlend=(y - y0) * frequency;\n      float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n      float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n      perlinNoiseLayer[x][y]=interpolate(top,bottom,verticalBlend);\n    }\n  }\n  return perlinNoiseLayer;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1565,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param base base random float array\n * @param width width of noise array\n * @param height height of noise array\n * @param octave current layer\n * @return float array containing calculated \"Perlin-Noise-Layer\" values\n */\nstatic float[][] generatePerlinNoiseLayer(float[][] base,int width,int height,int octave){\n  float[][] perlinNoiseLayer=new float[width][height];\n  int period=1 << octave;\n  float frequency=1f / period;\n  for (int x=0; x < width; x++) {\n    int x0=(x / period) * period;\n    int x1=(x0 + period) % width;\n    float horizintalBlend=(x - x0) * frequency;\n    for (int y=0; y < height; y++) {\n      int y0=(y / period) * period;\n      int y1=(y0 + period) % height;\n      float verticalBlend=(y - y0) * frequency;\n      float top=interpolate(base[x0][y0],base[x1][y0],horizintalBlend);\n      float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n      perlinNoiseLayer[x][y]=interpolate(top,bottom,verticalBlend);\n    }\n  }\n  return perlinNoiseLayer;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 91,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 88
      },
      "nodeContext" : "float bottom=interpolate(base[x0][y1],base[x1][y1],horizintalBlend);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 88,
    "startColumnNumber" : 68,
    "endLineNumber" : 88,
    "endColumnNumber" : 83
  }, {
    "charLength" : 15,
    "startLineNumber" : 91,
    "startColumnNumber" : 71,
    "endLineNumber" : 91,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}