{
  "id" : 499,
  "expression" : "memberData.partitions",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/clients/consumer/StickyAssignor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "memberData.partitions",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 230,
      "startColumnNumber" : 98,
      "endLineNumber" : 230,
      "endColumnNumber" : 119
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 230,
        "startColumnNumber" : 59,
        "endLineNumber" : 230,
        "endColumnNumber" : 120
      },
      "nodeContext" : "CollectionUtils.groupPartitionsByTopic(memberData.partitions)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 230,
        "startColumnNumber" : 59,
        "endLineNumber" : 230,
        "endColumnNumber" : 131
      },
      "nodeContext" : "CollectionUtils.groupPartitionsByTopic(memberData.partitions).entrySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 230,
        "startColumnNumber" : 8,
        "endLineNumber" : 235,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,List<Integer>> topicEntry : CollectionUtils.groupPartitionsByTopic(memberData.partitions).entrySet()) {\n  Struct topicAssignment=new Struct(TOPIC_ASSIGNMENT);\n  topicAssignment.set(TOPIC_KEY_NAME,topicEntry.getKey());\n  topicAssignment.set(PARTITIONS_KEY_NAME,topicEntry.getValue().toArray());\n  topicAssignments.add(topicAssignment);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 56,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 948,
        "startLineNumber" : 227,
        "startColumnNumber" : 79,
        "endLineNumber" : 243,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Struct struct=new Struct(STICKY_ASSIGNOR_USER_DATA_V1);\n  List<Struct> topicAssignments=new ArrayList<>();\n  for (  Map.Entry<String,List<Integer>> topicEntry : CollectionUtils.groupPartitionsByTopic(memberData.partitions).entrySet()) {\n    Struct topicAssignment=new Struct(TOPIC_ASSIGNMENT);\n    topicAssignment.set(TOPIC_KEY_NAME,topicEntry.getKey());\n    topicAssignment.set(PARTITIONS_KEY_NAME,topicEntry.getValue().toArray());\n    topicAssignments.add(topicAssignment);\n  }\n  struct.set(TOPIC_PARTITIONS_KEY_NAME,topicAssignments.toArray());\n  if (memberData.generation.isPresent())   struct.set(GENERATION_KEY_NAME,memberData.generation.get());\n  ByteBuffer buffer=ByteBuffer.allocate(STICKY_ASSIGNOR_USER_DATA_V1.sizeOf(struct));\n  STICKY_ASSIGNOR_USER_DATA_V1.write(buffer,struct);\n  buffer.flip();\n  return buffer;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 227,
        "startColumnNumber" : 4,
        "endLineNumber" : 243,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static ByteBuffer serializeTopicPartitionAssignment(MemberData memberData){\n  Struct struct=new Struct(STICKY_ASSIGNOR_USER_DATA_V1);\n  List<Struct> topicAssignments=new ArrayList<>();\n  for (  Map.Entry<String,List<Integer>> topicEntry : CollectionUtils.groupPartitionsByTopic(memberData.partitions).entrySet()) {\n    Struct topicAssignment=new Struct(TOPIC_ASSIGNMENT);\n    topicAssignment.set(TOPIC_KEY_NAME,topicEntry.getKey());\n    topicAssignment.set(PARTITIONS_KEY_NAME,topicEntry.getValue().toArray());\n    topicAssignments.add(topicAssignment);\n  }\n  struct.set(TOPIC_PARTITIONS_KEY_NAME,topicAssignments.toArray());\n  if (memberData.generation.isPresent())   struct.set(GENERATION_KEY_NAME,memberData.generation.get());\n  ByteBuffer buffer=ByteBuffer.allocate(STICKY_ASSIGNOR_USER_DATA_V1.sizeOf(struct));\n  STICKY_ASSIGNOR_USER_DATA_V1.write(buffer,struct);\n  buffer.flip();\n  return buffer;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 230,
        "startColumnNumber" : 59,
        "endLineNumber" : 230,
        "endColumnNumber" : 131
      },
      "nodeContext" : "CollectionUtils.groupPartitionsByTopic(memberData.partitions).entrySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.List<org.apache.kafka.common.TopicPartition>"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 230,
    "startColumnNumber" : 98,
    "endLineNumber" : 230,
    "endColumnNumber" : 119
  } ],
  "layoutRelationDataList" : [ ]
}