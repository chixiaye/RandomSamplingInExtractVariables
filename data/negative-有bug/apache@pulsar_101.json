{
  "id" : 101,
  "expression" : "transactionMetadataStore == null",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/TransactionsBase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "transactionMetadataStore == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 80,
      "startColumnNumber" : 20,
      "endLineNumber" : 80,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 80,
        "startColumnNumber" : 16,
        "endLineNumber" : 84,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (transactionMetadataStore == null) {\n  asyncResponse.resume(new RestException(NOT_FOUND,\"Transaction coordinator not found! coordinator id : \" + coordinatorId));\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 74,
        "startColumnNumber" : 39,
        "endLineNumber" : 86,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  validateTopicOwnership(TopicName.TRANSACTION_COORDINATOR_ASSIGN.getPartition(coordinatorId),authoritative);\n  TransactionMetadataStore transactionMetadataStore=pulsar().getTransactionMetadataStoreService().getStores().get(TransactionCoordinatorID.get(coordinatorId));\n  if (transactionMetadataStore == null) {\n    asyncResponse.resume(new RestException(NOT_FOUND,\"Transaction coordinator not found! coordinator id : \" + coordinatorId));\n    return;\n  }\n  asyncResponse.resume(transactionMetadataStore.getCoordinatorStats());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3104,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (coordinatorId != null) {\n  validateTopicOwnership(TopicName.TRANSACTION_COORDINATOR_ASSIGN.getPartition(coordinatorId),authoritative);\n  TransactionMetadataStore transactionMetadataStore=pulsar().getTransactionMetadataStoreService().getStores().get(TransactionCoordinatorID.get(coordinatorId));\n  if (transactionMetadataStore == null) {\n    asyncResponse.resume(new RestException(NOT_FOUND,\"Transaction coordinator not found! coordinator id : \" + coordinatorId));\n    return;\n  }\n  asyncResponse.resume(transactionMetadataStore.getCoordinatorStats());\n}\n else {\n  getPartitionedTopicMetadataAsync(TopicName.TRANSACTION_COORDINATOR_ASSIGN,false,false).thenAccept(partitionMetadata -> {\n    if (partitionMetadata.partitions == 0) {\n      asyncResponse.resume(new RestException(Response.Status.NOT_FOUND,\"Transaction coordinator not found\"));\n      return;\n    }\n    List<CompletableFuture<TransactionCoordinatorStats>> transactionMetadataStoreInfoFutures=Lists.newArrayList();\n    for (int i=0; i < partitionMetadata.partitions; i++) {\n      try {\n        transactionMetadataStoreInfoFutures.add(pulsar().getAdminClient().transactions().getCoordinatorStatsByIdAsync(i));\n      }\n catch (      PulsarServerException e) {\n        asyncResponse.resume(new RestException(e));\n        return;\n      }\n    }\n    Map<Integer,TransactionCoordinatorStats> stats=new HashMap<>();\n    FutureUtil.waitForAll(transactionMetadataStoreInfoFutures).whenComplete((result,e) -> {\n      if (e != null) {\n        asyncResponse.resume(new RestException(e));\n        return;\n      }\n      for (int i=0; i < transactionMetadataStoreInfoFutures.size(); i++) {\n        try {\n          stats.put(i,transactionMetadataStoreInfoFutures.get(i).get());\n        }\n catch (        Exception exception) {\n          asyncResponse.resume(new RestException(exception.getCause()));\n          return;\n        }\n      }\n      asyncResponse.resume(stats);\n    }\n);\n  }\n).exceptionally(ex -> {\n    log.error(\"[{}] Failed to get transaction coordinator state.\",clientAppId(),ex);\n    resumeAsyncResponseExceptionally(asyncResponse,ex);\n    return null;\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 261,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3128,
        "startLineNumber" : 73,
        "startColumnNumber" : 68,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (coordinatorId != null) {\n    validateTopicOwnership(TopicName.TRANSACTION_COORDINATOR_ASSIGN.getPartition(coordinatorId),authoritative);\n    TransactionMetadataStore transactionMetadataStore=pulsar().getTransactionMetadataStoreService().getStores().get(TransactionCoordinatorID.get(coordinatorId));\n    if (transactionMetadataStore == null) {\n      asyncResponse.resume(new RestException(NOT_FOUND,\"Transaction coordinator not found! coordinator id : \" + coordinatorId));\n      return;\n    }\n    asyncResponse.resume(transactionMetadataStore.getCoordinatorStats());\n  }\n else {\n    getPartitionedTopicMetadataAsync(TopicName.TRANSACTION_COORDINATOR_ASSIGN,false,false).thenAccept(partitionMetadata -> {\n      if (partitionMetadata.partitions == 0) {\n        asyncResponse.resume(new RestException(Response.Status.NOT_FOUND,\"Transaction coordinator not found\"));\n        return;\n      }\n      List<CompletableFuture<TransactionCoordinatorStats>> transactionMetadataStoreInfoFutures=Lists.newArrayList();\n      for (int i=0; i < partitionMetadata.partitions; i++) {\n        try {\n          transactionMetadataStoreInfoFutures.add(pulsar().getAdminClient().transactions().getCoordinatorStatsByIdAsync(i));\n        }\n catch (        PulsarServerException e) {\n          asyncResponse.resume(new RestException(e));\n          return;\n        }\n      }\n      Map<Integer,TransactionCoordinatorStats> stats=new HashMap<>();\n      FutureUtil.waitForAll(transactionMetadataStoreInfoFutures).whenComplete((result,e) -> {\n        if (e != null) {\n          asyncResponse.resume(new RestException(e));\n          return;\n        }\n        for (int i=0; i < transactionMetadataStoreInfoFutures.size(); i++) {\n          try {\n            stats.put(i,transactionMetadataStoreInfoFutures.get(i).get());\n          }\n catch (          Exception exception) {\n            asyncResponse.resume(new RestException(exception.getCause()));\n            return;\n          }\n        }\n        asyncResponse.resume(stats);\n      }\n);\n    }\n).exceptionally(ex -> {\n      log.error(\"[{}] Failed to get transaction coordinator state.\",clientAppId(),ex);\n      resumeAsyncResponseExceptionally(asyncResponse,ex);\n      return null;\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3373,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (pulsar().getConfig().isTransactionCoordinatorEnabled()) {\n  if (coordinatorId != null) {\n    validateTopicOwnership(TopicName.TRANSACTION_COORDINATOR_ASSIGN.getPartition(coordinatorId),authoritative);\n    TransactionMetadataStore transactionMetadataStore=pulsar().getTransactionMetadataStoreService().getStores().get(TransactionCoordinatorID.get(coordinatorId));\n    if (transactionMetadataStore == null) {\n      asyncResponse.resume(new RestException(NOT_FOUND,\"Transaction coordinator not found! coordinator id : \" + coordinatorId));\n      return;\n    }\n    asyncResponse.resume(transactionMetadataStore.getCoordinatorStats());\n  }\n else {\n    getPartitionedTopicMetadataAsync(TopicName.TRANSACTION_COORDINATOR_ASSIGN,false,false).thenAccept(partitionMetadata -> {\n      if (partitionMetadata.partitions == 0) {\n        asyncResponse.resume(new RestException(Response.Status.NOT_FOUND,\"Transaction coordinator not found\"));\n        return;\n      }\n      List<CompletableFuture<TransactionCoordinatorStats>> transactionMetadataStoreInfoFutures=Lists.newArrayList();\n      for (int i=0; i < partitionMetadata.partitions; i++) {\n        try {\n          transactionMetadataStoreInfoFutures.add(pulsar().getAdminClient().transactions().getCoordinatorStatsByIdAsync(i));\n        }\n catch (        PulsarServerException e) {\n          asyncResponse.resume(new RestException(e));\n          return;\n        }\n      }\n      Map<Integer,TransactionCoordinatorStats> stats=new HashMap<>();\n      FutureUtil.waitForAll(transactionMetadataStoreInfoFutures).whenComplete((result,e) -> {\n        if (e != null) {\n          asyncResponse.resume(new RestException(e));\n          return;\n        }\n        for (int i=0; i < transactionMetadataStoreInfoFutures.size(); i++) {\n          try {\n            stats.put(i,transactionMetadataStoreInfoFutures.get(i).get());\n          }\n catch (          Exception exception) {\n            asyncResponse.resume(new RestException(exception.getCause()));\n            return;\n          }\n        }\n        asyncResponse.resume(stats);\n      }\n);\n    }\n).exceptionally(ex -> {\n      log.error(\"[{}] Failed to get transaction coordinator state.\",clientAppId(),ex);\n      resumeAsyncResponseExceptionally(asyncResponse,ex);\n      return null;\n    }\n);\n  }\n}\n else {\n  asyncResponse.resume(new RestException(SERVICE_UNAVAILABLE,\"This Broker is not configured with transactionCoordinatorEnabled=true.\"));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 279,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3389,
        "startLineNumber" : 72,
        "startColumnNumber" : 70,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (pulsar().getConfig().isTransactionCoordinatorEnabled()) {\n    if (coordinatorId != null) {\n      validateTopicOwnership(TopicName.TRANSACTION_COORDINATOR_ASSIGN.getPartition(coordinatorId),authoritative);\n      TransactionMetadataStore transactionMetadataStore=pulsar().getTransactionMetadataStoreService().getStores().get(TransactionCoordinatorID.get(coordinatorId));\n      if (transactionMetadataStore == null) {\n        asyncResponse.resume(new RestException(NOT_FOUND,\"Transaction coordinator not found! coordinator id : \" + coordinatorId));\n        return;\n      }\n      asyncResponse.resume(transactionMetadataStore.getCoordinatorStats());\n    }\n else {\n      getPartitionedTopicMetadataAsync(TopicName.TRANSACTION_COORDINATOR_ASSIGN,false,false).thenAccept(partitionMetadata -> {\n        if (partitionMetadata.partitions == 0) {\n          asyncResponse.resume(new RestException(Response.Status.NOT_FOUND,\"Transaction coordinator not found\"));\n          return;\n        }\n        List<CompletableFuture<TransactionCoordinatorStats>> transactionMetadataStoreInfoFutures=Lists.newArrayList();\n        for (int i=0; i < partitionMetadata.partitions; i++) {\n          try {\n            transactionMetadataStoreInfoFutures.add(pulsar().getAdminClient().transactions().getCoordinatorStatsByIdAsync(i));\n          }\n catch (          PulsarServerException e) {\n            asyncResponse.resume(new RestException(e));\n            return;\n          }\n        }\n        Map<Integer,TransactionCoordinatorStats> stats=new HashMap<>();\n        FutureUtil.waitForAll(transactionMetadataStoreInfoFutures).whenComplete((result,e) -> {\n          if (e != null) {\n            asyncResponse.resume(new RestException(e));\n            return;\n          }\n          for (int i=0; i < transactionMetadataStoreInfoFutures.size(); i++) {\n            try {\n              stats.put(i,transactionMetadataStoreInfoFutures.get(i).get());\n            }\n catch (            Exception exception) {\n              asyncResponse.resume(new RestException(exception.getCause()));\n              return;\n            }\n          }\n          asyncResponse.resume(stats);\n        }\n);\n      }\n).exceptionally(ex -> {\n        log.error(\"[{}] Failed to get transaction coordinator state.\",clientAppId(),ex);\n        resumeAsyncResponseExceptionally(asyncResponse,ex);\n        return null;\n      }\n);\n    }\n  }\n else {\n    asyncResponse.resume(new RestException(SERVICE_UNAVAILABLE,\"This Broker is not configured with transactionCoordinatorEnabled=true.\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3554,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void internalGetCoordinatorStats(AsyncResponse asyncResponse,boolean authoritative,Integer coordinatorId){\n  if (pulsar().getConfig().isTransactionCoordinatorEnabled()) {\n    if (coordinatorId != null) {\n      validateTopicOwnership(TopicName.TRANSACTION_COORDINATOR_ASSIGN.getPartition(coordinatorId),authoritative);\n      TransactionMetadataStore transactionMetadataStore=pulsar().getTransactionMetadataStoreService().getStores().get(TransactionCoordinatorID.get(coordinatorId));\n      if (transactionMetadataStore == null) {\n        asyncResponse.resume(new RestException(NOT_FOUND,\"Transaction coordinator not found! coordinator id : \" + coordinatorId));\n        return;\n      }\n      asyncResponse.resume(transactionMetadataStore.getCoordinatorStats());\n    }\n else {\n      getPartitionedTopicMetadataAsync(TopicName.TRANSACTION_COORDINATOR_ASSIGN,false,false).thenAccept(partitionMetadata -> {\n        if (partitionMetadata.partitions == 0) {\n          asyncResponse.resume(new RestException(Response.Status.NOT_FOUND,\"Transaction coordinator not found\"));\n          return;\n        }\n        List<CompletableFuture<TransactionCoordinatorStats>> transactionMetadataStoreInfoFutures=Lists.newArrayList();\n        for (int i=0; i < partitionMetadata.partitions; i++) {\n          try {\n            transactionMetadataStoreInfoFutures.add(pulsar().getAdminClient().transactions().getCoordinatorStatsByIdAsync(i));\n          }\n catch (          PulsarServerException e) {\n            asyncResponse.resume(new RestException(e));\n            return;\n          }\n        }\n        Map<Integer,TransactionCoordinatorStats> stats=new HashMap<>();\n        FutureUtil.waitForAll(transactionMetadataStoreInfoFutures).whenComplete((result,e) -> {\n          if (e != null) {\n            asyncResponse.resume(new RestException(e));\n            return;\n          }\n          for (int i=0; i < transactionMetadataStoreInfoFutures.size(); i++) {\n            try {\n              stats.put(i,transactionMetadataStoreInfoFutures.get(i).get());\n            }\n catch (            Exception exception) {\n              asyncResponse.resume(new RestException(exception.getCause()));\n              return;\n            }\n          }\n          asyncResponse.resume(stats);\n        }\n);\n      }\n).exceptionally(ex -> {\n        log.error(\"[{}] Failed to get transaction coordinator state.\",clientAppId(),ex);\n        resumeAsyncResponseExceptionally(asyncResponse,ex);\n        return null;\n      }\n);\n    }\n  }\n else {\n    asyncResponse.resume(new RestException(SERVICE_UNAVAILABLE,\"This Broker is not configured with transactionCoordinatorEnabled=true.\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 295,
      "astHeight" : 25
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 80,
        "startColumnNumber" : 16,
        "endLineNumber" : 84,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (transactionMetadataStore == null) {\n  asyncResponse.resume(new RestException(NOT_FOUND,\"Transaction coordinator not found! coordinator id : \" + coordinatorId));\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 80,
    "startColumnNumber" : 20,
    "endLineNumber" : 80,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}