{
  "id" : 221,
  "expression" : "\"-- UUID: \"",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/db-allocator-plugin/src/main/java/org/keycloak/testsuite/dballocator/ReleaseDBMojo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"-- UUID: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 82,
      "startColumnNumber" : 28,
      "endLineNumber" : 82,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 82,
        "startColumnNumber" : 28,
        "endLineNumber" : 82,
        "endColumnNumber" : 59
      },
      "nodeContext" : "\"-- UUID: \" + release.getUUID()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 60
      },
      "nodeContext" : "logger.info(\"-- UUID: \" + release.getUUID())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 61
      },
      "nodeContext" : "logger.info(\"-- UUID: \" + release.getUUID());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 80,
        "startColumnNumber" : 30,
        "endLineNumber" : 83,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  logger.info(\"Released database:\");\n  logger.info(\"-- UUID: \" + release.getUUID());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (printSummary) {\n  logger.info(\"Released database:\");\n  logger.info(\"-- UUID: \" + release.getUUID());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  IncrementalBackoffRetryPolicy retryPolicy=new IncrementalBackoffRetryPolicy(totalRetries,backoffTimeSeconds,TimeUnit.SECONDS);\n  DBAllocatorServiceClient client=new DBAllocatorServiceClient(dbAllocatorURI,retryPolicy);\n  ReleaseResult release=client.release(AllocationResult.forRelease(allocatedUUID));\n  if (printSummary) {\n    logger.info(\"Released database:\");\n    logger.info(\"-- UUID: \" + release.getUUID());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  IncrementalBackoffRetryPolicy retryPolicy=new IncrementalBackoffRetryPolicy(totalRetries,backoffTimeSeconds,TimeUnit.SECONDS);\n  DBAllocatorServiceClient client=new DBAllocatorServiceClient(dbAllocatorURI,retryPolicy);\n  ReleaseResult release=client.release(AllocationResult.forRelease(allocatedUUID));\n  if (printSummary) {\n    logger.info(\"Released database:\");\n    logger.info(\"-- UUID: \" + release.getUUID());\n  }\n}\n catch (DBAllocatorException e) {\n  String error=e.getMessage();\n  if (e.getErrorResponse() != null) {\n    error=String.format(\"[%s](%s)\",e.getErrorResponse().getStatus(),e.getErrorResponse().readEntity(String.class));\n  }\n  throw new MojoFailureException(\"An error occurred while communicating with DBAllocator (\" + error + \")\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 104,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1122,
        "startLineNumber" : 67,
        "startColumnNumber" : 54,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (skip) {\n    logger.info(\"Skipping\");\n    return;\n  }\n  logger.info(\"Total retries: \" + totalRetries + \"; backOffTime: \"+ backoffTimeSeconds);\n  try {\n    IncrementalBackoffRetryPolicy retryPolicy=new IncrementalBackoffRetryPolicy(totalRetries,backoffTimeSeconds,TimeUnit.SECONDS);\n    DBAllocatorServiceClient client=new DBAllocatorServiceClient(dbAllocatorURI,retryPolicy);\n    ReleaseResult release=client.release(AllocationResult.forRelease(allocatedUUID));\n    if (printSummary) {\n      logger.info(\"Released database:\");\n      logger.info(\"-- UUID: \" + release.getUUID());\n    }\n  }\n catch (  DBAllocatorException e) {\n    String error=e.getMessage();\n    if (e.getErrorResponse() != null) {\n      error=String.format(\"[%s](%s)\",e.getErrorResponse().getStatus(),e.getErrorResponse().readEntity(String.class));\n    }\n    throw new MojoFailureException(\"An error occurred while communicating with DBAllocator (\" + error + \")\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1186,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void execute() throws MojoFailureException {\n  if (skip) {\n    logger.info(\"Skipping\");\n    return;\n  }\n  logger.info(\"Total retries: \" + totalRetries + \"; backOffTime: \"+ backoffTimeSeconds);\n  try {\n    IncrementalBackoffRetryPolicy retryPolicy=new IncrementalBackoffRetryPolicy(totalRetries,backoffTimeSeconds,TimeUnit.SECONDS);\n    DBAllocatorServiceClient client=new DBAllocatorServiceClient(dbAllocatorURI,retryPolicy);\n    ReleaseResult release=client.release(AllocationResult.forRelease(allocatedUUID));\n    if (printSummary) {\n      logger.info(\"Released database:\");\n      logger.info(\"-- UUID: \" + release.getUUID());\n    }\n  }\n catch (  DBAllocatorException e) {\n    String error=e.getMessage();\n    if (e.getErrorResponse() != null) {\n      error=String.format(\"[%s](%s)\",e.getErrorResponse().getStatus(),e.getErrorResponse().readEntity(String.class));\n    }\n    throw new MojoFailureException(\"An error occurred while communicating with DBAllocator (\" + error + \")\",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 61
      },
      "nodeContext" : "logger.info(\"-- UUID: \" + release.getUUID());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 82,
    "startColumnNumber" : 28,
    "endLineNumber" : 82,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}