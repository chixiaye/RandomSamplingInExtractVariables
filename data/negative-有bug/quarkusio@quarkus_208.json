{
  "id" : 208,
  "expression" : "\"inner.someValue\"",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/integration-tests/jackson/src/test/java/io/quarkus/it/jackson/ModelWithSerializerAndDeserializerOnFieldResourceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"inner.someValue\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 27,
      "startColumnNumber" : 22,
      "endLineNumber" : 27,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 65
      },
      "nodeContext" : "given().contentType(\"application/json\").when().get(\"/fieldserder/tester/whatever\").then().statusCode(200).body(\"name\",equalTo(\"tester\")).body(\"inner.someValue\",equalTo(\"unchangeable\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 66
      },
      "nodeContext" : "given().contentType(\"application/json\").when().get(\"/fieldserder/tester/whatever\").then().statusCode(200).body(\"name\",equalTo(\"tester\")).body(\"inner.someValue\",equalTo(\"unchangeable\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 28,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 20,
        "startColumnNumber" : 52,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  given().contentType(\"application/json\").when().get(\"/fieldserder/tester/whatever\").then().statusCode(200).body(\"name\",equalTo(\"tester\")).body(\"inner.someValue\",equalTo(\"unchangeable\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSerializer() throws IOException {\n  given().contentType(\"application/json\").when().get(\"/fieldserder/tester/whatever\").then().statusCode(200).body(\"name\",equalTo(\"tester\")).body(\"inner.someValue\",equalTo(\"unchangeable\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 65
      },
      "nodeContext" : "given().contentType(\"application/json\").when().get(\"/fieldserder/tester/whatever\").then().statusCode(200).body(\"name\",equalTo(\"tester\")).body(\"inner.someValue\",equalTo(\"unchangeable\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 9
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 27,
    "startColumnNumber" : 22,
    "endLineNumber" : 27,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}