{
  "id" : 138,
  "expression" : "param[0]",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/net/Ipv4Util.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "param[0]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 64,
      "startColumnNumber" : 15,
      "endLineNumber" : 64,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 64,
        "startColumnNumber" : 10,
        "endLineNumber" : 64,
        "endColumnNumber" : 59
      },
      "nodeContext" : "list(param[0],Integer.parseInt(param[1]),isAll)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 64,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 60
      },
      "nodeContext" : "return list(param[0],Integer.parseInt(param[1]),isAll);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 61,
        "startColumnNumber" : 51,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String[] param=StrUtil.split(ipRange,IP_MASK_SPLIT_MARK);\n  return list(param[0],Integer.parseInt(param[1]),isAll);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 61,
        "startColumnNumber" : 9,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (ipRange.contains(IP_MASK_SPLIT_MARK)) {\n  final String[] param=StrUtil.split(ipRange,IP_MASK_SPLIT_MARK);\n  return list(param[0],Integer.parseInt(param[1]),isAll);\n}\n else {\n  return ListUtil.toList(ipRange);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (ipRange.contains(IP_SPLIT_MARK)) {\n  final String[] range=StrUtil.split(ipRange,IP_SPLIT_MARK);\n  return list(range[0],range[1]);\n}\n else if (ipRange.contains(IP_MASK_SPLIT_MARK)) {\n  final String[] param=StrUtil.split(ipRange,IP_MASK_SPLIT_MARK);\n  return list(param[0],Integer.parseInt(param[1]),isAll);\n}\n else {\n  return ListUtil.toList(ipRange);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 56,
        "startColumnNumber" : 64,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (ipRange.contains(IP_SPLIT_MARK)) {\n    final String[] range=StrUtil.split(ipRange,IP_SPLIT_MARK);\n    return list(range[0],range[1]);\n  }\n else   if (ipRange.contains(IP_MASK_SPLIT_MARK)) {\n    final String[] param=StrUtil.split(ipRange,IP_MASK_SPLIT_MARK);\n    return list(param[0],Integer.parseInt(param[1]),isAll);\n  }\n else {\n    return ListUtil.toList(ipRange);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 642,
        "startLineNumber" : 49,
        "startColumnNumber" : 1,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 智能转换IP地址集合\n * @param ipRange IP段，支持X.X.X.X-X.X.X.X或X.X.X.X/X\n * @param isAll   true:全量地址，false:可用地址；仅在ipRange为X.X.X.X/X时才生效\n * @return IP集\n */\npublic static List<String> list(String ipRange,boolean isAll){\n  if (ipRange.contains(IP_SPLIT_MARK)) {\n    final String[] range=StrUtil.split(ipRange,IP_SPLIT_MARK);\n    return list(range[0],range[1]);\n  }\n else   if (ipRange.contains(IP_MASK_SPLIT_MARK)) {\n    final String[] param=StrUtil.split(ipRange,IP_MASK_SPLIT_MARK);\n    return list(param[0],Integer.parseInt(param[1]),isAll);\n  }\n else {\n    return ListUtil.toList(ipRange);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 64,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 60
      },
      "nodeContext" : "return list(param[0],Integer.parseInt(param[1]),isAll);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 64,
    "startColumnNumber" : 15,
    "endLineNumber" : 64,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}