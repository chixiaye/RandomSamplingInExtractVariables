{
  "id" : 55,
  "expression" : "key",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/properties/IntPropertyMapDB.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "key",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 71,
      "startColumnNumber" : 35,
      "endLineNumber" : 71,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 71,
        "startColumnNumber" : 25,
        "endLineNumber" : 71,
        "endColumnNumber" : 39
      },
      "nodeContext" : "cache.get(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 71,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 39
      },
      "nodeContext" : "(Integer)cache.get(key)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 39
      },
      "nodeContext" : "oldValue=(Integer)cache.get(key)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 40
      },
      "nodeContext" : "oldValue=(Integer)cache.get(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  oldValue=(Integer)cache.get(key);\n  if (oldValue == null) {\n    DBRecord rec=propertyTable.getRecord(key);\n    if (rec != null) {\n      oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 67,
        "startColumnNumber" : 3,
        "endLineNumber" : 78,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (propertyTable == null) {\n  createTable(IntField.INSTANCE);\n}\n else {\n  oldValue=(Integer)cache.get(key);\n  if (oldValue == null) {\n    DBRecord rec=propertyTable.getRecord(key);\n    if (rec != null) {\n      oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 51,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 652,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Integer oldValue=null;\n  long key=addrMap.getKey(addr,true);\n  if (propertyTable == null) {\n    createTable(IntField.INSTANCE);\n  }\n else {\n    oldValue=(Integer)cache.get(key);\n    if (oldValue == null) {\n      DBRecord rec=propertyTable.getRecord(key);\n      if (rec != null) {\n        oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n      }\n    }\n  }\n  DBRecord rec=schema.createRecord(key);\n  rec.setIntValue(PROPERTY_VALUE_COL,value);\n  propertyTable.putRecord(rec);\n  cache.put(key,new Integer(value));\n  changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  Integer oldValue=null;\n  long key=addrMap.getKey(addr,true);\n  if (propertyTable == null) {\n    createTable(IntField.INSTANCE);\n  }\n else {\n    oldValue=(Integer)cache.get(key);\n    if (oldValue == null) {\n      DBRecord rec=propertyTable.getRecord(key);\n      if (rec != null) {\n        oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n      }\n    }\n  }\n  DBRecord rec=schema.createRecord(key);\n  rec.setIntValue(PROPERTY_VALUE_COL,value);\n  propertyTable.putRecord(rec);\n  cache.put(key,new Integer(value));\n  changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n}\n catch (IOException e) {\n  errHandler.dbError(e);\n}\n finally {\n  lock.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 124,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 60,
        "startColumnNumber" : 42,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  lock.acquire();\n  try {\n    Integer oldValue=null;\n    long key=addrMap.getKey(addr,true);\n    if (propertyTable == null) {\n      createTable(IntField.INSTANCE);\n    }\n else {\n      oldValue=(Integer)cache.get(key);\n      if (oldValue == null) {\n        DBRecord rec=propertyTable.getRecord(key);\n        if (rec != null) {\n          oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n        }\n      }\n    }\n    DBRecord rec=schema.createRecord(key);\n    rec.setIntValue(PROPERTY_VALUE_COL,value);\n    propertyTable.putRecord(rec);\n    cache.put(key,new Integer(value));\n    changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n  }\n catch (  IOException e) {\n    errHandler.dbError(e);\n  }\n finally {\n    lock.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 944,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * @see ghidra.program.model.util.IntPropertyMap#add(ghidra.program.model.address.Address,int)\n */\n@Override public void add(Address addr,int value){\n  lock.acquire();\n  try {\n    Integer oldValue=null;\n    long key=addrMap.getKey(addr,true);\n    if (propertyTable == null) {\n      createTable(IntField.INSTANCE);\n    }\n else {\n      oldValue=(Integer)cache.get(key);\n      if (oldValue == null) {\n        DBRecord rec=propertyTable.getRecord(key);\n        if (rec != null) {\n          oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n        }\n      }\n    }\n    DBRecord rec=schema.createRecord(key);\n    rec.setIntValue(PROPERTY_VALUE_COL,value);\n    propertyTable.putRecord(rec);\n    cache.put(key,new Integer(value));\n    changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n  }\n catch (  IOException e) {\n    errHandler.dbError(e);\n  }\n finally {\n    lock.release();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 40
      },
      "nodeContext" : "oldValue=(Integer)cache.get(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "key",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 73,
      "startColumnNumber" : 44,
      "endLineNumber" : 73,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 73,
        "startColumnNumber" : 20,
        "endLineNumber" : 73,
        "endColumnNumber" : 48
      },
      "nodeContext" : "propertyTable.getRecord(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 73,
        "startColumnNumber" : 14,
        "endLineNumber" : 73,
        "endColumnNumber" : 48
      },
      "nodeContext" : "rec=propertyTable.getRecord(key)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 73,
        "startColumnNumber" : 5,
        "endLineNumber" : 73,
        "endColumnNumber" : 49
      },
      "nodeContext" : "DBRecord rec=propertyTable.getRecord(key);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 72,
        "startColumnNumber" : 26,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DBRecord rec=propertyTable.getRecord(key);\n  if (rec != null) {\n    oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (oldValue == null) {\n  DBRecord rec=propertyTable.getRecord(key);\n  if (rec != null) {\n    oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  oldValue=(Integer)cache.get(key);\n  if (oldValue == null) {\n    DBRecord rec=propertyTable.getRecord(key);\n    if (rec != null) {\n      oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 67,
        "startColumnNumber" : 3,
        "endLineNumber" : 78,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (propertyTable == null) {\n  createTable(IntField.INSTANCE);\n}\n else {\n  oldValue=(Integer)cache.get(key);\n  if (oldValue == null) {\n    DBRecord rec=propertyTable.getRecord(key);\n    if (rec != null) {\n      oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 51,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 652,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Integer oldValue=null;\n  long key=addrMap.getKey(addr,true);\n  if (propertyTable == null) {\n    createTable(IntField.INSTANCE);\n  }\n else {\n    oldValue=(Integer)cache.get(key);\n    if (oldValue == null) {\n      DBRecord rec=propertyTable.getRecord(key);\n      if (rec != null) {\n        oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n      }\n    }\n  }\n  DBRecord rec=schema.createRecord(key);\n  rec.setIntValue(PROPERTY_VALUE_COL,value);\n  propertyTable.putRecord(rec);\n  cache.put(key,new Integer(value));\n  changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  Integer oldValue=null;\n  long key=addrMap.getKey(addr,true);\n  if (propertyTable == null) {\n    createTable(IntField.INSTANCE);\n  }\n else {\n    oldValue=(Integer)cache.get(key);\n    if (oldValue == null) {\n      DBRecord rec=propertyTable.getRecord(key);\n      if (rec != null) {\n        oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n      }\n    }\n  }\n  DBRecord rec=schema.createRecord(key);\n  rec.setIntValue(PROPERTY_VALUE_COL,value);\n  propertyTable.putRecord(rec);\n  cache.put(key,new Integer(value));\n  changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n}\n catch (IOException e) {\n  errHandler.dbError(e);\n}\n finally {\n  lock.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 124,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 60,
        "startColumnNumber" : 42,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  lock.acquire();\n  try {\n    Integer oldValue=null;\n    long key=addrMap.getKey(addr,true);\n    if (propertyTable == null) {\n      createTable(IntField.INSTANCE);\n    }\n else {\n      oldValue=(Integer)cache.get(key);\n      if (oldValue == null) {\n        DBRecord rec=propertyTable.getRecord(key);\n        if (rec != null) {\n          oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n        }\n      }\n    }\n    DBRecord rec=schema.createRecord(key);\n    rec.setIntValue(PROPERTY_VALUE_COL,value);\n    propertyTable.putRecord(rec);\n    cache.put(key,new Integer(value));\n    changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n  }\n catch (  IOException e) {\n    errHandler.dbError(e);\n  }\n finally {\n    lock.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 944,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * @see ghidra.program.model.util.IntPropertyMap#add(ghidra.program.model.address.Address,int)\n */\n@Override public void add(Address addr,int value){\n  lock.acquire();\n  try {\n    Integer oldValue=null;\n    long key=addrMap.getKey(addr,true);\n    if (propertyTable == null) {\n      createTable(IntField.INSTANCE);\n    }\n else {\n      oldValue=(Integer)cache.get(key);\n      if (oldValue == null) {\n        DBRecord rec=propertyTable.getRecord(key);\n        if (rec != null) {\n          oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n        }\n      }\n    }\n    DBRecord rec=schema.createRecord(key);\n    rec.setIntValue(PROPERTY_VALUE_COL,value);\n    propertyTable.putRecord(rec);\n    cache.put(key,new Integer(value));\n    changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n  }\n catch (  IOException e) {\n    errHandler.dbError(e);\n  }\n finally {\n    lock.release();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 73,
        "startColumnNumber" : 5,
        "endLineNumber" : 73,
        "endColumnNumber" : 49
      },
      "nodeContext" : "DBRecord rec=propertyTable.getRecord(key);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "key",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 79,
      "startColumnNumber" : 38,
      "endLineNumber" : 79,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 79,
        "startColumnNumber" : 18,
        "endLineNumber" : 79,
        "endColumnNumber" : 42
      },
      "nodeContext" : "schema.createRecord(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 79,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 42
      },
      "nodeContext" : "rec=schema.createRecord(key)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 79,
        "startColumnNumber" : 3,
        "endLineNumber" : 79,
        "endColumnNumber" : 43
      },
      "nodeContext" : "DBRecord rec=schema.createRecord(key);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 652,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Integer oldValue=null;\n  long key=addrMap.getKey(addr,true);\n  if (propertyTable == null) {\n    createTable(IntField.INSTANCE);\n  }\n else {\n    oldValue=(Integer)cache.get(key);\n    if (oldValue == null) {\n      DBRecord rec=propertyTable.getRecord(key);\n      if (rec != null) {\n        oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n      }\n    }\n  }\n  DBRecord rec=schema.createRecord(key);\n  rec.setIntValue(PROPERTY_VALUE_COL,value);\n  propertyTable.putRecord(rec);\n  cache.put(key,new Integer(value));\n  changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  Integer oldValue=null;\n  long key=addrMap.getKey(addr,true);\n  if (propertyTable == null) {\n    createTable(IntField.INSTANCE);\n  }\n else {\n    oldValue=(Integer)cache.get(key);\n    if (oldValue == null) {\n      DBRecord rec=propertyTable.getRecord(key);\n      if (rec != null) {\n        oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n      }\n    }\n  }\n  DBRecord rec=schema.createRecord(key);\n  rec.setIntValue(PROPERTY_VALUE_COL,value);\n  propertyTable.putRecord(rec);\n  cache.put(key,new Integer(value));\n  changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n}\n catch (IOException e) {\n  errHandler.dbError(e);\n}\n finally {\n  lock.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 124,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 60,
        "startColumnNumber" : 42,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  lock.acquire();\n  try {\n    Integer oldValue=null;\n    long key=addrMap.getKey(addr,true);\n    if (propertyTable == null) {\n      createTable(IntField.INSTANCE);\n    }\n else {\n      oldValue=(Integer)cache.get(key);\n      if (oldValue == null) {\n        DBRecord rec=propertyTable.getRecord(key);\n        if (rec != null) {\n          oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n        }\n      }\n    }\n    DBRecord rec=schema.createRecord(key);\n    rec.setIntValue(PROPERTY_VALUE_COL,value);\n    propertyTable.putRecord(rec);\n    cache.put(key,new Integer(value));\n    changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n  }\n catch (  IOException e) {\n    errHandler.dbError(e);\n  }\n finally {\n    lock.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 944,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * @see ghidra.program.model.util.IntPropertyMap#add(ghidra.program.model.address.Address,int)\n */\n@Override public void add(Address addr,int value){\n  lock.acquire();\n  try {\n    Integer oldValue=null;\n    long key=addrMap.getKey(addr,true);\n    if (propertyTable == null) {\n      createTable(IntField.INSTANCE);\n    }\n else {\n      oldValue=(Integer)cache.get(key);\n      if (oldValue == null) {\n        DBRecord rec=propertyTable.getRecord(key);\n        if (rec != null) {\n          oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n        }\n      }\n    }\n    DBRecord rec=schema.createRecord(key);\n    rec.setIntValue(PROPERTY_VALUE_COL,value);\n    propertyTable.putRecord(rec);\n    cache.put(key,new Integer(value));\n    changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n  }\n catch (  IOException e) {\n    errHandler.dbError(e);\n  }\n finally {\n    lock.release();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 79,
        "startColumnNumber" : 3,
        "endLineNumber" : 79,
        "endColumnNumber" : 43
      },
      "nodeContext" : "DBRecord rec=schema.createRecord(key);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "key",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 83,
      "startColumnNumber" : 13,
      "endLineNumber" : 83,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 83,
        "startColumnNumber" : 3,
        "endLineNumber" : 83,
        "endColumnNumber" : 37
      },
      "nodeContext" : "cache.put(key,new Integer(value))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 83,
        "startColumnNumber" : 3,
        "endLineNumber" : 83,
        "endColumnNumber" : 38
      },
      "nodeContext" : "cache.put(key,new Integer(value));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 652,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Integer oldValue=null;\n  long key=addrMap.getKey(addr,true);\n  if (propertyTable == null) {\n    createTable(IntField.INSTANCE);\n  }\n else {\n    oldValue=(Integer)cache.get(key);\n    if (oldValue == null) {\n      DBRecord rec=propertyTable.getRecord(key);\n      if (rec != null) {\n        oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n      }\n    }\n  }\n  DBRecord rec=schema.createRecord(key);\n  rec.setIntValue(PROPERTY_VALUE_COL,value);\n  propertyTable.putRecord(rec);\n  cache.put(key,new Integer(value));\n  changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  Integer oldValue=null;\n  long key=addrMap.getKey(addr,true);\n  if (propertyTable == null) {\n    createTable(IntField.INSTANCE);\n  }\n else {\n    oldValue=(Integer)cache.get(key);\n    if (oldValue == null) {\n      DBRecord rec=propertyTable.getRecord(key);\n      if (rec != null) {\n        oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n      }\n    }\n  }\n  DBRecord rec=schema.createRecord(key);\n  rec.setIntValue(PROPERTY_VALUE_COL,value);\n  propertyTable.putRecord(rec);\n  cache.put(key,new Integer(value));\n  changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n}\n catch (IOException e) {\n  errHandler.dbError(e);\n}\n finally {\n  lock.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 124,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 60,
        "startColumnNumber" : 42,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  lock.acquire();\n  try {\n    Integer oldValue=null;\n    long key=addrMap.getKey(addr,true);\n    if (propertyTable == null) {\n      createTable(IntField.INSTANCE);\n    }\n else {\n      oldValue=(Integer)cache.get(key);\n      if (oldValue == null) {\n        DBRecord rec=propertyTable.getRecord(key);\n        if (rec != null) {\n          oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n        }\n      }\n    }\n    DBRecord rec=schema.createRecord(key);\n    rec.setIntValue(PROPERTY_VALUE_COL,value);\n    propertyTable.putRecord(rec);\n    cache.put(key,new Integer(value));\n    changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n  }\n catch (  IOException e) {\n    errHandler.dbError(e);\n  }\n finally {\n    lock.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 944,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * @see ghidra.program.model.util.IntPropertyMap#add(ghidra.program.model.address.Address,int)\n */\n@Override public void add(Address addr,int value){\n  lock.acquire();\n  try {\n    Integer oldValue=null;\n    long key=addrMap.getKey(addr,true);\n    if (propertyTable == null) {\n      createTable(IntField.INSTANCE);\n    }\n else {\n      oldValue=(Integer)cache.get(key);\n      if (oldValue == null) {\n        DBRecord rec=propertyTable.getRecord(key);\n        if (rec != null) {\n          oldValue=new Integer(rec.getIntValue(PROPERTY_VALUE_COL));\n        }\n      }\n    }\n    DBRecord rec=schema.createRecord(key);\n    rec.setIntValue(PROPERTY_VALUE_COL,value);\n    propertyTable.putRecord(rec);\n    cache.put(key,new Integer(value));\n    changeMgr.setPropertyChanged(name,addr,oldValue,new Integer(value));\n  }\n catch (  IOException e) {\n    errHandler.dbError(e);\n  }\n finally {\n    lock.release();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 83,
        "startColumnNumber" : 3,
        "endLineNumber" : 83,
        "endColumnNumber" : 38
      },
      "nodeContext" : "cache.put(key,new Integer(value));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 71,
    "startColumnNumber" : 35,
    "endLineNumber" : 71,
    "endColumnNumber" : 38
  }, {
    "charLength" : 3,
    "startLineNumber" : 73,
    "startColumnNumber" : 44,
    "endLineNumber" : 73,
    "endColumnNumber" : 47
  }, {
    "charLength" : 3,
    "startLineNumber" : 79,
    "startColumnNumber" : 38,
    "endLineNumber" : 79,
    "endColumnNumber" : 41
  }, {
    "charLength" : 3,
    "startLineNumber" : 83,
    "startColumnNumber" : 13,
    "endLineNumber" : 83,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}