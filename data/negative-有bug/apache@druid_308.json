{
  "id" : 308,
  "expression" : "\"type\"",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/integration-tests/src/test/java/org/apache/druid/tests/indexer/AbstractLocalInputSourceParallelIndexTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"type\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 54,
      "startColumnNumber" : 70,
      "endLineNumber" : 54,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 53,
        "startColumnNumber" : 25,
        "endLineNumber" : 54,
        "endColumnNumber" : 118
      },
      "nodeContext" : "new ImmutableMap.Builder<String,Object>().putAll(extraInputFormatMap).put(\"type\",inputFormatDetails.getInputFormatType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 53,
        "startColumnNumber" : 25,
        "endLineNumber" : 55,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new ImmutableMap.Builder<String,Object>().putAll(extraInputFormatMap).put(\"type\",inputFormatDetails.getInputFormatType()).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 73
      },
      "nodeContext" : "inputFormatMap=new ImmutableMap.Builder<String,Object>().putAll(extraInputFormatMap).put(\"type\",inputFormatDetails.getInputFormatType()).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Map inputFormatMap=new ImmutableMap.Builder<String,Object>().putAll(extraInputFormatMap).put(\"type\",inputFormatDetails.getInputFormatType()).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2172,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String indexDatasource=\"wikipedia_index_test_\" + UUID.randomUUID();\n  Map inputFormatMap=new ImmutableMap.Builder<String,Object>().putAll(extraInputFormatMap).put(\"type\",inputFormatDetails.getInputFormatType()).build();\n  try (final Closeable ignored1=unloader(indexDatasource + config.getExtraDatasourceNameSuffix())){\n    final Function<String,String> sqlInputSourcePropsTransform=spec -> {\n      try {\n        spec=StringUtils.replace(spec,\"%%PARTITIONS_SPEC%%\",jsonMapper.writeValueAsString(new DynamicPartitionsSpec(null,null)));\n        spec=StringUtils.replace(spec,\"%%INPUT_SOURCE_FILTER%%\",\"*\" + inputFormatDetails.getFileExtension());\n        spec=StringUtils.replace(spec,\"%%INPUT_SOURCE_BASE_DIR%%\",\"/resources/data/batch_index\" + inputFormatDetails.getFolderSuffix());\n        spec=StringUtils.replace(spec,\"%%INPUT_FORMAT%%\",jsonMapper.writeValueAsString(inputFormatMap));\n        spec=StringUtils.replace(spec,\"%%APPEND_TO_EXISTING%%\",jsonMapper.writeValueAsString(false));\n        spec=StringUtils.replace(spec,\"%%DROP_EXISTING%%\",jsonMapper.writeValueAsString(false));\n        spec=StringUtils.replace(spec,\"%%FORCE_GUARANTEED_ROLLUP%%\",jsonMapper.writeValueAsString(false));\n        return spec;\n      }\n catch (      Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n;\n    doIndexTest(indexDatasource,INDEX_TASK,sqlInputSourcePropsTransform,INDEX_QUERIES_RESOURCE,false,true,true,segmentAvailabilityConfirmationPair);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2386,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void doIndexTest(InputFormatDetails inputFormatDetails,@Nonnull Map<String,Object> extraInputFormatMap,Pair<Boolean,Boolean> segmentAvailabilityConfirmationPair) throws Exception {\n  final String indexDatasource=\"wikipedia_index_test_\" + UUID.randomUUID();\n  Map inputFormatMap=new ImmutableMap.Builder<String,Object>().putAll(extraInputFormatMap).put(\"type\",inputFormatDetails.getInputFormatType()).build();\n  try (final Closeable ignored1=unloader(indexDatasource + config.getExtraDatasourceNameSuffix())){\n    final Function<String,String> sqlInputSourcePropsTransform=spec -> {\n      try {\n        spec=StringUtils.replace(spec,\"%%PARTITIONS_SPEC%%\",jsonMapper.writeValueAsString(new DynamicPartitionsSpec(null,null)));\n        spec=StringUtils.replace(spec,\"%%INPUT_SOURCE_FILTER%%\",\"*\" + inputFormatDetails.getFileExtension());\n        spec=StringUtils.replace(spec,\"%%INPUT_SOURCE_BASE_DIR%%\",\"/resources/data/batch_index\" + inputFormatDetails.getFolderSuffix());\n        spec=StringUtils.replace(spec,\"%%INPUT_FORMAT%%\",jsonMapper.writeValueAsString(inputFormatMap));\n        spec=StringUtils.replace(spec,\"%%APPEND_TO_EXISTING%%\",jsonMapper.writeValueAsString(false));\n        spec=StringUtils.replace(spec,\"%%DROP_EXISTING%%\",jsonMapper.writeValueAsString(false));\n        spec=StringUtils.replace(spec,\"%%FORCE_GUARANTEED_ROLLUP%%\",jsonMapper.writeValueAsString(false));\n        return spec;\n      }\n catch (      Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n;\n    doIndexTest(indexDatasource,INDEX_TASK,sqlInputSourcePropsTransform,INDEX_QUERIES_RESOURCE,false,true,true,segmentAvailabilityConfirmationPair);\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 53,
        "startColumnNumber" : 25,
        "endLineNumber" : 54,
        "endColumnNumber" : 118
      },
      "nodeContext" : "new ImmutableMap.Builder<String,Object>().putAll(extraInputFormatMap).put(\"type\",inputFormatDetails.getInputFormatType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 54,
    "startColumnNumber" : 70,
    "endLineNumber" : 54,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}