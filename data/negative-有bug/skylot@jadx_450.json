{
  "id" : 450,
  "expression" : "true",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-gui/src/main/java/jadx/gui/treemodel/JSources.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 74,
      "startColumnNumber" : 14,
      "endLineNumber" : 74,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 74,
        "startColumnNumber" : 5,
        "endLineNumber" : 74,
        "endColumnNumber" : 18
      },
      "nodeContext" : "repeat=true",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 74,
        "startColumnNumber" : 5,
        "endLineNumber" : 74,
        "endColumnNumber" : 19
      },
      "nodeContext" : "repeat=true;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 64,
        "startColumnNumber" : 74,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JPackage innerPkg=pkg.getInnerPackages().get(0);\n  pkg.getInnerPackages().clear();\n  pkg.getInnerPackages().addAll(innerPkg.getInnerPackages());\n  pkg.getClasses().addAll(innerPkg.getClasses());\n  pkg.setName(pkg.getName() + '.' + innerPkg.getName());\n  innerPkg.getInnerPackages().clear();\n  innerPkg.getClasses().clear();\n  repeat=true;\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (pkg.getInnerPackages().size() == 1 && pkg.getClasses().isEmpty()) {\n  JPackage innerPkg=pkg.getInnerPackages().get(0);\n  pkg.getInnerPackages().clear();\n  pkg.getInnerPackages().addAll(innerPkg.getInnerPackages());\n  pkg.getClasses().addAll(innerPkg.getClasses());\n  pkg.setName(pkg.getName() + '.' + innerPkg.getName());\n  innerPkg.getInnerPackages().clear();\n  innerPkg.getClasses().clear();\n  repeat=true;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 471,
        "startLineNumber" : 63,
        "startColumnNumber" : 40,
        "endLineNumber" : 77,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (pkg.getInnerPackages().size() == 1 && pkg.getClasses().isEmpty()) {\n    JPackage innerPkg=pkg.getInnerPackages().get(0);\n    pkg.getInnerPackages().clear();\n    pkg.getInnerPackages().addAll(innerPkg.getInnerPackages());\n    pkg.getClasses().addAll(innerPkg.getClasses());\n    pkg.setName(pkg.getName() + '.' + innerPkg.getName());\n    innerPkg.getInnerPackages().clear();\n    innerPkg.getClasses().clear();\n    repeat=true;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 63,
        "startColumnNumber" : 3,
        "endLineNumber" : 77,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (JPackage pkg : pkgMap.values()) {\n  if (pkg.getInnerPackages().size() == 1 && pkg.getClasses().isEmpty()) {\n    JPackage innerPkg=pkg.getInnerPackages().get(0);\n    pkg.getInnerPackages().clear();\n    pkg.getInnerPackages().addAll(innerPkg.getInnerPackages());\n    pkg.getClasses().addAll(innerPkg.getClasses());\n    pkg.setName(pkg.getName() + '.' + innerPkg.getName());\n    innerPkg.getInnerPackages().clear();\n    innerPkg.getClasses().clear();\n    repeat=true;\n    break;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 88,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 61,
        "startColumnNumber" : 5,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  repeat=false;\n  for (  JPackage pkg : pkgMap.values()) {\n    if (pkg.getInnerPackages().size() == 1 && pkg.getClasses().isEmpty()) {\n      JPackage innerPkg=pkg.getInnerPackages().get(0);\n      pkg.getInnerPackages().clear();\n      pkg.getInnerPackages().addAll(innerPkg.getInnerPackages());\n      pkg.getClasses().addAll(innerPkg.getClasses());\n      pkg.setName(pkg.getName() + '.' + innerPkg.getName());\n      innerPkg.getInnerPackages().clear();\n      innerPkg.getClasses().clear();\n      repeat=true;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 19
      },
      "nodeContext" : "do {\n  repeat=false;\n  for (  JPackage pkg : pkgMap.values()) {\n    if (pkg.getInnerPackages().size() == 1 && pkg.getClasses().isEmpty()) {\n      JPackage innerPkg=pkg.getInnerPackages().get(0);\n      pkg.getInnerPackages().clear();\n      pkg.getInnerPackages().addAll(innerPkg.getInnerPackages());\n      pkg.getClasses().addAll(innerPkg.getClasses());\n      pkg.setName(pkg.getName() + '.' + innerPkg.getName());\n      innerPkg.getInnerPackages().clear();\n      innerPkg.getClasses().clear();\n      repeat=true;\n      break;\n    }\n  }\n}\n while (repeat);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 95,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1482,
        "startLineNumber" : 54,
        "startColumnNumber" : 65,
        "endLineNumber" : 101,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<String,JPackage> pkgMap=new HashMap<>();\n  for (  JavaPackage pkg : packages) {\n    addPackage(pkgMap,new JPackage(pkg,wrapper));\n  }\n  boolean repeat;\n  do {\n    repeat=false;\n    for (    JPackage pkg : pkgMap.values()) {\n      if (pkg.getInnerPackages().size() == 1 && pkg.getClasses().isEmpty()) {\n        JPackage innerPkg=pkg.getInnerPackages().get(0);\n        pkg.getInnerPackages().clear();\n        pkg.getInnerPackages().addAll(innerPkg.getInnerPackages());\n        pkg.getClasses().addAll(innerPkg.getClasses());\n        pkg.setName(pkg.getName() + '.' + innerPkg.getName());\n        innerPkg.getInnerPackages().clear();\n        innerPkg.getClasses().clear();\n        repeat=true;\n        break;\n      }\n    }\n  }\n while (repeat);\n  for (Iterator<Map.Entry<String,JPackage>> it=pkgMap.entrySet().iterator(); it.hasNext(); ) {\n    JPackage pkg=it.next().getValue();\n    if (pkg.getInnerPackages().isEmpty() && pkg.getClasses().isEmpty()) {\n      it.remove();\n    }\n  }\n  Set<JPackage> innerPackages=Collections.newSetFromMap(new IdentityHashMap<>());\n  for (  JPackage pkg : pkgMap.values()) {\n    innerPackages.addAll(pkg.getInnerPackages());\n  }\n  List<JPackage> rootPkgs=new ArrayList<>();\n  for (  JPackage pkg : pkgMap.values()) {\n    if (!innerPackages.contains(pkg)) {\n      rootPkgs.add(pkg);\n    }\n  }\n  Collections.sort(rootPkgs);\n  return rootPkgs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 253,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 48,
        "startColumnNumber" : 1,
        "endLineNumber" : 101,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Convert packages list to hierarchical packages representation\n * @param packages input packages list\n * @return root packages\n */\nList<JPackage> getHierarchyPackages(List<JavaPackage> packages){\n  Map<String,JPackage> pkgMap=new HashMap<>();\n  for (  JavaPackage pkg : packages) {\n    addPackage(pkgMap,new JPackage(pkg,wrapper));\n  }\n  boolean repeat;\n  do {\n    repeat=false;\n    for (    JPackage pkg : pkgMap.values()) {\n      if (pkg.getInnerPackages().size() == 1 && pkg.getClasses().isEmpty()) {\n        JPackage innerPkg=pkg.getInnerPackages().get(0);\n        pkg.getInnerPackages().clear();\n        pkg.getInnerPackages().addAll(innerPkg.getInnerPackages());\n        pkg.getClasses().addAll(innerPkg.getClasses());\n        pkg.setName(pkg.getName() + '.' + innerPkg.getName());\n        innerPkg.getInnerPackages().clear();\n        innerPkg.getClasses().clear();\n        repeat=true;\n        break;\n      }\n    }\n  }\n while (repeat);\n  for (Iterator<Map.Entry<String,JPackage>> it=pkgMap.entrySet().iterator(); it.hasNext(); ) {\n    JPackage pkg=it.next().getValue();\n    if (pkg.getInnerPackages().isEmpty() && pkg.getClasses().isEmpty()) {\n      it.remove();\n    }\n  }\n  Set<JPackage> innerPackages=Collections.newSetFromMap(new IdentityHashMap<>());\n  for (  JPackage pkg : pkgMap.values()) {\n    innerPackages.addAll(pkg.getInnerPackages());\n  }\n  List<JPackage> rootPkgs=new ArrayList<>();\n  for (  JPackage pkg : pkgMap.values()) {\n    if (!innerPackages.contains(pkg)) {\n      rootPkgs.add(pkg);\n    }\n  }\n  Collections.sort(rootPkgs);\n  return rootPkgs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 74,
        "startColumnNumber" : 5,
        "endLineNumber" : 74,
        "endColumnNumber" : 19
      },
      "nodeContext" : "repeat=true;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 74,
    "startColumnNumber" : 14,
    "endLineNumber" : 74,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}