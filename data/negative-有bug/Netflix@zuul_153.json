{
  "id" : 153,
  "expression" : "cause.getMessage().contains(\"server\")",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/NettyRequestAttemptFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cause.getMessage().contains(\"server\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 71,
      "startColumnNumber" : 54,
      "endLineNumber" : 71,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 91
      },
      "nodeContext" : "cause instanceof IllegalStateException && cause.getMessage().contains(\"server\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cause instanceof IllegalStateException && cause.getMessage().contains(\"server\")) {\n  LOG.warn(\"IllegalStateException mapped to NO_AVAILABLE_SERVERS\",cause);\n  return NO_AVAILABLE_SERVERS;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1261,
        "startLineNumber" : 43,
        "startColumnNumber" : 68,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (t instanceof ReadTimeoutException) {\n    return READ_TIMEOUT;\n  }\n  if (t instanceof OriginConcurrencyExceededException) {\n    return ORIGIN_CONCURRENCY_EXCEEDED;\n  }\n  if (t instanceof OriginConnectException) {\n    return ((OriginConnectException)t).getErrorType();\n  }\n  if (t instanceof OutboundException) {\n    return ((OutboundException)t).getOutboundErrorType();\n  }\n  if (t instanceof Errors.NativeIoException && Errors.ERRNO_ECONNRESET_NEGATIVE == ((Errors.NativeIoException)t).expectedErr()) {\n    LOG.warn(\"ERRNO_ECONNRESET_NEGATIVE mapped to RESET_CONNECTION\",t);\n    return RESET_CONNECTION;\n  }\n  if (t instanceof ClosedChannelException) {\n    return RESET_CONNECTION;\n  }\n  final Throwable cause=t.getCause();\n  if (cause instanceof IllegalStateException && cause.getMessage().contains(\"server\")) {\n    LOG.warn(\"IllegalStateException mapped to NO_AVAILABLE_SERVERS\",cause);\n    return NO_AVAILABLE_SERVERS;\n  }\n  return OTHER;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1325,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ErrorType mapNettyToOutboundErrorType(final Throwable t){\n  if (t instanceof ReadTimeoutException) {\n    return READ_TIMEOUT;\n  }\n  if (t instanceof OriginConcurrencyExceededException) {\n    return ORIGIN_CONCURRENCY_EXCEEDED;\n  }\n  if (t instanceof OriginConnectException) {\n    return ((OriginConnectException)t).getErrorType();\n  }\n  if (t instanceof OutboundException) {\n    return ((OutboundException)t).getOutboundErrorType();\n  }\n  if (t instanceof Errors.NativeIoException && Errors.ERRNO_ECONNRESET_NEGATIVE == ((Errors.NativeIoException)t).expectedErr()) {\n    LOG.warn(\"ERRNO_ECONNRESET_NEGATIVE mapped to RESET_CONNECTION\",t);\n    return RESET_CONNECTION;\n  }\n  if (t instanceof ClosedChannelException) {\n    return RESET_CONNECTION;\n  }\n  final Throwable cause=t.getCause();\n  if (cause instanceof IllegalStateException && cause.getMessage().contains(\"server\")) {\n    LOG.warn(\"IllegalStateException mapped to NO_AVAILABLE_SERVERS\",cause);\n    return NO_AVAILABLE_SERVERS;\n  }\n  return OTHER;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 91
      },
      "nodeContext" : "cause instanceof IllegalStateException && cause.getMessage().contains(\"server\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 71,
    "startColumnNumber" : 54,
    "endLineNumber" : 71,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}