{
  "id" : 102,
  "expression" : "new Exception(\"Checkpoint declined\")",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Exception(\"Checkpoint declined\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 330,
      "startColumnNumber" : 60,
      "endLineNumber" : 330,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 330,
        "startColumnNumber" : 16,
        "endLineNumber" : 330,
        "endColumnNumber" : 97
      },
      "nodeContext" : "cleanup(snapshotFutures,metadata,metrics,new Exception(\"Checkpoint declined\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 330,
        "startColumnNumber" : 16,
        "endLineNumber" : 330,
        "endColumnNumber" : 98
      },
      "nodeContext" : "cleanup(snapshotFutures,metadata,metrics,new Exception(\"Checkpoint declined\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 329,
        "startColumnNumber" : 19,
        "endLineNumber" : 331,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  cleanup(snapshotFutures,metadata,metrics,new Exception(\"Checkpoint declined\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 537,
        "startLineNumber" : 320,
        "startColumnNumber" : 12,
        "endLineNumber" : 331,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (takeSnapshotSync(snapshotFutures,metadata,metrics,options,operatorChain,isRunning)) {\n  finishAndReportAsync(snapshotFutures,metadata,metrics,operatorChain.isTaskDeployedAsFinished(),isTaskFinished,isRunning);\n}\n else {\n  cleanup(snapshotFutures,metadata,metrics,new Exception(\"Checkpoint declined\"));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 561,
        "startLineNumber" : 319,
        "startColumnNumber" : 12,
        "endLineNumber" : 332,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (takeSnapshotSync(snapshotFutures,metadata,metrics,options,operatorChain,isRunning)) {\n    finishAndReportAsync(snapshotFutures,metadata,metrics,operatorChain.isTaskDeployedAsFinished(),isTaskFinished,isRunning);\n  }\n else {\n    cleanup(snapshotFutures,metadata,metrics,new Exception(\"Checkpoint declined\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 319,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (takeSnapshotSync(snapshotFutures,metadata,metrics,options,operatorChain,isRunning)) {\n    finishAndReportAsync(snapshotFutures,metadata,metrics,operatorChain.isTaskDeployedAsFinished(),isTaskFinished,isRunning);\n  }\n else {\n    cleanup(snapshotFutures,metadata,metrics,new Exception(\"Checkpoint declined\"));\n  }\n}\n catch (Exception ex) {\n  cleanup(snapshotFutures,metadata,metrics,ex);\n  throw ex;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3725,
        "startLineNumber" : 255,
        "startColumnNumber" : 29,
        "endLineNumber" : 336,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkNotNull(options);\n  checkNotNull(metrics);\n  if (lastCheckpointId >= metadata.getCheckpointId()) {\n    LOG.info(\"Out of order checkpoint barrier (aborted previously?): {} >= {}\",lastCheckpointId,metadata.getCheckpointId());\n    channelStateWriter.abort(metadata.getCheckpointId(),new CancellationException(),true);\n    checkAndClearAbortedStatus(metadata.getCheckpointId());\n    return;\n  }\n  logCheckpointProcessingDelay(metadata);\n  lastCheckpointId=metadata.getCheckpointId();\n  if (checkAndClearAbortedStatus(metadata.getCheckpointId())) {\n    operatorChain.broadcastEvent(new CancelCheckpointMarker(metadata.getCheckpointId()));\n    LOG.info(\"Checkpoint {} has been notified as aborted, would not trigger any checkpoint.\",metadata.getCheckpointId());\n    return;\n  }\n  if (options.getAlignment() == CheckpointOptions.AlignmentType.FORCED_ALIGNED) {\n    options=options.withUnalignedSupported();\n    initInputsCheckpoint(metadata.getCheckpointId(),options);\n  }\n  operatorChain.prepareSnapshotPreBarrier(metadata.getCheckpointId());\n  operatorChain.broadcastEvent(new CheckpointBarrier(metadata.getCheckpointId(),metadata.getTimestamp(),options),options.isUnalignedCheckpoint());\n  if (options.isUnalignedCheckpoint()) {\n    channelStateWriter.finishOutput(metadata.getCheckpointId());\n  }\n  Map<OperatorID,OperatorSnapshotFutures> snapshotFutures=new HashMap<>(operatorChain.getNumberOfOperators());\n  try {\n    if (takeSnapshotSync(snapshotFutures,metadata,metrics,options,operatorChain,isRunning)) {\n      finishAndReportAsync(snapshotFutures,metadata,metrics,operatorChain.isTaskDeployedAsFinished(),isTaskFinished,isRunning);\n    }\n else {\n      cleanup(snapshotFutures,metadata,metrics,new Exception(\"Checkpoint declined\"));\n    }\n  }\n catch (  Exception ex) {\n    cleanup(snapshotFutures,metadata,metrics,ex);\n    throw ex;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4047,
        "startLineNumber" : 247,
        "startColumnNumber" : 4,
        "endLineNumber" : 336,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void checkpointState(CheckpointMetaData metadata,CheckpointOptions options,CheckpointMetricsBuilder metrics,OperatorChain<?,?> operatorChain,boolean isTaskFinished,Supplier<Boolean> isRunning) throws Exception {\n  checkNotNull(options);\n  checkNotNull(metrics);\n  if (lastCheckpointId >= metadata.getCheckpointId()) {\n    LOG.info(\"Out of order checkpoint barrier (aborted previously?): {} >= {}\",lastCheckpointId,metadata.getCheckpointId());\n    channelStateWriter.abort(metadata.getCheckpointId(),new CancellationException(),true);\n    checkAndClearAbortedStatus(metadata.getCheckpointId());\n    return;\n  }\n  logCheckpointProcessingDelay(metadata);\n  lastCheckpointId=metadata.getCheckpointId();\n  if (checkAndClearAbortedStatus(metadata.getCheckpointId())) {\n    operatorChain.broadcastEvent(new CancelCheckpointMarker(metadata.getCheckpointId()));\n    LOG.info(\"Checkpoint {} has been notified as aborted, would not trigger any checkpoint.\",metadata.getCheckpointId());\n    return;\n  }\n  if (options.getAlignment() == CheckpointOptions.AlignmentType.FORCED_ALIGNED) {\n    options=options.withUnalignedSupported();\n    initInputsCheckpoint(metadata.getCheckpointId(),options);\n  }\n  operatorChain.prepareSnapshotPreBarrier(metadata.getCheckpointId());\n  operatorChain.broadcastEvent(new CheckpointBarrier(metadata.getCheckpointId(),metadata.getTimestamp(),options),options.isUnalignedCheckpoint());\n  if (options.isUnalignedCheckpoint()) {\n    channelStateWriter.finishOutput(metadata.getCheckpointId());\n  }\n  Map<OperatorID,OperatorSnapshotFutures> snapshotFutures=new HashMap<>(operatorChain.getNumberOfOperators());\n  try {\n    if (takeSnapshotSync(snapshotFutures,metadata,metrics,options,operatorChain,isRunning)) {\n      finishAndReportAsync(snapshotFutures,metadata,metrics,operatorChain.isTaskDeployedAsFinished(),isTaskFinished,isRunning);\n    }\n else {\n      cleanup(snapshotFutures,metadata,metrics,new Exception(\"Checkpoint declined\"));\n    }\n  }\n catch (  Exception ex) {\n    cleanup(snapshotFutures,metadata,metrics,ex);\n    throw ex;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 242,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 330,
        "startColumnNumber" : 16,
        "endLineNumber" : 330,
        "endColumnNumber" : 98
      },
      "nodeContext" : "cleanup(snapshotFutures,metadata,metrics,new Exception(\"Checkpoint declined\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.Exception"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 330,
    "startColumnNumber" : 60,
    "endLineNumber" : 330,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ ]
}