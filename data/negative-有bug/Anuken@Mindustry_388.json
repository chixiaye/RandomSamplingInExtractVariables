{
  "id" : 388,
  "expression" : "230",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ui/dialogs/MapPlayDialog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "230",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 69,
      "startColumnNumber" : 141,
      "endLineNumber" : 69,
      "endColumnNumber" : 144
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 145
      },
      "nodeContext" : "cont.button(\"@customize\",Icon.settings,() -> dialog.show(rules,() -> rules=map.applyRules(selectedGamemode))).height(50f).width(230)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 146
      },
      "nodeContext" : "cont.button(\"@customize\",Icon.settings,() -> dialog.show(rules,() -> rules=map.applyRules(selectedGamemode))).height(50f).width(230);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1997,
        "startLineNumber" : 33,
        "startColumnNumber" : 29,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.lastMap=map;\n  title.setText(map.name());\n  cont.clearChildren();\n  if (!selectedGamemode.valid(map)) {\n    selectedGamemode=Structs.find(Gamemode.all,m -> m.valid(map));\n    if (selectedGamemode == null) {\n      selectedGamemode=Gamemode.survival;\n    }\n  }\n  rules=map.applyRules(selectedGamemode);\n  Table selmode=new Table();\n  selmode.add(\"@level.mode\").colspan(4);\n  selmode.row();\n  int i=0;\n  Table modes=new Table();\n  for (  Gamemode mode : Gamemode.values()) {\n    if (mode.hidden)     continue;\n    modes.button(mode.toString(),Styles.togglet,() -> {\n      selectedGamemode=mode;\n      rules=map.applyRules(mode);\n    }\n).update(b -> b.setChecked(selectedGamemode == mode)).size(140f,54f).disabled(!mode.valid(map));\n    if (i++ % 2 == 1)     modes.row();\n  }\n  selmode.add(modes);\n  selmode.button(\"?\",this::displayGameModeHelp).width(50f).fillY().padLeft(18f);\n  cont.add(selmode);\n  cont.row();\n  cont.button(\"@customize\",Icon.settings,() -> dialog.show(rules,() -> rules=map.applyRules(selectedGamemode))).height(50f).width(230);\n  cont.row();\n  cont.add(new BorderImage(map.safeTexture(),3f)).size(mobile && !Core.graphics.isPortrait() ? 150f : 250f).get().setScaling(Scaling.fit);\n  if (Gamemode.survival.valid(map)) {\n    cont.row();\n    cont.label((() -> Core.bundle.format(\"level.highscore\",map.getHightScore()))).pad(3f);\n  }\n  buttons.clearChildren();\n  addCloseButton();\n  buttons.button(\"@play\",Icon.play,() -> {\n    control.playMap(map,rules);\n    hide();\n    ui.custom.hide();\n  }\n).size(210f,64f);\n  show();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2022,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void show(Map map){\n  this.lastMap=map;\n  title.setText(map.name());\n  cont.clearChildren();\n  if (!selectedGamemode.valid(map)) {\n    selectedGamemode=Structs.find(Gamemode.all,m -> m.valid(map));\n    if (selectedGamemode == null) {\n      selectedGamemode=Gamemode.survival;\n    }\n  }\n  rules=map.applyRules(selectedGamemode);\n  Table selmode=new Table();\n  selmode.add(\"@level.mode\").colspan(4);\n  selmode.row();\n  int i=0;\n  Table modes=new Table();\n  for (  Gamemode mode : Gamemode.values()) {\n    if (mode.hidden)     continue;\n    modes.button(mode.toString(),Styles.togglet,() -> {\n      selectedGamemode=mode;\n      rules=map.applyRules(mode);\n    }\n).update(b -> b.setChecked(selectedGamemode == mode)).size(140f,54f).disabled(!mode.valid(map));\n    if (i++ % 2 == 1)     modes.row();\n  }\n  selmode.add(modes);\n  selmode.button(\"?\",this::displayGameModeHelp).width(50f).fillY().padLeft(18f);\n  cont.add(selmode);\n  cont.row();\n  cont.button(\"@customize\",Icon.settings,() -> dialog.show(rules,() -> rules=map.applyRules(selectedGamemode))).height(50f).width(230);\n  cont.row();\n  cont.add(new BorderImage(map.safeTexture(),3f)).size(mobile && !Core.graphics.isPortrait() ? 150f : 250f).get().setScaling(Scaling.fit);\n  if (Gamemode.survival.valid(map)) {\n    cont.row();\n    cont.label((() -> Core.bundle.format(\"level.highscore\",map.getHightScore()))).pad(3f);\n  }\n  buttons.clearChildren();\n  addCloseButton();\n  buttons.button(\"@play\",Icon.play,() -> {\n    control.playMap(map,rules);\n    hide();\n    ui.custom.hide();\n  }\n).size(210f,64f);\n  show();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 330,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 146
      },
      "nodeContext" : "cont.button(\"@customize\",Icon.settings,() -> dialog.show(rules,() -> rules=map.applyRules(selectedGamemode))).height(50f).width(230);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 10
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 69,
    "startColumnNumber" : 141,
    "endLineNumber" : 69,
    "endColumnNumber" : 144
  } ],
  "layoutRelationDataList" : [ ]
}