{
  "id" : 307,
  "expression" : "\"shouldn't have thrown exception\"",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-common/src/test/java/org/apache/pulsar/common/util/ObjectMapperFactoryTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"shouldn't have thrown exception\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 41,
      "startColumnNumber" : 24,
      "endLineNumber" : 41,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Assert.fail(\"shouldn't have thrown exception\",ex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Assert.fail(\"shouldn't have thrown exception\",ex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 40,
        "startColumnNumber" : 31,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.fail(\"shouldn't have thrown exception\",ex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 40,
        "startColumnNumber" : 10,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception ex) {\n  Assert.fail(\"shouldn't have thrown exception\",ex);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  BacklogQuota backlogQuota=objectMapper.readValue(json,BacklogQuota.class);\n  Assert.assertEquals(backlogQuota.getLimitSize(),10);\n  Assert.assertEquals(backlogQuota.getLimitTime(),0);\n  Assert.assertEquals(backlogQuota.getPolicy(),BacklogQuota.RetentionPolicy.producer_request_hold);\n}\n catch (Exception ex) {\n  Assert.fail(\"shouldn't have thrown exception\",ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 40,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ObjectMapper objectMapper=ObjectMapperFactory.getThreadLocal();\n  String json=\"{\\\"limit\\\":10,\\\"limitTime\\\":0,\\\"policy\\\":\\\"producer_request_hold\\\"}\";\n  try {\n    BacklogQuota backlogQuota=objectMapper.readValue(json,BacklogQuota.class);\n    Assert.assertEquals(backlogQuota.getLimitSize(),10);\n    Assert.assertEquals(backlogQuota.getLimitTime(),0);\n    Assert.assertEquals(backlogQuota.getPolicy(),BacklogQuota.RetentionPolicy.producer_request_hold);\n  }\n catch (  Exception ex) {\n    Assert.fail(\"shouldn't have thrown exception\",ex);\n  }\n  try {\n    String expectJson=\"{\\\"limitSize\\\":10,\\\"limitTime\\\":0,\\\"policy\\\":\\\"producer_request_hold\\\"}\";\n    BacklogQuota backlogQuota=BacklogQuota.builder().limitSize(10).limitTime(0).retentionPolicy(BacklogQuota.RetentionPolicy.producer_request_hold).build();\n    String writeJson=objectMapper.writeValueAsString(backlogQuota);\n    Assert.assertEquals(expectJson,writeJson);\n  }\n catch (  Exception ex) {\n    Assert.fail(\"shouldn't have thrown exception\",ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBacklogQuotaMixIn(){\n  ObjectMapper objectMapper=ObjectMapperFactory.getThreadLocal();\n  String json=\"{\\\"limit\\\":10,\\\"limitTime\\\":0,\\\"policy\\\":\\\"producer_request_hold\\\"}\";\n  try {\n    BacklogQuota backlogQuota=objectMapper.readValue(json,BacklogQuota.class);\n    Assert.assertEquals(backlogQuota.getLimitSize(),10);\n    Assert.assertEquals(backlogQuota.getLimitTime(),0);\n    Assert.assertEquals(backlogQuota.getPolicy(),BacklogQuota.RetentionPolicy.producer_request_hold);\n  }\n catch (  Exception ex) {\n    Assert.fail(\"shouldn't have thrown exception\",ex);\n  }\n  try {\n    String expectJson=\"{\\\"limitSize\\\":10,\\\"limitTime\\\":0,\\\"policy\\\":\\\"producer_request_hold\\\"}\";\n    BacklogQuota backlogQuota=BacklogQuota.builder().limitSize(10).limitTime(0).retentionPolicy(BacklogQuota.RetentionPolicy.producer_request_hold).build();\n    String writeJson=objectMapper.writeValueAsString(backlogQuota);\n    Assert.assertEquals(expectJson,writeJson);\n  }\n catch (  Exception ex) {\n    Assert.fail(\"shouldn't have thrown exception\",ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Assert.fail(\"shouldn't have thrown exception\",ex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"shouldn't have thrown exception\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 54,
      "startColumnNumber" : 24,
      "endLineNumber" : 54,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Assert.fail(\"shouldn't have thrown exception\",ex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Assert.fail(\"shouldn't have thrown exception\",ex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 53,
        "startColumnNumber" : 31,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.fail(\"shouldn't have thrown exception\",ex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 53,
        "startColumnNumber" : 10,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception ex) {\n  Assert.fail(\"shouldn't have thrown exception\",ex);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 604,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String expectJson=\"{\\\"limitSize\\\":10,\\\"limitTime\\\":0,\\\"policy\\\":\\\"producer_request_hold\\\"}\";\n  BacklogQuota backlogQuota=BacklogQuota.builder().limitSize(10).limitTime(0).retentionPolicy(BacklogQuota.RetentionPolicy.producer_request_hold).build();\n  String writeJson=objectMapper.writeValueAsString(backlogQuota);\n  Assert.assertEquals(expectJson,writeJson);\n}\n catch (Exception ex) {\n  Assert.fail(\"shouldn't have thrown exception\",ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 40,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ObjectMapper objectMapper=ObjectMapperFactory.getThreadLocal();\n  String json=\"{\\\"limit\\\":10,\\\"limitTime\\\":0,\\\"policy\\\":\\\"producer_request_hold\\\"}\";\n  try {\n    BacklogQuota backlogQuota=objectMapper.readValue(json,BacklogQuota.class);\n    Assert.assertEquals(backlogQuota.getLimitSize(),10);\n    Assert.assertEquals(backlogQuota.getLimitTime(),0);\n    Assert.assertEquals(backlogQuota.getPolicy(),BacklogQuota.RetentionPolicy.producer_request_hold);\n  }\n catch (  Exception ex) {\n    Assert.fail(\"shouldn't have thrown exception\",ex);\n  }\n  try {\n    String expectJson=\"{\\\"limitSize\\\":10,\\\"limitTime\\\":0,\\\"policy\\\":\\\"producer_request_hold\\\"}\";\n    BacklogQuota backlogQuota=BacklogQuota.builder().limitSize(10).limitTime(0).retentionPolicy(BacklogQuota.RetentionPolicy.producer_request_hold).build();\n    String writeJson=objectMapper.writeValueAsString(backlogQuota);\n    Assert.assertEquals(expectJson,writeJson);\n  }\n catch (  Exception ex) {\n    Assert.fail(\"shouldn't have thrown exception\",ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBacklogQuotaMixIn(){\n  ObjectMapper objectMapper=ObjectMapperFactory.getThreadLocal();\n  String json=\"{\\\"limit\\\":10,\\\"limitTime\\\":0,\\\"policy\\\":\\\"producer_request_hold\\\"}\";\n  try {\n    BacklogQuota backlogQuota=objectMapper.readValue(json,BacklogQuota.class);\n    Assert.assertEquals(backlogQuota.getLimitSize(),10);\n    Assert.assertEquals(backlogQuota.getLimitTime(),0);\n    Assert.assertEquals(backlogQuota.getPolicy(),BacklogQuota.RetentionPolicy.producer_request_hold);\n  }\n catch (  Exception ex) {\n    Assert.fail(\"shouldn't have thrown exception\",ex);\n  }\n  try {\n    String expectJson=\"{\\\"limitSize\\\":10,\\\"limitTime\\\":0,\\\"policy\\\":\\\"producer_request_hold\\\"}\";\n    BacklogQuota backlogQuota=BacklogQuota.builder().limitSize(10).limitTime(0).retentionPolicy(BacklogQuota.RetentionPolicy.producer_request_hold).build();\n    String writeJson=objectMapper.writeValueAsString(backlogQuota);\n    Assert.assertEquals(expectJson,writeJson);\n  }\n catch (  Exception ex) {\n    Assert.fail(\"shouldn't have thrown exception\",ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Assert.fail(\"shouldn't have thrown exception\",ex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 41,
    "startColumnNumber" : 24,
    "endLineNumber" : 41,
    "endColumnNumber" : 57
  }, {
    "charLength" : 33,
    "startLineNumber" : 54,
    "startColumnNumber" : 24,
    "endLineNumber" : 54,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}