{
  "id" : 372,
  "expression" : "in.read(b)",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/buildScripts/src/lombok/website/CompileChangelog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "in.read(b)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 23,
      "startColumnNumber" : 12,
      "endLineNumber" : 23,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 22
      },
      "nodeContext" : "r=in.read(b)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 23
      },
      "nodeContext" : "int r=in.read(b);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 22,
        "startColumnNumber" : 16,
        "endLineNumber" : 26,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  int r=in.read(b);\n  if (r == -1)   break;\n  out.write(b,0,r);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 22,
        "startColumnNumber" : 3,
        "endLineNumber" : 26,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (true) {\n  int r=in.read(b);\n  if (r == -1)   break;\n  out.write(b,0,r);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 17,
        "startColumnNumber" : 6,
        "endLineNumber" : 36,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FileInputStream in=new FileInputStream(fileIn);\n  ByteArrayOutputStream out=new ByteArrayOutputStream();\n  byte[] b=new byte[65536];\n  while (true) {\n    int r=in.read(b);\n    if (r == -1)     break;\n    out.write(b,0,r);\n  }\n  in.close();\n  String markdown=new String(out.toByteArray(),\"UTF-8\");\n  String result=edge ? buildEdge(markdown,version) : build(markdown);\n  FileOutputStream file=new FileOutputStream(fileOut);\n  file.write(result.getBytes(\"UTF-8\"));\n  file.close();\n  System.exit(0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 616,
        "startLineNumber" : 17,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  FileInputStream in=new FileInputStream(fileIn);\n  ByteArrayOutputStream out=new ByteArrayOutputStream();\n  byte[] b=new byte[65536];\n  while (true) {\n    int r=in.read(b);\n    if (r == -1)     break;\n    out.write(b,0,r);\n  }\n  in.close();\n  String markdown=new String(out.toByteArray(),\"UTF-8\");\n  String result=edge ? buildEdge(markdown,version) : build(markdown);\n  FileOutputStream file=new FileOutputStream(fileOut);\n  file.write(result.getBytes(\"UTF-8\"));\n  file.close();\n  System.exit(0);\n}\n catch (Throwable e) {\n  e.printStackTrace();\n  System.exit(1);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 125,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 11,
        "startColumnNumber" : 40,
        "endLineNumber" : 40,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String fileIn=args[0];\n  String fileOut=args[1];\n  boolean edge=args.length > 3 && \"-edge\".equals(args[2]);\n  String version=edge ? args[3] : null;\n  try {\n    FileInputStream in=new FileInputStream(fileIn);\n    ByteArrayOutputStream out=new ByteArrayOutputStream();\n    byte[] b=new byte[65536];\n    while (true) {\n      int r=in.read(b);\n      if (r == -1)       break;\n      out.write(b,0,r);\n    }\n    in.close();\n    String markdown=new String(out.toByteArray(),\"UTF-8\");\n    String result=edge ? buildEdge(markdown,version) : build(markdown);\n    FileOutputStream file=new FileOutputStream(fileOut);\n    file.write(result.getBytes(\"UTF-8\"));\n    file.close();\n    System.exit(0);\n  }\n catch (  Throwable e) {\n    e.printStackTrace();\n    System.exit(1);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 11,
        "startColumnNumber" : 1,
        "endLineNumber" : 40,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void main(String[] args){\n  String fileIn=args[0];\n  String fileOut=args[1];\n  boolean edge=args.length > 3 && \"-edge\".equals(args[2]);\n  String version=edge ? args[3] : null;\n  try {\n    FileInputStream in=new FileInputStream(fileIn);\n    ByteArrayOutputStream out=new ByteArrayOutputStream();\n    byte[] b=new byte[65536];\n    while (true) {\n      int r=in.read(b);\n      if (r == -1)       break;\n      out.write(b,0,r);\n    }\n    in.close();\n    String markdown=new String(out.toByteArray(),\"UTF-8\");\n    String result=edge ? buildEdge(markdown,version) : build(markdown);\n    FileOutputStream file=new FileOutputStream(fileOut);\n    file.write(result.getBytes(\"UTF-8\"));\n    file.close();\n    System.exit(0);\n  }\n catch (  Throwable e) {\n    e.printStackTrace();\n    System.exit(1);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 23
      },
      "nodeContext" : "int r=in.read(b);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 23,
    "startColumnNumber" : 12,
    "endLineNumber" : 23,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}