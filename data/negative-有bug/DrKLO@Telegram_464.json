{
  "id" : 464,
  "expression" : "diff",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/audio/Sonic.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "diff",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 248,
      "startColumnNumber" : 10,
      "endLineNumber" : 248,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 248,
        "startColumnNumber" : 10,
        "endLineNumber" : 248,
        "endColumnNumber" : 27
      },
      "nodeContext" : "diff * bestPeriod",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 248,
        "startColumnNumber" : 10,
        "endLineNumber" : 248,
        "endColumnNumber" : 46
      },
      "nodeContext" : "diff * bestPeriod < minDiff * period",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 248,
        "startColumnNumber" : 6,
        "endLineNumber" : 251,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (diff * bestPeriod < minDiff * period) {\n  minDiff=diff;\n  bestPeriod=period;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 238,
        "startColumnNumber" : 64,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int diff=0;\n  for (int i=0; i < period; i++) {\n    short sVal=samples[position + i];\n    short pVal=samples[position + period + i];\n    diff+=Math.abs(sVal - pVal);\n  }\n  if (diff * bestPeriod < minDiff * period) {\n    minDiff=diff;\n    bestPeriod=period;\n  }\n  if (diff * worstPeriod > maxDiff * period) {\n    maxDiff=diff;\n    worstPeriod=period;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int period=minPeriod; period <= maxPeriod; period++) {\n  int diff=0;\n  for (int i=0; i < period; i++) {\n    short sVal=samples[position + i];\n    short pVal=samples[position + period + i];\n    diff+=Math.abs(sVal - pVal);\n  }\n  if (diff * bestPeriod < minDiff * period) {\n    minDiff=diff;\n    bestPeriod=period;\n  }\n  if (diff * worstPeriod > maxDiff * period) {\n    maxDiff=diff;\n    worstPeriod=period;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1098,
        "startLineNumber" : 230,
        "startColumnNumber" : 98,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int bestPeriod=0;\n  int worstPeriod=255;\n  int minDiff=1;\n  int maxDiff=0;\n  position*=channelCount;\n  for (int period=minPeriod; period <= maxPeriod; period++) {\n    int diff=0;\n    for (int i=0; i < period; i++) {\n      short sVal=samples[position + i];\n      short pVal=samples[position + period + i];\n      diff+=Math.abs(sVal - pVal);\n    }\n    if (diff * bestPeriod < minDiff * period) {\n      minDiff=diff;\n      bestPeriod=period;\n    }\n    if (diff * worstPeriod > maxDiff * period) {\n      maxDiff=diff;\n      worstPeriod=period;\n    }\n  }\n  this.minDiff=minDiff / bestPeriod;\n  this.maxDiff=maxDiff / worstPeriod;\n  return bestPeriod;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1194,
        "startLineNumber" : 230,
        "startColumnNumber" : 2,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private int findPitchPeriodInRange(short[] samples,int position,int minPeriod,int maxPeriod){\n  int bestPeriod=0;\n  int worstPeriod=255;\n  int minDiff=1;\n  int maxDiff=0;\n  position*=channelCount;\n  for (int period=minPeriod; period <= maxPeriod; period++) {\n    int diff=0;\n    for (int i=0; i < period; i++) {\n      short sVal=samples[position + i];\n      short pVal=samples[position + period + i];\n      diff+=Math.abs(sVal - pVal);\n    }\n    if (diff * bestPeriod < minDiff * period) {\n      minDiff=diff;\n      bestPeriod=period;\n    }\n    if (diff * worstPeriod > maxDiff * period) {\n      maxDiff=diff;\n      worstPeriod=period;\n    }\n  }\n  this.minDiff=minDiff / bestPeriod;\n  this.maxDiff=maxDiff / worstPeriod;\n  return bestPeriod;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 248,
        "startColumnNumber" : 10,
        "endLineNumber" : 248,
        "endColumnNumber" : 46
      },
      "nodeContext" : "diff * bestPeriod < minDiff * period",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "diff",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 249,
      "startColumnNumber" : 18,
      "endLineNumber" : 249,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 249,
        "startColumnNumber" : 8,
        "endLineNumber" : 249,
        "endColumnNumber" : 22
      },
      "nodeContext" : "minDiff=diff",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 249,
        "startColumnNumber" : 8,
        "endLineNumber" : 249,
        "endColumnNumber" : 23
      },
      "nodeContext" : "minDiff=diff;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 248,
        "startColumnNumber" : 48,
        "endLineNumber" : 251,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  minDiff=diff;\n  bestPeriod=period;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 248,
        "startColumnNumber" : 6,
        "endLineNumber" : 251,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (diff * bestPeriod < minDiff * period) {\n  minDiff=diff;\n  bestPeriod=period;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 238,
        "startColumnNumber" : 64,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int diff=0;\n  for (int i=0; i < period; i++) {\n    short sVal=samples[position + i];\n    short pVal=samples[position + period + i];\n    diff+=Math.abs(sVal - pVal);\n  }\n  if (diff * bestPeriod < minDiff * period) {\n    minDiff=diff;\n    bestPeriod=period;\n  }\n  if (diff * worstPeriod > maxDiff * period) {\n    maxDiff=diff;\n    worstPeriod=period;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int period=minPeriod; period <= maxPeriod; period++) {\n  int diff=0;\n  for (int i=0; i < period; i++) {\n    short sVal=samples[position + i];\n    short pVal=samples[position + period + i];\n    diff+=Math.abs(sVal - pVal);\n  }\n  if (diff * bestPeriod < minDiff * period) {\n    minDiff=diff;\n    bestPeriod=period;\n  }\n  if (diff * worstPeriod > maxDiff * period) {\n    maxDiff=diff;\n    worstPeriod=period;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1098,
        "startLineNumber" : 230,
        "startColumnNumber" : 98,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int bestPeriod=0;\n  int worstPeriod=255;\n  int minDiff=1;\n  int maxDiff=0;\n  position*=channelCount;\n  for (int period=minPeriod; period <= maxPeriod; period++) {\n    int diff=0;\n    for (int i=0; i < period; i++) {\n      short sVal=samples[position + i];\n      short pVal=samples[position + period + i];\n      diff+=Math.abs(sVal - pVal);\n    }\n    if (diff * bestPeriod < minDiff * period) {\n      minDiff=diff;\n      bestPeriod=period;\n    }\n    if (diff * worstPeriod > maxDiff * period) {\n      maxDiff=diff;\n      worstPeriod=period;\n    }\n  }\n  this.minDiff=minDiff / bestPeriod;\n  this.maxDiff=maxDiff / worstPeriod;\n  return bestPeriod;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1194,
        "startLineNumber" : 230,
        "startColumnNumber" : 2,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private int findPitchPeriodInRange(short[] samples,int position,int minPeriod,int maxPeriod){\n  int bestPeriod=0;\n  int worstPeriod=255;\n  int minDiff=1;\n  int maxDiff=0;\n  position*=channelCount;\n  for (int period=minPeriod; period <= maxPeriod; period++) {\n    int diff=0;\n    for (int i=0; i < period; i++) {\n      short sVal=samples[position + i];\n      short pVal=samples[position + period + i];\n      diff+=Math.abs(sVal - pVal);\n    }\n    if (diff * bestPeriod < minDiff * period) {\n      minDiff=diff;\n      bestPeriod=period;\n    }\n    if (diff * worstPeriod > maxDiff * period) {\n      maxDiff=diff;\n      worstPeriod=period;\n    }\n  }\n  this.minDiff=minDiff / bestPeriod;\n  this.maxDiff=maxDiff / worstPeriod;\n  return bestPeriod;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 249,
        "startColumnNumber" : 8,
        "endLineNumber" : 249,
        "endColumnNumber" : 23
      },
      "nodeContext" : "minDiff=diff;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "diff",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 252,
      "startColumnNumber" : 10,
      "endLineNumber" : 252,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 252,
        "startColumnNumber" : 10,
        "endLineNumber" : 252,
        "endColumnNumber" : 28
      },
      "nodeContext" : "diff * worstPeriod",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 252,
        "startColumnNumber" : 10,
        "endLineNumber" : 252,
        "endColumnNumber" : 47
      },
      "nodeContext" : "diff * worstPeriod > maxDiff * period",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 252,
        "startColumnNumber" : 6,
        "endLineNumber" : 255,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (diff * worstPeriod > maxDiff * period) {\n  maxDiff=diff;\n  worstPeriod=period;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 238,
        "startColumnNumber" : 64,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int diff=0;\n  for (int i=0; i < period; i++) {\n    short sVal=samples[position + i];\n    short pVal=samples[position + period + i];\n    diff+=Math.abs(sVal - pVal);\n  }\n  if (diff * bestPeriod < minDiff * period) {\n    minDiff=diff;\n    bestPeriod=period;\n  }\n  if (diff * worstPeriod > maxDiff * period) {\n    maxDiff=diff;\n    worstPeriod=period;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int period=minPeriod; period <= maxPeriod; period++) {\n  int diff=0;\n  for (int i=0; i < period; i++) {\n    short sVal=samples[position + i];\n    short pVal=samples[position + period + i];\n    diff+=Math.abs(sVal - pVal);\n  }\n  if (diff * bestPeriod < minDiff * period) {\n    minDiff=diff;\n    bestPeriod=period;\n  }\n  if (diff * worstPeriod > maxDiff * period) {\n    maxDiff=diff;\n    worstPeriod=period;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1098,
        "startLineNumber" : 230,
        "startColumnNumber" : 98,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int bestPeriod=0;\n  int worstPeriod=255;\n  int minDiff=1;\n  int maxDiff=0;\n  position*=channelCount;\n  for (int period=minPeriod; period <= maxPeriod; period++) {\n    int diff=0;\n    for (int i=0; i < period; i++) {\n      short sVal=samples[position + i];\n      short pVal=samples[position + period + i];\n      diff+=Math.abs(sVal - pVal);\n    }\n    if (diff * bestPeriod < minDiff * period) {\n      minDiff=diff;\n      bestPeriod=period;\n    }\n    if (diff * worstPeriod > maxDiff * period) {\n      maxDiff=diff;\n      worstPeriod=period;\n    }\n  }\n  this.minDiff=minDiff / bestPeriod;\n  this.maxDiff=maxDiff / worstPeriod;\n  return bestPeriod;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1194,
        "startLineNumber" : 230,
        "startColumnNumber" : 2,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private int findPitchPeriodInRange(short[] samples,int position,int minPeriod,int maxPeriod){\n  int bestPeriod=0;\n  int worstPeriod=255;\n  int minDiff=1;\n  int maxDiff=0;\n  position*=channelCount;\n  for (int period=minPeriod; period <= maxPeriod; period++) {\n    int diff=0;\n    for (int i=0; i < period; i++) {\n      short sVal=samples[position + i];\n      short pVal=samples[position + period + i];\n      diff+=Math.abs(sVal - pVal);\n    }\n    if (diff * bestPeriod < minDiff * period) {\n      minDiff=diff;\n      bestPeriod=period;\n    }\n    if (diff * worstPeriod > maxDiff * period) {\n      maxDiff=diff;\n      worstPeriod=period;\n    }\n  }\n  this.minDiff=minDiff / bestPeriod;\n  this.maxDiff=maxDiff / worstPeriod;\n  return bestPeriod;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 252,
        "startColumnNumber" : 10,
        "endLineNumber" : 252,
        "endColumnNumber" : 47
      },
      "nodeContext" : "diff * worstPeriod > maxDiff * period",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "diff",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 253,
      "startColumnNumber" : 18,
      "endLineNumber" : 253,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 253,
        "startColumnNumber" : 8,
        "endLineNumber" : 253,
        "endColumnNumber" : 22
      },
      "nodeContext" : "maxDiff=diff",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 253,
        "startColumnNumber" : 8,
        "endLineNumber" : 253,
        "endColumnNumber" : 23
      },
      "nodeContext" : "maxDiff=diff;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 252,
        "startColumnNumber" : 49,
        "endLineNumber" : 255,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  maxDiff=diff;\n  worstPeriod=period;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 252,
        "startColumnNumber" : 6,
        "endLineNumber" : 255,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (diff * worstPeriod > maxDiff * period) {\n  maxDiff=diff;\n  worstPeriod=period;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 238,
        "startColumnNumber" : 64,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int diff=0;\n  for (int i=0; i < period; i++) {\n    short sVal=samples[position + i];\n    short pVal=samples[position + period + i];\n    diff+=Math.abs(sVal - pVal);\n  }\n  if (diff * bestPeriod < minDiff * period) {\n    minDiff=diff;\n    bestPeriod=period;\n  }\n  if (diff * worstPeriod > maxDiff * period) {\n    maxDiff=diff;\n    worstPeriod=period;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int period=minPeriod; period <= maxPeriod; period++) {\n  int diff=0;\n  for (int i=0; i < period; i++) {\n    short sVal=samples[position + i];\n    short pVal=samples[position + period + i];\n    diff+=Math.abs(sVal - pVal);\n  }\n  if (diff * bestPeriod < minDiff * period) {\n    minDiff=diff;\n    bestPeriod=period;\n  }\n  if (diff * worstPeriod > maxDiff * period) {\n    maxDiff=diff;\n    worstPeriod=period;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1098,
        "startLineNumber" : 230,
        "startColumnNumber" : 98,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int bestPeriod=0;\n  int worstPeriod=255;\n  int minDiff=1;\n  int maxDiff=0;\n  position*=channelCount;\n  for (int period=minPeriod; period <= maxPeriod; period++) {\n    int diff=0;\n    for (int i=0; i < period; i++) {\n      short sVal=samples[position + i];\n      short pVal=samples[position + period + i];\n      diff+=Math.abs(sVal - pVal);\n    }\n    if (diff * bestPeriod < minDiff * period) {\n      minDiff=diff;\n      bestPeriod=period;\n    }\n    if (diff * worstPeriod > maxDiff * period) {\n      maxDiff=diff;\n      worstPeriod=period;\n    }\n  }\n  this.minDiff=minDiff / bestPeriod;\n  this.maxDiff=maxDiff / worstPeriod;\n  return bestPeriod;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1194,
        "startLineNumber" : 230,
        "startColumnNumber" : 2,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private int findPitchPeriodInRange(short[] samples,int position,int minPeriod,int maxPeriod){\n  int bestPeriod=0;\n  int worstPeriod=255;\n  int minDiff=1;\n  int maxDiff=0;\n  position*=channelCount;\n  for (int period=minPeriod; period <= maxPeriod; period++) {\n    int diff=0;\n    for (int i=0; i < period; i++) {\n      short sVal=samples[position + i];\n      short pVal=samples[position + period + i];\n      diff+=Math.abs(sVal - pVal);\n    }\n    if (diff * bestPeriod < minDiff * period) {\n      minDiff=diff;\n      bestPeriod=period;\n    }\n    if (diff * worstPeriod > maxDiff * period) {\n      maxDiff=diff;\n      worstPeriod=period;\n    }\n  }\n  this.minDiff=minDiff / bestPeriod;\n  this.maxDiff=maxDiff / worstPeriod;\n  return bestPeriod;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 253,
        "startColumnNumber" : 8,
        "endLineNumber" : 253,
        "endColumnNumber" : 23
      },
      "nodeContext" : "maxDiff=diff;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 248,
    "startColumnNumber" : 10,
    "endLineNumber" : 248,
    "endColumnNumber" : 14
  }, {
    "charLength" : 4,
    "startLineNumber" : 249,
    "startColumnNumber" : 18,
    "endLineNumber" : 249,
    "endColumnNumber" : 22
  }, {
    "charLength" : 4,
    "startLineNumber" : 252,
    "startColumnNumber" : 10,
    "endLineNumber" : 252,
    "endColumnNumber" : 14
  }, {
    "charLength" : 4,
    "startLineNumber" : 253,
    "startColumnNumber" : 18,
    "endLineNumber" : 253,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}