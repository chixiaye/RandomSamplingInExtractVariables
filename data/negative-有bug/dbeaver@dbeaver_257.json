{
  "id" : 257,
  "expression" : "sessions",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.mssql/src/org/jkiss/dbeaver/ext/mssql/model/session/SQLServerSessionManager.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sessions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 87,
      "startColumnNumber" : 24,
      "endLineNumber" : 87,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 87,
        "startColumnNumber" : 24,
        "endLineNumber" : 87,
        "endColumnNumber" : 68
      },
      "nodeContext" : "sessions.add(new SQLServerSession(dbResult))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 87,
        "startColumnNumber" : 24,
        "endLineNumber" : 87,
        "endColumnNumber" : 69
      },
      "nodeContext" : "sessions.add(new SQLServerSession(dbResult));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 86,
        "startColumnNumber" : 44,
        "endLineNumber" : 88,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  sessions.add(new SQLServerSession(dbResult));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 88,
        "endColumnNumber" : 21
      },
      "nodeContext" : "while (dbResult.next()) {\n  sessions.add(new SQLServerSession(dbResult));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 84,
        "startColumnNumber" : 69,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  List<SQLServerSession> sessions=new ArrayList<>();\n  while (dbResult.next()) {\n    sessions.add(new SQLServerSession(dbResult));\n  }\n  return sessions;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 320,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try (JDBCResultSet dbResult=dbStat.executeQuery()){\n  List<SQLServerSession> sessions=new ArrayList<>();\n  while (dbResult.next()) {\n    sessions.add(new SQLServerSession(dbResult));\n  }\n  return sessions;\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 83,
        "startColumnNumber" : 33,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try (JDBCResultSet dbResult=dbStat.executeQuery()){\n    List<SQLServerSession> sessions=new ArrayList<>();\n    while (dbResult.next()) {\n      sessions.add(new SQLServerSession(dbResult));\n    }\n    return sessions;\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 463,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (JDBCPreparedStatement dbStat=((JDBCSession)session).prepareStatement(sql.toString())){\n  try (JDBCResultSet dbResult=dbStat.executeQuery()){\n    List<SQLServerSession> sessions=new ArrayList<>();\n    while (dbResult.next()) {\n      sessions.add(new SQLServerSession(dbResult));\n    }\n    return sessions;\n  }\n }\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 54,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1598,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean onlyConnections=CommonUtils.getOption(options,OPTION_SHOW_ONLY_CONNECTIONS);\n  boolean supportsDatabaseInfo=((SQLServerDataSource)session.getDataSource()).isServerVersionAtLeast(SQLServerConstants.SQL_SERVER_2012_VERSION_MAJOR,0);\n  StringBuilder sql=new StringBuilder();\n  sql.append(\"SELECT s.*,\");\n  if (supportsDatabaseInfo) {\n    sql.append(\"db.name as database_name,\");\n  }\n else {\n    sql.append(\"NULL as database_name,\");\n  }\n  sql.append(\"c.connection_id,(select text from sys.dm_exec_sql_text(c.most_recent_sql_handle)) as sql_text\\n\").append(\"FROM sys.dm_exec_sessions s\\n\");\n  if (onlyConnections) {\n    sql.append(\"LEFT OUTER \");\n  }\n  sql.append(\"JOIN sys.dm_exec_connections c ON c.session_id=s.session_id\\n\");\n  if (supportsDatabaseInfo) {\n    sql.append(\"LEFT OUTER JOIN sys.sysdatabases db on db.dbid=s.database_id\\n\");\n  }\n  sql.append(\"ORDER BY s.session_id DESC\");\n  try (JDBCPreparedStatement dbStat=((JDBCSession)session).prepareStatement(sql.toString())){\n    try (JDBCResultSet dbResult=dbStat.executeQuery()){\n      List<SQLServerSession> sessions=new ArrayList<>();\n      while (dbResult.next()) {\n        sessions.add(new SQLServerSession(dbResult));\n      }\n      return sessions;\n    }\n   }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1700,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  boolean onlyConnections=CommonUtils.getOption(options,OPTION_SHOW_ONLY_CONNECTIONS);\n  boolean supportsDatabaseInfo=((SQLServerDataSource)session.getDataSource()).isServerVersionAtLeast(SQLServerConstants.SQL_SERVER_2012_VERSION_MAJOR,0);\n  StringBuilder sql=new StringBuilder();\n  sql.append(\"SELECT s.*,\");\n  if (supportsDatabaseInfo) {\n    sql.append(\"db.name as database_name,\");\n  }\n else {\n    sql.append(\"NULL as database_name,\");\n  }\n  sql.append(\"c.connection_id,(select text from sys.dm_exec_sql_text(c.most_recent_sql_handle)) as sql_text\\n\").append(\"FROM sys.dm_exec_sessions s\\n\");\n  if (onlyConnections) {\n    sql.append(\"LEFT OUTER \");\n  }\n  sql.append(\"JOIN sys.dm_exec_connections c ON c.session_id=s.session_id\\n\");\n  if (supportsDatabaseInfo) {\n    sql.append(\"LEFT OUTER JOIN sys.sysdatabases db on db.dbid=s.database_id\\n\");\n  }\n  sql.append(\"ORDER BY s.session_id DESC\");\n  try (JDBCPreparedStatement dbStat=((JDBCSession)session).prepareStatement(sql.toString())){\n    try (JDBCResultSet dbResult=dbStat.executeQuery()){\n      List<SQLServerSession> sessions=new ArrayList<>();\n      while (dbResult.next()) {\n        sessions.add(new SQLServerSession(dbResult));\n      }\n      return sessions;\n    }\n   }\n }\n catch (SQLException e) {\n  throw new DBException(e,session.getDataSource());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 157,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1716,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    boolean onlyConnections=CommonUtils.getOption(options,OPTION_SHOW_ONLY_CONNECTIONS);\n    boolean supportsDatabaseInfo=((SQLServerDataSource)session.getDataSource()).isServerVersionAtLeast(SQLServerConstants.SQL_SERVER_2012_VERSION_MAJOR,0);\n    StringBuilder sql=new StringBuilder();\n    sql.append(\"SELECT s.*,\");\n    if (supportsDatabaseInfo) {\n      sql.append(\"db.name as database_name,\");\n    }\n else {\n      sql.append(\"NULL as database_name,\");\n    }\n    sql.append(\"c.connection_id,(select text from sys.dm_exec_sql_text(c.most_recent_sql_handle)) as sql_text\\n\").append(\"FROM sys.dm_exec_sessions s\\n\");\n    if (onlyConnections) {\n      sql.append(\"LEFT OUTER \");\n    }\n    sql.append(\"JOIN sys.dm_exec_connections c ON c.session_id=s.session_id\\n\");\n    if (supportsDatabaseInfo) {\n      sql.append(\"LEFT OUTER JOIN sys.sysdatabases db on db.dbid=s.database_id\\n\");\n    }\n    sql.append(\"ORDER BY s.session_id DESC\");\n    try (JDBCPreparedStatement dbStat=((JDBCSession)session).prepareStatement(sql.toString())){\n      try (JDBCResultSet dbResult=dbStat.executeQuery()){\n        List<SQLServerSession> sessions=new ArrayList<>();\n        while (dbResult.next()) {\n          sessions.add(new SQLServerSession(dbResult));\n        }\n        return sessions;\n      }\n     }\n   }\n catch (  SQLException e) {\n    throw new DBException(e,session.getDataSource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1850,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Collection<SQLServerSession> getSessions(DBCSession session,Map<String,Object> options) throws DBException {\n  try {\n    boolean onlyConnections=CommonUtils.getOption(options,OPTION_SHOW_ONLY_CONNECTIONS);\n    boolean supportsDatabaseInfo=((SQLServerDataSource)session.getDataSource()).isServerVersionAtLeast(SQLServerConstants.SQL_SERVER_2012_VERSION_MAJOR,0);\n    StringBuilder sql=new StringBuilder();\n    sql.append(\"SELECT s.*,\");\n    if (supportsDatabaseInfo) {\n      sql.append(\"db.name as database_name,\");\n    }\n else {\n      sql.append(\"NULL as database_name,\");\n    }\n    sql.append(\"c.connection_id,(select text from sys.dm_exec_sql_text(c.most_recent_sql_handle)) as sql_text\\n\").append(\"FROM sys.dm_exec_sessions s\\n\");\n    if (onlyConnections) {\n      sql.append(\"LEFT OUTER \");\n    }\n    sql.append(\"JOIN sys.dm_exec_connections c ON c.session_id=s.session_id\\n\");\n    if (supportsDatabaseInfo) {\n      sql.append(\"LEFT OUTER JOIN sys.sysdatabases db on db.dbid=s.database_id\\n\");\n    }\n    sql.append(\"ORDER BY s.session_id DESC\");\n    try (JDBCPreparedStatement dbStat=((JDBCSession)session).prepareStatement(sql.toString())){\n      try (JDBCResultSet dbResult=dbStat.executeQuery()){\n        List<SQLServerSession> sessions=new ArrayList<>();\n        while (dbResult.next()) {\n          sessions.add(new SQLServerSession(dbResult));\n        }\n        return sessions;\n      }\n     }\n   }\n catch (  SQLException e) {\n    throw new DBException(e,session.getDataSource());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 87,
        "startColumnNumber" : 24,
        "endLineNumber" : 87,
        "endColumnNumber" : 69
      },
      "nodeContext" : "sessions.add(new SQLServerSession(dbResult));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.jkiss.dbeaver.ext.mssql.model.session.SQLServerSession>"
  }, {
    "nodeContext" : "sessions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 89,
      "startColumnNumber" : 27,
      "endLineNumber" : 89,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 89,
        "startColumnNumber" : 20,
        "endLineNumber" : 89,
        "endColumnNumber" : 36
      },
      "nodeContext" : "return sessions;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 84,
        "startColumnNumber" : 69,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  List<SQLServerSession> sessions=new ArrayList<>();\n  while (dbResult.next()) {\n    sessions.add(new SQLServerSession(dbResult));\n  }\n  return sessions;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 320,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try (JDBCResultSet dbResult=dbStat.executeQuery()){\n  List<SQLServerSession> sessions=new ArrayList<>();\n  while (dbResult.next()) {\n    sessions.add(new SQLServerSession(dbResult));\n  }\n  return sessions;\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 83,
        "startColumnNumber" : 33,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try (JDBCResultSet dbResult=dbStat.executeQuery()){\n    List<SQLServerSession> sessions=new ArrayList<>();\n    while (dbResult.next()) {\n      sessions.add(new SQLServerSession(dbResult));\n    }\n    return sessions;\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 463,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (JDBCPreparedStatement dbStat=((JDBCSession)session).prepareStatement(sql.toString())){\n  try (JDBCResultSet dbResult=dbStat.executeQuery()){\n    List<SQLServerSession> sessions=new ArrayList<>();\n    while (dbResult.next()) {\n      sessions.add(new SQLServerSession(dbResult));\n    }\n    return sessions;\n  }\n }\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 54,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1598,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean onlyConnections=CommonUtils.getOption(options,OPTION_SHOW_ONLY_CONNECTIONS);\n  boolean supportsDatabaseInfo=((SQLServerDataSource)session.getDataSource()).isServerVersionAtLeast(SQLServerConstants.SQL_SERVER_2012_VERSION_MAJOR,0);\n  StringBuilder sql=new StringBuilder();\n  sql.append(\"SELECT s.*,\");\n  if (supportsDatabaseInfo) {\n    sql.append(\"db.name as database_name,\");\n  }\n else {\n    sql.append(\"NULL as database_name,\");\n  }\n  sql.append(\"c.connection_id,(select text from sys.dm_exec_sql_text(c.most_recent_sql_handle)) as sql_text\\n\").append(\"FROM sys.dm_exec_sessions s\\n\");\n  if (onlyConnections) {\n    sql.append(\"LEFT OUTER \");\n  }\n  sql.append(\"JOIN sys.dm_exec_connections c ON c.session_id=s.session_id\\n\");\n  if (supportsDatabaseInfo) {\n    sql.append(\"LEFT OUTER JOIN sys.sysdatabases db on db.dbid=s.database_id\\n\");\n  }\n  sql.append(\"ORDER BY s.session_id DESC\");\n  try (JDBCPreparedStatement dbStat=((JDBCSession)session).prepareStatement(sql.toString())){\n    try (JDBCResultSet dbResult=dbStat.executeQuery()){\n      List<SQLServerSession> sessions=new ArrayList<>();\n      while (dbResult.next()) {\n        sessions.add(new SQLServerSession(dbResult));\n      }\n      return sessions;\n    }\n   }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1700,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  boolean onlyConnections=CommonUtils.getOption(options,OPTION_SHOW_ONLY_CONNECTIONS);\n  boolean supportsDatabaseInfo=((SQLServerDataSource)session.getDataSource()).isServerVersionAtLeast(SQLServerConstants.SQL_SERVER_2012_VERSION_MAJOR,0);\n  StringBuilder sql=new StringBuilder();\n  sql.append(\"SELECT s.*,\");\n  if (supportsDatabaseInfo) {\n    sql.append(\"db.name as database_name,\");\n  }\n else {\n    sql.append(\"NULL as database_name,\");\n  }\n  sql.append(\"c.connection_id,(select text from sys.dm_exec_sql_text(c.most_recent_sql_handle)) as sql_text\\n\").append(\"FROM sys.dm_exec_sessions s\\n\");\n  if (onlyConnections) {\n    sql.append(\"LEFT OUTER \");\n  }\n  sql.append(\"JOIN sys.dm_exec_connections c ON c.session_id=s.session_id\\n\");\n  if (supportsDatabaseInfo) {\n    sql.append(\"LEFT OUTER JOIN sys.sysdatabases db on db.dbid=s.database_id\\n\");\n  }\n  sql.append(\"ORDER BY s.session_id DESC\");\n  try (JDBCPreparedStatement dbStat=((JDBCSession)session).prepareStatement(sql.toString())){\n    try (JDBCResultSet dbResult=dbStat.executeQuery()){\n      List<SQLServerSession> sessions=new ArrayList<>();\n      while (dbResult.next()) {\n        sessions.add(new SQLServerSession(dbResult));\n      }\n      return sessions;\n    }\n   }\n }\n catch (SQLException e) {\n  throw new DBException(e,session.getDataSource());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 157,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1716,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    boolean onlyConnections=CommonUtils.getOption(options,OPTION_SHOW_ONLY_CONNECTIONS);\n    boolean supportsDatabaseInfo=((SQLServerDataSource)session.getDataSource()).isServerVersionAtLeast(SQLServerConstants.SQL_SERVER_2012_VERSION_MAJOR,0);\n    StringBuilder sql=new StringBuilder();\n    sql.append(\"SELECT s.*,\");\n    if (supportsDatabaseInfo) {\n      sql.append(\"db.name as database_name,\");\n    }\n else {\n      sql.append(\"NULL as database_name,\");\n    }\n    sql.append(\"c.connection_id,(select text from sys.dm_exec_sql_text(c.most_recent_sql_handle)) as sql_text\\n\").append(\"FROM sys.dm_exec_sessions s\\n\");\n    if (onlyConnections) {\n      sql.append(\"LEFT OUTER \");\n    }\n    sql.append(\"JOIN sys.dm_exec_connections c ON c.session_id=s.session_id\\n\");\n    if (supportsDatabaseInfo) {\n      sql.append(\"LEFT OUTER JOIN sys.sysdatabases db on db.dbid=s.database_id\\n\");\n    }\n    sql.append(\"ORDER BY s.session_id DESC\");\n    try (JDBCPreparedStatement dbStat=((JDBCSession)session).prepareStatement(sql.toString())){\n      try (JDBCResultSet dbResult=dbStat.executeQuery()){\n        List<SQLServerSession> sessions=new ArrayList<>();\n        while (dbResult.next()) {\n          sessions.add(new SQLServerSession(dbResult));\n        }\n        return sessions;\n      }\n     }\n   }\n catch (  SQLException e) {\n    throw new DBException(e,session.getDataSource());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1850,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Collection<SQLServerSession> getSessions(DBCSession session,Map<String,Object> options) throws DBException {\n  try {\n    boolean onlyConnections=CommonUtils.getOption(options,OPTION_SHOW_ONLY_CONNECTIONS);\n    boolean supportsDatabaseInfo=((SQLServerDataSource)session.getDataSource()).isServerVersionAtLeast(SQLServerConstants.SQL_SERVER_2012_VERSION_MAJOR,0);\n    StringBuilder sql=new StringBuilder();\n    sql.append(\"SELECT s.*,\");\n    if (supportsDatabaseInfo) {\n      sql.append(\"db.name as database_name,\");\n    }\n else {\n      sql.append(\"NULL as database_name,\");\n    }\n    sql.append(\"c.connection_id,(select text from sys.dm_exec_sql_text(c.most_recent_sql_handle)) as sql_text\\n\").append(\"FROM sys.dm_exec_sessions s\\n\");\n    if (onlyConnections) {\n      sql.append(\"LEFT OUTER \");\n    }\n    sql.append(\"JOIN sys.dm_exec_connections c ON c.session_id=s.session_id\\n\");\n    if (supportsDatabaseInfo) {\n      sql.append(\"LEFT OUTER JOIN sys.sysdatabases db on db.dbid=s.database_id\\n\");\n    }\n    sql.append(\"ORDER BY s.session_id DESC\");\n    try (JDBCPreparedStatement dbStat=((JDBCSession)session).prepareStatement(sql.toString())){\n      try (JDBCResultSet dbResult=dbStat.executeQuery()){\n        List<SQLServerSession> sessions=new ArrayList<>();\n        while (dbResult.next()) {\n          sessions.add(new SQLServerSession(dbResult));\n        }\n        return sessions;\n      }\n     }\n   }\n catch (  SQLException e) {\n    throw new DBException(e,session.getDataSource());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 89,
        "startColumnNumber" : 20,
        "endLineNumber" : 89,
        "endColumnNumber" : 36
      },
      "nodeContext" : "return sessions;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.jkiss.dbeaver.ext.mssql.model.session.SQLServerSession>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 87,
    "startColumnNumber" : 24,
    "endLineNumber" : 87,
    "endColumnNumber" : 32
  }, {
    "charLength" : 8,
    "startLineNumber" : 89,
    "startColumnNumber" : 27,
    "endLineNumber" : 89,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}