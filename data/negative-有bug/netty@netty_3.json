{
  "id" : 3,
  "expression" : "name.length()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeadersEncoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "name.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 34,
      "startColumnNumber" : 28,
      "endLineNumber" : 34,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 34,
        "startColumnNumber" : 18,
        "endLineNumber" : 34,
        "endColumnNumber" : 41
      },
      "nodeContext" : "nameLen=name.length()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 42
      },
      "nodeContext" : "final int nameLen=name.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 33,
        "startColumnNumber" : 82,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int nameLen=name.length();\n  final int valueLen=value.length();\n  final int entryLen=nameLen + valueLen + 4;\n  buf.ensureWritable(entryLen);\n  int offset=buf.writerIndex();\n  writeAscii(buf,offset,name);\n  offset+=nameLen;\n  ByteBufUtil.setShortBE(buf,offset,COLON_AND_SPACE_SHORT);\n  offset+=2;\n  writeAscii(buf,offset,value);\n  offset+=valueLen;\n  ByteBufUtil.setShortBE(buf,offset,CRLF_SHORT);\n  offset+=2;\n  buf.writerIndex(offset);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 653,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static void encoderHeader(CharSequence name,CharSequence value,ByteBuf buf){\n  final int nameLen=name.length();\n  final int valueLen=value.length();\n  final int entryLen=nameLen + valueLen + 4;\n  buf.ensureWritable(entryLen);\n  int offset=buf.writerIndex();\n  writeAscii(buf,offset,name);\n  offset+=nameLen;\n  ByteBufUtil.setShortBE(buf,offset,COLON_AND_SPACE_SHORT);\n  offset+=2;\n  writeAscii(buf,offset,value);\n  offset+=valueLen;\n  ByteBufUtil.setShortBE(buf,offset,CRLF_SHORT);\n  offset+=2;\n  buf.writerIndex(offset);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 42
      },
      "nodeContext" : "final int nameLen=name.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 34,
    "startColumnNumber" : 28,
    "endLineNumber" : 34,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}