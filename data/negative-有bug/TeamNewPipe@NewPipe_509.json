{
  "id" : 509,
  "expression" : "lowerResMatchNoRefreshIndex == -1",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/util/ListHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lowerResMatchNoRefreshIndex == -1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 384,
      "startColumnNumber" : 16,
      "endLineNumber" : 384,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 384,
        "startColumnNumber" : 16,
        "endLineNumber" : 385,
        "endColumnNumber" : 71
      },
      "nodeContext" : "lowerResMatchNoRefreshIndex == -1 && compareVideoStreamResolution(resolutionNoRefresh,targetResolutionNoRefresh) < 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 384,
        "startColumnNumber" : 12,
        "endLineNumber" : 387,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (lowerResMatchNoRefreshIndex == -1 && compareVideoStreamResolution(resolutionNoRefresh,targetResolutionNoRefresh) < 0) {\n  lowerResMatchNoRefreshIndex=idx;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1110,
        "startLineNumber" : 362,
        "startColumnNumber" : 60,
        "endLineNumber" : 388,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MediaFormat format=targetFormat == null ? null : videoStreams.get(idx).getFormat();\n  String resolution=videoStreams.get(idx).getResolution();\n  String resolutionNoRefresh=resolution.replaceAll(\"p\\\\d+$\",\"p\");\n  if (format == targetFormat && resolution.equals(targetResolution)) {\n    fullMatchIndex=idx;\n  }\n  if (format == targetFormat && resolutionNoRefresh.equals(targetResolutionNoRefresh)) {\n    fullMatchNoRefreshIndex=idx;\n  }\n  if (resMatchOnlyIndex == -1 && resolution.equals(targetResolution)) {\n    resMatchOnlyIndex=idx;\n  }\n  if (resMatchOnlyNoRefreshIndex == -1 && resolutionNoRefresh.equals(targetResolutionNoRefresh)) {\n    resMatchOnlyNoRefreshIndex=idx;\n  }\n  if (lowerResMatchNoRefreshIndex == -1 && compareVideoStreamResolution(resolutionNoRefresh,targetResolutionNoRefresh) < 0) {\n    lowerResMatchNoRefreshIndex=idx;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 362,
        "startColumnNumber" : 8,
        "endLineNumber" : 388,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int idx=0; idx < videoStreams.size(); idx++) {\n  MediaFormat format=targetFormat == null ? null : videoStreams.get(idx).getFormat();\n  String resolution=videoStreams.get(idx).getResolution();\n  String resolutionNoRefresh=resolution.replaceAll(\"p\\\\d+$\",\"p\");\n  if (format == targetFormat && resolution.equals(targetResolution)) {\n    fullMatchIndex=idx;\n  }\n  if (format == targetFormat && resolutionNoRefresh.equals(targetResolutionNoRefresh)) {\n    fullMatchNoRefreshIndex=idx;\n  }\n  if (resMatchOnlyIndex == -1 && resolution.equals(targetResolution)) {\n    resMatchOnlyIndex=idx;\n  }\n  if (resMatchOnlyNoRefreshIndex == -1 && resolutionNoRefresh.equals(targetResolutionNoRefresh)) {\n    resMatchOnlyNoRefreshIndex=idx;\n  }\n  if (lowerResMatchNoRefreshIndex == -1 && compareVideoStreamResolution(resolutionNoRefresh,targetResolutionNoRefresh) < 0) {\n    lowerResMatchNoRefreshIndex=idx;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1885,
        "startLineNumber" : 354,
        "startColumnNumber" : 73,
        "endLineNumber" : 403,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int fullMatchIndex=-1;\n  int fullMatchNoRefreshIndex=-1;\n  int resMatchOnlyIndex=-1;\n  int resMatchOnlyNoRefreshIndex=-1;\n  int lowerResMatchNoRefreshIndex=-1;\n  String targetResolutionNoRefresh=targetResolution.replaceAll(\"p\\\\d+$\",\"p\");\n  for (int idx=0; idx < videoStreams.size(); idx++) {\n    MediaFormat format=targetFormat == null ? null : videoStreams.get(idx).getFormat();\n    String resolution=videoStreams.get(idx).getResolution();\n    String resolutionNoRefresh=resolution.replaceAll(\"p\\\\d+$\",\"p\");\n    if (format == targetFormat && resolution.equals(targetResolution)) {\n      fullMatchIndex=idx;\n    }\n    if (format == targetFormat && resolutionNoRefresh.equals(targetResolutionNoRefresh)) {\n      fullMatchNoRefreshIndex=idx;\n    }\n    if (resMatchOnlyIndex == -1 && resolution.equals(targetResolution)) {\n      resMatchOnlyIndex=idx;\n    }\n    if (resMatchOnlyNoRefreshIndex == -1 && resolutionNoRefresh.equals(targetResolutionNoRefresh)) {\n      resMatchOnlyNoRefreshIndex=idx;\n    }\n    if (lowerResMatchNoRefreshIndex == -1 && compareVideoStreamResolution(resolutionNoRefresh,targetResolutionNoRefresh) < 0) {\n      lowerResMatchNoRefreshIndex=idx;\n    }\n  }\n  if (fullMatchIndex != -1) {\n    return fullMatchIndex;\n  }\n  if (fullMatchNoRefreshIndex != -1) {\n    return fullMatchNoRefreshIndex;\n  }\n  if (resMatchOnlyIndex != -1) {\n    return resMatchOnlyIndex;\n  }\n  if (resMatchOnlyNoRefreshIndex != -1) {\n    return resMatchOnlyNoRefreshIndex;\n  }\n  return lowerResMatchNoRefreshIndex;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2803,
        "startLineNumber" : 334,
        "startColumnNumber" : 4,
        "endLineNumber" : 403,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Locates a possible match for the given resolution and format in the provided list. <p>In this order:</p> <ol> <li>Find a format and resolution match</li> <li>Find a format and resolution match and ignore the refresh</li> <li>Find a resolution match</li> <li>Find a resolution match and ignore the refresh</li> <li>Find a resolution just below the requested resolution and ignore the refresh</li> <li>Give up</li> </ol>\n * @param targetResolution the resolution to look for\n * @param targetFormat     the format to look for\n * @param videoStreams     the available video streams\n * @return the index of the prefered video stream\n */\nstatic int getVideoStreamIndex(final String targetResolution,final MediaFormat targetFormat,final List<VideoStream> videoStreams){\n  int fullMatchIndex=-1;\n  int fullMatchNoRefreshIndex=-1;\n  int resMatchOnlyIndex=-1;\n  int resMatchOnlyNoRefreshIndex=-1;\n  int lowerResMatchNoRefreshIndex=-1;\n  String targetResolutionNoRefresh=targetResolution.replaceAll(\"p\\\\d+$\",\"p\");\n  for (int idx=0; idx < videoStreams.size(); idx++) {\n    MediaFormat format=targetFormat == null ? null : videoStreams.get(idx).getFormat();\n    String resolution=videoStreams.get(idx).getResolution();\n    String resolutionNoRefresh=resolution.replaceAll(\"p\\\\d+$\",\"p\");\n    if (format == targetFormat && resolution.equals(targetResolution)) {\n      fullMatchIndex=idx;\n    }\n    if (format == targetFormat && resolutionNoRefresh.equals(targetResolutionNoRefresh)) {\n      fullMatchNoRefreshIndex=idx;\n    }\n    if (resMatchOnlyIndex == -1 && resolution.equals(targetResolution)) {\n      resMatchOnlyIndex=idx;\n    }\n    if (resMatchOnlyNoRefreshIndex == -1 && resolutionNoRefresh.equals(targetResolutionNoRefresh)) {\n      resMatchOnlyNoRefreshIndex=idx;\n    }\n    if (lowerResMatchNoRefreshIndex == -1 && compareVideoStreamResolution(resolutionNoRefresh,targetResolutionNoRefresh) < 0) {\n      lowerResMatchNoRefreshIndex=idx;\n    }\n  }\n  if (fullMatchIndex != -1) {\n    return fullMatchIndex;\n  }\n  if (fullMatchNoRefreshIndex != -1) {\n    return fullMatchNoRefreshIndex;\n  }\n  if (resMatchOnlyIndex != -1) {\n    return resMatchOnlyIndex;\n  }\n  if (resMatchOnlyNoRefreshIndex != -1) {\n    return resMatchOnlyNoRefreshIndex;\n  }\n  return lowerResMatchNoRefreshIndex;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 384,
        "startColumnNumber" : 16,
        "endLineNumber" : 385,
        "endColumnNumber" : 71
      },
      "nodeContext" : "lowerResMatchNoRefreshIndex == -1 && compareVideoStreamResolution(resolutionNoRefresh,targetResolutionNoRefresh) < 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 384,
    "startColumnNumber" : 16,
    "endLineNumber" : 384,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}