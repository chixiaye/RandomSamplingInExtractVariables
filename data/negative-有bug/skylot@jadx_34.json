{
  "id" : 34,
  "expression" : "indent(2)",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/test/java/jadx/tests/integration/trycatch/TestTryCatchFinally6.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "indent(2)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 41,
      "startColumnNumber" : 4,
      "endLineNumber" : 41,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 29
      },
      "nodeContext" : "indent(2) + \"is.close();\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 35,
        "startColumnNumber" : 19,
        "endLineNumber" : 44,
        "endColumnNumber" : 3
      },
      "nodeContext" : "containsLines(2,\"InputStream is = null;\",\"try {\",indent(1) + \"is = new FileInputStream(\\\"1.txt\\\");\",\"} finally {\",indent(1) + \"if (is != null) {\",indent(2) + \"is.close();\",indent(1) + \"}\",\"}\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 44,
        "endColumnNumber" : 4
      },
      "nodeContext" : "assertThat(code,containsLines(2,\"InputStream is = null;\",\"try {\",indent(1) + \"is = new FileInputStream(\\\"1.txt\\\");\",\"} finally {\",indent(1) + \"if (is != null) {\",indent(2) + \"is.close();\",indent(1) + \"}\",\"}\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "assertThat(code,containsLines(2,\"InputStream is = null;\",\"try {\",indent(1) + \"is = new FileInputStream(\\\"1.txt\\\");\",\"} finally {\",indent(1) + \"if (is != null) {\",indent(2) + \"is.close();\",indent(1) + \"}\",\"}\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 31,
        "startColumnNumber" : 20,
        "endLineNumber" : 45,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ClassNode cls=getClassNode(TestCls.class);\n  String code=cls.getCode().toString();\n  assertThat(code,containsLines(2,\"InputStream is = null;\",\"try {\",indent(1) + \"is = new FileInputStream(\\\"1.txt\\\");\",\"} finally {\",indent(1) + \"if (is != null) {\",indent(2) + \"is.close();\",indent(1) + \"}\",\"}\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 30,
        "startColumnNumber" : 1,
        "endLineNumber" : 45,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void test(){\n  ClassNode cls=getClassNode(TestCls.class);\n  String code=cls.getCode().toString();\n  assertThat(code,containsLines(2,\"InputStream is = null;\",\"try {\",indent(1) + \"is = new FileInputStream(\\\"1.txt\\\");\",\"} finally {\",indent(1) + \"if (is != null) {\",indent(2) + \"is.close();\",indent(1) + \"}\",\"}\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 58,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 29
      },
      "nodeContext" : "indent(2) + \"is.close();\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 41,
    "startColumnNumber" : 4,
    "endLineNumber" : 41,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ ]
}