{
  "id" : 362,
  "expression" : "recordsToSkipAfterOffset == 0",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-files/src/main/java/org/apache/flink/connector/file/src/FileSourceSplitState.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "recordsToSkipAfterOffset == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 95,
      "startColumnNumber" : 61,
      "endLineNumber" : 95,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 95,
        "startColumnNumber" : 17,
        "endLineNumber" : 95,
        "endColumnNumber" : 90
      },
      "nodeContext" : "offset == CheckpointedPosition.NO_OFFSET && recordsToSkipAfterOffset == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 91
      },
      "nodeContext" : "(offset == CheckpointedPosition.NO_OFFSET && recordsToSkipAfterOffset == 0)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 84
      },
      "nodeContext" : "(offset == CheckpointedPosition.NO_OFFSET && recordsToSkipAfterOffset == 0) ? null : new CheckpointedPosition(offset,recordsToSkipAfterOffset)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 94,
        "startColumnNumber" : 35,
        "endLineNumber" : 97,
        "endColumnNumber" : 84
      },
      "nodeContext" : "position=(offset == CheckpointedPosition.NO_OFFSET && recordsToSkipAfterOffset == 0) ? null : new CheckpointedPosition(offset,recordsToSkipAfterOffset)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 85
      },
      "nodeContext" : "final CheckpointedPosition position=(offset == CheckpointedPosition.NO_OFFSET && recordsToSkipAfterOffset == 0) ? null : new CheckpointedPosition(offset,recordsToSkipAfterOffset);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 93,
        "startColumnNumber" : 38,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final CheckpointedPosition position=(offset == CheckpointedPosition.NO_OFFSET && recordsToSkipAfterOffset == 0) ? null : new CheckpointedPosition(offset,recordsToSkipAfterOffset);\n  final FileSourceSplit updatedSplit=split.updateWithCheckpointedPosition(position);\n  if (updatedSplit == null) {\n    throw new FlinkRuntimeException(\"Split returned 'null' in updateWithCheckpointedPosition(): \" + split);\n  }\n  if (updatedSplit.getClass() != split.getClass()) {\n    throw new FlinkRuntimeException(String.format(\"Split returned different type in updateWithCheckpointedPosition(). \" + \"Split type is %s, returned type is %s\",split.getClass().getName(),updatedSplit.getClass().getName()));\n  }\n  return (SplitT)updatedSplit;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1256,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Use the current row count as the starting row count to create a new FileSourceSplit. \n */\n@SuppressWarnings(\"unchecked\") public SplitT toFileSourceSplit(){\n  final CheckpointedPosition position=(offset == CheckpointedPosition.NO_OFFSET && recordsToSkipAfterOffset == 0) ? null : new CheckpointedPosition(offset,recordsToSkipAfterOffset);\n  final FileSourceSplit updatedSplit=split.updateWithCheckpointedPosition(position);\n  if (updatedSplit == null) {\n    throw new FlinkRuntimeException(\"Split returned 'null' in updateWithCheckpointedPosition(): \" + split);\n  }\n  if (updatedSplit.getClass() != split.getClass()) {\n    throw new FlinkRuntimeException(String.format(\"Split returned different type in updateWithCheckpointedPosition(). \" + \"Split type is %s, returned type is %s\",split.getClass().getName(),updatedSplit.getClass().getName()));\n  }\n  return (SplitT)updatedSplit;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 91
      },
      "nodeContext" : "(offset == CheckpointedPosition.NO_OFFSET && recordsToSkipAfterOffset == 0)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 95,
    "startColumnNumber" : 61,
    "endLineNumber" : 95,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}