{
  "id" : 126,
  "expression" : "JSON",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/serializer/TestSpecial.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JSON",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 16,
      "startColumnNumber" : 27,
      "endLineNumber" : 16,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 16,
        "startColumnNumber" : 27,
        "endLineNumber" : 16,
        "endColumnNumber" : 86
      },
      "nodeContext" : "JSON.toJSONString(map,SerializerFeature.WriteTabAsSpecial)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 87
      },
      "nodeContext" : "System.out.println(JSON.toJSONString(map,SerializerFeature.WriteTabAsSpecial))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 88
      },
      "nodeContext" : "System.out.println(JSON.toJSONString(map,SerializerFeature.WriteTabAsSpecial));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 13,
        "startColumnNumber" : 43,
        "endLineNumber" : 17,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Object> map=new HashMap<String,Object>();\n  map.put(\"name\",\"\\n\\r\\t\");\n  System.out.println(JSON.toJSONString(map,SerializerFeature.WriteTabAsSpecial));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 17,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"deprecation\") public void test_0() throws Exception {\n  Map<String,Object> map=new HashMap<String,Object>();\n  map.put(\"name\",\"\\n\\r\\t\");\n  System.out.println(JSON.toJSONString(map,SerializerFeature.WriteTabAsSpecial));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 88
      },
      "nodeContext" : "System.out.println(JSON.toJSONString(map,SerializerFeature.WriteTabAsSpecial));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.fastjson.JSON"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 16,
    "startColumnNumber" : 27,
    "endLineNumber" : 16,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}