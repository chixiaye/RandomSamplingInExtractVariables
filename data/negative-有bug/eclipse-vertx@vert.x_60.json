{
  "id" : 60,
  "expression" : "record(() -> logger.warn(\"hello {} - {}\",\"vert.x\"))",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/core/logging/SLF4JLogDelegateTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "record(() -> logger.warn(\"hello {} - {}\",\"vert.x\"))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 140,
      "startColumnNumber" : 13,
      "endLineNumber" : 140,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 65
      },
      "nodeContext" : "result=record(() -> logger.warn(\"hello {} - {}\",\"vert.x\"))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 66
      },
      "nodeContext" : "result=record(() -> logger.warn(\"hello {} - {}\",\"vert.x\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1575,
        "startLineNumber" : 124,
        "startColumnNumber" : 28,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Logger logger=LoggerFactory.getLogger(\"my-slf4j-logger\");\n  String result=record(() -> logger.warn(\"hello\"));\n  assertContains(\"[main] WARN my-slf4j-logger - hello\",result);\n  result=record(() -> logger.warn(\"exception\",new NullPointerException()));\n  assertTrue(result.contains(\"[main] WARN my-slf4j-logger - exception\"));\n  assertTrue(result.contains(\"java.lang.NullPointerException\"));\n  result=record(() -> logger.warn(\"hello {} and {}\",\"Paulo\",\"Julien\"));\n  assertContains(\"[main] WARN my-slf4j-logger - hello Paulo and Julien\",result);\n  result=record(() -> logger.warn(\"hello {}\",\"vert.x\"));\n  assertContains(\"[main] WARN my-slf4j-logger - hello vert.x\",result);\n  result=record(() -> logger.warn(\"hello {} - {}\",\"vert.x\"));\n  assertContains(\"[main] WARN my-slf4j-logger - hello vert.x - {}\",result);\n  result=record(() -> logger.warn(\"hello {}\",\"vert.x\",\"foo\"));\n  assertContains(\"[main] WARN my-slf4j-logger - hello vert.x\",result);\n  result=record(() -> logger.warn(\"{}, an exception has been thrown\",new IllegalStateException(),\"Luke\"));\n  assertTrue(result.contains(\"[main] WARN my-slf4j-logger - Luke, an exception has been thrown\"));\n  assertTrue(result.contains(\"java.lang.IllegalStateException\"));\n  result=record(() -> logger.warn(\"{}, an exception has been thrown\",\"Luke\",new IllegalStateException()));\n  assertTrue(result.contains(\"[main] WARN my-slf4j-logger - Luke, an exception has been thrown\"));\n  assertTrue(result.contains(\"java.lang.IllegalStateException\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1609,
        "startLineNumber" : 123,
        "startColumnNumber" : 2,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testWarning(){\n  Logger logger=LoggerFactory.getLogger(\"my-slf4j-logger\");\n  String result=record(() -> logger.warn(\"hello\"));\n  assertContains(\"[main] WARN my-slf4j-logger - hello\",result);\n  result=record(() -> logger.warn(\"exception\",new NullPointerException()));\n  assertTrue(result.contains(\"[main] WARN my-slf4j-logger - exception\"));\n  assertTrue(result.contains(\"java.lang.NullPointerException\"));\n  result=record(() -> logger.warn(\"hello {} and {}\",\"Paulo\",\"Julien\"));\n  assertContains(\"[main] WARN my-slf4j-logger - hello Paulo and Julien\",result);\n  result=record(() -> logger.warn(\"hello {}\",\"vert.x\"));\n  assertContains(\"[main] WARN my-slf4j-logger - hello vert.x\",result);\n  result=record(() -> logger.warn(\"hello {} - {}\",\"vert.x\"));\n  assertContains(\"[main] WARN my-slf4j-logger - hello vert.x - {}\",result);\n  result=record(() -> logger.warn(\"hello {}\",\"vert.x\",\"foo\"));\n  assertContains(\"[main] WARN my-slf4j-logger - hello vert.x\",result);\n  result=record(() -> logger.warn(\"{}, an exception has been thrown\",new IllegalStateException(),\"Luke\"));\n  assertTrue(result.contains(\"[main] WARN my-slf4j-logger - Luke, an exception has been thrown\"));\n  assertTrue(result.contains(\"java.lang.IllegalStateException\"));\n  result=record(() -> logger.warn(\"{}, an exception has been thrown\",\"Luke\",new IllegalStateException()));\n  assertTrue(result.contains(\"[main] WARN my-slf4j-logger - Luke, an exception has been thrown\"));\n  assertTrue(result.contains(\"java.lang.IllegalStateException\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 66
      },
      "nodeContext" : "result=record(() -> logger.warn(\"hello {} - {}\",\"vert.x\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 140,
    "startColumnNumber" : 13,
    "endLineNumber" : 140,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}