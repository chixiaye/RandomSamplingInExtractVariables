{
  "id" : 420,
  "expression" : "writeMethod",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/util/reflection/BeanPropertySetter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "writeMethod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 61,
      "startColumnNumber" : 28,
      "endLineNumber" : 61,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 55
      },
      "nodeContext" : "accessor.invoke(writeMethod,target,value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 56
      },
      "nodeContext" : "accessor.invoke(writeMethod,target,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  writeMethod=target.getClass().getMethod(setterName(field.getName()),field.getType());\n  accessor.invoke(writeMethod,target,value);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1193,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  writeMethod=target.getClass().getMethod(setterName(field.getName()),field.getType());\n  accessor.invoke(writeMethod,target,value);\n  return true;\n}\n catch (InvocationTargetException e) {\n  throw new RuntimeException(\"Setter '\" + writeMethod + \"' of '\"+ target+ \"' with value '\"+ value+ \"' threw exception : '\"+ e.getTargetException()+ \"'\",e);\n}\ncatch (IllegalAccessException e) {\n  throw new RuntimeException(\"Access not authorized on field '\" + field + \"' of object '\"+ target+ \"' with value: '\"+ value+ \"'\",e);\n}\ncatch (NoSuchMethodException e) {\n  reportNoSetterFound();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 78,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1370,
        "startLineNumber" : 55,
        "startColumnNumber" : 43,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MemberAccessor accessor=Plugins.getMemberAccessor();\n  Method writeMethod=null;\n  try {\n    writeMethod=target.getClass().getMethod(setterName(field.getName()),field.getType());\n    accessor.invoke(writeMethod,target,value);\n    return true;\n  }\n catch (  InvocationTargetException e) {\n    throw new RuntimeException(\"Setter '\" + writeMethod + \"' of '\"+ target+ \"' with value '\"+ value+ \"' threw exception : '\"+ e.getTargetException()+ \"'\",e);\n  }\ncatch (  IllegalAccessException e) {\n    throw new RuntimeException(\"Access not authorized on field '\" + field + \"' of object '\"+ target+ \"' with value: '\"+ value+ \"'\",e);\n  }\ncatch (  NoSuchMethodException e) {\n    reportNoSetterFound();\n  }\n  reportNoSetterFound();\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1874,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Set the value to the property represented by this  {@link BeanPropertySetter}\n * @param value the new value to pass to the property setter\n * @return <code>true</code> if the value has been injected, <code>false</code> otherwise\n * @throws RuntimeException Can be thrown if the setter threw an exception, if the setter is not accessibleor, if <code>reportNoSetterFound</code> and setter could not be found.\n */\npublic boolean set(final Object value){\n  MemberAccessor accessor=Plugins.getMemberAccessor();\n  Method writeMethod=null;\n  try {\n    writeMethod=target.getClass().getMethod(setterName(field.getName()),field.getType());\n    accessor.invoke(writeMethod,target,value);\n    return true;\n  }\n catch (  InvocationTargetException e) {\n    throw new RuntimeException(\"Setter '\" + writeMethod + \"' of '\"+ target+ \"' with value '\"+ value+ \"' threw exception : '\"+ e.getTargetException()+ \"'\",e);\n  }\ncatch (  IllegalAccessException e) {\n    throw new RuntimeException(\"Access not authorized on field '\" + field + \"' of object '\"+ target+ \"' with value: '\"+ value+ \"'\",e);\n  }\ncatch (  NoSuchMethodException e) {\n    reportNoSetterFound();\n  }\n  reportNoSetterFound();\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 56
      },
      "nodeContext" : "accessor.invoke(writeMethod,target,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  }, {
    "nodeContext" : "writeMethod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 66,
      "startColumnNumber" : 30,
      "endLineNumber" : 66,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 65,
        "startColumnNumber" : 20,
        "endLineNumber" : 73,
        "endColumnNumber" : 33
      },
      "nodeContext" : "\"Setter '\" + writeMethod + \"' of '\"+ target+ \"' with value '\"+ value+ \"' threw exception : '\"+ e.getTargetException()+ \"'\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 64,
        "startColumnNumber" : 18,
        "endLineNumber" : 74,
        "endColumnNumber" : 22
      },
      "nodeContext" : "new RuntimeException(\"Setter '\" + writeMethod + \"' of '\"+ target+ \"' with value '\"+ value+ \"' threw exception : '\"+ e.getTargetException()+ \"'\",e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 23
      },
      "nodeContext" : "throw new RuntimeException(\"Setter '\" + writeMethod + \"' of '\"+ target+ \"' with value '\"+ value+ \"' threw exception : '\"+ e.getTargetException()+ \"'\",e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 63,
        "startColumnNumber" : 46,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new RuntimeException(\"Setter '\" + writeMethod + \"' of '\"+ target+ \"' with value '\"+ value+ \"' threw exception : '\"+ e.getTargetException()+ \"'\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 63,
        "startColumnNumber" : 10,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (InvocationTargetException e) {\n  throw new RuntimeException(\"Setter '\" + writeMethod + \"' of '\"+ target+ \"' with value '\"+ value+ \"' threw exception : '\"+ e.getTargetException()+ \"'\",e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1193,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  writeMethod=target.getClass().getMethod(setterName(field.getName()),field.getType());\n  accessor.invoke(writeMethod,target,value);\n  return true;\n}\n catch (InvocationTargetException e) {\n  throw new RuntimeException(\"Setter '\" + writeMethod + \"' of '\"+ target+ \"' with value '\"+ value+ \"' threw exception : '\"+ e.getTargetException()+ \"'\",e);\n}\ncatch (IllegalAccessException e) {\n  throw new RuntimeException(\"Access not authorized on field '\" + field + \"' of object '\"+ target+ \"' with value: '\"+ value+ \"'\",e);\n}\ncatch (NoSuchMethodException e) {\n  reportNoSetterFound();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 78,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1370,
        "startLineNumber" : 55,
        "startColumnNumber" : 43,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MemberAccessor accessor=Plugins.getMemberAccessor();\n  Method writeMethod=null;\n  try {\n    writeMethod=target.getClass().getMethod(setterName(field.getName()),field.getType());\n    accessor.invoke(writeMethod,target,value);\n    return true;\n  }\n catch (  InvocationTargetException e) {\n    throw new RuntimeException(\"Setter '\" + writeMethod + \"' of '\"+ target+ \"' with value '\"+ value+ \"' threw exception : '\"+ e.getTargetException()+ \"'\",e);\n  }\ncatch (  IllegalAccessException e) {\n    throw new RuntimeException(\"Access not authorized on field '\" + field + \"' of object '\"+ target+ \"' with value: '\"+ value+ \"'\",e);\n  }\ncatch (  NoSuchMethodException e) {\n    reportNoSetterFound();\n  }\n  reportNoSetterFound();\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1874,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Set the value to the property represented by this  {@link BeanPropertySetter}\n * @param value the new value to pass to the property setter\n * @return <code>true</code> if the value has been injected, <code>false</code> otherwise\n * @throws RuntimeException Can be thrown if the setter threw an exception, if the setter is not accessibleor, if <code>reportNoSetterFound</code> and setter could not be found.\n */\npublic boolean set(final Object value){\n  MemberAccessor accessor=Plugins.getMemberAccessor();\n  Method writeMethod=null;\n  try {\n    writeMethod=target.getClass().getMethod(setterName(field.getName()),field.getType());\n    accessor.invoke(writeMethod,target,value);\n    return true;\n  }\n catch (  InvocationTargetException e) {\n    throw new RuntimeException(\"Setter '\" + writeMethod + \"' of '\"+ target+ \"' with value '\"+ value+ \"' threw exception : '\"+ e.getTargetException()+ \"'\",e);\n  }\ncatch (  IllegalAccessException e) {\n    throw new RuntimeException(\"Access not authorized on field '\" + field + \"' of object '\"+ target+ \"' with value: '\"+ value+ \"'\",e);\n  }\ncatch (  NoSuchMethodException e) {\n    reportNoSetterFound();\n  }\n  reportNoSetterFound();\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 65,
        "startColumnNumber" : 20,
        "endLineNumber" : 73,
        "endColumnNumber" : 33
      },
      "nodeContext" : "\"Setter '\" + writeMethod + \"' of '\"+ target+ \"' with value '\"+ value+ \"' threw exception : '\"+ e.getTargetException()+ \"'\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Method"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 61,
    "startColumnNumber" : 28,
    "endLineNumber" : 61,
    "endColumnNumber" : 39
  }, {
    "charLength" : 11,
    "startLineNumber" : 66,
    "startColumnNumber" : 30,
    "endLineNumber" : 66,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}