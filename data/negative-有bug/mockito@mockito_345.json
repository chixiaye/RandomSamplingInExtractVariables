{
  "id" : 345,
  "expression" : "sb.append(\"[Mockito] Unused stubbings of: \")",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/debugging/InvocationsPrinter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sb.append(\"[Mockito] Unused stubbings of: \")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 52,
      "startColumnNumber" : 8,
      "endLineNumber" : 52,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 65
      },
      "nodeContext" : "sb.append(\"[Mockito] Unused stubbings of: \").append(mock)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 78
      },
      "nodeContext" : "sb.append(\"[Mockito] Unused stubbings of: \").append(mock).append(\"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 79
      },
      "nodeContext" : "sb.append(\"[Mockito] Unused stubbings of: \").append(mock).append(\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1687,
        "startLineNumber" : 20,
        "startColumnNumber" : 48,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<Invocation> invocations=Mockito.mockingDetails(mock).getInvocations();\n  Collection<Stubbing> stubbings=Mockito.mockingDetails(mock).getStubbings();\n  if (invocations.isEmpty() && stubbings.isEmpty()) {\n    return \"No interactions and stubbings found for mock: \" + mock;\n  }\n  StringBuilder sb=new StringBuilder();\n  int x=1;\n  for (  Invocation i : invocations) {\n    if (x == 1) {\n      sb.append(\"[Mockito] Interactions of: \").append(mock).append(\"\\n\");\n    }\n    sb.append(\" \").append(x++).append(\". \").append(i.toString()).append(\"\\n\");\n    sb.append(\"  \").append(i.getLocation()).append(\"\\n\");\n    if (i.stubInfo() != null) {\n      sb.append(\"   - stubbed \").append(i.stubInfo().stubbedAt()).append(\"\\n\");\n    }\n  }\n  LinkedList<Stubbing> unused=ListUtil.filter(stubbings,new ListUtil.Filter<Stubbing>(){\n    public boolean isOut(    Stubbing s){\n      return s.wasUsed();\n    }\n  }\n);\n  if (unused.isEmpty()) {\n    return sb.toString();\n  }\n  sb.append(\"[Mockito] Unused stubbings of: \").append(mock).append(\"\\n\");\n  x=1;\n  for (  Stubbing s : stubbings) {\n    sb.append(\" \").append(x++).append(\". \").append(s.getInvocation()).append(\"\\n\");\n    sb.append(\"  - stubbed \").append(s.getInvocation().getLocation()).append(\"\\n\");\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 237,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1731,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public String printInvocations(Object mock){\n  Collection<Invocation> invocations=Mockito.mockingDetails(mock).getInvocations();\n  Collection<Stubbing> stubbings=Mockito.mockingDetails(mock).getStubbings();\n  if (invocations.isEmpty() && stubbings.isEmpty()) {\n    return \"No interactions and stubbings found for mock: \" + mock;\n  }\n  StringBuilder sb=new StringBuilder();\n  int x=1;\n  for (  Invocation i : invocations) {\n    if (x == 1) {\n      sb.append(\"[Mockito] Interactions of: \").append(mock).append(\"\\n\");\n    }\n    sb.append(\" \").append(x++).append(\". \").append(i.toString()).append(\"\\n\");\n    sb.append(\"  \").append(i.getLocation()).append(\"\\n\");\n    if (i.stubInfo() != null) {\n      sb.append(\"   - stubbed \").append(i.stubInfo().stubbedAt()).append(\"\\n\");\n    }\n  }\n  LinkedList<Stubbing> unused=ListUtil.filter(stubbings,new ListUtil.Filter<Stubbing>(){\n    public boolean isOut(    Stubbing s){\n      return s.wasUsed();\n    }\n  }\n);\n  if (unused.isEmpty()) {\n    return sb.toString();\n  }\n  sb.append(\"[Mockito] Unused stubbings of: \").append(mock).append(\"\\n\");\n  x=1;\n  for (  Stubbing s : stubbings) {\n    sb.append(\" \").append(x++).append(\". \").append(s.getInvocation()).append(\"\\n\");\n    sb.append(\"  - stubbed \").append(s.getInvocation().getLocation()).append(\"\\n\");\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 246,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 79
      },
      "nodeContext" : "sb.append(\"[Mockito] Unused stubbings of: \").append(mock).append(\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 52,
    "startColumnNumber" : 8,
    "endLineNumber" : 52,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}