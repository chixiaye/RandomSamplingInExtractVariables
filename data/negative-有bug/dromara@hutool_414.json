{
  "id" : 414,
  "expression" : "CollectionUtil.filter(StrUtil.split(field,StrUtil.C_DOT),(Editor<String>)t -> StrUtil.format(\"{}{}{}\",preWrapQuote,t,sufWrapQuote))",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-db/src/main/java/cn/hutool/db/sql/Wrapper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CollectionUtil.filter(StrUtil.split(field,StrUtil.C_DOT),(Editor<String>)t -> StrUtil.format(\"{}{}{}\",preWrapQuote,t,sufWrapQuote))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 137,
      "startLineNumber" : 101,
      "startColumnNumber" : 37,
      "endLineNumber" : 101,
      "endColumnNumber" : 174
    },
    "astNodeNumber" : 26,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 101,
        "startColumnNumber" : 28,
        "endLineNumber" : 101,
        "endColumnNumber" : 174
      },
      "nodeContext" : "target=CollectionUtil.filter(StrUtil.split(field,StrUtil.C_DOT),(Editor<String>)t -> StrUtil.format(\"{}{}{}\",preWrapQuote,t,sufWrapQuote))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 101,
        "startColumnNumber" : 3,
        "endLineNumber" : 101,
        "endColumnNumber" : 175
      },
      "nodeContext" : "final Collection<String> target=CollectionUtil.filter(StrUtil.split(field,StrUtil.C_DOT),(Editor<String>)t -> StrUtil.format(\"{}{}{}\",preWrapQuote,t,sufWrapQuote));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 100,
        "startColumnNumber" : 33,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Collection<String> target=CollectionUtil.filter(StrUtil.split(field,StrUtil.C_DOT),(Editor<String>)t -> StrUtil.format(\"{}{}{}\",preWrapQuote,t,sufWrapQuote));\n  return CollectionUtil.join(target,StrUtil.DOT);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (field.contains(StrUtil.DOT)) {\n  final Collection<String> target=CollectionUtil.filter(StrUtil.split(field,StrUtil.C_DOT),(Editor<String>)t -> StrUtil.format(\"{}{}{}\",preWrapQuote,t,sufWrapQuote));\n  return CollectionUtil.join(target,StrUtil.DOT);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 84,
        "startColumnNumber" : 33,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (preWrapQuote == null || sufWrapQuote == null || StrUtil.isBlank(field)) {\n    return field;\n  }\n  if (StrUtil.isSurround(field,preWrapQuote,sufWrapQuote)) {\n    return field;\n  }\n  if (StrUtil.containsAnyIgnoreCase(field,\"*\",\"(\",\" \",\" as \")) {\n    return field;\n  }\n  if (field.contains(StrUtil.DOT)) {\n    final Collection<String> target=CollectionUtil.filter(StrUtil.split(field,StrUtil.C_DOT),(Editor<String>)t -> StrUtil.format(\"{}{}{}\",preWrapQuote,t,sufWrapQuote));\n    return CollectionUtil.join(target,StrUtil.DOT);\n  }\n  return StrUtil.format(\"{}{}{}\",preWrapQuote,field,sufWrapQuote);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 897,
        "startLineNumber" : 78,
        "startColumnNumber" : 1,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 包装字段名<br> 有时字段与SQL的某些关键字冲突，导致SQL出错，因此需要将字段名用单引号或者反引号包装起来，避免冲突\n * @param field 字段名\n * @return 包装后的字段名\n */\npublic String wrap(String field){\n  if (preWrapQuote == null || sufWrapQuote == null || StrUtil.isBlank(field)) {\n    return field;\n  }\n  if (StrUtil.isSurround(field,preWrapQuote,sufWrapQuote)) {\n    return field;\n  }\n  if (StrUtil.containsAnyIgnoreCase(field,\"*\",\"(\",\" \",\" as \")) {\n    return field;\n  }\n  if (field.contains(StrUtil.DOT)) {\n    final Collection<String> target=CollectionUtil.filter(StrUtil.split(field,StrUtil.C_DOT),(Editor<String>)t -> StrUtil.format(\"{}{}{}\",preWrapQuote,t,sufWrapQuote));\n    return CollectionUtil.join(target,StrUtil.DOT);\n  }\n  return StrUtil.format(\"{}{}{}\",preWrapQuote,field,sufWrapQuote);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 101,
        "startColumnNumber" : 3,
        "endLineNumber" : 101,
        "endColumnNumber" : 175
      },
      "nodeContext" : "final Collection<String> target=CollectionUtil.filter(StrUtil.split(field,StrUtil.C_DOT),(Editor<String>)t -> StrUtil.format(\"{}{}{}\",preWrapQuote,t,sufWrapQuote));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    },
    "tokenLength" : 16,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 137,
    "startLineNumber" : 101,
    "startColumnNumber" : 37,
    "endLineNumber" : 101,
    "endColumnNumber" : 174
  } ],
  "layoutRelationDataList" : [ ]
}