{
  "id" : 211,
  "expression" : "JSONObject.class",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/common/src/main/java/org/apache/rocketmq/common/flowcontrol/FlowControlConfig.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JSONObject.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 53,
      "startColumnNumber" : 12,
      "endLineNumber" : 53,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 52,
        "startColumnNumber" : 32,
        "endLineNumber" : 53,
        "endColumnNumber" : 29
      },
      "nodeContext" : "UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 52,
        "startColumnNumber" : 19,
        "endLineNumber" : 53,
        "endColumnNumber" : 29
      },
      "nodeContext" : "jsonObject=UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 30
      },
      "nodeContext" : "JSONObject jsonObject=UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2176,
        "startLineNumber" : 51,
        "startColumnNumber" : 40,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JSONObject jsonObject=UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class);\n  if (jsonObject != null && jsonObject.size() > 0) {\n    plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n    Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n    for (    Map.Entry<String,Object> entry : entries) {\n      String serverName=entry.getKey();\n      Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n      if (flowControlTypeMap == null) {\n        flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n        plainFlowControlRules.put(serverName,flowControlTypeMap);\n      }\n      LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n      Iterator iter=flowControlMap.entrySet().iterator();\n      while (iter.hasNext()) {\n        Map.Entry tmp=(Map.Entry)iter.next();\n        String flowControlType=(String)tmp.getKey();\n        List jsonList=(ArrayList)tmp.getValue();\n        if (jsonList != null) {\n          for (          Object json : jsonList) {\n            Map map=(LinkedHashMap)json;\n            FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n            List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n            if (flowControlRules == null) {\n              flowControlRules=new ArrayList<FlowControlRule>();\n              flowControlTypeMap.put(flowControlType,flowControlRules);\n            }\n            flowControlRules.add(flowControlRule);\n          }\n        }\n      }\n    }\n  }\n  log.warn(\"Load topic config: {}\",this.plainFlowControlRules);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 274,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2212,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void loadFlowControlConfig(){\n  JSONObject jsonObject=UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class);\n  if (jsonObject != null && jsonObject.size() > 0) {\n    plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n    Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n    for (    Map.Entry<String,Object> entry : entries) {\n      String serverName=entry.getKey();\n      Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n      if (flowControlTypeMap == null) {\n        flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n        plainFlowControlRules.put(serverName,flowControlTypeMap);\n      }\n      LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n      Iterator iter=flowControlMap.entrySet().iterator();\n      while (iter.hasNext()) {\n        Map.Entry tmp=(Map.Entry)iter.next();\n        String flowControlType=(String)tmp.getKey();\n        List jsonList=(ArrayList)tmp.getValue();\n        if (jsonList != null) {\n          for (          Object json : jsonList) {\n            Map map=(LinkedHashMap)json;\n            FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n            List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n            if (flowControlRules == null) {\n              flowControlRules=new ArrayList<FlowControlRule>();\n              flowControlTypeMap.put(flowControlType,flowControlRules);\n            }\n            flowControlRules.add(flowControlRule);\n          }\n        }\n      }\n    }\n  }\n  log.warn(\"Load topic config: {}\",this.plainFlowControlRules);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 278,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 52,
        "startColumnNumber" : 32,
        "endLineNumber" : 53,
        "endColumnNumber" : 29
      },
      "nodeContext" : "UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.rocketmq.common.flowcontrol.JSONObject>"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 53,
    "startColumnNumber" : 12,
    "endLineNumber" : 53,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}