{
  "id" : 397,
  "expression" : "mqProducer.getDefaultMQProducerImpl().fetchPublishMessageQueues(THREE_REPLICAS_TOPIC)",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/test/src/test/java/org/apache/rocketmq/test/container/SendMultipleReplicasIT.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mqProducer.getDefaultMQProducerImpl().fetchPublishMessageQueues(THREE_REPLICAS_TOPIC)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 85,
      "startLineNumber" : 93,
      "startColumnNumber" : 36,
      "endLineNumber" : 93,
      "endColumnNumber" : 121
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 93,
        "startColumnNumber" : 27,
        "endLineNumber" : 93,
        "endColumnNumber" : 121
      },
      "nodeContext" : "mqList=mqProducer.getDefaultMQProducerImpl().fetchPublishMessageQueues(THREE_REPLICAS_TOPIC)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 122
      },
      "nodeContext" : "List<MessageQueue> mqList=mqProducer.getDefaultMQProducerImpl().fetchPublishMessageQueues(THREE_REPLICAS_TOPIC);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2301,
        "startLineNumber" : 75,
        "startColumnNumber" : 69,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  await().atMost(100,TimeUnit.SECONDS).until(() -> ((DefaultMessageStore)master1With3Replicas.getMessageStore()).getHaService().getConnectionCount().get() == 2 && master1With3Replicas.getMessageStore().getAliveReplicaNumInGroup() == 3);\n  Message msg=new Message(THREE_REPLICAS_TOPIC,MESSAGE_BODY);\n  SendResult sendResult=mqProducer.send(msg);\n  assertThat(sendResult.getSendStatus()).isEqualTo(SendStatus.SEND_OK);\n  removeSlaveBroker(1,brokerContainer2,master1With3Replicas);\n  removeSlaveBroker(2,brokerContainer3,master1With3Replicas);\n  await().atMost(100,TimeUnit.SECONDS).until(() -> ((DefaultMessageStore)master1With3Replicas.getMessageStore()).getHaService().getConnectionCount().get() == 0 && master1With3Replicas.getMessageStore().getAliveReplicaNumInGroup() == 1);\n  master1With3Replicas.getMessageStoreConfig().setEnableAutoInSyncReplicas(true);\n  List<MessageQueue> mqList=mqProducer.getDefaultMQProducerImpl().fetchPublishMessageQueues(THREE_REPLICAS_TOPIC);\n  MessageQueue targetMq=null;\n  for (  MessageQueue mq : mqList) {\n    if (mq.getBrokerName().equals(master1With3Replicas.getBrokerConfig().getBrokerName())) {\n      targetMq=mq;\n    }\n  }\n  assertThat(targetMq).isNotNull();\n  msg=new Message(THREE_REPLICAS_TOPIC,MESSAGE_BODY);\n  sendResult=mqProducer.send(msg,targetMq);\n  assertThat(sendResult.getSendStatus()).isEqualTo(SendStatus.SEND_OK);\n  createAndAddSlave(1,brokerContainer2,master1With3Replicas);\n  createAndAddSlave(2,brokerContainer3,master1With3Replicas);\n  await().atMost(100,TimeUnit.SECONDS).until(() -> ((DefaultMessageStore)master1With3Replicas.getMessageStore()).getHaService().getConnectionCount().get() == 2 && master1With3Replicas.getMessageStore().getAliveReplicaNumInGroup() == 3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void sendMessage_Auto_Replicas_Success() throws Exception {\n  await().atMost(100,TimeUnit.SECONDS).until(() -> ((DefaultMessageStore)master1With3Replicas.getMessageStore()).getHaService().getConnectionCount().get() == 2 && master1With3Replicas.getMessageStore().getAliveReplicaNumInGroup() == 3);\n  Message msg=new Message(THREE_REPLICAS_TOPIC,MESSAGE_BODY);\n  SendResult sendResult=mqProducer.send(msg);\n  assertThat(sendResult.getSendStatus()).isEqualTo(SendStatus.SEND_OK);\n  removeSlaveBroker(1,brokerContainer2,master1With3Replicas);\n  removeSlaveBroker(2,brokerContainer3,master1With3Replicas);\n  await().atMost(100,TimeUnit.SECONDS).until(() -> ((DefaultMessageStore)master1With3Replicas.getMessageStore()).getHaService().getConnectionCount().get() == 0 && master1With3Replicas.getMessageStore().getAliveReplicaNumInGroup() == 1);\n  master1With3Replicas.getMessageStoreConfig().setEnableAutoInSyncReplicas(true);\n  List<MessageQueue> mqList=mqProducer.getDefaultMQProducerImpl().fetchPublishMessageQueues(THREE_REPLICAS_TOPIC);\n  MessageQueue targetMq=null;\n  for (  MessageQueue mq : mqList) {\n    if (mq.getBrokerName().equals(master1With3Replicas.getBrokerConfig().getBrokerName())) {\n      targetMq=mq;\n    }\n  }\n  assertThat(targetMq).isNotNull();\n  msg=new Message(THREE_REPLICAS_TOPIC,MESSAGE_BODY);\n  sendResult=mqProducer.send(msg,targetMq);\n  assertThat(sendResult.getSendStatus()).isEqualTo(SendStatus.SEND_OK);\n  createAndAddSlave(1,brokerContainer2,master1With3Replicas);\n  createAndAddSlave(2,brokerContainer3,master1With3Replicas);\n  await().atMost(100,TimeUnit.SECONDS).until(() -> ((DefaultMessageStore)master1With3Replicas.getMessageStore()).getHaService().getConnectionCount().get() == 2 && master1With3Replicas.getMessageStore().getAliveReplicaNumInGroup() == 3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 251,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 122
      },
      "nodeContext" : "List<MessageQueue> mqList=mqProducer.getDefaultMQProducerImpl().fetchPublishMessageQueues(THREE_REPLICAS_TOPIC);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.util.List<org.apache.rocketmq.common.message.MessageQueue>"
  } ],
  "positionList" : [ {
    "charLength" : 85,
    "startLineNumber" : 93,
    "startColumnNumber" : 36,
    "endLineNumber" : 93,
    "endColumnNumber" : 121
  } ],
  "layoutRelationDataList" : [ ]
}