{
  "id" : 411,
  "expression" : "generatedState.generatedFiles",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime-testsuite/test/org/antlr/v4/test/runtime/cpp/CppRunner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "generatedState.generatedFiles",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 149,
      "startColumnNumber" : 24,
      "endLineNumber" : 149,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 149,
        "startColumnNumber" : 24,
        "endLineNumber" : 149,
        "endColumnNumber" : 62
      },
      "nodeContext" : "generatedState.generatedFiles.stream()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 149,
        "startColumnNumber" : 24,
        "endLineNumber" : 149,
        "endColumnNumber" : 85
      },
      "nodeContext" : "generatedState.generatedFiles.stream().map(file -> file.name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 149,
        "startColumnNumber" : 24,
        "endLineNumber" : 149,
        "endColumnNumber" : 114
      },
      "nodeContext" : "generatedState.generatedFiles.stream().map(file -> file.name).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 115
      },
      "nodeContext" : "buildCommand.addAll(generatedState.generatedFiles.stream().map(file -> file.name).collect(Collectors.toList()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 116
      },
      "nodeContext" : "buildCommand.addAll(generatedState.generatedFiles.stream().map(file -> file.name).collect(Collectors.toList()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 150,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  buildCommand.add(\"-std=c++17\");\n  buildCommand.add(\"-I\");\n  buildCommand.add(runtimeSourcePath);\n  buildCommand.add(\"-L.\");\n  buildCommand.add(\"-lantlr4-runtime\");\n  buildCommand.add(\"-pthread\");\n  buildCommand.add(\"-o\");\n  buildCommand.add(getTestFileName() + \".out\");\n  buildCommand.add(getTestFileWithExt());\n  buildCommand.addAll(generatedState.generatedFiles.stream().map(file -> file.name).collect(Collectors.toList()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 648,
        "startLineNumber" : 134,
        "startColumnNumber" : 3,
        "endLineNumber" : 150,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (isWindows()) {\n  buildCommand.add(getTestFileName() + \".vcxproj\");\n  buildCommand.add(\"/p:configuration=Release\");\n  buildCommand.add(\"/p:platform=x64\");\n}\n else {\n  buildCommand.add(\"-std=c++17\");\n  buildCommand.add(\"-I\");\n  buildCommand.add(runtimeSourcePath);\n  buildCommand.add(\"-L.\");\n  buildCommand.add(\"-lantlr4-runtime\");\n  buildCommand.add(\"-pthread\");\n  buildCommand.add(\"-o\");\n  buildCommand.add(getTestFileName() + \".out\");\n  buildCommand.add(getTestFileWithExt());\n  buildCommand.addAll(generatedState.generatedFiles.stream().map(file -> file.name).collect(Collectors.toList()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1031,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!isWindows()) {\n    String[] linkCommand=new String[]{\"ln\",\"-s\",runtimeLibraryFileName};\n    runCommand(linkCommand,getTempDirPath(),\"sym link C++ runtime\");\n  }\n  List<String> buildCommand=new ArrayList<>();\n  buildCommand.add(getCompilerPath());\n  if (isWindows()) {\n    buildCommand.add(getTestFileName() + \".vcxproj\");\n    buildCommand.add(\"/p:configuration=Release\");\n    buildCommand.add(\"/p:platform=x64\");\n  }\n else {\n    buildCommand.add(\"-std=c++17\");\n    buildCommand.add(\"-I\");\n    buildCommand.add(runtimeSourcePath);\n    buildCommand.add(\"-L.\");\n    buildCommand.add(\"-lantlr4-runtime\");\n    buildCommand.add(\"-pthread\");\n    buildCommand.add(\"-o\");\n    buildCommand.add(getTestFileName() + \".out\");\n    buildCommand.add(getTestFileWithExt());\n    buildCommand.addAll(generatedState.generatedFiles.stream().map(file -> file.name).collect(Collectors.toList()));\n  }\n  runCommand(buildCommand.toArray(new String[0]),getTempDirPath(),\"build test c++ binary\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 156,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  if (!isWindows()) {\n    String[] linkCommand=new String[]{\"ln\",\"-s\",runtimeLibraryFileName};\n    runCommand(linkCommand,getTempDirPath(),\"sym link C++ runtime\");\n  }\n  List<String> buildCommand=new ArrayList<>();\n  buildCommand.add(getCompilerPath());\n  if (isWindows()) {\n    buildCommand.add(getTestFileName() + \".vcxproj\");\n    buildCommand.add(\"/p:configuration=Release\");\n    buildCommand.add(\"/p:platform=x64\");\n  }\n else {\n    buildCommand.add(\"-std=c++17\");\n    buildCommand.add(\"-I\");\n    buildCommand.add(runtimeSourcePath);\n    buildCommand.add(\"-L.\");\n    buildCommand.add(\"-lantlr4-runtime\");\n    buildCommand.add(\"-pthread\");\n    buildCommand.add(\"-o\");\n    buildCommand.add(getTestFileName() + \".out\");\n    buildCommand.add(getTestFileWithExt());\n    buildCommand.addAll(generatedState.generatedFiles.stream().map(file -> file.name).collect(Collectors.toList()));\n  }\n  runCommand(buildCommand.toArray(new String[0]),getTempDirPath(),\"build test c++ binary\");\n}\n catch (Exception ex) {\n  exception=ex;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 167,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1367,
        "startLineNumber" : 119,
        "startColumnNumber" : 87,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isWindows()) {\n    writeVisualStudioProjectFile(runOptions.grammarName,runOptions.lexerName,runOptions.parserName,runOptions.useListener,runOptions.useVisitor);\n  }\n  Exception exception=null;\n  try {\n    if (!isWindows()) {\n      String[] linkCommand=new String[]{\"ln\",\"-s\",runtimeLibraryFileName};\n      runCommand(linkCommand,getTempDirPath(),\"sym link C++ runtime\");\n    }\n    List<String> buildCommand=new ArrayList<>();\n    buildCommand.add(getCompilerPath());\n    if (isWindows()) {\n      buildCommand.add(getTestFileName() + \".vcxproj\");\n      buildCommand.add(\"/p:configuration=Release\");\n      buildCommand.add(\"/p:platform=x64\");\n    }\n else {\n      buildCommand.add(\"-std=c++17\");\n      buildCommand.add(\"-I\");\n      buildCommand.add(runtimeSourcePath);\n      buildCommand.add(\"-L.\");\n      buildCommand.add(\"-lantlr4-runtime\");\n      buildCommand.add(\"-pthread\");\n      buildCommand.add(\"-o\");\n      buildCommand.add(getTestFileName() + \".out\");\n      buildCommand.add(getTestFileWithExt());\n      buildCommand.addAll(generatedState.generatedFiles.stream().map(file -> file.name).collect(Collectors.toList()));\n    }\n    runCommand(buildCommand.toArray(new String[0]),getTempDirPath(),\"build test c++ binary\");\n  }\n catch (  Exception ex) {\n    exception=ex;\n  }\n  return new CompiledState(generatedState,exception);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1465,
        "startLineNumber" : 118,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected CompiledState compile(RunOptions runOptions,GeneratedState generatedState){\n  if (isWindows()) {\n    writeVisualStudioProjectFile(runOptions.grammarName,runOptions.lexerName,runOptions.parserName,runOptions.useListener,runOptions.useVisitor);\n  }\n  Exception exception=null;\n  try {\n    if (!isWindows()) {\n      String[] linkCommand=new String[]{\"ln\",\"-s\",runtimeLibraryFileName};\n      runCommand(linkCommand,getTempDirPath(),\"sym link C++ runtime\");\n    }\n    List<String> buildCommand=new ArrayList<>();\n    buildCommand.add(getCompilerPath());\n    if (isWindows()) {\n      buildCommand.add(getTestFileName() + \".vcxproj\");\n      buildCommand.add(\"/p:configuration=Release\");\n      buildCommand.add(\"/p:platform=x64\");\n    }\n else {\n      buildCommand.add(\"-std=c++17\");\n      buildCommand.add(\"-I\");\n      buildCommand.add(runtimeSourcePath);\n      buildCommand.add(\"-L.\");\n      buildCommand.add(\"-lantlr4-runtime\");\n      buildCommand.add(\"-pthread\");\n      buildCommand.add(\"-o\");\n      buildCommand.add(getTestFileName() + \".out\");\n      buildCommand.add(getTestFileWithExt());\n      buildCommand.addAll(generatedState.generatedFiles.stream().map(file -> file.name).collect(Collectors.toList()));\n    }\n    runCommand(buildCommand.toArray(new String[0]),getTempDirPath(),\"build test c++ binary\");\n  }\n catch (  Exception ex) {\n    exception=ex;\n  }\n  return new CompiledState(generatedState,exception);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 217,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 116
      },
      "nodeContext" : "buildCommand.addAll(generatedState.generatedFiles.stream().map(file -> file.name).collect(Collectors.toList()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.util.List<org.antlr.v4.test.runtime.GeneratedFile>"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 149,
    "startColumnNumber" : 24,
    "endLineNumber" : 149,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}