{
  "id" : 67,
  "expression" : "\"jueyin_tag\"",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/test/src/test/java/org/apache/rocketmq/test/client/producer/order/OrderMsgWithTagIT.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"jueyin_tag\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 56,
      "startColumnNumber" : 21,
      "endLineNumber" : 56,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 33
      },
      "nodeContext" : "tag=\"jueyin_tag\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 34
      },
      "nodeContext" : "String tag=\"jueyin_tag\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 759,
        "startLineNumber" : 54,
        "startColumnNumber" : 44,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=10;\n  String tag=\"jueyin_tag\";\n  RMQNormalConsumer consumer=getConsumer(nsAddr,topic,\"*\",new RMQOrderListener());\n  List<MessageQueue> mqs=producer.getMessageQueue();\n  MessageQueueMsg mqMsgs=new MessageQueueMsg(mqs,msgSize,tag);\n  producer.send(mqMsgs.getMsgsWithMQ());\n  consumer.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer.getListener().getAllMsgBody())).containsExactlyElementsIn(mqMsgs.getMsgBodys());\n  assertThat(VerifyUtils.verifyOrder(((RMQOrderListener)consumer.getListener()).getMsgs())).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 809,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testOrderMsgWithTagSubAll(){\n  int msgSize=10;\n  String tag=\"jueyin_tag\";\n  RMQNormalConsumer consumer=getConsumer(nsAddr,topic,\"*\",new RMQOrderListener());\n  List<MessageQueue> mqs=producer.getMessageQueue();\n  MessageQueueMsg mqMsgs=new MessageQueueMsg(mqs,msgSize,tag);\n  producer.send(mqMsgs.getMsgsWithMQ());\n  consumer.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer.getListener().getAllMsgBody())).containsExactlyElementsIn(mqMsgs.getMsgBodys());\n  assertThat(VerifyUtils.verifyOrder(((RMQOrderListener)consumer.getListener()).getMsgs())).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 34
      },
      "nodeContext" : "String tag=\"jueyin_tag\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 56,
    "startColumnNumber" : 21,
    "endLineNumber" : 56,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}