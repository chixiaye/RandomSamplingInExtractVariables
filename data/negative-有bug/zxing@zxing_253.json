{
  "id" : 253,
  "expression" : "fc1InEffect",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/qrcode/decoder/DecodedBitStreamParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fc1InEffect",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 109,
      "startColumnNumber" : 61,
      "endLineNumber" : 109,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 109,
        "startColumnNumber" : 14,
        "endLineNumber" : 109,
        "endColumnNumber" : 73
      },
      "nodeContext" : "decodeAlphanumericSegment(bits,result,count,fc1InEffect)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 109,
        "startColumnNumber" : 14,
        "endLineNumber" : 109,
        "endColumnNumber" : 74
      },
      "nodeContext" : "decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 108,
        "startColumnNumber" : 50,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 116,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mode == Mode.ALPHANUMERIC) {\n  decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n}\n else if (mode == Mode.BYTE) {\n  decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n}\n else if (mode == Mode.KANJI) {\n  decodeKanjiSegment(bits,result,count);\n}\n else {\n  throw FormatException.getFormatInstance();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 116,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mode == Mode.NUMERIC) {\n  decodeNumericSegment(bits,result,count);\n}\n else if (mode == Mode.ALPHANUMERIC) {\n  decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n}\n else if (mode == Mode.BYTE) {\n  decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n}\n else if (mode == Mode.KANJI) {\n  decodeKanjiSegment(bits,result,count);\n}\n else {\n  throw FormatException.getFormatInstance();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 772,
        "startLineNumber" : 102,
        "startColumnNumber" : 17,
        "endLineNumber" : 117,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  int count=bits.readBits(mode.getCharacterCountBits(version));\n  if (mode == Mode.NUMERIC) {\n    decodeNumericSegment(bits,result,count);\n  }\n else   if (mode == Mode.ALPHANUMERIC) {\n    decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n  }\n else   if (mode == Mode.BYTE) {\n    decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n  }\n else   if (mode == Mode.KANJI) {\n    decodeKanjiSegment(bits,result,count);\n  }\n else {\n    throw FormatException.getFormatInstance();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 95,
        "startColumnNumber" : 10,
        "endLineNumber" : 117,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (mode == Mode.HANZI) {\n  int subset=bits.readBits(4);\n  int countHanzi=bits.readBits(mode.getCharacterCountBits(version));\n  if (subset == GB2312_SUBSET) {\n    decodeHanziSegment(bits,result,countHanzi);\n  }\n}\n else {\n  int count=bits.readBits(mode.getCharacterCountBits(version));\n  if (mode == Mode.NUMERIC) {\n    decodeNumericSegment(bits,result,count);\n  }\n else   if (mode == Mode.ALPHANUMERIC) {\n    decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n  }\n else   if (mode == Mode.BYTE) {\n    decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n  }\n else   if (mode == Mode.KANJI) {\n    decodeKanjiSegment(bits,result,count);\n  }\n else {\n    throw FormatException.getFormatInstance();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1239,
        "startLineNumber" : 93,
        "startColumnNumber" : 15,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (mode == Mode.HANZI) {\n    int subset=bits.readBits(4);\n    int countHanzi=bits.readBits(mode.getCharacterCountBits(version));\n    if (subset == GB2312_SUBSET) {\n      decodeHanziSegment(bits,result,countHanzi);\n    }\n  }\n else {\n    int count=bits.readBits(mode.getCharacterCountBits(version));\n    if (mode == Mode.NUMERIC) {\n      decodeNumericSegment(bits,result,count);\n    }\n else     if (mode == Mode.ALPHANUMERIC) {\n      decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n    }\n else     if (mode == Mode.BYTE) {\n      decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n    }\n else     if (mode == Mode.KANJI) {\n      decodeKanjiSegment(bits,result,count);\n    }\n else {\n      throw FormatException.getFormatInstance();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1568,
        "startLineNumber" : 86,
        "startColumnNumber" : 15,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mode == Mode.ECI) {\n  int value=parseECIValue(bits);\n  currentCharacterSetECI=CharacterSetECI.getCharacterSetECIByValue(value);\n  if (currentCharacterSetECI == null) {\n    throw FormatException.getFormatInstance();\n  }\n}\n else {\n  if (mode == Mode.HANZI) {\n    int subset=bits.readBits(4);\n    int countHanzi=bits.readBits(mode.getCharacterCountBits(version));\n    if (subset == GB2312_SUBSET) {\n      decodeHanziSegment(bits,result,countHanzi);\n    }\n  }\n else {\n    int count=bits.readBits(mode.getCharacterCountBits(version));\n    if (mode == Mode.NUMERIC) {\n      decodeNumericSegment(bits,result,count);\n    }\n else     if (mode == Mode.ALPHANUMERIC) {\n      decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n    }\n else     if (mode == Mode.BYTE) {\n      decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n    }\n else     if (mode == Mode.KANJI) {\n      decodeKanjiSegment(bits,result,count);\n    }\n else {\n      throw FormatException.getFormatInstance();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1802,
        "startLineNumber" : 82,
        "startColumnNumber" : 15,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mode == Mode.STRUCTURED_APPEND) {\n  bits.readBits(16);\n}\n else if (mode == Mode.ECI) {\n  int value=parseECIValue(bits);\n  currentCharacterSetECI=CharacterSetECI.getCharacterSetECIByValue(value);\n  if (currentCharacterSetECI == null) {\n    throw FormatException.getFormatInstance();\n  }\n}\n else {\n  if (mode == Mode.HANZI) {\n    int subset=bits.readBits(4);\n    int countHanzi=bits.readBits(mode.getCharacterCountBits(version));\n    if (subset == GB2312_SUBSET) {\n      decodeHanziSegment(bits,result,countHanzi);\n    }\n  }\n else {\n    int count=bits.readBits(mode.getCharacterCountBits(version));\n    if (mode == Mode.NUMERIC) {\n      decodeNumericSegment(bits,result,count);\n    }\n else     if (mode == Mode.ALPHANUMERIC) {\n      decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n    }\n else     if (mode == Mode.BYTE) {\n      decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n    }\n else     if (mode == Mode.KANJI) {\n      decodeKanjiSegment(bits,result,count);\n    }\n else {\n      throw FormatException.getFormatInstance();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 153,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2022,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mode == Mode.FNC1_FIRST_POSITION || mode == Mode.FNC1_SECOND_POSITION) {\n  fc1InEffect=true;\n}\n else if (mode == Mode.STRUCTURED_APPEND) {\n  bits.readBits(16);\n}\n else if (mode == Mode.ECI) {\n  int value=parseECIValue(bits);\n  currentCharacterSetECI=CharacterSetECI.getCharacterSetECIByValue(value);\n  if (currentCharacterSetECI == null) {\n    throw FormatException.getFormatInstance();\n  }\n}\n else {\n  if (mode == Mode.HANZI) {\n    int subset=bits.readBits(4);\n    int countHanzi=bits.readBits(mode.getCharacterCountBits(version));\n    if (subset == GB2312_SUBSET) {\n      decodeHanziSegment(bits,result,countHanzi);\n    }\n  }\n else {\n    int count=bits.readBits(mode.getCharacterCountBits(version));\n    if (mode == Mode.NUMERIC) {\n      decodeNumericSegment(bits,result,count);\n    }\n else     if (mode == Mode.ALPHANUMERIC) {\n      decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n    }\n else     if (mode == Mode.BYTE) {\n      decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n    }\n else     if (mode == Mode.KANJI) {\n      decodeKanjiSegment(bits,result,count);\n    }\n else {\n      throw FormatException.getFormatInstance();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 170,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2042,
        "startLineNumber" : 78,
        "startColumnNumber" : 35,
        "endLineNumber" : 119,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (mode == Mode.FNC1_FIRST_POSITION || mode == Mode.FNC1_SECOND_POSITION) {\n    fc1InEffect=true;\n  }\n else   if (mode == Mode.STRUCTURED_APPEND) {\n    bits.readBits(16);\n  }\n else   if (mode == Mode.ECI) {\n    int value=parseECIValue(bits);\n    currentCharacterSetECI=CharacterSetECI.getCharacterSetECIByValue(value);\n    if (currentCharacterSetECI == null) {\n      throw FormatException.getFormatInstance();\n    }\n  }\n else {\n    if (mode == Mode.HANZI) {\n      int subset=bits.readBits(4);\n      int countHanzi=bits.readBits(mode.getCharacterCountBits(version));\n      if (subset == GB2312_SUBSET) {\n        decodeHanziSegment(bits,result,countHanzi);\n      }\n    }\n else {\n      int count=bits.readBits(mode.getCharacterCountBits(version));\n      if (mode == Mode.NUMERIC) {\n        decodeNumericSegment(bits,result,count);\n      }\n else       if (mode == Mode.ALPHANUMERIC) {\n        decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n      }\n else       if (mode == Mode.BYTE) {\n        decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n      }\n else       if (mode == Mode.KANJI) {\n        decodeKanjiSegment(bits,result,count);\n      }\n else {\n        throw FormatException.getFormatInstance();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2071,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 119,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (mode != Mode.TERMINATOR) {\n  if (mode == Mode.FNC1_FIRST_POSITION || mode == Mode.FNC1_SECOND_POSITION) {\n    fc1InEffect=true;\n  }\n else   if (mode == Mode.STRUCTURED_APPEND) {\n    bits.readBits(16);\n  }\n else   if (mode == Mode.ECI) {\n    int value=parseECIValue(bits);\n    currentCharacterSetECI=CharacterSetECI.getCharacterSetECIByValue(value);\n    if (currentCharacterSetECI == null) {\n      throw FormatException.getFormatInstance();\n    }\n  }\n else {\n    if (mode == Mode.HANZI) {\n      int subset=bits.readBits(4);\n      int countHanzi=bits.readBits(mode.getCharacterCountBits(version));\n      if (subset == GB2312_SUBSET) {\n        decodeHanziSegment(bits,result,countHanzi);\n      }\n    }\n else {\n      int count=bits.readBits(mode.getCharacterCountBits(version));\n      if (mode == Mode.NUMERIC) {\n        decodeNumericSegment(bits,result,count);\n      }\n else       if (mode == Mode.ALPHANUMERIC) {\n        decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n      }\n else       if (mode == Mode.BYTE) {\n        decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n      }\n else       if (mode == Mode.KANJI) {\n        decodeKanjiSegment(bits,result,count);\n      }\n else {\n        throw FormatException.getFormatInstance();\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 177,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 2530,
        "startLineNumber" : 66,
        "startColumnNumber" : 7,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (bits.available() < 4) {\n    mode=Mode.TERMINATOR;\n  }\n else {\n    try {\n      mode=Mode.forBits(bits.readBits(4));\n    }\n catch (    IllegalArgumentException iae) {\n      throw FormatException.getFormatInstance();\n    }\n  }\n  if (mode != Mode.TERMINATOR) {\n    if (mode == Mode.FNC1_FIRST_POSITION || mode == Mode.FNC1_SECOND_POSITION) {\n      fc1InEffect=true;\n    }\n else     if (mode == Mode.STRUCTURED_APPEND) {\n      bits.readBits(16);\n    }\n else     if (mode == Mode.ECI) {\n      int value=parseECIValue(bits);\n      currentCharacterSetECI=CharacterSetECI.getCharacterSetECIByValue(value);\n      if (currentCharacterSetECI == null) {\n        throw FormatException.getFormatInstance();\n      }\n    }\n else {\n      if (mode == Mode.HANZI) {\n        int subset=bits.readBits(4);\n        int countHanzi=bits.readBits(mode.getCharacterCountBits(version));\n        if (subset == GB2312_SUBSET) {\n          decodeHanziSegment(bits,result,countHanzi);\n        }\n      }\n else {\n        int count=bits.readBits(mode.getCharacterCountBits(version));\n        if (mode == Mode.NUMERIC) {\n          decodeNumericSegment(bits,result,count);\n        }\n else         if (mode == Mode.ALPHANUMERIC) {\n          decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n        }\n else         if (mode == Mode.BYTE) {\n          decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n        }\n else         if (mode == Mode.KANJI) {\n          decodeKanjiSegment(bits,result,count);\n        }\n else {\n          throw FormatException.getFormatInstance();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2566,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 38
      },
      "nodeContext" : "do {\n  if (bits.available() < 4) {\n    mode=Mode.TERMINATOR;\n  }\n else {\n    try {\n      mode=Mode.forBits(bits.readBits(4));\n    }\n catch (    IllegalArgumentException iae) {\n      throw FormatException.getFormatInstance();\n    }\n  }\n  if (mode != Mode.TERMINATOR) {\n    if (mode == Mode.FNC1_FIRST_POSITION || mode == Mode.FNC1_SECOND_POSITION) {\n      fc1InEffect=true;\n    }\n else     if (mode == Mode.STRUCTURED_APPEND) {\n      bits.readBits(16);\n    }\n else     if (mode == Mode.ECI) {\n      int value=parseECIValue(bits);\n      currentCharacterSetECI=CharacterSetECI.getCharacterSetECIByValue(value);\n      if (currentCharacterSetECI == null) {\n        throw FormatException.getFormatInstance();\n      }\n    }\n else {\n      if (mode == Mode.HANZI) {\n        int subset=bits.readBits(4);\n        int countHanzi=bits.readBits(mode.getCharacterCountBits(version));\n        if (subset == GB2312_SUBSET) {\n          decodeHanziSegment(bits,result,countHanzi);\n        }\n      }\n else {\n        int count=bits.readBits(mode.getCharacterCountBits(version));\n        if (mode == Mode.NUMERIC) {\n          decodeNumericSegment(bits,result,count);\n        }\n else         if (mode == Mode.ALPHANUMERIC) {\n          decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n        }\n else         if (mode == Mode.BYTE) {\n          decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n        }\n else         if (mode == Mode.KANJI) {\n          decodeKanjiSegment(bits,result,count);\n        }\n else {\n          throw FormatException.getFormatInstance();\n        }\n      }\n    }\n  }\n}\n while (mode != Mode.TERMINATOR);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 220,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3074,
        "startLineNumber" : 59,
        "startColumnNumber" : 82,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BitSource bits=new BitSource(bytes);\n  StringBuilder result=new StringBuilder(50);\n  CharacterSetECI currentCharacterSetECI=null;\n  boolean fc1InEffect=false;\n  List<byte[]> byteSegments=new ArrayList<byte[]>(1);\n  Mode mode;\n  do {\n    if (bits.available() < 4) {\n      mode=Mode.TERMINATOR;\n    }\n else {\n      try {\n        mode=Mode.forBits(bits.readBits(4));\n      }\n catch (      IllegalArgumentException iae) {\n        throw FormatException.getFormatInstance();\n      }\n    }\n    if (mode != Mode.TERMINATOR) {\n      if (mode == Mode.FNC1_FIRST_POSITION || mode == Mode.FNC1_SECOND_POSITION) {\n        fc1InEffect=true;\n      }\n else       if (mode == Mode.STRUCTURED_APPEND) {\n        bits.readBits(16);\n      }\n else       if (mode == Mode.ECI) {\n        int value=parseECIValue(bits);\n        currentCharacterSetECI=CharacterSetECI.getCharacterSetECIByValue(value);\n        if (currentCharacterSetECI == null) {\n          throw FormatException.getFormatInstance();\n        }\n      }\n else {\n        if (mode == Mode.HANZI) {\n          int subset=bits.readBits(4);\n          int countHanzi=bits.readBits(mode.getCharacterCountBits(version));\n          if (subset == GB2312_SUBSET) {\n            decodeHanziSegment(bits,result,countHanzi);\n          }\n        }\n else {\n          int count=bits.readBits(mode.getCharacterCountBits(version));\n          if (mode == Mode.NUMERIC) {\n            decodeNumericSegment(bits,result,count);\n          }\n else           if (mode == Mode.ALPHANUMERIC) {\n            decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n          }\n else           if (mode == Mode.BYTE) {\n            decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n          }\n else           if (mode == Mode.KANJI) {\n            decodeKanjiSegment(bits,result,count);\n          }\n else {\n            throw FormatException.getFormatInstance();\n          }\n        }\n      }\n    }\n  }\n while (mode != Mode.TERMINATOR);\n  return new DecoderResult(bytes,result.toString(),byteSegments.isEmpty() ? null : byteSegments,ecLevel == null ? null : ecLevel.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 294,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3308,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static DecoderResult decode(byte[] bytes,Version version,ErrorCorrectionLevel ecLevel,Map<DecodeHintType,?> hints) throws FormatException {\n  BitSource bits=new BitSource(bytes);\n  StringBuilder result=new StringBuilder(50);\n  CharacterSetECI currentCharacterSetECI=null;\n  boolean fc1InEffect=false;\n  List<byte[]> byteSegments=new ArrayList<byte[]>(1);\n  Mode mode;\n  do {\n    if (bits.available() < 4) {\n      mode=Mode.TERMINATOR;\n    }\n else {\n      try {\n        mode=Mode.forBits(bits.readBits(4));\n      }\n catch (      IllegalArgumentException iae) {\n        throw FormatException.getFormatInstance();\n      }\n    }\n    if (mode != Mode.TERMINATOR) {\n      if (mode == Mode.FNC1_FIRST_POSITION || mode == Mode.FNC1_SECOND_POSITION) {\n        fc1InEffect=true;\n      }\n else       if (mode == Mode.STRUCTURED_APPEND) {\n        bits.readBits(16);\n      }\n else       if (mode == Mode.ECI) {\n        int value=parseECIValue(bits);\n        currentCharacterSetECI=CharacterSetECI.getCharacterSetECIByValue(value);\n        if (currentCharacterSetECI == null) {\n          throw FormatException.getFormatInstance();\n        }\n      }\n else {\n        if (mode == Mode.HANZI) {\n          int subset=bits.readBits(4);\n          int countHanzi=bits.readBits(mode.getCharacterCountBits(version));\n          if (subset == GB2312_SUBSET) {\n            decodeHanziSegment(bits,result,countHanzi);\n          }\n        }\n else {\n          int count=bits.readBits(mode.getCharacterCountBits(version));\n          if (mode == Mode.NUMERIC) {\n            decodeNumericSegment(bits,result,count);\n          }\n else           if (mode == Mode.ALPHANUMERIC) {\n            decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n          }\n else           if (mode == Mode.BYTE) {\n            decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);\n          }\n else           if (mode == Mode.KANJI) {\n            decodeKanjiSegment(bits,result,count);\n          }\n else {\n            throw FormatException.getFormatInstance();\n          }\n        }\n      }\n    }\n  }\n while (mode != Mode.TERMINATOR);\n  return new DecoderResult(bytes,result.toString(),byteSegments.isEmpty() ? null : byteSegments,ecLevel == null ? null : ecLevel.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 109,
        "startColumnNumber" : 14,
        "endLineNumber" : 109,
        "endColumnNumber" : 74
      },
      "nodeContext" : "decodeAlphanumericSegment(bits,result,count,fc1InEffect);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 109,
    "startColumnNumber" : 61,
    "endLineNumber" : 109,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}