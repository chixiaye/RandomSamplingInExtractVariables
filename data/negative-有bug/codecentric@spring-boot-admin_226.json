{
  "id" : 226,
  "expression" : "mapping",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/web/PrefixHandlerMappingTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mapping",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 43,
      "startColumnNumber" : 8,
      "endLineNumber" : 43,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 51
      },
      "nodeContext" : "mapping.setApplicationContext(this.context)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 52
      },
      "nodeContext" : "mapping.setApplicationContext(this.context);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 40,
        "startColumnNumber" : 49,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestController controller=new TestController();\n  PrefixHandlerMapping mapping=new PrefixHandlerMapping(controller);\n  mapping.setApplicationContext(this.context);\n  mapping.afterPropertiesSet();\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler()).isEqualTo(new HandlerMethod(controller,this.method));\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\"))).isNull();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void withoutPrefix() throws Exception {\n  TestController controller=new TestController();\n  PrefixHandlerMapping mapping=new PrefixHandlerMapping(controller);\n  mapping.setApplicationContext(this.context);\n  mapping.afterPropertiesSet();\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler()).isEqualTo(new HandlerMethod(controller,this.method));\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\"))).isNull();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 52
      },
      "nodeContext" : "mapping.setApplicationContext(this.context);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "de.codecentric.boot.admin.server.web.PrefixHandlerMapping"
  }, {
    "nodeContext" : "mapping",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 44,
      "startColumnNumber" : 8,
      "endLineNumber" : 44,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 36
      },
      "nodeContext" : "mapping.afterPropertiesSet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 37
      },
      "nodeContext" : "mapping.afterPropertiesSet();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 40,
        "startColumnNumber" : 49,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestController controller=new TestController();\n  PrefixHandlerMapping mapping=new PrefixHandlerMapping(controller);\n  mapping.setApplicationContext(this.context);\n  mapping.afterPropertiesSet();\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler()).isEqualTo(new HandlerMethod(controller,this.method));\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\"))).isNull();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void withoutPrefix() throws Exception {\n  TestController controller=new TestController();\n  PrefixHandlerMapping mapping=new PrefixHandlerMapping(controller);\n  mapping.setApplicationContext(this.context);\n  mapping.afterPropertiesSet();\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler()).isEqualTo(new HandlerMethod(controller,this.method));\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\"))).isNull();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 37
      },
      "nodeContext" : "mapping.afterPropertiesSet();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "de.codecentric.boot.admin.server.web.PrefixHandlerMapping"
  }, {
    "nodeContext" : "mapping",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 45,
      "startColumnNumber" : 19,
      "endLineNumber" : 45,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 45,
        "startColumnNumber" : 19,
        "endLineNumber" : 45,
        "endColumnNumber" : 81
      },
      "nodeContext" : "mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 45,
        "startColumnNumber" : 19,
        "endLineNumber" : 45,
        "endColumnNumber" : 94
      },
      "nodeContext" : "mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler()).isEqualTo(new HandlerMethod(controller,this.method))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler()).isEqualTo(new HandlerMethod(controller,this.method));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 40,
        "startColumnNumber" : 49,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestController controller=new TestController();\n  PrefixHandlerMapping mapping=new PrefixHandlerMapping(controller);\n  mapping.setApplicationContext(this.context);\n  mapping.afterPropertiesSet();\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler()).isEqualTo(new HandlerMethod(controller,this.method));\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\"))).isNull();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void withoutPrefix() throws Exception {\n  TestController controller=new TestController();\n  PrefixHandlerMapping mapping=new PrefixHandlerMapping(controller);\n  mapping.setApplicationContext(this.context);\n  mapping.afterPropertiesSet();\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler()).isEqualTo(new HandlerMethod(controller,this.method));\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\"))).isNull();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "de.codecentric.boot.admin.server.web.PrefixHandlerMapping"
  }, {
    "nodeContext" : "mapping",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 47,
      "startColumnNumber" : 19,
      "endLineNumber" : 47,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 47,
        "startColumnNumber" : 19,
        "endLineNumber" : 47,
        "endColumnNumber" : 81
      },
      "nodeContext" : "mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\"))).isNull()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\"))).isNull();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 40,
        "startColumnNumber" : 49,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestController controller=new TestController();\n  PrefixHandlerMapping mapping=new PrefixHandlerMapping(controller);\n  mapping.setApplicationContext(this.context);\n  mapping.afterPropertiesSet();\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler()).isEqualTo(new HandlerMethod(controller,this.method));\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\"))).isNull();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void withoutPrefix() throws Exception {\n  TestController controller=new TestController();\n  PrefixHandlerMapping mapping=new PrefixHandlerMapping(controller);\n  mapping.setApplicationContext(this.context);\n  mapping.afterPropertiesSet();\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/test\")).getHandler()).isEqualTo(new HandlerMethod(controller,this.method));\n  assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\"))).isNull();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertThat(mapping.getHandler(new MockHttpServletRequest(\"GET\",\"/noop\"))).isNull();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "de.codecentric.boot.admin.server.web.PrefixHandlerMapping"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 43,
    "startColumnNumber" : 8,
    "endLineNumber" : 43,
    "endColumnNumber" : 15
  }, {
    "charLength" : 7,
    "startLineNumber" : 44,
    "startColumnNumber" : 8,
    "endLineNumber" : 44,
    "endColumnNumber" : 15
  }, {
    "charLength" : 7,
    "startLineNumber" : 45,
    "startColumnNumber" : 19,
    "endLineNumber" : 45,
    "endColumnNumber" : 26
  }, {
    "charLength" : 7,
    "startLineNumber" : 47,
    "startColumnNumber" : 19,
    "endLineNumber" : 47,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}