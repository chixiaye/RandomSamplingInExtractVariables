{
  "id" : 227,
  "expression" : "trustStorePwdBytes",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/ssl/BaseSslContextFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "trustStorePwdBytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 186,
      "startColumnNumber" : 62,
      "endLineNumber" : 186,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 186,
        "startColumnNumber" : 40,
        "endLineNumber" : 186,
        "endColumnNumber" : 81
      },
      "nodeContext" : "getTruststorePassword(trustStorePwdBytes)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 186,
        "endColumnNumber" : 81
      },
      "nodeContext" : "trustStorePassword=getTruststorePassword(trustStorePwdBytes)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 186,
        "startColumnNumber" : 12,
        "endLineNumber" : 186,
        "endColumnNumber" : 82
      },
      "nodeContext" : "String trustStorePassword=getTruststorePassword(trustStorePwdBytes);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1557,
        "startLineNumber" : 172,
        "startColumnNumber" : 125,
        "endLineNumber" : 202,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  byte[] trustStorePwdBytes;\n  if (serverSslConfig.getClientAuthTrustStorePassword() != null) {\n    trustStorePwdBytes=Base64.getDecoder().decode(serverSslConfig.getClientAuthTrustStorePassword());\n  }\n else   if (serverSslConfig.getClientAuthTrustStorePasswordFile() != null) {\n    trustStorePwdBytes=FileUtils.readFileToByteArray(serverSslConfig.getClientAuthTrustStorePasswordFile());\n  }\n else {\n    throw new IllegalArgumentException(\"Must specify either ClientAuthTrustStorePassword or ClientAuthTrustStorePasswordFile!\");\n  }\n  String trustStorePassword=getTruststorePassword(trustStorePwdBytes);\n  boolean dumpDecryptedTrustStorePassword=false;\n  if (dumpDecryptedTrustStorePassword) {\n    LOG.debug(\"X509Cert Trust Store Password \" + trustStorePassword);\n  }\n  final KeyStore trustStore=KeyStore.getInstance(\"JKS\");\n  trustStore.load(new FileInputStream(serverSslConfig.getClientAuthTrustStoreFile()),trustStorePassword.toCharArray());\n  Enumeration<String> aliases=trustStore.aliases();\n  while (aliases.hasMoreElements()) {\n    X509Certificate cert=(X509Certificate)trustStore.getCertificate(aliases.nextElement());\n    trustedCerts.add(cert);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1674,
        "startLineNumber" : 172,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (serverSslConfig.getClientAuth() == ClientAuth.REQUIRE || serverSslConfig.getClientAuth() == ClientAuth.OPTIONAL) {\n  byte[] trustStorePwdBytes;\n  if (serverSslConfig.getClientAuthTrustStorePassword() != null) {\n    trustStorePwdBytes=Base64.getDecoder().decode(serverSslConfig.getClientAuthTrustStorePassword());\n  }\n else   if (serverSslConfig.getClientAuthTrustStorePasswordFile() != null) {\n    trustStorePwdBytes=FileUtils.readFileToByteArray(serverSslConfig.getClientAuthTrustStorePasswordFile());\n  }\n else {\n    throw new IllegalArgumentException(\"Must specify either ClientAuthTrustStorePassword or ClientAuthTrustStorePasswordFile!\");\n  }\n  String trustStorePassword=getTruststorePassword(trustStorePwdBytes);\n  boolean dumpDecryptedTrustStorePassword=false;\n  if (dumpDecryptedTrustStorePassword) {\n    LOG.debug(\"X509Cert Trust Store Password \" + trustStorePassword);\n  }\n  final KeyStore trustStore=KeyStore.getInstance(\"JKS\");\n  trustStore.load(new FileInputStream(serverSslConfig.getClientAuthTrustStoreFile()),trustStorePassword.toCharArray());\n  Enumeration<String> aliases=trustStore.aliases();\n  while (aliases.hasMoreElements()) {\n    X509Certificate cert=(X509Certificate)trustStore.getCertificate(aliases.nextElement());\n    trustedCerts.add(cert);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1906,
        "startLineNumber" : 168,
        "startColumnNumber" : 156,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<X509Certificate> trustedCerts=new ArrayList<>();\n  if (serverSslConfig.getClientAuth() == ClientAuth.REQUIRE || serverSslConfig.getClientAuth() == ClientAuth.OPTIONAL) {\n    byte[] trustStorePwdBytes;\n    if (serverSslConfig.getClientAuthTrustStorePassword() != null) {\n      trustStorePwdBytes=Base64.getDecoder().decode(serverSslConfig.getClientAuthTrustStorePassword());\n    }\n else     if (serverSslConfig.getClientAuthTrustStorePasswordFile() != null) {\n      trustStorePwdBytes=FileUtils.readFileToByteArray(serverSslConfig.getClientAuthTrustStorePasswordFile());\n    }\n else {\n      throw new IllegalArgumentException(\"Must specify either ClientAuthTrustStorePassword or ClientAuthTrustStorePasswordFile!\");\n    }\n    String trustStorePassword=getTruststorePassword(trustStorePwdBytes);\n    boolean dumpDecryptedTrustStorePassword=false;\n    if (dumpDecryptedTrustStorePassword) {\n      LOG.debug(\"X509Cert Trust Store Password \" + trustStorePassword);\n    }\n    final KeyStore trustStore=KeyStore.getInstance(\"JKS\");\n    trustStore.load(new FileInputStream(serverSslConfig.getClientAuthTrustStoreFile()),trustStorePassword.toCharArray());\n    Enumeration<String> aliases=trustStore.aliases();\n    while (aliases.hasMoreElements()) {\n      X509Certificate cert=(X509Certificate)trustStore.getCertificate(aliases.nextElement());\n      trustedCerts.add(cert);\n    }\n  }\n  return trustedCerts;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2058,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected ArrayList<X509Certificate> getTrustedX509Certificates() throws CertificateException, IOException, KeyStoreException, NoSuchAlgorithmException {\n  ArrayList<X509Certificate> trustedCerts=new ArrayList<>();\n  if (serverSslConfig.getClientAuth() == ClientAuth.REQUIRE || serverSslConfig.getClientAuth() == ClientAuth.OPTIONAL) {\n    byte[] trustStorePwdBytes;\n    if (serverSslConfig.getClientAuthTrustStorePassword() != null) {\n      trustStorePwdBytes=Base64.getDecoder().decode(serverSslConfig.getClientAuthTrustStorePassword());\n    }\n else     if (serverSslConfig.getClientAuthTrustStorePasswordFile() != null) {\n      trustStorePwdBytes=FileUtils.readFileToByteArray(serverSslConfig.getClientAuthTrustStorePasswordFile());\n    }\n else {\n      throw new IllegalArgumentException(\"Must specify either ClientAuthTrustStorePassword or ClientAuthTrustStorePasswordFile!\");\n    }\n    String trustStorePassword=getTruststorePassword(trustStorePwdBytes);\n    boolean dumpDecryptedTrustStorePassword=false;\n    if (dumpDecryptedTrustStorePassword) {\n      LOG.debug(\"X509Cert Trust Store Password \" + trustStorePassword);\n    }\n    final KeyStore trustStore=KeyStore.getInstance(\"JKS\");\n    trustStore.load(new FileInputStream(serverSslConfig.getClientAuthTrustStoreFile()),trustStorePassword.toCharArray());\n    Enumeration<String> aliases=trustStore.aliases();\n    while (aliases.hasMoreElements()) {\n      X509Certificate cert=(X509Certificate)trustStore.getCertificate(aliases.nextElement());\n      trustedCerts.add(cert);\n    }\n  }\n  return trustedCerts;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 186,
        "startColumnNumber" : 12,
        "endLineNumber" : 186,
        "endColumnNumber" : 82
      },
      "nodeContext" : "String trustStorePassword=getTruststorePassword(trustStorePwdBytes);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 186,
    "startColumnNumber" : 62,
    "endLineNumber" : 186,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}