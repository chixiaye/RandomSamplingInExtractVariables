{
  "id" : 412,
  "expression" : "foo",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/debugging/InvocationListenerCallbackTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "foo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 38,
      "startColumnNumber" : 34,
      "endLineNumber" : 38,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 38
      },
      "nodeContext" : "willReturn(\"basil\").given(foo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 63
      },
      "nodeContext" : "willReturn(\"basil\").given(foo).giveMeSomeString(\"herb\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 64
      },
      "nodeContext" : "willReturn(\"basil\").given(foo).giveMeSomeString(\"herb\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 34,
        "startColumnNumber" : 89,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RememberingListener listener=new RememberingListener();\n  Foo foo=mock(Foo.class,withSettings().invocationListeners(listener));\n  willReturn(\"basil\").given(foo).giveMeSomeString(\"herb\");\n  foo.giveMeSomeString(\"herb\");\n  assertThat(listener).is(notifiedFor(\"basil\",getClass().getSimpleName()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_call_single_listener_when_mock_return_normally() throws Exception {\n  RememberingListener listener=new RememberingListener();\n  Foo foo=mock(Foo.class,withSettings().invocationListeners(listener));\n  willReturn(\"basil\").given(foo).giveMeSomeString(\"herb\");\n  foo.giveMeSomeString(\"herb\");\n  assertThat(listener).is(notifiedFor(\"basil\",getClass().getSimpleName()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 64
      },
      "nodeContext" : "willReturn(\"basil\").given(foo).giveMeSomeString(\"herb\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.mockitousage.debugging.Foo"
  }, {
    "nodeContext" : "foo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 41,
      "startColumnNumber" : 8,
      "endLineNumber" : 41,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 36
      },
      "nodeContext" : "foo.giveMeSomeString(\"herb\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 37
      },
      "nodeContext" : "foo.giveMeSomeString(\"herb\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 34,
        "startColumnNumber" : 89,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RememberingListener listener=new RememberingListener();\n  Foo foo=mock(Foo.class,withSettings().invocationListeners(listener));\n  willReturn(\"basil\").given(foo).giveMeSomeString(\"herb\");\n  foo.giveMeSomeString(\"herb\");\n  assertThat(listener).is(notifiedFor(\"basil\",getClass().getSimpleName()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_call_single_listener_when_mock_return_normally() throws Exception {\n  RememberingListener listener=new RememberingListener();\n  Foo foo=mock(Foo.class,withSettings().invocationListeners(listener));\n  willReturn(\"basil\").given(foo).giveMeSomeString(\"herb\");\n  foo.giveMeSomeString(\"herb\");\n  assertThat(listener).is(notifiedFor(\"basil\",getClass().getSimpleName()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 37
      },
      "nodeContext" : "foo.giveMeSomeString(\"herb\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.mockitousage.debugging.Foo"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 38,
    "startColumnNumber" : 34,
    "endLineNumber" : 38,
    "endColumnNumber" : 37
  }, {
    "charLength" : 3,
    "startLineNumber" : 41,
    "startColumnNumber" : 8,
    "endLineNumber" : 41,
    "endColumnNumber" : 11
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}