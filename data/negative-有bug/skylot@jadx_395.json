{
  "id" : 395,
  "expression" : "value.getArrayRootElement()",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-gui/src/main/java/jadx/gui/utils/codecache/disk/adapters/ArgTypeAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "value.getArrayRootElement()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 79,
      "startColumnNumber" : 14,
      "endLineNumber" : 79,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 79,
        "startColumnNumber" : 3,
        "endLineNumber" : 79,
        "endColumnNumber" : 42
      },
      "nodeContext" : "write(out,value.getArrayRootElement())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 79,
        "startColumnNumber" : 3,
        "endLineNumber" : 79,
        "endColumnNumber" : 43
      },
      "nodeContext" : "write(out,value.getArrayRootElement());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 76,
        "startColumnNumber" : 23,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  writeType(out,Types.ARRAY);\n  out.writeByte(value.getArrayDimension());\n  write(out,value.getArrayRootElement());\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 76,
        "startColumnNumber" : 2,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value.isArray()) {\n  writeType(out,Types.ARRAY);\n  out.writeByte(value.getArrayDimension());\n  write(out,value.getArrayRootElement());\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1497,
        "startLineNumber" : 30,
        "startColumnNumber" : 69,
        "endLineNumber" : 83,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (value == null) {\n    writeType(out,Types.NULL);\n    return;\n  }\n  if (!value.isTypeKnown()) {\n    writeType(out,Types.UNKNOWN);\n    return;\n  }\n  if (value.isPrimitive()) {\n    writeType(out,Types.PRIMITIVE);\n    out.writeByte(value.getPrimitiveType().getShortName().charAt(0));\n    return;\n  }\n  if (value.getOuterType() != null) {\n    writeType(out,Types.OUTER_GENERIC);\n    write(out,value.getOuterType());\n    write(out,value.getInnerType());\n    return;\n  }\n  if (value.getWildcardType() != null) {\n    writeType(out,Types.WILDCARD);\n    ArgType.WildcardBound bound=value.getWildcardBound();\n    out.writeByte(bound.getNum());\n    if (bound != ArgType.WildcardBound.UNBOUND) {\n      write(out,value.getWildcardType());\n    }\n    return;\n  }\n  if (value.isGeneric()) {\n    writeType(out,Types.GENERIC);\n    out.writeUTF(value.getObject());\n    writeTypesList(out,value.getGenericTypes());\n    return;\n  }\n  if (value.isGenericType()) {\n    writeType(out,Types.TYPE_VARIABLE);\n    out.writeUTF(value.getObject());\n    writeTypesList(out,value.getExtendTypes());\n    return;\n  }\n  if (value.isObject()) {\n    writeType(out,Types.OBJECT);\n    out.writeUTF(value.getObject());\n    return;\n  }\n  if (value.isArray()) {\n    writeType(out,Types.ARRAY);\n    out.writeByte(value.getArrayDimension());\n    write(out,value.getArrayRootElement());\n    return;\n  }\n  throw new JadxRuntimeException(\"Cannot save type: \" + value + \", cls: \"+ value.getClass());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1577,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 83,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void write(DataOutput out,ArgType value) throws IOException {\n  if (value == null) {\n    writeType(out,Types.NULL);\n    return;\n  }\n  if (!value.isTypeKnown()) {\n    writeType(out,Types.UNKNOWN);\n    return;\n  }\n  if (value.isPrimitive()) {\n    writeType(out,Types.PRIMITIVE);\n    out.writeByte(value.getPrimitiveType().getShortName().charAt(0));\n    return;\n  }\n  if (value.getOuterType() != null) {\n    writeType(out,Types.OUTER_GENERIC);\n    write(out,value.getOuterType());\n    write(out,value.getInnerType());\n    return;\n  }\n  if (value.getWildcardType() != null) {\n    writeType(out,Types.WILDCARD);\n    ArgType.WildcardBound bound=value.getWildcardBound();\n    out.writeByte(bound.getNum());\n    if (bound != ArgType.WildcardBound.UNBOUND) {\n      write(out,value.getWildcardType());\n    }\n    return;\n  }\n  if (value.isGeneric()) {\n    writeType(out,Types.GENERIC);\n    out.writeUTF(value.getObject());\n    writeTypesList(out,value.getGenericTypes());\n    return;\n  }\n  if (value.isGenericType()) {\n    writeType(out,Types.TYPE_VARIABLE);\n    out.writeUTF(value.getObject());\n    writeTypesList(out,value.getExtendTypes());\n    return;\n  }\n  if (value.isObject()) {\n    writeType(out,Types.OBJECT);\n    out.writeUTF(value.getObject());\n    return;\n  }\n  if (value.isArray()) {\n    writeType(out,Types.ARRAY);\n    out.writeByte(value.getArrayDimension());\n    write(out,value.getArrayRootElement());\n    return;\n  }\n  throw new JadxRuntimeException(\"Cannot save type: \" + value + \", cls: \"+ value.getClass());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 258,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 79,
        "startColumnNumber" : 3,
        "endLineNumber" : 79,
        "endColumnNumber" : 43
      },
      "nodeContext" : "write(out,value.getArrayRootElement());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "jadx.core.dex.instructions.args.ArgType"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 79,
    "startColumnNumber" : 14,
    "endLineNumber" : 79,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}