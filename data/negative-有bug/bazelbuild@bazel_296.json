{
  "id" : 296,
  "expression" : "Parser.ParseResult",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/net/starlark/java/syntax/StarlarkFile.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Parser.ParseResult",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 137,
      "startColumnNumber" : 4,
      "endLineNumber" : 137,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 22
      },
      "nodeContext" : "Parser.ParseResult",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Parser.ParseResult result=Parser.parseFile(input);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 136,
        "startColumnNumber" : 75,
        "endLineNumber" : 140,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Parser.ParseResult result=Parser.parseFile(input);\n  return new StarlarkFile(result.locs,result.statements,options,result.comments,result.errors);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 122,
        "startColumnNumber" : 2,
        "endLineNumber" : 140,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Parse a Starlark file. <p>A syntax tree is always returned, even in case of error. Errors are recorded in the tree. Example usage: <pre> StarlarkFile file = StarlarkFile.parse(input, options); if (!file.ok()) { Event.replayEventsOn(handler, file.errors()); ... } </pre>\n */\npublic static StarlarkFile parse(ParserInput input,FileOptions options){\n  Parser.ParseResult result=Parser.parseFile(input);\n  return new StarlarkFile(result.locs,result.statements,options,result.comments,result.errors);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Parser.ParseResult result=Parser.parseFile(input);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "net.starlark.java.syntax.Parser.ParseResult"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 137,
    "startColumnNumber" : 4,
    "endLineNumber" : 137,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}