{
  "id" : 307,
  "expression" : "glow",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/distribution/PayloadConveyor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "glow",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 165,
      "startColumnNumber" : 36,
      "endLineNumber" : 165,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 165,
        "startColumnNumber" : 12,
        "endLineNumber" : 165,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Draw.mixcol(team.color,glow)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 165,
        "startColumnNumber" : 12,
        "endLineNumber" : 165,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Draw.mixcol(team.color,glow);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1769,
        "startLineNumber" : 159,
        "startColumnNumber" : 26,
        "endLineNumber" : 204,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  super.draw();\n  float dst=0.8f;\n  float glow=Math.max((dst - (Math.abs(fract() - 0.5f) * 2)) / dst,0);\n  Draw.mixcol(team.color,glow);\n  float trnext=fract() * size * tilesize, trprev=size * tilesize * (fract() - 1), rot=rotdeg();\n  TextureRegion clipped=clipRegion(tile.getHitbox(Tmp.r1),tile.getHitbox(Tmp.r2).move(trnext,0),topRegion);\n  float s=tilesize * size;\n  Tmp.v1.set((s - clipped.width * Draw.scl) + clipped.width / 2f * Draw.scl - s / 2f,s - clipped.height * Draw.scl + clipped.height / 2f * Draw.scl - s / 2f).rotate(rot);\n  Draw.rect(clipped,x + Tmp.v1.x,y + Tmp.v1.y,rot);\n  clipped=clipRegion(tile.getHitbox(Tmp.r1),tile.getHitbox(Tmp.r2).move(trprev,0),topRegion);\n  Tmp.v1.set(-s / 2f + clipped.width / 2f * Draw.scl,-s / 2f + clipped.height / 2f * Draw.scl).rotate(rot);\n  Draw.rect(clipped,x + Tmp.v1.x,y + Tmp.v1.y,rot);\n  for (int i=0; i < 4; i++) {\n    if (blends(i) && i != rotation) {\n      Draw.alpha(1f - Interp.pow5In.apply(fract()));\n      Tmp.v1.set(-s / 2f + clipped.width / 2f * Draw.scl,-s / 2f + clipped.height / 2f * Draw.scl).rotate(i * 90 + 180);\n      Draw.rect(clipped,x + Tmp.v1.x,y + Tmp.v1.y,i * 90 + 180);\n    }\n  }\n  Draw.reset();\n  for (int i=0; i < 4; i++) {\n    if (!blends(i)) {\n      Draw.rect(edgeRegion,x,y,i * 90);\n    }\n  }\n  Draw.z(Layer.blockOver);\n  if (item != null) {\n    item.draw();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 396,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1805,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 204,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void draw(){\n  super.draw();\n  float dst=0.8f;\n  float glow=Math.max((dst - (Math.abs(fract() - 0.5f) * 2)) / dst,0);\n  Draw.mixcol(team.color,glow);\n  float trnext=fract() * size * tilesize, trprev=size * tilesize * (fract() - 1), rot=rotdeg();\n  TextureRegion clipped=clipRegion(tile.getHitbox(Tmp.r1),tile.getHitbox(Tmp.r2).move(trnext,0),topRegion);\n  float s=tilesize * size;\n  Tmp.v1.set((s - clipped.width * Draw.scl) + clipped.width / 2f * Draw.scl - s / 2f,s - clipped.height * Draw.scl + clipped.height / 2f * Draw.scl - s / 2f).rotate(rot);\n  Draw.rect(clipped,x + Tmp.v1.x,y + Tmp.v1.y,rot);\n  clipped=clipRegion(tile.getHitbox(Tmp.r1),tile.getHitbox(Tmp.r2).move(trprev,0),topRegion);\n  Tmp.v1.set(-s / 2f + clipped.width / 2f * Draw.scl,-s / 2f + clipped.height / 2f * Draw.scl).rotate(rot);\n  Draw.rect(clipped,x + Tmp.v1.x,y + Tmp.v1.y,rot);\n  for (int i=0; i < 4; i++) {\n    if (blends(i) && i != rotation) {\n      Draw.alpha(1f - Interp.pow5In.apply(fract()));\n      Tmp.v1.set(-s / 2f + clipped.width / 2f * Draw.scl,-s / 2f + clipped.height / 2f * Draw.scl).rotate(i * 90 + 180);\n      Draw.rect(clipped,x + Tmp.v1.x,y + Tmp.v1.y,i * 90 + 180);\n    }\n  }\n  Draw.reset();\n  for (int i=0; i < 4; i++) {\n    if (!blends(i)) {\n      Draw.rect(edgeRegion,x,y,i * 90);\n    }\n  }\n  Draw.z(Layer.blockOver);\n  if (item != null) {\n    item.draw();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 402,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 165,
        "startColumnNumber" : 12,
        "endLineNumber" : 165,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Draw.mixcol(team.color,glow);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 165,
    "startColumnNumber" : 36,
    "endLineNumber" : 165,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}