{
  "id" : 481,
  "expression" : "httpEx.getErrorResponse().contains(expectedErrorContains)",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/client/OIDCPairwiseClientRegistrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "httpEx.getErrorResponse().contains(expectedErrorContains)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 57,
      "startLineNumber" : 105,
      "startColumnNumber" : 75,
      "endLineNumber" : 105,
      "endColumnNumber" : 132
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 105,
        "startColumnNumber" : 16,
        "endLineNumber" : 105,
        "endColumnNumber" : 133
      },
      "nodeContext" : "assertTrue(\"Error response doesn't contain expected text\",httpEx.getErrorResponse().contains(expectedErrorContains))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 105,
        "startColumnNumber" : 16,
        "endLineNumber" : 105,
        "endColumnNumber" : 134
      },
      "nodeContext" : "assertTrue(\"Error response doesn't contain expected text\",httpEx.getErrorResponse().contains(expectedErrorContains));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 104,
        "startColumnNumber" : 47,
        "endLineNumber" : 106,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  assertTrue(\"Error response doesn't contain expected text\",httpEx.getErrorResponse().contains(expectedErrorContains));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (expectedErrorContains != null) {\n  assertTrue(\"Error response doesn't contain expected text\",httpEx.getErrorResponse().contains(expectedErrorContains));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 384,
        "startLineNumber" : 101,
        "startColumnNumber" : 55,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpErrorException httpEx=(HttpErrorException)expected.getCause();\n  Assert.assertEquals(expectedStatusCode,httpEx.getStatusLine().getStatusCode());\n  if (expectedErrorContains != null) {\n    assertTrue(\"Error response doesn't contain expected text\",httpEx.getErrorResponse().contains(expectedErrorContains));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 101,
        "startColumnNumber" : 10,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (ClientRegistrationException expected) {\n  HttpErrorException httpEx=(HttpErrorException)expected.getCause();\n  Assert.assertEquals(expectedStatusCode,httpEx.getStatusLine().getStatusCode());\n  if (expectedErrorContains != null) {\n    assertTrue(\"Error response doesn't contain expected text\",httpEx.getErrorResponse().contains(expectedErrorContains));\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  reg.oidc().create(client);\n  Assert.fail(\"Not expected to successfuly register client\");\n}\n catch (ClientRegistrationException expected) {\n  HttpErrorException httpEx=(HttpErrorException)expected.getCause();\n  Assert.assertEquals(expectedStatusCode,httpEx.getStatusLine().getStatusCode());\n  if (expectedErrorContains != null) {\n    assertTrue(\"Error response doesn't contain expected text\",httpEx.getErrorResponse().contains(expectedErrorContains));\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 572,
        "startLineNumber" : 97,
        "startColumnNumber" : 121,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    reg.oidc().create(client);\n    Assert.fail(\"Not expected to successfuly register client\");\n  }\n catch (  ClientRegistrationException expected) {\n    HttpErrorException httpEx=(HttpErrorException)expected.getCause();\n    Assert.assertEquals(expectedStatusCode,httpEx.getStatusLine().getStatusCode());\n    if (expectedErrorContains != null) {\n      assertTrue(\"Error response doesn't contain expected text\",httpEx.getErrorResponse().contains(expectedErrorContains));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void assertCreateFail(OIDCClientRepresentation client,int expectedStatusCode,String expectedErrorContains){\n  try {\n    reg.oidc().create(client);\n    Assert.fail(\"Not expected to successfuly register client\");\n  }\n catch (  ClientRegistrationException expected) {\n    HttpErrorException httpEx=(HttpErrorException)expected.getCause();\n    Assert.assertEquals(expectedStatusCode,httpEx.getStatusLine().getStatusCode());\n    if (expectedErrorContains != null) {\n      assertTrue(\"Error response doesn't contain expected text\",httpEx.getErrorResponse().contains(expectedErrorContains));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 105,
        "startColumnNumber" : 16,
        "endLineNumber" : 105,
        "endColumnNumber" : 134
      },
      "nodeContext" : "assertTrue(\"Error response doesn't contain expected text\",httpEx.getErrorResponse().contains(expectedErrorContains));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 57,
    "startLineNumber" : 105,
    "startColumnNumber" : 75,
    "endLineNumber" : 105,
    "endColumnNumber" : 132
  } ],
  "layoutRelationDataList" : [ ]
}