{
  "id" : 71,
  "expression" : "((DBNDatabaseNode)parentNode)",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/navigator/DBNDatabaseNode.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((DBNDatabaseNode)parentNode)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 347,
      "startColumnNumber" : 24,
      "endLineNumber" : 347,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 347,
        "startColumnNumber" : 24,
        "endLineNumber" : 347,
        "endColumnNumber" : 78
      },
      "nodeContext" : "((DBNDatabaseNode)parentNode).removeChildItem(object)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 347,
        "startColumnNumber" : 24,
        "endLineNumber" : 347,
        "endColumnNumber" : 79
      },
      "nodeContext" : "((DBNDatabaseNode)parentNode).removeChildItem(object);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 346,
        "startColumnNumber" : 63,
        "endLineNumber" : 348,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  ((DBNDatabaseNode)parentNode).removeChildItem(object);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 346,
        "startColumnNumber" : 20,
        "endLineNumber" : 348,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (parentNode instanceof DBNDatabaseNode) {\n  ((DBNDatabaseNode)parentNode).removeChildItem(object);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 345,
        "startColumnNumber" : 42,
        "endLineNumber" : 350,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (parentNode instanceof DBNDatabaseNode) {\n    ((DBNDatabaseNode)parentNode).removeChildItem(object);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 345,
        "startColumnNumber" : 16,
        "endLineNumber" : 353,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (newObject[0] == null) {\n  if (parentNode instanceof DBNDatabaseNode) {\n    ((DBNDatabaseNode)parentNode).removeChildItem(object);\n  }\n  return null;\n}\n else {\n  refreshNodeContent(monitor,newObject[0],source,true);\n  return this;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 336,
        "startColumnNumber" : 60,
        "endLineNumber" : 354,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  DBSObject[] newObject=new DBSObject[1];\n  DBExecUtils.tryExecuteRecover(monitor,dataSource,param -> {\n    try {\n      newObject[0]=((DBPRefreshableObject)object).refreshObject(monitor);\n    }\n catch (    DBException e) {\n      throw new InvocationTargetException(e);\n    }\n  }\n);\n  if (newObject[0] == null) {\n    if (parentNode instanceof DBNDatabaseNode) {\n      ((DBNDatabaseNode)parentNode).removeChildItem(object);\n    }\n    return null;\n  }\n else {\n    refreshNodeContent(monitor,newObject[0],source,true);\n    return this;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 336,
        "startColumnNumber" : 12,
        "endLineNumber" : 358,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (object.isPersisted() && dataSource != null) {\n  DBSObject[] newObject=new DBSObject[1];\n  DBExecUtils.tryExecuteRecover(monitor,dataSource,param -> {\n    try {\n      newObject[0]=((DBPRefreshableObject)object).refreshObject(monitor);\n    }\n catch (    DBException e) {\n      throw new InvocationTargetException(e);\n    }\n  }\n);\n  if (newObject[0] == null) {\n    if (parentNode instanceof DBNDatabaseNode) {\n      ((DBNDatabaseNode)parentNode).removeChildItem(object);\n    }\n    return null;\n  }\n else {\n    refreshNodeContent(monitor,newObject[0],source,true);\n    return this;\n  }\n}\n else {\n  getModel().fireNodeUpdate(source,this,DBNEvent.NodeChange.REFRESH);\n  return this;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 109,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1176,
        "startLineNumber" : 334,
        "startColumnNumber" : 52,
        "endLineNumber" : 359,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DBPDataSource dataSource=object.getDataSource();\n  if (object.isPersisted() && dataSource != null) {\n    DBSObject[] newObject=new DBSObject[1];\n    DBExecUtils.tryExecuteRecover(monitor,dataSource,param -> {\n      try {\n        newObject[0]=((DBPRefreshableObject)object).refreshObject(monitor);\n      }\n catch (      DBException e) {\n        throw new InvocationTargetException(e);\n      }\n    }\n);\n    if (newObject[0] == null) {\n      if (parentNode instanceof DBNDatabaseNode) {\n        ((DBNDatabaseNode)parentNode).removeChildItem(object);\n      }\n      return null;\n    }\n else {\n      refreshNodeContent(monitor,newObject[0],source,true);\n      return this;\n    }\n  }\n else {\n    getModel().fireNodeUpdate(source,this,DBNEvent.NodeChange.REFRESH);\n    return this;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1294,
        "startLineNumber" : 334,
        "startColumnNumber" : 8,
        "endLineNumber" : 361,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof DBPRefreshableObject) {\n  DBPDataSource dataSource=object.getDataSource();\n  if (object.isPersisted() && dataSource != null) {\n    DBSObject[] newObject=new DBSObject[1];\n    DBExecUtils.tryExecuteRecover(monitor,dataSource,param -> {\n      try {\n        newObject[0]=((DBPRefreshableObject)object).refreshObject(monitor);\n      }\n catch (      DBException e) {\n        throw new InvocationTargetException(e);\n      }\n    }\n);\n    if (newObject[0] == null) {\n      if (parentNode instanceof DBNDatabaseNode) {\n        ((DBNDatabaseNode)parentNode).removeChildItem(object);\n      }\n      return null;\n    }\n else {\n      refreshNodeContent(monitor,newObject[0],source,true);\n      return this;\n    }\n  }\n else {\n    getModel().fireNodeUpdate(source,this,DBNEvent.NodeChange.REFRESH);\n    return this;\n  }\n}\n else {\n  return super.refreshNode(monitor,source);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 129,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1526,
        "startLineNumber" : 328,
        "startColumnNumber" : 93,
        "endLineNumber" : 362,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isLocked()) {\n    log.warn(\"Attempt to refresh locked node '\" + getNodeName() + \"'\");\n    return null;\n  }\n  DBSObject object=getObject();\n  if (object instanceof DBPRefreshableObject) {\n    DBPDataSource dataSource=object.getDataSource();\n    if (object.isPersisted() && dataSource != null) {\n      DBSObject[] newObject=new DBSObject[1];\n      DBExecUtils.tryExecuteRecover(monitor,dataSource,param -> {\n        try {\n          newObject[0]=((DBPRefreshableObject)object).refreshObject(monitor);\n        }\n catch (        DBException e) {\n          throw new InvocationTargetException(e);\n        }\n      }\n);\n      if (newObject[0] == null) {\n        if (parentNode instanceof DBNDatabaseNode) {\n          ((DBNDatabaseNode)parentNode).removeChildItem(object);\n        }\n        return null;\n      }\n else {\n        refreshNodeContent(monitor,newObject[0],source,true);\n        return this;\n      }\n    }\n else {\n      getModel().fireNodeUpdate(source,this,DBNEvent.NodeChange.REFRESH);\n      return this;\n    }\n  }\n else {\n    return super.refreshNode(monitor,source);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2241,
        "startLineNumber" : 315,
        "startColumnNumber" : 4,
        "endLineNumber" : 362,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Refreshes node. If refresh cannot be done in this level then refreshes parent node. Do not actually changes navigation tree. If some underlying object is refreshed it must fire DB model event which will cause actual tree nodes refresh. Underlying object could present multiple times in navigation model - each occurrence will be refreshed then.\n * @param monitor progress monitor\n * @param source  source object\n * @return real refreshed node or null if nothing was refreshed\n * @throws DBException on any internal exception\n */\n@Override public DBNNode refreshNode(DBRProgressMonitor monitor,Object source) throws DBException {\n  if (isLocked()) {\n    log.warn(\"Attempt to refresh locked node '\" + getNodeName() + \"'\");\n    return null;\n  }\n  DBSObject object=getObject();\n  if (object instanceof DBPRefreshableObject) {\n    DBPDataSource dataSource=object.getDataSource();\n    if (object.isPersisted() && dataSource != null) {\n      DBSObject[] newObject=new DBSObject[1];\n      DBExecUtils.tryExecuteRecover(monitor,dataSource,param -> {\n        try {\n          newObject[0]=((DBPRefreshableObject)object).refreshObject(monitor);\n        }\n catch (        DBException e) {\n          throw new InvocationTargetException(e);\n        }\n      }\n);\n      if (newObject[0] == null) {\n        if (parentNode instanceof DBNDatabaseNode) {\n          ((DBNDatabaseNode)parentNode).removeChildItem(object);\n        }\n        return null;\n      }\n else {\n        refreshNodeContent(monitor,newObject[0],source,true);\n        return this;\n      }\n    }\n else {\n      getModel().fireNodeUpdate(source,this,DBNEvent.NodeChange.REFRESH);\n      return this;\n    }\n  }\n else {\n    return super.refreshNode(monitor,source);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 347,
        "startColumnNumber" : 24,
        "endLineNumber" : 347,
        "endColumnNumber" : 79
      },
      "nodeContext" : "((DBNDatabaseNode)parentNode).removeChildItem(object);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "org.jkiss.dbeaver.model.navigator.DBNDatabaseNode"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 347,
    "startColumnNumber" : 24,
    "endLineNumber" : 347,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}