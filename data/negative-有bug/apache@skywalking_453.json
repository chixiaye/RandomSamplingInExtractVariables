{
  "id" : 453,
  "expression" : "testMethodWithDefaultValue.getName()",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-sniffer/apm-toolkit-activation/apm-toolkit-trace-activation/src/test/java/org/apache/skywalking/apm/toolkit/activation/trace/TraceAnnotationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "testMethodWithDefaultValue.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 160,
      "startColumnNumber" : 104,
      "endLineNumber" : 160,
      "endColumnNumber" : 140
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 160,
        "startColumnNumber" : 54,
        "endLineNumber" : 160,
        "endColumnNumber" : 147
      },
      "nodeContext" : "TestAnnotationMethodClass.class.getName() + \".\" + testMethodWithDefaultValue.getName()+ \"()\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 160,
        "startColumnNumber" : 51,
        "endLineNumber" : 160,
        "endColumnNumber" : 148
      },
      "nodeContext" : "is(TestAnnotationMethodClass.class.getName() + \".\" + testMethodWithDefaultValue.getName()+ \"()\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 160,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 149
      },
      "nodeContext" : "assertThat(tracingSpan.getOperationName(),is(TestAnnotationMethodClass.class.getName() + \".\" + testMethodWithDefaultValue.getName()+ \"()\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 160,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 150
      },
      "nodeContext" : "assertThat(tracingSpan.getOperationName(),is(TestAnnotationMethodClass.class.getName() + \".\" + testMethodWithDefaultValue.getName()+ \"()\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 901,
        "startLineNumber" : 150,
        "startColumnNumber" : 45,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Method testMethodWithDefaultValue=TestAnnotationMethodClass.class.getDeclaredMethod(\"testMethodWithDefaultValue\");\n  methodInterceptor.beforeMethod(enhancedInstance,testMethodWithDefaultValue,null,null,null);\n  methodInterceptor.afterMethod(enhancedInstance,testMethodWithDefaultValue,null,null,null);\n  assertThat(storage.getTraceSegments().size(),is(1));\n  TraceSegment traceSegment=storage.getTraceSegments().get(0);\n  List<AbstractTracingSpan> spans=SegmentHelper.getSpans(traceSegment);\n  assertThat(spans.size(),is(1));\n  AbstractTracingSpan tracingSpan=spans.get(0);\n  assertThat(tracingSpan.getOperationName(),is(TestAnnotationMethodClass.class.getName() + \".\" + testMethodWithDefaultValue.getName()+ \"()\"));\n  SpanAssert.assertLogSize(tracingSpan,0);\n  SpanAssert.assertTagSize(tracingSpan,0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 952,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTrace() throws Throwable {\n  Method testMethodWithDefaultValue=TestAnnotationMethodClass.class.getDeclaredMethod(\"testMethodWithDefaultValue\");\n  methodInterceptor.beforeMethod(enhancedInstance,testMethodWithDefaultValue,null,null,null);\n  methodInterceptor.afterMethod(enhancedInstance,testMethodWithDefaultValue,null,null,null);\n  assertThat(storage.getTraceSegments().size(),is(1));\n  TraceSegment traceSegment=storage.getTraceSegments().get(0);\n  List<AbstractTracingSpan> spans=SegmentHelper.getSpans(traceSegment);\n  assertThat(spans.size(),is(1));\n  AbstractTracingSpan tracingSpan=spans.get(0);\n  assertThat(tracingSpan.getOperationName(),is(TestAnnotationMethodClass.class.getName() + \".\" + testMethodWithDefaultValue.getName()+ \"()\"));\n  SpanAssert.assertLogSize(tracingSpan,0);\n  SpanAssert.assertTagSize(tracingSpan,0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 160,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 150
      },
      "nodeContext" : "assertThat(tracingSpan.getOperationName(),is(TestAnnotationMethodClass.class.getName() + \".\" + testMethodWithDefaultValue.getName()+ \"()\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 160,
    "startColumnNumber" : 104,
    "endLineNumber" : 160,
    "endColumnNumber" : 140
  } ],
  "layoutRelationDataList" : [ ]
}