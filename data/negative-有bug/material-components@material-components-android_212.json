{
  "id" : 212,
  "expression" : "new CornerSizeBinaryOperator(){\n  @NonNull @Override public CornerSize apply(  @NonNull CornerSize cornerSize1,  @NonNull CornerSize cornerSize2){\n    float startCornerSize=cornerSize1.getCornerSize(startBounds);\n    float endCornerSize=cornerSize2.getCornerSize(endBounds);\n    float cornerSize=lerp(startCornerSize,endCornerSize,startFraction,endFraction,fraction);\n    return new AbsoluteCornerSize(cornerSize);\n  }\n}\n",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/transition/TransitionUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new CornerSizeBinaryOperator(){\n  @NonNull @Override public CornerSize apply(  @NonNull CornerSize cornerSize1,  @NonNull CornerSize cornerSize2){\n    float startCornerSize=cornerSize1.getCornerSize(startBounds);\n    float endCornerSize=cornerSize2.getCornerSize(endBounds);\n    float cornerSize=lerp(startCornerSize,endCornerSize,startFraction,endFraction,fraction);\n    return new AbsoluteCornerSize(cornerSize);\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 549,
      "startLineNumber" : 246,
      "startColumnNumber" : 8,
      "endLineNumber" : 258,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 58,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 242,
        "startColumnNumber" : 11,
        "endLineNumber" : 258,
        "endColumnNumber" : 10
      },
      "nodeContext" : "transformCornerSizes(startValue,endValue,startBounds,new CornerSizeBinaryOperator(){\n  @NonNull @Override public CornerSize apply(  @NonNull CornerSize cornerSize1,  @NonNull CornerSize cornerSize2){\n    float startCornerSize=cornerSize1.getCornerSize(startBounds);\n    float endCornerSize=cornerSize2.getCornerSize(endBounds);\n    float cornerSize=lerp(startCornerSize,endCornerSize,startFraction,endFraction,fraction);\n    return new AbsoluteCornerSize(cornerSize);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 651,
        "startLineNumber" : 242,
        "startColumnNumber" : 4,
        "endLineNumber" : 258,
        "endColumnNumber" : 11
      },
      "nodeContext" : "return transformCornerSizes(startValue,endValue,startBounds,new CornerSizeBinaryOperator(){\n  @NonNull @Override public CornerSize apply(  @NonNull CornerSize cornerSize1,  @NonNull CornerSize cornerSize2){\n    float startCornerSize=cornerSize1.getCornerSize(startBounds);\n    float endCornerSize=cornerSize2.getCornerSize(endBounds);\n    float cornerSize=lerp(startCornerSize,endCornerSize,startFraction,endFraction,fraction);\n    return new AbsoluteCornerSize(cornerSize);\n  }\n}\n);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 801,
        "startLineNumber" : 234,
        "startColumnNumber" : 62,
        "endLineNumber" : 259,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (fraction < startFraction) {\n    return startValue;\n  }\n  if (fraction > endFraction) {\n    return endValue;\n  }\n  return transformCornerSizes(startValue,endValue,startBounds,new CornerSizeBinaryOperator(){\n    @NonNull @Override public CornerSize apply(    @NonNull CornerSize cornerSize1,    @NonNull CornerSize cornerSize2){\n      float startCornerSize=cornerSize1.getCornerSize(startBounds);\n      float endCornerSize=cornerSize2.getCornerSize(endBounds);\n      float cornerSize=lerp(startCornerSize,endCornerSize,startFraction,endFraction,fraction);\n      return new AbsoluteCornerSize(cornerSize);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1172,
        "startLineNumber" : 227,
        "startColumnNumber" : 2,
        "endLineNumber" : 259,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static ShapeAppearanceModel lerp(ShapeAppearanceModel startValue,ShapeAppearanceModel endValue,final RectF startBounds,final RectF endBounds,final @FloatRange(from=0.0,to=1.0) float startFraction,final @FloatRange(from=0.0,to=1.0) float endFraction,final @FloatRange(from=0.0,to=1.0) float fraction){\n  if (fraction < startFraction) {\n    return startValue;\n  }\n  if (fraction > endFraction) {\n    return endValue;\n  }\n  return transformCornerSizes(startValue,endValue,startBounds,new CornerSizeBinaryOperator(){\n    @NonNull @Override public CornerSize apply(    @NonNull CornerSize cornerSize1,    @NonNull CornerSize cornerSize2){\n      float startCornerSize=cornerSize1.getCornerSize(startBounds);\n      float endCornerSize=cornerSize2.getCornerSize(endBounds);\n      float cornerSize=lerp(startCornerSize,endCornerSize,startFraction,endFraction,fraction);\n      return new AbsoluteCornerSize(cornerSize);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 242,
        "startColumnNumber" : 11,
        "endLineNumber" : 258,
        "endColumnNumber" : 10
      },
      "nodeContext" : "transformCornerSizes(startValue,endValue,startBounds,new CornerSizeBinaryOperator(){\n  @NonNull @Override public CornerSize apply(  @NonNull CornerSize cornerSize1,  @NonNull CornerSize cornerSize2){\n    float startCornerSize=cornerSize1.getCornerSize(startBounds);\n    float endCornerSize=cornerSize2.getCornerSize(endBounds);\n    float cornerSize=lerp(startCornerSize,endCornerSize,startFraction,endFraction,fraction);\n    return new AbsoluteCornerSize(cornerSize);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 63,
      "astHeight" : 9
    },
    "tokenLength" : 25,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 549,
    "startLineNumber" : 246,
    "startColumnNumber" : 8,
    "endLineNumber" : 258,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}