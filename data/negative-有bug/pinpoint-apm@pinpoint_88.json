{
  "id" : 88,
  "expression" : "expectedActiveTraceCountMap",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/commons-server/src/test/java/com/navercorp/pinpoint/common/server/bo/ActiveTraceHistogramBoTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expectedActiveTraceCountMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 71,
      "startColumnNumber" : 8,
      "endLineNumber" : 71,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 57
      },
      "nodeContext" : "expectedActiveTraceCountMap.put(SlotType.FAST,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 58
      },
      "nodeContext" : "expectedActiveTraceCountMap.put(SlotType.FAST,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 66,
        "startColumnNumber" : 77,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int validVersion=0;\n  final int expectedHistogramSchemaType=1;\n  final Map<SlotType,Integer> expectedActiveTraceCountMap=new HashMap<SlotType,Integer>();\n  expectedActiveTraceCountMap.put(SlotType.FAST,0);\n  expectedActiveTraceCountMap.put(SlotType.NORMAL,0);\n  expectedActiveTraceCountMap.put(SlotType.SLOW,0);\n  expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0);\n  ActiveTraceHistogramBo expectedBo=new ActiveTraceHistogramBo(validVersion,expectedHistogramSchemaType,null);\n  byte[] serializedBo=expectedBo.writeValue();\n  ActiveTraceHistogramBo deserializedBo=new ActiveTraceHistogramBo(serializedBo);\n  assertEquals(validVersion,deserializedBo.getVersion());\n  assertEquals(expectedHistogramSchemaType,deserializedBo.getHistogramSchemaType());\n  assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void null_activeTraceCounts_should_return_valid_map_per_version(){\n  final int validVersion=0;\n  final int expectedHistogramSchemaType=1;\n  final Map<SlotType,Integer> expectedActiveTraceCountMap=new HashMap<SlotType,Integer>();\n  expectedActiveTraceCountMap.put(SlotType.FAST,0);\n  expectedActiveTraceCountMap.put(SlotType.NORMAL,0);\n  expectedActiveTraceCountMap.put(SlotType.SLOW,0);\n  expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0);\n  ActiveTraceHistogramBo expectedBo=new ActiveTraceHistogramBo(validVersion,expectedHistogramSchemaType,null);\n  byte[] serializedBo=expectedBo.writeValue();\n  ActiveTraceHistogramBo deserializedBo=new ActiveTraceHistogramBo(serializedBo);\n  assertEquals(validVersion,deserializedBo.getVersion());\n  assertEquals(expectedHistogramSchemaType,deserializedBo.getHistogramSchemaType());\n  assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 58
      },
      "nodeContext" : "expectedActiveTraceCountMap.put(SlotType.FAST,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<com.navercorp.pinpoint.common.trace.SlotType,java.lang.Integer>"
  }, {
    "nodeContext" : "expectedActiveTraceCountMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 72,
      "startColumnNumber" : 8,
      "endLineNumber" : 72,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 59
      },
      "nodeContext" : "expectedActiveTraceCountMap.put(SlotType.NORMAL,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 60
      },
      "nodeContext" : "expectedActiveTraceCountMap.put(SlotType.NORMAL,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 66,
        "startColumnNumber" : 77,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int validVersion=0;\n  final int expectedHistogramSchemaType=1;\n  final Map<SlotType,Integer> expectedActiveTraceCountMap=new HashMap<SlotType,Integer>();\n  expectedActiveTraceCountMap.put(SlotType.FAST,0);\n  expectedActiveTraceCountMap.put(SlotType.NORMAL,0);\n  expectedActiveTraceCountMap.put(SlotType.SLOW,0);\n  expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0);\n  ActiveTraceHistogramBo expectedBo=new ActiveTraceHistogramBo(validVersion,expectedHistogramSchemaType,null);\n  byte[] serializedBo=expectedBo.writeValue();\n  ActiveTraceHistogramBo deserializedBo=new ActiveTraceHistogramBo(serializedBo);\n  assertEquals(validVersion,deserializedBo.getVersion());\n  assertEquals(expectedHistogramSchemaType,deserializedBo.getHistogramSchemaType());\n  assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void null_activeTraceCounts_should_return_valid_map_per_version(){\n  final int validVersion=0;\n  final int expectedHistogramSchemaType=1;\n  final Map<SlotType,Integer> expectedActiveTraceCountMap=new HashMap<SlotType,Integer>();\n  expectedActiveTraceCountMap.put(SlotType.FAST,0);\n  expectedActiveTraceCountMap.put(SlotType.NORMAL,0);\n  expectedActiveTraceCountMap.put(SlotType.SLOW,0);\n  expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0);\n  ActiveTraceHistogramBo expectedBo=new ActiveTraceHistogramBo(validVersion,expectedHistogramSchemaType,null);\n  byte[] serializedBo=expectedBo.writeValue();\n  ActiveTraceHistogramBo deserializedBo=new ActiveTraceHistogramBo(serializedBo);\n  assertEquals(validVersion,deserializedBo.getVersion());\n  assertEquals(expectedHistogramSchemaType,deserializedBo.getHistogramSchemaType());\n  assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 60
      },
      "nodeContext" : "expectedActiveTraceCountMap.put(SlotType.NORMAL,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<com.navercorp.pinpoint.common.trace.SlotType,java.lang.Integer>"
  }, {
    "nodeContext" : "expectedActiveTraceCountMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 73,
      "startColumnNumber" : 8,
      "endLineNumber" : 73,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 57
      },
      "nodeContext" : "expectedActiveTraceCountMap.put(SlotType.SLOW,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 58
      },
      "nodeContext" : "expectedActiveTraceCountMap.put(SlotType.SLOW,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 66,
        "startColumnNumber" : 77,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int validVersion=0;\n  final int expectedHistogramSchemaType=1;\n  final Map<SlotType,Integer> expectedActiveTraceCountMap=new HashMap<SlotType,Integer>();\n  expectedActiveTraceCountMap.put(SlotType.FAST,0);\n  expectedActiveTraceCountMap.put(SlotType.NORMAL,0);\n  expectedActiveTraceCountMap.put(SlotType.SLOW,0);\n  expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0);\n  ActiveTraceHistogramBo expectedBo=new ActiveTraceHistogramBo(validVersion,expectedHistogramSchemaType,null);\n  byte[] serializedBo=expectedBo.writeValue();\n  ActiveTraceHistogramBo deserializedBo=new ActiveTraceHistogramBo(serializedBo);\n  assertEquals(validVersion,deserializedBo.getVersion());\n  assertEquals(expectedHistogramSchemaType,deserializedBo.getHistogramSchemaType());\n  assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void null_activeTraceCounts_should_return_valid_map_per_version(){\n  final int validVersion=0;\n  final int expectedHistogramSchemaType=1;\n  final Map<SlotType,Integer> expectedActiveTraceCountMap=new HashMap<SlotType,Integer>();\n  expectedActiveTraceCountMap.put(SlotType.FAST,0);\n  expectedActiveTraceCountMap.put(SlotType.NORMAL,0);\n  expectedActiveTraceCountMap.put(SlotType.SLOW,0);\n  expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0);\n  ActiveTraceHistogramBo expectedBo=new ActiveTraceHistogramBo(validVersion,expectedHistogramSchemaType,null);\n  byte[] serializedBo=expectedBo.writeValue();\n  ActiveTraceHistogramBo deserializedBo=new ActiveTraceHistogramBo(serializedBo);\n  assertEquals(validVersion,deserializedBo.getVersion());\n  assertEquals(expectedHistogramSchemaType,deserializedBo.getHistogramSchemaType());\n  assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 58
      },
      "nodeContext" : "expectedActiveTraceCountMap.put(SlotType.SLOW,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<com.navercorp.pinpoint.common.trace.SlotType,java.lang.Integer>"
  }, {
    "nodeContext" : "expectedActiveTraceCountMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 74,
      "startColumnNumber" : 8,
      "endLineNumber" : 74,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 62
      },
      "nodeContext" : "expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 63
      },
      "nodeContext" : "expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 66,
        "startColumnNumber" : 77,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int validVersion=0;\n  final int expectedHistogramSchemaType=1;\n  final Map<SlotType,Integer> expectedActiveTraceCountMap=new HashMap<SlotType,Integer>();\n  expectedActiveTraceCountMap.put(SlotType.FAST,0);\n  expectedActiveTraceCountMap.put(SlotType.NORMAL,0);\n  expectedActiveTraceCountMap.put(SlotType.SLOW,0);\n  expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0);\n  ActiveTraceHistogramBo expectedBo=new ActiveTraceHistogramBo(validVersion,expectedHistogramSchemaType,null);\n  byte[] serializedBo=expectedBo.writeValue();\n  ActiveTraceHistogramBo deserializedBo=new ActiveTraceHistogramBo(serializedBo);\n  assertEquals(validVersion,deserializedBo.getVersion());\n  assertEquals(expectedHistogramSchemaType,deserializedBo.getHistogramSchemaType());\n  assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void null_activeTraceCounts_should_return_valid_map_per_version(){\n  final int validVersion=0;\n  final int expectedHistogramSchemaType=1;\n  final Map<SlotType,Integer> expectedActiveTraceCountMap=new HashMap<SlotType,Integer>();\n  expectedActiveTraceCountMap.put(SlotType.FAST,0);\n  expectedActiveTraceCountMap.put(SlotType.NORMAL,0);\n  expectedActiveTraceCountMap.put(SlotType.SLOW,0);\n  expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0);\n  ActiveTraceHistogramBo expectedBo=new ActiveTraceHistogramBo(validVersion,expectedHistogramSchemaType,null);\n  byte[] serializedBo=expectedBo.writeValue();\n  ActiveTraceHistogramBo deserializedBo=new ActiveTraceHistogramBo(serializedBo);\n  assertEquals(validVersion,deserializedBo.getVersion());\n  assertEquals(expectedHistogramSchemaType,deserializedBo.getHistogramSchemaType());\n  assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 63
      },
      "nodeContext" : "expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<com.navercorp.pinpoint.common.trace.SlotType,java.lang.Integer>"
  }, {
    "nodeContext" : "expectedActiveTraceCountMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 82,
      "startColumnNumber" : 21,
      "endLineNumber" : 82,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 66,
        "startColumnNumber" : 77,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int validVersion=0;\n  final int expectedHistogramSchemaType=1;\n  final Map<SlotType,Integer> expectedActiveTraceCountMap=new HashMap<SlotType,Integer>();\n  expectedActiveTraceCountMap.put(SlotType.FAST,0);\n  expectedActiveTraceCountMap.put(SlotType.NORMAL,0);\n  expectedActiveTraceCountMap.put(SlotType.SLOW,0);\n  expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0);\n  ActiveTraceHistogramBo expectedBo=new ActiveTraceHistogramBo(validVersion,expectedHistogramSchemaType,null);\n  byte[] serializedBo=expectedBo.writeValue();\n  ActiveTraceHistogramBo deserializedBo=new ActiveTraceHistogramBo(serializedBo);\n  assertEquals(validVersion,deserializedBo.getVersion());\n  assertEquals(expectedHistogramSchemaType,deserializedBo.getHistogramSchemaType());\n  assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void null_activeTraceCounts_should_return_valid_map_per_version(){\n  final int validVersion=0;\n  final int expectedHistogramSchemaType=1;\n  final Map<SlotType,Integer> expectedActiveTraceCountMap=new HashMap<SlotType,Integer>();\n  expectedActiveTraceCountMap.put(SlotType.FAST,0);\n  expectedActiveTraceCountMap.put(SlotType.NORMAL,0);\n  expectedActiveTraceCountMap.put(SlotType.SLOW,0);\n  expectedActiveTraceCountMap.put(SlotType.VERY_SLOW,0);\n  ActiveTraceHistogramBo expectedBo=new ActiveTraceHistogramBo(validVersion,expectedHistogramSchemaType,null);\n  byte[] serializedBo=expectedBo.writeValue();\n  ActiveTraceHistogramBo deserializedBo=new ActiveTraceHistogramBo(serializedBo);\n  assertEquals(validVersion,deserializedBo.getVersion());\n  assertEquals(expectedHistogramSchemaType,deserializedBo.getHistogramSchemaType());\n  assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertEquals(expectedActiveTraceCountMap,deserializedBo.getActiveTraceCountMap());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<com.navercorp.pinpoint.common.trace.SlotType,java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 71,
    "startColumnNumber" : 8,
    "endLineNumber" : 71,
    "endColumnNumber" : 35
  }, {
    "charLength" : 27,
    "startLineNumber" : 72,
    "startColumnNumber" : 8,
    "endLineNumber" : 72,
    "endColumnNumber" : 35
  }, {
    "charLength" : 27,
    "startLineNumber" : 73,
    "startColumnNumber" : 8,
    "endLineNumber" : 73,
    "endColumnNumber" : 35
  }, {
    "charLength" : 27,
    "startLineNumber" : 74,
    "startColumnNumber" : 8,
    "endLineNumber" : 74,
    "endColumnNumber" : 35
  }, {
    "charLength" : 27,
    "startLineNumber" : 82,
    "startColumnNumber" : 21,
    "endLineNumber" : 82,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}