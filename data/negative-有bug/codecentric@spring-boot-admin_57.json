{
  "id" : 57,
  "expression" : "50L",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/services/StatusUpdateTriggerTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "50L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 57,
      "startColumnNumber" : 21,
      "endLineNumber" : 57,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Thread.sleep(50L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Thread.sleep(50L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1458,
        "startLineNumber" : 45,
        "startColumnNumber" : 65,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StatusUpdater updater=mock(StatusUpdater.class);\n  when(updater.updateStatus(any(ApplicationId.class))).thenReturn(Mono.empty());\n  TestPublisher<ClientApplicationEvent> publisher=TestPublisher.create();\n  StatusUpdateTrigger trigger=new StatusUpdateTrigger(updater,publisher);\n  trigger.setUpdateInterval(10L);\n  trigger.setStatusLifetime(10L);\n  trigger.start();\n  Thread.sleep(50L);\n  publisher.next(new ClientApplicationRegisteredEvent(application.getId(),0L,application.getRegistration()));\n  Thread.sleep(50L);\n  verify(updater,atLeast(2)).updateStatus(application.getId());\n  trigger.setStatusLifetime(10_000L);\n  Thread.sleep(50L);\n  clearInvocations(updater);\n  Thread.sleep(50L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n  trigger.setStatusLifetime(10L);\n  trigger.stop();\n  clearInvocations(updater);\n  Thread.sleep(15L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1529,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_start_and_stop_monitor() throws Exception {\n  StatusUpdater updater=mock(StatusUpdater.class);\n  when(updater.updateStatus(any(ApplicationId.class))).thenReturn(Mono.empty());\n  TestPublisher<ClientApplicationEvent> publisher=TestPublisher.create();\n  StatusUpdateTrigger trigger=new StatusUpdateTrigger(updater,publisher);\n  trigger.setUpdateInterval(10L);\n  trigger.setStatusLifetime(10L);\n  trigger.start();\n  Thread.sleep(50L);\n  publisher.next(new ClientApplicationRegisteredEvent(application.getId(),0L,application.getRegistration()));\n  Thread.sleep(50L);\n  verify(updater,atLeast(2)).updateStatus(application.getId());\n  trigger.setStatusLifetime(10_000L);\n  Thread.sleep(50L);\n  clearInvocations(updater);\n  Thread.sleep(50L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n  trigger.setStatusLifetime(10L);\n  trigger.stop();\n  clearInvocations(updater);\n  Thread.sleep(15L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Thread.sleep(50L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "50L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 60,
      "startColumnNumber" : 21,
      "endLineNumber" : 60,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Thread.sleep(50L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Thread.sleep(50L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1458,
        "startLineNumber" : 45,
        "startColumnNumber" : 65,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StatusUpdater updater=mock(StatusUpdater.class);\n  when(updater.updateStatus(any(ApplicationId.class))).thenReturn(Mono.empty());\n  TestPublisher<ClientApplicationEvent> publisher=TestPublisher.create();\n  StatusUpdateTrigger trigger=new StatusUpdateTrigger(updater,publisher);\n  trigger.setUpdateInterval(10L);\n  trigger.setStatusLifetime(10L);\n  trigger.start();\n  Thread.sleep(50L);\n  publisher.next(new ClientApplicationRegisteredEvent(application.getId(),0L,application.getRegistration()));\n  Thread.sleep(50L);\n  verify(updater,atLeast(2)).updateStatus(application.getId());\n  trigger.setStatusLifetime(10_000L);\n  Thread.sleep(50L);\n  clearInvocations(updater);\n  Thread.sleep(50L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n  trigger.setStatusLifetime(10L);\n  trigger.stop();\n  clearInvocations(updater);\n  Thread.sleep(15L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1529,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_start_and_stop_monitor() throws Exception {\n  StatusUpdater updater=mock(StatusUpdater.class);\n  when(updater.updateStatus(any(ApplicationId.class))).thenReturn(Mono.empty());\n  TestPublisher<ClientApplicationEvent> publisher=TestPublisher.create();\n  StatusUpdateTrigger trigger=new StatusUpdateTrigger(updater,publisher);\n  trigger.setUpdateInterval(10L);\n  trigger.setStatusLifetime(10L);\n  trigger.start();\n  Thread.sleep(50L);\n  publisher.next(new ClientApplicationRegisteredEvent(application.getId(),0L,application.getRegistration()));\n  Thread.sleep(50L);\n  verify(updater,atLeast(2)).updateStatus(application.getId());\n  trigger.setStatusLifetime(10_000L);\n  Thread.sleep(50L);\n  clearInvocations(updater);\n  Thread.sleep(50L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n  trigger.setStatusLifetime(10L);\n  trigger.stop();\n  clearInvocations(updater);\n  Thread.sleep(15L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Thread.sleep(50L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "50L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 66,
      "startColumnNumber" : 21,
      "endLineNumber" : 66,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Thread.sleep(50L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Thread.sleep(50L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1458,
        "startLineNumber" : 45,
        "startColumnNumber" : 65,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StatusUpdater updater=mock(StatusUpdater.class);\n  when(updater.updateStatus(any(ApplicationId.class))).thenReturn(Mono.empty());\n  TestPublisher<ClientApplicationEvent> publisher=TestPublisher.create();\n  StatusUpdateTrigger trigger=new StatusUpdateTrigger(updater,publisher);\n  trigger.setUpdateInterval(10L);\n  trigger.setStatusLifetime(10L);\n  trigger.start();\n  Thread.sleep(50L);\n  publisher.next(new ClientApplicationRegisteredEvent(application.getId(),0L,application.getRegistration()));\n  Thread.sleep(50L);\n  verify(updater,atLeast(2)).updateStatus(application.getId());\n  trigger.setStatusLifetime(10_000L);\n  Thread.sleep(50L);\n  clearInvocations(updater);\n  Thread.sleep(50L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n  trigger.setStatusLifetime(10L);\n  trigger.stop();\n  clearInvocations(updater);\n  Thread.sleep(15L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1529,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_start_and_stop_monitor() throws Exception {\n  StatusUpdater updater=mock(StatusUpdater.class);\n  when(updater.updateStatus(any(ApplicationId.class))).thenReturn(Mono.empty());\n  TestPublisher<ClientApplicationEvent> publisher=TestPublisher.create();\n  StatusUpdateTrigger trigger=new StatusUpdateTrigger(updater,publisher);\n  trigger.setUpdateInterval(10L);\n  trigger.setStatusLifetime(10L);\n  trigger.start();\n  Thread.sleep(50L);\n  publisher.next(new ClientApplicationRegisteredEvent(application.getId(),0L,application.getRegistration()));\n  Thread.sleep(50L);\n  verify(updater,atLeast(2)).updateStatus(application.getId());\n  trigger.setStatusLifetime(10_000L);\n  Thread.sleep(50L);\n  clearInvocations(updater);\n  Thread.sleep(50L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n  trigger.setStatusLifetime(10L);\n  trigger.stop();\n  clearInvocations(updater);\n  Thread.sleep(15L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Thread.sleep(50L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "50L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 69,
      "startColumnNumber" : 21,
      "endLineNumber" : 69,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Thread.sleep(50L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Thread.sleep(50L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1458,
        "startLineNumber" : 45,
        "startColumnNumber" : 65,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StatusUpdater updater=mock(StatusUpdater.class);\n  when(updater.updateStatus(any(ApplicationId.class))).thenReturn(Mono.empty());\n  TestPublisher<ClientApplicationEvent> publisher=TestPublisher.create();\n  StatusUpdateTrigger trigger=new StatusUpdateTrigger(updater,publisher);\n  trigger.setUpdateInterval(10L);\n  trigger.setStatusLifetime(10L);\n  trigger.start();\n  Thread.sleep(50L);\n  publisher.next(new ClientApplicationRegisteredEvent(application.getId(),0L,application.getRegistration()));\n  Thread.sleep(50L);\n  verify(updater,atLeast(2)).updateStatus(application.getId());\n  trigger.setStatusLifetime(10_000L);\n  Thread.sleep(50L);\n  clearInvocations(updater);\n  Thread.sleep(50L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n  trigger.setStatusLifetime(10L);\n  trigger.stop();\n  clearInvocations(updater);\n  Thread.sleep(15L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1529,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_start_and_stop_monitor() throws Exception {\n  StatusUpdater updater=mock(StatusUpdater.class);\n  when(updater.updateStatus(any(ApplicationId.class))).thenReturn(Mono.empty());\n  TestPublisher<ClientApplicationEvent> publisher=TestPublisher.create();\n  StatusUpdateTrigger trigger=new StatusUpdateTrigger(updater,publisher);\n  trigger.setUpdateInterval(10L);\n  trigger.setStatusLifetime(10L);\n  trigger.start();\n  Thread.sleep(50L);\n  publisher.next(new ClientApplicationRegisteredEvent(application.getId(),0L,application.getRegistration()));\n  Thread.sleep(50L);\n  verify(updater,atLeast(2)).updateStatus(application.getId());\n  trigger.setStatusLifetime(10_000L);\n  Thread.sleep(50L);\n  clearInvocations(updater);\n  Thread.sleep(50L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n  trigger.setStatusLifetime(10L);\n  trigger.stop();\n  clearInvocations(updater);\n  Thread.sleep(15L);\n  verify(updater,never()).updateStatus(any(ApplicationId.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Thread.sleep(50L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 57,
    "startColumnNumber" : 21,
    "endLineNumber" : 57,
    "endColumnNumber" : 24
  }, {
    "charLength" : 3,
    "startLineNumber" : 60,
    "startColumnNumber" : 21,
    "endLineNumber" : 60,
    "endColumnNumber" : 24
  }, {
    "charLength" : 3,
    "startLineNumber" : 66,
    "startColumnNumber" : 21,
    "endLineNumber" : 66,
    "endColumnNumber" : 24
  }, {
    "charLength" : 3,
    "startLineNumber" : 69,
    "startColumnNumber" : 21,
    "endLineNumber" : 69,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}