{
  "id" : 351,
  "expression" : "jsonStream",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/image/json/OCIManifestTemplateTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "jsonStream",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 57,
      "startColumnNumber" : 52,
      "endLineNumber" : 57,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 63
      },
      "nodeContext" : "JsonTemplateMapper.toBlob(manifestJson).writeTo(jsonStream)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 64
      },
      "nodeContext" : "JsonTemplateMapper.toBlob(manifestJson).writeTo(jsonStream);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 37,
        "startColumnNumber" : 83,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path jsonFile=Paths.get(Resources.getResource(\"json/ocimanifest.json\").toURI());\n  String expectedJson=new String(Files.readAllBytes(jsonFile),StandardCharsets.UTF_8);\n  OCIManifestTemplate manifestJson=new OCIManifestTemplate();\n  manifestJson.setContainerConfiguration(1000,DescriptorDigest.fromDigest(\"sha256:8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\"));\n  manifestJson.addLayer(1000_000,DescriptorDigest.fromHash(\"4945ba5011739b0b98c4a41afe224e417f47c7c99b2ce76830999c9a0861b236\"));\n  ByteArrayOutputStream jsonStream=new ByteArrayOutputStream();\n  JsonTemplateMapper.toBlob(manifestJson).writeTo(jsonStream);\n  Assert.assertEquals(expectedJson,jsonStream.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1004,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testToJson() throws DigestException, IOException, URISyntaxException {\n  Path jsonFile=Paths.get(Resources.getResource(\"json/ocimanifest.json\").toURI());\n  String expectedJson=new String(Files.readAllBytes(jsonFile),StandardCharsets.UTF_8);\n  OCIManifestTemplate manifestJson=new OCIManifestTemplate();\n  manifestJson.setContainerConfiguration(1000,DescriptorDigest.fromDigest(\"sha256:8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\"));\n  manifestJson.addLayer(1000_000,DescriptorDigest.fromHash(\"4945ba5011739b0b98c4a41afe224e417f47c7c99b2ce76830999c9a0861b236\"));\n  ByteArrayOutputStream jsonStream=new ByteArrayOutputStream();\n  JsonTemplateMapper.toBlob(manifestJson).writeTo(jsonStream);\n  Assert.assertEquals(expectedJson,jsonStream.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 64
      },
      "nodeContext" : "JsonTemplateMapper.toBlob(manifestJson).writeTo(jsonStream);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.ByteArrayOutputStream"
  }, {
    "nodeContext" : "jsonStream",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 59,
      "startColumnNumber" : 38,
      "endLineNumber" : 59,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 59,
        "startColumnNumber" : 38,
        "endLineNumber" : 59,
        "endColumnNumber" : 59
      },
      "nodeContext" : "jsonStream.toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Assert.assertEquals(expectedJson,jsonStream.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assert.assertEquals(expectedJson,jsonStream.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 37,
        "startColumnNumber" : 83,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path jsonFile=Paths.get(Resources.getResource(\"json/ocimanifest.json\").toURI());\n  String expectedJson=new String(Files.readAllBytes(jsonFile),StandardCharsets.UTF_8);\n  OCIManifestTemplate manifestJson=new OCIManifestTemplate();\n  manifestJson.setContainerConfiguration(1000,DescriptorDigest.fromDigest(\"sha256:8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\"));\n  manifestJson.addLayer(1000_000,DescriptorDigest.fromHash(\"4945ba5011739b0b98c4a41afe224e417f47c7c99b2ce76830999c9a0861b236\"));\n  ByteArrayOutputStream jsonStream=new ByteArrayOutputStream();\n  JsonTemplateMapper.toBlob(manifestJson).writeTo(jsonStream);\n  Assert.assertEquals(expectedJson,jsonStream.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1004,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testToJson() throws DigestException, IOException, URISyntaxException {\n  Path jsonFile=Paths.get(Resources.getResource(\"json/ocimanifest.json\").toURI());\n  String expectedJson=new String(Files.readAllBytes(jsonFile),StandardCharsets.UTF_8);\n  OCIManifestTemplate manifestJson=new OCIManifestTemplate();\n  manifestJson.setContainerConfiguration(1000,DescriptorDigest.fromDigest(\"sha256:8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\"));\n  manifestJson.addLayer(1000_000,DescriptorDigest.fromHash(\"4945ba5011739b0b98c4a41afe224e417f47c7c99b2ce76830999c9a0861b236\"));\n  ByteArrayOutputStream jsonStream=new ByteArrayOutputStream();\n  JsonTemplateMapper.toBlob(manifestJson).writeTo(jsonStream);\n  Assert.assertEquals(expectedJson,jsonStream.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assert.assertEquals(expectedJson,jsonStream.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.ByteArrayOutputStream"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 57,
    "startColumnNumber" : 52,
    "endLineNumber" : 57,
    "endColumnNumber" : 62
  }, {
    "charLength" : 10,
    "startLineNumber" : 59,
    "startColumnNumber" : 38,
    "endLineNumber" : 59,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}