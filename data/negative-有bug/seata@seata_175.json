{
  "id" : 175,
  "expression" : "selectSQL",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/main/java/io/seata/rm/datasource/exec/UpdateExecutor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "selectSQL",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 97,
      "startColumnNumber" : 37,
      "endLineNumber" : 97,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 97,
        "startColumnNumber" : 21,
        "endLineNumber" : 97,
        "endColumnNumber" : 47
      },
      "nodeContext" : "st.executeQuery(selectSQL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 47
      },
      "nodeContext" : "rs=st.executeQuery(selectSQL)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 48
      },
      "nodeContext" : "rs=st.executeQuery(selectSQL);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 95,
        "startColumnNumber" : 41,
        "endLineNumber" : 98,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  st=statementProxy.getConnection().createStatement();\n  rs=st.executeQuery(selectSQL);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (paramAppender.isEmpty()) {\n  st=statementProxy.getConnection().createStatement();\n  rs=st.executeQuery(selectSQL);\n}\n else {\n  ps=statementProxy.getConnection().prepareStatement(selectSQL);\n  for (int i=0; i < paramAppender.size(); i++) {\n    ps.setObject(i + 1,paramAppender.get(i));\n  }\n  rs=ps.executeQuery();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 541,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (paramAppender.isEmpty()) {\n    st=statementProxy.getConnection().createStatement();\n    rs=st.executeQuery(selectSQL);\n  }\n else {\n    ps=statementProxy.getConnection().prepareStatement(selectSQL);\n    for (int i=0; i < paramAppender.size(); i++) {\n      ps.setObject(i + 1,paramAppender.get(i));\n    }\n    rs=ps.executeQuery();\n  }\n  beforeImage=TableRecords.buildRecords(tmeta,rs);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (paramAppender.isEmpty()) {\n    st=statementProxy.getConnection().createStatement();\n    rs=st.executeQuery(selectSQL);\n  }\n else {\n    ps=statementProxy.getConnection().prepareStatement(selectSQL);\n    for (int i=0; i < paramAppender.size(); i++) {\n      ps.setObject(i + 1,paramAppender.get(i));\n    }\n    rs=ps.executeQuery();\n  }\n  beforeImage=TableRecords.buildRecords(tmeta,rs);\n}\n  finally {\n  if (rs != null) {\n    rs.close();\n  }\n  if (st != null) {\n    st.close();\n  }\n  if (ps != null) {\n    ps.close();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2296,
        "startLineNumber" : 58,
        "startColumnNumber" : 61,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUpdateRecognizer recognizer=(SQLUpdateRecognizer)sqlRecognizer;\n  TableMeta tmeta=getTableMeta();\n  List<String> updateColumns=recognizer.getUpdateColumns();\n  StringBuffer selectSQLAppender=new StringBuffer(\"SELECT \");\n  if (!tmeta.containsPK(updateColumns)) {\n    selectSQLAppender.append(getColumnNameInSQL(tmeta.getPkName()) + \", \");\n  }\n  for (int i=0; i < updateColumns.size(); i++) {\n    selectSQLAppender.append(updateColumns.get(i));\n    if (i < (updateColumns.size() - 1)) {\n      selectSQLAppender.append(\", \");\n    }\n  }\n  String whereCondition=null;\n  ArrayList<Object> paramAppender=new ArrayList<>();\n  if (statementProxy instanceof ParametersHolder) {\n    whereCondition=recognizer.getWhereCondition((ParametersHolder)statementProxy,paramAppender);\n  }\n else {\n    whereCondition=recognizer.getWhereCondition();\n  }\n  selectSQLAppender.append(\" FROM \" + getFromTableInSQL());\n  if (StringUtils.isNotBlank(whereCondition)) {\n    selectSQLAppender.append(\" WHERE \" + whereCondition);\n  }\n  selectSQLAppender.append(\" FOR UPDATE\");\n  String selectSQL=selectSQLAppender.toString();\n  TableRecords beforeImage=null;\n  PreparedStatement ps=null;\n  Statement st=null;\n  ResultSet rs=null;\n  try {\n    if (paramAppender.isEmpty()) {\n      st=statementProxy.getConnection().createStatement();\n      rs=st.executeQuery(selectSQL);\n    }\n else {\n      ps=statementProxy.getConnection().prepareStatement(selectSQL);\n      for (int i=0; i < paramAppender.size(); i++) {\n        ps.setObject(i + 1,paramAppender.get(i));\n      }\n      rs=ps.executeQuery();\n    }\n    beforeImage=TableRecords.buildRecords(tmeta,rs);\n  }\n  finally {\n    if (rs != null) {\n      rs.close();\n    }\n    if (st != null) {\n      st.close();\n    }\n    if (ps != null) {\n      ps.close();\n    }\n  }\n  return beforeImage;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2367,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected TableRecords beforeImage() throws SQLException {\n  SQLUpdateRecognizer recognizer=(SQLUpdateRecognizer)sqlRecognizer;\n  TableMeta tmeta=getTableMeta();\n  List<String> updateColumns=recognizer.getUpdateColumns();\n  StringBuffer selectSQLAppender=new StringBuffer(\"SELECT \");\n  if (!tmeta.containsPK(updateColumns)) {\n    selectSQLAppender.append(getColumnNameInSQL(tmeta.getPkName()) + \", \");\n  }\n  for (int i=0; i < updateColumns.size(); i++) {\n    selectSQLAppender.append(updateColumns.get(i));\n    if (i < (updateColumns.size() - 1)) {\n      selectSQLAppender.append(\", \");\n    }\n  }\n  String whereCondition=null;\n  ArrayList<Object> paramAppender=new ArrayList<>();\n  if (statementProxy instanceof ParametersHolder) {\n    whereCondition=recognizer.getWhereCondition((ParametersHolder)statementProxy,paramAppender);\n  }\n else {\n    whereCondition=recognizer.getWhereCondition();\n  }\n  selectSQLAppender.append(\" FROM \" + getFromTableInSQL());\n  if (StringUtils.isNotBlank(whereCondition)) {\n    selectSQLAppender.append(\" WHERE \" + whereCondition);\n  }\n  selectSQLAppender.append(\" FOR UPDATE\");\n  String selectSQL=selectSQLAppender.toString();\n  TableRecords beforeImage=null;\n  PreparedStatement ps=null;\n  Statement st=null;\n  ResultSet rs=null;\n  try {\n    if (paramAppender.isEmpty()) {\n      st=statementProxy.getConnection().createStatement();\n      rs=st.executeQuery(selectSQL);\n    }\n else {\n      ps=statementProxy.getConnection().prepareStatement(selectSQL);\n      for (int i=0; i < paramAppender.size(); i++) {\n        ps.setObject(i + 1,paramAppender.get(i));\n      }\n      rs=ps.executeQuery();\n    }\n    beforeImage=TableRecords.buildRecords(tmeta,rs);\n  }\n  finally {\n    if (rs != null) {\n      rs.close();\n    }\n    if (st != null) {\n      st.close();\n    }\n    if (ps != null) {\n      ps.close();\n    }\n  }\n  return beforeImage;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 302,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 48
      },
      "nodeContext" : "rs=st.executeQuery(selectSQL);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "selectSQL",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 99,
      "startColumnNumber" : 69,
      "endLineNumber" : 99,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 99,
        "startColumnNumber" : 21,
        "endLineNumber" : 99,
        "endColumnNumber" : 79
      },
      "nodeContext" : "statementProxy.getConnection().prepareStatement(selectSQL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 79
      },
      "nodeContext" : "ps=statementProxy.getConnection().prepareStatement(selectSQL)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 80
      },
      "nodeContext" : "ps=statementProxy.getConnection().prepareStatement(selectSQL);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ps=statementProxy.getConnection().prepareStatement(selectSQL);\n  for (int i=0; i < paramAppender.size(); i++) {\n    ps.setObject(i + 1,paramAppender.get(i));\n  }\n  rs=ps.executeQuery();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (paramAppender.isEmpty()) {\n  st=statementProxy.getConnection().createStatement();\n  rs=st.executeQuery(selectSQL);\n}\n else {\n  ps=statementProxy.getConnection().prepareStatement(selectSQL);\n  for (int i=0; i < paramAppender.size(); i++) {\n    ps.setObject(i + 1,paramAppender.get(i));\n  }\n  rs=ps.executeQuery();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 541,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (paramAppender.isEmpty()) {\n    st=statementProxy.getConnection().createStatement();\n    rs=st.executeQuery(selectSQL);\n  }\n else {\n    ps=statementProxy.getConnection().prepareStatement(selectSQL);\n    for (int i=0; i < paramAppender.size(); i++) {\n      ps.setObject(i + 1,paramAppender.get(i));\n    }\n    rs=ps.executeQuery();\n  }\n  beforeImage=TableRecords.buildRecords(tmeta,rs);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (paramAppender.isEmpty()) {\n    st=statementProxy.getConnection().createStatement();\n    rs=st.executeQuery(selectSQL);\n  }\n else {\n    ps=statementProxy.getConnection().prepareStatement(selectSQL);\n    for (int i=0; i < paramAppender.size(); i++) {\n      ps.setObject(i + 1,paramAppender.get(i));\n    }\n    rs=ps.executeQuery();\n  }\n  beforeImage=TableRecords.buildRecords(tmeta,rs);\n}\n  finally {\n  if (rs != null) {\n    rs.close();\n  }\n  if (st != null) {\n    st.close();\n  }\n  if (ps != null) {\n    ps.close();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2296,
        "startLineNumber" : 58,
        "startColumnNumber" : 61,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUpdateRecognizer recognizer=(SQLUpdateRecognizer)sqlRecognizer;\n  TableMeta tmeta=getTableMeta();\n  List<String> updateColumns=recognizer.getUpdateColumns();\n  StringBuffer selectSQLAppender=new StringBuffer(\"SELECT \");\n  if (!tmeta.containsPK(updateColumns)) {\n    selectSQLAppender.append(getColumnNameInSQL(tmeta.getPkName()) + \", \");\n  }\n  for (int i=0; i < updateColumns.size(); i++) {\n    selectSQLAppender.append(updateColumns.get(i));\n    if (i < (updateColumns.size() - 1)) {\n      selectSQLAppender.append(\", \");\n    }\n  }\n  String whereCondition=null;\n  ArrayList<Object> paramAppender=new ArrayList<>();\n  if (statementProxy instanceof ParametersHolder) {\n    whereCondition=recognizer.getWhereCondition((ParametersHolder)statementProxy,paramAppender);\n  }\n else {\n    whereCondition=recognizer.getWhereCondition();\n  }\n  selectSQLAppender.append(\" FROM \" + getFromTableInSQL());\n  if (StringUtils.isNotBlank(whereCondition)) {\n    selectSQLAppender.append(\" WHERE \" + whereCondition);\n  }\n  selectSQLAppender.append(\" FOR UPDATE\");\n  String selectSQL=selectSQLAppender.toString();\n  TableRecords beforeImage=null;\n  PreparedStatement ps=null;\n  Statement st=null;\n  ResultSet rs=null;\n  try {\n    if (paramAppender.isEmpty()) {\n      st=statementProxy.getConnection().createStatement();\n      rs=st.executeQuery(selectSQL);\n    }\n else {\n      ps=statementProxy.getConnection().prepareStatement(selectSQL);\n      for (int i=0; i < paramAppender.size(); i++) {\n        ps.setObject(i + 1,paramAppender.get(i));\n      }\n      rs=ps.executeQuery();\n    }\n    beforeImage=TableRecords.buildRecords(tmeta,rs);\n  }\n  finally {\n    if (rs != null) {\n      rs.close();\n    }\n    if (st != null) {\n      st.close();\n    }\n    if (ps != null) {\n      ps.close();\n    }\n  }\n  return beforeImage;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2367,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected TableRecords beforeImage() throws SQLException {\n  SQLUpdateRecognizer recognizer=(SQLUpdateRecognizer)sqlRecognizer;\n  TableMeta tmeta=getTableMeta();\n  List<String> updateColumns=recognizer.getUpdateColumns();\n  StringBuffer selectSQLAppender=new StringBuffer(\"SELECT \");\n  if (!tmeta.containsPK(updateColumns)) {\n    selectSQLAppender.append(getColumnNameInSQL(tmeta.getPkName()) + \", \");\n  }\n  for (int i=0; i < updateColumns.size(); i++) {\n    selectSQLAppender.append(updateColumns.get(i));\n    if (i < (updateColumns.size() - 1)) {\n      selectSQLAppender.append(\", \");\n    }\n  }\n  String whereCondition=null;\n  ArrayList<Object> paramAppender=new ArrayList<>();\n  if (statementProxy instanceof ParametersHolder) {\n    whereCondition=recognizer.getWhereCondition((ParametersHolder)statementProxy,paramAppender);\n  }\n else {\n    whereCondition=recognizer.getWhereCondition();\n  }\n  selectSQLAppender.append(\" FROM \" + getFromTableInSQL());\n  if (StringUtils.isNotBlank(whereCondition)) {\n    selectSQLAppender.append(\" WHERE \" + whereCondition);\n  }\n  selectSQLAppender.append(\" FOR UPDATE\");\n  String selectSQL=selectSQLAppender.toString();\n  TableRecords beforeImage=null;\n  PreparedStatement ps=null;\n  Statement st=null;\n  ResultSet rs=null;\n  try {\n    if (paramAppender.isEmpty()) {\n      st=statementProxy.getConnection().createStatement();\n      rs=st.executeQuery(selectSQL);\n    }\n else {\n      ps=statementProxy.getConnection().prepareStatement(selectSQL);\n      for (int i=0; i < paramAppender.size(); i++) {\n        ps.setObject(i + 1,paramAppender.get(i));\n      }\n      rs=ps.executeQuery();\n    }\n    beforeImage=TableRecords.buildRecords(tmeta,rs);\n  }\n  finally {\n    if (rs != null) {\n      rs.close();\n    }\n    if (st != null) {\n      st.close();\n    }\n    if (ps != null) {\n      ps.close();\n    }\n  }\n  return beforeImage;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 302,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 80
      },
      "nodeContext" : "ps=statementProxy.getConnection().prepareStatement(selectSQL);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 97,
    "startColumnNumber" : 37,
    "endLineNumber" : 97,
    "endColumnNumber" : 46
  }, {
    "charLength" : 9,
    "startLineNumber" : 99,
    "startColumnNumber" : 69,
    "endLineNumber" : 99,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}