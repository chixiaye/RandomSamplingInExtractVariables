{
  "id" : 273,
  "expression" : "requireNonNull(prestoVersion,\"prestoVersion is null\")",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadataFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "requireNonNull(prestoVersion,\"prestoVersion is null\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 54,
      "startLineNumber" : 192,
      "startColumnNumber" : 29,
      "endLineNumber" : 192,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 192,
        "startColumnNumber" : 8,
        "endLineNumber" : 192,
        "endColumnNumber" : 83
      },
      "nodeContext" : "this.prestoVersion=requireNonNull(prestoVersion,\"prestoVersion is null\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 192,
        "startColumnNumber" : 8,
        "endLineNumber" : 192,
        "endColumnNumber" : 84
      },
      "nodeContext" : "this.prestoVersion=requireNonNull(prestoVersion,\"prestoVersion is null\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3241,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.allowCorruptWritesForTesting=allowCorruptWritesForTesting;\n  this.skipDeletionForAlter=skipDeletionForAlter;\n  this.skipTargetCleanupOnRollback=skipTargetCleanupOnRollback;\n  this.writesToNonManagedTablesEnabled=writesToNonManagedTablesEnabled;\n  this.createsOfNonManagedTablesEnabled=createsOfNonManagedTablesEnabled;\n  this.undoMetastoreOperationsEnabled=undoMetastoreOperationsEnabled;\n  this.maxPartitionBatchSize=maxPartitionBatchSize;\n  this.perTransactionCacheMaximumSize=perTransactionCacheMaximumSize;\n  this.metastoreImpersonationEnabled=metastoreImpersonationEnabled;\n  this.metastore=requireNonNull(metastore,\"metastore is null\");\n  this.hdfsEnvironment=requireNonNull(hdfsEnvironment,\"hdfsEnvironment is null\");\n  this.partitionManager=requireNonNull(partitionManager,\"partitionManager is null\");\n  this.timeZone=requireNonNull(timeZone,\"timeZone is null\");\n  this.typeManager=requireNonNull(typeManager,\"typeManager is null\");\n  this.locationService=requireNonNull(locationService,\"locationService is null\");\n  this.functionResolution=requireNonNull(functionResolution,\"functionResolution is null\");\n  this.rowExpressionService=requireNonNull(rowExpressionService,\"rowExpressionService is null\");\n  this.filterStatsCalculatorService=requireNonNull(filterStatsCalculatorService,\"filterStatsCalculatorService is null\");\n  this.tableParameterCodec=requireNonNull(tableParameterCodec,\"tableParameterCodec is null\");\n  this.partitionUpdateCodec=requireNonNull(partitionUpdateCodec,\"partitionUpdateCodec is null\");\n  this.partitionUpdateSmileCodec=requireNonNull(partitionUpdateSmileCodec,\"partitionUpdateSmileCodec is null\");\n  this.fileRenameExecutor=requireNonNull(fileRenameExecutor,\"fileRenameExecutor is null\");\n  this.typeTranslator=requireNonNull(typeTranslator,\"typeTranslator is null\");\n  this.stagingFileCommitter=requireNonNull(stagingFileCommitter,\"stagingFileCommitter is null\");\n  this.zeroRowFileCreator=requireNonNull(zeroRowFileCreator,\"zeroRowFileCreator is null\");\n  this.prestoVersion=requireNonNull(prestoVersion,\"prestoVersion is null\");\n  this.partitionObjectBuilder=requireNonNull(partitionObjectBuilder,\"partitionObjectBuilder is null\");\n  this.encryptionInformationProvider=requireNonNull(encryptionInformationProvider,\"encryptionInformationProvider is null\");\n  this.hivePartitionStats=requireNonNull(hivePartitionStats,\"hivePartitionStats is null\");\n  this.hiveFileRenamer=requireNonNull(hiveFileRenamer,\"hiveFileRenamer is null\");\n  this.columnConverterProvider=requireNonNull(columnConverterProvider,\"columnConverterProvider is null\");\n  if (!allowCorruptWritesForTesting && !timeZone.equals(DateTimeZone.getDefault())) {\n    log.warn(\"Hive writes are disabled. \" + \"To write data to Hive, your JVM timezone must match the Hive storage timezone. \" + \"Add -Duser.timezone=%s to your JVM arguments\",timeZone.getID());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4869,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public HiveMetadataFactory(ExtendedHiveMetastore metastore,HdfsEnvironment hdfsEnvironment,HivePartitionManager partitionManager,DateTimeZone timeZone,boolean allowCorruptWritesForTesting,boolean skipDeletionForAlter,boolean skipTargetCleanupOnRollback,boolean writesToNonManagedTablesEnabled,boolean createsOfNonManagedTablesEnabled,boolean undoMetastoreOperationsEnabled,int maxPartitionBatchSize,long perTransactionCacheMaximumSize,boolean metastoreImpersonationEnabled,TypeManager typeManager,LocationService locationService,StandardFunctionResolution functionResolution,RowExpressionService rowExpressionService,FilterStatsCalculatorService filterStatsCalculatorService,TableParameterCodec tableParameterCodec,JsonCodec<PartitionUpdate> partitionUpdateCodec,SmileCodec<PartitionUpdate> partitionUpdateSmileCodec,ListeningExecutorService fileRenameExecutor,TypeTranslator typeTranslator,StagingFileCommitter stagingFileCommitter,ZeroRowFileCreator zeroRowFileCreator,String prestoVersion,PartitionObjectBuilder partitionObjectBuilder,HiveEncryptionInformationProvider encryptionInformationProvider,HivePartitionStats hivePartitionStats,HiveFileRenamer hiveFileRenamer,ColumnConverterProvider columnConverterProvider){\n  this.allowCorruptWritesForTesting=allowCorruptWritesForTesting;\n  this.skipDeletionForAlter=skipDeletionForAlter;\n  this.skipTargetCleanupOnRollback=skipTargetCleanupOnRollback;\n  this.writesToNonManagedTablesEnabled=writesToNonManagedTablesEnabled;\n  this.createsOfNonManagedTablesEnabled=createsOfNonManagedTablesEnabled;\n  this.undoMetastoreOperationsEnabled=undoMetastoreOperationsEnabled;\n  this.maxPartitionBatchSize=maxPartitionBatchSize;\n  this.perTransactionCacheMaximumSize=perTransactionCacheMaximumSize;\n  this.metastoreImpersonationEnabled=metastoreImpersonationEnabled;\n  this.metastore=requireNonNull(metastore,\"metastore is null\");\n  this.hdfsEnvironment=requireNonNull(hdfsEnvironment,\"hdfsEnvironment is null\");\n  this.partitionManager=requireNonNull(partitionManager,\"partitionManager is null\");\n  this.timeZone=requireNonNull(timeZone,\"timeZone is null\");\n  this.typeManager=requireNonNull(typeManager,\"typeManager is null\");\n  this.locationService=requireNonNull(locationService,\"locationService is null\");\n  this.functionResolution=requireNonNull(functionResolution,\"functionResolution is null\");\n  this.rowExpressionService=requireNonNull(rowExpressionService,\"rowExpressionService is null\");\n  this.filterStatsCalculatorService=requireNonNull(filterStatsCalculatorService,\"filterStatsCalculatorService is null\");\n  this.tableParameterCodec=requireNonNull(tableParameterCodec,\"tableParameterCodec is null\");\n  this.partitionUpdateCodec=requireNonNull(partitionUpdateCodec,\"partitionUpdateCodec is null\");\n  this.partitionUpdateSmileCodec=requireNonNull(partitionUpdateSmileCodec,\"partitionUpdateSmileCodec is null\");\n  this.fileRenameExecutor=requireNonNull(fileRenameExecutor,\"fileRenameExecutor is null\");\n  this.typeTranslator=requireNonNull(typeTranslator,\"typeTranslator is null\");\n  this.stagingFileCommitter=requireNonNull(stagingFileCommitter,\"stagingFileCommitter is null\");\n  this.zeroRowFileCreator=requireNonNull(zeroRowFileCreator,\"zeroRowFileCreator is null\");\n  this.prestoVersion=requireNonNull(prestoVersion,\"prestoVersion is null\");\n  this.partitionObjectBuilder=requireNonNull(partitionObjectBuilder,\"partitionObjectBuilder is null\");\n  this.encryptionInformationProvider=requireNonNull(encryptionInformationProvider,\"encryptionInformationProvider is null\");\n  this.hivePartitionStats=requireNonNull(hivePartitionStats,\"hivePartitionStats is null\");\n  this.hiveFileRenamer=requireNonNull(hiveFileRenamer,\"hiveFileRenamer is null\");\n  this.columnConverterProvider=requireNonNull(columnConverterProvider,\"columnConverterProvider is null\");\n  if (!allowCorruptWritesForTesting && !timeZone.equals(DateTimeZone.getDefault())) {\n    log.warn(\"Hive writes are disabled. \" + \"To write data to Hive, your JVM timezone must match the Hive storage timezone. \" + \"Add -Duser.timezone=%s to your JVM arguments\",timeZone.getID());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 400,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 192,
        "startColumnNumber" : 8,
        "endLineNumber" : 192,
        "endColumnNumber" : 84
      },
      "nodeContext" : "this.prestoVersion=requireNonNull(prestoVersion,\"prestoVersion is null\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 54,
    "startLineNumber" : 192,
    "startColumnNumber" : 29,
    "endLineNumber" : 192,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}