{
  "id" : 71,
  "expression" : "16 * dipInPixels",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/app/DialogUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "16 * dipInPixels",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 45,
      "startColumnNumber" : 44,
      "endLineNumber" : 45,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 45,
        "startColumnNumber" : 33,
        "endLineNumber" : 45,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Math.round(16 * dipInPixels)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 61
      },
      "nodeContext" : "paddingTopAndSides=Math.round(16 * dipInPixels)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 62
      },
      "nodeContext" : "int paddingTopAndSides=Math.round(16 * dipInPixels);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2882,
        "startLineNumber" : 24,
        "startColumnNumber" : 84,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final EditText input=new EditText(activity);\n  input.setSingleLine();\n  if (initialText != null) {\n    input.setText(initialText);\n    Selection.setSelection(input.getText(),initialText.length());\n  }\n  final AlertDialog[] dialogHolder=new AlertDialog[1];\n  input.setImeActionLabel(activity.getResources().getString(positiveButtonText),KeyEvent.KEYCODE_ENTER);\n  input.setOnEditorActionListener(new TextView.OnEditorActionListener(){\n    @Override public boolean onEditorAction(    TextView v,    int actionId,    KeyEvent event){\n      onPositive.onTextSet(input.getText().toString());\n      dialogHolder[0].dismiss();\n      return true;\n    }\n  }\n);\n  float dipInPixels=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,1,activity.getResources().getDisplayMetrics());\n  int paddingTopAndSides=Math.round(16 * dipInPixels);\n  int paddingBottom=Math.round(24 * dipInPixels);\n  LinearLayout layout=new LinearLayout(activity);\n  layout.setOrientation(LinearLayout.VERTICAL);\n  layout.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT,LayoutParams.WRAP_CONTENT));\n  layout.setPadding(paddingTopAndSides,paddingTopAndSides,paddingTopAndSides,paddingBottom);\n  layout.addView(input);\n  AlertDialog.Builder builder=new AlertDialog.Builder(activity).setTitle(titleText).setView(layout).setPositiveButton(positiveButtonText,new DialogInterface.OnClickListener(){\n    @Override public void onClick(    DialogInterface d,    int whichButton){\n      onPositive.onTextSet(input.getText().toString());\n    }\n  }\n);\n  if (onNeutral != null) {\n    builder.setNeutralButton(neutralButtonText,new DialogInterface.OnClickListener(){\n      @Override public void onClick(      DialogInterface dialog,      int which){\n        onNeutral.onTextSet(input.getText().toString());\n      }\n    }\n);\n  }\n  if (onNegative == null) {\n    builder.setNegativeButton(android.R.string.cancel,null);\n  }\n else {\n    builder.setNegativeButton(negativeButtonText,new DialogInterface.OnClickListener(){\n      @Override public void onClick(      DialogInterface dialog,      int which){\n        onNegative.onTextSet(input.getText().toString());\n      }\n    }\n);\n  }\n  if (onDismiss != null)   builder.setOnDismissListener(onDismiss);\n  dialogHolder[0]=builder.create();\n  dialogHolder[0].setCanceledOnTouchOutside(false);\n  dialogHolder[0].show();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 359,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3320,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void textInput(Activity activity,int titleText,String initialText,int positiveButtonText,final TextSetListener onPositive,int neutralButtonText,final TextSetListener onNeutral,int negativeButtonText,final TextSetListener onNegative,final DialogInterface.OnDismissListener onDismiss){\n  final EditText input=new EditText(activity);\n  input.setSingleLine();\n  if (initialText != null) {\n    input.setText(initialText);\n    Selection.setSelection(input.getText(),initialText.length());\n  }\n  final AlertDialog[] dialogHolder=new AlertDialog[1];\n  input.setImeActionLabel(activity.getResources().getString(positiveButtonText),KeyEvent.KEYCODE_ENTER);\n  input.setOnEditorActionListener(new TextView.OnEditorActionListener(){\n    @Override public boolean onEditorAction(    TextView v,    int actionId,    KeyEvent event){\n      onPositive.onTextSet(input.getText().toString());\n      dialogHolder[0].dismiss();\n      return true;\n    }\n  }\n);\n  float dipInPixels=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,1,activity.getResources().getDisplayMetrics());\n  int paddingTopAndSides=Math.round(16 * dipInPixels);\n  int paddingBottom=Math.round(24 * dipInPixels);\n  LinearLayout layout=new LinearLayout(activity);\n  layout.setOrientation(LinearLayout.VERTICAL);\n  layout.setLayoutParams(new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT,LayoutParams.WRAP_CONTENT));\n  layout.setPadding(paddingTopAndSides,paddingTopAndSides,paddingTopAndSides,paddingBottom);\n  layout.addView(input);\n  AlertDialog.Builder builder=new AlertDialog.Builder(activity).setTitle(titleText).setView(layout).setPositiveButton(positiveButtonText,new DialogInterface.OnClickListener(){\n    @Override public void onClick(    DialogInterface d,    int whichButton){\n      onPositive.onTextSet(input.getText().toString());\n    }\n  }\n);\n  if (onNeutral != null) {\n    builder.setNeutralButton(neutralButtonText,new DialogInterface.OnClickListener(){\n      @Override public void onClick(      DialogInterface dialog,      int which){\n        onNeutral.onTextSet(input.getText().toString());\n      }\n    }\n);\n  }\n  if (onNegative == null) {\n    builder.setNegativeButton(android.R.string.cancel,null);\n  }\n else {\n    builder.setNegativeButton(negativeButtonText,new DialogInterface.OnClickListener(){\n      @Override public void onClick(      DialogInterface dialog,      int which){\n        onNegative.onTextSet(input.getText().toString());\n      }\n    }\n);\n  }\n  if (onDismiss != null)   builder.setOnDismissListener(onDismiss);\n  dialogHolder[0]=builder.create();\n  dialogHolder[0].setCanceledOnTouchOutside(false);\n  dialogHolder[0].show();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 406,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 62
      },
      "nodeContext" : "int paddingTopAndSides=Math.round(16 * dipInPixels);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 45,
    "startColumnNumber" : 44,
    "endLineNumber" : 45,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}