{
  "id" : 444,
  "expression" : "stylesStart == 0",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/xmlgen/CommonBinaryParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "stylesStart == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 30,
      "startColumnNumber" : 20,
      "endLineNumber" : 30,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 30,
        "startColumnNumber" : 20,
        "endLineNumber" : 30,
        "endColumnNumber" : 69
      },
      "nodeContext" : "stylesStart == 0 ? chunkEnd : start + stylesStart",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 30,
        "startColumnNumber" : 7,
        "endLineNumber" : 30,
        "endColumnNumber" : 69
      },
      "nodeContext" : "stringsEnd=stylesStart == 0 ? chunkEnd : start + stylesStart",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 30,
        "endColumnNumber" : 70
      },
      "nodeContext" : "long stringsEnd=stylesStart == 0 ? chunkEnd : start + stylesStart;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1367,
        "startLineNumber" : 14,
        "startColumnNumber" : 63,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  long start=is.getPos() - 2;\n  is.checkInt16(0x001c,\"String pool header size not 0x001c\");\n  long size=is.readUInt32();\n  long chunkEnd=start + size;\n  int stringCount=is.readInt32();\n  int styleCount=is.readInt32();\n  int flags=is.readInt32();\n  long stringsStart=is.readInt32();\n  long stylesStart=is.readInt32();\n  int[] stringsOffset=is.readInt32Array(stringCount);\n  int[] stylesOffset=is.readInt32Array(styleCount);\n  is.checkPos(start + stringsStart,\"Expected strings start\");\n  long stringsEnd=stylesStart == 0 ? chunkEnd : start + stylesStart;\n  String[] strings=new String[stringCount];\n  byte[] strArray=is.readInt8Array((int)(stringsEnd - is.getPos()));\n  if ((flags & UTF8_FLAG) != 0) {\n    for (int i=0; i < stringCount; i++) {\n      strings[i]=extractString8(strArray,stringsOffset[i]);\n    }\n  }\n else {\n    for (int i=0; i < stringCount; i++) {\n      strings[i]=extractString16(strArray,stringsOffset[i]);\n    }\n  }\n  if (stylesStart != 0) {\n    is.checkPos(start + stylesStart,\"Expected styles start\");\n    if (styleCount != 0) {\n    }\n  }\n  is.skipToPos(chunkEnd,\"Skip string pool padding\");\n  return strings;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1429,
        "startLineNumber" : 14,
        "startColumnNumber" : 1,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected String[] parseStringPoolNoType() throws IOException {\n  long start=is.getPos() - 2;\n  is.checkInt16(0x001c,\"String pool header size not 0x001c\");\n  long size=is.readUInt32();\n  long chunkEnd=start + size;\n  int stringCount=is.readInt32();\n  int styleCount=is.readInt32();\n  int flags=is.readInt32();\n  long stringsStart=is.readInt32();\n  long stylesStart=is.readInt32();\n  int[] stringsOffset=is.readInt32Array(stringCount);\n  int[] stylesOffset=is.readInt32Array(styleCount);\n  is.checkPos(start + stringsStart,\"Expected strings start\");\n  long stringsEnd=stylesStart == 0 ? chunkEnd : start + stylesStart;\n  String[] strings=new String[stringCount];\n  byte[] strArray=is.readInt8Array((int)(stringsEnd - is.getPos()));\n  if ((flags & UTF8_FLAG) != 0) {\n    for (int i=0; i < stringCount; i++) {\n      strings[i]=extractString8(strArray,stringsOffset[i]);\n    }\n  }\n else {\n    for (int i=0; i < stringCount; i++) {\n      strings[i]=extractString16(strArray,stringsOffset[i]);\n    }\n  }\n  if (stylesStart != 0) {\n    is.checkPos(start + stylesStart,\"Expected styles start\");\n    if (styleCount != 0) {\n    }\n  }\n  is.skipToPos(chunkEnd,\"Skip string pool padding\");\n  return strings;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 30,
        "endColumnNumber" : 70
      },
      "nodeContext" : "long stringsEnd=stylesStart == 0 ? chunkEnd : start + stylesStart;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 30,
    "startColumnNumber" : 20,
    "endLineNumber" : 30,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}