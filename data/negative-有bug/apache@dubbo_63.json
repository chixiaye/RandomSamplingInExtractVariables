{
  "id" : 63,
  "expression" : "\"false\"",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/AbstractReferenceConfigTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"false\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 193,
      "startColumnNumber" : 35,
      "endLineNumber" : 193,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 193,
        "startColumnNumber" : 8,
        "endLineNumber" : 193,
        "endColumnNumber" : 43
      },
      "nodeContext" : "referenceConfig.setGeneric(\"false\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 193,
        "startColumnNumber" : 8,
        "endLineNumber" : 193,
        "endColumnNumber" : 44
      },
      "nodeContext" : "referenceConfig.setGeneric(\"false\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 191,
        "startColumnNumber" : 38,
        "endLineNumber" : 207,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ReferenceConfig referenceConfig=new ReferenceConfig();\n  referenceConfig.setGeneric(\"false\");\n  referenceConfig.refresh();\n  Assertions.assertFalse(referenceConfig.isGeneric());\n  Assertions.assertEquals(\"false\",referenceConfig.getGeneric());\n  ReferenceConfig referenceConfig1=new ReferenceConfig();\n  referenceConfig1.setGeneric(GENERIC_SERIALIZATION_NATIVE_JAVA);\n  referenceConfig1.refresh();\n  Assertions.assertEquals(GENERIC_SERIALIZATION_NATIVE_JAVA,referenceConfig1.getGeneric());\n  Assertions.assertTrue(referenceConfig1.isGeneric());\n  ReferenceConfig referenceConfig2=new ReferenceConfig();\n  referenceConfig2.refresh();\n  Assertions.assertNull(referenceConfig2.getGeneric());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 190,
        "startColumnNumber" : 4,
        "endLineNumber" : 207,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGenericOverride(){\n  ReferenceConfig referenceConfig=new ReferenceConfig();\n  referenceConfig.setGeneric(\"false\");\n  referenceConfig.refresh();\n  Assertions.assertFalse(referenceConfig.isGeneric());\n  Assertions.assertEquals(\"false\",referenceConfig.getGeneric());\n  ReferenceConfig referenceConfig1=new ReferenceConfig();\n  referenceConfig1.setGeneric(GENERIC_SERIALIZATION_NATIVE_JAVA);\n  referenceConfig1.refresh();\n  Assertions.assertEquals(GENERIC_SERIALIZATION_NATIVE_JAVA,referenceConfig1.getGeneric());\n  Assertions.assertTrue(referenceConfig1.isGeneric());\n  ReferenceConfig referenceConfig2=new ReferenceConfig();\n  referenceConfig2.refresh();\n  Assertions.assertNull(referenceConfig2.getGeneric());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 193,
        "startColumnNumber" : 8,
        "endLineNumber" : 193,
        "endColumnNumber" : 44
      },
      "nodeContext" : "referenceConfig.setGeneric(\"false\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"false\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 196,
      "startColumnNumber" : 32,
      "endLineNumber" : 196,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assertions.assertEquals(\"false\",referenceConfig.getGeneric())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Assertions.assertEquals(\"false\",referenceConfig.getGeneric());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 191,
        "startColumnNumber" : 38,
        "endLineNumber" : 207,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ReferenceConfig referenceConfig=new ReferenceConfig();\n  referenceConfig.setGeneric(\"false\");\n  referenceConfig.refresh();\n  Assertions.assertFalse(referenceConfig.isGeneric());\n  Assertions.assertEquals(\"false\",referenceConfig.getGeneric());\n  ReferenceConfig referenceConfig1=new ReferenceConfig();\n  referenceConfig1.setGeneric(GENERIC_SERIALIZATION_NATIVE_JAVA);\n  referenceConfig1.refresh();\n  Assertions.assertEquals(GENERIC_SERIALIZATION_NATIVE_JAVA,referenceConfig1.getGeneric());\n  Assertions.assertTrue(referenceConfig1.isGeneric());\n  ReferenceConfig referenceConfig2=new ReferenceConfig();\n  referenceConfig2.refresh();\n  Assertions.assertNull(referenceConfig2.getGeneric());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 190,
        "startColumnNumber" : 4,
        "endLineNumber" : 207,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGenericOverride(){\n  ReferenceConfig referenceConfig=new ReferenceConfig();\n  referenceConfig.setGeneric(\"false\");\n  referenceConfig.refresh();\n  Assertions.assertFalse(referenceConfig.isGeneric());\n  Assertions.assertEquals(\"false\",referenceConfig.getGeneric());\n  ReferenceConfig referenceConfig1=new ReferenceConfig();\n  referenceConfig1.setGeneric(GENERIC_SERIALIZATION_NATIVE_JAVA);\n  referenceConfig1.refresh();\n  Assertions.assertEquals(GENERIC_SERIALIZATION_NATIVE_JAVA,referenceConfig1.getGeneric());\n  Assertions.assertTrue(referenceConfig1.isGeneric());\n  ReferenceConfig referenceConfig2=new ReferenceConfig();\n  referenceConfig2.refresh();\n  Assertions.assertNull(referenceConfig2.getGeneric());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Assertions.assertEquals(\"false\",referenceConfig.getGeneric());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 193,
    "startColumnNumber" : 35,
    "endLineNumber" : 193,
    "endColumnNumber" : 42
  }, {
    "charLength" : 7,
    "startLineNumber" : 196,
    "startColumnNumber" : 32,
    "endLineNumber" : 196,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}