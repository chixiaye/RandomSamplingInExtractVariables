{
  "id" : 63,
  "expression" : "currentSequences",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/main/java/com/lmax/disruptor/SequenceGroups.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "currentSequences",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 39,
      "startColumnNumber" : 38,
      "endLineNumber" : 39,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 39,
        "startColumnNumber" : 31,
        "endLineNumber" : 39,
        "endColumnNumber" : 104
      },
      "nodeContext" : "copyOf(currentSequences,currentSequences.length + sequencesToAdd.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 104
      },
      "nodeContext" : "updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 105
      },
      "nodeContext" : "updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  currentSequences=updater.get(holder);\n  updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n  cursorSequence=cursor.getCursor();\n  int index=currentSequences.length;\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n    updatedSequences[index++]=sequence;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 83
      },
      "nodeContext" : "do {\n  currentSequences=updater.get(holder);\n  updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n  cursorSequence=cursor.getCursor();\n  int index=currentSequences.length;\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n    updatedSequences[index++]=sequence;\n  }\n}\n while (!updater.compareAndSet(holder,currentSequences,updatedSequences));\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long cursorSequence;\n  Sequence[] updatedSequences;\n  Sequence[] currentSequences;\n  do {\n    currentSequences=updater.get(holder);\n    updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n    cursorSequence=cursor.getCursor();\n    int index=currentSequences.length;\n    for (    Sequence sequence : sequencesToAdd) {\n      sequence.set(cursorSequence);\n      updatedSequences[index++]=sequence;\n    }\n  }\n while (!updater.compareAndSet(holder,currentSequences,updatedSequences));\n  cursorSequence=cursor.getCursor();\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1112,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static <T>void addSequences(final T holder,final AtomicReferenceFieldUpdater<T,Sequence[]> updater,final Cursored cursor,final Sequence... sequencesToAdd){\n  long cursorSequence;\n  Sequence[] updatedSequences;\n  Sequence[] currentSequences;\n  do {\n    currentSequences=updater.get(holder);\n    updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n    cursorSequence=cursor.getCursor();\n    int index=currentSequences.length;\n    for (    Sequence sequence : sequencesToAdd) {\n      sequence.set(cursorSequence);\n      updatedSequences[index++]=sequence;\n    }\n  }\n while (!updater.compareAndSet(holder,currentSequences,updatedSequences));\n  cursorSequence=cursor.getCursor();\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 105
      },
      "nodeContext" : "updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.lmax.disruptor.Sequence[]"
  }, {
    "nodeContext" : "currentSequences",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 39,
      "startColumnNumber" : 56,
      "endLineNumber" : 39,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 39,
        "startColumnNumber" : 56,
        "endLineNumber" : 39,
        "endColumnNumber" : 79
      },
      "nodeContext" : "currentSequences.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 39,
        "startColumnNumber" : 56,
        "endLineNumber" : 39,
        "endColumnNumber" : 103
      },
      "nodeContext" : "currentSequences.length + sequencesToAdd.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 39,
        "startColumnNumber" : 31,
        "endLineNumber" : 39,
        "endColumnNumber" : 104
      },
      "nodeContext" : "copyOf(currentSequences,currentSequences.length + sequencesToAdd.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 104
      },
      "nodeContext" : "updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 105
      },
      "nodeContext" : "updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  currentSequences=updater.get(holder);\n  updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n  cursorSequence=cursor.getCursor();\n  int index=currentSequences.length;\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n    updatedSequences[index++]=sequence;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 83
      },
      "nodeContext" : "do {\n  currentSequences=updater.get(holder);\n  updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n  cursorSequence=cursor.getCursor();\n  int index=currentSequences.length;\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n    updatedSequences[index++]=sequence;\n  }\n}\n while (!updater.compareAndSet(holder,currentSequences,updatedSequences));\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long cursorSequence;\n  Sequence[] updatedSequences;\n  Sequence[] currentSequences;\n  do {\n    currentSequences=updater.get(holder);\n    updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n    cursorSequence=cursor.getCursor();\n    int index=currentSequences.length;\n    for (    Sequence sequence : sequencesToAdd) {\n      sequence.set(cursorSequence);\n      updatedSequences[index++]=sequence;\n    }\n  }\n while (!updater.compareAndSet(holder,currentSequences,updatedSequences));\n  cursorSequence=cursor.getCursor();\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1112,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static <T>void addSequences(final T holder,final AtomicReferenceFieldUpdater<T,Sequence[]> updater,final Cursored cursor,final Sequence... sequencesToAdd){\n  long cursorSequence;\n  Sequence[] updatedSequences;\n  Sequence[] currentSequences;\n  do {\n    currentSequences=updater.get(holder);\n    updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n    cursorSequence=cursor.getCursor();\n    int index=currentSequences.length;\n    for (    Sequence sequence : sequencesToAdd) {\n      sequence.set(cursorSequence);\n      updatedSequences[index++]=sequence;\n    }\n  }\n while (!updater.compareAndSet(holder,currentSequences,updatedSequences));\n  cursorSequence=cursor.getCursor();\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 105
      },
      "nodeContext" : "updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.lmax.disruptor.Sequence[]"
  }, {
    "nodeContext" : "currentSequences",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 42,
      "startColumnNumber" : 24,
      "endLineNumber" : 42,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 42,
        "startColumnNumber" : 24,
        "endLineNumber" : 42,
        "endColumnNumber" : 47
      },
      "nodeContext" : "currentSequences.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 42,
        "startColumnNumber" : 16,
        "endLineNumber" : 42,
        "endColumnNumber" : 47
      },
      "nodeContext" : "index=currentSequences.length",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 48
      },
      "nodeContext" : "int index=currentSequences.length;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  currentSequences=updater.get(holder);\n  updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n  cursorSequence=cursor.getCursor();\n  int index=currentSequences.length;\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n    updatedSequences[index++]=sequence;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 83
      },
      "nodeContext" : "do {\n  currentSequences=updater.get(holder);\n  updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n  cursorSequence=cursor.getCursor();\n  int index=currentSequences.length;\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n    updatedSequences[index++]=sequence;\n  }\n}\n while (!updater.compareAndSet(holder,currentSequences,updatedSequences));\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long cursorSequence;\n  Sequence[] updatedSequences;\n  Sequence[] currentSequences;\n  do {\n    currentSequences=updater.get(holder);\n    updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n    cursorSequence=cursor.getCursor();\n    int index=currentSequences.length;\n    for (    Sequence sequence : sequencesToAdd) {\n      sequence.set(cursorSequence);\n      updatedSequences[index++]=sequence;\n    }\n  }\n while (!updater.compareAndSet(holder,currentSequences,updatedSequences));\n  cursorSequence=cursor.getCursor();\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1112,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static <T>void addSequences(final T holder,final AtomicReferenceFieldUpdater<T,Sequence[]> updater,final Cursored cursor,final Sequence... sequencesToAdd){\n  long cursorSequence;\n  Sequence[] updatedSequences;\n  Sequence[] currentSequences;\n  do {\n    currentSequences=updater.get(holder);\n    updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n    cursorSequence=cursor.getCursor();\n    int index=currentSequences.length;\n    for (    Sequence sequence : sequencesToAdd) {\n      sequence.set(cursorSequence);\n      updatedSequences[index++]=sequence;\n    }\n  }\n while (!updater.compareAndSet(holder,currentSequences,updatedSequences));\n  cursorSequence=cursor.getCursor();\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 48
      },
      "nodeContext" : "int index=currentSequences.length;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.lmax.disruptor.Sequence[]"
  }, {
    "nodeContext" : "currentSequences",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 49,
      "startColumnNumber" : 46,
      "endLineNumber" : 49,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 49,
        "startColumnNumber" : 16,
        "endLineNumber" : 49,
        "endColumnNumber" : 81
      },
      "nodeContext" : "updater.compareAndSet(holder,currentSequences,updatedSequences)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 49,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 81
      },
      "nodeContext" : "!updater.compareAndSet(holder,currentSequences,updatedSequences)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 83
      },
      "nodeContext" : "do {\n  currentSequences=updater.get(holder);\n  updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n  cursorSequence=cursor.getCursor();\n  int index=currentSequences.length;\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n    updatedSequences[index++]=sequence;\n  }\n}\n while (!updater.compareAndSet(holder,currentSequences,updatedSequences));\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long cursorSequence;\n  Sequence[] updatedSequences;\n  Sequence[] currentSequences;\n  do {\n    currentSequences=updater.get(holder);\n    updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n    cursorSequence=cursor.getCursor();\n    int index=currentSequences.length;\n    for (    Sequence sequence : sequencesToAdd) {\n      sequence.set(cursorSequence);\n      updatedSequences[index++]=sequence;\n    }\n  }\n while (!updater.compareAndSet(holder,currentSequences,updatedSequences));\n  cursorSequence=cursor.getCursor();\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1112,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static <T>void addSequences(final T holder,final AtomicReferenceFieldUpdater<T,Sequence[]> updater,final Cursored cursor,final Sequence... sequencesToAdd){\n  long cursorSequence;\n  Sequence[] updatedSequences;\n  Sequence[] currentSequences;\n  do {\n    currentSequences=updater.get(holder);\n    updatedSequences=copyOf(currentSequences,currentSequences.length + sequencesToAdd.length);\n    cursorSequence=cursor.getCursor();\n    int index=currentSequences.length;\n    for (    Sequence sequence : sequencesToAdd) {\n      sequence.set(cursorSequence);\n      updatedSequences[index++]=sequence;\n    }\n  }\n while (!updater.compareAndSet(holder,currentSequences,updatedSequences));\n  cursorSequence=cursor.getCursor();\n  for (  Sequence sequence : sequencesToAdd) {\n    sequence.set(cursorSequence);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 49,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 81
      },
      "nodeContext" : "!updater.compareAndSet(holder,currentSequences,updatedSequences)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.lmax.disruptor.Sequence[]"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 39,
    "startColumnNumber" : 38,
    "endLineNumber" : 39,
    "endColumnNumber" : 54
  }, {
    "charLength" : 16,
    "startLineNumber" : 39,
    "startColumnNumber" : 56,
    "endLineNumber" : 39,
    "endColumnNumber" : 72
  }, {
    "charLength" : 16,
    "startLineNumber" : 42,
    "startColumnNumber" : 24,
    "endLineNumber" : 42,
    "endColumnNumber" : 40
  }, {
    "charLength" : 16,
    "startLineNumber" : 49,
    "startColumnNumber" : 46,
    "endLineNumber" : 49,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}