{
  "id" : 121,
  "expression" : "map2.get(\"openid\")",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/test/java/cn/hutool/core/convert/ConvertToBeanTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "map2.get(\"openid\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 52,
      "startColumnNumber" : 34,
      "endLineNumber" : 52,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Assert.assertEquals(\"11213232\",map2.get(\"openid\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.assertEquals(\"11213232\",map2.get(\"openid\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 36,
        "startColumnNumber" : 30,
        "endLineNumber" : 53,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  SubPerson person=new SubPerson();\n  person.setAge(14);\n  person.setOpenid(\"11213232\");\n  person.setName(\"测试A11\");\n  person.setSubName(\"sub名字\");\n  Map<String,String> map=Convert.toMap(String.class,String.class,person);\n  Assert.assertEquals(\"测试A11\",map.get(\"name\"));\n  Assert.assertEquals(\"14\",map.get(\"age\"));\n  Assert.assertEquals(\"11213232\",map.get(\"openid\"));\n  final LinkedHashMap<String,String> map2=Convert.convert(new TypeReference<LinkedHashMap<String,String>>(){\n  }\n,person);\n  Assert.assertEquals(\"测试A11\",map2.get(\"name\"));\n  Assert.assertEquals(\"14\",map2.get(\"age\"));\n  Assert.assertEquals(\"11213232\",map2.get(\"openid\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 35,
        "startColumnNumber" : 1,
        "endLineNumber" : 53,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void beanToMapTest2(){\n  SubPerson person=new SubPerson();\n  person.setAge(14);\n  person.setOpenid(\"11213232\");\n  person.setName(\"测试A11\");\n  person.setSubName(\"sub名字\");\n  Map<String,String> map=Convert.toMap(String.class,String.class,person);\n  Assert.assertEquals(\"测试A11\",map.get(\"name\"));\n  Assert.assertEquals(\"14\",map.get(\"age\"));\n  Assert.assertEquals(\"11213232\",map.get(\"openid\"));\n  final LinkedHashMap<String,String> map2=Convert.convert(new TypeReference<LinkedHashMap<String,String>>(){\n  }\n,person);\n  Assert.assertEquals(\"测试A11\",map2.get(\"name\"));\n  Assert.assertEquals(\"14\",map2.get(\"age\"));\n  Assert.assertEquals(\"11213232\",map2.get(\"openid\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.assertEquals(\"11213232\",map2.get(\"openid\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 52,
    "startColumnNumber" : 34,
    "endLineNumber" : 52,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}