{
  "id" : 192,
  "expression" : "new StackTraceElement[]{element}",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/org/openqa/selenium/devtools/v86/V86Events.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new StackTraceElement[]{element}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 94,
      "startColumnNumber" : 30,
      "endLineNumber" : 94,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 63
      },
      "nodeContext" : "exception.setStackTrace(new StackTraceElement[]{element})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 64
      },
      "nodeContext" : "exception.setStackTrace(new StackTraceElement[]{element});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 88,
        "startColumnNumber" : 33,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement element=new StackTraceElement(\"unknown\",\"unknown\",details.getUrl().orElse(\"unknown\"),details.getLineNumber());\n  exception.setStackTrace(new StackTraceElement[]{element});\n  return exception;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 298,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!maybeTrace.isPresent()) {\n  StackTraceElement element=new StackTraceElement(\"unknown\",\"unknown\",details.getUrl().orElse(\"unknown\"),details.getLineNumber());\n  exception.setStackTrace(new StackTraceElement[]{element});\n  return exception;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 845,
        "startLineNumber" : 82,
        "startColumnNumber" : 69,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ExceptionDetails details=event.getExceptionDetails();\n  Optional<StackTrace> maybeTrace=details.getStackTrace();\n  JavascriptException exception=new JavascriptException(event.getExceptionDetails().getText());\n  if (!maybeTrace.isPresent()) {\n    StackTraceElement element=new StackTraceElement(\"unknown\",\"unknown\",details.getUrl().orElse(\"unknown\"),details.getLineNumber());\n    exception.setStackTrace(new StackTraceElement[]{element});\n    return exception;\n  }\n  StackTrace trace=maybeTrace.get();\n  exception.setStackTrace(trace.getCallFrames().stream().map(frame -> new StackTraceElement(\"\",frame.getFunctionName(),frame.getUrl(),frame.getLineNumber())).toArray(StackTraceElement[]::new));\n  return exception;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 81,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected JavascriptException toJsException(ExceptionThrown event){\n  ExceptionDetails details=event.getExceptionDetails();\n  Optional<StackTrace> maybeTrace=details.getStackTrace();\n  JavascriptException exception=new JavascriptException(event.getExceptionDetails().getText());\n  if (!maybeTrace.isPresent()) {\n    StackTraceElement element=new StackTraceElement(\"unknown\",\"unknown\",details.getUrl().orElse(\"unknown\"),details.getLineNumber());\n    exception.setStackTrace(new StackTraceElement[]{element});\n    return exception;\n  }\n  StackTrace trace=maybeTrace.get();\n  exception.setStackTrace(trace.getCallFrames().stream().map(frame -> new StackTraceElement(\"\",frame.getFunctionName(),frame.getUrl(),frame.getLineNumber())).toArray(StackTraceElement[]::new));\n  return exception;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 64
      },
      "nodeContext" : "exception.setStackTrace(new StackTraceElement[]{element});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.StackTraceElement[]"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 94,
    "startColumnNumber" : 30,
    "endLineNumber" : 94,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}