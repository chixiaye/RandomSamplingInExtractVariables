{
  "id" : 387,
  "expression" : "i <= h",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/datastructures/skiplist/SkipList.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i <= h",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 31,
      "startColumnNumber" : 20,
      "endLineNumber" : 31,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 463,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i <= h; i++) {\n  currLeft.right=currRight;\n  currRight.left=currLeft;\n  currLeft.down=new Node(currLeft.k);\n  currLeft.down.up=currLeft;\n  currRight.down=new Node(currRight.k);\n  currRight.down.up=currRight;\n  currLeft.leftDist=0;\n  currRight.leftDist=1;\n  currLeft.height=height - i;\n  currRight.height=height - i;\n  currLeft=currLeft.down;\n  currRight=currRight.down;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 102,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 669,
        "startLineNumber" : 25,
        "startColumnNumber" : 61,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.height=height;\n  head=new Node(minKey);\n  tail=new Node(maxKey);\n  Node currLeft=head;\n  Node currRight=tail;\n  for (int i=0; i <= h; i++) {\n    currLeft.right=currRight;\n    currRight.left=currLeft;\n    currLeft.down=new Node(currLeft.k);\n    currLeft.down.up=currLeft;\n    currRight.down=new Node(currRight.k);\n    currRight.down.up=currRight;\n    currLeft.leftDist=0;\n    currRight.leftDist=1;\n    currLeft.height=height - i;\n    currRight.height=height - i;\n    currLeft=currLeft.down;\n    currRight=currRight.down;\n  }\n  currLeft.up.down=null;\n  currRight.up.down=null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 728,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public SkipList(int height,Key minKey,Key maxKey,int h){\n  this.height=height;\n  head=new Node(minKey);\n  tail=new Node(maxKey);\n  Node currLeft=head;\n  Node currRight=tail;\n  for (int i=0; i <= h; i++) {\n    currLeft.right=currRight;\n    currRight.left=currLeft;\n    currLeft.down=new Node(currLeft.k);\n    currLeft.down.up=currLeft;\n    currRight.down=new Node(currRight.k);\n    currRight.down.up=currRight;\n    currLeft.leftDist=0;\n    currRight.leftDist=1;\n    currLeft.height=height - i;\n    currRight.height=height - i;\n    currLeft=currLeft.down;\n    currRight=currRight.down;\n  }\n  currLeft.up.down=null;\n  currRight.up.down=null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 463,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i <= h; i++) {\n  currLeft.right=currRight;\n  currRight.left=currLeft;\n  currLeft.down=new Node(currLeft.k);\n  currLeft.down.up=currLeft;\n  currRight.down=new Node(currRight.k);\n  currRight.down.up=currRight;\n  currLeft.leftDist=0;\n  currRight.leftDist=1;\n  currLeft.height=height - i;\n  currRight.height=height - i;\n  currLeft=currLeft.down;\n  currRight=currRight.down;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 102,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 31,
    "startColumnNumber" : 20,
    "endLineNumber" : 31,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}