{
  "id" : 427,
  "expression" : "node1 < node2",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/graphtheory/BridgesAdjacencyListIterativeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "node1 < node2",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 153,
      "startColumnNumber" : 10,
      "endLineNumber" : 153,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 153,
        "startColumnNumber" : 6,
        "endLineNumber" : 157,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (node1 < node2) {\n  pair=Pair.of(node1,node2);\n}\n else {\n  pair=Pair.of(node2,node1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 149,
        "startColumnNumber" : 52,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int node1=bridgeNodes.get(i);\n  int node2=bridgeNodes.get(i + 1);\n  Pair<Integer,Integer> pair;\n  if (node1 < node2) {\n    pair=Pair.of(node1,node2);\n  }\n else {\n    pair=Pair.of(node2,node1);\n  }\n  bridges.add(pair);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < bridgeNodes.size(); i+=2) {\n  int node1=bridgeNodes.get(i);\n  int node2=bridgeNodes.get(i + 1);\n  Pair<Integer,Integer> pair;\n  if (node1 < node2) {\n    pair=Pair.of(node1,node2);\n  }\n else {\n    pair=Pair.of(node2,node1);\n  }\n  bridges.add(pair);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 147,
        "startColumnNumber" : 90,
        "endLineNumber" : 161,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Pair<Integer,Integer>> bridges=new ArrayList<>();\n  for (int i=0; i < bridgeNodes.size(); i+=2) {\n    int node1=bridgeNodes.get(i);\n    int node2=bridgeNodes.get(i + 1);\n    Pair<Integer,Integer> pair;\n    if (node1 < node2) {\n      pair=Pair.of(node1,node2);\n    }\n else {\n      pair=Pair.of(node2,node1);\n    }\n    bridges.add(pair);\n  }\n  return bridges;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 147,
        "startColumnNumber" : 2,
        "endLineNumber" : 161,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static List<Pair<Integer,Integer>> getSortedBridges(List<Integer> bridgeNodes){\n  List<Pair<Integer,Integer>> bridges=new ArrayList<>();\n  for (int i=0; i < bridgeNodes.size(); i+=2) {\n    int node1=bridgeNodes.get(i);\n    int node2=bridgeNodes.get(i + 1);\n    Pair<Integer,Integer> pair;\n    if (node1 < node2) {\n      pair=Pair.of(node1,node2);\n    }\n else {\n      pair=Pair.of(node2,node1);\n    }\n    bridges.add(pair);\n  }\n  return bridges;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 153,
        "startColumnNumber" : 6,
        "endLineNumber" : 157,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (node1 < node2) {\n  pair=Pair.of(node1,node2);\n}\n else {\n  pair=Pair.of(node2,node1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 153,
    "startColumnNumber" : 10,
    "endLineNumber" : 153,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}