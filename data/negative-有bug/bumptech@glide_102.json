{
  "id" : 102,
  "expression" : "Math.round((float)maxSize / (BITMAP_POOL_TARGET_SCREENS + MEMORY_CACHE_TARGET_SCREENS))",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/main/java/com/bumptech/glide/load/engine/cache/MemorySizeCalculator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math.round((float)maxSize / (BITMAP_POOL_TARGET_SCREENS + MEMORY_CACHE_TARGET_SCREENS))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 88,
      "startLineNumber" : 57,
      "startColumnNumber" : 10,
      "endLineNumber" : 57,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 11,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 57,
        "endColumnNumber" : 98
      },
      "nodeContext" : "part=Math.round((float)maxSize / (BITMAP_POOL_TARGET_SCREENS + MEMORY_CACHE_TARGET_SCREENS))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 57,
        "endColumnNumber" : 99
      },
      "nodeContext" : "int part=Math.round((float)maxSize / (BITMAP_POOL_TARGET_SCREENS + MEMORY_CACHE_TARGET_SCREENS));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 55,
        "startColumnNumber" : 11,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int part=Math.round((float)maxSize / (BITMAP_POOL_TARGET_SCREENS + MEMORY_CACHE_TARGET_SCREENS));\n  memoryCacheSize=part * MEMORY_CACHE_TARGET_SCREENS;\n  bitmapPoolSize=part * BITMAP_POOL_TARGET_SCREENS;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (targetMemoryCacheSize + targetPoolSize <= maxSize) {\n  memoryCacheSize=targetMemoryCacheSize;\n  bitmapPoolSize=targetPoolSize;\n}\n else {\n  int part=Math.round((float)maxSize / (BITMAP_POOL_TARGET_SCREENS + MEMORY_CACHE_TARGET_SCREENS));\n  memoryCacheSize=part * MEMORY_CACHE_TARGET_SCREENS;\n  bitmapPoolSize=part * BITMAP_POOL_TARGET_SCREENS;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 42,
        "startColumnNumber" : 41,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.context=context;\n  final int maxSize=getMaxSize(activityManager);\n  final int screenSize=screenDimensions.getWidthPixels() * screenDimensions.getHeightPixels() * BYTES_PER_ARGB_8888_PIXEL;\n  int targetPoolSize=screenSize * BITMAP_POOL_TARGET_SCREENS;\n  int targetMemoryCacheSize=screenSize * MEMORY_CACHE_TARGET_SCREENS;\n  if (targetMemoryCacheSize + targetPoolSize <= maxSize) {\n    memoryCacheSize=targetMemoryCacheSize;\n    bitmapPoolSize=targetPoolSize;\n  }\n else {\n    int part=Math.round((float)maxSize / (BITMAP_POOL_TARGET_SCREENS + MEMORY_CACHE_TARGET_SCREENS));\n    memoryCacheSize=part * MEMORY_CACHE_TARGET_SCREENS;\n    bitmapPoolSize=part * BITMAP_POOL_TARGET_SCREENS;\n  }\n  if (Log.isLoggable(TAG,Log.DEBUG)) {\n    Log.d(TAG,\"Calculated memory cache size: \" + toMb(memoryCacheSize) + \" pool size: \"+ toMb(bitmapPoolSize)+ \" memory class limited? \"+ (targetMemoryCacheSize + targetPoolSize > maxSize)+ \" max size: \"+ toMb(maxSize)+ \" memoryClass: \"+ activityManager.getMemoryClass()+ \" isLowMemoryDevice: \"+ isLowMemoryDevice(activityManager));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1303,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "MemorySizeCalculator(Context context,ActivityManager activityManager,ScreenDimensions screenDimensions){\n  this.context=context;\n  final int maxSize=getMaxSize(activityManager);\n  final int screenSize=screenDimensions.getWidthPixels() * screenDimensions.getHeightPixels() * BYTES_PER_ARGB_8888_PIXEL;\n  int targetPoolSize=screenSize * BITMAP_POOL_TARGET_SCREENS;\n  int targetMemoryCacheSize=screenSize * MEMORY_CACHE_TARGET_SCREENS;\n  if (targetMemoryCacheSize + targetPoolSize <= maxSize) {\n    memoryCacheSize=targetMemoryCacheSize;\n    bitmapPoolSize=targetPoolSize;\n  }\n else {\n    int part=Math.round((float)maxSize / (BITMAP_POOL_TARGET_SCREENS + MEMORY_CACHE_TARGET_SCREENS));\n    memoryCacheSize=part * MEMORY_CACHE_TARGET_SCREENS;\n    bitmapPoolSize=part * BITMAP_POOL_TARGET_SCREENS;\n  }\n  if (Log.isLoggable(TAG,Log.DEBUG)) {\n    Log.d(TAG,\"Calculated memory cache size: \" + toMb(memoryCacheSize) + \" pool size: \"+ toMb(bitmapPoolSize)+ \" memory class limited? \"+ (targetMemoryCacheSize + targetPoolSize > maxSize)+ \" max size: \"+ toMb(maxSize)+ \" memoryClass: \"+ activityManager.getMemoryClass()+ \" isLowMemoryDevice: \"+ isLowMemoryDevice(activityManager));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 57,
        "endColumnNumber" : 98
      },
      "nodeContext" : "part=Math.round((float)maxSize / (BITMAP_POOL_TARGET_SCREENS + MEMORY_CACHE_TARGET_SCREENS))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 13,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 88,
    "startLineNumber" : 57,
    "startColumnNumber" : 10,
    "endLineNumber" : 57,
    "endColumnNumber" : 98
  } ],
  "layoutRelationDataList" : [ ]
}