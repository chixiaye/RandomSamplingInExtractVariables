{
  "id" : 179,
  "expression" : "tempPath2",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/Utils.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tempPath2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 145,
      "startColumnNumber" : 6,
      "endLineNumber" : 145,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 145,
        "startColumnNumber" : 6,
        "endLineNumber" : 145,
        "endColumnNumber" : 23
      },
      "nodeContext" : "tempPath2.reset()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 145,
        "startColumnNumber" : 6,
        "endLineNumber" : 145,
        "endColumnNumber" : 24
      },
      "nodeContext" : "tempPath2.reset();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 144,
        "startColumnNumber" : 25,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  tempPath2.reset();\n  pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (newEnd > length) {\n  tempPath2.reset();\n  pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n else if (newStart < 0) {\n  tempPath2.reset();\n  pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1864,
        "startLineNumber" : 91,
        "startColumnNumber" : 70,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  L.beginSection(\"applyTrimPathIfNeeded\");\n  pathMeasure.setPath(path,false);\n  float length=pathMeasure.getLength();\n  if (startValue == 1f && endValue == 0f) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (length < 1f || Math.abs(endValue - startValue - 1) < .01) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  float start=length * startValue;\n  float end=length * endValue;\n  float newStart=Math.min(start,end);\n  float newEnd=Math.max(start,end);\n  float offset=offsetValue * length;\n  newStart+=offset;\n  newEnd+=offset;\n  if (newStart >= length && newEnd >= length) {\n    newStart=MiscUtils.floorMod(newStart,length);\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart < 0) {\n    newStart=MiscUtils.floorMod(newStart,length);\n  }\n  if (newEnd < 0) {\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart == newEnd) {\n    path.reset();\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (newStart >= newEnd) {\n    newStart-=length;\n  }\n  tempPath.reset();\n  pathMeasure.getSegment(newStart,newEnd,tempPath,true);\n  if (newEnd > length) {\n    tempPath2.reset();\n    pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n else   if (newStart < 0) {\n    tempPath2.reset();\n    pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n  path.set(tempPath);\n  L.endSection(\"applyTrimPathIfNeeded\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 247,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1969,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void applyTrimPathIfNeeded(Path path,float startValue,float endValue,float offsetValue){\n  L.beginSection(\"applyTrimPathIfNeeded\");\n  pathMeasure.setPath(path,false);\n  float length=pathMeasure.getLength();\n  if (startValue == 1f && endValue == 0f) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (length < 1f || Math.abs(endValue - startValue - 1) < .01) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  float start=length * startValue;\n  float end=length * endValue;\n  float newStart=Math.min(start,end);\n  float newEnd=Math.max(start,end);\n  float offset=offsetValue * length;\n  newStart+=offset;\n  newEnd+=offset;\n  if (newStart >= length && newEnd >= length) {\n    newStart=MiscUtils.floorMod(newStart,length);\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart < 0) {\n    newStart=MiscUtils.floorMod(newStart,length);\n  }\n  if (newEnd < 0) {\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart == newEnd) {\n    path.reset();\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (newStart >= newEnd) {\n    newStart-=length;\n  }\n  tempPath.reset();\n  pathMeasure.getSegment(newStart,newEnd,tempPath,true);\n  if (newEnd > length) {\n    tempPath2.reset();\n    pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n else   if (newStart < 0) {\n    tempPath2.reset();\n    pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n  path.set(tempPath);\n  L.endSection(\"applyTrimPathIfNeeded\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 145,
        "startColumnNumber" : 6,
        "endLineNumber" : 145,
        "endColumnNumber" : 24
      },
      "nodeContext" : "tempPath2.reset();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.airbnb.lottie.Path"
  }, {
    "nodeContext" : "tempPath2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 149,
      "startColumnNumber" : 10,
      "endLineNumber" : 149,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 146,
        "startColumnNumber" : 6,
        "endLineNumber" : 150,
        "endColumnNumber" : 15
      },
      "nodeContext" : "pathMeasure.getSegment(0,newEnd % length,tempPath2,true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 146,
        "startColumnNumber" : 6,
        "endLineNumber" : 150,
        "endColumnNumber" : 16
      },
      "nodeContext" : "pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 144,
        "startColumnNumber" : 25,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  tempPath2.reset();\n  pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (newEnd > length) {\n  tempPath2.reset();\n  pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n else if (newStart < 0) {\n  tempPath2.reset();\n  pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1864,
        "startLineNumber" : 91,
        "startColumnNumber" : 70,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  L.beginSection(\"applyTrimPathIfNeeded\");\n  pathMeasure.setPath(path,false);\n  float length=pathMeasure.getLength();\n  if (startValue == 1f && endValue == 0f) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (length < 1f || Math.abs(endValue - startValue - 1) < .01) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  float start=length * startValue;\n  float end=length * endValue;\n  float newStart=Math.min(start,end);\n  float newEnd=Math.max(start,end);\n  float offset=offsetValue * length;\n  newStart+=offset;\n  newEnd+=offset;\n  if (newStart >= length && newEnd >= length) {\n    newStart=MiscUtils.floorMod(newStart,length);\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart < 0) {\n    newStart=MiscUtils.floorMod(newStart,length);\n  }\n  if (newEnd < 0) {\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart == newEnd) {\n    path.reset();\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (newStart >= newEnd) {\n    newStart-=length;\n  }\n  tempPath.reset();\n  pathMeasure.getSegment(newStart,newEnd,tempPath,true);\n  if (newEnd > length) {\n    tempPath2.reset();\n    pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n else   if (newStart < 0) {\n    tempPath2.reset();\n    pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n  path.set(tempPath);\n  L.endSection(\"applyTrimPathIfNeeded\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 247,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1969,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void applyTrimPathIfNeeded(Path path,float startValue,float endValue,float offsetValue){\n  L.beginSection(\"applyTrimPathIfNeeded\");\n  pathMeasure.setPath(path,false);\n  float length=pathMeasure.getLength();\n  if (startValue == 1f && endValue == 0f) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (length < 1f || Math.abs(endValue - startValue - 1) < .01) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  float start=length * startValue;\n  float end=length * endValue;\n  float newStart=Math.min(start,end);\n  float newEnd=Math.max(start,end);\n  float offset=offsetValue * length;\n  newStart+=offset;\n  newEnd+=offset;\n  if (newStart >= length && newEnd >= length) {\n    newStart=MiscUtils.floorMod(newStart,length);\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart < 0) {\n    newStart=MiscUtils.floorMod(newStart,length);\n  }\n  if (newEnd < 0) {\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart == newEnd) {\n    path.reset();\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (newStart >= newEnd) {\n    newStart-=length;\n  }\n  tempPath.reset();\n  pathMeasure.getSegment(newStart,newEnd,tempPath,true);\n  if (newEnd > length) {\n    tempPath2.reset();\n    pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n else   if (newStart < 0) {\n    tempPath2.reset();\n    pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n  path.set(tempPath);\n  L.endSection(\"applyTrimPathIfNeeded\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 146,
        "startColumnNumber" : 6,
        "endLineNumber" : 150,
        "endColumnNumber" : 15
      },
      "nodeContext" : "pathMeasure.getSegment(0,newEnd % length,tempPath2,true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.airbnb.lottie.Path"
  }, {
    "nodeContext" : "tempPath2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 151,
      "startColumnNumber" : 23,
      "endLineNumber" : 151,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 33
      },
      "nodeContext" : "tempPath.addPath(tempPath2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 34
      },
      "nodeContext" : "tempPath.addPath(tempPath2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 144,
        "startColumnNumber" : 25,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  tempPath2.reset();\n  pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (newEnd > length) {\n  tempPath2.reset();\n  pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n else if (newStart < 0) {\n  tempPath2.reset();\n  pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1864,
        "startLineNumber" : 91,
        "startColumnNumber" : 70,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  L.beginSection(\"applyTrimPathIfNeeded\");\n  pathMeasure.setPath(path,false);\n  float length=pathMeasure.getLength();\n  if (startValue == 1f && endValue == 0f) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (length < 1f || Math.abs(endValue - startValue - 1) < .01) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  float start=length * startValue;\n  float end=length * endValue;\n  float newStart=Math.min(start,end);\n  float newEnd=Math.max(start,end);\n  float offset=offsetValue * length;\n  newStart+=offset;\n  newEnd+=offset;\n  if (newStart >= length && newEnd >= length) {\n    newStart=MiscUtils.floorMod(newStart,length);\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart < 0) {\n    newStart=MiscUtils.floorMod(newStart,length);\n  }\n  if (newEnd < 0) {\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart == newEnd) {\n    path.reset();\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (newStart >= newEnd) {\n    newStart-=length;\n  }\n  tempPath.reset();\n  pathMeasure.getSegment(newStart,newEnd,tempPath,true);\n  if (newEnd > length) {\n    tempPath2.reset();\n    pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n else   if (newStart < 0) {\n    tempPath2.reset();\n    pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n  path.set(tempPath);\n  L.endSection(\"applyTrimPathIfNeeded\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 247,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1969,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void applyTrimPathIfNeeded(Path path,float startValue,float endValue,float offsetValue){\n  L.beginSection(\"applyTrimPathIfNeeded\");\n  pathMeasure.setPath(path,false);\n  float length=pathMeasure.getLength();\n  if (startValue == 1f && endValue == 0f) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (length < 1f || Math.abs(endValue - startValue - 1) < .01) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  float start=length * startValue;\n  float end=length * endValue;\n  float newStart=Math.min(start,end);\n  float newEnd=Math.max(start,end);\n  float offset=offsetValue * length;\n  newStart+=offset;\n  newEnd+=offset;\n  if (newStart >= length && newEnd >= length) {\n    newStart=MiscUtils.floorMod(newStart,length);\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart < 0) {\n    newStart=MiscUtils.floorMod(newStart,length);\n  }\n  if (newEnd < 0) {\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart == newEnd) {\n    path.reset();\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (newStart >= newEnd) {\n    newStart-=length;\n  }\n  tempPath.reset();\n  pathMeasure.getSegment(newStart,newEnd,tempPath,true);\n  if (newEnd > length) {\n    tempPath2.reset();\n    pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n else   if (newStart < 0) {\n    tempPath2.reset();\n    pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n  path.set(tempPath);\n  L.endSection(\"applyTrimPathIfNeeded\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 34
      },
      "nodeContext" : "tempPath.addPath(tempPath2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.airbnb.lottie.Path"
  }, {
    "nodeContext" : "tempPath2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 153,
      "startColumnNumber" : 6,
      "endLineNumber" : 153,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 153,
        "startColumnNumber" : 6,
        "endLineNumber" : 153,
        "endColumnNumber" : 23
      },
      "nodeContext" : "tempPath2.reset()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 153,
        "startColumnNumber" : 6,
        "endLineNumber" : 153,
        "endColumnNumber" : 24
      },
      "nodeContext" : "tempPath2.reset();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 152,
        "startColumnNumber" : 29,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  tempPath2.reset();\n  pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 152,
        "startColumnNumber" : 11,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (newStart < 0) {\n  tempPath2.reset();\n  pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (newEnd > length) {\n  tempPath2.reset();\n  pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n else if (newStart < 0) {\n  tempPath2.reset();\n  pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1864,
        "startLineNumber" : 91,
        "startColumnNumber" : 70,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  L.beginSection(\"applyTrimPathIfNeeded\");\n  pathMeasure.setPath(path,false);\n  float length=pathMeasure.getLength();\n  if (startValue == 1f && endValue == 0f) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (length < 1f || Math.abs(endValue - startValue - 1) < .01) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  float start=length * startValue;\n  float end=length * endValue;\n  float newStart=Math.min(start,end);\n  float newEnd=Math.max(start,end);\n  float offset=offsetValue * length;\n  newStart+=offset;\n  newEnd+=offset;\n  if (newStart >= length && newEnd >= length) {\n    newStart=MiscUtils.floorMod(newStart,length);\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart < 0) {\n    newStart=MiscUtils.floorMod(newStart,length);\n  }\n  if (newEnd < 0) {\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart == newEnd) {\n    path.reset();\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (newStart >= newEnd) {\n    newStart-=length;\n  }\n  tempPath.reset();\n  pathMeasure.getSegment(newStart,newEnd,tempPath,true);\n  if (newEnd > length) {\n    tempPath2.reset();\n    pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n else   if (newStart < 0) {\n    tempPath2.reset();\n    pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n  path.set(tempPath);\n  L.endSection(\"applyTrimPathIfNeeded\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 247,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1969,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void applyTrimPathIfNeeded(Path path,float startValue,float endValue,float offsetValue){\n  L.beginSection(\"applyTrimPathIfNeeded\");\n  pathMeasure.setPath(path,false);\n  float length=pathMeasure.getLength();\n  if (startValue == 1f && endValue == 0f) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (length < 1f || Math.abs(endValue - startValue - 1) < .01) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  float start=length * startValue;\n  float end=length * endValue;\n  float newStart=Math.min(start,end);\n  float newEnd=Math.max(start,end);\n  float offset=offsetValue * length;\n  newStart+=offset;\n  newEnd+=offset;\n  if (newStart >= length && newEnd >= length) {\n    newStart=MiscUtils.floorMod(newStart,length);\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart < 0) {\n    newStart=MiscUtils.floorMod(newStart,length);\n  }\n  if (newEnd < 0) {\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart == newEnd) {\n    path.reset();\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (newStart >= newEnd) {\n    newStart-=length;\n  }\n  tempPath.reset();\n  pathMeasure.getSegment(newStart,newEnd,tempPath,true);\n  if (newEnd > length) {\n    tempPath2.reset();\n    pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n else   if (newStart < 0) {\n    tempPath2.reset();\n    pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n  path.set(tempPath);\n  L.endSection(\"applyTrimPathIfNeeded\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 153,
        "startColumnNumber" : 6,
        "endLineNumber" : 153,
        "endColumnNumber" : 24
      },
      "nodeContext" : "tempPath2.reset();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.airbnb.lottie.Path"
  }, {
    "nodeContext" : "tempPath2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 157,
      "startColumnNumber" : 10,
      "endLineNumber" : 157,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 154,
        "startColumnNumber" : 6,
        "endLineNumber" : 158,
        "endColumnNumber" : 15
      },
      "nodeContext" : "pathMeasure.getSegment(length + newStart,length,tempPath2,true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 154,
        "startColumnNumber" : 6,
        "endLineNumber" : 158,
        "endColumnNumber" : 16
      },
      "nodeContext" : "pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 152,
        "startColumnNumber" : 29,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  tempPath2.reset();\n  pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 152,
        "startColumnNumber" : 11,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (newStart < 0) {\n  tempPath2.reset();\n  pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (newEnd > length) {\n  tempPath2.reset();\n  pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n else if (newStart < 0) {\n  tempPath2.reset();\n  pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1864,
        "startLineNumber" : 91,
        "startColumnNumber" : 70,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  L.beginSection(\"applyTrimPathIfNeeded\");\n  pathMeasure.setPath(path,false);\n  float length=pathMeasure.getLength();\n  if (startValue == 1f && endValue == 0f) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (length < 1f || Math.abs(endValue - startValue - 1) < .01) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  float start=length * startValue;\n  float end=length * endValue;\n  float newStart=Math.min(start,end);\n  float newEnd=Math.max(start,end);\n  float offset=offsetValue * length;\n  newStart+=offset;\n  newEnd+=offset;\n  if (newStart >= length && newEnd >= length) {\n    newStart=MiscUtils.floorMod(newStart,length);\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart < 0) {\n    newStart=MiscUtils.floorMod(newStart,length);\n  }\n  if (newEnd < 0) {\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart == newEnd) {\n    path.reset();\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (newStart >= newEnd) {\n    newStart-=length;\n  }\n  tempPath.reset();\n  pathMeasure.getSegment(newStart,newEnd,tempPath,true);\n  if (newEnd > length) {\n    tempPath2.reset();\n    pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n else   if (newStart < 0) {\n    tempPath2.reset();\n    pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n  path.set(tempPath);\n  L.endSection(\"applyTrimPathIfNeeded\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 247,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1969,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void applyTrimPathIfNeeded(Path path,float startValue,float endValue,float offsetValue){\n  L.beginSection(\"applyTrimPathIfNeeded\");\n  pathMeasure.setPath(path,false);\n  float length=pathMeasure.getLength();\n  if (startValue == 1f && endValue == 0f) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (length < 1f || Math.abs(endValue - startValue - 1) < .01) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  float start=length * startValue;\n  float end=length * endValue;\n  float newStart=Math.min(start,end);\n  float newEnd=Math.max(start,end);\n  float offset=offsetValue * length;\n  newStart+=offset;\n  newEnd+=offset;\n  if (newStart >= length && newEnd >= length) {\n    newStart=MiscUtils.floorMod(newStart,length);\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart < 0) {\n    newStart=MiscUtils.floorMod(newStart,length);\n  }\n  if (newEnd < 0) {\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart == newEnd) {\n    path.reset();\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (newStart >= newEnd) {\n    newStart-=length;\n  }\n  tempPath.reset();\n  pathMeasure.getSegment(newStart,newEnd,tempPath,true);\n  if (newEnd > length) {\n    tempPath2.reset();\n    pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n else   if (newStart < 0) {\n    tempPath2.reset();\n    pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n  path.set(tempPath);\n  L.endSection(\"applyTrimPathIfNeeded\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 154,
        "startColumnNumber" : 6,
        "endLineNumber" : 158,
        "endColumnNumber" : 15
      },
      "nodeContext" : "pathMeasure.getSegment(length + newStart,length,tempPath2,true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.airbnb.lottie.Path"
  }, {
    "nodeContext" : "tempPath2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 159,
      "startColumnNumber" : 23,
      "endLineNumber" : 159,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 159,
        "startColumnNumber" : 6,
        "endLineNumber" : 159,
        "endColumnNumber" : 33
      },
      "nodeContext" : "tempPath.addPath(tempPath2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 159,
        "startColumnNumber" : 6,
        "endLineNumber" : 159,
        "endColumnNumber" : 34
      },
      "nodeContext" : "tempPath.addPath(tempPath2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 152,
        "startColumnNumber" : 29,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  tempPath2.reset();\n  pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 152,
        "startColumnNumber" : 11,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (newStart < 0) {\n  tempPath2.reset();\n  pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (newEnd > length) {\n  tempPath2.reset();\n  pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n else if (newStart < 0) {\n  tempPath2.reset();\n  pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n  tempPath.addPath(tempPath2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1864,
        "startLineNumber" : 91,
        "startColumnNumber" : 70,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  L.beginSection(\"applyTrimPathIfNeeded\");\n  pathMeasure.setPath(path,false);\n  float length=pathMeasure.getLength();\n  if (startValue == 1f && endValue == 0f) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (length < 1f || Math.abs(endValue - startValue - 1) < .01) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  float start=length * startValue;\n  float end=length * endValue;\n  float newStart=Math.min(start,end);\n  float newEnd=Math.max(start,end);\n  float offset=offsetValue * length;\n  newStart+=offset;\n  newEnd+=offset;\n  if (newStart >= length && newEnd >= length) {\n    newStart=MiscUtils.floorMod(newStart,length);\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart < 0) {\n    newStart=MiscUtils.floorMod(newStart,length);\n  }\n  if (newEnd < 0) {\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart == newEnd) {\n    path.reset();\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (newStart >= newEnd) {\n    newStart-=length;\n  }\n  tempPath.reset();\n  pathMeasure.getSegment(newStart,newEnd,tempPath,true);\n  if (newEnd > length) {\n    tempPath2.reset();\n    pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n else   if (newStart < 0) {\n    tempPath2.reset();\n    pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n  path.set(tempPath);\n  L.endSection(\"applyTrimPathIfNeeded\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 247,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1969,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void applyTrimPathIfNeeded(Path path,float startValue,float endValue,float offsetValue){\n  L.beginSection(\"applyTrimPathIfNeeded\");\n  pathMeasure.setPath(path,false);\n  float length=pathMeasure.getLength();\n  if (startValue == 1f && endValue == 0f) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (length < 1f || Math.abs(endValue - startValue - 1) < .01) {\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  float start=length * startValue;\n  float end=length * endValue;\n  float newStart=Math.min(start,end);\n  float newEnd=Math.max(start,end);\n  float offset=offsetValue * length;\n  newStart+=offset;\n  newEnd+=offset;\n  if (newStart >= length && newEnd >= length) {\n    newStart=MiscUtils.floorMod(newStart,length);\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart < 0) {\n    newStart=MiscUtils.floorMod(newStart,length);\n  }\n  if (newEnd < 0) {\n    newEnd=MiscUtils.floorMod(newEnd,length);\n  }\n  if (newStart == newEnd) {\n    path.reset();\n    L.endSection(\"applyTrimPathIfNeeded\");\n    return;\n  }\n  if (newStart >= newEnd) {\n    newStart-=length;\n  }\n  tempPath.reset();\n  pathMeasure.getSegment(newStart,newEnd,tempPath,true);\n  if (newEnd > length) {\n    tempPath2.reset();\n    pathMeasure.getSegment(0,newEnd % length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n else   if (newStart < 0) {\n    tempPath2.reset();\n    pathMeasure.getSegment(length + newStart,length,tempPath2,true);\n    tempPath.addPath(tempPath2);\n  }\n  path.set(tempPath);\n  L.endSection(\"applyTrimPathIfNeeded\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 159,
        "startColumnNumber" : 6,
        "endLineNumber" : 159,
        "endColumnNumber" : 34
      },
      "nodeContext" : "tempPath.addPath(tempPath2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.airbnb.lottie.Path"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 145,
    "startColumnNumber" : 6,
    "endLineNumber" : 145,
    "endColumnNumber" : 15
  }, {
    "charLength" : 9,
    "startLineNumber" : 149,
    "startColumnNumber" : 10,
    "endLineNumber" : 149,
    "endColumnNumber" : 19
  }, {
    "charLength" : 9,
    "startLineNumber" : 151,
    "startColumnNumber" : 23,
    "endLineNumber" : 151,
    "endColumnNumber" : 32
  }, {
    "charLength" : 9,
    "startLineNumber" : 153,
    "startColumnNumber" : 6,
    "endLineNumber" : 153,
    "endColumnNumber" : 15
  }, {
    "charLength" : 9,
    "startLineNumber" : 157,
    "startColumnNumber" : 10,
    "endLineNumber" : 157,
    "endColumnNumber" : 19
  }, {
    "charLength" : 9,
    "startLineNumber" : 159,
    "startColumnNumber" : 23,
    "endLineNumber" : 159,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  } ]
}