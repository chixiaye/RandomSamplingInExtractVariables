{
  "id" : 254,
  "expression" : "e.getMessage()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/main/java/org/apache/flink/core/fs/EntropyInjector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e.getMessage()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 99,
      "startColumnNumber" : 48,
      "endLineNumber" : 99,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 99,
        "startColumnNumber" : 22,
        "endLineNumber" : 99,
        "endColumnNumber" : 66
      },
      "nodeContext" : "new FlinkRuntimeException(e.getMessage(),e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 67
      },
      "nodeContext" : "throw new FlinkRuntimeException(e.getMessage(),e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 95,
        "startColumnNumber" : 36,
        "endLineNumber" : 100,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new FlinkRuntimeException(e.getMessage(),e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 95,
        "startColumnNumber" : 14,
        "endLineNumber" : 100,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (IOException e) {\n  throw new FlinkRuntimeException(e.getMessage(),e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  return resolveEntropy(path,efs,false);\n}\n catch (IOException e) {\n  throw new FlinkRuntimeException(e.getMessage(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 92,
        "startColumnNumber" : 15,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    return resolveEntropy(path,efs,false);\n  }\n catch (  IOException e) {\n    throw new FlinkRuntimeException(e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (efs == null) {\n  return path;\n}\n else {\n  try {\n    return resolveEntropy(path,efs,false);\n  }\n catch (  IOException e) {\n    throw new FlinkRuntimeException(e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 88,
        "startColumnNumber" : 78,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final EntropyInjectingFileSystem efs=getEntropyFs(fs);\n  if (efs == null) {\n    return path;\n  }\n else {\n    try {\n      return resolveEntropy(path,efs,false);\n    }\n catch (    IOException e) {\n      throw new FlinkRuntimeException(e.getMessage(),e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 971,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Removes the entropy marker string from the path, if the given file system is an entropy-injecting file system (implements  {@link EntropyInjectingFileSystem}) and the entropy marker key is present. Otherwise, this returns the path as is.\n * @param path The path to filter.\n * @return The path without the marker string.\n */\npublic static Path removeEntropyMarkerIfPresent(FileSystem fs,Path path){\n  final EntropyInjectingFileSystem efs=getEntropyFs(fs);\n  if (efs == null) {\n    return path;\n  }\n else {\n    try {\n      return resolveEntropy(path,efs,false);\n    }\n catch (    IOException e) {\n      throw new FlinkRuntimeException(e.getMessage(),e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 67
      },
      "nodeContext" : "throw new FlinkRuntimeException(e.getMessage(),e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 99,
    "startColumnNumber" : 48,
    "endLineNumber" : 99,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}