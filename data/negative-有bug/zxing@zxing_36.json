{
  "id" : 36,
  "expression" : "numCameras",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/android/src/com/google/zxing/client/android/camera/open/OpenCameraInterface.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "numCameras",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 47,
      "startColumnNumber" : 8,
      "endLineNumber" : 47,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 23
      },
      "nodeContext" : "numCameras == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (numCameras == 0) {\n  Log.w(TAG,\"No cameras!\");\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 44,
        "startColumnNumber" : 46,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int numCameras=Camera.getNumberOfCameras();\n  if (numCameras == 0) {\n    Log.w(TAG,\"No cameras!\");\n    return null;\n  }\n  if (cameraId >= numCameras) {\n    Log.w(TAG,\"Requested camera does not exist: \" + cameraId);\n    return null;\n  }\n  if (cameraId <= NO_REQUESTED_CAMERA) {\n    cameraId=0;\n    while (cameraId < numCameras) {\n      Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n      Camera.getCameraInfo(cameraId,cameraInfo);\n      if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n        break;\n      }\n      cameraId++;\n    }\n    if (cameraId == numCameras) {\n      Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n      cameraId=0;\n    }\n  }\n  Log.i(TAG,\"Opening camera #\" + cameraId);\n  Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n  Camera.getCameraInfo(cameraId,cameraInfo);\n  Camera camera=Camera.open(cameraId);\n  if (camera == null) {\n    return null;\n  }\n  return new OpenCamera(cameraId,camera,CameraFacing.values()[cameraInfo.facing],cameraInfo.orientation);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1673,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Opens the requested camera with  {@link Camera#open(int)}, if one exists.\n * @param cameraId camera ID of the camera to use. A negative valueor  {@link #NO_REQUESTED_CAMERA} means \"no preference\", in which case a rear-facingcamera is returned if possible or else any camera\n * @return handle to {@link OpenCamera} that was opened\n */\npublic static OpenCamera open(int cameraId){\n  int numCameras=Camera.getNumberOfCameras();\n  if (numCameras == 0) {\n    Log.w(TAG,\"No cameras!\");\n    return null;\n  }\n  if (cameraId >= numCameras) {\n    Log.w(TAG,\"Requested camera does not exist: \" + cameraId);\n    return null;\n  }\n  if (cameraId <= NO_REQUESTED_CAMERA) {\n    cameraId=0;\n    while (cameraId < numCameras) {\n      Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n      Camera.getCameraInfo(cameraId,cameraInfo);\n      if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n        break;\n      }\n      cameraId++;\n    }\n    if (cameraId == numCameras) {\n      Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n      cameraId=0;\n    }\n  }\n  Log.i(TAG,\"Opening camera #\" + cameraId);\n  Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n  Camera.getCameraInfo(cameraId,cameraInfo);\n  Camera camera=Camera.open(cameraId);\n  if (camera == null) {\n    return null;\n  }\n  return new OpenCamera(cameraId,camera,CameraFacing.values()[cameraInfo.facing],cameraInfo.orientation);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 23
      },
      "nodeContext" : "numCameras == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "numCameras",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 51,
      "startColumnNumber" : 20,
      "endLineNumber" : 51,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 30
      },
      "nodeContext" : "cameraId >= numCameras",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (cameraId >= numCameras) {\n  Log.w(TAG,\"Requested camera does not exist: \" + cameraId);\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 44,
        "startColumnNumber" : 46,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int numCameras=Camera.getNumberOfCameras();\n  if (numCameras == 0) {\n    Log.w(TAG,\"No cameras!\");\n    return null;\n  }\n  if (cameraId >= numCameras) {\n    Log.w(TAG,\"Requested camera does not exist: \" + cameraId);\n    return null;\n  }\n  if (cameraId <= NO_REQUESTED_CAMERA) {\n    cameraId=0;\n    while (cameraId < numCameras) {\n      Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n      Camera.getCameraInfo(cameraId,cameraInfo);\n      if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n        break;\n      }\n      cameraId++;\n    }\n    if (cameraId == numCameras) {\n      Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n      cameraId=0;\n    }\n  }\n  Log.i(TAG,\"Opening camera #\" + cameraId);\n  Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n  Camera.getCameraInfo(cameraId,cameraInfo);\n  Camera camera=Camera.open(cameraId);\n  if (camera == null) {\n    return null;\n  }\n  return new OpenCamera(cameraId,camera,CameraFacing.values()[cameraInfo.facing],cameraInfo.orientation);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1673,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Opens the requested camera with  {@link Camera#open(int)}, if one exists.\n * @param cameraId camera ID of the camera to use. A negative valueor  {@link #NO_REQUESTED_CAMERA} means \"no preference\", in which case a rear-facingcamera is returned if possible or else any camera\n * @return handle to {@link OpenCamera} that was opened\n */\npublic static OpenCamera open(int cameraId){\n  int numCameras=Camera.getNumberOfCameras();\n  if (numCameras == 0) {\n    Log.w(TAG,\"No cameras!\");\n    return null;\n  }\n  if (cameraId >= numCameras) {\n    Log.w(TAG,\"Requested camera does not exist: \" + cameraId);\n    return null;\n  }\n  if (cameraId <= NO_REQUESTED_CAMERA) {\n    cameraId=0;\n    while (cameraId < numCameras) {\n      Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n      Camera.getCameraInfo(cameraId,cameraInfo);\n      if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n        break;\n      }\n      cameraId++;\n    }\n    if (cameraId == numCameras) {\n      Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n      cameraId=0;\n    }\n  }\n  Log.i(TAG,\"Opening camera #\" + cameraId);\n  Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n  Camera.getCameraInfo(cameraId,cameraInfo);\n  Camera camera=Camera.open(cameraId);\n  if (camera == null) {\n    return null;\n  }\n  return new OpenCamera(cameraId,camera,CameraFacing.values()[cameraInfo.facing],cameraInfo.orientation);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 30
      },
      "nodeContext" : "cameraId >= numCameras",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "numCameras",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 58,
      "startColumnNumber" : 24,
      "endLineNumber" : 58,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 58,
        "startColumnNumber" : 13,
        "endLineNumber" : 58,
        "endColumnNumber" : 34
      },
      "nodeContext" : "cameraId < numCameras",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (cameraId < numCameras) {\n  Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n  Camera.getCameraInfo(cameraId,cameraInfo);\n  if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n    break;\n  }\n  cameraId++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 56,
        "startColumnNumber" : 41,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cameraId=0;\n  while (cameraId < numCameras) {\n    Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n    Camera.getCameraInfo(cameraId,cameraInfo);\n    if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n      break;\n    }\n    cameraId++;\n  }\n  if (cameraId == numCameras) {\n    Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n    cameraId=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (cameraId <= NO_REQUESTED_CAMERA) {\n  cameraId=0;\n  while (cameraId < numCameras) {\n    Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n    Camera.getCameraInfo(cameraId,cameraInfo);\n    if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n      break;\n    }\n    cameraId++;\n  }\n  if (cameraId == numCameras) {\n    Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n    cameraId=0;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 44,
        "startColumnNumber" : 46,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int numCameras=Camera.getNumberOfCameras();\n  if (numCameras == 0) {\n    Log.w(TAG,\"No cameras!\");\n    return null;\n  }\n  if (cameraId >= numCameras) {\n    Log.w(TAG,\"Requested camera does not exist: \" + cameraId);\n    return null;\n  }\n  if (cameraId <= NO_REQUESTED_CAMERA) {\n    cameraId=0;\n    while (cameraId < numCameras) {\n      Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n      Camera.getCameraInfo(cameraId,cameraInfo);\n      if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n        break;\n      }\n      cameraId++;\n    }\n    if (cameraId == numCameras) {\n      Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n      cameraId=0;\n    }\n  }\n  Log.i(TAG,\"Opening camera #\" + cameraId);\n  Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n  Camera.getCameraInfo(cameraId,cameraInfo);\n  Camera camera=Camera.open(cameraId);\n  if (camera == null) {\n    return null;\n  }\n  return new OpenCamera(cameraId,camera,CameraFacing.values()[cameraInfo.facing],cameraInfo.orientation);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1673,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Opens the requested camera with  {@link Camera#open(int)}, if one exists.\n * @param cameraId camera ID of the camera to use. A negative valueor  {@link #NO_REQUESTED_CAMERA} means \"no preference\", in which case a rear-facingcamera is returned if possible or else any camera\n * @return handle to {@link OpenCamera} that was opened\n */\npublic static OpenCamera open(int cameraId){\n  int numCameras=Camera.getNumberOfCameras();\n  if (numCameras == 0) {\n    Log.w(TAG,\"No cameras!\");\n    return null;\n  }\n  if (cameraId >= numCameras) {\n    Log.w(TAG,\"Requested camera does not exist: \" + cameraId);\n    return null;\n  }\n  if (cameraId <= NO_REQUESTED_CAMERA) {\n    cameraId=0;\n    while (cameraId < numCameras) {\n      Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n      Camera.getCameraInfo(cameraId,cameraInfo);\n      if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n        break;\n      }\n      cameraId++;\n    }\n    if (cameraId == numCameras) {\n      Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n      cameraId=0;\n    }\n  }\n  Log.i(TAG,\"Opening camera #\" + cameraId);\n  Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n  Camera.getCameraInfo(cameraId,cameraInfo);\n  Camera camera=Camera.open(cameraId);\n  if (camera == null) {\n    return null;\n  }\n  return new OpenCamera(cameraId,camera,CameraFacing.values()[cameraInfo.facing],cameraInfo.orientation);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 58,
        "startColumnNumber" : 13,
        "endLineNumber" : 58,
        "endColumnNumber" : 34
      },
      "nodeContext" : "cameraId < numCameras",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "numCameras",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 66,
      "startColumnNumber" : 22,
      "endLineNumber" : 66,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 66,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 32
      },
      "nodeContext" : "cameraId == numCameras",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 66,
        "startColumnNumber" : 6,
        "endLineNumber" : 69,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cameraId == numCameras) {\n  Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n  cameraId=0;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 56,
        "startColumnNumber" : 41,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cameraId=0;\n  while (cameraId < numCameras) {\n    Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n    Camera.getCameraInfo(cameraId,cameraInfo);\n    if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n      break;\n    }\n    cameraId++;\n  }\n  if (cameraId == numCameras) {\n    Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n    cameraId=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (cameraId <= NO_REQUESTED_CAMERA) {\n  cameraId=0;\n  while (cameraId < numCameras) {\n    Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n    Camera.getCameraInfo(cameraId,cameraInfo);\n    if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n      break;\n    }\n    cameraId++;\n  }\n  if (cameraId == numCameras) {\n    Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n    cameraId=0;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 44,
        "startColumnNumber" : 46,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int numCameras=Camera.getNumberOfCameras();\n  if (numCameras == 0) {\n    Log.w(TAG,\"No cameras!\");\n    return null;\n  }\n  if (cameraId >= numCameras) {\n    Log.w(TAG,\"Requested camera does not exist: \" + cameraId);\n    return null;\n  }\n  if (cameraId <= NO_REQUESTED_CAMERA) {\n    cameraId=0;\n    while (cameraId < numCameras) {\n      Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n      Camera.getCameraInfo(cameraId,cameraInfo);\n      if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n        break;\n      }\n      cameraId++;\n    }\n    if (cameraId == numCameras) {\n      Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n      cameraId=0;\n    }\n  }\n  Log.i(TAG,\"Opening camera #\" + cameraId);\n  Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n  Camera.getCameraInfo(cameraId,cameraInfo);\n  Camera camera=Camera.open(cameraId);\n  if (camera == null) {\n    return null;\n  }\n  return new OpenCamera(cameraId,camera,CameraFacing.values()[cameraInfo.facing],cameraInfo.orientation);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1673,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Opens the requested camera with  {@link Camera#open(int)}, if one exists.\n * @param cameraId camera ID of the camera to use. A negative valueor  {@link #NO_REQUESTED_CAMERA} means \"no preference\", in which case a rear-facingcamera is returned if possible or else any camera\n * @return handle to {@link OpenCamera} that was opened\n */\npublic static OpenCamera open(int cameraId){\n  int numCameras=Camera.getNumberOfCameras();\n  if (numCameras == 0) {\n    Log.w(TAG,\"No cameras!\");\n    return null;\n  }\n  if (cameraId >= numCameras) {\n    Log.w(TAG,\"Requested camera does not exist: \" + cameraId);\n    return null;\n  }\n  if (cameraId <= NO_REQUESTED_CAMERA) {\n    cameraId=0;\n    while (cameraId < numCameras) {\n      Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n      Camera.getCameraInfo(cameraId,cameraInfo);\n      if (CameraFacing.values()[cameraInfo.facing] == CameraFacing.BACK) {\n        break;\n      }\n      cameraId++;\n    }\n    if (cameraId == numCameras) {\n      Log.i(TAG,\"No camera facing \" + CameraFacing.BACK + \"; returning camera #0\");\n      cameraId=0;\n    }\n  }\n  Log.i(TAG,\"Opening camera #\" + cameraId);\n  Camera.CameraInfo cameraInfo=new Camera.CameraInfo();\n  Camera.getCameraInfo(cameraId,cameraInfo);\n  Camera camera=Camera.open(cameraId);\n  if (camera == null) {\n    return null;\n  }\n  return new OpenCamera(cameraId,camera,CameraFacing.values()[cameraInfo.facing],cameraInfo.orientation);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 66,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 32
      },
      "nodeContext" : "cameraId == numCameras",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 47,
    "startColumnNumber" : 8,
    "endLineNumber" : 47,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 51,
    "startColumnNumber" : 20,
    "endLineNumber" : 51,
    "endColumnNumber" : 30
  }, {
    "charLength" : 10,
    "startLineNumber" : 58,
    "startColumnNumber" : 24,
    "endLineNumber" : 58,
    "endColumnNumber" : 34
  }, {
    "charLength" : 10,
    "startLineNumber" : 66,
    "startColumnNumber" : 22,
    "endLineNumber" : 66,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}