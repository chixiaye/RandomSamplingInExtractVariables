{
  "id" : 8,
  "expression" : "length",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/vito/core/src/main/java/com/facebook/fresco/vito/core/FrescoVitoRegionDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "length",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 64,
      "endLineNumber" : 56,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 91
      },
      "nodeContext" : "mPlatformDecoder.decodeJPEGFromEncodedImageWithColorSpace(encodedImage,options.bitmapConfig,regionToDecode,length,options.colorSpace)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 54,
        "startColumnNumber" : 31,
        "endLineNumber" : 56,
        "endColumnNumber" : 91
      },
      "nodeContext" : "decodedBitmapReference=mPlatformDecoder.decodeJPEGFromEncodedImageWithColorSpace(encodedImage,options.bitmapConfig,regionToDecode,length,options.colorSpace)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 92
      },
      "nodeContext" : "CloseableReference<Bitmap> decodedBitmapReference=mPlatformDecoder.decodeJPEGFromEncodedImageWithColorSpace(encodedImage,options.bitmapConfig,regionToDecode,length,options.colorSpace);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 50,
        "startColumnNumber" : 98,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Rect regionToDecode=computeRegionToDecode(encodedImage,options);\n  CloseableReference<Bitmap> decodedBitmapReference=mPlatformDecoder.decodeJPEGFromEncodedImageWithColorSpace(encodedImage,options.bitmapConfig,regionToDecode,length,options.colorSpace);\n  try {\n    maybeApplyTransformation(options.bitmapTransformation,decodedBitmapReference);\n    return new CloseableStaticBitmap(decodedBitmapReference,ImmutableQualityInfo.FULL_QUALITY,encodedImage.getRotationAngle(),encodedImage.getExifOrientation());\n  }\n  finally {\n    CloseableReference.closeSafely(decodedBitmapReference);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1197,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Decodes a partial jpeg.\n * @param encodedImage input image (encoded bytes plus meta data)\n * @param length if image type supports decoding incomplete image then determines where the imagedata should be cut for decoding.\n * @param qualityInfo quality information for the image\n * @param options options that can change decode behavior\n */\n@Override public CloseableImage decode(EncodedImage encodedImage,int length,QualityInfo qualityInfo,ImageDecodeOptions options){\n  Rect regionToDecode=computeRegionToDecode(encodedImage,options);\n  CloseableReference<Bitmap> decodedBitmapReference=mPlatformDecoder.decodeJPEGFromEncodedImageWithColorSpace(encodedImage,options.bitmapConfig,regionToDecode,length,options.colorSpace);\n  try {\n    maybeApplyTransformation(options.bitmapTransformation,decodedBitmapReference);\n    return new CloseableStaticBitmap(decodedBitmapReference,ImmutableQualityInfo.FULL_QUALITY,encodedImage.getRotationAngle(),encodedImage.getExifOrientation());\n  }\n  finally {\n    CloseableReference.closeSafely(decodedBitmapReference);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 91
      },
      "nodeContext" : "mPlatformDecoder.decodeJPEGFromEncodedImageWithColorSpace(encodedImage,options.bitmapConfig,regionToDecode,length,options.colorSpace)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 64,
    "endLineNumber" : 56,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}