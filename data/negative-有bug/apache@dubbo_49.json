{
  "id" : 49,
  "expression" : "config.getOnconnect()",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractInterfaceBuilderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "config.getOnconnect()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 285,
      "startColumnNumber" : 44,
      "endLineNumber" : 285,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 285,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assertions.assertEquals(\"onconnet\",config.getOnconnect())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 285,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Assertions.assertEquals(\"onconnet\",config.getOnconnect());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2802,
        "startLineNumber" : 247,
        "startColumnNumber" : 17,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MonitorConfig monitorConfig=new MonitorConfig(\"123\");\n  ApplicationConfig applicationConfig=new ApplicationConfig();\n  applicationConfig.setName(\"appName\");\n  ModuleConfig moduleConfig=new ModuleConfig();\n  RegistryConfig registryConfig=new RegistryConfig();\n  MetadataReportConfig metadataReportConfig=new MetadataReportConfig();\n  ConfigCenterConfig configCenterConfig=new ConfigCenterConfig();\n  InterfaceBuilder builder=new InterfaceBuilder();\n  builder.id(\"id\").prefix(\"prefix\").local(true).stub(false).monitor(\"123\").proxy(\"mockproxyfactory\").cluster(\"mockcluster\").filter(\"mockfilter\").listener(\"mockinvokerlistener\").owner(\"owner\").connections(1).layer(\"layer\").application(applicationConfig).module(moduleConfig).addRegistry(registryConfig).registryIds(\"registryIds\").onconnect(\"onconnet\").ondisconnect(\"ondisconnect\").metadataReportConfig(metadataReportConfig).configCenter(configCenterConfig).callbacks(2).scope(\"scope\");\n  InterfaceConfig config=builder.build();\n  InterfaceConfig config2=builder.build();\n  Assertions.assertEquals(\"id\",config.getId());\n  Assertions.assertEquals(\"prefix\",config.getPrefix());\n  Assertions.assertEquals(\"true\",config.getLocal());\n  Assertions.assertEquals(\"false\",config.getStub());\n  Assertions.assertEquals(monitorConfig,config.getMonitor());\n  Assertions.assertEquals(\"mockproxyfactory\",config.getProxy());\n  Assertions.assertEquals(\"mockcluster\",config.getCluster());\n  Assertions.assertEquals(\"mockfilter\",config.getFilter());\n  Assertions.assertEquals(\"mockinvokerlistener\",config.getListener());\n  Assertions.assertEquals(\"owner\",config.getOwner());\n  Assertions.assertEquals(1,config.getConnections().intValue());\n  Assertions.assertEquals(\"layer\",config.getLayer());\n  Assertions.assertEquals(applicationConfig,config.getApplication());\n  Assertions.assertEquals(moduleConfig,config.getModule());\n  Assertions.assertEquals(registryConfig,config.getRegistry());\n  Assertions.assertEquals(\"registryIds\",config.getRegistryIds());\n  Assertions.assertEquals(\"onconnet\",config.getOnconnect());\n  Assertions.assertEquals(\"ondisconnect\",config.getOndisconnect());\n  Assertions.assertEquals(metadataReportConfig,config.getMetadataReportConfig());\n  Assertions.assertEquals(configCenterConfig,config.getConfigCenter());\n  Assertions.assertEquals(2,config.getCallbacks().intValue());\n  Assertions.assertEquals(\"scope\",config.getScope());\n  Assertions.assertNotSame(config,config2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 333,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2825,
        "startLineNumber" : 246,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void build(){\n  MonitorConfig monitorConfig=new MonitorConfig(\"123\");\n  ApplicationConfig applicationConfig=new ApplicationConfig();\n  applicationConfig.setName(\"appName\");\n  ModuleConfig moduleConfig=new ModuleConfig();\n  RegistryConfig registryConfig=new RegistryConfig();\n  MetadataReportConfig metadataReportConfig=new MetadataReportConfig();\n  ConfigCenterConfig configCenterConfig=new ConfigCenterConfig();\n  InterfaceBuilder builder=new InterfaceBuilder();\n  builder.id(\"id\").prefix(\"prefix\").local(true).stub(false).monitor(\"123\").proxy(\"mockproxyfactory\").cluster(\"mockcluster\").filter(\"mockfilter\").listener(\"mockinvokerlistener\").owner(\"owner\").connections(1).layer(\"layer\").application(applicationConfig).module(moduleConfig).addRegistry(registryConfig).registryIds(\"registryIds\").onconnect(\"onconnet\").ondisconnect(\"ondisconnect\").metadataReportConfig(metadataReportConfig).configCenter(configCenterConfig).callbacks(2).scope(\"scope\");\n  InterfaceConfig config=builder.build();\n  InterfaceConfig config2=builder.build();\n  Assertions.assertEquals(\"id\",config.getId());\n  Assertions.assertEquals(\"prefix\",config.getPrefix());\n  Assertions.assertEquals(\"true\",config.getLocal());\n  Assertions.assertEquals(\"false\",config.getStub());\n  Assertions.assertEquals(monitorConfig,config.getMonitor());\n  Assertions.assertEquals(\"mockproxyfactory\",config.getProxy());\n  Assertions.assertEquals(\"mockcluster\",config.getCluster());\n  Assertions.assertEquals(\"mockfilter\",config.getFilter());\n  Assertions.assertEquals(\"mockinvokerlistener\",config.getListener());\n  Assertions.assertEquals(\"owner\",config.getOwner());\n  Assertions.assertEquals(1,config.getConnections().intValue());\n  Assertions.assertEquals(\"layer\",config.getLayer());\n  Assertions.assertEquals(applicationConfig,config.getApplication());\n  Assertions.assertEquals(moduleConfig,config.getModule());\n  Assertions.assertEquals(registryConfig,config.getRegistry());\n  Assertions.assertEquals(\"registryIds\",config.getRegistryIds());\n  Assertions.assertEquals(\"onconnet\",config.getOnconnect());\n  Assertions.assertEquals(\"ondisconnect\",config.getOndisconnect());\n  Assertions.assertEquals(metadataReportConfig,config.getMetadataReportConfig());\n  Assertions.assertEquals(configCenterConfig,config.getConfigCenter());\n  Assertions.assertEquals(2,config.getCallbacks().intValue());\n  Assertions.assertEquals(\"scope\",config.getScope());\n  Assertions.assertNotSame(config,config2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 338,
      "astHeight" : 26
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 285,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Assertions.assertEquals(\"onconnet\",config.getOnconnect());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 285,
    "startColumnNumber" : 44,
    "endLineNumber" : 285,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}