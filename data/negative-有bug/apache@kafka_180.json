{
  "id" : 180,
  "expression" : "entry",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/generator/src/main/java/org/apache/kafka/message/MetadataJsonConvertersGenerator.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entry",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 79,
      "startColumnNumber" : 74,
      "endLineNumber" : 79,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 79,
        "startColumnNumber" : 74,
        "endLineNumber" : 79,
        "endColumnNumber" : 90
      },
      "nodeContext" : "entry.getValue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 79,
        "startColumnNumber" : 74,
        "endLineNumber" : 79,
        "endColumnNumber" : 97
      },
      "nodeContext" : "entry.getValue().name()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 79,
        "startColumnNumber" : 41,
        "endLineNumber" : 79,
        "endColumnNumber" : 98
      },
      "nodeContext" : "MessageGenerator.capitalizeFirst(entry.getValue().name())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 79,
        "startColumnNumber" : 19,
        "endLineNumber" : 79,
        "endColumnNumber" : 98
      },
      "nodeContext" : "apiMessageClassName=MessageGenerator.capitalizeFirst(entry.getValue().name())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 79,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 99
      },
      "nodeContext" : "String apiMessageClassName=MessageGenerator.capitalizeFirst(entry.getValue().name());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 78,
        "startColumnNumber" : 68,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String apiMessageClassName=MessageGenerator.capitalizeFirst(entry.getValue().name());\n  buffer.printf(\"case %d:%n\",entry.getKey());\n  buffer.incrementIndent();\n  buffer.printf(\"return %sJsonConverter.write((%s) apiMessage, apiVersion);%n\",apiMessageClassName,apiMessageClassName);\n  buffer.decrementIndent();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<Short,MessageSpec> entry : apis.entrySet()) {\n  String apiMessageClassName=MessageGenerator.capitalizeFirst(entry.getValue().name());\n  buffer.printf(\"case %d:%n\",entry.getKey());\n  buffer.incrementIndent();\n  buffer.printf(\"return %sJsonConverter.write((%s) apiMessage, apiVersion);%n\",apiMessageClassName,apiMessageClassName);\n  buffer.decrementIndent();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1283,
        "startLineNumber" : 70,
        "startColumnNumber" : 37,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  headerGenerator.addImport(MessageGenerator.JSON_NODE_CLASS);\n  headerGenerator.addImport(MessageGenerator.API_MESSAGE_CLASS);\n  buffer.printf(\"public static JsonNode writeJson(ApiMessage apiMessage, short apiVersion) {%n\");\n  buffer.incrementIndent();\n  buffer.printf(\"switch (apiMessage.apiKey()) {%n\");\n  buffer.incrementIndent();\n  for (  Map.Entry<Short,MessageSpec> entry : apis.entrySet()) {\n    String apiMessageClassName=MessageGenerator.capitalizeFirst(entry.getValue().name());\n    buffer.printf(\"case %d:%n\",entry.getKey());\n    buffer.incrementIndent();\n    buffer.printf(\"return %sJsonConverter.write((%s) apiMessage, apiVersion);%n\",apiMessageClassName,apiMessageClassName);\n    buffer.decrementIndent();\n  }\n  buffer.printf(\"default:%n\");\n  buffer.incrementIndent();\n  headerGenerator.addImport(MessageGenerator.UNSUPPORTED_VERSION_EXCEPTION_CLASS);\n  buffer.printf(\"throw new UnsupportedVersionException(\\\"Unknown metadata id \\\"\" + \" + apiMessage.apiKey());%n\");\n  buffer.decrementIndent();\n  buffer.decrementIndent();\n  buffer.printf(\"}%n\");\n  buffer.decrementIndent();\n  buffer.printf(\"}%n\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void generateWriteJson(){\n  headerGenerator.addImport(MessageGenerator.JSON_NODE_CLASS);\n  headerGenerator.addImport(MessageGenerator.API_MESSAGE_CLASS);\n  buffer.printf(\"public static JsonNode writeJson(ApiMessage apiMessage, short apiVersion) {%n\");\n  buffer.incrementIndent();\n  buffer.printf(\"switch (apiMessage.apiKey()) {%n\");\n  buffer.incrementIndent();\n  for (  Map.Entry<Short,MessageSpec> entry : apis.entrySet()) {\n    String apiMessageClassName=MessageGenerator.capitalizeFirst(entry.getValue().name());\n    buffer.printf(\"case %d:%n\",entry.getKey());\n    buffer.incrementIndent();\n    buffer.printf(\"return %sJsonConverter.write((%s) apiMessage, apiVersion);%n\",apiMessageClassName,apiMessageClassName);\n    buffer.decrementIndent();\n  }\n  buffer.printf(\"default:%n\");\n  buffer.incrementIndent();\n  headerGenerator.addImport(MessageGenerator.UNSUPPORTED_VERSION_EXCEPTION_CLASS);\n  buffer.printf(\"throw new UnsupportedVersionException(\\\"Unknown metadata id \\\"\" + \" + apiMessage.apiKey());%n\");\n  buffer.decrementIndent();\n  buffer.decrementIndent();\n  buffer.printf(\"}%n\");\n  buffer.decrementIndent();\n  buffer.printf(\"}%n\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 79,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 99
      },
      "nodeContext" : "String apiMessageClassName=MessageGenerator.capitalizeFirst(entry.getValue().name());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Map.Entry<java.lang.Short,org.apache.kafka.message.MessageSpec>"
  }, {
    "nodeContext" : "entry",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 80,
      "startColumnNumber" : 40,
      "endLineNumber" : 80,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 80,
        "startColumnNumber" : 40,
        "endLineNumber" : 80,
        "endColumnNumber" : 54
      },
      "nodeContext" : "entry.getKey()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 55
      },
      "nodeContext" : "buffer.printf(\"case %d:%n\",entry.getKey())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 56
      },
      "nodeContext" : "buffer.printf(\"case %d:%n\",entry.getKey());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 78,
        "startColumnNumber" : 68,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String apiMessageClassName=MessageGenerator.capitalizeFirst(entry.getValue().name());\n  buffer.printf(\"case %d:%n\",entry.getKey());\n  buffer.incrementIndent();\n  buffer.printf(\"return %sJsonConverter.write((%s) apiMessage, apiVersion);%n\",apiMessageClassName,apiMessageClassName);\n  buffer.decrementIndent();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<Short,MessageSpec> entry : apis.entrySet()) {\n  String apiMessageClassName=MessageGenerator.capitalizeFirst(entry.getValue().name());\n  buffer.printf(\"case %d:%n\",entry.getKey());\n  buffer.incrementIndent();\n  buffer.printf(\"return %sJsonConverter.write((%s) apiMessage, apiVersion);%n\",apiMessageClassName,apiMessageClassName);\n  buffer.decrementIndent();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1283,
        "startLineNumber" : 70,
        "startColumnNumber" : 37,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  headerGenerator.addImport(MessageGenerator.JSON_NODE_CLASS);\n  headerGenerator.addImport(MessageGenerator.API_MESSAGE_CLASS);\n  buffer.printf(\"public static JsonNode writeJson(ApiMessage apiMessage, short apiVersion) {%n\");\n  buffer.incrementIndent();\n  buffer.printf(\"switch (apiMessage.apiKey()) {%n\");\n  buffer.incrementIndent();\n  for (  Map.Entry<Short,MessageSpec> entry : apis.entrySet()) {\n    String apiMessageClassName=MessageGenerator.capitalizeFirst(entry.getValue().name());\n    buffer.printf(\"case %d:%n\",entry.getKey());\n    buffer.incrementIndent();\n    buffer.printf(\"return %sJsonConverter.write((%s) apiMessage, apiVersion);%n\",apiMessageClassName,apiMessageClassName);\n    buffer.decrementIndent();\n  }\n  buffer.printf(\"default:%n\");\n  buffer.incrementIndent();\n  headerGenerator.addImport(MessageGenerator.UNSUPPORTED_VERSION_EXCEPTION_CLASS);\n  buffer.printf(\"throw new UnsupportedVersionException(\\\"Unknown metadata id \\\"\" + \" + apiMessage.apiKey());%n\");\n  buffer.decrementIndent();\n  buffer.decrementIndent();\n  buffer.printf(\"}%n\");\n  buffer.decrementIndent();\n  buffer.printf(\"}%n\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void generateWriteJson(){\n  headerGenerator.addImport(MessageGenerator.JSON_NODE_CLASS);\n  headerGenerator.addImport(MessageGenerator.API_MESSAGE_CLASS);\n  buffer.printf(\"public static JsonNode writeJson(ApiMessage apiMessage, short apiVersion) {%n\");\n  buffer.incrementIndent();\n  buffer.printf(\"switch (apiMessage.apiKey()) {%n\");\n  buffer.incrementIndent();\n  for (  Map.Entry<Short,MessageSpec> entry : apis.entrySet()) {\n    String apiMessageClassName=MessageGenerator.capitalizeFirst(entry.getValue().name());\n    buffer.printf(\"case %d:%n\",entry.getKey());\n    buffer.incrementIndent();\n    buffer.printf(\"return %sJsonConverter.write((%s) apiMessage, apiVersion);%n\",apiMessageClassName,apiMessageClassName);\n    buffer.decrementIndent();\n  }\n  buffer.printf(\"default:%n\");\n  buffer.incrementIndent();\n  headerGenerator.addImport(MessageGenerator.UNSUPPORTED_VERSION_EXCEPTION_CLASS);\n  buffer.printf(\"throw new UnsupportedVersionException(\\\"Unknown metadata id \\\"\" + \" + apiMessage.apiKey());%n\");\n  buffer.decrementIndent();\n  buffer.decrementIndent();\n  buffer.printf(\"}%n\");\n  buffer.decrementIndent();\n  buffer.printf(\"}%n\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 56
      },
      "nodeContext" : "buffer.printf(\"case %d:%n\",entry.getKey());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map.Entry<java.lang.Short,org.apache.kafka.message.MessageSpec>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 79,
    "startColumnNumber" : 74,
    "endLineNumber" : 79,
    "endColumnNumber" : 79
  }, {
    "charLength" : 5,
    "startLineNumber" : 80,
    "startColumnNumber" : 40,
    "endLineNumber" : 80,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}