{
  "id" : 171,
  "expression" : "Assignments.builder().putAll(identitiesAsSymbolReferences(node.getSource().getOutputVariables())).put(partitionCountVariable,castToRowExpression(new LongLiteral(Integer.toString(getHashPartitionCount(context.getSession())))))",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RewriteSpatialPartitioningAggregation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assignments.builder().putAll(identitiesAsSymbolReferences(node.getSource().getOutputVariables())).put(partitionCountVariable,castToRowExpression(new LongLiteral(Integer.toString(getHashPartitionCount(context.getSession())))))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 308,
      "startLineNumber" : 140,
      "startColumnNumber" : 32,
      "endLineNumber" : 142,
      "endColumnNumber" : 169
    },
    "astNodeNumber" : 28,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 140,
        "startColumnNumber" : 32,
        "endLineNumber" : 143,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assignments.builder().putAll(identitiesAsSymbolReferences(node.getSource().getOutputVariables())).put(partitionCountVariable,castToRowExpression(new LongLiteral(Integer.toString(getHashPartitionCount(context.getSession()))))).putAll(envelopeAssignments.build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 434,
        "startLineNumber" : 140,
        "startColumnNumber" : 32,
        "endLineNumber" : 144,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Assignments.builder().putAll(identitiesAsSymbolReferences(node.getSource().getOutputVariables())).put(partitionCountVariable,castToRowExpression(new LongLiteral(Integer.toString(getHashPartitionCount(context.getSession()))))).putAll(envelopeAssignments.build()).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 604,
        "startLineNumber" : 137,
        "startColumnNumber" : 24,
        "endLineNumber" : 144,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ProjectNode(context.getIdAllocator().getNextId(),node.getSource(),Assignments.builder().putAll(identitiesAsSymbolReferences(node.getSource().getOutputVariables())).put(partitionCountVariable,castToRowExpression(new LongLiteral(Integer.toString(getHashPartitionCount(context.getSession()))))).putAll(envelopeAssignments.build()).build())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1026,
        "startLineNumber" : 134,
        "startColumnNumber" : 16,
        "endLineNumber" : 150,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new AggregationNode(node.getSourceLocation(),node.getId(),new ProjectNode(context.getIdAllocator().getNextId(),node.getSource(),Assignments.builder().putAll(identitiesAsSymbolReferences(node.getSource().getOutputVariables())).put(partitionCountVariable,castToRowExpression(new LongLiteral(Integer.toString(getHashPartitionCount(context.getSession()))))).putAll(envelopeAssignments.build()).build()),aggregations.build(),node.getGroupingSets(),node.getPreGroupedVariables(),node.getStep(),node.getHashVariable(),node.getGroupIdVariable())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 73,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 133,
        "startColumnNumber" : 15,
        "endLineNumber" : 150,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Result.ofPlanNode(new AggregationNode(node.getSourceLocation(),node.getId(),new ProjectNode(context.getIdAllocator().getNextId(),node.getSource(),Assignments.builder().putAll(identitiesAsSymbolReferences(node.getSource().getOutputVariables())).put(partitionCountVariable,castToRowExpression(new LongLiteral(Integer.toString(getHashPartitionCount(context.getSession()))))).putAll(envelopeAssignments.build()).build()),aggregations.build(),node.getGroupingSets(),node.getPreGroupedVariables(),node.getStep(),node.getHashVariable(),node.getGroupIdVariable()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1070,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 150,
        "endColumnNumber" : 52
      },
      "nodeContext" : "return Result.ofPlanNode(new AggregationNode(node.getSourceLocation(),node.getId(),new ProjectNode(context.getIdAllocator().getNextId(),node.getSource(),Assignments.builder().putAll(identitiesAsSymbolReferences(node.getSource().getOutputVariables())).put(partitionCountVariable,castToRowExpression(new LongLiteral(Integer.toString(getHashPartitionCount(context.getSession()))))).putAll(envelopeAssignments.build()).build()),aggregations.build(),node.getGroupingSets(),node.getPreGroupedVariables(),node.getStep(),node.getHashVariable(),node.getGroupIdVariable()));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 77,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3620,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImmutableMap.Builder<VariableReferenceExpression,Aggregation> aggregations=ImmutableMap.builder();\n  VariableReferenceExpression partitionCountVariable=context.getVariableAllocator().newVariable(\"partition_count\",INTEGER);\n  ImmutableMap.Builder<VariableReferenceExpression,RowExpression> envelopeAssignments=ImmutableMap.builder();\n  for (  Map.Entry<VariableReferenceExpression,Aggregation> entry : node.getAggregations().entrySet()) {\n    Aggregation aggregation=entry.getValue();\n    QualifiedObjectName name=metadata.getFunctionAndTypeManager().getFunctionMetadata(aggregation.getFunctionHandle()).getName();\n    Type geometryType=metadata.getType(GEOMETRY_TYPE_SIGNATURE);\n    if (name.equals(NAME) && aggregation.getArguments().size() == 1) {\n      RowExpression geometry=getOnlyElement(aggregation.getArguments());\n      VariableReferenceExpression envelopeVariable=context.getVariableAllocator().newVariable(aggregation.getCall().getSourceLocation(),\"envelope\",geometryType);\n      if (isFunctionNameMatch(geometry,\"ST_Envelope\")) {\n        envelopeAssignments.put(envelopeVariable,geometry);\n      }\n else {\n        envelopeAssignments.put(envelopeVariable,castToRowExpression(new FunctionCall(QualifiedName.of(\"ST_Envelope\"),ImmutableList.of(castToExpression(geometry)))));\n      }\n      aggregations.put(entry.getKey(),new Aggregation(new CallExpression(envelopeVariable.getSourceLocation(),name.getObjectName(),metadata.getFunctionAndTypeManager().lookupFunction(NAME.getObjectName(),fromTypes(geometryType,INTEGER)),entry.getKey().getType(),ImmutableList.of(castToRowExpression(asSymbolReference(envelopeVariable)),castToRowExpression(asSymbolReference(partitionCountVariable)))),Optional.empty(),Optional.empty(),false,aggregation.getMask()));\n    }\n else {\n      aggregations.put(entry);\n    }\n  }\n  return Result.ofPlanNode(new AggregationNode(node.getSourceLocation(),node.getId(),new ProjectNode(context.getIdAllocator().getNextId(),node.getSource(),Assignments.builder().putAll(identitiesAsSymbolReferences(node.getSource().getOutputVariables())).put(partitionCountVariable,castToRowExpression(new LongLiteral(Integer.toString(getHashPartitionCount(context.getSession()))))).putAll(envelopeAssignments.build()).build()),aggregations.build(),node.getGroupingSets(),node.getPreGroupedVariables(),node.getStep(),node.getHashVariable(),node.getGroupIdVariable()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 309,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3716,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Result apply(AggregationNode node,Captures captures,Context context){\n  ImmutableMap.Builder<VariableReferenceExpression,Aggregation> aggregations=ImmutableMap.builder();\n  VariableReferenceExpression partitionCountVariable=context.getVariableAllocator().newVariable(\"partition_count\",INTEGER);\n  ImmutableMap.Builder<VariableReferenceExpression,RowExpression> envelopeAssignments=ImmutableMap.builder();\n  for (  Map.Entry<VariableReferenceExpression,Aggregation> entry : node.getAggregations().entrySet()) {\n    Aggregation aggregation=entry.getValue();\n    QualifiedObjectName name=metadata.getFunctionAndTypeManager().getFunctionMetadata(aggregation.getFunctionHandle()).getName();\n    Type geometryType=metadata.getType(GEOMETRY_TYPE_SIGNATURE);\n    if (name.equals(NAME) && aggregation.getArguments().size() == 1) {\n      RowExpression geometry=getOnlyElement(aggregation.getArguments());\n      VariableReferenceExpression envelopeVariable=context.getVariableAllocator().newVariable(aggregation.getCall().getSourceLocation(),\"envelope\",geometryType);\n      if (isFunctionNameMatch(geometry,\"ST_Envelope\")) {\n        envelopeAssignments.put(envelopeVariable,geometry);\n      }\n else {\n        envelopeAssignments.put(envelopeVariable,castToRowExpression(new FunctionCall(QualifiedName.of(\"ST_Envelope\"),ImmutableList.of(castToExpression(geometry)))));\n      }\n      aggregations.put(entry.getKey(),new Aggregation(new CallExpression(envelopeVariable.getSourceLocation(),name.getObjectName(),metadata.getFunctionAndTypeManager().lookupFunction(NAME.getObjectName(),fromTypes(geometryType,INTEGER)),entry.getKey().getType(),ImmutableList.of(castToRowExpression(asSymbolReference(envelopeVariable)),castToRowExpression(asSymbolReference(partitionCountVariable)))),Optional.empty(),Optional.empty(),false,aggregation.getMask()));\n    }\n else {\n      aggregations.put(entry);\n    }\n  }\n  return Result.ofPlanNode(new AggregationNode(node.getSourceLocation(),node.getId(),new ProjectNode(context.getIdAllocator().getNextId(),node.getSource(),Assignments.builder().putAll(identitiesAsSymbolReferences(node.getSource().getOutputVariables())).put(partitionCountVariable,castToRowExpression(new LongLiteral(Integer.toString(getHashPartitionCount(context.getSession()))))).putAll(envelopeAssignments.build()).build()),aggregations.build(),node.getGroupingSets(),node.getPreGroupedVariables(),node.getStep(),node.getHashVariable(),node.getGroupIdVariable()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 328,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 140,
        "startColumnNumber" : 32,
        "endLineNumber" : 143,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assignments.builder().putAll(identitiesAsSymbolReferences(node.getSource().getOutputVariables())).put(partitionCountVariable,castToRowExpression(new LongLiteral(Integer.toString(getHashPartitionCount(context.getSession()))))).putAll(envelopeAssignments.build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 8
    },
    "tokenLength" : 16,
    "type" : "com.facebook.presto.spi.plan.Assignments.Builder"
  } ],
  "positionList" : [ {
    "charLength" : 308,
    "startLineNumber" : 140,
    "startColumnNumber" : 32,
    "endLineNumber" : 142,
    "endColumnNumber" : 169
  } ],
  "layoutRelationDataList" : [ ]
}