{
  "id" : 244,
  "expression" : "new ConvertException(\"Can not convert {} to type {}\",value,ObjectUtil.defaultIfNull(TypeUtil.getClass(targetType),targetType))",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-json/src/main/java/cn/hutool/json/JSONConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ConvertException(\"Can not convert {} to type {}\",value,ObjectUtil.defaultIfNull(TypeUtil.getClass(targetType),targetType))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 129,
      "startLineNumber" : 89,
      "startColumnNumber" : 9,
      "endLineNumber" : 89,
      "endColumnNumber" : 138
    },
    "astNodeNumber" : 13,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 89,
        "startColumnNumber" : 3,
        "endLineNumber" : 89,
        "endColumnNumber" : 139
      },
      "nodeContext" : "throw new ConvertException(\"Can not convert {} to type {}\",value,ObjectUtil.defaultIfNull(TypeUtil.getClass(targetType),targetType));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 82,
        "startColumnNumber" : 51,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (StrUtil.isBlankIfStr(value)) {\n    return null;\n  }\n  throw new ConvertException(\"Can not convert {} to type {}\",value,ObjectUtil.defaultIfNull(TypeUtil.getClass(targetType),targetType));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (null == targetValue && false == ignoreError) {\n  if (StrUtil.isBlankIfStr(value)) {\n    return null;\n  }\n  throw new ConvertException(\"Can not convert {} to type {}\",value,ObjectUtil.defaultIfNull(TypeUtil.getClass(targetType),targetType));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 759,
        "startLineNumber" : 68,
        "startColumnNumber" : 112,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (JSONUtil.isNull(value)) {\n    return null;\n  }\n  if (value instanceof JSON) {\n    final JSONDeserializer<?> deserializer=GlobalSerializeMapping.getDeserializer(targetType);\n    if (null != deserializer) {\n      return (T)deserializer.deserialize((JSON)value);\n    }\n  }\n  final T targetValue=Convert.convertWithCheck(targetType,value,null,ignoreError);\n  if (null == targetValue && false == ignoreError) {\n    if (StrUtil.isBlankIfStr(value)) {\n      return null;\n    }\n    throw new ConvertException(\"Can not convert {} to type {}\",value,ObjectUtil.defaultIfNull(TypeUtil.getClass(targetType),targetType));\n  }\n  return targetValue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1132,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * JSON递归转换<br> 首先尝试JDK类型转换，如果失败尝试JSON转Bean\n * @param < T > 转换后的对象类型\n * @param targetType 目标类型\n * @param value 值\n * @param ignoreError 是否忽略转换错误\n * @return 目标类型的值\n * @throws ConvertException 转换失败\n */\n@SuppressWarnings(\"unchecked\") protected static <T>T jsonConvert(Type targetType,Object value,boolean ignoreError) throws ConvertException {\n  if (JSONUtil.isNull(value)) {\n    return null;\n  }\n  if (value instanceof JSON) {\n    final JSONDeserializer<?> deserializer=GlobalSerializeMapping.getDeserializer(targetType);\n    if (null != deserializer) {\n      return (T)deserializer.deserialize((JSON)value);\n    }\n  }\n  final T targetValue=Convert.convertWithCheck(targetType,value,null,ignoreError);\n  if (null == targetValue && false == ignoreError) {\n    if (StrUtil.isBlankIfStr(value)) {\n      return null;\n    }\n    throw new ConvertException(\"Can not convert {} to type {}\",value,ObjectUtil.defaultIfNull(TypeUtil.getClass(targetType),targetType));\n  }\n  return targetValue;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 89,
        "startColumnNumber" : 3,
        "endLineNumber" : 89,
        "endColumnNumber" : 139
      },
      "nodeContext" : "throw new ConvertException(\"Can not convert {} to type {}\",value,ObjectUtil.defaultIfNull(TypeUtil.getClass(targetType),targetType));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 13,
    "type" : "cn.hutool.core.convert.ConvertException"
  } ],
  "positionList" : [ {
    "charLength" : 129,
    "startLineNumber" : 89,
    "startColumnNumber" : 9,
    "endLineNumber" : 89,
    "endColumnNumber" : 138
  } ],
  "layoutRelationDataList" : [ ]
}