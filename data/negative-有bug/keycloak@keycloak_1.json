{
  "id" : 1,
  "expression" : "Enum.valueOf(KeystoreUtil.KeystoreFormat.class,clientKeystoreType.toUpperCase())",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/authentication/JWTClientCredentialsProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Enum.valueOf(KeystoreUtil.KeystoreFormat.class,clientKeystoreType.toUpperCase())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 81,
      "startLineNumber" : 85,
      "startColumnNumber" : 120,
      "endLineNumber" : 85,
      "endColumnNumber" : 201
    },
    "astNodeNumber" : 11,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 85,
        "startColumnNumber" : 59,
        "endLineNumber" : 85,
        "endColumnNumber" : 201
      },
      "nodeContext" : "clientKeystoreType == null ? KeystoreUtil.KeystoreFormat.JKS : Enum.valueOf(KeystoreUtil.KeystoreFormat.class,clientKeystoreType.toUpperCase())",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 85,
        "startColumnNumber" : 36,
        "endLineNumber" : 85,
        "endColumnNumber" : 201
      },
      "nodeContext" : "clientKeystoreFormat=clientKeystoreType == null ? KeystoreUtil.KeystoreFormat.JKS : Enum.valueOf(KeystoreUtil.KeystoreFormat.class,clientKeystoreType.toUpperCase())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 202
      },
      "nodeContext" : "KeystoreUtil.KeystoreFormat clientKeystoreFormat=clientKeystoreType == null ? KeystoreUtil.KeystoreFormat.JKS : Enum.valueOf(KeystoreUtil.KeystoreFormat.class,clientKeystoreType.toUpperCase());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1788,
        "startLineNumber" : 72,
        "startColumnNumber" : 67,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(config instanceof Map)) {\n    throw new RuntimeException(\"Configuration of jwt credentials is missing or incorrect for client '\" + deployment.getResourceName() + \"'. Check your adapter configuration\");\n  }\n  Map<String,Object> cfg=(Map<String,Object>)config;\n  String clientKeystoreFile=(String)cfg.get(\"client-keystore-file\");\n  if (clientKeystoreFile == null) {\n    throw new RuntimeException(\"Missing parameter client-keystore-file in configuration of jwt for client \" + deployment.getResourceName());\n  }\n  String clientKeystoreType=(String)cfg.get(\"client-keystore-type\");\n  KeystoreUtil.KeystoreFormat clientKeystoreFormat=clientKeystoreType == null ? KeystoreUtil.KeystoreFormat.JKS : Enum.valueOf(KeystoreUtil.KeystoreFormat.class,clientKeystoreType.toUpperCase());\n  String clientKeystorePassword=(String)cfg.get(\"client-keystore-password\");\n  if (clientKeystorePassword == null) {\n    throw new RuntimeException(\"Missing parameter client-keystore-password in configuration of jwt for client \" + deployment.getResourceName());\n  }\n  String clientKeyPassword=(String)cfg.get(\"client-key-password\");\n  if (clientKeyPassword == null) {\n    clientKeyPassword=clientKeystorePassword;\n  }\n  String clientKeyAlias=(String)cfg.get(\"client-key-alias\");\n  if (clientKeyAlias == null) {\n    clientKeyAlias=deployment.getResourceName();\n  }\n  KeyPair keyPair=KeystoreUtil.loadKeyPairFromKeystore(clientKeystoreFile,clientKeystorePassword,clientKeyPassword,clientKeyAlias,clientKeystoreFormat);\n  setupKeyPair(keyPair);\n  this.tokenTimeout=asInt(cfg,\"token-timeout\",10);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1865,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void init(KeycloakDeployment deployment,Object config){\n  if (!(config instanceof Map)) {\n    throw new RuntimeException(\"Configuration of jwt credentials is missing or incorrect for client '\" + deployment.getResourceName() + \"'. Check your adapter configuration\");\n  }\n  Map<String,Object> cfg=(Map<String,Object>)config;\n  String clientKeystoreFile=(String)cfg.get(\"client-keystore-file\");\n  if (clientKeystoreFile == null) {\n    throw new RuntimeException(\"Missing parameter client-keystore-file in configuration of jwt for client \" + deployment.getResourceName());\n  }\n  String clientKeystoreType=(String)cfg.get(\"client-keystore-type\");\n  KeystoreUtil.KeystoreFormat clientKeystoreFormat=clientKeystoreType == null ? KeystoreUtil.KeystoreFormat.JKS : Enum.valueOf(KeystoreUtil.KeystoreFormat.class,clientKeystoreType.toUpperCase());\n  String clientKeystorePassword=(String)cfg.get(\"client-keystore-password\");\n  if (clientKeystorePassword == null) {\n    throw new RuntimeException(\"Missing parameter client-keystore-password in configuration of jwt for client \" + deployment.getResourceName());\n  }\n  String clientKeyPassword=(String)cfg.get(\"client-key-password\");\n  if (clientKeyPassword == null) {\n    clientKeyPassword=clientKeystorePassword;\n  }\n  String clientKeyAlias=(String)cfg.get(\"client-key-alias\");\n  if (clientKeyAlias == null) {\n    clientKeyAlias=deployment.getResourceName();\n  }\n  KeyPair keyPair=KeystoreUtil.loadKeyPairFromKeystore(clientKeystoreFile,clientKeystorePassword,clientKeyPassword,clientKeyAlias,clientKeystoreFormat);\n  setupKeyPair(keyPair);\n  this.tokenTimeout=asInt(cfg,\"token-timeout\",10);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 202
      },
      "nodeContext" : "KeystoreUtil.KeystoreFormat clientKeystoreFormat=clientKeystoreType == null ? KeystoreUtil.KeystoreFormat.JKS : Enum.valueOf(KeystoreUtil.KeystoreFormat.class,clientKeystoreType.toUpperCase());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    },
    "tokenLength" : 6,
    "type" : "org.keycloak.common.util.KeystoreUtil.KeystoreFormat"
  } ],
  "positionList" : [ {
    "charLength" : 81,
    "startLineNumber" : 85,
    "startColumnNumber" : 120,
    "endLineNumber" : 85,
    "endColumnNumber" : 201
  } ],
  "layoutRelationDataList" : [ ]
}