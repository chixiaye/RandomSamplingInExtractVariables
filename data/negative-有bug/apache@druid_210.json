{
  "id" : 210,
  "expression" : "offsetChunkFactor",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/segment/data/V3CompressedVSizeColumnarMultiIntsSupplier.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "offsetChunkFactor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 123,
      "startColumnNumber" : 8,
      "endLineNumber" : 123,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 121,
        "startColumnNumber" : 52,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "CompressedColumnarIntsSupplier.fromList(offsetList,offsetChunkFactor,byteOrder,compression,closer)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 121,
        "startColumnNumber" : 35,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "headerSupplier=CompressedColumnarIntsSupplier.fromList(offsetList,offsetChunkFactor,byteOrder,compression,closer)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 121,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 6
      },
      "nodeContext" : "CompressedColumnarIntsSupplier headerSupplier=CompressedColumnarIntsSupplier.fromList(offsetList,offsetChunkFactor,byteOrder,compression,closer);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Iterator<IndexedInts> objects=objectsIterable.iterator();\n  IntArrayList offsetList=new IntArrayList();\n  IntArrayList values=new IntArrayList();\n  int offset=0;\n  while (objects.hasNext()) {\n    IndexedInts next=objects.next();\n    offsetList.add(offset);\n    for (int i=0, size=next.size(); i < size; i++) {\n      values.add(next.get(i));\n    }\n    offset+=next.size();\n  }\n  offsetList.add(offset);\n  CompressedColumnarIntsSupplier headerSupplier=CompressedColumnarIntsSupplier.fromList(offsetList,offsetChunkFactor,byteOrder,compression,closer);\n  CompressedVSizeColumnarIntsSupplier valuesSupplier=CompressedVSizeColumnarIntsSupplier.fromList(values,maxValue,CompressedVSizeColumnarIntsSupplier.maxIntsInBufferForValue(maxValue),byteOrder,compression,closer);\n  return new V3CompressedVSizeColumnarMultiIntsSupplier(headerSupplier,valuesSupplier);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1337,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@VisibleForTesting public static V3CompressedVSizeColumnarMultiIntsSupplier fromIterable(final Iterable<IndexedInts> objectsIterable,final int offsetChunkFactor,final int maxValue,final ByteOrder byteOrder,final CompressionStrategy compression,final Closer closer){\n  Iterator<IndexedInts> objects=objectsIterable.iterator();\n  IntArrayList offsetList=new IntArrayList();\n  IntArrayList values=new IntArrayList();\n  int offset=0;\n  while (objects.hasNext()) {\n    IndexedInts next=objects.next();\n    offsetList.add(offset);\n    for (int i=0, size=next.size(); i < size; i++) {\n      values.add(next.get(i));\n    }\n    offset+=next.size();\n  }\n  offsetList.add(offset);\n  CompressedColumnarIntsSupplier headerSupplier=CompressedColumnarIntsSupplier.fromList(offsetList,offsetChunkFactor,byteOrder,compression,closer);\n  CompressedVSizeColumnarIntsSupplier valuesSupplier=CompressedVSizeColumnarIntsSupplier.fromList(values,maxValue,CompressedVSizeColumnarIntsSupplier.maxIntsInBufferForValue(maxValue),byteOrder,compression,closer);\n  return new V3CompressedVSizeColumnarMultiIntsSupplier(headerSupplier,valuesSupplier);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 121,
        "startColumnNumber" : 52,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "CompressedColumnarIntsSupplier.fromList(offsetList,offsetChunkFactor,byteOrder,compression,closer)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 123,
    "startColumnNumber" : 8,
    "endLineNumber" : 123,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}