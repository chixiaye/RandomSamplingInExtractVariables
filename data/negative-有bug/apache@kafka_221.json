{
  "id" : 221,
  "expression" : "context",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/processor/StateStore.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "context",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 99,
      "startColumnNumber" : 50,
      "endLineNumber" : 99,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 99,
        "startColumnNumber" : 13,
        "endLineNumber" : 99,
        "endColumnNumber" : 58
      },
      "nodeContext" : "StoreToProcessorContextAdapter.adapt(context)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 65
      },
      "nodeContext" : "init(StoreToProcessorContextAdapter.adapt(context),root)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 66
      },
      "nodeContext" : "init(StoreToProcessorContextAdapter.adapt(context),root);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 98,
        "startColumnNumber" : 78,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  init(StoreToProcessorContextAdapter.adapt(context),root);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1203,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Initializes this state store. <p> The implementation of this function must register the root store in the context via the {@link StateStoreContext#register(StateStore,StateRestoreCallback,CommitCallback)} function, where thefirst  {@link StateStore} parameter should always be the passed-in {@code root} object, andthe second parameter should be an object of user's implementation of the  {@link StateRestoreCallback} interface used for restoring the state store from the changelog.<p> Note that if the state store engine itself supports bulk writes, users can implement another interface  {@link BatchingStateRestoreCallback} which extends {@link StateRestoreCallback} tolet users implement bulk-load restoration logic instead of restoring one record at a time.\n * @throws IllegalStateException If store gets registered after initialized is already finished\n * @throws StreamsException if the store's change log does not contain the partition\n */\ndefault void init(final StateStoreContext context,final StateStore root){\n  init(StoreToProcessorContextAdapter.adapt(context),root);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 24,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 66
      },
      "nodeContext" : "init(StoreToProcessorContextAdapter.adapt(context),root);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.processor.StateStoreContext"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 99,
    "startColumnNumber" : 50,
    "endLineNumber" : 99,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}