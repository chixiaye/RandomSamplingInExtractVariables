{
  "id" : 177,
  "expression" : "firstOliphaunt",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/object-pool/src/test/java/com/iluwatar/object/pool/OliphauntPoolTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "firstOliphaunt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 85,
      "startColumnNumber" : 20,
      "endLineNumber" : 85,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 85,
        "startColumnNumber" : 6,
        "endLineNumber" : 85,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertNotSame(firstOliphaunt,secondOliphaunt)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 85,
        "startColumnNumber" : 6,
        "endLineNumber" : 85,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertNotSame(firstOliphaunt,secondOliphaunt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1891,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1897,
        "startLineNumber" : 75,
        "startColumnNumber" : 34,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "() -> {\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 195,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 85,
        "startColumnNumber" : 6,
        "endLineNumber" : 85,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertNotSame(firstOliphaunt,secondOliphaunt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "firstOliphaunt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 86,
      "startColumnNumber" : 19,
      "endLineNumber" : 86,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 86,
        "startColumnNumber" : 19,
        "endLineNumber" : 86,
        "endColumnNumber" : 41
      },
      "nodeContext" : "firstOliphaunt.getId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 86,
        "startColumnNumber" : 19,
        "endLineNumber" : 86,
        "endColumnNumber" : 45
      },
      "nodeContext" : "firstOliphaunt.getId() + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1891,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1897,
        "startLineNumber" : 75,
        "startColumnNumber" : 34,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "() -> {\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 195,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "firstOliphaunt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 97,
      "startColumnNumber" : 19,
      "endLineNumber" : 97,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 34
      },
      "nodeContext" : "pool.checkIn(firstOliphaunt)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 35
      },
      "nodeContext" : "pool.checkIn(firstOliphaunt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1891,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1897,
        "startLineNumber" : 75,
        "startColumnNumber" : 34,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "() -> {\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 195,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 35
      },
      "nodeContext" : "pool.checkIn(firstOliphaunt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "firstOliphaunt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 102,
      "startColumnNumber" : 17,
      "endLineNumber" : 102,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 102,
        "startColumnNumber" : 6,
        "endLineNumber" : 102,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertSame(firstOliphaunt,oliphaunt4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 102,
        "startColumnNumber" : 6,
        "endLineNumber" : 102,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertSame(firstOliphaunt,oliphaunt4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1891,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1897,
        "startLineNumber" : 75,
        "startColumnNumber" : 34,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "() -> {\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 195,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 102,
        "startColumnNumber" : 6,
        "endLineNumber" : 102,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertSame(firstOliphaunt,oliphaunt4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "firstOliphaunt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 105,
      "startColumnNumber" : 19,
      "endLineNumber" : 105,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 105,
        "startColumnNumber" : 6,
        "endLineNumber" : 105,
        "endColumnNumber" : 34
      },
      "nodeContext" : "pool.checkIn(firstOliphaunt)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 105,
        "startColumnNumber" : 6,
        "endLineNumber" : 105,
        "endColumnNumber" : 35
      },
      "nodeContext" : "pool.checkIn(firstOliphaunt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1891,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1897,
        "startLineNumber" : 75,
        "startColumnNumber" : 34,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "() -> {\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 195,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 105,
        "startColumnNumber" : 6,
        "endLineNumber" : 105,
        "endColumnNumber" : 35
      },
      "nodeContext" : "pool.checkIn(firstOliphaunt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "firstOliphaunt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 115,
      "startColumnNumber" : 37,
      "endLineNumber" : 115,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 115,
        "startColumnNumber" : 17,
        "endLineNumber" : 115,
        "endColumnNumber" : 52
      },
      "nodeContext" : "oliphaunts.contains(firstOliphaunt)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 115,
        "startColumnNumber" : 6,
        "endLineNumber" : 115,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertTrue(oliphaunts.contains(firstOliphaunt))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 115,
        "startColumnNumber" : 6,
        "endLineNumber" : 115,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertTrue(oliphaunts.contains(firstOliphaunt));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1891,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1897,
        "startLineNumber" : 75,
        "startColumnNumber" : 34,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "() -> {\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 195,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 115,
        "startColumnNumber" : 6,
        "endLineNumber" : 115,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertTrue(oliphaunts.contains(firstOliphaunt));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 85,
    "startColumnNumber" : 20,
    "endLineNumber" : 85,
    "endColumnNumber" : 34
  }, {
    "charLength" : 14,
    "startLineNumber" : 86,
    "startColumnNumber" : 19,
    "endLineNumber" : 86,
    "endColumnNumber" : 33
  }, {
    "charLength" : 14,
    "startLineNumber" : 97,
    "startColumnNumber" : 19,
    "endLineNumber" : 97,
    "endColumnNumber" : 33
  }, {
    "charLength" : 14,
    "startLineNumber" : 102,
    "startColumnNumber" : 17,
    "endLineNumber" : 102,
    "endColumnNumber" : 31
  }, {
    "charLength" : 14,
    "startLineNumber" : 105,
    "startColumnNumber" : 19,
    "endLineNumber" : 105,
    "endColumnNumber" : 33
  }, {
    "charLength" : 14,
    "startLineNumber" : 115,
    "startColumnNumber" : 37,
    "endLineNumber" : 115,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}