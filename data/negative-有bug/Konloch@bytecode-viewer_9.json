{
  "id" : 9,
  "expression" : "filter",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/decompilers/bytecode/InstructionPattern.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "filter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 111,
      "startColumnNumber" : 12,
      "endLineNumber" : 111,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 30
      },
      "nodeContext" : "filter.accept(ain)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (filter.accept(ain)) {\n  lastMatch[pointer]=ain;\n  if (pointer >= (filters.length - 1)) {\n    return true;\n  }\n  pointer++;\n}\n else {\n  reset();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 106,
        "startColumnNumber" : 48,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (pointer >= filters.length)   reset();\n  InstructionFilter filter=filters[pointer];\n  if (filter.accept(ain)) {\n    lastMatch[pointer]=ain;\n    if (pointer >= (filters.length - 1)) {\n      return true;\n    }\n    pointer++;\n  }\n else {\n    reset();\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Steps through the instruction list checking if the current instruction ended a successful pattern-match sequence.\n * @param ain {@link AbstractInsnNode} to check.\n * @return True if this instruction successfully completed the pattern.\n */\npublic boolean accept(AbstractInsnNode ain){\n  if (pointer >= filters.length)   reset();\n  InstructionFilter filter=filters[pointer];\n  if (filter.accept(ain)) {\n    lastMatch[pointer]=ain;\n    if (pointer >= (filters.length - 1)) {\n      return true;\n    }\n    pointer++;\n  }\n else {\n    reset();\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 30
      },
      "nodeContext" : "filter.accept(ain)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "the.bytecode.club.bytecodeviewer.decompilers.bytecode.InstructionFilter"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 111,
    "startColumnNumber" : 12,
    "endLineNumber" : 111,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}