{
  "id" : 367,
  "expression" : ".11",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-tpcds/src/test/java/com/facebook/presto/tpcds/TestTpcdsRecordSet.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : ".11",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 124,
      "startColumnNumber" : 76,
      "endLineNumber" : 124,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 124,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertEquals(cursor.getDouble(CC_TAX_PERCENTAGE.ordinal()),.11)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 124,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(cursor.getDouble(CC_TAX_PERCENTAGE.ordinal()),.11);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1165,
        "startLineNumber" : 100,
        "startColumnNumber" : 46,
        "endLineNumber" : 125,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  assertFalse(cursor.isNull(CC_REC_START_DATE.ordinal()));\n  assertEquals(cursor.getLong(CC_REC_START_DATE.ordinal()),10227);\n  assertTrue(cursor.isNull(CC_REC_END_DATE.ordinal()));\n  assertFalse(cursor.isNull(CC_CALL_CENTER_SK.ordinal()));\n  assertEquals(cursor.getLong(CC_CALL_CENTER_SK.ordinal()),1);\n  assertFalse(cursor.isNull(CC_SQ_FT.ordinal()));\n  assertEquals(cursor.getLong(CC_SQ_FT.ordinal()),1138);\n  assertFalse(cursor.isNull(CC_MANAGER.ordinal()));\n  assertEquals(cursor.getSlice(CC_MANAGER.ordinal()).toStringUtf8(),\"Bob Belcher\");\n  assertFalse(cursor.isNull(CC_STATE.ordinal()));\n  assertEquals(cursor.getSlice(CC_STATE.ordinal()).toStringUtf8(),\"TN\");\n  assertFalse(cursor.isNull(CC_TAX_PERCENTAGE.ordinal()));\n  assertEquals(cursor.getDouble(CC_TAX_PERCENTAGE.ordinal()),.11);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1199,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (cursor.advanceNextPosition()) {\n  assertFalse(cursor.isNull(CC_REC_START_DATE.ordinal()));\n  assertEquals(cursor.getLong(CC_REC_START_DATE.ordinal()),10227);\n  assertTrue(cursor.isNull(CC_REC_END_DATE.ordinal()));\n  assertFalse(cursor.isNull(CC_CALL_CENTER_SK.ordinal()));\n  assertEquals(cursor.getLong(CC_CALL_CENTER_SK.ordinal()),1);\n  assertFalse(cursor.isNull(CC_SQ_FT.ordinal()));\n  assertEquals(cursor.getLong(CC_SQ_FT.ordinal()),1138);\n  assertFalse(cursor.isNull(CC_MANAGER.ordinal()));\n  assertEquals(cursor.getSlice(CC_MANAGER.ordinal()).toStringUtf8(),\"Bob Belcher\");\n  assertFalse(cursor.isNull(CC_STATE.ordinal()));\n  assertEquals(cursor.getSlice(CC_STATE.ordinal()).toStringUtf8(),\"TN\");\n  assertFalse(cursor.isNull(CC_TAX_PERCENTAGE.ordinal()));\n  assertEquals(cursor.getDouble(CC_TAX_PERCENTAGE.ordinal()),.11);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 132,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1223,
        "startLineNumber" : 99,
        "startColumnNumber" : 55,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (cursor.advanceNextPosition()) {\n    assertFalse(cursor.isNull(CC_REC_START_DATE.ordinal()));\n    assertEquals(cursor.getLong(CC_REC_START_DATE.ordinal()),10227);\n    assertTrue(cursor.isNull(CC_REC_END_DATE.ordinal()));\n    assertFalse(cursor.isNull(CC_CALL_CENTER_SK.ordinal()));\n    assertEquals(cursor.getLong(CC_CALL_CENTER_SK.ordinal()),1);\n    assertFalse(cursor.isNull(CC_SQ_FT.ordinal()));\n    assertEquals(cursor.getLong(CC_SQ_FT.ordinal()),1138);\n    assertFalse(cursor.isNull(CC_MANAGER.ordinal()));\n    assertEquals(cursor.getSlice(CC_MANAGER.ordinal()).toStringUtf8(),\"Bob Belcher\");\n    assertFalse(cursor.isNull(CC_STATE.ordinal()));\n    assertEquals(cursor.getSlice(CC_STATE.ordinal()).toStringUtf8(),\"TN\");\n    assertFalse(cursor.isNull(CC_TAX_PERCENTAGE.ordinal()));\n    assertEquals(cursor.getDouble(CC_TAX_PERCENTAGE.ordinal()),.11);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1270,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (RecordCursor cursor=recordSet.cursor()){\n  if (cursor.advanceNextPosition()) {\n    assertFalse(cursor.isNull(CC_REC_START_DATE.ordinal()));\n    assertEquals(cursor.getLong(CC_REC_START_DATE.ordinal()),10227);\n    assertTrue(cursor.isNull(CC_REC_END_DATE.ordinal()));\n    assertFalse(cursor.isNull(CC_CALL_CENTER_SK.ordinal()));\n    assertEquals(cursor.getLong(CC_CALL_CENTER_SK.ordinal()),1);\n    assertFalse(cursor.isNull(CC_SQ_FT.ordinal()));\n    assertEquals(cursor.getLong(CC_SQ_FT.ordinal()),1138);\n    assertFalse(cursor.isNull(CC_MANAGER.ordinal()));\n    assertEquals(cursor.getSlice(CC_MANAGER.ordinal()).toStringUtf8(),\"Bob Belcher\");\n    assertFalse(cursor.isNull(CC_STATE.ordinal()));\n    assertEquals(cursor.getSlice(CC_STATE.ordinal()).toStringUtf8(),\"TN\");\n    assertFalse(cursor.isNull(CC_TAX_PERCENTAGE.ordinal()));\n    assertEquals(cursor.getDouble(CC_TAX_PERCENTAGE.ordinal()),.11);\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 142,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Table table=getTable(CALL_CENTER.getName());\n  Results result=constructResults(table,session);\n  RecordSet recordSet=new TpcdsRecordSet(result,ImmutableList.copyOf(table.getColumns()));\n  try (RecordCursor cursor=recordSet.cursor()){\n    if (cursor.advanceNextPosition()) {\n      assertFalse(cursor.isNull(CC_REC_START_DATE.ordinal()));\n      assertEquals(cursor.getLong(CC_REC_START_DATE.ordinal()),10227);\n      assertTrue(cursor.isNull(CC_REC_END_DATE.ordinal()));\n      assertFalse(cursor.isNull(CC_CALL_CENTER_SK.ordinal()));\n      assertEquals(cursor.getLong(CC_CALL_CENTER_SK.ordinal()),1);\n      assertFalse(cursor.isNull(CC_SQ_FT.ordinal()));\n      assertEquals(cursor.getLong(CC_SQ_FT.ordinal()),1138);\n      assertFalse(cursor.isNull(CC_MANAGER.ordinal()));\n      assertEquals(cursor.getSlice(CC_MANAGER.ordinal()).toStringUtf8(),\"Bob Belcher\");\n      assertFalse(cursor.isNull(CC_STATE.ordinal()));\n      assertEquals(cursor.getSlice(CC_STATE.ordinal()).toStringUtf8(),\"TN\");\n      assertFalse(cursor.isNull(CC_TAX_PERCENTAGE.ordinal()));\n      assertEquals(cursor.getDouble(CC_TAX_PERCENTAGE.ordinal()),.11);\n    }\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1540,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCursor(){\n  Table table=getTable(CALL_CENTER.getName());\n  Results result=constructResults(table,session);\n  RecordSet recordSet=new TpcdsRecordSet(result,ImmutableList.copyOf(table.getColumns()));\n  try (RecordCursor cursor=recordSet.cursor()){\n    if (cursor.advanceNextPosition()) {\n      assertFalse(cursor.isNull(CC_REC_START_DATE.ordinal()));\n      assertEquals(cursor.getLong(CC_REC_START_DATE.ordinal()),10227);\n      assertTrue(cursor.isNull(CC_REC_END_DATE.ordinal()));\n      assertFalse(cursor.isNull(CC_CALL_CENTER_SK.ordinal()));\n      assertEquals(cursor.getLong(CC_CALL_CENTER_SK.ordinal()),1);\n      assertFalse(cursor.isNull(CC_SQ_FT.ordinal()));\n      assertEquals(cursor.getLong(CC_SQ_FT.ordinal()),1138);\n      assertFalse(cursor.isNull(CC_MANAGER.ordinal()));\n      assertEquals(cursor.getSlice(CC_MANAGER.ordinal()).toStringUtf8(),\"Bob Belcher\");\n      assertFalse(cursor.isNull(CC_STATE.ordinal()));\n      assertEquals(cursor.getSlice(CC_STATE.ordinal()).toStringUtf8(),\"TN\");\n      assertFalse(cursor.isNull(CC_TAX_PERCENTAGE.ordinal()));\n      assertEquals(cursor.getDouble(CC_TAX_PERCENTAGE.ordinal()),.11);\n    }\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 124,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(cursor.getDouble(CC_TAX_PERCENTAGE.ordinal()),.11);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 124,
    "startColumnNumber" : 76,
    "endLineNumber" : 124,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}