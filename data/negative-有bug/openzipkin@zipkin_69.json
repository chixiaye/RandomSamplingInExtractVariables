{
  "id" : 69,
  "expression" : "(ActiveMQConnection)connectionFactory.createQueueConnection()",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-collector/activemq/src/main/java/zipkin2/collector/activemq/LazyInit.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(ActiveMQConnection)connectionFactory.createQueueConnection()",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 62,
      "startLineNumber" : 64,
      "startColumnNumber" : 19,
      "endLineNumber" : 64,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 64,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 81
      },
      "nodeContext" : "connection=(ActiveMQConnection)connectionFactory.createQueueConnection()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 64,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 82
      },
      "nodeContext" : "connection=(ActiveMQConnection)connectionFactory.createQueueConnection();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  connection=(ActiveMQConnection)connectionFactory.createQueueConnection();\n  connection.start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  connection=(ActiveMQConnection)connectionFactory.createQueueConnection();\n  connection.start();\n}\n catch (JMSException e) {\n  throw uncheckedException(\"Unable to establish connection to ActiveMQ broker: \",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 61,
        "startColumnNumber" : 32,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final ActiveMQConnection connection;\n  try {\n    connection=(ActiveMQConnection)connectionFactory.createQueueConnection();\n    connection.start();\n  }\n catch (  JMSException e) {\n    throw uncheckedException(\"Unable to establish connection to ActiveMQ broker: \",e);\n  }\n  try {\n    ActiveMQSpanConsumer result=new ActiveMQSpanConsumer(collector,metrics,connection);\n    for (int i=0; i < concurrency; i++) {\n      result.registerInNewSession(connection,queue);\n    }\n    return result;\n  }\n catch (  JMSException e) {\n    try {\n      connection.close();\n    }\n catch (    JMSException ignored) {\n    }\n    throw uncheckedException(\"Unable to create queueReceiver(\" + queue + \"): \",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 800,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "ActiveMQSpanConsumer doInit(){\n  final ActiveMQConnection connection;\n  try {\n    connection=(ActiveMQConnection)connectionFactory.createQueueConnection();\n    connection.start();\n  }\n catch (  JMSException e) {\n    throw uncheckedException(\"Unable to establish connection to ActiveMQ broker: \",e);\n  }\n  try {\n    ActiveMQSpanConsumer result=new ActiveMQSpanConsumer(collector,metrics,connection);\n    for (int i=0; i < concurrency; i++) {\n      result.registerInNewSession(connection,queue);\n    }\n    return result;\n  }\n catch (  JMSException e) {\n    try {\n      connection.close();\n    }\n catch (    JMSException ignored) {\n    }\n    throw uncheckedException(\"Unable to create queueReceiver(\" + queue + \"): \",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 64,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 82
      },
      "nodeContext" : "connection=(ActiveMQConnection)connectionFactory.createQueueConnection();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "zipkin2.collector.activemq.ActiveMQConnection"
  } ],
  "positionList" : [ {
    "charLength" : 62,
    "startLineNumber" : 64,
    "startColumnNumber" : 19,
    "endLineNumber" : 64,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}