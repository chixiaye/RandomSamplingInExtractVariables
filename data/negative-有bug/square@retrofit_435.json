{
  "id" : 435,
  "expression" : "parseCharset(\"text/plain;charset=utf-8;other=thing\")",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit/src/test/java/retrofit/mime/MimeUtilTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parseCharset(\"text/plain;charset=utf-8;other=thing\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 35,
      "startColumnNumber" : 15,
      "endLineNumber" : 35,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertThat(parseCharset(\"text/plain;charset=utf-8;other=thing\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 99
      },
      "nodeContext" : "assertThat(parseCharset(\"text/plain;charset=utf-8;other=thing\")).isEqualToIgnoringCase(\"UTF-8\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertThat(parseCharset(\"text/plain;charset=utf-8;other=thing\")).isEqualToIgnoringCase(\"UTF-8\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1036,
        "startLineNumber" : 25,
        "startColumnNumber" : 40,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(parseCharset(\"text/plain;charset=utf-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; charset=utf-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain;  charset=utf-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; \\tcharset=utf-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; \\r\\n\\tcharset=utf-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; CHARSET=utf-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; charset=UTF-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; charset=\\\"\\\\u\\\\tf-\\\\8\\\"\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; charset=\\\"utf-8\\\"\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain;charset=utf-8;other=thing\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; notthecharset=utf-16;\")).isEqualToIgnoringCase(\"UTF-8\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1109,
        "startLineNumber" : 24,
        "startColumnNumber" : 2,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings(\"deprecation\") @Test public void oldCharsetParsing(){\n  assertThat(parseCharset(\"text/plain;charset=utf-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; charset=utf-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain;  charset=utf-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; \\tcharset=utf-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; \\r\\n\\tcharset=utf-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; CHARSET=utf-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; charset=UTF-8\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; charset=\\\"\\\\u\\\\tf-\\\\8\\\"\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; charset=\\\"utf-8\\\"\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain;charset=utf-8;other=thing\")).isEqualToIgnoringCase(\"UTF-8\");\n  assertThat(parseCharset(\"text/plain; notthecharset=utf-16;\")).isEqualToIgnoringCase(\"UTF-8\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertThat(parseCharset(\"text/plain;charset=utf-8;other=thing\")).isEqualToIgnoringCase(\"UTF-8\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 35,
    "startColumnNumber" : 15,
    "endLineNumber" : 35,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}