{
  "id" : 25,
  "expression" : "0",
  "projectName" : "google@guice",
  "commitID" : "ed8825fb8c7cdae7f8e24a8d224344e19f562513",
  "filePath" : "/src/com/google/inject/util/Strings.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 47,
      "startColumnNumber" : 22,
      "endLineNumber" : 47,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 23
      },
      "nodeContext" : "s.length() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 15
      },
      "nodeContext" : "if (s.length() == 0) return s;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 46,
        "startColumnNumber" : 44,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (s.length() == 0)   return s;\n  char first=s.charAt(0);\n  char capitalized=Character.toUpperCase(first);\n  return (first == capitalized) ? s : capitalized + s.substring(1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns a string that is equivalent to the specified string with its first character converted to uppercase as by  {@link String#toUpperCase}. The returned string will have the same value as the specified string if its first character is non-alphabetic, if its first character is already uppercase, or if the specified string is of length 0. <p>For example: <pre> capitalize(\"foo bar\").equals(\"Foo bar\"); capitalize(\"2b or not 2b\").equals(\"2b or not 2b\") capitalize(\"Foo bar\").equals(\"Foo bar\"); capitalize(\"\").equals(\"\"); </pre>\n * @param s the string whose first character is to be uppercased\n * @return a string equivalent to <tt>s</tt> with its first characterconverted to uppercase\n * @throws NullPointerException if <tt>s</tt> is null\n */\npublic static String capitalize(String s){\n  if (s.length() == 0)   return s;\n  char first=s.charAt(0);\n  char capitalized=Character.toUpperCase(first);\n  return (first == capitalized) ? s : capitalized + s.substring(1);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 23
      },
      "nodeContext" : "s.length() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 49,
      "startColumnNumber" : 26,
      "endLineNumber" : 49,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 49,
        "startColumnNumber" : 17,
        "endLineNumber" : 49,
        "endColumnNumber" : 28
      },
      "nodeContext" : "s.charAt(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 49,
        "startColumnNumber" : 9,
        "endLineNumber" : 49,
        "endColumnNumber" : 28
      },
      "nodeContext" : "first=s.charAt(0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 29
      },
      "nodeContext" : "char first=s.charAt(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 46,
        "startColumnNumber" : 44,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (s.length() == 0)   return s;\n  char first=s.charAt(0);\n  char capitalized=Character.toUpperCase(first);\n  return (first == capitalized) ? s : capitalized + s.substring(1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns a string that is equivalent to the specified string with its first character converted to uppercase as by  {@link String#toUpperCase}. The returned string will have the same value as the specified string if its first character is non-alphabetic, if its first character is already uppercase, or if the specified string is of length 0. <p>For example: <pre> capitalize(\"foo bar\").equals(\"Foo bar\"); capitalize(\"2b or not 2b\").equals(\"2b or not 2b\") capitalize(\"Foo bar\").equals(\"Foo bar\"); capitalize(\"\").equals(\"\"); </pre>\n * @param s the string whose first character is to be uppercased\n * @return a string equivalent to <tt>s</tt> with its first characterconverted to uppercase\n * @throws NullPointerException if <tt>s</tt> is null\n */\npublic static String capitalize(String s){\n  if (s.length() == 0)   return s;\n  char first=s.charAt(0);\n  char capitalized=Character.toUpperCase(first);\n  return (first == capitalized) ? s : capitalized + s.substring(1);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 29
      },
      "nodeContext" : "char first=s.charAt(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 47,
    "startColumnNumber" : 22,
    "endLineNumber" : 47,
    "endColumnNumber" : 23
  }, {
    "charLength" : 1,
    "startLineNumber" : 49,
    "startColumnNumber" : 26,
    "endLineNumber" : 49,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}