{
  "id" : 437,
  "expression" : "i < count",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.data.transfer/src/org/jkiss/dbeaver/tools/transfer/stream/exporter/DataExporterMarkdownTable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < count",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 185,
      "startColumnNumber" : 32,
      "endLineNumber" : 185,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 191,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0; i < count; i++) {\n  if (buffer[i] == '|') {\n    getWriter().write(PIPE_ESCAPE);\n  }\n else {\n    getWriter().write(buffer[i]);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 416,
        "startLineNumber" : 180,
        "startColumnNumber" : 21,
        "endLineNumber" : 192,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int count=reader.read(buffer);\n  if (count <= 0) {\n    break;\n  }\n  for (int i=0; i < count; i++) {\n    if (buffer[i] == '|') {\n      getWriter().write(PIPE_ESCAPE);\n    }\n else {\n      getWriter().write(buffer[i]);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 425,
        "startLineNumber" : 180,
        "startColumnNumber" : 12,
        "endLineNumber" : 192,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (; ; ) {\n  int count=reader.read(buffer);\n  if (count <= 0) {\n    break;\n  }\n  for (int i=0; i < count; i++) {\n    if (buffer[i] == '|') {\n      getWriter().write(PIPE_ESCAPE);\n    }\n else {\n      getWriter().write(buffer[i]);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 50,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 177,
        "startColumnNumber" : 12,
        "endLineNumber" : 193,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char buffer[]=new char[2000];\n  for (; ; ) {\n    int count=reader.read(buffer);\n    if (count <= 0) {\n      break;\n    }\n    for (int i=0; i < count; i++) {\n      if (buffer[i] == '|') {\n        getWriter().write(PIPE_ESCAPE);\n      }\n else {\n        getWriter().write(buffer[i]);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 177,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  char buffer[]=new char[2000];\n  for (; ; ) {\n    int count=reader.read(buffer);\n    if (count <= 0) {\n      break;\n    }\n    for (int i=0; i < count; i++) {\n      if (buffer[i] == '|') {\n        getWriter().write(PIPE_ESCAPE);\n      }\n else {\n        getWriter().write(buffer[i]);\n      }\n    }\n  }\n}\n  finally {\n  ContentUtils.close(reader);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 68,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 600,
        "startLineNumber" : 176,
        "startColumnNumber" : 4,
        "endLineNumber" : 196,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    char buffer[]=new char[2000];\n    for (; ; ) {\n      int count=reader.read(buffer);\n      if (count <= 0) {\n        break;\n      }\n      for (int i=0; i < count; i++) {\n        if (buffer[i] == '|') {\n          getWriter().write(PIPE_ESCAPE);\n        }\n else {\n          getWriter().write(buffer[i]);\n        }\n      }\n    }\n  }\n  finally {\n    ContentUtils.close(reader);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 666,
        "startLineNumber" : 175,
        "startColumnNumber" : 4,
        "endLineNumber" : 196,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void writeCellValue(Reader reader) throws IOException {\n  try {\n    char buffer[]=new char[2000];\n    for (; ; ) {\n      int count=reader.read(buffer);\n      if (count <= 0) {\n        break;\n      }\n      for (int i=0; i < count; i++) {\n        if (buffer[i] == '|') {\n          getWriter().write(PIPE_ESCAPE);\n        }\n else {\n          getWriter().write(buffer[i]);\n        }\n      }\n    }\n  }\n  finally {\n    ContentUtils.close(reader);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 191,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0; i < count; i++) {\n  if (buffer[i] == '|') {\n    getWriter().write(PIPE_ESCAPE);\n  }\n else {\n    getWriter().write(buffer[i]);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 185,
    "startColumnNumber" : 32,
    "endLineNumber" : 185,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}