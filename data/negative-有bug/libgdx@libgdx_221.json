{
  "id" : 221,
  "expression" : "diff.nor()",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/tests/gdx-tests/src/com/badlogic/gdx/tests/InverseKinematicsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "diff.nor()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 115,
      "startColumnNumber" : 3,
      "endLineNumber" : 115,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 115,
        "startColumnNumber" : 3,
        "endLineNumber" : 115,
        "endColumnNumber" : 35
      },
      "nodeContext" : "diff.nor().scl(bones[i + 1].len)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 115,
        "startColumnNumber" : 3,
        "endLineNumber" : 115,
        "endColumnNumber" : 36
      },
      "nodeContext" : "diff.nor().scl(bones[i + 1].len);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 108,
        "startColumnNumber" : 45,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Bone bone=bones[i];\n  endPoint.set(bone.position);\n  diff.set(endPoint.x,endPoint.y).sub(bones[i + 1].position.x,bones[i + 1].position.y);\n  diff.add(0,gravity);\n  diff.add(bones[i + 1].inertia.x,bones[i + 1].inertia.y);\n  diff.nor().scl(bones[i + 1].len);\n  float x=endPoint.x - diff.x;\n  float y=endPoint.y - diff.y;\n  float delta=Gdx.graphics.getDeltaTime();\n  bones[i + 1].inertia.add((bones[i + 1].position.x - x) * delta,(bones[i + 1].position.y - y) * delta,0).scl(0.99f);\n  bones[i + 1].position.set(x,y,0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < bones.length - 1; i++) {\n  Bone bone=bones[i];\n  endPoint.set(bone.position);\n  diff.set(endPoint.x,endPoint.y).sub(bones[i + 1].position.x,bones[i + 1].position.y);\n  diff.add(0,gravity);\n  diff.add(bones[i + 1].inertia.x,bones[i + 1].inertia.y);\n  diff.nor().scl(bones[i + 1].len);\n  float x=endPoint.x - diff.x;\n  float y=endPoint.y - diff.y;\n  float delta=Gdx.graphics.getDeltaTime();\n  bones[i + 1].inertia.add((bones[i + 1].position.x - x) * delta,(bones[i + 1].position.y - y) * delta,0).scl(0.99f);\n  bones[i + 1].position.set(x,y,0);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 188,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 102,
        "startColumnNumber" : 42,
        "endLineNumber" : 123,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  float gravity=Gdx.graphics.getDeltaTime() * GRAVITY;\n  endPoint.set(target);\n  bones[0].position.set(endPoint);\n  for (int i=0; i < bones.length - 1; i++) {\n    Bone bone=bones[i];\n    endPoint.set(bone.position);\n    diff.set(endPoint.x,endPoint.y).sub(bones[i + 1].position.x,bones[i + 1].position.y);\n    diff.add(0,gravity);\n    diff.add(bones[i + 1].inertia.x,bones[i + 1].inertia.y);\n    diff.nor().scl(bones[i + 1].len);\n    float x=endPoint.x - diff.x;\n    float y=endPoint.y - diff.y;\n    float delta=Gdx.graphics.getDeltaTime();\n    bones[i + 1].inertia.add((bones[i + 1].position.x - x) * delta,(bones[i + 1].position.y - y) * delta,0).scl(0.99f);\n    bones[i + 1].position.set(x,y,0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 123,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void solveFakeIK(Vector3 target){\n  float gravity=Gdx.graphics.getDeltaTime() * GRAVITY;\n  endPoint.set(target);\n  bones[0].position.set(endPoint);\n  for (int i=0; i < bones.length - 1; i++) {\n    Bone bone=bones[i];\n    endPoint.set(bone.position);\n    diff.set(endPoint.x,endPoint.y).sub(bones[i + 1].position.x,bones[i + 1].position.y);\n    diff.add(0,gravity);\n    diff.add(bones[i + 1].inertia.x,bones[i + 1].inertia.y);\n    diff.nor().scl(bones[i + 1].len);\n    float x=endPoint.x - diff.x;\n    float y=endPoint.y - diff.y;\n    float delta=Gdx.graphics.getDeltaTime();\n    bones[i + 1].inertia.add((bones[i + 1].position.x - x) * delta,(bones[i + 1].position.y - y) * delta,0).scl(0.99f);\n    bones[i + 1].position.set(x,y,0);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 115,
        "startColumnNumber" : 3,
        "endLineNumber" : 115,
        "endColumnNumber" : 36
      },
      "nodeContext" : "diff.nor().scl(bones[i + 1].len);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "com.badlogic.gdx.math.Vector2"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 115,
    "startColumnNumber" : 3,
    "endLineNumber" : 115,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ ]
}