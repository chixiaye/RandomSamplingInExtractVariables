{
  "id" : 488,
  "expression" : "channelCount",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/main/java/com/google/android/exoplayer2/extractor/avi/StreamFormatChunk.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "channelCount",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 95,
      "startColumnNumber" : 25,
      "endLineNumber" : 95,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 38
      },
      "nodeContext" : "formatBuilder.setSampleMimeType(mimeType).setChannelCount(channelCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 40
      },
      "nodeContext" : "formatBuilder.setSampleMimeType(mimeType).setChannelCount(channelCount).setSampleRate(samplesPerSecond)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 41
      },
      "nodeContext" : "formatBuilder.setSampleMimeType(mimeType).setChannelCount(channelCount).setSampleRate(samplesPerSecond);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1293,
        "startLineNumber" : 76,
        "startColumnNumber" : 68,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int formatTag=body.readLittleEndianUnsignedShort();\n  @Nullable String mimeType=getMimeTypeFromTag(formatTag);\n  if (mimeType == null) {\n    Log.w(TAG,\"Ignoring track with unsupported format tag \" + formatTag);\n    return null;\n  }\n  int channelCount=body.readLittleEndianUnsignedShort();\n  int samplesPerSecond=body.readLittleEndianInt();\n  body.skipBytes(6);\n  int bitsPerSample=body.readUnsignedShort();\n  int pcmEncoding=Util.getPcmEncoding(bitsPerSample);\n  int cbSize=body.readLittleEndianUnsignedShort();\n  byte[] codecData=new byte[cbSize];\n  body.readBytes(codecData,0,codecData.length);\n  Format.Builder formatBuilder=new Format.Builder();\n  formatBuilder.setSampleMimeType(mimeType).setChannelCount(channelCount).setSampleRate(samplesPerSecond);\n  if (MimeTypes.AUDIO_RAW.equals(mimeType) && pcmEncoding != C.ENCODING_INVALID) {\n    formatBuilder.setPcmEncoding(pcmEncoding);\n  }\n  if (MimeTypes.AUDIO_AAC.equals(mimeType) && codecData.length > 0) {\n    formatBuilder.setInitializationData(ImmutableList.of(codecData));\n  }\n  return new StreamFormatChunk(formatBuilder.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1372,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable private static AviChunk parseWaveFormatEx(ParsableByteArray body){\n  int formatTag=body.readLittleEndianUnsignedShort();\n  @Nullable String mimeType=getMimeTypeFromTag(formatTag);\n  if (mimeType == null) {\n    Log.w(TAG,\"Ignoring track with unsupported format tag \" + formatTag);\n    return null;\n  }\n  int channelCount=body.readLittleEndianUnsignedShort();\n  int samplesPerSecond=body.readLittleEndianInt();\n  body.skipBytes(6);\n  int bitsPerSample=body.readUnsignedShort();\n  int pcmEncoding=Util.getPcmEncoding(bitsPerSample);\n  int cbSize=body.readLittleEndianUnsignedShort();\n  byte[] codecData=new byte[cbSize];\n  body.readBytes(codecData,0,codecData.length);\n  Format.Builder formatBuilder=new Format.Builder();\n  formatBuilder.setSampleMimeType(mimeType).setChannelCount(channelCount).setSampleRate(samplesPerSecond);\n  if (MimeTypes.AUDIO_RAW.equals(mimeType) && pcmEncoding != C.ENCODING_INVALID) {\n    formatBuilder.setPcmEncoding(pcmEncoding);\n  }\n  if (MimeTypes.AUDIO_AAC.equals(mimeType) && codecData.length > 0) {\n    formatBuilder.setInitializationData(ImmutableList.of(codecData));\n  }\n  return new StreamFormatChunk(formatBuilder.build());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 38
      },
      "nodeContext" : "formatBuilder.setSampleMimeType(mimeType).setChannelCount(channelCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 95,
    "startColumnNumber" : 25,
    "endLineNumber" : 95,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}