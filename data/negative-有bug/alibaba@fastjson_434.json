{
  "id" : 434,
  "expression" : "preWriter",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/main/java/com/alibaba/fastjson/serializer/ArrayCodec.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "preWriter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 103,
      "startColumnNumber" : 28,
      "endLineNumber" : 103,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 103,
        "startColumnNumber" : 28,
        "endLineNumber" : 103,
        "endColumnNumber" : 73
      },
      "nodeContext" : "preWriter.write(serializer,item,null,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 103,
        "startColumnNumber" : 28,
        "endLineNumber" : 103,
        "endColumnNumber" : 74
      },
      "nodeContext" : "preWriter.write(serializer,item,null,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 102,
        "startColumnNumber" : 47,
        "endLineNumber" : 104,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  preWriter.write(serializer,item,null,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 102,
        "startColumnNumber" : 24,
        "endLineNumber" : 109,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (clazz == preClazz) {\n  preWriter.write(serializer,item,null,null);\n}\n else {\n  preClazz=clazz;\n  preWriter=serializer.config.get(clazz);\n  preWriter.write(serializer,item,null,null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 99,
        "startColumnNumber" : 27,
        "endLineNumber" : 110,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Class<?> clazz=item.getClass();\n  if (clazz == preClazz) {\n    preWriter.write(serializer,item,null,null);\n  }\n else {\n    preClazz=clazz;\n    preWriter=serializer.config.get(clazz);\n    preWriter.write(serializer,item,null,null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 97,
        "startColumnNumber" : 20,
        "endLineNumber" : 110,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (serializer.references != null && serializer.references.containsKey(item)) {\n  serializer.writeReference(item);\n}\n else {\n  Class<?> clazz=item.getClass();\n  if (clazz == preClazz) {\n    preWriter.write(serializer,item,null,null);\n  }\n else {\n    preClazz=clazz;\n    preWriter=serializer.config.get(clazz);\n    preWriter.write(serializer,item,null,null);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 96,
        "startColumnNumber" : 23,
        "endLineNumber" : 112,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (serializer.references != null && serializer.references.containsKey(item)) {\n    serializer.writeReference(item);\n  }\n else {\n    Class<?> clazz=item.getClass();\n    if (clazz == preClazz) {\n      preWriter.write(serializer,item,null,null);\n    }\n else {\n      preClazz=clazz;\n      preWriter=serializer.config.get(clazz);\n      preWriter.write(serializer,item,null,null);\n    }\n  }\n  out.write(',');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (item == null) {\n  out.append(\"null,\");\n}\n else {\n  if (serializer.references != null && serializer.references.containsKey(item)) {\n    serializer.writeReference(item);\n  }\n else {\n    Class<?> clazz=item.getClass();\n    if (clazz == preClazz) {\n      preWriter.write(serializer,item,null,null);\n    }\n else {\n      preClazz=clazz;\n      preWriter=serializer.config.get(clazz);\n      preWriter.write(serializer,item,null,null);\n    }\n  }\n  out.write(',');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 876,
        "startLineNumber" : 91,
        "startColumnNumber" : 42,
        "endLineNumber" : 113,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Object item=array[i];\n  if (item == null) {\n    out.append(\"null,\");\n  }\n else {\n    if (serializer.references != null && serializer.references.containsKey(item)) {\n      serializer.writeReference(item);\n    }\n else {\n      Class<?> clazz=item.getClass();\n      if (clazz == preClazz) {\n        preWriter.write(serializer,item,null,null);\n      }\n else {\n        preClazz=clazz;\n        preWriter=serializer.config.get(clazz);\n        preWriter.write(serializer,item,null,null);\n      }\n    }\n    out.write(',');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < end; ++i) {\n  Object item=array[i];\n  if (item == null) {\n    out.append(\"null,\");\n  }\n else {\n    if (serializer.references != null && serializer.references.containsKey(item)) {\n      serializer.writeReference(item);\n    }\n else {\n      Class<?> clazz=item.getClass();\n      if (clazz == preClazz) {\n        preWriter.write(serializer,item,null,null);\n      }\n else {\n        preClazz=clazz;\n        preWriter=serializer.config.get(clazz);\n        preWriter.write(serializer,item,null,null);\n      }\n    }\n    out.write(',');\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 101,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2081,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Class<?> preClazz=null;\n  ObjectSerializer preWriter=null;\n  out.write('[');\n  if ((out.features & SerializerFeature.PrettyFormat.mask) != 0) {\n    serializer.incrementIndent();\n    serializer.println();\n    for (int i=0; i < size; ++i) {\n      if (i != 0) {\n        out.write(',');\n        serializer.println();\n      }\n      serializer.write(array[i]);\n    }\n    serializer.decrementIdent();\n    serializer.println();\n    out.write(']');\n    return;\n  }\n  for (int i=0; i < end; ++i) {\n    Object item=array[i];\n    if (item == null) {\n      out.append(\"null,\");\n    }\n else {\n      if (serializer.references != null && serializer.references.containsKey(item)) {\n        serializer.writeReference(item);\n      }\n else {\n        Class<?> clazz=item.getClass();\n        if (clazz == preClazz) {\n          preWriter.write(serializer,item,null,null);\n        }\n else {\n          preClazz=clazz;\n          preWriter=serializer.config.get(clazz);\n          preWriter.write(serializer,item,null,null);\n        }\n      }\n      out.write(',');\n    }\n  }\n  Object item=array[end];\n  if (item == null) {\n    out.append(\"null]\");\n  }\n else {\n    if (serializer.references != null && serializer.references.containsKey(item)) {\n      serializer.writeReference(item);\n    }\n else {\n      serializer.writeWithFieldName(item,end);\n    }\n    out.write(']');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2149,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Class<?> preClazz=null;\n  ObjectSerializer preWriter=null;\n  out.write('[');\n  if ((out.features & SerializerFeature.PrettyFormat.mask) != 0) {\n    serializer.incrementIndent();\n    serializer.println();\n    for (int i=0; i < size; ++i) {\n      if (i != 0) {\n        out.write(',');\n        serializer.println();\n      }\n      serializer.write(array[i]);\n    }\n    serializer.decrementIdent();\n    serializer.println();\n    out.write(']');\n    return;\n  }\n  for (int i=0; i < end; ++i) {\n    Object item=array[i];\n    if (item == null) {\n      out.append(\"null,\");\n    }\n else {\n      if (serializer.references != null && serializer.references.containsKey(item)) {\n        serializer.writeReference(item);\n      }\n else {\n        Class<?> clazz=item.getClass();\n        if (clazz == preClazz) {\n          preWriter.write(serializer,item,null,null);\n        }\n else {\n          preClazz=clazz;\n          preWriter=serializer.config.get(clazz);\n          preWriter.write(serializer,item,null,null);\n        }\n      }\n      out.write(',');\n    }\n  }\n  Object item=array[end];\n  if (item == null) {\n    out.append(\"null]\");\n  }\n else {\n    if (serializer.references != null && serializer.references.containsKey(item)) {\n      serializer.writeReference(item);\n    }\n else {\n      serializer.writeWithFieldName(item,end);\n    }\n    out.write(']');\n  }\n}\n  finally {\n  serializer.context=context;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 248,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2795,
        "startLineNumber" : 44,
        "startColumnNumber" : 25,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SerializeWriter out=serializer.out;\n  Object[] array=(Object[])object;\n  if (object == null) {\n    if ((out.features & SerializerFeature.WriteNullListAsEmpty.mask) != 0) {\n      out.write(\"[]\");\n    }\n else {\n      out.writeNull();\n    }\n    return;\n  }\n  int size=array.length;\n  int end=size - 1;\n  if (end == -1) {\n    out.append(\"[]\");\n    return;\n  }\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    Class<?> preClazz=null;\n    ObjectSerializer preWriter=null;\n    out.write('[');\n    if ((out.features & SerializerFeature.PrettyFormat.mask) != 0) {\n      serializer.incrementIndent();\n      serializer.println();\n      for (int i=0; i < size; ++i) {\n        if (i != 0) {\n          out.write(',');\n          serializer.println();\n        }\n        serializer.write(array[i]);\n      }\n      serializer.decrementIdent();\n      serializer.println();\n      out.write(']');\n      return;\n    }\n    for (int i=0; i < end; ++i) {\n      Object item=array[i];\n      if (item == null) {\n        out.append(\"null,\");\n      }\n else {\n        if (serializer.references != null && serializer.references.containsKey(item)) {\n          serializer.writeReference(item);\n        }\n else {\n          Class<?> clazz=item.getClass();\n          if (clazz == preClazz) {\n            preWriter.write(serializer,item,null,null);\n          }\n else {\n            preClazz=clazz;\n            preWriter=serializer.config.get(clazz);\n            preWriter.write(serializer,item,null,null);\n          }\n        }\n        out.write(',');\n      }\n    }\n    Object item=array[end];\n    if (item == null) {\n      out.append(\"null]\");\n    }\n else {\n      if (serializer.references != null && serializer.references.containsKey(item)) {\n        serializer.writeReference(item);\n      }\n else {\n        serializer.writeWithFieldName(item,end);\n      }\n      out.write(']');\n    }\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 342,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3019,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public final void write(JSONSerializer serializer,Object object,Object fieldName,Type fieldType) throws IOException {\n  SerializeWriter out=serializer.out;\n  Object[] array=(Object[])object;\n  if (object == null) {\n    if ((out.features & SerializerFeature.WriteNullListAsEmpty.mask) != 0) {\n      out.write(\"[]\");\n    }\n else {\n      out.writeNull();\n    }\n    return;\n  }\n  int size=array.length;\n  int end=size - 1;\n  if (end == -1) {\n    out.append(\"[]\");\n    return;\n  }\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    Class<?> preClazz=null;\n    ObjectSerializer preWriter=null;\n    out.write('[');\n    if ((out.features & SerializerFeature.PrettyFormat.mask) != 0) {\n      serializer.incrementIndent();\n      serializer.println();\n      for (int i=0; i < size; ++i) {\n        if (i != 0) {\n          out.write(',');\n          serializer.println();\n        }\n        serializer.write(array[i]);\n      }\n      serializer.decrementIdent();\n      serializer.println();\n      out.write(']');\n      return;\n    }\n    for (int i=0; i < end; ++i) {\n      Object item=array[i];\n      if (item == null) {\n        out.append(\"null,\");\n      }\n else {\n        if (serializer.references != null && serializer.references.containsKey(item)) {\n          serializer.writeReference(item);\n        }\n else {\n          Class<?> clazz=item.getClass();\n          if (clazz == preClazz) {\n            preWriter.write(serializer,item,null,null);\n          }\n else {\n            preClazz=clazz;\n            preWriter=serializer.config.get(clazz);\n            preWriter.write(serializer,item,null,null);\n          }\n        }\n        out.write(',');\n      }\n    }\n    Object item=array[end];\n    if (item == null) {\n      out.append(\"null]\");\n    }\n else {\n      if (serializer.references != null && serializer.references.containsKey(item)) {\n        serializer.writeReference(item);\n      }\n else {\n        serializer.writeWithFieldName(item,end);\n      }\n      out.write(']');\n    }\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 103,
        "startColumnNumber" : 28,
        "endLineNumber" : 103,
        "endColumnNumber" : 74
      },
      "nodeContext" : "preWriter.write(serializer,item,null,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.fastjson.serializer.ObjectSerializer"
  }, {
    "nodeContext" : "preWriter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 108,
      "startColumnNumber" : 28,
      "endLineNumber" : 108,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 108,
        "startColumnNumber" : 28,
        "endLineNumber" : 108,
        "endColumnNumber" : 73
      },
      "nodeContext" : "preWriter.write(serializer,item,null,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 108,
        "startColumnNumber" : 28,
        "endLineNumber" : 108,
        "endColumnNumber" : 74
      },
      "nodeContext" : "preWriter.write(serializer,item,null,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 104,
        "startColumnNumber" : 31,
        "endLineNumber" : 109,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  preClazz=clazz;\n  preWriter=serializer.config.get(clazz);\n  preWriter.write(serializer,item,null,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 102,
        "startColumnNumber" : 24,
        "endLineNumber" : 109,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (clazz == preClazz) {\n  preWriter.write(serializer,item,null,null);\n}\n else {\n  preClazz=clazz;\n  preWriter=serializer.config.get(clazz);\n  preWriter.write(serializer,item,null,null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 99,
        "startColumnNumber" : 27,
        "endLineNumber" : 110,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Class<?> clazz=item.getClass();\n  if (clazz == preClazz) {\n    preWriter.write(serializer,item,null,null);\n  }\n else {\n    preClazz=clazz;\n    preWriter=serializer.config.get(clazz);\n    preWriter.write(serializer,item,null,null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 97,
        "startColumnNumber" : 20,
        "endLineNumber" : 110,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (serializer.references != null && serializer.references.containsKey(item)) {\n  serializer.writeReference(item);\n}\n else {\n  Class<?> clazz=item.getClass();\n  if (clazz == preClazz) {\n    preWriter.write(serializer,item,null,null);\n  }\n else {\n    preClazz=clazz;\n    preWriter=serializer.config.get(clazz);\n    preWriter.write(serializer,item,null,null);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 96,
        "startColumnNumber" : 23,
        "endLineNumber" : 112,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (serializer.references != null && serializer.references.containsKey(item)) {\n    serializer.writeReference(item);\n  }\n else {\n    Class<?> clazz=item.getClass();\n    if (clazz == preClazz) {\n      preWriter.write(serializer,item,null,null);\n    }\n else {\n      preClazz=clazz;\n      preWriter=serializer.config.get(clazz);\n      preWriter.write(serializer,item,null,null);\n    }\n  }\n  out.write(',');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (item == null) {\n  out.append(\"null,\");\n}\n else {\n  if (serializer.references != null && serializer.references.containsKey(item)) {\n    serializer.writeReference(item);\n  }\n else {\n    Class<?> clazz=item.getClass();\n    if (clazz == preClazz) {\n      preWriter.write(serializer,item,null,null);\n    }\n else {\n      preClazz=clazz;\n      preWriter=serializer.config.get(clazz);\n      preWriter.write(serializer,item,null,null);\n    }\n  }\n  out.write(',');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 876,
        "startLineNumber" : 91,
        "startColumnNumber" : 42,
        "endLineNumber" : 113,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Object item=array[i];\n  if (item == null) {\n    out.append(\"null,\");\n  }\n else {\n    if (serializer.references != null && serializer.references.containsKey(item)) {\n      serializer.writeReference(item);\n    }\n else {\n      Class<?> clazz=item.getClass();\n      if (clazz == preClazz) {\n        preWriter.write(serializer,item,null,null);\n      }\n else {\n        preClazz=clazz;\n        preWriter=serializer.config.get(clazz);\n        preWriter.write(serializer,item,null,null);\n      }\n    }\n    out.write(',');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < end; ++i) {\n  Object item=array[i];\n  if (item == null) {\n    out.append(\"null,\");\n  }\n else {\n    if (serializer.references != null && serializer.references.containsKey(item)) {\n      serializer.writeReference(item);\n    }\n else {\n      Class<?> clazz=item.getClass();\n      if (clazz == preClazz) {\n        preWriter.write(serializer,item,null,null);\n      }\n else {\n        preClazz=clazz;\n        preWriter=serializer.config.get(clazz);\n        preWriter.write(serializer,item,null,null);\n      }\n    }\n    out.write(',');\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 101,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2081,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Class<?> preClazz=null;\n  ObjectSerializer preWriter=null;\n  out.write('[');\n  if ((out.features & SerializerFeature.PrettyFormat.mask) != 0) {\n    serializer.incrementIndent();\n    serializer.println();\n    for (int i=0; i < size; ++i) {\n      if (i != 0) {\n        out.write(',');\n        serializer.println();\n      }\n      serializer.write(array[i]);\n    }\n    serializer.decrementIdent();\n    serializer.println();\n    out.write(']');\n    return;\n  }\n  for (int i=0; i < end; ++i) {\n    Object item=array[i];\n    if (item == null) {\n      out.append(\"null,\");\n    }\n else {\n      if (serializer.references != null && serializer.references.containsKey(item)) {\n        serializer.writeReference(item);\n      }\n else {\n        Class<?> clazz=item.getClass();\n        if (clazz == preClazz) {\n          preWriter.write(serializer,item,null,null);\n        }\n else {\n          preClazz=clazz;\n          preWriter=serializer.config.get(clazz);\n          preWriter.write(serializer,item,null,null);\n        }\n      }\n      out.write(',');\n    }\n  }\n  Object item=array[end];\n  if (item == null) {\n    out.append(\"null]\");\n  }\n else {\n    if (serializer.references != null && serializer.references.containsKey(item)) {\n      serializer.writeReference(item);\n    }\n else {\n      serializer.writeWithFieldName(item,end);\n    }\n    out.write(']');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2149,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Class<?> preClazz=null;\n  ObjectSerializer preWriter=null;\n  out.write('[');\n  if ((out.features & SerializerFeature.PrettyFormat.mask) != 0) {\n    serializer.incrementIndent();\n    serializer.println();\n    for (int i=0; i < size; ++i) {\n      if (i != 0) {\n        out.write(',');\n        serializer.println();\n      }\n      serializer.write(array[i]);\n    }\n    serializer.decrementIdent();\n    serializer.println();\n    out.write(']');\n    return;\n  }\n  for (int i=0; i < end; ++i) {\n    Object item=array[i];\n    if (item == null) {\n      out.append(\"null,\");\n    }\n else {\n      if (serializer.references != null && serializer.references.containsKey(item)) {\n        serializer.writeReference(item);\n      }\n else {\n        Class<?> clazz=item.getClass();\n        if (clazz == preClazz) {\n          preWriter.write(serializer,item,null,null);\n        }\n else {\n          preClazz=clazz;\n          preWriter=serializer.config.get(clazz);\n          preWriter.write(serializer,item,null,null);\n        }\n      }\n      out.write(',');\n    }\n  }\n  Object item=array[end];\n  if (item == null) {\n    out.append(\"null]\");\n  }\n else {\n    if (serializer.references != null && serializer.references.containsKey(item)) {\n      serializer.writeReference(item);\n    }\n else {\n      serializer.writeWithFieldName(item,end);\n    }\n    out.write(']');\n  }\n}\n  finally {\n  serializer.context=context;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 248,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2795,
        "startLineNumber" : 44,
        "startColumnNumber" : 25,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SerializeWriter out=serializer.out;\n  Object[] array=(Object[])object;\n  if (object == null) {\n    if ((out.features & SerializerFeature.WriteNullListAsEmpty.mask) != 0) {\n      out.write(\"[]\");\n    }\n else {\n      out.writeNull();\n    }\n    return;\n  }\n  int size=array.length;\n  int end=size - 1;\n  if (end == -1) {\n    out.append(\"[]\");\n    return;\n  }\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    Class<?> preClazz=null;\n    ObjectSerializer preWriter=null;\n    out.write('[');\n    if ((out.features & SerializerFeature.PrettyFormat.mask) != 0) {\n      serializer.incrementIndent();\n      serializer.println();\n      for (int i=0; i < size; ++i) {\n        if (i != 0) {\n          out.write(',');\n          serializer.println();\n        }\n        serializer.write(array[i]);\n      }\n      serializer.decrementIdent();\n      serializer.println();\n      out.write(']');\n      return;\n    }\n    for (int i=0; i < end; ++i) {\n      Object item=array[i];\n      if (item == null) {\n        out.append(\"null,\");\n      }\n else {\n        if (serializer.references != null && serializer.references.containsKey(item)) {\n          serializer.writeReference(item);\n        }\n else {\n          Class<?> clazz=item.getClass();\n          if (clazz == preClazz) {\n            preWriter.write(serializer,item,null,null);\n          }\n else {\n            preClazz=clazz;\n            preWriter=serializer.config.get(clazz);\n            preWriter.write(serializer,item,null,null);\n          }\n        }\n        out.write(',');\n      }\n    }\n    Object item=array[end];\n    if (item == null) {\n      out.append(\"null]\");\n    }\n else {\n      if (serializer.references != null && serializer.references.containsKey(item)) {\n        serializer.writeReference(item);\n      }\n else {\n        serializer.writeWithFieldName(item,end);\n      }\n      out.write(']');\n    }\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 342,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3019,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public final void write(JSONSerializer serializer,Object object,Object fieldName,Type fieldType) throws IOException {\n  SerializeWriter out=serializer.out;\n  Object[] array=(Object[])object;\n  if (object == null) {\n    if ((out.features & SerializerFeature.WriteNullListAsEmpty.mask) != 0) {\n      out.write(\"[]\");\n    }\n else {\n      out.writeNull();\n    }\n    return;\n  }\n  int size=array.length;\n  int end=size - 1;\n  if (end == -1) {\n    out.append(\"[]\");\n    return;\n  }\n  SerialContext context=serializer.context;\n  serializer.setContext(context,object,fieldName,0);\n  try {\n    Class<?> preClazz=null;\n    ObjectSerializer preWriter=null;\n    out.write('[');\n    if ((out.features & SerializerFeature.PrettyFormat.mask) != 0) {\n      serializer.incrementIndent();\n      serializer.println();\n      for (int i=0; i < size; ++i) {\n        if (i != 0) {\n          out.write(',');\n          serializer.println();\n        }\n        serializer.write(array[i]);\n      }\n      serializer.decrementIdent();\n      serializer.println();\n      out.write(']');\n      return;\n    }\n    for (int i=0; i < end; ++i) {\n      Object item=array[i];\n      if (item == null) {\n        out.append(\"null,\");\n      }\n else {\n        if (serializer.references != null && serializer.references.containsKey(item)) {\n          serializer.writeReference(item);\n        }\n else {\n          Class<?> clazz=item.getClass();\n          if (clazz == preClazz) {\n            preWriter.write(serializer,item,null,null);\n          }\n else {\n            preClazz=clazz;\n            preWriter=serializer.config.get(clazz);\n            preWriter.write(serializer,item,null,null);\n          }\n        }\n        out.write(',');\n      }\n    }\n    Object item=array[end];\n    if (item == null) {\n      out.append(\"null]\");\n    }\n else {\n      if (serializer.references != null && serializer.references.containsKey(item)) {\n        serializer.writeReference(item);\n      }\n else {\n        serializer.writeWithFieldName(item,end);\n      }\n      out.write(']');\n    }\n  }\n  finally {\n    serializer.context=context;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 108,
        "startColumnNumber" : 28,
        "endLineNumber" : 108,
        "endColumnNumber" : 74
      },
      "nodeContext" : "preWriter.write(serializer,item,null,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.fastjson.serializer.ObjectSerializer"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 103,
    "startColumnNumber" : 28,
    "endLineNumber" : 103,
    "endColumnNumber" : 37
  }, {
    "charLength" : 9,
    "startLineNumber" : 108,
    "startColumnNumber" : 28,
    "endLineNumber" : 108,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}