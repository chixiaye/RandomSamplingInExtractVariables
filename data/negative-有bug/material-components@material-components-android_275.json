{
  "id" : 275,
  "expression" : "navigationBarColor",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/internal/EdgeToEdgeUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "navigationBarColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 103,
      "startColumnNumber" : 33,
      "endLineNumber" : 103,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 52
      },
      "nodeContext" : "window.setNavigationBarColor(navigationBarColor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 53
      },
      "nodeContext" : "window.setNavigationBarColor(navigationBarColor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1638,
        "startLineNumber" : 76,
        "startColumnNumber" : 71,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP) {\n    return;\n  }\n  boolean useDefaultBackgroundColorForStatusBar=statusBarOverlapBackgroundColor == null || statusBarOverlapBackgroundColor == 0;\n  boolean useDefaultBackgroundColorForNavigationBar=navigationBarOverlapBackgroundColor == null || navigationBarOverlapBackgroundColor == 0;\n  if (useDefaultBackgroundColorForStatusBar || useDefaultBackgroundColorForNavigationBar) {\n    int defaultBackgroundColor=MaterialColors.getColor(window.getContext(),android.R.attr.colorBackground,Color.BLACK);\n    if (useDefaultBackgroundColorForStatusBar) {\n      statusBarOverlapBackgroundColor=defaultBackgroundColor;\n    }\n    if (useDefaultBackgroundColorForNavigationBar) {\n      navigationBarOverlapBackgroundColor=defaultBackgroundColor;\n    }\n  }\n  WindowCompat.setDecorFitsSystemWindows(window,!edgeToEdgeEnabled);\n  int statusBarColor=getStatusBarColor(window.getContext(),edgeToEdgeEnabled);\n  int navigationBarColor=getNavigationBarColor(window.getContext(),edgeToEdgeEnabled);\n  window.setStatusBarColor(statusBarColor);\n  window.setNavigationBarColor(navigationBarColor);\n  setLightStatusBar(window,isUsingLightSystemBar(statusBarColor,isColorLight(statusBarOverlapBackgroundColor)));\n  setLightNavigationBar(window,isUsingLightSystemBar(navigationBarColor,isColorLight(navigationBarOverlapBackgroundColor)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2706,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Applies or removes edge-to-edge mode to the provided  {@link Window}. When edge-to-edge mode is applied, the activities, or the non-floating dialogs, that host the provided window will be drawn over the system bar area by default and the system bar colors will be adjusted according to the background color you provide.\n * @param statusBarOverlapBackgroundColor The reference background color to decide the text/iconcolors on status bars.  {@code null} to use the default color from{@code ?android:attr/colorBackground}.\n * @param navigationBarOverlapBackgroundColor The reference background color to decide the iconcolors on navigation bars. {@code null} to use the default color from{@code ?android:attr/colorBackground}.\n */\npublic static void applyEdgeToEdge(@NonNull Window window,boolean edgeToEdgeEnabled,@Nullable @ColorInt Integer statusBarOverlapBackgroundColor,@Nullable @ColorInt Integer navigationBarOverlapBackgroundColor){\n  if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP) {\n    return;\n  }\n  boolean useDefaultBackgroundColorForStatusBar=statusBarOverlapBackgroundColor == null || statusBarOverlapBackgroundColor == 0;\n  boolean useDefaultBackgroundColorForNavigationBar=navigationBarOverlapBackgroundColor == null || navigationBarOverlapBackgroundColor == 0;\n  if (useDefaultBackgroundColorForStatusBar || useDefaultBackgroundColorForNavigationBar) {\n    int defaultBackgroundColor=MaterialColors.getColor(window.getContext(),android.R.attr.colorBackground,Color.BLACK);\n    if (useDefaultBackgroundColorForStatusBar) {\n      statusBarOverlapBackgroundColor=defaultBackgroundColor;\n    }\n    if (useDefaultBackgroundColorForNavigationBar) {\n      navigationBarOverlapBackgroundColor=defaultBackgroundColor;\n    }\n  }\n  WindowCompat.setDecorFitsSystemWindows(window,!edgeToEdgeEnabled);\n  int statusBarColor=getStatusBarColor(window.getContext(),edgeToEdgeEnabled);\n  int navigationBarColor=getNavigationBarColor(window.getContext(),edgeToEdgeEnabled);\n  window.setStatusBarColor(statusBarColor);\n  window.setNavigationBarColor(navigationBarColor);\n  setLightStatusBar(window,isUsingLightSystemBar(statusBarColor,isColorLight(statusBarOverlapBackgroundColor)));\n  setLightNavigationBar(window,isUsingLightSystemBar(navigationBarColor,isColorLight(navigationBarOverlapBackgroundColor)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 53
      },
      "nodeContext" : "window.setNavigationBarColor(navigationBarColor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "navigationBarColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 111,
      "startColumnNumber" : 12,
      "endLineNumber" : 111,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 82
      },
      "nodeContext" : "isUsingLightSystemBar(navigationBarColor,isColorLight(navigationBarOverlapBackgroundColor))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 83
      },
      "nodeContext" : "setLightNavigationBar(window,isUsingLightSystemBar(navigationBarColor,isColorLight(navigationBarOverlapBackgroundColor)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 84
      },
      "nodeContext" : "setLightNavigationBar(window,isUsingLightSystemBar(navigationBarColor,isColorLight(navigationBarOverlapBackgroundColor)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1638,
        "startLineNumber" : 76,
        "startColumnNumber" : 71,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP) {\n    return;\n  }\n  boolean useDefaultBackgroundColorForStatusBar=statusBarOverlapBackgroundColor == null || statusBarOverlapBackgroundColor == 0;\n  boolean useDefaultBackgroundColorForNavigationBar=navigationBarOverlapBackgroundColor == null || navigationBarOverlapBackgroundColor == 0;\n  if (useDefaultBackgroundColorForStatusBar || useDefaultBackgroundColorForNavigationBar) {\n    int defaultBackgroundColor=MaterialColors.getColor(window.getContext(),android.R.attr.colorBackground,Color.BLACK);\n    if (useDefaultBackgroundColorForStatusBar) {\n      statusBarOverlapBackgroundColor=defaultBackgroundColor;\n    }\n    if (useDefaultBackgroundColorForNavigationBar) {\n      navigationBarOverlapBackgroundColor=defaultBackgroundColor;\n    }\n  }\n  WindowCompat.setDecorFitsSystemWindows(window,!edgeToEdgeEnabled);\n  int statusBarColor=getStatusBarColor(window.getContext(),edgeToEdgeEnabled);\n  int navigationBarColor=getNavigationBarColor(window.getContext(),edgeToEdgeEnabled);\n  window.setStatusBarColor(statusBarColor);\n  window.setNavigationBarColor(navigationBarColor);\n  setLightStatusBar(window,isUsingLightSystemBar(statusBarColor,isColorLight(statusBarOverlapBackgroundColor)));\n  setLightNavigationBar(window,isUsingLightSystemBar(navigationBarColor,isColorLight(navigationBarOverlapBackgroundColor)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2706,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Applies or removes edge-to-edge mode to the provided  {@link Window}. When edge-to-edge mode is applied, the activities, or the non-floating dialogs, that host the provided window will be drawn over the system bar area by default and the system bar colors will be adjusted according to the background color you provide.\n * @param statusBarOverlapBackgroundColor The reference background color to decide the text/iconcolors on status bars.  {@code null} to use the default color from{@code ?android:attr/colorBackground}.\n * @param navigationBarOverlapBackgroundColor The reference background color to decide the iconcolors on navigation bars. {@code null} to use the default color from{@code ?android:attr/colorBackground}.\n */\npublic static void applyEdgeToEdge(@NonNull Window window,boolean edgeToEdgeEnabled,@Nullable @ColorInt Integer statusBarOverlapBackgroundColor,@Nullable @ColorInt Integer navigationBarOverlapBackgroundColor){\n  if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP) {\n    return;\n  }\n  boolean useDefaultBackgroundColorForStatusBar=statusBarOverlapBackgroundColor == null || statusBarOverlapBackgroundColor == 0;\n  boolean useDefaultBackgroundColorForNavigationBar=navigationBarOverlapBackgroundColor == null || navigationBarOverlapBackgroundColor == 0;\n  if (useDefaultBackgroundColorForStatusBar || useDefaultBackgroundColorForNavigationBar) {\n    int defaultBackgroundColor=MaterialColors.getColor(window.getContext(),android.R.attr.colorBackground,Color.BLACK);\n    if (useDefaultBackgroundColorForStatusBar) {\n      statusBarOverlapBackgroundColor=defaultBackgroundColor;\n    }\n    if (useDefaultBackgroundColorForNavigationBar) {\n      navigationBarOverlapBackgroundColor=defaultBackgroundColor;\n    }\n  }\n  WindowCompat.setDecorFitsSystemWindows(window,!edgeToEdgeEnabled);\n  int statusBarColor=getStatusBarColor(window.getContext(),edgeToEdgeEnabled);\n  int navigationBarColor=getNavigationBarColor(window.getContext(),edgeToEdgeEnabled);\n  window.setStatusBarColor(statusBarColor);\n  window.setNavigationBarColor(navigationBarColor);\n  setLightStatusBar(window,isUsingLightSystemBar(statusBarColor,isColorLight(statusBarOverlapBackgroundColor)));\n  setLightNavigationBar(window,isUsingLightSystemBar(navigationBarColor,isColorLight(navigationBarOverlapBackgroundColor)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 82
      },
      "nodeContext" : "isUsingLightSystemBar(navigationBarColor,isColorLight(navigationBarOverlapBackgroundColor))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 103,
    "startColumnNumber" : 33,
    "endLineNumber" : 103,
    "endColumnNumber" : 51
  }, {
    "charLength" : 18,
    "startLineNumber" : 111,
    "startColumnNumber" : 12,
    "endLineNumber" : 111,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}