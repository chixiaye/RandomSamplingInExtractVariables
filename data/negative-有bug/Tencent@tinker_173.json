{
  "id" : 173,
  "expression" : "RType.valueOf(matcher.group(2).toUpperCase())",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/PatchUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RType.valueOf(matcher.group(2).toUpperCase())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 59,
      "startColumnNumber" : 38,
      "endLineNumber" : 59,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 59,
        "startColumnNumber" : 30,
        "endLineNumber" : 59,
        "endColumnNumber" : 83
      },
      "nodeContext" : "rType=RType.valueOf(matcher.group(2).toUpperCase())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 59,
        "endColumnNumber" : 84
      },
      "nodeContext" : "RType rType=RType.valueOf(matcher.group(2).toUpperCase());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 57,
        "startColumnNumber" : 43,
        "endLineNumber" : 71,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  IdType idType=IdType.from(matcher.group(1));\n  RType rType=RType.valueOf(matcher.group(2).toUpperCase());\n  String name=matcher.group(3);\n  String idValue=matcher.group(4);\n  RDotTxtEntry rDotTxtEntry=new RDotTxtEntry(idType,rType,name,idValue);\n  Set<RDotTxtEntry> hashSet=null;\n  if (rTypeResourceMap.containsKey(rType)) {\n    hashSet=rTypeResourceMap.get(rType);\n  }\n else {\n    hashSet=new HashSet<RDotTxtEntry>();\n    rTypeResourceMap.put(rType,hashSet);\n  }\n  hashSet.add(rDotTxtEntry);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 57,
        "startColumnNumber" : 20,
        "endLineNumber" : 71,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (matcher.matches()) {\n  IdType idType=IdType.from(matcher.group(1));\n  RType rType=RType.valueOf(matcher.group(2).toUpperCase());\n  String name=matcher.group(3);\n  String idValue=matcher.group(4);\n  RDotTxtEntry rDotTxtEntry=new RDotTxtEntry(idType,rType,name,idValue);\n  Set<RDotTxtEntry> hashSet=null;\n  if (rTypeResourceMap.containsKey(rType)) {\n    hashSet=rTypeResourceMap.get(rType);\n  }\n else {\n    hashSet=new HashSet<RDotTxtEntry>();\n    rTypeResourceMap.put(rType,hashSet);\n  }\n  hashSet.add(rDotTxtEntry);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 960,
        "startLineNumber" : 55,
        "startColumnNumber" : 67,
        "endLineNumber" : 72,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Matcher matcher=textSymbolLine.matcher(line);\n  if (matcher.matches()) {\n    IdType idType=IdType.from(matcher.group(1));\n    RType rType=RType.valueOf(matcher.group(2).toUpperCase());\n    String name=matcher.group(3);\n    String idValue=matcher.group(4);\n    RDotTxtEntry rDotTxtEntry=new RDotTxtEntry(idType,rType,name,idValue);\n    Set<RDotTxtEntry> hashSet=null;\n    if (rTypeResourceMap.containsKey(rType)) {\n      hashSet=rTypeResourceMap.get(rType);\n    }\n else {\n      hashSet=new HashSet<RDotTxtEntry>();\n      rTypeResourceMap.put(rType,hashSet);\n    }\n    hashSet.add(rDotTxtEntry);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1011,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 72,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while ((line=bufferedReader.readLine()) != null) {\n  Matcher matcher=textSymbolLine.matcher(line);\n  if (matcher.matches()) {\n    IdType idType=IdType.from(matcher.group(1));\n    RType rType=RType.valueOf(matcher.group(2).toUpperCase());\n    String name=matcher.group(3);\n    String idValue=matcher.group(4);\n    RDotTxtEntry rDotTxtEntry=new RDotTxtEntry(idType,rType,name,idValue);\n    Set<RDotTxtEntry> hashSet=null;\n    if (rTypeResourceMap.containsKey(rType)) {\n      hashSet=rTypeResourceMap.get(rType);\n    }\n else {\n      hashSet=new HashSet<RDotTxtEntry>();\n      rTypeResourceMap.put(rType,hashSet);\n    }\n    hashSet.add(rDotTxtEntry);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 123,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final Pattern textSymbolLine=Pattern.compile(\"(\\\\S+) (\\\\S+) (\\\\S+) (.+)\");\n  bufferedReader=new BufferedReader(new InputStreamReader(new FileInputStream(rTxtFullFilename)));\n  String line=null;\n  while ((line=bufferedReader.readLine()) != null) {\n    Matcher matcher=textSymbolLine.matcher(line);\n    if (matcher.matches()) {\n      IdType idType=IdType.from(matcher.group(1));\n      RType rType=RType.valueOf(matcher.group(2).toUpperCase());\n      String name=matcher.group(3);\n      String idValue=matcher.group(4);\n      RDotTxtEntry rDotTxtEntry=new RDotTxtEntry(idType,rType,name,idValue);\n      Set<RDotTxtEntry> hashSet=null;\n      if (rTypeResourceMap.containsKey(rType)) {\n        hashSet=rTypeResourceMap.get(rType);\n      }\n else {\n        hashSet=new HashSet<RDotTxtEntry>();\n        rTypeResourceMap.put(rType,hashSet);\n      }\n      hashSet.add(rDotTxtEntry);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1443,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  final Pattern textSymbolLine=Pattern.compile(\"(\\\\S+) (\\\\S+) (\\\\S+) (.+)\");\n  bufferedReader=new BufferedReader(new InputStreamReader(new FileInputStream(rTxtFullFilename)));\n  String line=null;\n  while ((line=bufferedReader.readLine()) != null) {\n    Matcher matcher=textSymbolLine.matcher(line);\n    if (matcher.matches()) {\n      IdType idType=IdType.from(matcher.group(1));\n      RType rType=RType.valueOf(matcher.group(2).toUpperCase());\n      String name=matcher.group(3);\n      String idValue=matcher.group(4);\n      RDotTxtEntry rDotTxtEntry=new RDotTxtEntry(idType,rType,name,idValue);\n      Set<RDotTxtEntry> hashSet=null;\n      if (rTypeResourceMap.containsKey(rType)) {\n        hashSet=rTypeResourceMap.get(rType);\n      }\n else {\n        hashSet=new HashSet<RDotTxtEntry>();\n        rTypeResourceMap.put(rType,hashSet);\n      }\n      hashSet.add(rDotTxtEntry);\n    }\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n}\n finally {\n  IOHelper.closeQuietly(bufferedReader);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 170,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1517,
        "startLineNumber" : 49,
        "startColumnNumber" : 91,
        "endLineNumber" : 78,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  BufferedReader bufferedReader=null;\n  try {\n    final Pattern textSymbolLine=Pattern.compile(\"(\\\\S+) (\\\\S+) (\\\\S+) (.+)\");\n    bufferedReader=new BufferedReader(new InputStreamReader(new FileInputStream(rTxtFullFilename)));\n    String line=null;\n    while ((line=bufferedReader.readLine()) != null) {\n      Matcher matcher=textSymbolLine.matcher(line);\n      if (matcher.matches()) {\n        IdType idType=IdType.from(matcher.group(1));\n        RType rType=RType.valueOf(matcher.group(2).toUpperCase());\n        String name=matcher.group(3);\n        String idValue=matcher.group(4);\n        RDotTxtEntry rDotTxtEntry=new RDotTxtEntry(idType,rType,name,idValue);\n        Set<RDotTxtEntry> hashSet=null;\n        if (rTypeResourceMap.containsKey(rType)) {\n          hashSet=rTypeResourceMap.get(rType);\n        }\n else {\n          hashSet=new HashSet<RDotTxtEntry>();\n          rTypeResourceMap.put(rType,hashSet);\n        }\n        hashSet.add(rDotTxtEntry);\n      }\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n finally {\n    IOHelper.closeQuietly(bufferedReader);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1600,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtil.isNotBlank(rTxtFullFilename) && FileUtil.isExist(rTxtFullFilename)) {\n  BufferedReader bufferedReader=null;\n  try {\n    final Pattern textSymbolLine=Pattern.compile(\"(\\\\S+) (\\\\S+) (\\\\S+) (.+)\");\n    bufferedReader=new BufferedReader(new InputStreamReader(new FileInputStream(rTxtFullFilename)));\n    String line=null;\n    while ((line=bufferedReader.readLine()) != null) {\n      Matcher matcher=textSymbolLine.matcher(line);\n      if (matcher.matches()) {\n        IdType idType=IdType.from(matcher.group(1));\n        RType rType=RType.valueOf(matcher.group(2).toUpperCase());\n        String name=matcher.group(3);\n        String idValue=matcher.group(4);\n        RDotTxtEntry rDotTxtEntry=new RDotTxtEntry(idType,rType,name,idValue);\n        Set<RDotTxtEntry> hashSet=null;\n        if (rTypeResourceMap.containsKey(rType)) {\n          hashSet=rTypeResourceMap.get(rType);\n        }\n else {\n          hashSet=new HashSet<RDotTxtEntry>();\n          rTypeResourceMap.put(rType,hashSet);\n        }\n        hashSet.add(rDotTxtEntry);\n      }\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n finally {\n    IOHelper.closeQuietly(bufferedReader);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 187,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1782,
        "startLineNumber" : 46,
        "startColumnNumber" : 82,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<RType,Set<RDotTxtEntry>> rTypeResourceMap=new HashMap<RType,Set<RDotTxtEntry>>();\n  if (StringUtil.isNotBlank(rTxtFullFilename) && FileUtil.isExist(rTxtFullFilename)) {\n    BufferedReader bufferedReader=null;\n    try {\n      final Pattern textSymbolLine=Pattern.compile(\"(\\\\S+) (\\\\S+) (\\\\S+) (.+)\");\n      bufferedReader=new BufferedReader(new InputStreamReader(new FileInputStream(rTxtFullFilename)));\n      String line=null;\n      while ((line=bufferedReader.readLine()) != null) {\n        Matcher matcher=textSymbolLine.matcher(line);\n        if (matcher.matches()) {\n          IdType idType=IdType.from(matcher.group(1));\n          RType rType=RType.valueOf(matcher.group(2).toUpperCase());\n          String name=matcher.group(3);\n          String idValue=matcher.group(4);\n          RDotTxtEntry rDotTxtEntry=new RDotTxtEntry(idType,rType,name,idValue);\n          Set<RDotTxtEntry> hashSet=null;\n          if (rTypeResourceMap.containsKey(rType)) {\n            hashSet=rTypeResourceMap.get(rType);\n          }\n else {\n            hashSet=new HashSet<RDotTxtEntry>();\n            rTypeResourceMap.put(rType,hashSet);\n          }\n          hashSet.add(rDotTxtEntry);\n        }\n      }\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n    }\n finally {\n      IOHelper.closeQuietly(bufferedReader);\n    }\n  }\n  return rTypeResourceMap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1977,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * read r txt\n * @param rTxtFullFilename\n * @return Map<RType, Set<RDotTxtEntry>>\n */\npublic static Map<RType,Set<RDotTxtEntry>> readRTxt(String rTxtFullFilename){\n  Map<RType,Set<RDotTxtEntry>> rTypeResourceMap=new HashMap<RType,Set<RDotTxtEntry>>();\n  if (StringUtil.isNotBlank(rTxtFullFilename) && FileUtil.isExist(rTxtFullFilename)) {\n    BufferedReader bufferedReader=null;\n    try {\n      final Pattern textSymbolLine=Pattern.compile(\"(\\\\S+) (\\\\S+) (\\\\S+) (.+)\");\n      bufferedReader=new BufferedReader(new InputStreamReader(new FileInputStream(rTxtFullFilename)));\n      String line=null;\n      while ((line=bufferedReader.readLine()) != null) {\n        Matcher matcher=textSymbolLine.matcher(line);\n        if (matcher.matches()) {\n          IdType idType=IdType.from(matcher.group(1));\n          RType rType=RType.valueOf(matcher.group(2).toUpperCase());\n          String name=matcher.group(3);\n          String idValue=matcher.group(4);\n          RDotTxtEntry rDotTxtEntry=new RDotTxtEntry(idType,rType,name,idValue);\n          Set<RDotTxtEntry> hashSet=null;\n          if (rTypeResourceMap.containsKey(rType)) {\n            hashSet=rTypeResourceMap.get(rType);\n          }\n else {\n            hashSet=new HashSet<RDotTxtEntry>();\n            rTypeResourceMap.put(rType,hashSet);\n          }\n          hashSet.add(rDotTxtEntry);\n        }\n      }\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n    }\n finally {\n      IOHelper.closeQuietly(bufferedReader);\n    }\n  }\n  return rTypeResourceMap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 59,
        "endColumnNumber" : 84
      },
      "nodeContext" : "RType rType=RType.valueOf(matcher.group(2).toUpperCase());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "com.tencent.tinker.build.aapt.RDotTxtEntry.RType"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 59,
    "startColumnNumber" : 38,
    "endLineNumber" : 59,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}