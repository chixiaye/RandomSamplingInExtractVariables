{
  "id" : 100,
  "expression" : "Instant",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/main/java/redis/clients/jedis/executors/ClusterCommandExecutor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Instant",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 39,
      "startColumnNumber" : 23,
      "endLineNumber" : 39,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 39,
        "startColumnNumber" : 23,
        "endLineNumber" : 39,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Instant.now()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 39,
        "startColumnNumber" : 23,
        "endLineNumber" : 39,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Instant.now().plus(maxTotalRetriesDuration)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 66
      },
      "nodeContext" : "deadline=Instant.now().plus(maxTotalRetriesDuration)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Instant deadline=Instant.now().plus(maxTotalRetriesDuration);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2513,
        "startLineNumber" : 38,
        "startColumnNumber" : 68,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Instant deadline=Instant.now().plus(maxTotalRetriesDuration);\n  JedisRedirectionException redirect=null;\n  int consecutiveConnectionFailures=0;\n  Exception lastException=null;\n  for (int attemptsLeft=this.maxAttempts; attemptsLeft > 0; attemptsLeft--) {\n    Connection connection=null;\n    try {\n      if (redirect != null) {\n        connection=provider.getConnection(redirect.getTargetNode());\n        if (redirect instanceof JedisAskDataException) {\n          connection.executeCommand(Protocol.Command.ASKING);\n        }\n      }\n else {\n        connection=provider.getConnection(commandObject.getArguments());\n      }\n      return execute(connection,commandObject);\n    }\n catch (    JedisClusterOperationException jnrcne) {\n      throw jnrcne;\n    }\ncatch (    JedisConnectionException jce) {\n      lastException=jce;\n      ++consecutiveConnectionFailures;\n      log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n      boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n      if (reset) {\n        consecutiveConnectionFailures=0;\n        redirect=null;\n      }\n    }\ncatch (    JedisRedirectionException jre) {\n      if (lastException == null || lastException instanceof JedisRedirectionException) {\n        lastException=jre;\n      }\n      log.debug(\"Redirected by server to {}\",jre.getTargetNode());\n      consecutiveConnectionFailures=0;\n      redirect=jre;\n      if (jre instanceof JedisMovedDataException) {\n        provider.renewSlotCache(connection);\n      }\n    }\n finally {\n      IOUtils.closeQuietly(connection);\n    }\n    if (Instant.now().isAfter(deadline)) {\n      throw new JedisClusterOperationException(\"Cluster retry deadline exceeded.\");\n    }\n  }\n  JedisClusterOperationException maxAttemptsException=new JedisClusterOperationException(\"No more cluster attempts left.\");\n  maxAttemptsException.addSuppressed(lastException);\n  throw maxAttemptsException;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2592,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public final <T>T executeCommand(CommandObject<T> commandObject){\n  Instant deadline=Instant.now().plus(maxTotalRetriesDuration);\n  JedisRedirectionException redirect=null;\n  int consecutiveConnectionFailures=0;\n  Exception lastException=null;\n  for (int attemptsLeft=this.maxAttempts; attemptsLeft > 0; attemptsLeft--) {\n    Connection connection=null;\n    try {\n      if (redirect != null) {\n        connection=provider.getConnection(redirect.getTargetNode());\n        if (redirect instanceof JedisAskDataException) {\n          connection.executeCommand(Protocol.Command.ASKING);\n        }\n      }\n else {\n        connection=provider.getConnection(commandObject.getArguments());\n      }\n      return execute(connection,commandObject);\n    }\n catch (    JedisClusterOperationException jnrcne) {\n      throw jnrcne;\n    }\ncatch (    JedisConnectionException jce) {\n      lastException=jce;\n      ++consecutiveConnectionFailures;\n      log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n      boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n      if (reset) {\n        consecutiveConnectionFailures=0;\n        redirect=null;\n      }\n    }\ncatch (    JedisRedirectionException jre) {\n      if (lastException == null || lastException instanceof JedisRedirectionException) {\n        lastException=jre;\n      }\n      log.debug(\"Redirected by server to {}\",jre.getTargetNode());\n      consecutiveConnectionFailures=0;\n      redirect=jre;\n      if (jre instanceof JedisMovedDataException) {\n        provider.renewSlotCache(connection);\n      }\n    }\n finally {\n      IOUtils.closeQuietly(connection);\n    }\n    if (Instant.now().isAfter(deadline)) {\n      throw new JedisClusterOperationException(\"Cluster retry deadline exceeded.\");\n    }\n  }\n  JedisClusterOperationException maxAttemptsException=new JedisClusterOperationException(\"No more cluster attempts left.\");\n  maxAttemptsException.addSuppressed(lastException);\n  throw maxAttemptsException;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 244,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Instant deadline=Instant.now().plus(maxTotalRetriesDuration);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.time.Instant"
  }, {
    "nodeContext" : "Instant",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 87,
      "startColumnNumber" : 10,
      "endLineNumber" : 87,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 87,
        "startColumnNumber" : 10,
        "endLineNumber" : 87,
        "endColumnNumber" : 23
      },
      "nodeContext" : "Instant.now()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 87,
        "startColumnNumber" : 10,
        "endLineNumber" : 87,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Instant.now().isAfter(deadline)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 87,
        "startColumnNumber" : 6,
        "endLineNumber" : 89,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (Instant.now().isAfter(deadline)) {\n  throw new JedisClusterOperationException(\"Cluster retry deadline exceeded.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1996,
        "startLineNumber" : 44,
        "startColumnNumber" : 80,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Connection connection=null;\n  try {\n    if (redirect != null) {\n      connection=provider.getConnection(redirect.getTargetNode());\n      if (redirect instanceof JedisAskDataException) {\n        connection.executeCommand(Protocol.Command.ASKING);\n      }\n    }\n else {\n      connection=provider.getConnection(commandObject.getArguments());\n    }\n    return execute(connection,commandObject);\n  }\n catch (  JedisClusterOperationException jnrcne) {\n    throw jnrcne;\n  }\ncatch (  JedisConnectionException jce) {\n    lastException=jce;\n    ++consecutiveConnectionFailures;\n    log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n    boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n    if (reset) {\n      consecutiveConnectionFailures=0;\n      redirect=null;\n    }\n  }\ncatch (  JedisRedirectionException jre) {\n    if (lastException == null || lastException instanceof JedisRedirectionException) {\n      lastException=jre;\n    }\n    log.debug(\"Redirected by server to {}\",jre.getTargetNode());\n    consecutiveConnectionFailures=0;\n    redirect=jre;\n    if (jre instanceof JedisMovedDataException) {\n      provider.renewSlotCache(connection);\n    }\n  }\n finally {\n    IOUtils.closeQuietly(connection);\n  }\n  if (Instant.now().isAfter(deadline)) {\n    throw new JedisClusterOperationException(\"Cluster retry deadline exceeded.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2072,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int attemptsLeft=this.maxAttempts; attemptsLeft > 0; attemptsLeft--) {\n  Connection connection=null;\n  try {\n    if (redirect != null) {\n      connection=provider.getConnection(redirect.getTargetNode());\n      if (redirect instanceof JedisAskDataException) {\n        connection.executeCommand(Protocol.Command.ASKING);\n      }\n    }\n else {\n      connection=provider.getConnection(commandObject.getArguments());\n    }\n    return execute(connection,commandObject);\n  }\n catch (  JedisClusterOperationException jnrcne) {\n    throw jnrcne;\n  }\ncatch (  JedisConnectionException jce) {\n    lastException=jce;\n    ++consecutiveConnectionFailures;\n    log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n    boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n    if (reset) {\n      consecutiveConnectionFailures=0;\n      redirect=null;\n    }\n  }\ncatch (  JedisRedirectionException jre) {\n    if (lastException == null || lastException instanceof JedisRedirectionException) {\n      lastException=jre;\n    }\n    log.debug(\"Redirected by server to {}\",jre.getTargetNode());\n    consecutiveConnectionFailures=0;\n    redirect=jre;\n    if (jre instanceof JedisMovedDataException) {\n      provider.renewSlotCache(connection);\n    }\n  }\n finally {\n    IOUtils.closeQuietly(connection);\n  }\n  if (Instant.now().isAfter(deadline)) {\n    throw new JedisClusterOperationException(\"Cluster retry deadline exceeded.\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 182,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2513,
        "startLineNumber" : 38,
        "startColumnNumber" : 68,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Instant deadline=Instant.now().plus(maxTotalRetriesDuration);\n  JedisRedirectionException redirect=null;\n  int consecutiveConnectionFailures=0;\n  Exception lastException=null;\n  for (int attemptsLeft=this.maxAttempts; attemptsLeft > 0; attemptsLeft--) {\n    Connection connection=null;\n    try {\n      if (redirect != null) {\n        connection=provider.getConnection(redirect.getTargetNode());\n        if (redirect instanceof JedisAskDataException) {\n          connection.executeCommand(Protocol.Command.ASKING);\n        }\n      }\n else {\n        connection=provider.getConnection(commandObject.getArguments());\n      }\n      return execute(connection,commandObject);\n    }\n catch (    JedisClusterOperationException jnrcne) {\n      throw jnrcne;\n    }\ncatch (    JedisConnectionException jce) {\n      lastException=jce;\n      ++consecutiveConnectionFailures;\n      log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n      boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n      if (reset) {\n        consecutiveConnectionFailures=0;\n        redirect=null;\n      }\n    }\ncatch (    JedisRedirectionException jre) {\n      if (lastException == null || lastException instanceof JedisRedirectionException) {\n        lastException=jre;\n      }\n      log.debug(\"Redirected by server to {}\",jre.getTargetNode());\n      consecutiveConnectionFailures=0;\n      redirect=jre;\n      if (jre instanceof JedisMovedDataException) {\n        provider.renewSlotCache(connection);\n      }\n    }\n finally {\n      IOUtils.closeQuietly(connection);\n    }\n    if (Instant.now().isAfter(deadline)) {\n      throw new JedisClusterOperationException(\"Cluster retry deadline exceeded.\");\n    }\n  }\n  JedisClusterOperationException maxAttemptsException=new JedisClusterOperationException(\"No more cluster attempts left.\");\n  maxAttemptsException.addSuppressed(lastException);\n  throw maxAttemptsException;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2592,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public final <T>T executeCommand(CommandObject<T> commandObject){\n  Instant deadline=Instant.now().plus(maxTotalRetriesDuration);\n  JedisRedirectionException redirect=null;\n  int consecutiveConnectionFailures=0;\n  Exception lastException=null;\n  for (int attemptsLeft=this.maxAttempts; attemptsLeft > 0; attemptsLeft--) {\n    Connection connection=null;\n    try {\n      if (redirect != null) {\n        connection=provider.getConnection(redirect.getTargetNode());\n        if (redirect instanceof JedisAskDataException) {\n          connection.executeCommand(Protocol.Command.ASKING);\n        }\n      }\n else {\n        connection=provider.getConnection(commandObject.getArguments());\n      }\n      return execute(connection,commandObject);\n    }\n catch (    JedisClusterOperationException jnrcne) {\n      throw jnrcne;\n    }\ncatch (    JedisConnectionException jce) {\n      lastException=jce;\n      ++consecutiveConnectionFailures;\n      log.debug(\"Failed connecting to Redis: {}\",connection,jce);\n      boolean reset=handleConnectionProblem(attemptsLeft - 1,consecutiveConnectionFailures,deadline);\n      if (reset) {\n        consecutiveConnectionFailures=0;\n        redirect=null;\n      }\n    }\ncatch (    JedisRedirectionException jre) {\n      if (lastException == null || lastException instanceof JedisRedirectionException) {\n        lastException=jre;\n      }\n      log.debug(\"Redirected by server to {}\",jre.getTargetNode());\n      consecutiveConnectionFailures=0;\n      redirect=jre;\n      if (jre instanceof JedisMovedDataException) {\n        provider.renewSlotCache(connection);\n      }\n    }\n finally {\n      IOUtils.closeQuietly(connection);\n    }\n    if (Instant.now().isAfter(deadline)) {\n      throw new JedisClusterOperationException(\"Cluster retry deadline exceeded.\");\n    }\n  }\n  JedisClusterOperationException maxAttemptsException=new JedisClusterOperationException(\"No more cluster attempts left.\");\n  maxAttemptsException.addSuppressed(lastException);\n  throw maxAttemptsException;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 244,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 87,
        "startColumnNumber" : 10,
        "endLineNumber" : 87,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Instant.now().isAfter(deadline)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.time.Instant"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 39,
    "startColumnNumber" : 23,
    "endLineNumber" : 39,
    "endColumnNumber" : 30
  }, {
    "charLength" : 7,
    "startLineNumber" : 87,
    "startColumnNumber" : 10,
    "endLineNumber" : 87,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}