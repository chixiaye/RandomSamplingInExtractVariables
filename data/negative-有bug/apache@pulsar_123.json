{
  "id" : 123,
  "expression" : "record",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/sink/PulsarSink.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 189,
      "startColumnNumber" : 38,
      "endLineNumber" : 189,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 189,
        "startColumnNumber" : 38,
        "endLineNumber" : 189,
        "endColumnNumber" : 62
      },
      "nodeContext" : "record.getSourceRecord()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 189,
        "startColumnNumber" : 26,
        "endLineNumber" : 189,
        "endColumnNumber" : 62
      },
      "nodeContext" : "srcRecord=record.getSourceRecord()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 189,
        "startColumnNumber" : 16,
        "endLineNumber" : 189,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Record<T> srcRecord=record.getSourceRecord();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1078,
        "startLineNumber" : 188,
        "startColumnNumber" : 32,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Record<T> srcRecord=record.getSourceRecord();\n  if (failSource) {\n    srcRecord.fail();\n  }\n  String topic=record.getDestinationTopic().orElse(pulsarSinkConfig.getTopic());\n  String errorMsg=null;\n  if (srcRecord instanceof PulsarRecord) {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s] with src message id [%s]\",topic,throwable.getMessage(),((PulsarRecord)srcRecord).getMessageId());\n  }\n else {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s]\",topic,throwable.getMessage());\n    if (record.getRecordSequence().isPresent()) {\n      errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n    }\n  }\n  log.error(errorMsg);\n  stats.incrSinkExceptions(new Exception(errorMsg));\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 188,
        "startColumnNumber" : 19,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "throwable -> {\n  Record<T> srcRecord=record.getSourceRecord();\n  if (failSource) {\n    srcRecord.fail();\n  }\n  String topic=record.getDestinationTopic().orElse(pulsarSinkConfig.getTopic());\n  String errorMsg=null;\n  if (srcRecord instanceof PulsarRecord) {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s] with src message id [%s]\",topic,throwable.getMessage(),((PulsarRecord)srcRecord).getMessageId());\n  }\n else {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s]\",topic,throwable.getMessage());\n    if (record.getRecordSequence().isPresent()) {\n      errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n    }\n  }\n  log.error(errorMsg);\n  stats.incrSinkExceptions(new Exception(errorMsg));\n  return null;\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 113,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 189,
        "startColumnNumber" : 16,
        "endLineNumber" : 189,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Record<T> srcRecord=record.getSourceRecord();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.functions.instance.SinkRecord<T>"
  }, {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 194,
      "startColumnNumber" : 31,
      "endLineNumber" : 194,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 194,
        "startColumnNumber" : 31,
        "endLineNumber" : 194,
        "endColumnNumber" : 59
      },
      "nodeContext" : "record.getDestinationTopic()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 194,
        "startColumnNumber" : 31,
        "endLineNumber" : 194,
        "endColumnNumber" : 95
      },
      "nodeContext" : "record.getDestinationTopic().orElse(pulsarSinkConfig.getTopic())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 194,
        "startColumnNumber" : 23,
        "endLineNumber" : 194,
        "endColumnNumber" : 95
      },
      "nodeContext" : "topic=record.getDestinationTopic().orElse(pulsarSinkConfig.getTopic())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 194,
        "startColumnNumber" : 16,
        "endLineNumber" : 194,
        "endColumnNumber" : 96
      },
      "nodeContext" : "String topic=record.getDestinationTopic().orElse(pulsarSinkConfig.getTopic());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1078,
        "startLineNumber" : 188,
        "startColumnNumber" : 32,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Record<T> srcRecord=record.getSourceRecord();\n  if (failSource) {\n    srcRecord.fail();\n  }\n  String topic=record.getDestinationTopic().orElse(pulsarSinkConfig.getTopic());\n  String errorMsg=null;\n  if (srcRecord instanceof PulsarRecord) {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s] with src message id [%s]\",topic,throwable.getMessage(),((PulsarRecord)srcRecord).getMessageId());\n  }\n else {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s]\",topic,throwable.getMessage());\n    if (record.getRecordSequence().isPresent()) {\n      errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n    }\n  }\n  log.error(errorMsg);\n  stats.incrSinkExceptions(new Exception(errorMsg));\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 188,
        "startColumnNumber" : 19,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "throwable -> {\n  Record<T> srcRecord=record.getSourceRecord();\n  if (failSource) {\n    srcRecord.fail();\n  }\n  String topic=record.getDestinationTopic().orElse(pulsarSinkConfig.getTopic());\n  String errorMsg=null;\n  if (srcRecord instanceof PulsarRecord) {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s] with src message id [%s]\",topic,throwable.getMessage(),((PulsarRecord)srcRecord).getMessageId());\n  }\n else {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s]\",topic,throwable.getMessage());\n    if (record.getRecordSequence().isPresent()) {\n      errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n    }\n  }\n  log.error(errorMsg);\n  stats.incrSinkExceptions(new Exception(errorMsg));\n  return null;\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 113,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 194,
        "startColumnNumber" : 16,
        "endLineNumber" : 194,
        "endColumnNumber" : 96
      },
      "nodeContext" : "String topic=record.getDestinationTopic().orElse(pulsarSinkConfig.getTopic());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.functions.instance.SinkRecord<T>"
  }, {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 201,
      "startColumnNumber" : 24,
      "endLineNumber" : 201,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 201,
        "startColumnNumber" : 24,
        "endLineNumber" : 201,
        "endColumnNumber" : 50
      },
      "nodeContext" : "record.getRecordSequence()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 201,
        "startColumnNumber" : 24,
        "endLineNumber" : 201,
        "endColumnNumber" : 62
      },
      "nodeContext" : "record.getRecordSequence().isPresent()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 201,
        "startColumnNumber" : 20,
        "endLineNumber" : 203,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (record.getRecordSequence().isPresent()) {\n  errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 199,
        "startColumnNumber" : 23,
        "endLineNumber" : 204,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s]\",topic,throwable.getMessage());\n  if (record.getRecordSequence().isPresent()) {\n    errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 197,
        "startColumnNumber" : 16,
        "endLineNumber" : 204,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (srcRecord instanceof PulsarRecord) {\n  errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s] with src message id [%s]\",topic,throwable.getMessage(),((PulsarRecord)srcRecord).getMessageId());\n}\n else {\n  errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s]\",topic,throwable.getMessage());\n  if (record.getRecordSequence().isPresent()) {\n    errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1078,
        "startLineNumber" : 188,
        "startColumnNumber" : 32,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Record<T> srcRecord=record.getSourceRecord();\n  if (failSource) {\n    srcRecord.fail();\n  }\n  String topic=record.getDestinationTopic().orElse(pulsarSinkConfig.getTopic());\n  String errorMsg=null;\n  if (srcRecord instanceof PulsarRecord) {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s] with src message id [%s]\",topic,throwable.getMessage(),((PulsarRecord)srcRecord).getMessageId());\n  }\n else {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s]\",topic,throwable.getMessage());\n    if (record.getRecordSequence().isPresent()) {\n      errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n    }\n  }\n  log.error(errorMsg);\n  stats.incrSinkExceptions(new Exception(errorMsg));\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 188,
        "startColumnNumber" : 19,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "throwable -> {\n  Record<T> srcRecord=record.getSourceRecord();\n  if (failSource) {\n    srcRecord.fail();\n  }\n  String topic=record.getDestinationTopic().orElse(pulsarSinkConfig.getTopic());\n  String errorMsg=null;\n  if (srcRecord instanceof PulsarRecord) {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s] with src message id [%s]\",topic,throwable.getMessage(),((PulsarRecord)srcRecord).getMessageId());\n  }\n else {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s]\",topic,throwable.getMessage());\n    if (record.getRecordSequence().isPresent()) {\n      errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n    }\n  }\n  log.error(errorMsg);\n  stats.incrSinkExceptions(new Exception(errorMsg));\n  return null;\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 113,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 201,
        "startColumnNumber" : 24,
        "endLineNumber" : 201,
        "endColumnNumber" : 62
      },
      "nodeContext" : "record.getRecordSequence().isPresent()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.functions.instance.SinkRecord<T>"
  }, {
    "nodeContext" : "record",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 202,
      "startColumnNumber" : 90,
      "endLineNumber" : 202,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 202,
        "startColumnNumber" : 90,
        "endLineNumber" : 202,
        "endColumnNumber" : 116
      },
      "nodeContext" : "record.getRecordSequence()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 202,
        "startColumnNumber" : 90,
        "endLineNumber" : 202,
        "endColumnNumber" : 122
      },
      "nodeContext" : "record.getRecordSequence().get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 202,
        "startColumnNumber" : 35,
        "endLineNumber" : 202,
        "endColumnNumber" : 123
      },
      "nodeContext" : "String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 202,
        "startColumnNumber" : 24,
        "endLineNumber" : 202,
        "endColumnNumber" : 123
      },
      "nodeContext" : "errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 202,
        "startColumnNumber" : 24,
        "endLineNumber" : 202,
        "endColumnNumber" : 124
      },
      "nodeContext" : "errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 201,
        "startColumnNumber" : 64,
        "endLineNumber" : 203,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 201,
        "startColumnNumber" : 20,
        "endLineNumber" : 203,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (record.getRecordSequence().isPresent()) {\n  errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 199,
        "startColumnNumber" : 23,
        "endLineNumber" : 204,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s]\",topic,throwable.getMessage());\n  if (record.getRecordSequence().isPresent()) {\n    errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 197,
        "startColumnNumber" : 16,
        "endLineNumber" : 204,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (srcRecord instanceof PulsarRecord) {\n  errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s] with src message id [%s]\",topic,throwable.getMessage(),((PulsarRecord)srcRecord).getMessageId());\n}\n else {\n  errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s]\",topic,throwable.getMessage());\n  if (record.getRecordSequence().isPresent()) {\n    errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1078,
        "startLineNumber" : 188,
        "startColumnNumber" : 32,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Record<T> srcRecord=record.getSourceRecord();\n  if (failSource) {\n    srcRecord.fail();\n  }\n  String topic=record.getDestinationTopic().orElse(pulsarSinkConfig.getTopic());\n  String errorMsg=null;\n  if (srcRecord instanceof PulsarRecord) {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s] with src message id [%s]\",topic,throwable.getMessage(),((PulsarRecord)srcRecord).getMessageId());\n  }\n else {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s]\",topic,throwable.getMessage());\n    if (record.getRecordSequence().isPresent()) {\n      errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n    }\n  }\n  log.error(errorMsg);\n  stats.incrSinkExceptions(new Exception(errorMsg));\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 188,
        "startColumnNumber" : 19,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "throwable -> {\n  Record<T> srcRecord=record.getSourceRecord();\n  if (failSource) {\n    srcRecord.fail();\n  }\n  String topic=record.getDestinationTopic().orElse(pulsarSinkConfig.getTopic());\n  String errorMsg=null;\n  if (srcRecord instanceof PulsarRecord) {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s] with src message id [%s]\",topic,throwable.getMessage(),((PulsarRecord)srcRecord).getMessageId());\n  }\n else {\n    errorMsg=String.format(\"Failed to publish to topic [%s] with error [%s]\",topic,throwable.getMessage());\n    if (record.getRecordSequence().isPresent()) {\n      errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n    }\n  }\n  log.error(errorMsg);\n  stats.incrSinkExceptions(new Exception(errorMsg));\n  return null;\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 113,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 202,
        "startColumnNumber" : 24,
        "endLineNumber" : 202,
        "endColumnNumber" : 124
      },
      "nodeContext" : "errorMsg=String.format(errorMsg + \" with src sequence id [%s]\",record.getRecordSequence().get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.functions.instance.SinkRecord<T>"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 189,
    "startColumnNumber" : 38,
    "endLineNumber" : 189,
    "endColumnNumber" : 44
  }, {
    "charLength" : 6,
    "startLineNumber" : 194,
    "startColumnNumber" : 31,
    "endLineNumber" : 194,
    "endColumnNumber" : 37
  }, {
    "charLength" : 6,
    "startLineNumber" : 201,
    "startColumnNumber" : 24,
    "endLineNumber" : 201,
    "endColumnNumber" : 30
  }, {
    "charLength" : 6,
    "startLineNumber" : 202,
    "startColumnNumber" : 90,
    "endLineNumber" : 202,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  } ]
}