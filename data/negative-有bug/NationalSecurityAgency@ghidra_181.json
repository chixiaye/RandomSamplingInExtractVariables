{
  "id" : 181,
  "expression" : "offset2",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/StackVariableComparator.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "offset2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 45,
      "startColumnNumber" : 7,
      "endLineNumber" : 45,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 45,
        "startColumnNumber" : 7,
        "endLineNumber" : 45,
        "endColumnNumber" : 22
      },
      "nodeContext" : "offset2 == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 45,
        "startColumnNumber" : 3,
        "endLineNumber" : 47,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (offset2 == null) {\n  return 0;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 44,
        "startColumnNumber" : 23,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (offset2 == null) {\n    return 0;\n  }\n  return 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (offset1 == null) {\n  if (offset2 == null) {\n    return 0;\n  }\n  return 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 39,
        "startColumnNumber" : 46,
        "endLineNumber" : 60,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Integer offset1=getStackOffset(obj1,\"obj1\");\n  Integer offset2=getStackOffset(obj2,\"obj2\");\n  if (offset1 == null) {\n    if (offset2 == null) {\n      return 0;\n    }\n    return 1;\n  }\n  if (offset2 == null) {\n    return -1;\n  }\n  if (offset1 < offset2) {\n    return -1;\n  }\n  if (offset2 < offset1) {\n    return 1;\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 60,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Compares a stack variable offsets. One or both objects must be a StackVariable.\n * @param obj1 a StackVariable or Integer\n * @param obj2 a StackVariable or Integer<P>\n * @return a negative integer, zero, or a positive integerif the first argument is less than, equal to, or greater than the second.\n */\n@Override public int compare(Object obj1,Object obj2){\n  Integer offset1=getStackOffset(obj1,\"obj1\");\n  Integer offset2=getStackOffset(obj2,\"obj2\");\n  if (offset1 == null) {\n    if (offset2 == null) {\n      return 0;\n    }\n    return 1;\n  }\n  if (offset2 == null) {\n    return -1;\n  }\n  if (offset1 < offset2) {\n    return -1;\n  }\n  if (offset2 < offset1) {\n    return 1;\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 45,
        "startColumnNumber" : 7,
        "endLineNumber" : 45,
        "endColumnNumber" : 22
      },
      "nodeContext" : "offset2 == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  }, {
    "nodeContext" : "offset2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 50,
      "startColumnNumber" : 6,
      "endLineNumber" : 50,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 21
      },
      "nodeContext" : "offset2 == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (offset2 == null) {\n  return -1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 39,
        "startColumnNumber" : 46,
        "endLineNumber" : 60,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Integer offset1=getStackOffset(obj1,\"obj1\");\n  Integer offset2=getStackOffset(obj2,\"obj2\");\n  if (offset1 == null) {\n    if (offset2 == null) {\n      return 0;\n    }\n    return 1;\n  }\n  if (offset2 == null) {\n    return -1;\n  }\n  if (offset1 < offset2) {\n    return -1;\n  }\n  if (offset2 < offset1) {\n    return 1;\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 60,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Compares a stack variable offsets. One or both objects must be a StackVariable.\n * @param obj1 a StackVariable or Integer\n * @param obj2 a StackVariable or Integer<P>\n * @return a negative integer, zero, or a positive integerif the first argument is less than, equal to, or greater than the second.\n */\n@Override public int compare(Object obj1,Object obj2){\n  Integer offset1=getStackOffset(obj1,\"obj1\");\n  Integer offset2=getStackOffset(obj2,\"obj2\");\n  if (offset1 == null) {\n    if (offset2 == null) {\n      return 0;\n    }\n    return 1;\n  }\n  if (offset2 == null) {\n    return -1;\n  }\n  if (offset1 < offset2) {\n    return -1;\n  }\n  if (offset2 < offset1) {\n    return 1;\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 21
      },
      "nodeContext" : "offset2 == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  }, {
    "nodeContext" : "offset2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 53,
      "startColumnNumber" : 16,
      "endLineNumber" : 53,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 23
      },
      "nodeContext" : "offset1 < offset2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (offset1 < offset2) {\n  return -1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 39,
        "startColumnNumber" : 46,
        "endLineNumber" : 60,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Integer offset1=getStackOffset(obj1,\"obj1\");\n  Integer offset2=getStackOffset(obj2,\"obj2\");\n  if (offset1 == null) {\n    if (offset2 == null) {\n      return 0;\n    }\n    return 1;\n  }\n  if (offset2 == null) {\n    return -1;\n  }\n  if (offset1 < offset2) {\n    return -1;\n  }\n  if (offset2 < offset1) {\n    return 1;\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 60,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Compares a stack variable offsets. One or both objects must be a StackVariable.\n * @param obj1 a StackVariable or Integer\n * @param obj2 a StackVariable or Integer<P>\n * @return a negative integer, zero, or a positive integerif the first argument is less than, equal to, or greater than the second.\n */\n@Override public int compare(Object obj1,Object obj2){\n  Integer offset1=getStackOffset(obj1,\"obj1\");\n  Integer offset2=getStackOffset(obj2,\"obj2\");\n  if (offset1 == null) {\n    if (offset2 == null) {\n      return 0;\n    }\n    return 1;\n  }\n  if (offset2 == null) {\n    return -1;\n  }\n  if (offset1 < offset2) {\n    return -1;\n  }\n  if (offset2 < offset1) {\n    return 1;\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 53,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 23
      },
      "nodeContext" : "offset1 < offset2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  }, {
    "nodeContext" : "offset2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 56,
      "startColumnNumber" : 6,
      "endLineNumber" : 56,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 23
      },
      "nodeContext" : "offset2 < offset1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (offset2 < offset1) {\n  return 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 39,
        "startColumnNumber" : 46,
        "endLineNumber" : 60,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Integer offset1=getStackOffset(obj1,\"obj1\");\n  Integer offset2=getStackOffset(obj2,\"obj2\");\n  if (offset1 == null) {\n    if (offset2 == null) {\n      return 0;\n    }\n    return 1;\n  }\n  if (offset2 == null) {\n    return -1;\n  }\n  if (offset1 < offset2) {\n    return -1;\n  }\n  if (offset2 < offset1) {\n    return 1;\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 60,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Compares a stack variable offsets. One or both objects must be a StackVariable.\n * @param obj1 a StackVariable or Integer\n * @param obj2 a StackVariable or Integer<P>\n * @return a negative integer, zero, or a positive integerif the first argument is less than, equal to, or greater than the second.\n */\n@Override public int compare(Object obj1,Object obj2){\n  Integer offset1=getStackOffset(obj1,\"obj1\");\n  Integer offset2=getStackOffset(obj2,\"obj2\");\n  if (offset1 == null) {\n    if (offset2 == null) {\n      return 0;\n    }\n    return 1;\n  }\n  if (offset2 == null) {\n    return -1;\n  }\n  if (offset1 < offset2) {\n    return -1;\n  }\n  if (offset2 < offset1) {\n    return 1;\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 23
      },
      "nodeContext" : "offset2 < offset1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 45,
    "startColumnNumber" : 7,
    "endLineNumber" : 45,
    "endColumnNumber" : 14
  }, {
    "charLength" : 7,
    "startLineNumber" : 50,
    "startColumnNumber" : 6,
    "endLineNumber" : 50,
    "endColumnNumber" : 13
  }, {
    "charLength" : 7,
    "startLineNumber" : 53,
    "startColumnNumber" : 16,
    "endLineNumber" : 53,
    "endColumnNumber" : 23
  }, {
    "charLength" : 7,
    "startLineNumber" : 56,
    "startColumnNumber" : 6,
    "endLineNumber" : 56,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}