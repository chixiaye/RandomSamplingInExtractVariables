{
  "id" : 105,
  "expression" : "false",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/test/java/com/submitted/resultmap/PeerListResultTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 69,
      "startColumnNumber" : 18,
      "endLineNumber" : 69,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 69,
        "startColumnNumber" : 6,
        "endLineNumber" : 69,
        "endColumnNumber" : 23
      },
      "nodeContext" : "dbCreated=false",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 69,
        "startColumnNumber" : 6,
        "endLineNumber" : 69,
        "endColumnNumber" : 24
      },
      "nodeContext" : "dbCreated=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 67,
        "startColumnNumber" : 26,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  fail(e.getMessage());\n  dbCreated=false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 67,
        "startColumnNumber" : 6,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (Exception e) {\n  fail(e.getMessage());\n  dbCreated=false;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1866,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Class.forName(\"org.hsqldb.jdbcDriver\");\n  conn=DriverManager.getConnection(\"jdbc:hsqldb:mem:aname\",\"sa\",\"\");\n  st=conn.createStatement();\n  st.execute(\"drop table Person if exists\");\n  st.execute(\"create table Person(personId int not null, name varchar(50), primary key (personId))\");\n  st.execute(\"drop table PhoneNumber if exists\");\n  st.execute(\"create table PhoneNumber(personId int not null, phoneId int not null, phoneNumber varchar(50), primary key (personId, phoneId))\");\n  st.execute(\"drop table Address if exists\");\n  st.execute(\"create table Address(personId int not null, addressId int not null, address varchar(50), primary key (personId, addressId))\");\n  st.execute(\"insert into Person (personId, name) values(1, 'Fred')\");\n  st.execute(\"insert into PhoneNumber (personId, phoneId, phoneNumber) values(1, 1, '111-2222')\");\n  st.execute(\"insert into PhoneNumber (personId, phoneId, phoneNumber) values(1, 2, '333-4444')\");\n  st.execute(\"insert into Address (personId, addressId, address) values(1, 1, 'Main Street')\");\n  st.execute(\"insert into Person (personId, name) values(2, 'Wilma')\");\n  st.execute(\"insert into PhoneNumber (personId, phoneId, phoneNumber) values(2, 1, '555-6666')\");\n  st.execute(\"insert into Address (personId, addressId, address) values(2, 1, 'Elm Street')\");\n  st.execute(\"insert into Address (personId, addressId, address) values(2, 2, 'Maple Lane')\");\n}\n catch (Exception e) {\n  fail(e.getMessage());\n  dbCreated=false;\n}\n finally {\n  try {\n    if (st != null) {\n      st.close();\n    }\n    if (conn != null) {\n      conn.close();\n    }\n  }\n catch (  SQLException e) {\n    ;\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 136,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2337,
        "startLineNumber" : 37,
        "startColumnNumber" : 42,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Connection conn=null;\n  Statement st=null;\n  boolean dbCreated=true;\n  try {\n    Class.forName(\"org.hsqldb.jdbcDriver\");\n    conn=DriverManager.getConnection(\"jdbc:hsqldb:mem:aname\",\"sa\",\"\");\n    st=conn.createStatement();\n    st.execute(\"drop table Person if exists\");\n    st.execute(\"create table Person(personId int not null, name varchar(50), primary key (personId))\");\n    st.execute(\"drop table PhoneNumber if exists\");\n    st.execute(\"create table PhoneNumber(personId int not null, phoneId int not null, phoneNumber varchar(50), primary key (personId, phoneId))\");\n    st.execute(\"drop table Address if exists\");\n    st.execute(\"create table Address(personId int not null, addressId int not null, address varchar(50), primary key (personId, addressId))\");\n    st.execute(\"insert into Person (personId, name) values(1, 'Fred')\");\n    st.execute(\"insert into PhoneNumber (personId, phoneId, phoneNumber) values(1, 1, '111-2222')\");\n    st.execute(\"insert into PhoneNumber (personId, phoneId, phoneNumber) values(1, 2, '333-4444')\");\n    st.execute(\"insert into Address (personId, addressId, address) values(1, 1, 'Main Street')\");\n    st.execute(\"insert into Person (personId, name) values(2, 'Wilma')\");\n    st.execute(\"insert into PhoneNumber (personId, phoneId, phoneNumber) values(2, 1, '555-6666')\");\n    st.execute(\"insert into Address (personId, addressId, address) values(2, 1, 'Elm Street')\");\n    st.execute(\"insert into Address (personId, addressId, address) values(2, 2, 'Maple Lane')\");\n  }\n catch (  Exception e) {\n    fail(e.getMessage());\n    dbCreated=false;\n  }\n finally {\n    try {\n      if (st != null) {\n        st.close();\n      }\n      if (conn != null) {\n        conn.close();\n      }\n    }\n catch (    SQLException e) {\n      ;\n    }\n  }\n  if (dbCreated) {\n    String resource=\"com/submitted/resultmap/TestSqlMapConfig.xml\";\n    try {\n      Reader reader=Resources.getResourceAsReader(resource);\n      sqlMapClient=SqlMapClientBuilder.buildSqlMapClient(reader);\n    }\n catch (    IOException e) {\n      fail(e.getMessage());\n      sqlMapClient=null;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected void setUp() throws Exception {\n  Connection conn=null;\n  Statement st=null;\n  boolean dbCreated=true;\n  try {\n    Class.forName(\"org.hsqldb.jdbcDriver\");\n    conn=DriverManager.getConnection(\"jdbc:hsqldb:mem:aname\",\"sa\",\"\");\n    st=conn.createStatement();\n    st.execute(\"drop table Person if exists\");\n    st.execute(\"create table Person(personId int not null, name varchar(50), primary key (personId))\");\n    st.execute(\"drop table PhoneNumber if exists\");\n    st.execute(\"create table PhoneNumber(personId int not null, phoneId int not null, phoneNumber varchar(50), primary key (personId, phoneId))\");\n    st.execute(\"drop table Address if exists\");\n    st.execute(\"create table Address(personId int not null, addressId int not null, address varchar(50), primary key (personId, addressId))\");\n    st.execute(\"insert into Person (personId, name) values(1, 'Fred')\");\n    st.execute(\"insert into PhoneNumber (personId, phoneId, phoneNumber) values(1, 1, '111-2222')\");\n    st.execute(\"insert into PhoneNumber (personId, phoneId, phoneNumber) values(1, 2, '333-4444')\");\n    st.execute(\"insert into Address (personId, addressId, address) values(1, 1, 'Main Street')\");\n    st.execute(\"insert into Person (personId, name) values(2, 'Wilma')\");\n    st.execute(\"insert into PhoneNumber (personId, phoneId, phoneNumber) values(2, 1, '555-6666')\");\n    st.execute(\"insert into Address (personId, addressId, address) values(2, 1, 'Elm Street')\");\n    st.execute(\"insert into Address (personId, addressId, address) values(2, 2, 'Maple Lane')\");\n  }\n catch (  Exception e) {\n    fail(e.getMessage());\n    dbCreated=false;\n  }\n finally {\n    try {\n      if (st != null) {\n        st.close();\n      }\n      if (conn != null) {\n        conn.close();\n      }\n    }\n catch (    SQLException e) {\n      ;\n    }\n  }\n  if (dbCreated) {\n    String resource=\"com/submitted/resultmap/TestSqlMapConfig.xml\";\n    try {\n      Reader reader=Resources.getResourceAsReader(resource);\n      sqlMapClient=SqlMapClientBuilder.buildSqlMapClient(reader);\n    }\n catch (    IOException e) {\n      fail(e.getMessage());\n      sqlMapClient=null;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 69,
        "startColumnNumber" : 6,
        "endLineNumber" : 69,
        "endColumnNumber" : 24
      },
      "nodeContext" : "dbCreated=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 69,
    "startColumnNumber" : 18,
    "endLineNumber" : 69,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}