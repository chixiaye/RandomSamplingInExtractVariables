{
  "id" : 176,
  "expression" : "current",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushConnection.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "current",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 51,
      "startColumnNumber" : 34,
      "endLineNumber" : 51,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 51,
        "startColumnNumber" : 34,
        "endLineNumber" : 51,
        "endColumnNumber" : 62
      },
      "nodeContext" : "current - tkBktLastCheckTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 51,
        "startColumnNumber" : 21,
        "endLineNumber" : 51,
        "endColumnNumber" : 62
      },
      "nodeContext" : "timePassed=current - tkBktLastCheckTime",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 63
      },
      "nodeContext" : "final double timePassed=current - tkBktLastCheckTime;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 47,
        "startColumnNumber" : 48,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final double rate=TOKEN_BUCKET_RATE.get();\n  final double window=TOKEN_BUCKET_WINDOW.get();\n  final long current=System.currentTimeMillis();\n  final double timePassed=current - tkBktLastCheckTime;\n  tkBktLastCheckTime=current;\n  tkBktAllowance=tkBktAllowance + timePassed * (rate / window);\n  if (tkBktAllowance > rate) {\n    tkBktAllowance=rate;\n  }\n  if (tkBktAllowance < 1.0) {\n    return true;\n  }\n  tkBktAllowance=tkBktAllowance - 1.0;\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Implementation of TokenBucket algorithm to do rate limiting: http://stackoverflow.com/a/668327\n * @return true if should be rate limited, false if it is OK to send the message\n */\npublic synchronized boolean isRateLimited(){\n  final double rate=TOKEN_BUCKET_RATE.get();\n  final double window=TOKEN_BUCKET_WINDOW.get();\n  final long current=System.currentTimeMillis();\n  final double timePassed=current - tkBktLastCheckTime;\n  tkBktLastCheckTime=current;\n  tkBktAllowance=tkBktAllowance + timePassed * (rate / window);\n  if (tkBktAllowance > rate) {\n    tkBktAllowance=rate;\n  }\n  if (tkBktAllowance < 1.0) {\n    return true;\n  }\n  tkBktAllowance=tkBktAllowance - 1.0;\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 63
      },
      "nodeContext" : "final double timePassed=current - tkBktLastCheckTime;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "current",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 53,
      "startColumnNumber" : 29,
      "endLineNumber" : 53,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 36
      },
      "nodeContext" : "tkBktLastCheckTime=current",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 37
      },
      "nodeContext" : "tkBktLastCheckTime=current;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 47,
        "startColumnNumber" : 48,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final double rate=TOKEN_BUCKET_RATE.get();\n  final double window=TOKEN_BUCKET_WINDOW.get();\n  final long current=System.currentTimeMillis();\n  final double timePassed=current - tkBktLastCheckTime;\n  tkBktLastCheckTime=current;\n  tkBktAllowance=tkBktAllowance + timePassed * (rate / window);\n  if (tkBktAllowance > rate) {\n    tkBktAllowance=rate;\n  }\n  if (tkBktAllowance < 1.0) {\n    return true;\n  }\n  tkBktAllowance=tkBktAllowance - 1.0;\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Implementation of TokenBucket algorithm to do rate limiting: http://stackoverflow.com/a/668327\n * @return true if should be rate limited, false if it is OK to send the message\n */\npublic synchronized boolean isRateLimited(){\n  final double rate=TOKEN_BUCKET_RATE.get();\n  final double window=TOKEN_BUCKET_WINDOW.get();\n  final long current=System.currentTimeMillis();\n  final double timePassed=current - tkBktLastCheckTime;\n  tkBktLastCheckTime=current;\n  tkBktAllowance=tkBktAllowance + timePassed * (rate / window);\n  if (tkBktAllowance > rate) {\n    tkBktAllowance=rate;\n  }\n  if (tkBktAllowance < 1.0) {\n    return true;\n  }\n  tkBktAllowance=tkBktAllowance - 1.0;\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 37
      },
      "nodeContext" : "tkBktLastCheckTime=current;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 51,
    "startColumnNumber" : 34,
    "endLineNumber" : 51,
    "endColumnNumber" : 41
  }, {
    "charLength" : 7,
    "startLineNumber" : 53,
    "startColumnNumber" : 29,
    "endLineNumber" : 53,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}