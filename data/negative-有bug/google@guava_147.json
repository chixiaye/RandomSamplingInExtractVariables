{
  "id" : 147,
  "expression" : "Enums.getIfPresent(shadowTestEnum,constant.name())",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/base/EnumsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Enums.getIfPresent(shadowTestEnum,constant.name())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 105,
      "startColumnNumber" : 34,
      "endLineNumber" : 105,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 105,
        "startColumnNumber" : 25,
        "endLineNumber" : 105,
        "endColumnNumber" : 85
      },
      "nodeContext" : "result=Enums.getIfPresent(shadowTestEnum,constant.name())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 105,
        "startColumnNumber" : 6,
        "endLineNumber" : 105,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Optional<TestEnum> result=Enums.getIfPresent(shadowTestEnum,constant.name());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 104,
        "startColumnNumber" : 48,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<TestEnum> result=Enums.getIfPresent(shadowTestEnum,constant.name());\n  assertThat(result).isPresent();\n  shadowConstants.add(result.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (TestEnum constant : TestEnum.values()) {\n  Optional<TestEnum> result=Enums.getIfPresent(shadowTestEnum,constant.name());\n  assertThat(result).isPresent();\n  shadowConstants.add(result.get());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 957,
        "startLineNumber" : 95,
        "startColumnNumber" : 67,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  URLClassLoader shadowLoader=new URLClassLoader(getClassPathUrls(),null);\n  @SuppressWarnings(\"unchecked\") Class<TestEnum> shadowTestEnum=(Class<TestEnum>)Class.forName(TestEnum.class.getName(),false,shadowLoader);\n  assertNotSame(shadowTestEnum,TestEnum.class);\n  Set<Object> shadowConstants=new HashSet<>();\n  for (  TestEnum constant : TestEnum.values()) {\n    Optional<TestEnum> result=Enums.getIfPresent(shadowTestEnum,constant.name());\n    assertThat(result).isPresent();\n    shadowConstants.add(result.get());\n  }\n  assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()),shadowConstants);\n  Optional<TestEnum> result=Enums.getIfPresent(shadowTestEnum,\"blibby\");\n  assertThat(result).isAbsent();\n  return new WeakReference<>(shadowLoader);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1061,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@GwtIncompatible private WeakReference<?> doTestClassUnloading() throws Exception {\n  URLClassLoader shadowLoader=new URLClassLoader(getClassPathUrls(),null);\n  @SuppressWarnings(\"unchecked\") Class<TestEnum> shadowTestEnum=(Class<TestEnum>)Class.forName(TestEnum.class.getName(),false,shadowLoader);\n  assertNotSame(shadowTestEnum,TestEnum.class);\n  Set<Object> shadowConstants=new HashSet<>();\n  for (  TestEnum constant : TestEnum.values()) {\n    Optional<TestEnum> result=Enums.getIfPresent(shadowTestEnum,constant.name());\n    assertThat(result).isPresent();\n    shadowConstants.add(result.get());\n  }\n  assertEquals(ImmutableSet.<Object>copyOf(shadowTestEnum.getEnumConstants()),shadowConstants);\n  Optional<TestEnum> result=Enums.getIfPresent(shadowTestEnum,\"blibby\");\n  assertThat(result).isAbsent();\n  return new WeakReference<>(shadowLoader);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 105,
        "startColumnNumber" : 6,
        "endLineNumber" : 105,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Optional<TestEnum> result=Enums.getIfPresent(shadowTestEnum,constant.name());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "com.google.common.base.Optional<com.google.common.base.EnumsTest.TestEnum>"
  } ],
  "positionList" : [ {
    "charLength" : 51,
    "startLineNumber" : 105,
    "startColumnNumber" : 34,
    "endLineNumber" : 105,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}