{
  "id" : 294,
  "expression" : "\"ClassNameTest$InnerClass\"",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/util/ClassNameTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"ClassNameTest$InnerClass\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 35,
      "startColumnNumber" : 19,
      "endLineNumber" : 35,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(ClassName.getSimpleNameWithOuter(InnerClass.class)).isEqualTo(\"ClassNameTest$InnerClass\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertThat(ClassName.getSimpleNameWithOuter(InnerClass.class)).isEqualTo(\"ClassNameTest$InnerClass\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 33,
        "startColumnNumber" : 31,
        "endLineNumber" : 36,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(ClassName.getSimpleNameWithOuter(InnerClass.class)).isEqualTo(\"ClassNameTest$InnerClass\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 36,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void innerClassName(){\n  assertThat(ClassName.getSimpleNameWithOuter(InnerClass.class)).isEqualTo(\"ClassNameTest$InnerClass\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 19,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(ClassName.getSimpleNameWithOuter(InnerClass.class)).isEqualTo(\"ClassNameTest$InnerClass\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 35,
    "startColumnNumber" : 19,
    "endLineNumber" : 35,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}