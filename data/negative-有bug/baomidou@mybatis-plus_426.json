{
  "id" : 426,
  "expression" : "\"Class :\" + dialectClazz + \" is not found\"",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/plugins/pagination/DialectFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Class :\" + dialectClazz + \" is not found\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 98,
      "startColumnNumber" : 47,
      "endLineNumber" : 98,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 98,
        "startColumnNumber" : 22,
        "endLineNumber" : 98,
        "endColumnNumber" : 90
      },
      "nodeContext" : "new MybatisPlusException(\"Class :\" + dialectClazz + \" is not found\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 98,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 91
      },
      "nodeContext" : "throw new MybatisPlusException(\"Class :\" + dialectClazz + \" is not found\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 97,
        "startColumnNumber" : 47,
        "endLineNumber" : 99,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new MybatisPlusException(\"Class :\" + dialectClazz + \" is not found\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 97,
        "startColumnNumber" : 14,
        "endLineNumber" : 99,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (ClassNotFoundException e) {\n  throw new MybatisPlusException(\"Class :\" + dialectClazz + \" is not found\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 99,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Class<?> clazz=Class.forName(dialectClazz);\n  if (IDialect.class.isAssignableFrom(clazz)) {\n    dialect=(IDialect)clazz.newInstance();\n  }\n}\n catch (ClassNotFoundException e) {\n  throw new MybatisPlusException(\"Class :\" + dialectClazz + \" is not found\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 91,
        "startColumnNumber" : 50,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Class<?> clazz=Class.forName(dialectClazz);\n    if (IDialect.class.isAssignableFrom(clazz)) {\n      dialect=(IDialect)clazz.newInstance();\n    }\n  }\n catch (  ClassNotFoundException e) {\n    throw new MybatisPlusException(\"Class :\" + dialectClazz + \" is not found\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.isNotEmpty(dialectClazz)) {\n  try {\n    Class<?> clazz=Class.forName(dialectClazz);\n    if (IDialect.class.isAssignableFrom(clazz)) {\n      dialect=(IDialect)clazz.newInstance();\n    }\n  }\n catch (  ClassNotFoundException e) {\n    throw new MybatisPlusException(\"Class :\" + dialectClazz + \" is not found\");\n  }\n}\n else if (null != dbType) {\n  dialect=getDialectByDbtype(dbType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 89,
        "startColumnNumber" : 92,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  IDialect dialect=null;\n  if (StringUtils.isNotEmpty(dialectClazz)) {\n    try {\n      Class<?> clazz=Class.forName(dialectClazz);\n      if (IDialect.class.isAssignableFrom(clazz)) {\n        dialect=(IDialect)clazz.newInstance();\n      }\n    }\n catch (    ClassNotFoundException e) {\n      throw new MybatisPlusException(\"Class :\" + dialectClazz + \" is not found\");\n    }\n  }\n else   if (null != dbType) {\n    dialect=getDialectByDbtype(dbType);\n  }\n  if (dialect == null) {\n    throw new MybatisPlusException(\"The value of the dialect property in mybatis configuration.xml is not defined.\");\n  }\n  return dialect;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 获取数据库方言 </p>\n * @param dbType       数据库类型\n * @param dialectClazz 自定义方言实现类\n * @return\n * @throws Exception\n */\nprivate static IDialect getDialect(DBType dbType,String dialectClazz) throws Exception {\n  IDialect dialect=null;\n  if (StringUtils.isNotEmpty(dialectClazz)) {\n    try {\n      Class<?> clazz=Class.forName(dialectClazz);\n      if (IDialect.class.isAssignableFrom(clazz)) {\n        dialect=(IDialect)clazz.newInstance();\n      }\n    }\n catch (    ClassNotFoundException e) {\n      throw new MybatisPlusException(\"Class :\" + dialectClazz + \" is not found\");\n    }\n  }\n else   if (null != dbType) {\n    dialect=getDialectByDbtype(dbType);\n  }\n  if (dialect == null) {\n    throw new MybatisPlusException(\"The value of the dialect property in mybatis configuration.xml is not defined.\");\n  }\n  return dialect;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 98,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 91
      },
      "nodeContext" : "throw new MybatisPlusException(\"Class :\" + dialectClazz + \" is not found\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 98,
    "startColumnNumber" : 47,
    "endLineNumber" : 98,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}