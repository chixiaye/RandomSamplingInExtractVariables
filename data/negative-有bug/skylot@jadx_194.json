{
  "id" : 194,
  "expression" : "\"}\"",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/test/java/jadx/tests/integration/enums/TestEnums2.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"}\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 41,
      "startColumnNumber" : 16,
      "endLineNumber" : 41,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 19
      },
      "nodeContext" : "indent(2) + \"}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 36,
        "startColumnNumber" : 19,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 62,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 4
      },
      "nodeContext" : "assertThat(code,JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 65,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "assertThat(code,JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 66,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 32,
        "startColumnNumber" : 20,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ClassNode cls=getClassNode(TestCls.class);\n  String code=cls.getCode().toString();\n  assertThat(code,JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 31,
        "startColumnNumber" : 1,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void test(){\n  ClassNode cls=getClassNode(TestCls.class);\n  String code=cls.getCode().toString();\n  assertThat(code,JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 19
      },
      "nodeContext" : "indent(2) + \"}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"}\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 46,
      "startColumnNumber" : 16,
      "endLineNumber" : 46,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 19
      },
      "nodeContext" : "indent(2) + \"}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 36,
        "startColumnNumber" : 19,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 62,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 4
      },
      "nodeContext" : "assertThat(code,JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 65,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "assertThat(code,JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 66,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 32,
        "startColumnNumber" : 20,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ClassNode cls=getClassNode(TestCls.class);\n  String code=cls.getCode().toString();\n  assertThat(code,JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 31,
        "startColumnNumber" : 1,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void test(){\n  ClassNode cls=getClassNode(TestCls.class);\n  String code=cls.getCode().toString();\n  assertThat(code,JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 19
      },
      "nodeContext" : "indent(2) + \"}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"}\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 50,
      "startColumnNumber" : 4,
      "endLineNumber" : 50,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 36,
        "startColumnNumber" : 19,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 62,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 4
      },
      "nodeContext" : "assertThat(code,JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 65,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "assertThat(code,JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 66,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 32,
        "startColumnNumber" : 20,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ClassNode cls=getClassNode(TestCls.class);\n  String code=cls.getCode().toString();\n  assertThat(code,JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 31,
        "startColumnNumber" : 1,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void test(){\n  ClassNode cls=getClassNode(TestCls.class);\n  String code=cls.getCode().toString();\n  assertThat(code,JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 36,
        "startColumnNumber" : 19,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "JadxMatchers.containsLines(1,\"public enum Operation {\",indent(1) + \"PLUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x + y;\",indent(2) + \"}\",indent(1) + \"},\",indent(1) + \"MINUS {\",indent(2) + \"public int apply(int x, int y) {\",indent(3) + \"return x - y;\",indent(2) + \"}\",indent(1) + \"};\",\"\",indent(1) + \"public abstract int apply(int i, int i2);\",\"}\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 62,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 41,
    "startColumnNumber" : 16,
    "endLineNumber" : 41,
    "endColumnNumber" : 19
  }, {
    "charLength" : 3,
    "startLineNumber" : 46,
    "startColumnNumber" : 16,
    "endLineNumber" : 46,
    "endColumnNumber" : 19
  }, {
    "charLength" : 3,
    "startLineNumber" : 50,
    "startColumnNumber" : 4,
    "endLineNumber" : 50,
    "endColumnNumber" : 7
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 0
  } ]
}