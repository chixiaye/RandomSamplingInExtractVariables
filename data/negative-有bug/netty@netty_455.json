{
  "id" : 455,
  "expression" : "ch",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/example/src/main/java/io/netty/example/http2/helloworld/frame/server/Http2Server.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ch",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 93,
      "startColumnNumber" : 12,
      "endLineNumber" : 93,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 93,
        "endColumnNumber" : 28
      },
      "nodeContext" : "ch.closeFuture()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 93,
        "endColumnNumber" : 35
      },
      "nodeContext" : "ch.closeFuture().sync()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 93,
        "endColumnNumber" : 36
      },
      "nodeContext" : "ch.closeFuture().sync();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ServerBootstrap b=new ServerBootstrap();\n  b.option(ChannelOption.SO_BACKLOG,1024);\n  b.group(group).channel(NioServerSocketChannel.class).handler(new LoggingHandler(LogLevel.INFO)).childHandler(new Http2ServerInitializer(sslCtx));\n  Channel ch=b.bind(PORT).get();\n  System.err.println(\"Open your HTTP/2-enabled web browser and navigate to \" + (SSL ? \"https\" : \"http\") + \"://127.0.0.1:\"+ PORT+ '/');\n  ch.closeFuture().sync();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 651,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ServerBootstrap b=new ServerBootstrap();\n  b.option(ChannelOption.SO_BACKLOG,1024);\n  b.group(group).channel(NioServerSocketChannel.class).handler(new LoggingHandler(LogLevel.INFO)).childHandler(new Http2ServerInitializer(sslCtx));\n  Channel ch=b.bind(PORT).get();\n  System.err.println(\"Open your HTTP/2-enabled web browser and navigate to \" + (SSL ? \"https\" : \"http\") + \"://127.0.0.1:\"+ PORT+ '/');\n  ch.closeFuture().sync();\n}\n  finally {\n  group.shutdownGracefully();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2110,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final SslContext sslCtx;\n  if (SSL) {\n    SslProvider provider=isAlpnSupported(SslProvider.OPENSSL) ? SslProvider.OPENSSL : SslProvider.JDK;\n    SelfSignedCertificate ssc=new SelfSignedCertificate();\n    sslCtx=SslContextBuilder.forServer(ssc.certificate(),ssc.privateKey()).sslProvider(provider).ciphers(Http2SecurityUtil.CIPHERS,SupportedCipherSuiteFilter.INSTANCE).applicationProtocolConfig(new ApplicationProtocolConfig(Protocol.ALPN,SelectorFailureBehavior.NO_ADVERTISE,SelectedListenerFailureBehavior.ACCEPT,ApplicationProtocolNames.HTTP_2,ApplicationProtocolNames.HTTP_1_1)).build();\n  }\n else {\n    sslCtx=null;\n  }\n  EventLoopGroup group=new MultithreadEventLoopGroup(NioHandler.newFactory());\n  try {\n    ServerBootstrap b=new ServerBootstrap();\n    b.option(ChannelOption.SO_BACKLOG,1024);\n    b.group(group).channel(NioServerSocketChannel.class).handler(new LoggingHandler(LogLevel.INFO)).childHandler(new Http2ServerInitializer(sslCtx));\n    Channel ch=b.bind(PORT).get();\n    System.err.println(\"Open your HTTP/2-enabled web browser and navigate to \" + (SSL ? \"https\" : \"http\") + \"://127.0.0.1:\"+ PORT+ '/');\n    ch.closeFuture().sync();\n  }\n  finally {\n    group.shutdownGracefully();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2166,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  final SslContext sslCtx;\n  if (SSL) {\n    SslProvider provider=isAlpnSupported(SslProvider.OPENSSL) ? SslProvider.OPENSSL : SslProvider.JDK;\n    SelfSignedCertificate ssc=new SelfSignedCertificate();\n    sslCtx=SslContextBuilder.forServer(ssc.certificate(),ssc.privateKey()).sslProvider(provider).ciphers(Http2SecurityUtil.CIPHERS,SupportedCipherSuiteFilter.INSTANCE).applicationProtocolConfig(new ApplicationProtocolConfig(Protocol.ALPN,SelectorFailureBehavior.NO_ADVERTISE,SelectedListenerFailureBehavior.ACCEPT,ApplicationProtocolNames.HTTP_2,ApplicationProtocolNames.HTTP_1_1)).build();\n  }\n else {\n    sslCtx=null;\n  }\n  EventLoopGroup group=new MultithreadEventLoopGroup(NioHandler.newFactory());\n  try {\n    ServerBootstrap b=new ServerBootstrap();\n    b.option(ChannelOption.SO_BACKLOG,1024);\n    b.group(group).channel(NioServerSocketChannel.class).handler(new LoggingHandler(LogLevel.INFO)).childHandler(new Http2ServerInitializer(sslCtx));\n    Channel ch=b.bind(PORT).get();\n    System.err.println(\"Open your HTTP/2-enabled web browser and navigate to \" + (SSL ? \"https\" : \"http\") + \"://127.0.0.1:\"+ PORT+ '/');\n    ch.closeFuture().sync();\n  }\n  finally {\n    group.shutdownGracefully();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 93,
        "endColumnNumber" : 36
      },
      "nodeContext" : "ch.closeFuture().sync();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.netty.channel.Channel"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 93,
    "startColumnNumber" : 12,
    "endLineNumber" : 93,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}