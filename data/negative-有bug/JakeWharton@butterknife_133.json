{
  "id" : 133,
  "expression" : "target.clickedPosition",
  "projectName" : "JakeWharton@butterknife",
  "commitID" : "f89fb0f12f5a0c21d95dae234d53f590e1384557",
  "filePath" : "/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/OnItemLongClickTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "target.clickedPosition",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 60,
      "startColumnNumber" : 25,
      "endLineNumber" : 60,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(-1,target.clickedPosition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertEquals(-1,target.clickedPosition);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 54,
        "startColumnNumber" : 31,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  View tree=ViewTree.create(TestSpinner.class,1);\n  TestSpinner spinner=tree.findViewById(1);\n  Simple target=new Simple();\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertEquals(-1,target.clickedPosition);\n  assertTrue(spinner.performItemLongClick(0));\n  assertEquals(0,target.clickedPosition);\n  target.returnValue=false;\n  assertFalse(spinner.performItemLongClick(1));\n  assertEquals(1,target.clickedPosition);\n  unbinder.unbind();\n  spinner.performItemLongClick(2);\n  assertEquals(1,target.clickedPosition);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@UiThreadTest @Test public void simple(){\n  View tree=ViewTree.create(TestSpinner.class,1);\n  TestSpinner spinner=tree.findViewById(1);\n  Simple target=new Simple();\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertEquals(-1,target.clickedPosition);\n  assertTrue(spinner.performItemLongClick(0));\n  assertEquals(0,target.clickedPosition);\n  target.returnValue=false;\n  assertFalse(spinner.performItemLongClick(1));\n  assertEquals(1,target.clickedPosition);\n  unbinder.unbind();\n  spinner.performItemLongClick(2);\n  assertEquals(1,target.clickedPosition);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertEquals(-1,target.clickedPosition);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "target.clickedPosition",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 63,
      "startColumnNumber" : 24,
      "endLineNumber" : 63,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(0,target.clickedPosition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(0,target.clickedPosition);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 54,
        "startColumnNumber" : 31,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  View tree=ViewTree.create(TestSpinner.class,1);\n  TestSpinner spinner=tree.findViewById(1);\n  Simple target=new Simple();\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertEquals(-1,target.clickedPosition);\n  assertTrue(spinner.performItemLongClick(0));\n  assertEquals(0,target.clickedPosition);\n  target.returnValue=false;\n  assertFalse(spinner.performItemLongClick(1));\n  assertEquals(1,target.clickedPosition);\n  unbinder.unbind();\n  spinner.performItemLongClick(2);\n  assertEquals(1,target.clickedPosition);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@UiThreadTest @Test public void simple(){\n  View tree=ViewTree.create(TestSpinner.class,1);\n  TestSpinner spinner=tree.findViewById(1);\n  Simple target=new Simple();\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertEquals(-1,target.clickedPosition);\n  assertTrue(spinner.performItemLongClick(0));\n  assertEquals(0,target.clickedPosition);\n  target.returnValue=false;\n  assertFalse(spinner.performItemLongClick(1));\n  assertEquals(1,target.clickedPosition);\n  unbinder.unbind();\n  spinner.performItemLongClick(2);\n  assertEquals(1,target.clickedPosition);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(0,target.clickedPosition);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "target.clickedPosition",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 67,
      "startColumnNumber" : 24,
      "endLineNumber" : 67,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(1,target.clickedPosition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(1,target.clickedPosition);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 54,
        "startColumnNumber" : 31,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  View tree=ViewTree.create(TestSpinner.class,1);\n  TestSpinner spinner=tree.findViewById(1);\n  Simple target=new Simple();\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertEquals(-1,target.clickedPosition);\n  assertTrue(spinner.performItemLongClick(0));\n  assertEquals(0,target.clickedPosition);\n  target.returnValue=false;\n  assertFalse(spinner.performItemLongClick(1));\n  assertEquals(1,target.clickedPosition);\n  unbinder.unbind();\n  spinner.performItemLongClick(2);\n  assertEquals(1,target.clickedPosition);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@UiThreadTest @Test public void simple(){\n  View tree=ViewTree.create(TestSpinner.class,1);\n  TestSpinner spinner=tree.findViewById(1);\n  Simple target=new Simple();\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertEquals(-1,target.clickedPosition);\n  assertTrue(spinner.performItemLongClick(0));\n  assertEquals(0,target.clickedPosition);\n  target.returnValue=false;\n  assertFalse(spinner.performItemLongClick(1));\n  assertEquals(1,target.clickedPosition);\n  unbinder.unbind();\n  spinner.performItemLongClick(2);\n  assertEquals(1,target.clickedPosition);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(1,target.clickedPosition);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "target.clickedPosition",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 71,
      "startColumnNumber" : 24,
      "endLineNumber" : 71,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(1,target.clickedPosition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(1,target.clickedPosition);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 54,
        "startColumnNumber" : 31,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  View tree=ViewTree.create(TestSpinner.class,1);\n  TestSpinner spinner=tree.findViewById(1);\n  Simple target=new Simple();\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertEquals(-1,target.clickedPosition);\n  assertTrue(spinner.performItemLongClick(0));\n  assertEquals(0,target.clickedPosition);\n  target.returnValue=false;\n  assertFalse(spinner.performItemLongClick(1));\n  assertEquals(1,target.clickedPosition);\n  unbinder.unbind();\n  spinner.performItemLongClick(2);\n  assertEquals(1,target.clickedPosition);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@UiThreadTest @Test public void simple(){\n  View tree=ViewTree.create(TestSpinner.class,1);\n  TestSpinner spinner=tree.findViewById(1);\n  Simple target=new Simple();\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertEquals(-1,target.clickedPosition);\n  assertTrue(spinner.performItemLongClick(0));\n  assertEquals(0,target.clickedPosition);\n  target.returnValue=false;\n  assertFalse(spinner.performItemLongClick(1));\n  assertEquals(1,target.clickedPosition);\n  unbinder.unbind();\n  spinner.performItemLongClick(2);\n  assertEquals(1,target.clickedPosition);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(1,target.clickedPosition);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 60,
    "startColumnNumber" : 25,
    "endLineNumber" : 60,
    "endColumnNumber" : 47
  }, {
    "charLength" : 22,
    "startLineNumber" : 63,
    "startColumnNumber" : 24,
    "endLineNumber" : 63,
    "endColumnNumber" : 46
  }, {
    "charLength" : 22,
    "startLineNumber" : 67,
    "startColumnNumber" : 24,
    "endLineNumber" : 67,
    "endColumnNumber" : 46
  }, {
    "charLength" : 22,
    "startLineNumber" : 71,
    "startColumnNumber" : 24,
    "endLineNumber" : 71,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}