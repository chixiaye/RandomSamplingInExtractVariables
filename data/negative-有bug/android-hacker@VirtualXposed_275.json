{
  "id" : 275,
  "expression" : "mBackupName.exists()",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/helper/utils/AtomicFile.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mBackupName.exists()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 73,
      "startColumnNumber" : 17,
      "endLineNumber" : 73,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 37
      },
      "nodeContext" : "!mBackupName.exists()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!mBackupName.exists()) {\n  if (!mBaseName.renameTo(mBackupName)) {\n    Log.w(\"AtomicFile\",\"Couldn't rename file \" + mBaseName + \" to backup file \"+ mBackupName);\n  }\n}\n else {\n  mBaseName.delete();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 72,
        "startColumnNumber" : 32,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!mBackupName.exists()) {\n    if (!mBaseName.renameTo(mBackupName)) {\n      Log.w(\"AtomicFile\",\"Couldn't rename file \" + mBaseName + \" to backup file \"+ mBackupName);\n    }\n  }\n else {\n    mBaseName.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mBaseName.exists()) {\n  if (!mBackupName.exists()) {\n    if (!mBaseName.renameTo(mBackupName)) {\n      Log.w(\"AtomicFile\",\"Couldn't rename file \" + mBaseName + \" to backup file \"+ mBackupName);\n    }\n  }\n else {\n    mBaseName.delete();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1030,
        "startLineNumber" : 70,
        "startColumnNumber" : 60,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mBaseName.exists()) {\n    if (!mBackupName.exists()) {\n      if (!mBaseName.renameTo(mBackupName)) {\n        Log.w(\"AtomicFile\",\"Couldn't rename file \" + mBaseName + \" to backup file \"+ mBackupName);\n      }\n    }\n else {\n      mBaseName.delete();\n    }\n  }\n  FileOutputStream str=null;\n  try {\n    str=new FileOutputStream(mBaseName);\n  }\n catch (  FileNotFoundException e) {\n    File parent=mBaseName.getParentFile();\n    if (!parent.mkdir()) {\n      throw new IOException(\"Couldn't create directory \" + mBaseName);\n    }\n    try {\n      str=new FileOutputStream(mBaseName);\n    }\n catch (    FileNotFoundException e2) {\n      throw new IOException(\"Couldn't create \" + mBaseName);\n    }\n  }\n  return str;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1867,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Start a new write operation on the file.  This returns a FileOutputStream to which you can write the new file data.  The existing file is replaced with the new data.  You <em>must not</em> directly close the given FileOutputStream; instead call either  {@link #finishWrite(FileOutputStream)}or  {@link #failWrite(FileOutputStream)}. <p>Note that if another thread is currently performing a write, this will simply replace whatever that thread is writing with the new file being written by this thread, and when the other thread finishes the write the new write operation will no longer be safe (or will be lost).  You must do your own threading protection for access to AtomicFile.\n */\npublic FileOutputStream startWrite() throws IOException {\n  if (mBaseName.exists()) {\n    if (!mBackupName.exists()) {\n      if (!mBaseName.renameTo(mBackupName)) {\n        Log.w(\"AtomicFile\",\"Couldn't rename file \" + mBaseName + \" to backup file \"+ mBackupName);\n      }\n    }\n else {\n      mBaseName.delete();\n    }\n  }\n  FileOutputStream str=null;\n  try {\n    str=new FileOutputStream(mBaseName);\n  }\n catch (  FileNotFoundException e) {\n    File parent=mBaseName.getParentFile();\n    if (!parent.mkdir()) {\n      throw new IOException(\"Couldn't create directory \" + mBaseName);\n    }\n    try {\n      str=new FileOutputStream(mBaseName);\n    }\n catch (    FileNotFoundException e2) {\n      throw new IOException(\"Couldn't create \" + mBaseName);\n    }\n  }\n  return str;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 37
      },
      "nodeContext" : "!mBackupName.exists()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 73,
    "startColumnNumber" : 17,
    "endLineNumber" : 73,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}