{
  "id" : 157,
  "expression" : "testRoot.mkdirs()",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/core/file/impl/FileCacheTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "testRoot.mkdirs()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 29,
      "startColumnNumber" : 15,
      "endLineNumber" : 29,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertTrue(testRoot.mkdirs())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(testRoot.mkdirs());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 26,
        "startColumnNumber" : 62,
        "endLineNumber" : 41,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File testRoot=File.createTempFile(\"vertx-\",\"-cache\");\n  assertTrue(testRoot.delete());\n  assertTrue(testRoot.mkdirs());\n  testRoot.deleteOnExit();\n  File cacheRoot=new File(testRoot,\"content\");\n  FileCache cache=new FileCache(cacheRoot);\n  File other=new File(testRoot,\"content-other\");\n  Files.write(other.toPath(),\"protected\".getBytes(),StandardOpenOption.CREATE);\n  try {\n    cache.cacheFile(\"../content-other\",new ByteArrayInputStream(\"hello\".getBytes()),true);\n    fail();\n  }\n catch (  VertxException ignore) {\n    assertEquals(\"protected\",new String(Files.readAllBytes(other.toPath())));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 41,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMutateCacheContentOnly() throws IOException {\n  File testRoot=File.createTempFile(\"vertx-\",\"-cache\");\n  assertTrue(testRoot.delete());\n  assertTrue(testRoot.mkdirs());\n  testRoot.deleteOnExit();\n  File cacheRoot=new File(testRoot,\"content\");\n  FileCache cache=new FileCache(cacheRoot);\n  File other=new File(testRoot,\"content-other\");\n  Files.write(other.toPath(),\"protected\".getBytes(),StandardOpenOption.CREATE);\n  try {\n    cache.cacheFile(\"../content-other\",new ByteArrayInputStream(\"hello\".getBytes()),true);\n    fail();\n  }\n catch (  VertxException ignore) {\n    assertEquals(\"protected\",new String(Files.readAllBytes(other.toPath())));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(testRoot.mkdirs());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 29,
    "startColumnNumber" : 15,
    "endLineNumber" : 29,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}