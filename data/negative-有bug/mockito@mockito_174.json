{
  "id" : 174,
  "expression" : "\"2\"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/matchers/AnyXMatchersAcceptNullsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"2\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 45,
      "startColumnNumber" : 75,
      "endLineNumber" : 45,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 79
      },
      "nodeContext" : "when(mock.forMap(anyMapOf(String.class,String.class))).thenReturn(\"2\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 80
      },
      "nodeContext" : "when(mock.forMap(anyMapOf(String.class,String.class))).thenReturn(\"2\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 42,
        "startColumnNumber" : 52,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  when(mock.oneArg(anyString())).thenReturn(\"0\");\n  when(mock.forList(anyListOf(String.class))).thenReturn(\"1\");\n  when(mock.forMap(anyMapOf(String.class,String.class))).thenReturn(\"2\");\n  when(mock.forCollection(anyCollectionOf(String.class))).thenReturn(\"3\");\n  when(mock.forSet(anySetOf(String.class))).thenReturn(\"4\");\n  assertEquals(null,mock.oneArg((Object)null));\n  assertEquals(null,mock.oneArg((String)null));\n  assertEquals(null,mock.forList(null));\n  assertEquals(null,mock.forMap(null));\n  assertEquals(null,mock.forCollection(null));\n  assertEquals(null,mock.forSet(null));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 742,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldNotAcceptNullInAnyXMatchers(){\n  when(mock.oneArg(anyString())).thenReturn(\"0\");\n  when(mock.forList(anyListOf(String.class))).thenReturn(\"1\");\n  when(mock.forMap(anyMapOf(String.class,String.class))).thenReturn(\"2\");\n  when(mock.forCollection(anyCollectionOf(String.class))).thenReturn(\"3\");\n  when(mock.forSet(anySetOf(String.class))).thenReturn(\"4\");\n  assertEquals(null,mock.oneArg((Object)null));\n  assertEquals(null,mock.oneArg((String)null));\n  assertEquals(null,mock.forList(null));\n  assertEquals(null,mock.forMap(null));\n  assertEquals(null,mock.forCollection(null));\n  assertEquals(null,mock.forSet(null));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 80
      },
      "nodeContext" : "when(mock.forMap(anyMapOf(String.class,String.class))).thenReturn(\"2\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 45,
    "startColumnNumber" : 75,
    "endLineNumber" : 45,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}