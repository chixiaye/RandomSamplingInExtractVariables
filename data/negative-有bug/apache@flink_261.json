{
  "id" : 261,
  "expression" : "INTERVAL_YEAR_MONTH",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-common/src/main/java/org/apache/flink/table/data/ArrayData.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "INTERVAL_YEAR_MONTH",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 173,
      "startColumnNumber" : 17,
      "endLineNumber" : 173,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 173,
        "startColumnNumber" : 12,
        "endLineNumber" : 173,
        "endColumnNumber" : 37
      },
      "nodeContext" : "case INTERVAL_YEAR_MONTH:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2710,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (elementType.getTypeRoot()) {\ncase CHAR:case VARCHAR:  elementGetter=ArrayData::getString;\nbreak;\ncase BOOLEAN:elementGetter=ArrayData::getBoolean;\nbreak;\ncase BINARY:case VARBINARY:elementGetter=ArrayData::getBinary;\nbreak;\ncase DECIMAL:final int decimalPrecision=getPrecision(elementType);\nfinal int decimalScale=getScale(elementType);\nelementGetter=(array,pos) -> array.getDecimal(pos,decimalPrecision,decimalScale);\nbreak;\ncase TINYINT:elementGetter=ArrayData::getByte;\nbreak;\ncase SMALLINT:elementGetter=ArrayData::getShort;\nbreak;\ncase INTEGER:case DATE:case TIME_WITHOUT_TIME_ZONE:case INTERVAL_YEAR_MONTH:elementGetter=ArrayData::getInt;\nbreak;\ncase BIGINT:case INTERVAL_DAY_TIME:elementGetter=ArrayData::getLong;\nbreak;\ncase FLOAT:elementGetter=ArrayData::getFloat;\nbreak;\ncase DOUBLE:elementGetter=ArrayData::getDouble;\nbreak;\ncase TIMESTAMP_WITHOUT_TIME_ZONE:case TIMESTAMP_WITH_LOCAL_TIME_ZONE:final int timestampPrecision=getPrecision(elementType);\nelementGetter=(array,pos) -> array.getTimestamp(pos,timestampPrecision);\nbreak;\ncase TIMESTAMP_WITH_TIME_ZONE:throw new UnsupportedOperationException();\ncase ARRAY:elementGetter=ArrayData::getArray;\nbreak;\ncase MULTISET:case MAP:elementGetter=ArrayData::getMap;\nbreak;\ncase ROW:case STRUCTURED_TYPE:final int rowFieldCount=getFieldCount(elementType);\nelementGetter=(array,pos) -> array.getRow(pos,rowFieldCount);\nbreak;\ncase DISTINCT_TYPE:elementGetter=createElementGetter(((DistinctType)elementType).getSourceType());\nbreak;\ncase RAW:elementGetter=ArrayData::getRawValue;\nbreak;\ncase NULL:case SYMBOL:case UNRESOLVED:default:throw new IllegalArgumentException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 243,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3086,
        "startLineNumber" : 143,
        "startColumnNumber" : 70,
        "endLineNumber" : 226,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ElementGetter elementGetter;\nswitch (elementType.getTypeRoot()) {\ncase CHAR:case VARCHAR:    elementGetter=ArrayData::getString;\n  break;\ncase BOOLEAN:elementGetter=ArrayData::getBoolean;\nbreak;\ncase BINARY:case VARBINARY:elementGetter=ArrayData::getBinary;\nbreak;\ncase DECIMAL:final int decimalPrecision=getPrecision(elementType);\nfinal int decimalScale=getScale(elementType);\nelementGetter=(array,pos) -> array.getDecimal(pos,decimalPrecision,decimalScale);\nbreak;\ncase TINYINT:elementGetter=ArrayData::getByte;\nbreak;\ncase SMALLINT:elementGetter=ArrayData::getShort;\nbreak;\ncase INTEGER:case DATE:case TIME_WITHOUT_TIME_ZONE:case INTERVAL_YEAR_MONTH:elementGetter=ArrayData::getInt;\nbreak;\ncase BIGINT:case INTERVAL_DAY_TIME:elementGetter=ArrayData::getLong;\nbreak;\ncase FLOAT:elementGetter=ArrayData::getFloat;\nbreak;\ncase DOUBLE:elementGetter=ArrayData::getDouble;\nbreak;\ncase TIMESTAMP_WITHOUT_TIME_ZONE:case TIMESTAMP_WITH_LOCAL_TIME_ZONE:final int timestampPrecision=getPrecision(elementType);\nelementGetter=(array,pos) -> array.getTimestamp(pos,timestampPrecision);\nbreak;\ncase TIMESTAMP_WITH_TIME_ZONE:throw new UnsupportedOperationException();\ncase ARRAY:elementGetter=ArrayData::getArray;\nbreak;\ncase MULTISET:case MAP:elementGetter=ArrayData::getMap;\nbreak;\ncase ROW:case STRUCTURED_TYPE:final int rowFieldCount=getFieldCount(elementType);\nelementGetter=(array,pos) -> array.getRow(pos,rowFieldCount);\nbreak;\ncase DISTINCT_TYPE:elementGetter=createElementGetter(((DistinctType)elementType).getSourceType());\nbreak;\ncase RAW:elementGetter=ArrayData::getRawValue;\nbreak;\ncase NULL:case SYMBOL:case UNRESOLVED:default:throw new IllegalArgumentException();\n}\nif (!elementType.isNullable()) {\nreturn elementGetter;\n}\nreturn (array,pos) -> {\nif (array.isNullAt(pos)) {\nreturn null;\n}\nreturn elementGetter.getElementOrNull(array,pos);\n}\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 279,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3345,
        "startLineNumber" : 137,
        "startColumnNumber" : 4,
        "endLineNumber" : 226,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates an accessor for getting elements in an internal array data structure at the given position.\n * @param elementType the element type of the array\n */\nstatic ElementGetter createElementGetter(LogicalType elementType){\n  final ElementGetter elementGetter;\nswitch (elementType.getTypeRoot()) {\ncase CHAR:case VARCHAR:    elementGetter=ArrayData::getString;\n  break;\ncase BOOLEAN:elementGetter=ArrayData::getBoolean;\nbreak;\ncase BINARY:case VARBINARY:elementGetter=ArrayData::getBinary;\nbreak;\ncase DECIMAL:final int decimalPrecision=getPrecision(elementType);\nfinal int decimalScale=getScale(elementType);\nelementGetter=(array,pos) -> array.getDecimal(pos,decimalPrecision,decimalScale);\nbreak;\ncase TINYINT:elementGetter=ArrayData::getByte;\nbreak;\ncase SMALLINT:elementGetter=ArrayData::getShort;\nbreak;\ncase INTEGER:case DATE:case TIME_WITHOUT_TIME_ZONE:case INTERVAL_YEAR_MONTH:elementGetter=ArrayData::getInt;\nbreak;\ncase BIGINT:case INTERVAL_DAY_TIME:elementGetter=ArrayData::getLong;\nbreak;\ncase FLOAT:elementGetter=ArrayData::getFloat;\nbreak;\ncase DOUBLE:elementGetter=ArrayData::getDouble;\nbreak;\ncase TIMESTAMP_WITHOUT_TIME_ZONE:case TIMESTAMP_WITH_LOCAL_TIME_ZONE:final int timestampPrecision=getPrecision(elementType);\nelementGetter=(array,pos) -> array.getTimestamp(pos,timestampPrecision);\nbreak;\ncase TIMESTAMP_WITH_TIME_ZONE:throw new UnsupportedOperationException();\ncase ARRAY:elementGetter=ArrayData::getArray;\nbreak;\ncase MULTISET:case MAP:elementGetter=ArrayData::getMap;\nbreak;\ncase ROW:case STRUCTURED_TYPE:final int rowFieldCount=getFieldCount(elementType);\nelementGetter=(array,pos) -> array.getRow(pos,rowFieldCount);\nbreak;\ncase DISTINCT_TYPE:elementGetter=createElementGetter(((DistinctType)elementType).getSourceType());\nbreak;\ncase RAW:elementGetter=ArrayData::getRawValue;\nbreak;\ncase NULL:case SYMBOL:case UNRESOLVED:default:throw new IllegalArgumentException();\n}\nif (!elementType.isNullable()) {\nreturn elementGetter;\n}\nreturn (array,pos) -> {\nif (array.isNullAt(pos)) {\nreturn null;\n}\nreturn elementGetter.getElementOrNull(array,pos);\n}\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 173,
        "startColumnNumber" : 12,
        "endLineNumber" : 173,
        "endColumnNumber" : 37
      },
      "nodeContext" : "case INTERVAL_YEAR_MONTH:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 3,
    "type" : "org.apache.flink.table.types.logical.LogicalTypeRoot"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 173,
    "startColumnNumber" : 17,
    "endLineNumber" : 173,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}