{
  "id" : 30,
  "expression" : "message",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/ciphers/Vigenere.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "message",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 15,
      "startColumnNumber" : 35,
      "endLineNumber" : 15,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 15,
        "startColumnNumber" : 35,
        "endLineNumber" : 15,
        "endColumnNumber" : 51
      },
      "nodeContext" : "message.length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 15,
        "startColumnNumber" : 31,
        "endLineNumber" : 15,
        "endColumnNumber" : 51
      },
      "nodeContext" : "i < message.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0, j=0; i < message.length(); i++) {\n  char c=message.charAt(i);\n  if (Character.isLetter(c)) {\n    if (Character.isUpperCase(c)) {\n      result.append((char)((c + key.toUpperCase().charAt(j) - 2 * 'A') % 26 + 'A'));\n    }\n else {\n      result.append((char)((c + key.toLowerCase().charAt(j) - 2 * 'a') % 26 + 'a'));\n    }\n  }\n else {\n    result.append(c);\n  }\n  j=++j % key.length();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 101,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 11,
        "startColumnNumber" : 73,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder result=new StringBuilder();\n  for (int i=0, j=0; i < message.length(); i++) {\n    char c=message.charAt(i);\n    if (Character.isLetter(c)) {\n      if (Character.isUpperCase(c)) {\n        result.append((char)((c + key.toUpperCase().charAt(j) - 2 * 'A') % 26 + 'A'));\n      }\n else {\n        result.append((char)((c + key.toLowerCase().charAt(j) - 2 * 'a') % 26 + 'a'));\n      }\n    }\n else {\n      result.append(c);\n    }\n    j=++j % key.length();\n  }\n  return result.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String encrypt(final String message,final String key){\n  StringBuilder result=new StringBuilder();\n  for (int i=0, j=0; i < message.length(); i++) {\n    char c=message.charAt(i);\n    if (Character.isLetter(c)) {\n      if (Character.isUpperCase(c)) {\n        result.append((char)((c + key.toUpperCase().charAt(j) - 2 * 'A') % 26 + 'A'));\n      }\n else {\n        result.append((char)((c + key.toLowerCase().charAt(j) - 2 * 'a') % 26 + 'a'));\n      }\n    }\n else {\n      result.append(c);\n    }\n    j=++j % key.length();\n  }\n  return result.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 15,
        "startColumnNumber" : 31,
        "endLineNumber" : 15,
        "endColumnNumber" : 51
      },
      "nodeContext" : "i < message.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "message",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 16,
      "startColumnNumber" : 21,
      "endLineNumber" : 16,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 16,
        "startColumnNumber" : 21,
        "endLineNumber" : 16,
        "endColumnNumber" : 38
      },
      "nodeContext" : "message.charAt(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 16,
        "startColumnNumber" : 17,
        "endLineNumber" : 16,
        "endColumnNumber" : 38
      },
      "nodeContext" : "c=message.charAt(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 16,
        "startColumnNumber" : 12,
        "endLineNumber" : 16,
        "endColumnNumber" : 39
      },
      "nodeContext" : "char c=message.charAt(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 15,
        "startColumnNumber" : 58,
        "endLineNumber" : 28,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char c=message.charAt(i);\n  if (Character.isLetter(c)) {\n    if (Character.isUpperCase(c)) {\n      result.append((char)((c + key.toUpperCase().charAt(j) - 2 * 'A') % 26 + 'A'));\n    }\n else {\n      result.append((char)((c + key.toLowerCase().charAt(j) - 2 * 'a') % 26 + 'a'));\n    }\n  }\n else {\n    result.append(c);\n  }\n  j=++j % key.length();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0, j=0; i < message.length(); i++) {\n  char c=message.charAt(i);\n  if (Character.isLetter(c)) {\n    if (Character.isUpperCase(c)) {\n      result.append((char)((c + key.toUpperCase().charAt(j) - 2 * 'A') % 26 + 'A'));\n    }\n else {\n      result.append((char)((c + key.toLowerCase().charAt(j) - 2 * 'a') % 26 + 'a'));\n    }\n  }\n else {\n    result.append(c);\n  }\n  j=++j % key.length();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 101,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 11,
        "startColumnNumber" : 73,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder result=new StringBuilder();\n  for (int i=0, j=0; i < message.length(); i++) {\n    char c=message.charAt(i);\n    if (Character.isLetter(c)) {\n      if (Character.isUpperCase(c)) {\n        result.append((char)((c + key.toUpperCase().charAt(j) - 2 * 'A') % 26 + 'A'));\n      }\n else {\n        result.append((char)((c + key.toLowerCase().charAt(j) - 2 * 'a') % 26 + 'a'));\n      }\n    }\n else {\n      result.append(c);\n    }\n    j=++j % key.length();\n  }\n  return result.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String encrypt(final String message,final String key){\n  StringBuilder result=new StringBuilder();\n  for (int i=0, j=0; i < message.length(); i++) {\n    char c=message.charAt(i);\n    if (Character.isLetter(c)) {\n      if (Character.isUpperCase(c)) {\n        result.append((char)((c + key.toUpperCase().charAt(j) - 2 * 'A') % 26 + 'A'));\n      }\n else {\n        result.append((char)((c + key.toLowerCase().charAt(j) - 2 * 'a') % 26 + 'a'));\n      }\n    }\n else {\n      result.append(c);\n    }\n    j=++j % key.length();\n  }\n  return result.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 16,
        "startColumnNumber" : 12,
        "endLineNumber" : 16,
        "endColumnNumber" : 39
      },
      "nodeContext" : "char c=message.charAt(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 15,
    "startColumnNumber" : 35,
    "endLineNumber" : 15,
    "endColumnNumber" : 42
  }, {
    "charLength" : 7,
    "startLineNumber" : 16,
    "startColumnNumber" : 21,
    "endLineNumber" : 16,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}