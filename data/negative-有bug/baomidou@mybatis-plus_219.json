{
  "id" : 219,
  "expression" : "sqlAnnotation.getClass()",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/MybatisMapperAnnotationBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sqlAnnotation.getClass()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 485,
      "startColumnNumber" : 52,
      "endLineNumber" : 485,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 485,
        "startColumnNumber" : 52,
        "endLineNumber" : 485,
        "endColumnNumber" : 95
      },
      "nodeContext" : "sqlAnnotation.getClass().getMethod(\"value\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 485,
        "startColumnNumber" : 52,
        "endLineNumber" : 485,
        "endColumnNumber" : 117
      },
      "nodeContext" : "sqlAnnotation.getClass().getMethod(\"value\").invoke(sqlAnnotation)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 485,
        "startColumnNumber" : 41,
        "endLineNumber" : 485,
        "endColumnNumber" : 117
      },
      "nodeContext" : "(String[])sqlAnnotation.getClass().getMethod(\"value\").invoke(sqlAnnotation)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 485,
        "startColumnNumber" : 31,
        "endLineNumber" : 485,
        "endColumnNumber" : 117
      },
      "nodeContext" : "strings=(String[])sqlAnnotation.getClass().getMethod(\"value\").invoke(sqlAnnotation)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 485,
        "startColumnNumber" : 16,
        "endLineNumber" : 485,
        "endColumnNumber" : 118
      },
      "nodeContext" : "final String[] strings=(String[])sqlAnnotation.getClass().getMethod(\"value\").invoke(sqlAnnotation);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 480,
        "startColumnNumber" : 43,
        "endLineNumber" : 487,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (sqlProviderAnnotationType != null) {\n    throw new BindingException(\"You cannot supply both a static SQL and SqlProvider to method named \" + method.getName());\n  }\n  Annotation sqlAnnotation=method.getAnnotation(sqlAnnotationType);\n  final String[] strings=(String[])sqlAnnotation.getClass().getMethod(\"value\").invoke(sqlAnnotation);\n  return buildSqlSourceFromStrings(strings,parameterType,languageDriver);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 826,
        "startLineNumber" : 480,
        "startColumnNumber" : 12,
        "endLineNumber" : 490,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (sqlAnnotationType != null) {\n  if (sqlProviderAnnotationType != null) {\n    throw new BindingException(\"You cannot supply both a static SQL and SqlProvider to method named \" + method.getName());\n  }\n  Annotation sqlAnnotation=method.getAnnotation(sqlAnnotationType);\n  final String[] strings=(String[])sqlAnnotation.getClass().getMethod(\"value\").invoke(sqlAnnotation);\n  return buildSqlSourceFromStrings(strings,parameterType,languageDriver);\n}\n else if (sqlProviderAnnotationType != null) {\n  Annotation sqlProviderAnnotation=method.getAnnotation(sqlProviderAnnotationType);\n  return new ProviderSqlSource(assistant.getConfiguration(),sqlProviderAnnotation,type,method);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 477,
        "startColumnNumber" : 12,
        "endLineNumber" : 492,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Class<? extends Annotation> sqlAnnotationType=getSqlAnnotationType(method);\n  Class<? extends Annotation> sqlProviderAnnotationType=getSqlProviderAnnotationType(method);\n  if (sqlAnnotationType != null) {\n    if (sqlProviderAnnotationType != null) {\n      throw new BindingException(\"You cannot supply both a static SQL and SqlProvider to method named \" + method.getName());\n    }\n    Annotation sqlAnnotation=method.getAnnotation(sqlAnnotationType);\n    final String[] strings=(String[])sqlAnnotation.getClass().getMethod(\"value\").invoke(sqlAnnotation);\n    return buildSqlSourceFromStrings(strings,parameterType,languageDriver);\n  }\n else   if (sqlProviderAnnotationType != null) {\n    Annotation sqlProviderAnnotation=method.getAnnotation(sqlProviderAnnotationType);\n    return new ProviderSqlSource(assistant.getConfiguration(),sqlProviderAnnotation,type,method);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1213,
        "startLineNumber" : 477,
        "startColumnNumber" : 8,
        "endLineNumber" : 494,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Class<? extends Annotation> sqlAnnotationType=getSqlAnnotationType(method);\n  Class<? extends Annotation> sqlProviderAnnotationType=getSqlProviderAnnotationType(method);\n  if (sqlAnnotationType != null) {\n    if (sqlProviderAnnotationType != null) {\n      throw new BindingException(\"You cannot supply both a static SQL and SqlProvider to method named \" + method.getName());\n    }\n    Annotation sqlAnnotation=method.getAnnotation(sqlAnnotationType);\n    final String[] strings=(String[])sqlAnnotation.getClass().getMethod(\"value\").invoke(sqlAnnotation);\n    return buildSqlSourceFromStrings(strings,parameterType,languageDriver);\n  }\n else   if (sqlProviderAnnotationType != null) {\n    Annotation sqlProviderAnnotation=method.getAnnotation(sqlProviderAnnotationType);\n    return new ProviderSqlSource(assistant.getConfiguration(),sqlProviderAnnotation,type,method);\n  }\n  return null;\n}\n catch (Exception e) {\n  throw new BuilderException(\"Could not find value method on SQL annotation.  Cause: \" + e,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 122,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1229,
        "startLineNumber" : 476,
        "startColumnNumber" : 120,
        "endLineNumber" : 495,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Class<? extends Annotation> sqlAnnotationType=getSqlAnnotationType(method);\n    Class<? extends Annotation> sqlProviderAnnotationType=getSqlProviderAnnotationType(method);\n    if (sqlAnnotationType != null) {\n      if (sqlProviderAnnotationType != null) {\n        throw new BindingException(\"You cannot supply both a static SQL and SqlProvider to method named \" + method.getName());\n      }\n      Annotation sqlAnnotation=method.getAnnotation(sqlAnnotationType);\n      final String[] strings=(String[])sqlAnnotation.getClass().getMethod(\"value\").invoke(sqlAnnotation);\n      return buildSqlSourceFromStrings(strings,parameterType,languageDriver);\n    }\n else     if (sqlProviderAnnotationType != null) {\n      Annotation sqlProviderAnnotation=method.getAnnotation(sqlProviderAnnotationType);\n      return new ProviderSqlSource(assistant.getConfiguration(),sqlProviderAnnotation,type,method);\n    }\n    return null;\n  }\n catch (  Exception e) {\n    throw new BuilderException(\"Could not find value method on SQL annotation.  Cause: \" + e,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1345,
        "startLineNumber" : 476,
        "startColumnNumber" : 4,
        "endLineNumber" : 495,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private SqlSource getSqlSourceFromAnnotations(Method method,Class<?> parameterType,LanguageDriver languageDriver){\n  try {\n    Class<? extends Annotation> sqlAnnotationType=getSqlAnnotationType(method);\n    Class<? extends Annotation> sqlProviderAnnotationType=getSqlProviderAnnotationType(method);\n    if (sqlAnnotationType != null) {\n      if (sqlProviderAnnotationType != null) {\n        throw new BindingException(\"You cannot supply both a static SQL and SqlProvider to method named \" + method.getName());\n      }\n      Annotation sqlAnnotation=method.getAnnotation(sqlAnnotationType);\n      final String[] strings=(String[])sqlAnnotation.getClass().getMethod(\"value\").invoke(sqlAnnotation);\n      return buildSqlSourceFromStrings(strings,parameterType,languageDriver);\n    }\n else     if (sqlProviderAnnotationType != null) {\n      Annotation sqlProviderAnnotation=method.getAnnotation(sqlProviderAnnotationType);\n      return new ProviderSqlSource(assistant.getConfiguration(),sqlProviderAnnotation,type,method);\n    }\n    return null;\n  }\n catch (  Exception e) {\n    throw new BuilderException(\"Could not find value method on SQL annotation.  Cause: \" + e,e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 485,
        "startColumnNumber" : 16,
        "endLineNumber" : 485,
        "endColumnNumber" : 118
      },
      "nodeContext" : "final String[] strings=(String[])sqlAnnotation.getClass().getMethod(\"value\").invoke(sqlAnnotation);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 485,
    "startColumnNumber" : 52,
    "endLineNumber" : 485,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}