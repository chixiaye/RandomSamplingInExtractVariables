{
  "id" : 194,
  "expression" : "toolchainContext.executionPlatform().label()",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/analysis/Util.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "toolchainContext.executionPlatform().label()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 112,
      "startColumnNumber" : 45,
      "endLineNumber" : 112,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 109,
        "startColumnNumber" : 14,
        "endLineNumber" : 112,
        "endColumnNumber" : 90
      },
      "nodeContext" : "ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 109,
        "startColumnNumber" : 14,
        "endLineNumber" : 113,
        "endColumnNumber" : 26
      },
      "nodeContext" : "ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label()).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 281,
        "startLineNumber" : 108,
        "startColumnNumber" : 10,
        "endLineNumber" : 113,
        "endColumnNumber" : 27
      },
      "nodeContext" : "maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label()).build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 108,
        "startColumnNumber" : 10,
        "endLineNumber" : 113,
        "endColumnNumber" : 28
      },
      "nodeContext" : "maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label()).build());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 107,
        "startColumnNumber" : 57,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label()).build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (DependencyResolver.shouldUseToolchainTransition(targetConfiguration,ruleContext.getRule())) {\n  maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label()).build());\n}\n else {\n  maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(hostConfiguration).build());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 47,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 105,
        "startColumnNumber" : 73,
        "endLineNumber" : 121,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (DependencyResolver.shouldUseToolchainTransition(targetConfiguration,ruleContext.getRule())) {\n    maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label()).build());\n  }\n else {\n    maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(hostConfiguration).build());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 105,
        "startColumnNumber" : 6,
        "endLineNumber" : 121,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Label toolchain : toolchainContext.resolvedToolchainLabels()) {\n  if (DependencyResolver.shouldUseToolchainTransition(targetConfiguration,ruleContext.getRule())) {\n    maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label()).build());\n  }\n else {\n    maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(hostConfiguration).build());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 56,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1032,
        "startLineNumber" : 100,
        "startColumnNumber" : 34,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BuildConfigurationValue targetConfiguration=ruleContext.getConfiguration();\n  BuildConfigurationValue hostConfiguration=ruleContext.getHostConfiguration();\n  for (  Label toolchain : toolchainContext.resolvedToolchainLabels()) {\n    if (DependencyResolver.shouldUseToolchainTransition(targetConfiguration,ruleContext.getRule())) {\n      maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label()).build());\n    }\n else {\n      maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(hostConfiguration).build());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (toolchainContext != null) {\n  BuildConfigurationValue targetConfiguration=ruleContext.getConfiguration();\n  BuildConfigurationValue hostConfiguration=ruleContext.getHostConfiguration();\n  for (  Label toolchain : toolchainContext.resolvedToolchainLabels()) {\n    if (DependencyResolver.shouldUseToolchainTransition(targetConfiguration,ruleContext.getRule())) {\n      maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label()).build());\n    }\n else {\n      maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(hostConfiguration).build());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 77,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2052,
        "startLineNumber" : 81,
        "startColumnNumber" : 92,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Set<ConfiguredTargetKey> maybeImplicitDeps=CompactHashSet.create();\n  Set<ConfiguredTargetKey> explicitDeps=CompactHashSet.create();\n  AttributeMap attributes=ruleContext.attributes();\n  ListMultimap<String,ConfiguredTargetAndData> targetMap=ruleContext.getConfiguredTargetAndDataMap();\n  for (  String attrName : attributes.getAttributeNames()) {\n    List<ConfiguredTargetAndData> attrValues=targetMap.get(attrName);\n    if (attrValues != null && !attrValues.isEmpty()) {\n      if (attributes.isAttributeValueExplicitlySpecified(attrName)) {\n        addLabelsAndConfigs(explicitDeps,attrValues);\n      }\n else {\n        addLabelsAndConfigs(maybeImplicitDeps,attrValues);\n      }\n    }\n  }\n  ToolchainContext toolchainContext=ruleContext.getToolchainContext();\n  if (toolchainContext != null) {\n    BuildConfigurationValue targetConfiguration=ruleContext.getConfiguration();\n    BuildConfigurationValue hostConfiguration=ruleContext.getHostConfiguration();\n    for (    Label toolchain : toolchainContext.resolvedToolchainLabels()) {\n      if (DependencyResolver.shouldUseToolchainTransition(targetConfiguration,ruleContext.getRule())) {\n        maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label()).build());\n      }\n else {\n        maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(hostConfiguration).build());\n      }\n    }\n  }\n  return ImmutableSet.copyOf(Sets.difference(maybeImplicitDeps,explicitDeps));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2142,
        "startLineNumber" : 81,
        "startColumnNumber" : 2,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static ImmutableSet<ConfiguredTargetKey> findImplicitDeps(RuleContext ruleContext){\n  Set<ConfiguredTargetKey> maybeImplicitDeps=CompactHashSet.create();\n  Set<ConfiguredTargetKey> explicitDeps=CompactHashSet.create();\n  AttributeMap attributes=ruleContext.attributes();\n  ListMultimap<String,ConfiguredTargetAndData> targetMap=ruleContext.getConfiguredTargetAndDataMap();\n  for (  String attrName : attributes.getAttributeNames()) {\n    List<ConfiguredTargetAndData> attrValues=targetMap.get(attrName);\n    if (attrValues != null && !attrValues.isEmpty()) {\n      if (attributes.isAttributeValueExplicitlySpecified(attrName)) {\n        addLabelsAndConfigs(explicitDeps,attrValues);\n      }\n else {\n        addLabelsAndConfigs(maybeImplicitDeps,attrValues);\n      }\n    }\n  }\n  ToolchainContext toolchainContext=ruleContext.getToolchainContext();\n  if (toolchainContext != null) {\n    BuildConfigurationValue targetConfiguration=ruleContext.getConfiguration();\n    BuildConfigurationValue hostConfiguration=ruleContext.getHostConfiguration();\n    for (    Label toolchain : toolchainContext.resolvedToolchainLabels()) {\n      if (DependencyResolver.shouldUseToolchainTransition(targetConfiguration,ruleContext.getRule())) {\n        maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label()).build());\n      }\n else {\n        maybeImplicitDeps.add(ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(hostConfiguration).build());\n      }\n    }\n  }\n  return ImmutableSet.copyOf(Sets.difference(maybeImplicitDeps,explicitDeps));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 109,
        "startColumnNumber" : 14,
        "endLineNumber" : 112,
        "endColumnNumber" : 90
      },
      "nodeContext" : "ConfiguredTargetKey.builder().setLabel(toolchain).setConfiguration(targetConfiguration).setExecutionPlatformLabel(toolchainContext.executionPlatform().label())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "com.google.devtools.build.lib.cmdline.Label"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 112,
    "startColumnNumber" : 45,
    "endLineNumber" : 112,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}