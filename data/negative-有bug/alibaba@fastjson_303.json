{
  "id" : 303,
  "expression" : "len <= 0",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/test/benchmark/decode/TradeParse.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "len <= 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 46,
      "startColumnNumber" : 16,
      "endLineNumber" : 46,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (len <= 0) {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 44,
        "startColumnNumber" : 17,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int len=reader.read(chars);\n  if (len <= 0) {\n    break;\n  }\n  out.append(chars,0,len);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (; ; ) {\n  int len=reader.read(chars);\n  if (len <= 0) {\n    break;\n  }\n  out.append(chars,0,len);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 38,
        "startColumnNumber" : 93,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InputStream is=TradeParse.class.getClassLoader().getResourceAsStream(\"json/trade.json\");\n  Reader reader=new InputStreamReader(is,\"UTF-8\");\n  char[] chars=new char[1024];\n  StringBuilder out=new StringBuilder();\n  for (; ; ) {\n    int len=reader.read(chars);\n    if (len <= 0) {\n      break;\n    }\n    out.append(chars,0,len);\n  }\n  reader.close();\n  return out.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String readFromResource() throws UnsupportedEncodingException, IOException {\n  InputStream is=TradeParse.class.getClassLoader().getResourceAsStream(\"json/trade.json\");\n  Reader reader=new InputStreamReader(is,\"UTF-8\");\n  char[] chars=new char[1024];\n  StringBuilder out=new StringBuilder();\n  for (; ; ) {\n    int len=reader.read(chars);\n    if (len <= 0) {\n      break;\n    }\n    out.append(chars,0,len);\n  }\n  reader.close();\n  return out.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (len <= 0) {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 46,
    "startColumnNumber" : 16,
    "endLineNumber" : 46,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}