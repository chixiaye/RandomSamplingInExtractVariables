{
  "id" : 452,
  "expression" : "batchIndex",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-transaction/coordinator/src/test/java/org/apache/pulsar/transaction/coordinator/impl/TxnBatchedPositionImplTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "batchIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 50,
      "startColumnNumber" : 95,
      "endLineNumber" : 50,
      "endColumnNumber" : 105
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 50,
        "startColumnNumber" : 52,
        "endLineNumber" : 50,
        "endColumnNumber" : 106
      },
      "nodeContext" : "new TxnBatchedPositionImpl(1,1,batchSize,batchIndex)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 50,
        "startColumnNumber" : 31,
        "endLineNumber" : 50,
        "endColumnNumber" : 106
      },
      "nodeContext" : "txnBatchedPosition=new TxnBatchedPositionImpl(1,1,batchSize,batchIndex)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 107
      },
      "nodeContext" : "TxnBatchedPositionImpl txnBatchedPosition=new TxnBatchedPositionImpl(1,1,batchSize,batchIndex);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 48,
        "startColumnNumber" : 67,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TxnBatchedPositionImpl txnBatchedPosition=new TxnBatchedPositionImpl(1,1,batchSize,batchIndex);\n  txnBatchedPosition.setAckSetByIndex();\n  long[] ls=txnBatchedPosition.getAckSet();\n  BitSetRecyclable bitSetRecyclable=BitSetRecyclable.valueOf(ls);\n  for (int i=0; i < batchSize; i++) {\n    if (i == batchIndex) {\n      Assert.assertFalse(bitSetRecyclable.get(i));\n    }\n else {\n      Assert.assertTrue(bitSetRecyclable.get(i));\n    }\n  }\n  bitSetRecyclable.recycle();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 729,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(dataProvider=\"batchSizeAndBatchIndexArgsArray\") public void testSetAckSetByIndex(int batchSize,int batchIndex){\n  TxnBatchedPositionImpl txnBatchedPosition=new TxnBatchedPositionImpl(1,1,batchSize,batchIndex);\n  txnBatchedPosition.setAckSetByIndex();\n  long[] ls=txnBatchedPosition.getAckSet();\n  BitSetRecyclable bitSetRecyclable=BitSetRecyclable.valueOf(ls);\n  for (int i=0; i < batchSize; i++) {\n    if (i == batchIndex) {\n      Assert.assertFalse(bitSetRecyclable.get(i));\n    }\n else {\n      Assert.assertTrue(bitSetRecyclable.get(i));\n    }\n  }\n  bitSetRecyclable.recycle();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 107
      },
      "nodeContext" : "TxnBatchedPositionImpl txnBatchedPosition=new TxnBatchedPositionImpl(1,1,batchSize,batchIndex);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "batchIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 55,
      "startColumnNumber" : 21,
      "endLineNumber" : 55,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 31
      },
      "nodeContext" : "i == batchIndex",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (i == batchIndex) {\n  Assert.assertFalse(bitSetRecyclable.get(i));\n}\n else {\n  Assert.assertTrue(bitSetRecyclable.get(i));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 208,
        "startLineNumber" : 54,
        "startColumnNumber" : 43,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (i == batchIndex) {\n    Assert.assertFalse(bitSetRecyclable.get(i));\n  }\n else {\n    Assert.assertTrue(bitSetRecyclable.get(i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < batchSize; i++) {\n  if (i == batchIndex) {\n    Assert.assertFalse(bitSetRecyclable.get(i));\n  }\n else {\n    Assert.assertTrue(bitSetRecyclable.get(i));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 48,
        "startColumnNumber" : 67,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TxnBatchedPositionImpl txnBatchedPosition=new TxnBatchedPositionImpl(1,1,batchSize,batchIndex);\n  txnBatchedPosition.setAckSetByIndex();\n  long[] ls=txnBatchedPosition.getAckSet();\n  BitSetRecyclable bitSetRecyclable=BitSetRecyclable.valueOf(ls);\n  for (int i=0; i < batchSize; i++) {\n    if (i == batchIndex) {\n      Assert.assertFalse(bitSetRecyclable.get(i));\n    }\n else {\n      Assert.assertTrue(bitSetRecyclable.get(i));\n    }\n  }\n  bitSetRecyclable.recycle();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 729,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(dataProvider=\"batchSizeAndBatchIndexArgsArray\") public void testSetAckSetByIndex(int batchSize,int batchIndex){\n  TxnBatchedPositionImpl txnBatchedPosition=new TxnBatchedPositionImpl(1,1,batchSize,batchIndex);\n  txnBatchedPosition.setAckSetByIndex();\n  long[] ls=txnBatchedPosition.getAckSet();\n  BitSetRecyclable bitSetRecyclable=BitSetRecyclable.valueOf(ls);\n  for (int i=0; i < batchSize; i++) {\n    if (i == batchIndex) {\n      Assert.assertFalse(bitSetRecyclable.get(i));\n    }\n else {\n      Assert.assertTrue(bitSetRecyclable.get(i));\n    }\n  }\n  bitSetRecyclable.recycle();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 31
      },
      "nodeContext" : "i == batchIndex",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 50,
    "startColumnNumber" : 95,
    "endLineNumber" : 50,
    "endColumnNumber" : 105
  }, {
    "charLength" : 10,
    "startLineNumber" : 55,
    "startColumnNumber" : 21,
    "endLineNumber" : 55,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}