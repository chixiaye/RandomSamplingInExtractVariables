{
  "id" : 449,
  "expression" : "new AssertFetch(dsl,\"select count(*) as total from jooqtest;\",\"0\")",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jooq/JooqAutoConfigurationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AssertFetch(dsl,\"select count(*) as total from jooqtest;\",\"0\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 68,
      "startLineNumber" : 91,
      "startColumnNumber" : 4,
      "endLineNumber" : 91,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 73
      },
      "nodeContext" : "dsl.transaction(new AssertFetch(dsl,\"select count(*) as total from jooqtest;\",\"0\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 74
      },
      "nodeContext" : "dsl.transaction(new AssertFetch(dsl,\"select count(*) as total from jooqtest;\",\"0\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1012,
        "startLineNumber" : 84,
        "startColumnNumber" : 46,
        "endLineNumber" : 107,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  load(JooqDataSourceConfiguration.class);\n  assertThat(getBeanNames(PlatformTransactionManager.class)).isEqualTo(NO_BEANS);\n  assertThat(getBeanNames(SpringTransactionProvider.class)).isEqualTo(NO_BEANS);\n  DSLContext dsl=this.context.getBean(DSLContext.class);\n  dsl.execute(\"create table jooqtest (name varchar(255) primary key);\");\n  dsl.transaction(new AssertFetch(dsl,\"select count(*) as total from jooqtest;\",\"0\"));\n  dsl.transaction(new ExecuteSql(dsl,\"insert into jooqtest (name) values ('foo');\"));\n  dsl.transaction(new AssertFetch(dsl,\"select count(*) as total from jooqtest;\",\"1\"));\n  try {\n    dsl.transaction(new ExecuteSql(dsl,\"insert into jooqtest (name) values ('bar');\",\"insert into jooqtest (name) values ('foo');\"));\n    fail(\"An DataIntegrityViolationException should have been thrown.\");\n  }\n catch (  DataIntegrityViolationException ex) {\n  }\n  dsl.transaction(new AssertFetch(dsl,\"select count(*) as total from jooqtest;\",\"2\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1064,
        "startLineNumber" : 83,
        "startColumnNumber" : 1,
        "endLineNumber" : 107,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void jooqWithoutTx() throws Exception {\n  load(JooqDataSourceConfiguration.class);\n  assertThat(getBeanNames(PlatformTransactionManager.class)).isEqualTo(NO_BEANS);\n  assertThat(getBeanNames(SpringTransactionProvider.class)).isEqualTo(NO_BEANS);\n  DSLContext dsl=this.context.getBean(DSLContext.class);\n  dsl.execute(\"create table jooqtest (name varchar(255) primary key);\");\n  dsl.transaction(new AssertFetch(dsl,\"select count(*) as total from jooqtest;\",\"0\"));\n  dsl.transaction(new ExecuteSql(dsl,\"insert into jooqtest (name) values ('foo');\"));\n  dsl.transaction(new AssertFetch(dsl,\"select count(*) as total from jooqtest;\",\"1\"));\n  try {\n    dsl.transaction(new ExecuteSql(dsl,\"insert into jooqtest (name) values ('bar');\",\"insert into jooqtest (name) values ('foo');\"));\n    fail(\"An DataIntegrityViolationException should have been thrown.\");\n  }\n catch (  DataIntegrityViolationException ex) {\n  }\n  dsl.transaction(new AssertFetch(dsl,\"select count(*) as total from jooqtest;\",\"2\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 73
      },
      "nodeContext" : "dsl.transaction(new AssertFetch(dsl,\"select count(*) as total from jooqtest;\",\"0\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 10,
    "type" : "org.springframework.boot.autoconfigure.jooq.JooqAutoConfigurationTests.AssertFetch"
  } ],
  "positionList" : [ {
    "charLength" : 68,
    "startLineNumber" : 91,
    "startColumnNumber" : 4,
    "endLineNumber" : 91,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}