{
  "id" : 202,
  "expression" : "possible",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/stickers/StickerSearchRepository.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "possible",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 37,
      "startColumnNumber" : 30,
      "endLineNumber" : 37,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 37,
        "startColumnNumber" : 6,
        "endLineNumber" : 44,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (String candidate : possible) {\n  try (StickerRecordReader reader=new StickerRecordReader(stickerDatabase.getStickersByEmoji(candidate))){\n    StickerRecord record=null;\n    while ((record=reader.getNext()) != null) {\n      out.add(record);\n    }\n  }\n }\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 32,
        "startColumnNumber" : 42,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String searchEmoji=EmojiUtil.getCanonicalRepresentation(emoji);\n  List<StickerRecord> out=new ArrayList<>();\n  Set<String> possible=EmojiUtil.getAllRepresentations(searchEmoji);\n  for (  String candidate : possible) {\n    try (StickerRecordReader reader=new StickerRecordReader(stickerDatabase.getStickersByEmoji(candidate))){\n      StickerRecord record=null;\n      while ((record=reader.getNext()) != null) {\n        out.add(record);\n      }\n    }\n   }\n  callback.onResult(out);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 32,
        "startColumnNumber" : 36,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "() -> {\n  String searchEmoji=EmojiUtil.getCanonicalRepresentation(emoji);\n  List<StickerRecord> out=new ArrayList<>();\n  Set<String> possible=EmojiUtil.getAllRepresentations(searchEmoji);\n  for (  String candidate : possible) {\n    try (StickerRecordReader reader=new StickerRecordReader(stickerDatabase.getStickersByEmoji(candidate))){\n      StickerRecord record=null;\n      while ((record=reader.getNext()) != null) {\n        out.add(record);\n      }\n    }\n   }\n  callback.onResult(out);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 82,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 37,
        "startColumnNumber" : 6,
        "endLineNumber" : 44,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (String candidate : possible) {\n  try (StickerRecordReader reader=new StickerRecordReader(stickerDatabase.getStickersByEmoji(candidate))){\n    StickerRecord record=null;\n    while ((record=reader.getNext()) != null) {\n      out.add(record);\n    }\n  }\n }\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 10
    },
    "tokenLength" : 1,
    "type" : "java.util.Set<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 37,
    "startColumnNumber" : 30,
    "endLineNumber" : 37,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}