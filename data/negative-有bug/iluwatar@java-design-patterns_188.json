{
  "id" : 188,
  "expression" : "item",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/iterator/src/test/java/com/iluwatar/iterator/list/TreasureChestTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 74,
      "startColumnNumber" : 20,
      "endLineNumber" : 74,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 74,
        "endColumnNumber" : 25
      },
      "nodeContext" : "assertNotNull(item)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 74,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertNotNull(item);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 72,
        "startColumnNumber" : 31,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final var item=iterator.next();\n  assertNotNull(item);\n  assertEquals(expectedItem.getType(),item.getType());\n  final var name=item.toString();\n  assertNotNull(name);\n  if (expectedItem.toString().equals(name)) {\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (iterator.hasNext()) {\n  final var item=iterator.next();\n  assertNotNull(item);\n  assertEquals(expectedItem.getType(),item.getType());\n  final var name=item.toString();\n  assertNotNull(name);\n  if (expectedItem.toString().equals(name)) {\n    return;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 49,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 67,
        "startColumnNumber" : 46,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final var chest=new TreasureChest();\n  final var iterator=chest.iterator(expectedItem.getType());\n  assertNotNull(iterator);\n  while (iterator.hasNext()) {\n    final var item=iterator.next();\n    assertNotNull(item);\n    assertEquals(expectedItem.getType(),item.getType());\n    final var name=item.toString();\n    assertNotNull(name);\n    if (expectedItem.toString().equals(name)) {\n      return;\n    }\n  }\n  fail(\"Expected to find item [\" + expectedItem + \"] using iterator, but we didn't.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Test if the expected item can be retrieved from the chest using the  {@link TreasureChestItemIterator}\n */\n@ParameterizedTest @MethodSource(\"dataProvider\") public void testIterator(Item expectedItem){\n  final var chest=new TreasureChest();\n  final var iterator=chest.iterator(expectedItem.getType());\n  assertNotNull(iterator);\n  while (iterator.hasNext()) {\n    final var item=iterator.next();\n    assertNotNull(item);\n    assertEquals(expectedItem.getType(),item.getType());\n    final var name=item.toString();\n    assertNotNull(name);\n    if (expectedItem.toString().equals(name)) {\n      return;\n    }\n  }\n  fail(\"Expected to find item [\" + expectedItem + \"] using iterator, but we didn't.\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 74,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertNotNull(item);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.iterator.list.Item"
  }, {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 75,
      "startColumnNumber" : 43,
      "endLineNumber" : 75,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 75,
        "startColumnNumber" : 43,
        "endLineNumber" : 75,
        "endColumnNumber" : 57
      },
      "nodeContext" : "item.getType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 75,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(expectedItem.getType(),item.getType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 75,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertEquals(expectedItem.getType(),item.getType());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 72,
        "startColumnNumber" : 31,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final var item=iterator.next();\n  assertNotNull(item);\n  assertEquals(expectedItem.getType(),item.getType());\n  final var name=item.toString();\n  assertNotNull(name);\n  if (expectedItem.toString().equals(name)) {\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (iterator.hasNext()) {\n  final var item=iterator.next();\n  assertNotNull(item);\n  assertEquals(expectedItem.getType(),item.getType());\n  final var name=item.toString();\n  assertNotNull(name);\n  if (expectedItem.toString().equals(name)) {\n    return;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 49,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 67,
        "startColumnNumber" : 46,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final var chest=new TreasureChest();\n  final var iterator=chest.iterator(expectedItem.getType());\n  assertNotNull(iterator);\n  while (iterator.hasNext()) {\n    final var item=iterator.next();\n    assertNotNull(item);\n    assertEquals(expectedItem.getType(),item.getType());\n    final var name=item.toString();\n    assertNotNull(name);\n    if (expectedItem.toString().equals(name)) {\n      return;\n    }\n  }\n  fail(\"Expected to find item [\" + expectedItem + \"] using iterator, but we didn't.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Test if the expected item can be retrieved from the chest using the  {@link TreasureChestItemIterator}\n */\n@ParameterizedTest @MethodSource(\"dataProvider\") public void testIterator(Item expectedItem){\n  final var chest=new TreasureChest();\n  final var iterator=chest.iterator(expectedItem.getType());\n  assertNotNull(iterator);\n  while (iterator.hasNext()) {\n    final var item=iterator.next();\n    assertNotNull(item);\n    assertEquals(expectedItem.getType(),item.getType());\n    final var name=item.toString();\n    assertNotNull(name);\n    if (expectedItem.toString().equals(name)) {\n      return;\n    }\n  }\n  fail(\"Expected to find item [\" + expectedItem + \"] using iterator, but we didn't.\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 75,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertEquals(expectedItem.getType(),item.getType());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.iterator.list.Item"
  }, {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 77,
      "startColumnNumber" : 23,
      "endLineNumber" : 77,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 77,
        "startColumnNumber" : 23,
        "endLineNumber" : 77,
        "endColumnNumber" : 38
      },
      "nodeContext" : "item.toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 38
      },
      "nodeContext" : "name=item.toString()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 77,
        "startColumnNumber" : 6,
        "endLineNumber" : 77,
        "endColumnNumber" : 39
      },
      "nodeContext" : "final var name=item.toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 72,
        "startColumnNumber" : 31,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final var item=iterator.next();\n  assertNotNull(item);\n  assertEquals(expectedItem.getType(),item.getType());\n  final var name=item.toString();\n  assertNotNull(name);\n  if (expectedItem.toString().equals(name)) {\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (iterator.hasNext()) {\n  final var item=iterator.next();\n  assertNotNull(item);\n  assertEquals(expectedItem.getType(),item.getType());\n  final var name=item.toString();\n  assertNotNull(name);\n  if (expectedItem.toString().equals(name)) {\n    return;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 49,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 67,
        "startColumnNumber" : 46,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final var chest=new TreasureChest();\n  final var iterator=chest.iterator(expectedItem.getType());\n  assertNotNull(iterator);\n  while (iterator.hasNext()) {\n    final var item=iterator.next();\n    assertNotNull(item);\n    assertEquals(expectedItem.getType(),item.getType());\n    final var name=item.toString();\n    assertNotNull(name);\n    if (expectedItem.toString().equals(name)) {\n      return;\n    }\n  }\n  fail(\"Expected to find item [\" + expectedItem + \"] using iterator, but we didn't.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Test if the expected item can be retrieved from the chest using the  {@link TreasureChestItemIterator}\n */\n@ParameterizedTest @MethodSource(\"dataProvider\") public void testIterator(Item expectedItem){\n  final var chest=new TreasureChest();\n  final var iterator=chest.iterator(expectedItem.getType());\n  assertNotNull(iterator);\n  while (iterator.hasNext()) {\n    final var item=iterator.next();\n    assertNotNull(item);\n    assertEquals(expectedItem.getType(),item.getType());\n    final var name=item.toString();\n    assertNotNull(name);\n    if (expectedItem.toString().equals(name)) {\n      return;\n    }\n  }\n  fail(\"Expected to find item [\" + expectedItem + \"] using iterator, but we didn't.\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 77,
        "startColumnNumber" : 6,
        "endLineNumber" : 77,
        "endColumnNumber" : 39
      },
      "nodeContext" : "final var name=item.toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.iterator.list.Item"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 74,
    "startColumnNumber" : 20,
    "endLineNumber" : 74,
    "endColumnNumber" : 24
  }, {
    "charLength" : 4,
    "startLineNumber" : 75,
    "startColumnNumber" : 43,
    "endLineNumber" : 75,
    "endColumnNumber" : 47
  }, {
    "charLength" : 4,
    "startLineNumber" : 77,
    "startColumnNumber" : 23,
    "endLineNumber" : 77,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}