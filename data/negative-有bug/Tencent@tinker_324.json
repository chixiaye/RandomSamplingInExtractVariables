{
  "id" : 324,
  "expression" : "0",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/third-party/bsdiff-util/src/main/java/com/tencent/tinker/bsdiff/BSPatch.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 76,
      "startColumnNumber" : 51,
      "endLineNumber" : 76,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 76,
        "startColumnNumber" : 31,
        "endLineNumber" : 76,
        "endColumnNumber" : 52
      },
      "nodeContext" : "oldFile.length() <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 52
      },
      "nodeContext" : "oldFile == null || oldFile.length() <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (oldFile == null || oldFile.length() <= 0) {\n  return RETURN_OLD_FILE_ERR;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 75,
        "startColumnNumber" : 124,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldFile == null || oldFile.length() <= 0) {\n    return RETURN_OLD_FILE_ERR;\n  }\n  if (newFile == null) {\n    return RETURN_NEW_FILE_ERR;\n  }\n  if (diffFile == null || diffFile.length() <= 0) {\n    return RETURN_DIFF_FILE_ERR;\n  }\n  byte[] diffBytes=new byte[(int)diffFile.length()];\n  InputStream diffInputStream=new FileInputStream(diffFile);\n  try {\n    BSUtil.readFromStream(diffInputStream,diffBytes,0,diffBytes.length);\n  }\n  finally {\n    diffInputStream.close();\n  }\n  return patchLessMemory(oldFile,(int)oldFile.length(),diffBytes,diffBytes.length,newFile,extLen);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 945,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * BSPatch using less memory size. Memory size = diffFile size + max block size\n */\npublic static int patchLessMemory(RandomAccessFile oldFile,File newFile,File diffFile,int extLen) throws IOException {\n  if (oldFile == null || oldFile.length() <= 0) {\n    return RETURN_OLD_FILE_ERR;\n  }\n  if (newFile == null) {\n    return RETURN_NEW_FILE_ERR;\n  }\n  if (diffFile == null || diffFile.length() <= 0) {\n    return RETURN_DIFF_FILE_ERR;\n  }\n  byte[] diffBytes=new byte[(int)diffFile.length()];\n  InputStream diffInputStream=new FileInputStream(diffFile);\n  try {\n    BSUtil.readFromStream(diffInputStream,diffBytes,0,diffBytes.length);\n  }\n  finally {\n    diffInputStream.close();\n  }\n  return patchLessMemory(oldFile,(int)oldFile.length(),diffBytes,diffBytes.length,newFile,extLen);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 52
      },
      "nodeContext" : "oldFile == null || oldFile.length() <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 82,
      "startColumnNumber" : 53,
      "endLineNumber" : 82,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 82,
        "startColumnNumber" : 32,
        "endLineNumber" : 82,
        "endColumnNumber" : 54
      },
      "nodeContext" : "diffFile.length() <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 54
      },
      "nodeContext" : "diffFile == null || diffFile.length() <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (diffFile == null || diffFile.length() <= 0) {\n  return RETURN_DIFF_FILE_ERR;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 75,
        "startColumnNumber" : 124,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldFile == null || oldFile.length() <= 0) {\n    return RETURN_OLD_FILE_ERR;\n  }\n  if (newFile == null) {\n    return RETURN_NEW_FILE_ERR;\n  }\n  if (diffFile == null || diffFile.length() <= 0) {\n    return RETURN_DIFF_FILE_ERR;\n  }\n  byte[] diffBytes=new byte[(int)diffFile.length()];\n  InputStream diffInputStream=new FileInputStream(diffFile);\n  try {\n    BSUtil.readFromStream(diffInputStream,diffBytes,0,diffBytes.length);\n  }\n  finally {\n    diffInputStream.close();\n  }\n  return patchLessMemory(oldFile,(int)oldFile.length(),diffBytes,diffBytes.length,newFile,extLen);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 945,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * BSPatch using less memory size. Memory size = diffFile size + max block size\n */\npublic static int patchLessMemory(RandomAccessFile oldFile,File newFile,File diffFile,int extLen) throws IOException {\n  if (oldFile == null || oldFile.length() <= 0) {\n    return RETURN_OLD_FILE_ERR;\n  }\n  if (newFile == null) {\n    return RETURN_NEW_FILE_ERR;\n  }\n  if (diffFile == null || diffFile.length() <= 0) {\n    return RETURN_DIFF_FILE_ERR;\n  }\n  byte[] diffBytes=new byte[(int)diffFile.length()];\n  InputStream diffInputStream=new FileInputStream(diffFile);\n  try {\n    BSUtil.readFromStream(diffInputStream,diffBytes,0,diffBytes.length);\n  }\n  finally {\n    diffInputStream.close();\n  }\n  return patchLessMemory(oldFile,(int)oldFile.length(),diffBytes,diffBytes.length,newFile,extLen);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 54
      },
      "nodeContext" : "diffFile == null || diffFile.length() <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 89,
      "startColumnNumber" : 62,
      "endLineNumber" : 89,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 82
      },
      "nodeContext" : "BSUtil.readFromStream(diffInputStream,diffBytes,0,diffBytes.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 83
      },
      "nodeContext" : "BSUtil.readFromStream(diffInputStream,diffBytes,0,diffBytes.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  BSUtil.readFromStream(diffInputStream,diffBytes,0,diffBytes.length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  BSUtil.readFromStream(diffInputStream,diffBytes,0,diffBytes.length);\n}\n  finally {\n  diffInputStream.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 75,
        "startColumnNumber" : 124,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (oldFile == null || oldFile.length() <= 0) {\n    return RETURN_OLD_FILE_ERR;\n  }\n  if (newFile == null) {\n    return RETURN_NEW_FILE_ERR;\n  }\n  if (diffFile == null || diffFile.length() <= 0) {\n    return RETURN_DIFF_FILE_ERR;\n  }\n  byte[] diffBytes=new byte[(int)diffFile.length()];\n  InputStream diffInputStream=new FileInputStream(diffFile);\n  try {\n    BSUtil.readFromStream(diffInputStream,diffBytes,0,diffBytes.length);\n  }\n  finally {\n    diffInputStream.close();\n  }\n  return patchLessMemory(oldFile,(int)oldFile.length(),diffBytes,diffBytes.length,newFile,extLen);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 945,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * BSPatch using less memory size. Memory size = diffFile size + max block size\n */\npublic static int patchLessMemory(RandomAccessFile oldFile,File newFile,File diffFile,int extLen) throws IOException {\n  if (oldFile == null || oldFile.length() <= 0) {\n    return RETURN_OLD_FILE_ERR;\n  }\n  if (newFile == null) {\n    return RETURN_NEW_FILE_ERR;\n  }\n  if (diffFile == null || diffFile.length() <= 0) {\n    return RETURN_DIFF_FILE_ERR;\n  }\n  byte[] diffBytes=new byte[(int)diffFile.length()];\n  InputStream diffInputStream=new FileInputStream(diffFile);\n  try {\n    BSUtil.readFromStream(diffInputStream,diffBytes,0,diffBytes.length);\n  }\n  finally {\n    diffInputStream.close();\n  }\n  return patchLessMemory(oldFile,(int)oldFile.length(),diffBytes,diffBytes.length,newFile,extLen);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 83
      },
      "nodeContext" : "BSUtil.readFromStream(diffInputStream,diffBytes,0,diffBytes.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 76,
    "startColumnNumber" : 51,
    "endLineNumber" : 76,
    "endColumnNumber" : 52
  }, {
    "charLength" : 1,
    "startLineNumber" : 82,
    "startColumnNumber" : 53,
    "endLineNumber" : 82,
    "endColumnNumber" : 54
  }, {
    "charLength" : 1,
    "startLineNumber" : 89,
    "startColumnNumber" : 62,
    "endLineNumber" : 89,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}