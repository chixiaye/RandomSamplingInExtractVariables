{
  "id" : 456,
  "expression" : "consumerGroupsDesc",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "consumerGroupsDesc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 231,
      "startColumnNumber" : 61,
      "endLineNumber" : 231,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 231,
        "startColumnNumber" : 61,
        "endLineNumber" : 231,
        "endColumnNumber" : 90
      },
      "nodeContext" : "consumerGroupsDesc.get(group)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 231,
        "startColumnNumber" : 61,
        "endLineNumber" : 231,
        "endColumnNumber" : 96
      },
      "nodeContext" : "consumerGroupsDesc.get(group).get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 231,
        "startColumnNumber" : 41,
        "endLineNumber" : 231,
        "endColumnNumber" : 96
      },
      "nodeContext" : "consumerGroupDesc=consumerGroupsDesc.get(group).get()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 231,
        "startColumnNumber" : 16,
        "endLineNumber" : 231,
        "endColumnNumber" : 97
      },
      "nodeContext" : "ConsumerGroupDescription consumerGroupDesc=consumerGroupsDesc.get(group).get();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 230,
        "startColumnNumber" : 16,
        "endLineNumber" : 242,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ConsumerGroupDescription consumerGroupDesc=consumerGroupsDesc.get(group).get();\n  ConsumerGroupState consumerGroupState=consumerGroupDesc.state();\n  if (consumerGroupState.equals(ConsumerGroupState.EMPTY)) {\n    idleConsumerGroupsOffset.put(group,targetAdminClient.listConsumerGroupOffsets(group).partitionsToOffsetAndMetadata().get().entrySet().stream().collect(Collectors.toMap(Entry::getKey,Entry::getValue)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 230,
        "startColumnNumber" : 12,
        "endLineNumber" : 244,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  ConsumerGroupDescription consumerGroupDesc=consumerGroupsDesc.get(group).get();\n  ConsumerGroupState consumerGroupState=consumerGroupDesc.state();\n  if (consumerGroupState.equals(ConsumerGroupState.EMPTY)) {\n    idleConsumerGroupsOffset.put(group,targetAdminClient.listConsumerGroupOffsets(group).partitionsToOffsetAndMetadata().get().entrySet().stream().collect(Collectors.toMap(Entry::getKey,Entry::getValue)));\n  }\n}\n catch (InterruptedException|ExecutionException e) {\n  log.error(\"Error querying for consumer group {} on cluster {}.\",group,targetClusterAlias,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 74,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 229,
        "startColumnNumber" : 44,
        "endLineNumber" : 245,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    ConsumerGroupDescription consumerGroupDesc=consumerGroupsDesc.get(group).get();\n    ConsumerGroupState consumerGroupState=consumerGroupDesc.state();\n    if (consumerGroupState.equals(ConsumerGroupState.EMPTY)) {\n      idleConsumerGroupsOffset.put(group,targetAdminClient.listConsumerGroupOffsets(group).partitionsToOffsetAndMetadata().get().entrySet().stream().collect(Collectors.toMap(Entry::getKey,Entry::getValue)));\n    }\n  }\n catch (  InterruptedException|ExecutionException e) {\n    log.error(\"Error querying for consumer group {} on cluster {}.\",group,targetClusterAlias,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1231,
        "startLineNumber" : 229,
        "startColumnNumber" : 8,
        "endLineNumber" : 245,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String group : consumerGroups) {\n  try {\n    ConsumerGroupDescription consumerGroupDesc=consumerGroupsDesc.get(group).get();\n    ConsumerGroupState consumerGroupState=consumerGroupDesc.state();\n    if (consumerGroupState.equals(ConsumerGroupState.EMPTY)) {\n      idleConsumerGroupsOffset.put(group,targetAdminClient.listConsumerGroupOffsets(group).partitionsToOffsetAndMetadata().get().entrySet().stream().collect(Collectors.toMap(Entry::getKey,Entry::getValue)));\n    }\n  }\n catch (  InterruptedException|ExecutionException e) {\n    log.error(\"Error querying for consumer group {} on cluster {}.\",group,targetClusterAlias,e);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 81,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1417,
        "startLineNumber" : 225,
        "startColumnNumber" : 50,
        "endLineNumber" : 246,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,KafkaFuture<ConsumerGroupDescription>> consumerGroupsDesc=targetAdminClient.describeConsumerGroups(consumerGroups).describedGroups();\n  for (  String group : consumerGroups) {\n    try {\n      ConsumerGroupDescription consumerGroupDesc=consumerGroupsDesc.get(group).get();\n      ConsumerGroupState consumerGroupState=consumerGroupDesc.state();\n      if (consumerGroupState.equals(ConsumerGroupState.EMPTY)) {\n        idleConsumerGroupsOffset.put(group,targetAdminClient.listConsumerGroupOffsets(group).partitionsToOffsetAndMetadata().get().entrySet().stream().collect(Collectors.toMap(Entry::getKey,Entry::getValue)));\n      }\n    }\n catch (    InterruptedException|ExecutionException e) {\n      log.error(\"Error querying for consumer group {} on cluster {}.\",group,targetClusterAlias,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1463,
        "startLineNumber" : 225,
        "startColumnNumber" : 4,
        "endLineNumber" : 246,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void refreshIdleConsumerGroupOffset(){\n  Map<String,KafkaFuture<ConsumerGroupDescription>> consumerGroupsDesc=targetAdminClient.describeConsumerGroups(consumerGroups).describedGroups();\n  for (  String group : consumerGroups) {\n    try {\n      ConsumerGroupDescription consumerGroupDesc=consumerGroupsDesc.get(group).get();\n      ConsumerGroupState consumerGroupState=consumerGroupDesc.state();\n      if (consumerGroupState.equals(ConsumerGroupState.EMPTY)) {\n        idleConsumerGroupsOffset.put(group,targetAdminClient.listConsumerGroupOffsets(group).partitionsToOffsetAndMetadata().get().entrySet().stream().collect(Collectors.toMap(Entry::getKey,Entry::getValue)));\n      }\n    }\n catch (    InterruptedException|ExecutionException e) {\n      log.error(\"Error querying for consumer group {} on cluster {}.\",group,targetClusterAlias,e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 231,
        "startColumnNumber" : 16,
        "endLineNumber" : 231,
        "endColumnNumber" : 97
      },
      "nodeContext" : "ConsumerGroupDescription consumerGroupDesc=consumerGroupsDesc.get(group).get();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,org.apache.kafka.common.KafkaFuture<org.apache.kafka.clients.admin.ConsumerGroupDescription>>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 231,
    "startColumnNumber" : 61,
    "endLineNumber" : 231,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}