{
  "id" : 400,
  "expression" : "true",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/sql/relational/ProjectNodeUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 50,
      "startColumnNumber" : 15,
      "endLineNumber" : 50,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return true;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Map.Entry<VariableReferenceExpression,RowExpression> entry : projectNode.getAssignments().entrySet()) {\n    RowExpression value=entry.getValue();\n    VariableReferenceExpression variable=entry.getKey();\n    if (isExpression(value)) {\n      Expression expression=castToExpression(value);\n      if (!(expression instanceof SymbolReference && ((SymbolReference)expression).getName().equals(variable.getName()))) {\n        return false;\n      }\n    }\n else {\n      if (!(value instanceof VariableReferenceExpression && ((VariableReferenceExpression)value).getName().equals(variable.getName()))) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1081,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static boolean isIdentity(ProjectNode projectNode){\n  for (  Map.Entry<VariableReferenceExpression,RowExpression> entry : projectNode.getAssignments().entrySet()) {\n    RowExpression value=entry.getValue();\n    VariableReferenceExpression variable=entry.getKey();\n    if (isExpression(value)) {\n      Expression expression=castToExpression(value);\n      if (!(expression instanceof SymbolReference && ((SymbolReference)expression).getName().equals(variable.getName()))) {\n        return false;\n      }\n    }\n else {\n      if (!(value instanceof VariableReferenceExpression && ((VariableReferenceExpression)value).getName().equals(variable.getName()))) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return true;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 50,
    "startColumnNumber" : 15,
    "endLineNumber" : 50,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}