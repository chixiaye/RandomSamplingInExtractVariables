{
  "id" : 165,
  "expression" : "new String(decompressedByteArr)",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-rpc/dubbo-rpc-triple/src/test/java/org/apache/dubbo/rpc/protocol/tri/compressor/SnappyTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new String(decompressedByteArr)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 60,
      "startColumnNumber" : 32,
      "endLineNumber" : 60,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assertions.assertEquals(new String(decompressedByteArr),TEST_STR)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assertions.assertEquals(new String(decompressedByteArr),TEST_STR);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 810,
        "startLineNumber" : 45,
        "startColumnNumber" : 44,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Compressor compressor=ApplicationModel.defaultModel().getDefaultModule().getExtensionLoader(Compressor.class).getExtension(compressorName);\n  String loadByStatic=Compressor.getCompressor(new FrameworkModel(),compressorName).getMessageEncoding();\n  Assertions.assertEquals(loadByStatic,compressor.getMessageEncoding());\n  byte[] compressedByteArr=compressor.compress(TEST_STR.getBytes());\n  DeCompressor deCompressor=ApplicationModel.defaultModel().getDefaultModule().getExtensionLoader(DeCompressor.class).getExtension(compressorName);\n  byte[] decompressedByteArr=deCompressor.decompress(compressedByteArr);\n  Assertions.assertEquals(new String(decompressedByteArr),TEST_STR);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ValueSource(strings={\"snappy\"}) @ParameterizedTest void compression(String compressorName){\n  Compressor compressor=ApplicationModel.defaultModel().getDefaultModule().getExtensionLoader(Compressor.class).getExtension(compressorName);\n  String loadByStatic=Compressor.getCompressor(new FrameworkModel(),compressorName).getMessageEncoding();\n  Assertions.assertEquals(loadByStatic,compressor.getMessageEncoding());\n  byte[] compressedByteArr=compressor.compress(TEST_STR.getBytes());\n  DeCompressor deCompressor=ApplicationModel.defaultModel().getDefaultModule().getExtensionLoader(DeCompressor.class).getExtension(compressorName);\n  byte[] decompressedByteArr=deCompressor.decompress(compressedByteArr);\n  Assertions.assertEquals(new String(decompressedByteArr),TEST_STR);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assertions.assertEquals(new String(decompressedByteArr),TEST_STR);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 60,
    "startColumnNumber" : 32,
    "endLineNumber" : 60,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}