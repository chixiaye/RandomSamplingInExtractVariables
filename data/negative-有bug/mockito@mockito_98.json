{
  "id" : 98,
  "expression" : "mock.entrySet().iterator()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mock.entrySet().iterator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 52,
      "startColumnNumber" : 16,
      "endLineNumber" : 52,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 51,
        "startColumnNumber" : 72,
        "endLineNumber" : 52,
        "endColumnNumber" : 42
      },
      "nodeContext" : "entriesIterator=mock.entrySet().iterator()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 47,
        "startColumnNumber" : 72,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void generic_deep_mock_frenzy__look_at_these_chained_calls(){\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 51,
        "startColumnNumber" : 72,
        "endLineNumber" : 52,
        "endColumnNumber" : 42
      },
      "nodeContext" : "entriesIterator=mock.entrySet().iterator()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.util.Iterator<java.util.Map.Entry<,java.util.Set<java.lang.Number>>>"
  }, {
    "nodeContext" : "mock.entrySet().iterator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 53,
      "startColumnNumber" : 64,
      "endLineNumber" : 53,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 53,
        "startColumnNumber" : 64,
        "endLineNumber" : 53,
        "endColumnNumber" : 97
      },
      "nodeContext" : "mock.entrySet().iterator().next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 53,
        "startColumnNumber" : 52,
        "endLineNumber" : 53,
        "endColumnNumber" : 97
      },
      "nodeContext" : "nextEntry=mock.entrySet().iterator().next()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 47,
        "startColumnNumber" : 72,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void generic_deep_mock_frenzy__look_at_these_chained_calls(){\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.util.Iterator<java.util.Map.Entry<,java.util.Set<java.lang.Number>>>"
  }, {
    "nodeContext" : "mock.entrySet().iterator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 55,
      "startColumnNumber" : 33,
      "endLineNumber" : 55,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 55,
        "startColumnNumber" : 33,
        "endLineNumber" : 55,
        "endColumnNumber" : 66
      },
      "nodeContext" : "mock.entrySet().iterator().next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 55,
        "startColumnNumber" : 33,
        "endLineNumber" : 55,
        "endColumnNumber" : 75
      },
      "nodeContext" : "mock.entrySet().iterator().next().getKey()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 55,
        "startColumnNumber" : 18,
        "endLineNumber" : 55,
        "endColumnNumber" : 75
      },
      "nodeContext" : "cloneableKey=mock.entrySet().iterator().next().getKey()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 47,
        "startColumnNumber" : 72,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void generic_deep_mock_frenzy__look_at_these_chained_calls(){\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "java.util.Iterator<java.util.Map.Entry<,java.util.Set<java.lang.Number>>>"
  }, {
    "nodeContext" : "mock.entrySet().iterator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 56,
      "startColumnNumber" : 38,
      "endLineNumber" : 56,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 56,
        "startColumnNumber" : 38,
        "endLineNumber" : 56,
        "endColumnNumber" : 71
      },
      "nodeContext" : "mock.entrySet().iterator().next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 56,
        "startColumnNumber" : 38,
        "endLineNumber" : 56,
        "endColumnNumber" : 80
      },
      "nodeContext" : "mock.entrySet().iterator().next().getKey()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 56,
        "startColumnNumber" : 22,
        "endLineNumber" : 56,
        "endColumnNumber" : 80
      },
      "nodeContext" : "comparableKey=mock.entrySet().iterator().next().getKey()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 47,
        "startColumnNumber" : 72,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void generic_deep_mock_frenzy__look_at_these_chained_calls(){\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "java.util.Iterator<java.util.Map.Entry<,java.util.Set<java.lang.Number>>>"
  }, {
    "nodeContext" : "mock.entrySet().iterator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 58,
      "startColumnNumber" : 28,
      "endLineNumber" : 58,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 58,
        "startColumnNumber" : 28,
        "endLineNumber" : 58,
        "endColumnNumber" : 61
      },
      "nodeContext" : "mock.entrySet().iterator().next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 58,
        "startColumnNumber" : 28,
        "endLineNumber" : 58,
        "endColumnNumber" : 72
      },
      "nodeContext" : "mock.entrySet().iterator().next().getValue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 58,
        "startColumnNumber" : 20,
        "endLineNumber" : 58,
        "endColumnNumber" : 72
      },
      "nodeContext" : "value=mock.entrySet().iterator().next().getValue()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Set<Number> value=mock.entrySet().iterator().next().getValue();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 47,
        "startColumnNumber" : 72,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void generic_deep_mock_frenzy__look_at_these_chained_calls(){\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Set<Number> value=mock.entrySet().iterator().next().getValue();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "java.util.Iterator<java.util.Map.Entry<,java.util.Set<java.lang.Number>>>"
  }, {
    "nodeContext" : "mock.entrySet().iterator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 59,
      "startColumnNumber" : 43,
      "endLineNumber" : 59,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 59,
        "startColumnNumber" : 43,
        "endLineNumber" : 59,
        "endColumnNumber" : 76
      },
      "nodeContext" : "mock.entrySet().iterator().next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 59,
        "startColumnNumber" : 43,
        "endLineNumber" : 59,
        "endColumnNumber" : 87
      },
      "nodeContext" : "mock.entrySet().iterator().next().getValue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 59,
        "startColumnNumber" : 43,
        "endLineNumber" : 59,
        "endColumnNumber" : 98
      },
      "nodeContext" : "mock.entrySet().iterator().next().getValue().iterator()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 59,
        "startColumnNumber" : 25,
        "endLineNumber" : 59,
        "endColumnNumber" : 98
      },
      "nodeContext" : "numbersIterator=mock.entrySet().iterator().next().getValue().iterator()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 47,
        "startColumnNumber" : 72,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void generic_deep_mock_frenzy__look_at_these_chained_calls(){\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "java.util.Iterator<java.util.Map.Entry<,java.util.Set<java.lang.Number>>>"
  }, {
    "nodeContext" : "mock.entrySet().iterator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 60,
      "startColumnNumber" : 24,
      "endLineNumber" : 60,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 60,
        "startColumnNumber" : 24,
        "endLineNumber" : 60,
        "endColumnNumber" : 57
      },
      "nodeContext" : "mock.entrySet().iterator().next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 60,
        "startColumnNumber" : 24,
        "endLineNumber" : 60,
        "endColumnNumber" : 68
      },
      "nodeContext" : "mock.entrySet().iterator().next().getValue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 60,
        "startColumnNumber" : 24,
        "endLineNumber" : 60,
        "endColumnNumber" : 79
      },
      "nodeContext" : "mock.entrySet().iterator().next().getValue().iterator()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 60,
        "startColumnNumber" : 24,
        "endLineNumber" : 60,
        "endColumnNumber" : 86
      },
      "nodeContext" : "mock.entrySet().iterator().next().getValue().iterator().next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 60,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 86
      },
      "nodeContext" : "number=mock.entrySet().iterator().next().getValue().iterator().next()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 47,
        "startColumnNumber" : 72,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void generic_deep_mock_frenzy__look_at_these_chained_calls(){\n  GenericsNest<?> mock=mock(GenericsNest.class,RETURNS_DEEP_STUBS);\n  Set<? extends Map.Entry<? extends Cloneable,Set<Number>>> entries=mock.entrySet();\n  Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator=mock.entrySet().iterator();\n  Map.Entry<? extends Cloneable,Set<Number>> nextEntry=mock.entrySet().iterator().next();\n  Cloneable cloneableKey=mock.entrySet().iterator().next().getKey();\n  Comparable<?> comparableKey=mock.entrySet().iterator().next().getKey();\n  Set<Number> value=mock.entrySet().iterator().next().getValue();\n  Iterator<Number> numbersIterator=mock.entrySet().iterator().next().getValue().iterator();\n  Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Number number=mock.entrySet().iterator().next().getValue().iterator().next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 9
    },
    "tokenLength" : 3,
    "type" : "java.util.Iterator<java.util.Map.Entry<,java.util.Set<java.lang.Number>>>"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 52,
    "startColumnNumber" : 16,
    "endLineNumber" : 52,
    "endColumnNumber" : 42
  }, {
    "charLength" : 26,
    "startLineNumber" : 53,
    "startColumnNumber" : 64,
    "endLineNumber" : 53,
    "endColumnNumber" : 90
  }, {
    "charLength" : 26,
    "startLineNumber" : 55,
    "startColumnNumber" : 33,
    "endLineNumber" : 55,
    "endColumnNumber" : 59
  }, {
    "charLength" : 26,
    "startLineNumber" : 56,
    "startColumnNumber" : 38,
    "endLineNumber" : 56,
    "endColumnNumber" : 64
  }, {
    "charLength" : 26,
    "startLineNumber" : 58,
    "startColumnNumber" : 28,
    "endLineNumber" : 58,
    "endColumnNumber" : 54
  }, {
    "charLength" : 26,
    "startLineNumber" : 59,
    "startColumnNumber" : 43,
    "endLineNumber" : 59,
    "endColumnNumber" : 69
  }, {
    "charLength" : 26,
    "startLineNumber" : 60,
    "startColumnNumber" : 24,
    "endLineNumber" : 60,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 6
  } ]
}