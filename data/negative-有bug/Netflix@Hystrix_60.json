{
  "id" : 60,
  "expression" : "parameter.getValue()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-javanica/src/main/java/com/netflix/hystrix/contrib/javanica/cache/HystrixCacheKeyGenerator.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parameter.getValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 61,
      "startColumnNumber" : 118,
      "endLineNumber" : 61,
      "endColumnNumber" : 138
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 139
      },
      "nodeContext" : "appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 140
      },
      "nodeContext" : "appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 60,
        "startColumnNumber" : 86,
        "endLineNumber" : 62,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 64,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n  appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n}\n else {\n  cacheKeyBuilder.append(parameter.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 58,
        "startColumnNumber" : 101,
        "endLineNumber" : 65,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n  if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n    appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n  }\n else {\n    cacheKeyBuilder.append(parameter.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 529,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n  CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n  if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n    appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n  }\n else {\n    cacheKeyBuilder.append(parameter.getValue());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 56,
        "startColumnNumber" : 59,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  StringBuilder cacheKeyBuilder=new StringBuilder();\n  for (  CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n    CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n    if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n      appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n    }\n else {\n      cacheKeyBuilder.append(parameter.getValue());\n    }\n  }\n  return new DefaultHystrixGeneratedCacheKey(cacheKeyBuilder.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 848,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (cacheInvocationContext.hasKeyParameters()) {\n  StringBuilder cacheKeyBuilder=new StringBuilder();\n  for (  CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n    CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n    if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n      appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n    }\n else {\n      cacheKeyBuilder.append(parameter.getValue());\n    }\n  }\n  return new DefaultHystrixGeneratedCacheKey(cacheKeyBuilder.toString());\n}\n else {\n  return DefaultHystrixGeneratedCacheKey.EMPTY;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 872,
        "startLineNumber" : 55,
        "startColumnNumber" : 15,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (cacheInvocationContext.hasKeyParameters()) {\n    StringBuilder cacheKeyBuilder=new StringBuilder();\n    for (    CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n      CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n      if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n        appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n      }\n else {\n        cacheKeyBuilder.append(parameter.getValue());\n      }\n    }\n    return new DefaultHystrixGeneratedCacheKey(cacheKeyBuilder.toString());\n  }\n else {\n    return DefaultHystrixGeneratedCacheKey.EMPTY;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cacheKeyMethod != null) {\n  try {\n    return new DefaultHystrixGeneratedCacheKey((String)cacheKeyMethod.execute(cacheInvocationContext.getExecutionType()));\n  }\n catch (  Throwable throwable) {\n    throw new HystrixCacheKeyGenerationException(throwable);\n  }\n}\n else {\n  if (cacheInvocationContext.hasKeyParameters()) {\n    StringBuilder cacheKeyBuilder=new StringBuilder();\n    for (    CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n      CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n      if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n        appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n      }\n else {\n        cacheKeyBuilder.append(parameter.getValue());\n      }\n    }\n    return new DefaultHystrixGeneratedCacheKey(cacheKeyBuilder.toString());\n  }\n else {\n    return DefaultHystrixGeneratedCacheKey.EMPTY;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1309,
        "startLineNumber" : 47,
        "startColumnNumber" : 164,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MethodExecutionAction cacheKeyMethod=cacheInvocationContext.getCacheKeyMethod();\n  if (cacheKeyMethod != null) {\n    try {\n      return new DefaultHystrixGeneratedCacheKey((String)cacheKeyMethod.execute(cacheInvocationContext.getExecutionType()));\n    }\n catch (    Throwable throwable) {\n      throw new HystrixCacheKeyGenerationException(throwable);\n    }\n  }\n else {\n    if (cacheInvocationContext.hasKeyParameters()) {\n      StringBuilder cacheKeyBuilder=new StringBuilder();\n      for (      CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n        CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n        if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n          appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n        }\n else {\n          cacheKeyBuilder.append(parameter.getValue());\n        }\n      }\n      return new DefaultHystrixGeneratedCacheKey(cacheKeyBuilder.toString());\n    }\n else {\n      return DefaultHystrixGeneratedCacheKey.EMPTY;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1469,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public HystrixGeneratedCacheKey generateCacheKey(CacheInvocationContext<? extends Annotation> cacheInvocationContext) throws HystrixCacheKeyGenerationException {\n  MethodExecutionAction cacheKeyMethod=cacheInvocationContext.getCacheKeyMethod();\n  if (cacheKeyMethod != null) {\n    try {\n      return new DefaultHystrixGeneratedCacheKey((String)cacheKeyMethod.execute(cacheInvocationContext.getExecutionType()));\n    }\n catch (    Throwable throwable) {\n      throw new HystrixCacheKeyGenerationException(throwable);\n    }\n  }\n else {\n    if (cacheInvocationContext.hasKeyParameters()) {\n      StringBuilder cacheKeyBuilder=new StringBuilder();\n      for (      CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n        CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n        if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n          appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n        }\n else {\n          cacheKeyBuilder.append(parameter.getValue());\n        }\n      }\n      return new DefaultHystrixGeneratedCacheKey(cacheKeyBuilder.toString());\n    }\n else {\n      return DefaultHystrixGeneratedCacheKey.EMPTY;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 140
      },
      "nodeContext" : "appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "parameter.getValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 63,
      "startColumnNumber" : 47,
      "endLineNumber" : 63,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 63,
        "startColumnNumber" : 24,
        "endLineNumber" : 63,
        "endColumnNumber" : 68
      },
      "nodeContext" : "cacheKeyBuilder.append(parameter.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 63,
        "startColumnNumber" : 24,
        "endLineNumber" : 63,
        "endColumnNumber" : 69
      },
      "nodeContext" : "cacheKeyBuilder.append(parameter.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 62,
        "startColumnNumber" : 27,
        "endLineNumber" : 64,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  cacheKeyBuilder.append(parameter.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 64,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n  appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n}\n else {\n  cacheKeyBuilder.append(parameter.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 58,
        "startColumnNumber" : 101,
        "endLineNumber" : 65,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n  if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n    appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n  }\n else {\n    cacheKeyBuilder.append(parameter.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 529,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n  CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n  if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n    appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n  }\n else {\n    cacheKeyBuilder.append(parameter.getValue());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 56,
        "startColumnNumber" : 59,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  StringBuilder cacheKeyBuilder=new StringBuilder();\n  for (  CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n    CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n    if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n      appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n    }\n else {\n      cacheKeyBuilder.append(parameter.getValue());\n    }\n  }\n  return new DefaultHystrixGeneratedCacheKey(cacheKeyBuilder.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 848,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (cacheInvocationContext.hasKeyParameters()) {\n  StringBuilder cacheKeyBuilder=new StringBuilder();\n  for (  CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n    CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n    if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n      appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n    }\n else {\n      cacheKeyBuilder.append(parameter.getValue());\n    }\n  }\n  return new DefaultHystrixGeneratedCacheKey(cacheKeyBuilder.toString());\n}\n else {\n  return DefaultHystrixGeneratedCacheKey.EMPTY;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 872,
        "startLineNumber" : 55,
        "startColumnNumber" : 15,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (cacheInvocationContext.hasKeyParameters()) {\n    StringBuilder cacheKeyBuilder=new StringBuilder();\n    for (    CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n      CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n      if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n        appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n      }\n else {\n        cacheKeyBuilder.append(parameter.getValue());\n      }\n    }\n    return new DefaultHystrixGeneratedCacheKey(cacheKeyBuilder.toString());\n  }\n else {\n    return DefaultHystrixGeneratedCacheKey.EMPTY;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cacheKeyMethod != null) {\n  try {\n    return new DefaultHystrixGeneratedCacheKey((String)cacheKeyMethod.execute(cacheInvocationContext.getExecutionType()));\n  }\n catch (  Throwable throwable) {\n    throw new HystrixCacheKeyGenerationException(throwable);\n  }\n}\n else {\n  if (cacheInvocationContext.hasKeyParameters()) {\n    StringBuilder cacheKeyBuilder=new StringBuilder();\n    for (    CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n      CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n      if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n        appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n      }\n else {\n        cacheKeyBuilder.append(parameter.getValue());\n      }\n    }\n    return new DefaultHystrixGeneratedCacheKey(cacheKeyBuilder.toString());\n  }\n else {\n    return DefaultHystrixGeneratedCacheKey.EMPTY;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1309,
        "startLineNumber" : 47,
        "startColumnNumber" : 164,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MethodExecutionAction cacheKeyMethod=cacheInvocationContext.getCacheKeyMethod();\n  if (cacheKeyMethod != null) {\n    try {\n      return new DefaultHystrixGeneratedCacheKey((String)cacheKeyMethod.execute(cacheInvocationContext.getExecutionType()));\n    }\n catch (    Throwable throwable) {\n      throw new HystrixCacheKeyGenerationException(throwable);\n    }\n  }\n else {\n    if (cacheInvocationContext.hasKeyParameters()) {\n      StringBuilder cacheKeyBuilder=new StringBuilder();\n      for (      CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n        CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n        if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n          appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n        }\n else {\n          cacheKeyBuilder.append(parameter.getValue());\n        }\n      }\n      return new DefaultHystrixGeneratedCacheKey(cacheKeyBuilder.toString());\n    }\n else {\n      return DefaultHystrixGeneratedCacheKey.EMPTY;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1469,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public HystrixGeneratedCacheKey generateCacheKey(CacheInvocationContext<? extends Annotation> cacheInvocationContext) throws HystrixCacheKeyGenerationException {\n  MethodExecutionAction cacheKeyMethod=cacheInvocationContext.getCacheKeyMethod();\n  if (cacheKeyMethod != null) {\n    try {\n      return new DefaultHystrixGeneratedCacheKey((String)cacheKeyMethod.execute(cacheInvocationContext.getExecutionType()));\n    }\n catch (    Throwable throwable) {\n      throw new HystrixCacheKeyGenerationException(throwable);\n    }\n  }\n else {\n    if (cacheInvocationContext.hasKeyParameters()) {\n      StringBuilder cacheKeyBuilder=new StringBuilder();\n      for (      CacheInvocationParameter parameter : cacheInvocationContext.getKeyParameters()) {\n        CacheKey cacheKey=parameter.getCacheKeyAnnotation();\n        if (cacheKey != null && StringUtils.isNotBlank(cacheKey.value())) {\n          appendPropertyValue(cacheKeyBuilder,Arrays.asList(StringUtils.split(cacheKey.value(),\".\")),parameter.getValue());\n        }\n else {\n          cacheKeyBuilder.append(parameter.getValue());\n        }\n      }\n      return new DefaultHystrixGeneratedCacheKey(cacheKeyBuilder.toString());\n    }\n else {\n      return DefaultHystrixGeneratedCacheKey.EMPTY;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 63,
        "startColumnNumber" : 24,
        "endLineNumber" : 63,
        "endColumnNumber" : 69
      },
      "nodeContext" : "cacheKeyBuilder.append(parameter.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 61,
    "startColumnNumber" : 118,
    "endLineNumber" : 61,
    "endColumnNumber" : 138
  }, {
    "charLength" : 20,
    "startLineNumber" : 63,
    "startColumnNumber" : 47,
    "endLineNumber" : 63,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}