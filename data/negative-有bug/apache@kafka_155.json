{
  "id" : 155,
  "expression" : "toStoreKeyBinary(2,WINDOW_SIZE,0,serdes)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/state/internals/InMemoryWindowStoreTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "toStoreKeyBinary(2,WINDOW_SIZE,0,serdes)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 77,
      "startColumnNumber" : 45,
      "endLineNumber" : 77,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 6,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 77,
        "startColumnNumber" : 45,
        "endLineNumber" : 77,
        "endColumnNumber" : 94
      },
      "nodeContext" : "toStoreKeyBinary(2,WINDOW_SIZE,0,serdes).get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 77,
        "startColumnNumber" : 30,
        "endLineNumber" : 78,
        "endColumnNumber" : 35
      },
      "nodeContext" : "new KeyValue<>(toStoreKeyBinary(2,WINDOW_SIZE,0,serdes).get(),serdes.rawValue(\"two\"))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 36
      },
      "nodeContext" : "restorableEntries.add(new KeyValue<>(toStoreKeyBinary(2,WINDOW_SIZE,0,serdes).get(),serdes.rawValue(\"two\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 37
      },
      "nodeContext" : "restorableEntries.add(new KeyValue<>(toStoreKeyBinary(2,WINDOW_SIZE,0,serdes).get(),serdes.rawValue(\"two\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1186,
        "startLineNumber" : 66,
        "startColumnNumber" : 32,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertFalse(windowStore.all().hasNext());\n  final StateSerdes<Integer,String> serdes=new StateSerdes<>(\"\",Serdes.Integer(),Serdes.String());\n  final List<KeyValue<byte[],byte[]>> restorableEntries=new LinkedList<>();\n  restorableEntries.add(new KeyValue<>(toStoreKeyBinary(1,0L,0,serdes).get(),serdes.rawValue(\"one\")));\n  restorableEntries.add(new KeyValue<>(toStoreKeyBinary(2,WINDOW_SIZE,0,serdes).get(),serdes.rawValue(\"two\")));\n  restorableEntries.add(new KeyValue<>(toStoreKeyBinary(3,2 * WINDOW_SIZE,0,serdes).get(),serdes.rawValue(\"three\")));\n  context.restore(STORE_NAME,restorableEntries);\n  try (final KeyValueIterator<Windowed<Integer>,String> iterator=windowStore.fetchAll(0L,2 * WINDOW_SIZE)){\n    assertEquals(windowedPair(1,\"one\",0L),iterator.next());\n    assertEquals(windowedPair(2,\"two\",WINDOW_SIZE),iterator.next());\n    assertEquals(windowedPair(3,\"three\",2 * WINDOW_SIZE),iterator.next());\n    assertFalse(iterator.hasNext());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1259,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void shouldRestore(){\n  assertFalse(windowStore.all().hasNext());\n  final StateSerdes<Integer,String> serdes=new StateSerdes<>(\"\",Serdes.Integer(),Serdes.String());\n  final List<KeyValue<byte[],byte[]>> restorableEntries=new LinkedList<>();\n  restorableEntries.add(new KeyValue<>(toStoreKeyBinary(1,0L,0,serdes).get(),serdes.rawValue(\"one\")));\n  restorableEntries.add(new KeyValue<>(toStoreKeyBinary(2,WINDOW_SIZE,0,serdes).get(),serdes.rawValue(\"two\")));\n  restorableEntries.add(new KeyValue<>(toStoreKeyBinary(3,2 * WINDOW_SIZE,0,serdes).get(),serdes.rawValue(\"three\")));\n  context.restore(STORE_NAME,restorableEntries);\n  try (final KeyValueIterator<Windowed<Integer>,String> iterator=windowStore.fetchAll(0L,2 * WINDOW_SIZE)){\n    assertEquals(windowedPair(1,\"one\",0L),iterator.next());\n    assertEquals(windowedPair(2,\"two\",WINDOW_SIZE),iterator.next());\n    assertEquals(windowedPair(3,\"three\",2 * WINDOW_SIZE),iterator.next());\n    assertFalse(iterator.hasNext());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 77,
        "startColumnNumber" : 45,
        "endLineNumber" : 77,
        "endColumnNumber" : 94
      },
      "nodeContext" : "toStoreKeyBinary(2,WINDOW_SIZE,0,serdes).get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 6,
    "type" : "org.apache.kafka.common.utils.Bytes"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 77,
    "startColumnNumber" : 45,
    "endLineNumber" : 77,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ ]
}