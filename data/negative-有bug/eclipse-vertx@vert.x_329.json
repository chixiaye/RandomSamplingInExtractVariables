{
  "id" : 329,
  "expression" : "new Checker<>(composite)",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/FutureTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Checker<>(composite)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 201,
      "startColumnNumber" : 39,
      "endLineNumber" : 201,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 201,
        "startColumnNumber" : 29,
        "endLineNumber" : 201,
        "endColumnNumber" : 63
      },
      "nodeContext" : "checker=new Checker<>(composite)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Checker<CompositeFuture> checker=new Checker<>(composite);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 197,
        "startColumnNumber" : 98,
        "endLineNumber" : 213,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Future<String> f1=Future.future();\n  Future<Integer> f2=Future.future();\n  CompositeFuture composite=all.apply(f1,f2);\n  Checker<CompositeFuture> checker=new Checker<>(composite);\n  checker.assertNotCompleted();\n  assertEquals(null,composite.<String>result(0));\n  assertEquals(null,composite.<Integer>result(1));\n  f1.complete(\"something\");\n  checker.assertNotCompleted();\n  assertEquals(\"something\",composite.result(0));\n  assertEquals(null,composite.<Integer>result(1));\n  f2.complete(3);\n  checker.assertSucceeded(composite);\n  assertEquals(\"something\",composite.result(0));\n  assertEquals(3,(int)composite.result(1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 197,
        "startColumnNumber" : 2,
        "endLineNumber" : 213,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void testAllSucceeded(BiFunction<Future<String>,Future<Integer>,CompositeFuture> all){\n  Future<String> f1=Future.future();\n  Future<Integer> f2=Future.future();\n  CompositeFuture composite=all.apply(f1,f2);\n  Checker<CompositeFuture> checker=new Checker<>(composite);\n  checker.assertNotCompleted();\n  assertEquals(null,composite.<String>result(0));\n  assertEquals(null,composite.<Integer>result(1));\n  f1.complete(\"something\");\n  checker.assertNotCompleted();\n  assertEquals(\"something\",composite.result(0));\n  assertEquals(null,composite.<Integer>result(1));\n  f2.complete(3);\n  checker.assertSucceeded(composite);\n  assertEquals(\"something\",composite.result(0));\n  assertEquals(3,(int)composite.result(1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Checker<CompositeFuture> checker=new Checker<>(composite);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "io.vertx.test.core.FutureTest.Checker<io.vertx.core.CompositeFuture>"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 201,
    "startColumnNumber" : 39,
    "endLineNumber" : 201,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}