{
  "id" : 518,
  "expression" : "new LazyFluentIterable<T>(){\n  @Override public Iterator<T> iterator(){\n    return new DecoratingIterator<T>(null){\n      Iterator<E> oldTypeIterator=iterable.iterator();\n      @Override public T computeNext(){\n        if (oldTypeIterator.hasNext()) {\n          E candidate=oldTypeIterator.next();\n          return function.apply(candidate);\n        }\n else {\n          return null;\n        }\n      }\n    }\n;\n  }\n}\n",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/fluentinterface/src/main/java/com/iluwatar/fluentinterface/fluentiterable/lazy/LazyFluentIterable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new LazyFluentIterable<T>(){\n  @Override public Iterator<T> iterator(){\n    return new DecoratingIterator<T>(null){\n      Iterator<E> oldTypeIterator=iterable.iterator();\n      @Override public T computeNext(){\n        if (oldTypeIterator.hasNext()) {\n          E candidate=oldTypeIterator.next();\n          return function.apply(candidate);\n        }\n else {\n          return null;\n        }\n      }\n    }\n;\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 493,
      "startLineNumber" : 197,
      "startColumnNumber" : 11,
      "endLineNumber" : 214,
      "endColumnNumber" : 5
    },
    "astNodeNumber" : 67,
    "astHeight" : 15,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 197,
        "startColumnNumber" : 4,
        "endLineNumber" : 214,
        "endColumnNumber" : 6
      },
      "nodeContext" : "return new LazyFluentIterable<T>(){\n  @Override public Iterator<T> iterator(){\n    return new DecoratingIterator<T>(null){\n      Iterator<E> oldTypeIterator=iterable.iterator();\n      @Override public T computeNext(){\n        if (oldTypeIterator.hasNext()) {\n          E candidate=oldTypeIterator.next();\n          return function.apply(candidate);\n        }\n else {\n          return null;\n        }\n      }\n    }\n;\n  }\n}\n;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 68,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 511,
        "startLineNumber" : 196,
        "startColumnNumber" : 68,
        "endLineNumber" : 215,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return new LazyFluentIterable<T>(){\n    @Override public Iterator<T> iterator(){\n      return new DecoratingIterator<T>(null){\n        Iterator<E> oldTypeIterator=iterable.iterator();\n        @Override public T computeNext(){\n          if (oldTypeIterator.hasNext()) {\n            E candidate=oldTypeIterator.next();\n            return function.apply(candidate);\n          }\n else {\n            return null;\n          }\n        }\n      }\n;\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 887,
        "startLineNumber" : 188,
        "startColumnNumber" : 2,
        "endLineNumber" : 215,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Transforms this FluentIterable into a new one containing objects of the type T.\n * @param function a function that transforms an instance of E into an instance of T\n * @param < T >      the target type of the transformation\n * @return a new FluentIterable of the new type\n */\n@Override public <T>FluentIterable<T> map(Function<? super E,T> function){\n  return new LazyFluentIterable<T>(){\n    @Override public Iterator<T> iterator(){\n      return new DecoratingIterator<T>(null){\n        Iterator<E> oldTypeIterator=iterable.iterator();\n        @Override public T computeNext(){\n          if (oldTypeIterator.hasNext()) {\n            E candidate=oldTypeIterator.next();\n            return function.apply(candidate);\n          }\n else {\n            return null;\n          }\n        }\n      }\n;\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 197,
        "startColumnNumber" : 4,
        "endLineNumber" : 214,
        "endColumnNumber" : 6
      },
      "nodeContext" : "return new LazyFluentIterable<T>(){\n  @Override public Iterator<T> iterator(){\n    return new DecoratingIterator<T>(null){\n      Iterator<E> oldTypeIterator=iterable.iterator();\n      @Override public T computeNext(){\n        if (oldTypeIterator.hasNext()) {\n          E candidate=oldTypeIterator.next();\n          return function.apply(candidate);\n        }\n else {\n          return null;\n        }\n      }\n    }\n;\n  }\n}\n;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 68,
      "astHeight" : 16
    },
    "tokenLength" : 21,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 493,
    "startLineNumber" : 197,
    "startColumnNumber" : 11,
    "endLineNumber" : 214,
    "endColumnNumber" : 5
  } ],
  "layoutRelationDataList" : [ ]
}