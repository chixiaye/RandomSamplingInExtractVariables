{
  "id" : 242,
  "expression" : "exceptionClass",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/skyframe/ValueOrUntypedException.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "exceptionClass",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 57,
      "startColumnNumber" : 38,
      "endLineNumber" : 57,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 57,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Throwables.throwIfInstanceOf(e,exceptionClass)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 57,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Throwables.throwIfInstanceOf(e,exceptionClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 56,
        "startColumnNumber" : 19,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Throwables.throwIfInstanceOf(e,exceptionClass);\n  throw new IllegalStateException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (e != null) {\n  Throwables.throwIfInstanceOf(e,exceptionClass);\n  throw new IllegalStateException(e);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 54,
        "startColumnNumber" : 91,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Exception e=getException();\n  if (e != null) {\n    Throwables.throwIfInstanceOf(e,exceptionClass);\n    throw new IllegalStateException(e);\n  }\n  return getValue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 729,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the stored value, or  {@code null} if it has not yet been computed. If an exception isstored, it is thrown as-is if it is an instance of  {@code exceptionClass} and wrapped in {@link IllegalStateException} otherwise.<p>This method is useful when a value is only expected to store  {@code exceptionClass} but wasrequested in the same batch as values which may store other types of exceptions.\n */\n@Nullable public final <E extends Exception>SkyValue getOrThrow(Class<E> exceptionClass) throws E {\n  Exception e=getException();\n  if (e != null) {\n    Throwables.throwIfInstanceOf(e,exceptionClass);\n    throw new IllegalStateException(e);\n  }\n  return getValue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 57,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Throwables.throwIfInstanceOf(e,exceptionClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<E>"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 57,
    "startColumnNumber" : 38,
    "endLineNumber" : 57,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}