{
  "id" : 318,
  "expression" : "labs",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/naming/src/test/java/com/alibaba/nacos/naming/selector/LabelSelectorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "labs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 39,
      "startColumnNumber" : 33,
      "endLineNumber" : 39,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 39,
        "startColumnNumber" : 33,
        "endLineNumber" : 39,
        "endColumnNumber" : 40
      },
      "nodeContext" : "labs[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Assert.assertEquals(\"A\",labs[0])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assert.assertEquals(\"A\",labs[0]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 32,
        "startColumnNumber" : 56,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  expression=StringUtils.deleteWhitespace(expression);\n  List<String> terms=LabelSelector.ExpressionInterpreter.getTerms(expression);\n  Assert.assertEquals(7,terms.size());\n  Set<String> parseLables=LabelSelector.parseExpression(expression);\n  Assert.assertEquals(2,parseLables.size());\n  String[] labs=parseLables.toArray(new String[]{});\n  Assert.assertEquals(\"A\",labs[0]);\n  Assert.assertEquals(\"B\",labs[1]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void parseExpression() throws NacosException {\n  expression=StringUtils.deleteWhitespace(expression);\n  List<String> terms=LabelSelector.ExpressionInterpreter.getTerms(expression);\n  Assert.assertEquals(7,terms.size());\n  Set<String> parseLables=LabelSelector.parseExpression(expression);\n  Assert.assertEquals(2,parseLables.size());\n  String[] labs=parseLables.toArray(new String[]{});\n  Assert.assertEquals(\"A\",labs[0]);\n  Assert.assertEquals(\"B\",labs[1]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assert.assertEquals(\"A\",labs[0]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String[]"
  }, {
    "nodeContext" : "labs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 40,
      "startColumnNumber" : 33,
      "endLineNumber" : 40,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 40,
        "startColumnNumber" : 33,
        "endLineNumber" : 40,
        "endColumnNumber" : 40
      },
      "nodeContext" : "labs[1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Assert.assertEquals(\"B\",labs[1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assert.assertEquals(\"B\",labs[1]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 32,
        "startColumnNumber" : 56,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  expression=StringUtils.deleteWhitespace(expression);\n  List<String> terms=LabelSelector.ExpressionInterpreter.getTerms(expression);\n  Assert.assertEquals(7,terms.size());\n  Set<String> parseLables=LabelSelector.parseExpression(expression);\n  Assert.assertEquals(2,parseLables.size());\n  String[] labs=parseLables.toArray(new String[]{});\n  Assert.assertEquals(\"A\",labs[0]);\n  Assert.assertEquals(\"B\",labs[1]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void parseExpression() throws NacosException {\n  expression=StringUtils.deleteWhitespace(expression);\n  List<String> terms=LabelSelector.ExpressionInterpreter.getTerms(expression);\n  Assert.assertEquals(7,terms.size());\n  Set<String> parseLables=LabelSelector.parseExpression(expression);\n  Assert.assertEquals(2,parseLables.size());\n  String[] labs=parseLables.toArray(new String[]{});\n  Assert.assertEquals(\"A\",labs[0]);\n  Assert.assertEquals(\"B\",labs[1]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assert.assertEquals(\"B\",labs[1]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 39,
    "startColumnNumber" : 33,
    "endLineNumber" : 39,
    "endColumnNumber" : 37
  }, {
    "charLength" : 4,
    "startLineNumber" : 40,
    "startColumnNumber" : 33,
    "endLineNumber" : 40,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}