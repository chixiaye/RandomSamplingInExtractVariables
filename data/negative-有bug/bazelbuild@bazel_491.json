{
  "id" : 491,
  "expression" : "ParserInput",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/net/starlark/java/syntax/LValueBoundNamesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ParserInput",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 54,
      "startColumnNumber" : 24,
      "endLineNumber" : 54,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 54,
        "startColumnNumber" : 24,
        "endLineNumber" : 54,
        "endColumnNumber" : 57
      },
      "nodeContext" : "ParserInput.fromLines(assignment)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 57
      },
      "nodeContext" : "input=ParserInput.fromLines(assignment)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 58
      },
      "nodeContext" : "ParserInput input=ParserInput.fromLines(assignment);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 53,
        "startColumnNumber" : 88,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ParserInput input=ParserInput.fromLines(assignment);\n  StarlarkFile file=StarlarkFile.parse(input);\n  if (!file.ok()) {\n    throw new AssertionError(new SyntaxError.Exception(file.errors()));\n  }\n  Expression lhs=((AssignmentStatement)file.getStatements().get(0)).getLHS();\n  Set<String> boundNames=Identifier.boundIdentifiers(lhs).stream().map(Identifier::getName).collect(Collectors.toSet());\n  Truth.assertThat(boundNames).containsExactlyElementsIn(Arrays.asList(expectedBoundNames));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 640,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertBoundNames(String assignment,String... expectedBoundNames){\n  ParserInput input=ParserInput.fromLines(assignment);\n  StarlarkFile file=StarlarkFile.parse(input);\n  if (!file.ok()) {\n    throw new AssertionError(new SyntaxError.Exception(file.errors()));\n  }\n  Expression lhs=((AssignmentStatement)file.getStatements().get(0)).getLHS();\n  Set<String> boundNames=Identifier.boundIdentifiers(lhs).stream().map(Identifier::getName).collect(Collectors.toSet());\n  Truth.assertThat(boundNames).containsExactlyElementsIn(Arrays.asList(expectedBoundNames));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 58
      },
      "nodeContext" : "ParserInput input=ParserInput.fromLines(assignment);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "net.starlark.java.syntax.ParserInput"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 54,
    "startColumnNumber" : 24,
    "endLineNumber" : 54,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}