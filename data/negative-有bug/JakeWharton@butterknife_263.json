{
  "id" : 263,
  "expression" : "(DeclaredType)type",
  "projectName" : "JakeWharton@butterknife",
  "commitID" : "f89fb0f12f5a0c21d95dae234d53f590e1384557",
  "filePath" : "/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(DeclaredType)type",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 1059,
      "startColumnNumber" : 35,
      "endLineNumber" : 1059,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 1059,
        "startColumnNumber" : 34,
        "endLineNumber" : 1059,
        "endColumnNumber" : 55
      },
      "nodeContext" : "((DeclaredType)type)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 1059,
        "startColumnNumber" : 34,
        "endLineNumber" : 1059,
        "endColumnNumber" : 67
      },
      "nodeContext" : "((DeclaredType)type).asElement()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 1059,
        "startColumnNumber" : 20,
        "endLineNumber" : 1059,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(TypeElement)((DeclaredType)type).asElement()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 1059,
        "startColumnNumber" : 6,
        "endLineNumber" : 1059,
        "endColumnNumber" : 67
      },
      "nodeContext" : "typeElement=(TypeElement)((DeclaredType)type).asElement()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 1059,
        "startColumnNumber" : 6,
        "endLineNumber" : 1059,
        "endColumnNumber" : 68
      },
      "nodeContext" : "typeElement=(TypeElement)((DeclaredType)type).asElement();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 1054,
        "startColumnNumber" : 17,
        "endLineNumber" : 1064,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  type=typeElement.getSuperclass();\n  if (type.getKind() == TypeKind.NONE) {\n    return null;\n  }\n  typeElement=(TypeElement)((DeclaredType)type).asElement();\n  if (parents.contains(typeElement.toString())) {\n    String packageName=getPackageName(typeElement);\n    return packageName + \".\" + getClassName(typeElement,packageName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 400,
        "startLineNumber" : 1054,
        "startColumnNumber" : 4,
        "endLineNumber" : 1064,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  type=typeElement.getSuperclass();\n  if (type.getKind() == TypeKind.NONE) {\n    return null;\n  }\n  typeElement=(TypeElement)((DeclaredType)type).asElement();\n  if (parents.contains(typeElement.toString())) {\n    String packageName=getPackageName(typeElement);\n    return packageName + \".\" + getClassName(typeElement,packageName);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 57,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 1052,
        "startColumnNumber" : 78,
        "endLineNumber" : 1065,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TypeMirror type;\n  while (true) {\n    type=typeElement.getSuperclass();\n    if (type.getKind() == TypeKind.NONE) {\n      return null;\n    }\n    typeElement=(TypeElement)((DeclaredType)type).asElement();\n    if (parents.contains(typeElement.toString())) {\n      String packageName=getPackageName(typeElement);\n      return packageName + \".\" + getClassName(typeElement,packageName);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 1051,
        "startColumnNumber" : 2,
        "endLineNumber" : 1065,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Finds the parent binder type in the supplied set, if any. \n */\nprivate String findParentFqcn(TypeElement typeElement,Set<String> parents){\n  TypeMirror type;\n  while (true) {\n    type=typeElement.getSuperclass();\n    if (type.getKind() == TypeKind.NONE) {\n      return null;\n    }\n    typeElement=(TypeElement)((DeclaredType)type).asElement();\n    if (parents.contains(typeElement.toString())) {\n      String packageName=getPackageName(typeElement);\n      return packageName + \".\" + getClassName(typeElement,packageName);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 1059,
        "startColumnNumber" : 6,
        "endLineNumber" : 1059,
        "endColumnNumber" : 68
      },
      "nodeContext" : "typeElement=(TypeElement)((DeclaredType)type).asElement();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "javax.lang.model.type.DeclaredType"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 1059,
    "startColumnNumber" : 35,
    "endLineNumber" : 1059,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}