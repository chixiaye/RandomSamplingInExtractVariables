{
  "id" : 136,
  "expression" : "Math",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/samples/zoomable/src/main/java/com/facebook/samples/zoomable/DefaultZoomableController.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 439,
      "startColumnNumber" : 60,
      "endLineNumber" : 439,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 439,
        "startColumnNumber" : 60,
        "endLineNumber" : 439,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Math.PI",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 439,
        "startColumnNumber" : 54,
        "endLineNumber" : 439,
        "endColumnNumber" : 67
      },
      "nodeContext" : "180 / Math.PI",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 439,
        "startColumnNumber" : 53,
        "endLineNumber" : 439,
        "endColumnNumber" : 68
      },
      "nodeContext" : "(180 / Math.PI)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 439,
        "startColumnNumber" : 45,
        "endLineNumber" : 439,
        "endColumnNumber" : 68
      },
      "nodeContext" : "(float)(180 / Math.PI)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 439,
        "startColumnNumber" : 20,
        "endLineNumber" : 439,
        "endColumnNumber" : 68
      },
      "nodeContext" : "detector.getRotation() * (float)(180 / Math.PI)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 439,
        "startColumnNumber" : 12,
        "endLineNumber" : 439,
        "endColumnNumber" : 68
      },
      "nodeContext" : "angle=detector.getRotation() * (float)(180 / Math.PI)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 439,
        "startColumnNumber" : 6,
        "endLineNumber" : 439,
        "endColumnNumber" : 69
      },
      "nodeContext" : "float angle=detector.getRotation() * (float)(180 / Math.PI);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 438,
        "startColumnNumber" : 28,
        "endLineNumber" : 441,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float angle=detector.getRotation() * (float)(180 / Math.PI);\n  outTransform.postRotate(angle,detector.getPivotX(),detector.getPivotY());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 438,
        "startColumnNumber" : 4,
        "endLineNumber" : 441,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (mIsRotationEnabled) {\n  float angle=detector.getRotation() * (float)(180 / Math.PI);\n  outTransform.postRotate(angle,detector.getPivotX(),detector.getPivotY());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 434,
        "startColumnNumber" : 94,
        "endLineNumber" : 453,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TransformGestureDetector detector=mGestureDetector;\n  boolean transformCorrected=false;\n  outTransform.set(mPreviousTransform);\n  if (mIsRotationEnabled) {\n    float angle=detector.getRotation() * (float)(180 / Math.PI);\n    outTransform.postRotate(angle,detector.getPivotX(),detector.getPivotY());\n  }\n  if (mIsScaleEnabled) {\n    float scale=detector.getScale();\n    outTransform.postScale(scale,scale,detector.getPivotX(),detector.getPivotY());\n  }\n  transformCorrected|=limitScale(outTransform,detector.getPivotX(),detector.getPivotY(),limitTypes);\n  if (mIsTranslationEnabled) {\n    outTransform.postTranslate(detector.getTranslationX(),detector.getTranslationY());\n  }\n  transformCorrected|=limitTranslation(outTransform,limitTypes);\n  return transformCorrected;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1224,
        "startLineNumber" : 427,
        "startColumnNumber" : 2,
        "endLineNumber" : 453,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Calculates the zoom transformation based on the current gesture.\n * @param outTransform the matrix to store the result to\n * @param limitTypes whether to limit translation and/or scale.\n * @return whether or not the transform has been corrected due to limitation\n */\nprotected boolean calculateGestureTransform(Matrix outTransform,@LimitFlag int limitTypes){\n  TransformGestureDetector detector=mGestureDetector;\n  boolean transformCorrected=false;\n  outTransform.set(mPreviousTransform);\n  if (mIsRotationEnabled) {\n    float angle=detector.getRotation() * (float)(180 / Math.PI);\n    outTransform.postRotate(angle,detector.getPivotX(),detector.getPivotY());\n  }\n  if (mIsScaleEnabled) {\n    float scale=detector.getScale();\n    outTransform.postScale(scale,scale,detector.getPivotX(),detector.getPivotY());\n  }\n  transformCorrected|=limitScale(outTransform,detector.getPivotX(),detector.getPivotY(),limitTypes);\n  if (mIsTranslationEnabled) {\n    outTransform.postTranslate(detector.getTranslationX(),detector.getTranslationY());\n  }\n  transformCorrected|=limitTranslation(outTransform,limitTypes);\n  return transformCorrected;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 439,
        "startColumnNumber" : 6,
        "endLineNumber" : 439,
        "endColumnNumber" : 69
      },
      "nodeContext" : "float angle=detector.getRotation() * (float)(180 / Math.PI);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.Math"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 439,
    "startColumnNumber" : 60,
    "endLineNumber" : 439,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}