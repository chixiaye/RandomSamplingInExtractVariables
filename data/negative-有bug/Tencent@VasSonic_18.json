{
  "id" : 18,
  "expression" : "System",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "/sonic-android/sdk/src/main/java/com/tencent/sonic/sdk/download/SonicDownloadCache.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 79,
      "startColumnNumber" : 43,
      "endLineNumber" : 79,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 79,
        "startColumnNumber" : 43,
        "endLineNumber" : 79,
        "endColumnNumber" : 69
      },
      "nodeContext" : "System.currentTimeMillis()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 69
      },
      "nodeContext" : "resourceData.expiredTime < System.currentTimeMillis()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 79,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (resourceData.expiredTime < System.currentTimeMillis()) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2864,
        "startLineNumber" : 71,
        "startColumnNumber" : 59,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (TextUtils.isEmpty(resourceUrl)) {\n    return null;\n  }\n  String resourceId=SonicUtils.getMD5(resourceUrl);\n  SonicResourceDataHelper.ResourceData resourceData=SonicResourceDataHelper.getResourceData(resourceId);\n  if (resourceData.expiredTime < System.currentTimeMillis()) {\n    return null;\n  }\n  boolean verifyError;\n  byte[] resourceBytes=null;\n  if (TextUtils.isEmpty(resourceData.resourceSha1)) {\n    verifyError=true;\n    SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \"): resource data is empty.\");\n  }\n else {\n    String resourcePath=SonicFileUtils.getSonicResourcePath(resourceId);\n    File resourceFile=new File(resourcePath);\n    resourceBytes=SonicFileUtils.readFileToBytes(resourceFile);\n    verifyError=resourceBytes == null || resourceBytes.length <= 0;\n    if (verifyError) {\n      SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:cache data is null.\");\n    }\n else {\n      if (SonicEngine.getInstance().getConfig().VERIFY_CACHE_FILE_WITH_SHA1) {\n        if (!SonicFileUtils.verifyData(resourceBytes,resourceData.resourceSha1)) {\n          verifyError=true;\n          resourceBytes=null;\n          SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:verify html cache with sha1 fail.\");\n        }\n else {\n          SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") verify html cache with sha1 success.\");\n        }\n      }\n else {\n        if (resourceData.resourceSize != resourceFile.length()) {\n          verifyError=true;\n          resourceBytes=null;\n          SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:verify html cache with size fail.\");\n        }\n      }\n    }\n  }\n  if (verifyError) {\n    long startTime=System.currentTimeMillis();\n    SonicUtils.removeResourceCache(resourceId);\n    resourceData.reset();\n    SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n  }\n  return resourceBytes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 252,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2915,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public byte[] getResourceCache(String resourceUrl){\n  if (TextUtils.isEmpty(resourceUrl)) {\n    return null;\n  }\n  String resourceId=SonicUtils.getMD5(resourceUrl);\n  SonicResourceDataHelper.ResourceData resourceData=SonicResourceDataHelper.getResourceData(resourceId);\n  if (resourceData.expiredTime < System.currentTimeMillis()) {\n    return null;\n  }\n  boolean verifyError;\n  byte[] resourceBytes=null;\n  if (TextUtils.isEmpty(resourceData.resourceSha1)) {\n    verifyError=true;\n    SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \"): resource data is empty.\");\n  }\n else {\n    String resourcePath=SonicFileUtils.getSonicResourcePath(resourceId);\n    File resourceFile=new File(resourcePath);\n    resourceBytes=SonicFileUtils.readFileToBytes(resourceFile);\n    verifyError=resourceBytes == null || resourceBytes.length <= 0;\n    if (verifyError) {\n      SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:cache data is null.\");\n    }\n else {\n      if (SonicEngine.getInstance().getConfig().VERIFY_CACHE_FILE_WITH_SHA1) {\n        if (!SonicFileUtils.verifyData(resourceBytes,resourceData.resourceSha1)) {\n          verifyError=true;\n          resourceBytes=null;\n          SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:verify html cache with sha1 fail.\");\n        }\n else {\n          SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") verify html cache with sha1 success.\");\n        }\n      }\n else {\n        if (resourceData.resourceSize != resourceFile.length()) {\n          verifyError=true;\n          resourceBytes=null;\n          SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:verify html cache with size fail.\");\n        }\n      }\n    }\n  }\n  if (verifyError) {\n    long startTime=System.currentTimeMillis();\n    SonicUtils.removeResourceCache(resourceId);\n    resourceData.reset();\n    SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n  }\n  return resourceBytes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 69
      },
      "nodeContext" : "resourceData.expiredTime < System.currentTimeMillis()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 116,
      "startColumnNumber" : 33,
      "endLineNumber" : 116,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 116,
        "startColumnNumber" : 33,
        "endLineNumber" : 116,
        "endColumnNumber" : 59
      },
      "nodeContext" : "System.currentTimeMillis()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 116,
        "startColumnNumber" : 21,
        "endLineNumber" : 116,
        "endColumnNumber" : 59
      },
      "nodeContext" : "startTime=System.currentTimeMillis()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 116,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 60
      },
      "nodeContext" : "long startTime=System.currentTimeMillis();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 115,
        "startColumnNumber" : 29,
        "endLineNumber" : 120,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  long startTime=System.currentTimeMillis();\n  SonicUtils.removeResourceCache(resourceId);\n  resourceData.reset();\n  SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (verifyError) {\n  long startTime=System.currentTimeMillis();\n  SonicUtils.removeResourceCache(resourceId);\n  resourceData.reset();\n  SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2864,
        "startLineNumber" : 71,
        "startColumnNumber" : 59,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (TextUtils.isEmpty(resourceUrl)) {\n    return null;\n  }\n  String resourceId=SonicUtils.getMD5(resourceUrl);\n  SonicResourceDataHelper.ResourceData resourceData=SonicResourceDataHelper.getResourceData(resourceId);\n  if (resourceData.expiredTime < System.currentTimeMillis()) {\n    return null;\n  }\n  boolean verifyError;\n  byte[] resourceBytes=null;\n  if (TextUtils.isEmpty(resourceData.resourceSha1)) {\n    verifyError=true;\n    SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \"): resource data is empty.\");\n  }\n else {\n    String resourcePath=SonicFileUtils.getSonicResourcePath(resourceId);\n    File resourceFile=new File(resourcePath);\n    resourceBytes=SonicFileUtils.readFileToBytes(resourceFile);\n    verifyError=resourceBytes == null || resourceBytes.length <= 0;\n    if (verifyError) {\n      SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:cache data is null.\");\n    }\n else {\n      if (SonicEngine.getInstance().getConfig().VERIFY_CACHE_FILE_WITH_SHA1) {\n        if (!SonicFileUtils.verifyData(resourceBytes,resourceData.resourceSha1)) {\n          verifyError=true;\n          resourceBytes=null;\n          SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:verify html cache with sha1 fail.\");\n        }\n else {\n          SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") verify html cache with sha1 success.\");\n        }\n      }\n else {\n        if (resourceData.resourceSize != resourceFile.length()) {\n          verifyError=true;\n          resourceBytes=null;\n          SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:verify html cache with size fail.\");\n        }\n      }\n    }\n  }\n  if (verifyError) {\n    long startTime=System.currentTimeMillis();\n    SonicUtils.removeResourceCache(resourceId);\n    resourceData.reset();\n    SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n  }\n  return resourceBytes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 252,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2915,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public byte[] getResourceCache(String resourceUrl){\n  if (TextUtils.isEmpty(resourceUrl)) {\n    return null;\n  }\n  String resourceId=SonicUtils.getMD5(resourceUrl);\n  SonicResourceDataHelper.ResourceData resourceData=SonicResourceDataHelper.getResourceData(resourceId);\n  if (resourceData.expiredTime < System.currentTimeMillis()) {\n    return null;\n  }\n  boolean verifyError;\n  byte[] resourceBytes=null;\n  if (TextUtils.isEmpty(resourceData.resourceSha1)) {\n    verifyError=true;\n    SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \"): resource data is empty.\");\n  }\n else {\n    String resourcePath=SonicFileUtils.getSonicResourcePath(resourceId);\n    File resourceFile=new File(resourcePath);\n    resourceBytes=SonicFileUtils.readFileToBytes(resourceFile);\n    verifyError=resourceBytes == null || resourceBytes.length <= 0;\n    if (verifyError) {\n      SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:cache data is null.\");\n    }\n else {\n      if (SonicEngine.getInstance().getConfig().VERIFY_CACHE_FILE_WITH_SHA1) {\n        if (!SonicFileUtils.verifyData(resourceBytes,resourceData.resourceSha1)) {\n          verifyError=true;\n          resourceBytes=null;\n          SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:verify html cache with sha1 fail.\");\n        }\n else {\n          SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") verify html cache with sha1 success.\");\n        }\n      }\n else {\n        if (resourceData.resourceSize != resourceFile.length()) {\n          verifyError=true;\n          resourceBytes=null;\n          SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:verify html cache with size fail.\");\n        }\n      }\n    }\n  }\n  if (verifyError) {\n    long startTime=System.currentTimeMillis();\n    SonicUtils.removeResourceCache(resourceId);\n    resourceData.reset();\n    SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n  }\n  return resourceBytes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 116,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 60
      },
      "nodeContext" : "long startTime=System.currentTimeMillis();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 119,
      "startColumnNumber" : 136,
      "endLineNumber" : 119,
      "endColumnNumber" : 142
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 119,
        "startColumnNumber" : 136,
        "endLineNumber" : 119,
        "endColumnNumber" : 162
      },
      "nodeContext" : "System.currentTimeMillis()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 119,
        "startColumnNumber" : 136,
        "endLineNumber" : 119,
        "endColumnNumber" : 174
      },
      "nodeContext" : "System.currentTimeMillis() - startTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 119,
        "startColumnNumber" : 135,
        "endLineNumber" : 119,
        "endColumnNumber" : 175
      },
      "nodeContext" : "(System.currentTimeMillis() - startTime)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 119,
        "startColumnNumber" : 134,
        "endLineNumber" : 119,
        "endColumnNumber" : 175
      },
      "nodeContext" : "+(System.currentTimeMillis() - startTime)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 119,
        "startColumnNumber" : 46,
        "endLineNumber" : 119,
        "endColumnNumber" : 183
      },
      "nodeContext" : "\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 119,
        "startColumnNumber" : 16,
        "endLineNumber" : 119,
        "endColumnNumber" : 184
      },
      "nodeContext" : "SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 119,
        "startColumnNumber" : 16,
        "endLineNumber" : 119,
        "endColumnNumber" : 185
      },
      "nodeContext" : "SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 115,
        "startColumnNumber" : 29,
        "endLineNumber" : 120,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  long startTime=System.currentTimeMillis();\n  SonicUtils.removeResourceCache(resourceId);\n  resourceData.reset();\n  SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (verifyError) {\n  long startTime=System.currentTimeMillis();\n  SonicUtils.removeResourceCache(resourceId);\n  resourceData.reset();\n  SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2864,
        "startLineNumber" : 71,
        "startColumnNumber" : 59,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (TextUtils.isEmpty(resourceUrl)) {\n    return null;\n  }\n  String resourceId=SonicUtils.getMD5(resourceUrl);\n  SonicResourceDataHelper.ResourceData resourceData=SonicResourceDataHelper.getResourceData(resourceId);\n  if (resourceData.expiredTime < System.currentTimeMillis()) {\n    return null;\n  }\n  boolean verifyError;\n  byte[] resourceBytes=null;\n  if (TextUtils.isEmpty(resourceData.resourceSha1)) {\n    verifyError=true;\n    SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \"): resource data is empty.\");\n  }\n else {\n    String resourcePath=SonicFileUtils.getSonicResourcePath(resourceId);\n    File resourceFile=new File(resourcePath);\n    resourceBytes=SonicFileUtils.readFileToBytes(resourceFile);\n    verifyError=resourceBytes == null || resourceBytes.length <= 0;\n    if (verifyError) {\n      SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:cache data is null.\");\n    }\n else {\n      if (SonicEngine.getInstance().getConfig().VERIFY_CACHE_FILE_WITH_SHA1) {\n        if (!SonicFileUtils.verifyData(resourceBytes,resourceData.resourceSha1)) {\n          verifyError=true;\n          resourceBytes=null;\n          SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:verify html cache with sha1 fail.\");\n        }\n else {\n          SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") verify html cache with sha1 success.\");\n        }\n      }\n else {\n        if (resourceData.resourceSize != resourceFile.length()) {\n          verifyError=true;\n          resourceBytes=null;\n          SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:verify html cache with size fail.\");\n        }\n      }\n    }\n  }\n  if (verifyError) {\n    long startTime=System.currentTimeMillis();\n    SonicUtils.removeResourceCache(resourceId);\n    resourceData.reset();\n    SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n  }\n  return resourceBytes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 252,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2915,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public byte[] getResourceCache(String resourceUrl){\n  if (TextUtils.isEmpty(resourceUrl)) {\n    return null;\n  }\n  String resourceId=SonicUtils.getMD5(resourceUrl);\n  SonicResourceDataHelper.ResourceData resourceData=SonicResourceDataHelper.getResourceData(resourceId);\n  if (resourceData.expiredTime < System.currentTimeMillis()) {\n    return null;\n  }\n  boolean verifyError;\n  byte[] resourceBytes=null;\n  if (TextUtils.isEmpty(resourceData.resourceSha1)) {\n    verifyError=true;\n    SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \"): resource data is empty.\");\n  }\n else {\n    String resourcePath=SonicFileUtils.getSonicResourcePath(resourceId);\n    File resourceFile=new File(resourcePath);\n    resourceBytes=SonicFileUtils.readFileToBytes(resourceFile);\n    verifyError=resourceBytes == null || resourceBytes.length <= 0;\n    if (verifyError) {\n      SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:cache data is null.\");\n    }\n else {\n      if (SonicEngine.getInstance().getConfig().VERIFY_CACHE_FILE_WITH_SHA1) {\n        if (!SonicFileUtils.verifyData(resourceBytes,resourceData.resourceSha1)) {\n          verifyError=true;\n          resourceBytes=null;\n          SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:verify html cache with sha1 fail.\");\n        }\n else {\n          SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") verify html cache with sha1 success.\");\n        }\n      }\n else {\n        if (resourceData.resourceSize != resourceFile.length()) {\n          verifyError=true;\n          resourceBytes=null;\n          SonicUtils.log(TAG,Log.ERROR,\"get resource data(\" + resourceUrl + \") error:verify html cache with size fail.\");\n        }\n      }\n    }\n  }\n  if (verifyError) {\n    long startTime=System.currentTimeMillis();\n    SonicUtils.removeResourceCache(resourceId);\n    resourceData.reset();\n    SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n  }\n  return resourceBytes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 119,
        "startColumnNumber" : 16,
        "endLineNumber" : 119,
        "endColumnNumber" : 185
      },
      "nodeContext" : "SonicUtils.log(TAG,Log.INFO,\"get resource data(\" + resourceUrl + \") :verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 79,
    "startColumnNumber" : 43,
    "endLineNumber" : 79,
    "endColumnNumber" : 49
  }, {
    "charLength" : 6,
    "startLineNumber" : 116,
    "startColumnNumber" : 33,
    "endLineNumber" : 116,
    "endColumnNumber" : 39
  }, {
    "charLength" : 6,
    "startLineNumber" : 119,
    "startColumnNumber" : 136,
    "endLineNumber" : 119,
    "endColumnNumber" : 142
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  } ]
}