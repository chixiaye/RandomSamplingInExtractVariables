{
  "id" : 141,
  "expression" : "\"UTF-8\"",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/XmlFile.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"UTF-8\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 343,
      "startColumnNumber" : 19,
      "endLineNumber" : 343,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 343,
        "startColumnNumber" : 12,
        "endLineNumber" : 343,
        "endColumnNumber" : 27
      },
      "nodeContext" : "return \"UTF-8\";\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 338,
        "startColumnNumber" : 27,
        "endLineNumber" : 344,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (e.encoding != null)   return e.encoding;\n  return \"UTF-8\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 338,
        "startColumnNumber" : 10,
        "endLineNumber" : 344,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Eureka e) {\n  if (e.encoding != null)   return e.encoding;\n  return \"UTF-8\";\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 304,
        "startColumnNumber" : 8,
        "endLineNumber" : 350,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (InputStream in=Files.newInputStream(file.toPath())){\n  InputSource input=new InputSource(file.toURI().toASCIIString());\n  input.setByteStream(in);\n  JAXP.newSAXParser().parse(input,new DefaultHandler(){\n    private Locator loc;\n    @Override public void setDocumentLocator(    Locator locator){\n      this.loc=locator;\n    }\n    @Override public void startDocument() throws SAXException {\n      attempt();\n    }\n    @Override public void startElement(    String uri,    String localName,    String qName,    Attributes attributes) throws SAXException {\n      attempt();\n      throw new Eureka(null);\n    }\n    private void attempt() throws Eureka {\n      if (loc == null)       return;\n      if (loc instanceof Locator2) {\n        Locator2 loc2=(Locator2)loc;\n        String e=loc2.getEncoding();\n        if (e != null)         throw new Eureka(e);\n      }\n    }\n  }\n);\n  throw new AssertionError();\n}\n catch (Eureka e) {\n  if (e.encoding != null)   return e.encoding;\n  return \"UTF-8\";\n}\ncatch (SAXException e) {\n  throw new IOException(\"Failed to detect encoding of \" + file,e);\n}\ncatch (InvalidPathException e) {\n  throw new IOException(e);\n}\ncatch (ParserConfigurationException e) {\n  throw new AssertionError(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 212,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2322,
        "startLineNumber" : 296,
        "startColumnNumber" : 53,
        "endLineNumber" : 351,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nclass Eureka extends SAXException {\n    final String encoding;\n    Eureka(    String encoding){\n      this.encoding=encoding;\n    }\n  }\n  try (InputStream in=Files.newInputStream(file.toPath())){\n    InputSource input=new InputSource(file.toURI().toASCIIString());\n    input.setByteStream(in);\n    JAXP.newSAXParser().parse(input,new DefaultHandler(){\n      private Locator loc;\n      @Override public void setDocumentLocator(      Locator locator){\n        this.loc=locator;\n      }\n      @Override public void startDocument() throws SAXException {\n        attempt();\n      }\n      @Override public void startElement(      String uri,      String localName,      String qName,      Attributes attributes) throws SAXException {\n        attempt();\n        throw new Eureka(null);\n      }\n      private void attempt() throws Eureka {\n        if (loc == null)         return;\n        if (loc instanceof Locator2) {\n          Locator2 loc2=(Locator2)loc;\n          String e=loc2.getEncoding();\n          if (e != null)           throw new Eureka(e);\n        }\n      }\n    }\n);\n    throw new AssertionError();\n  }\n catch (  Eureka e) {\n    if (e.encoding != null)     return e.encoding;\n    return \"UTF-8\";\n  }\ncatch (  SAXException e) {\n    throw new IOException(\"Failed to detect encoding of \" + file,e);\n  }\ncatch (  InvalidPathException e) {\n    throw new IOException(e);\n  }\ncatch (  ParserConfigurationException e) {\n    throw new AssertionError(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 237,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2584,
        "startLineNumber" : 288,
        "startColumnNumber" : 4,
        "endLineNumber" : 351,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Parses the beginning of the file and determines the encoding.\n * @throws IOException if failed to detect encoding.\n * @return always non-null.\n */\npublic String sniffEncoding() throws IOException {\nclass Eureka extends SAXException {\n    final String encoding;\n    Eureka(    String encoding){\n      this.encoding=encoding;\n    }\n  }\n  try (InputStream in=Files.newInputStream(file.toPath())){\n    InputSource input=new InputSource(file.toURI().toASCIIString());\n    input.setByteStream(in);\n    JAXP.newSAXParser().parse(input,new DefaultHandler(){\n      private Locator loc;\n      @Override public void setDocumentLocator(      Locator locator){\n        this.loc=locator;\n      }\n      @Override public void startDocument() throws SAXException {\n        attempt();\n      }\n      @Override public void startElement(      String uri,      String localName,      String qName,      Attributes attributes) throws SAXException {\n        attempt();\n        throw new Eureka(null);\n      }\n      private void attempt() throws Eureka {\n        if (loc == null)         return;\n        if (loc instanceof Locator2) {\n          Locator2 loc2=(Locator2)loc;\n          String e=loc2.getEncoding();\n          if (e != null)           throw new Eureka(e);\n        }\n      }\n    }\n);\n    throw new AssertionError();\n  }\n catch (  Eureka e) {\n    if (e.encoding != null)     return e.encoding;\n    return \"UTF-8\";\n  }\ncatch (  SAXException e) {\n    throw new IOException(\"Failed to detect encoding of \" + file,e);\n  }\ncatch (  InvalidPathException e) {\n    throw new IOException(e);\n  }\ncatch (  ParserConfigurationException e) {\n    throw new AssertionError(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 245,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 343,
        "startColumnNumber" : 12,
        "endLineNumber" : 343,
        "endColumnNumber" : 27
      },
      "nodeContext" : "return \"UTF-8\";\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 343,
    "startColumnNumber" : 19,
    "endLineNumber" : 343,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}