{
  "id" : 328,
  "expression" : "(char)((Number)tree.value).intValue()",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/delombok/lombok/delombok/PrettyCommentsPrinter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(char)((Number)tree.value).intValue()",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 1335,
      "startColumnNumber" : 43,
      "endLineNumber" : 1335,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 11,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 1335,
        "startColumnNumber" : 28,
        "endLineNumber" : 1335,
        "endColumnNumber" : 81
      },
      "nodeContext" : "String.valueOf((char)((Number)tree.value).intValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 1334,
        "startColumnNumber" : 28,
        "endLineNumber" : 1335,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Convert.quote(String.valueOf((char)((Number)tree.value).intValue()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 1333,
        "startColumnNumber" : 26,
        "endLineNumber" : 1336,
        "endColumnNumber" : 32
      },
      "nodeContext" : "\"\\'\" + Convert.quote(String.valueOf((char)((Number)tree.value).intValue())) + \"\\'\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 1333,
        "startColumnNumber" : 20,
        "endLineNumber" : 1336,
        "endColumnNumber" : 33
      },
      "nodeContext" : "print(\"\\'\" + Convert.quote(String.valueOf((char)((Number)tree.value).intValue())) + \"\\'\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 1333,
        "startColumnNumber" : 20,
        "endLineNumber" : 1336,
        "endColumnNumber" : 34
      },
      "nodeContext" : "print(\"\\'\" + Convert.quote(String.valueOf((char)((Number)tree.value).intValue())) + \"\\'\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1118,
        "startLineNumber" : 1319,
        "startColumnNumber" : 12,
        "endLineNumber" : 1347,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (tree.typetag) {\ncase TypeTags.INT:  print(tree.value.toString());\nbreak;\ncase TypeTags.LONG:print(tree.value + \"L\");\nbreak;\ncase TypeTags.FLOAT:print(tree.value + \"F\");\nbreak;\ncase TypeTags.DOUBLE:print(tree.value.toString());\nbreak;\ncase TypeTags.CHAR:print(\"\\'\" + Convert.quote(String.valueOf((char)((Number)tree.value).intValue())) + \"\\'\");\nbreak;\ncase TypeTags.BOOLEAN:print(((Number)tree.value).intValue() == 1 ? \"true\" : \"false\");\nbreak;\ncase TypeTags.BOT:print(\"null\");\nbreak;\ndefault:print(\"\\\"\" + Convert.quote(tree.value.toString()) + \"\\\"\");\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 131,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1142,
        "startLineNumber" : 1318,
        "startColumnNumber" : 12,
        "endLineNumber" : 1348,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\nswitch (tree.typetag) {\ncase TypeTags.INT:    print(tree.value.toString());\n  break;\ncase TypeTags.LONG:print(tree.value + \"L\");\nbreak;\ncase TypeTags.FLOAT:print(tree.value + \"F\");\nbreak;\ncase TypeTags.DOUBLE:print(tree.value.toString());\nbreak;\ncase TypeTags.CHAR:print(\"\\'\" + Convert.quote(String.valueOf((char)((Number)tree.value).intValue())) + \"\\'\");\nbreak;\ncase TypeTags.BOOLEAN:print(((Number)tree.value).intValue() == 1 ? \"true\" : \"false\");\nbreak;\ncase TypeTags.BOT:print(\"null\");\nbreak;\ndefault:print(\"\\\"\" + Convert.quote(tree.value.toString()) + \"\\\"\");\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1227,
        "startLineNumber" : 1318,
        "startColumnNumber" : 8,
        "endLineNumber" : 1350,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\nswitch (tree.typetag) {\ncase TypeTags.INT:    print(tree.value.toString());\n  break;\ncase TypeTags.LONG:print(tree.value + \"L\");\nbreak;\ncase TypeTags.FLOAT:print(tree.value + \"F\");\nbreak;\ncase TypeTags.DOUBLE:print(tree.value.toString());\nbreak;\ncase TypeTags.CHAR:print(\"\\'\" + Convert.quote(String.valueOf((char)((Number)tree.value).intValue())) + \"\\'\");\nbreak;\ncase TypeTags.BOOLEAN:print(((Number)tree.value).intValue() == 1 ? \"true\" : \"false\");\nbreak;\ncase TypeTags.BOT:print(\"null\");\nbreak;\ndefault:print(\"\\\"\" + Convert.quote(tree.value.toString()) + \"\\\"\");\nbreak;\n}\n}\n catch (IOException e) {\nthrow new UncheckedIOException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 144,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1243,
        "startLineNumber" : 1317,
        "startColumnNumber" : 45,
        "endLineNumber" : 1351,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\nswitch (tree.typetag) {\ncase TypeTags.INT:      print(tree.value.toString());\n    break;\ncase TypeTags.LONG:  print(tree.value + \"L\");\nbreak;\ncase TypeTags.FLOAT:print(tree.value + \"F\");\nbreak;\ncase TypeTags.DOUBLE:print(tree.value.toString());\nbreak;\ncase TypeTags.CHAR:print(\"\\'\" + Convert.quote(String.valueOf((char)((Number)tree.value).intValue())) + \"\\'\");\nbreak;\ncase TypeTags.BOOLEAN:print(((Number)tree.value).intValue() == 1 ? \"true\" : \"false\");\nbreak;\ncase TypeTags.BOT:print(\"null\");\nbreak;\ndefault:print(\"\\\"\" + Convert.quote(tree.value.toString()) + \"\\\"\");\nbreak;\n}\n}\n catch (IOException e) {\nthrow new UncheckedIOException(e);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1284,
        "startLineNumber" : 1317,
        "startColumnNumber" : 4,
        "endLineNumber" : 1351,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void visitLiteral(JCLiteral tree){\n  try {\nswitch (tree.typetag) {\ncase TypeTags.INT:      print(tree.value.toString());\n    break;\ncase TypeTags.LONG:  print(tree.value + \"L\");\nbreak;\ncase TypeTags.FLOAT:print(tree.value + \"F\");\nbreak;\ncase TypeTags.DOUBLE:print(tree.value.toString());\nbreak;\ncase TypeTags.CHAR:print(\"\\'\" + Convert.quote(String.valueOf((char)((Number)tree.value).intValue())) + \"\\'\");\nbreak;\ncase TypeTags.BOOLEAN:print(((Number)tree.value).intValue() == 1 ? \"true\" : \"false\");\nbreak;\ncase TypeTags.BOT:print(\"null\");\nbreak;\ndefault:print(\"\\\"\" + Convert.quote(tree.value.toString()) + \"\\\"\");\nbreak;\n}\n}\n catch (IOException e) {\nthrow new UncheckedIOException(e);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 1335,
        "startColumnNumber" : 28,
        "endLineNumber" : 1335,
        "endColumnNumber" : 81
      },
      "nodeContext" : "String.valueOf((char)((Number)tree.value).intValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 1335,
    "startColumnNumber" : 43,
    "endLineNumber" : 1335,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}