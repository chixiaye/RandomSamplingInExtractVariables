{
  "id" : 72,
  "expression" : "field",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/core/deployment/src/main/java/io/quarkus/deployment/dev/ClassComparisonUtil.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "field",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 41,
      "startColumnNumber" : 41,
      "endLineNumber" : 41,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 41,
        "startColumnNumber" : 41,
        "endLineNumber" : 41,
        "endColumnNumber" : 53
      },
      "nodeContext" : "field.name()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 41,
        "startColumnNumber" : 27,
        "endLineNumber" : 41,
        "endColumnNumber" : 54
      },
      "nodeContext" : "oldFields.get(field.name())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 41,
        "startColumnNumber" : 22,
        "endLineNumber" : 41,
        "endColumnNumber" : 54
      },
      "nodeContext" : "of=oldFields.get(field.name())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 55
      },
      "nodeContext" : "FieldInfo of=oldFields.get(field.name());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 40,
        "startColumnNumber" : 47,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  FieldInfo of=oldFields.get(field.name());\n  if (of == null) {\n    return false;\n  }\n  if (of.flags() != field.flags()) {\n    return false;\n  }\n  if (!of.type().equals(field.type())) {\n    return false;\n  }\n  if (!compareAnnotations(of.annotations(),field.annotations())) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 488,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (FieldInfo field : clazz.fields()) {\n  FieldInfo of=oldFields.get(field.name());\n  if (of == null) {\n    return false;\n  }\n  if (of.flags() != field.flags()) {\n    return false;\n  }\n  if (!of.type().equals(field.type())) {\n    return false;\n  }\n  if (!compareAnnotations(of.annotations(),field.annotations())) {\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 64,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2849,
        "startLineNumber" : 22,
        "startColumnNumber" : 67,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (clazz.flags() != old.flags()) {\n    return false;\n  }\n  if (!clazz.typeParameters().equals(old.typeParameters())) {\n    return false;\n  }\n  if (!clazz.interfaceNames().equals(old.interfaceNames())) {\n    return false;\n  }\n  if (!compareAnnotations(clazz.classAnnotations(),old.classAnnotations())) {\n    return false;\n  }\n  if (old.fields().size() != clazz.fields().size()) {\n    return false;\n  }\n  Map<String,FieldInfo> oldFields=old.fields().stream().collect(Collectors.toMap(FieldInfo::name,Function.identity()));\n  for (  FieldInfo field : clazz.fields()) {\n    FieldInfo of=oldFields.get(field.name());\n    if (of == null) {\n      return false;\n    }\n    if (of.flags() != field.flags()) {\n      return false;\n    }\n    if (!of.type().equals(field.type())) {\n      return false;\n    }\n    if (!compareAnnotations(of.annotations(),field.annotations())) {\n      return false;\n    }\n  }\n  List<MethodInfo> methods=clazz.methods();\n  List<MethodInfo> oldMethods=old.methods();\n  if (methods.size() != oldMethods.size()) {\n    return false;\n  }\n  for (  MethodInfo method : methods) {\n    MethodInfo om=null;\n    for (    MethodInfo i : oldMethods) {\n      if (!i.name().equals(method.name())) {\n        continue;\n      }\n      if (!i.returnType().equals(method.returnType())) {\n        continue;\n      }\n      if (i.parameters().size() != method.parameters().size()) {\n        continue;\n      }\n      if (i.flags() != method.flags()) {\n        continue;\n      }\n      if (!Objects.equals(i.defaultValue(),method.defaultValue())) {\n        continue;\n      }\n      boolean paramEqual=true;\n      for (int j=0; j < method.parameters().size(); ++j) {\n        Type a=method.parameters().get(j);\n        Type b=i.parameters().get(j);\n        if (!a.equals(b)) {\n          paramEqual=false;\n          break;\n        }\n      }\n      if (!paramEqual) {\n        continue;\n      }\n      if (!compareMethodAnnotations(i.annotations(),method.annotations())) {\n        continue;\n      }\n      om=i;\n    }\n    if (om == null) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 355,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2912,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static boolean isSameStructure(ClassInfo clazz,ClassInfo old){\n  if (clazz.flags() != old.flags()) {\n    return false;\n  }\n  if (!clazz.typeParameters().equals(old.typeParameters())) {\n    return false;\n  }\n  if (!clazz.interfaceNames().equals(old.interfaceNames())) {\n    return false;\n  }\n  if (!compareAnnotations(clazz.classAnnotations(),old.classAnnotations())) {\n    return false;\n  }\n  if (old.fields().size() != clazz.fields().size()) {\n    return false;\n  }\n  Map<String,FieldInfo> oldFields=old.fields().stream().collect(Collectors.toMap(FieldInfo::name,Function.identity()));\n  for (  FieldInfo field : clazz.fields()) {\n    FieldInfo of=oldFields.get(field.name());\n    if (of == null) {\n      return false;\n    }\n    if (of.flags() != field.flags()) {\n      return false;\n    }\n    if (!of.type().equals(field.type())) {\n      return false;\n    }\n    if (!compareAnnotations(of.annotations(),field.annotations())) {\n      return false;\n    }\n  }\n  List<MethodInfo> methods=clazz.methods();\n  List<MethodInfo> oldMethods=old.methods();\n  if (methods.size() != oldMethods.size()) {\n    return false;\n  }\n  for (  MethodInfo method : methods) {\n    MethodInfo om=null;\n    for (    MethodInfo i : oldMethods) {\n      if (!i.name().equals(method.name())) {\n        continue;\n      }\n      if (!i.returnType().equals(method.returnType())) {\n        continue;\n      }\n      if (i.parameters().size() != method.parameters().size()) {\n        continue;\n      }\n      if (i.flags() != method.flags()) {\n        continue;\n      }\n      if (!Objects.equals(i.defaultValue(),method.defaultValue())) {\n        continue;\n      }\n      boolean paramEqual=true;\n      for (int j=0; j < method.parameters().size(); ++j) {\n        Type a=method.parameters().get(j);\n        Type b=i.parameters().get(j);\n        if (!a.equals(b)) {\n          paramEqual=false;\n          break;\n        }\n      }\n      if (!paramEqual) {\n        continue;\n      }\n      if (!compareMethodAnnotations(i.annotations(),method.annotations())) {\n        continue;\n      }\n      om=i;\n    }\n    if (om == null) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 367,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 55
      },
      "nodeContext" : "FieldInfo of=oldFields.get(field.name());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.quarkus.deployment.dev.FieldInfo"
  }, {
    "nodeContext" : "field",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 45,
      "startColumnNumber" : 30,
      "endLineNumber" : 45,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 45,
        "startColumnNumber" : 30,
        "endLineNumber" : 45,
        "endColumnNumber" : 43
      },
      "nodeContext" : "field.flags()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 43
      },
      "nodeContext" : "of.flags() != field.flags()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (of.flags() != field.flags()) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 40,
        "startColumnNumber" : 47,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  FieldInfo of=oldFields.get(field.name());\n  if (of == null) {\n    return false;\n  }\n  if (of.flags() != field.flags()) {\n    return false;\n  }\n  if (!of.type().equals(field.type())) {\n    return false;\n  }\n  if (!compareAnnotations(of.annotations(),field.annotations())) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 488,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (FieldInfo field : clazz.fields()) {\n  FieldInfo of=oldFields.get(field.name());\n  if (of == null) {\n    return false;\n  }\n  if (of.flags() != field.flags()) {\n    return false;\n  }\n  if (!of.type().equals(field.type())) {\n    return false;\n  }\n  if (!compareAnnotations(of.annotations(),field.annotations())) {\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 64,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2849,
        "startLineNumber" : 22,
        "startColumnNumber" : 67,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (clazz.flags() != old.flags()) {\n    return false;\n  }\n  if (!clazz.typeParameters().equals(old.typeParameters())) {\n    return false;\n  }\n  if (!clazz.interfaceNames().equals(old.interfaceNames())) {\n    return false;\n  }\n  if (!compareAnnotations(clazz.classAnnotations(),old.classAnnotations())) {\n    return false;\n  }\n  if (old.fields().size() != clazz.fields().size()) {\n    return false;\n  }\n  Map<String,FieldInfo> oldFields=old.fields().stream().collect(Collectors.toMap(FieldInfo::name,Function.identity()));\n  for (  FieldInfo field : clazz.fields()) {\n    FieldInfo of=oldFields.get(field.name());\n    if (of == null) {\n      return false;\n    }\n    if (of.flags() != field.flags()) {\n      return false;\n    }\n    if (!of.type().equals(field.type())) {\n      return false;\n    }\n    if (!compareAnnotations(of.annotations(),field.annotations())) {\n      return false;\n    }\n  }\n  List<MethodInfo> methods=clazz.methods();\n  List<MethodInfo> oldMethods=old.methods();\n  if (methods.size() != oldMethods.size()) {\n    return false;\n  }\n  for (  MethodInfo method : methods) {\n    MethodInfo om=null;\n    for (    MethodInfo i : oldMethods) {\n      if (!i.name().equals(method.name())) {\n        continue;\n      }\n      if (!i.returnType().equals(method.returnType())) {\n        continue;\n      }\n      if (i.parameters().size() != method.parameters().size()) {\n        continue;\n      }\n      if (i.flags() != method.flags()) {\n        continue;\n      }\n      if (!Objects.equals(i.defaultValue(),method.defaultValue())) {\n        continue;\n      }\n      boolean paramEqual=true;\n      for (int j=0; j < method.parameters().size(); ++j) {\n        Type a=method.parameters().get(j);\n        Type b=i.parameters().get(j);\n        if (!a.equals(b)) {\n          paramEqual=false;\n          break;\n        }\n      }\n      if (!paramEqual) {\n        continue;\n      }\n      if (!compareMethodAnnotations(i.annotations(),method.annotations())) {\n        continue;\n      }\n      om=i;\n    }\n    if (om == null) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 355,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2912,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static boolean isSameStructure(ClassInfo clazz,ClassInfo old){\n  if (clazz.flags() != old.flags()) {\n    return false;\n  }\n  if (!clazz.typeParameters().equals(old.typeParameters())) {\n    return false;\n  }\n  if (!clazz.interfaceNames().equals(old.interfaceNames())) {\n    return false;\n  }\n  if (!compareAnnotations(clazz.classAnnotations(),old.classAnnotations())) {\n    return false;\n  }\n  if (old.fields().size() != clazz.fields().size()) {\n    return false;\n  }\n  Map<String,FieldInfo> oldFields=old.fields().stream().collect(Collectors.toMap(FieldInfo::name,Function.identity()));\n  for (  FieldInfo field : clazz.fields()) {\n    FieldInfo of=oldFields.get(field.name());\n    if (of == null) {\n      return false;\n    }\n    if (of.flags() != field.flags()) {\n      return false;\n    }\n    if (!of.type().equals(field.type())) {\n      return false;\n    }\n    if (!compareAnnotations(of.annotations(),field.annotations())) {\n      return false;\n    }\n  }\n  List<MethodInfo> methods=clazz.methods();\n  List<MethodInfo> oldMethods=old.methods();\n  if (methods.size() != oldMethods.size()) {\n    return false;\n  }\n  for (  MethodInfo method : methods) {\n    MethodInfo om=null;\n    for (    MethodInfo i : oldMethods) {\n      if (!i.name().equals(method.name())) {\n        continue;\n      }\n      if (!i.returnType().equals(method.returnType())) {\n        continue;\n      }\n      if (i.parameters().size() != method.parameters().size()) {\n        continue;\n      }\n      if (i.flags() != method.flags()) {\n        continue;\n      }\n      if (!Objects.equals(i.defaultValue(),method.defaultValue())) {\n        continue;\n      }\n      boolean paramEqual=true;\n      for (int j=0; j < method.parameters().size(); ++j) {\n        Type a=method.parameters().get(j);\n        Type b=i.parameters().get(j);\n        if (!a.equals(b)) {\n          paramEqual=false;\n          break;\n        }\n      }\n      if (!paramEqual) {\n        continue;\n      }\n      if (!compareMethodAnnotations(i.annotations(),method.annotations())) {\n        continue;\n      }\n      om=i;\n    }\n    if (om == null) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 367,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 43
      },
      "nodeContext" : "of.flags() != field.flags()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.quarkus.deployment.dev.FieldInfo"
  }, {
    "nodeContext" : "field",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 48,
      "startColumnNumber" : 34,
      "endLineNumber" : 48,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 48,
        "startColumnNumber" : 34,
        "endLineNumber" : 48,
        "endColumnNumber" : 46
      },
      "nodeContext" : "field.type()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 48,
        "startColumnNumber" : 17,
        "endLineNumber" : 48,
        "endColumnNumber" : 47
      },
      "nodeContext" : "of.type().equals(field.type())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 48,
        "startColumnNumber" : 16,
        "endLineNumber" : 48,
        "endColumnNumber" : 47
      },
      "nodeContext" : "!of.type().equals(field.type())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!of.type().equals(field.type())) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 40,
        "startColumnNumber" : 47,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  FieldInfo of=oldFields.get(field.name());\n  if (of == null) {\n    return false;\n  }\n  if (of.flags() != field.flags()) {\n    return false;\n  }\n  if (!of.type().equals(field.type())) {\n    return false;\n  }\n  if (!compareAnnotations(of.annotations(),field.annotations())) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 488,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (FieldInfo field : clazz.fields()) {\n  FieldInfo of=oldFields.get(field.name());\n  if (of == null) {\n    return false;\n  }\n  if (of.flags() != field.flags()) {\n    return false;\n  }\n  if (!of.type().equals(field.type())) {\n    return false;\n  }\n  if (!compareAnnotations(of.annotations(),field.annotations())) {\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 64,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2849,
        "startLineNumber" : 22,
        "startColumnNumber" : 67,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (clazz.flags() != old.flags()) {\n    return false;\n  }\n  if (!clazz.typeParameters().equals(old.typeParameters())) {\n    return false;\n  }\n  if (!clazz.interfaceNames().equals(old.interfaceNames())) {\n    return false;\n  }\n  if (!compareAnnotations(clazz.classAnnotations(),old.classAnnotations())) {\n    return false;\n  }\n  if (old.fields().size() != clazz.fields().size()) {\n    return false;\n  }\n  Map<String,FieldInfo> oldFields=old.fields().stream().collect(Collectors.toMap(FieldInfo::name,Function.identity()));\n  for (  FieldInfo field : clazz.fields()) {\n    FieldInfo of=oldFields.get(field.name());\n    if (of == null) {\n      return false;\n    }\n    if (of.flags() != field.flags()) {\n      return false;\n    }\n    if (!of.type().equals(field.type())) {\n      return false;\n    }\n    if (!compareAnnotations(of.annotations(),field.annotations())) {\n      return false;\n    }\n  }\n  List<MethodInfo> methods=clazz.methods();\n  List<MethodInfo> oldMethods=old.methods();\n  if (methods.size() != oldMethods.size()) {\n    return false;\n  }\n  for (  MethodInfo method : methods) {\n    MethodInfo om=null;\n    for (    MethodInfo i : oldMethods) {\n      if (!i.name().equals(method.name())) {\n        continue;\n      }\n      if (!i.returnType().equals(method.returnType())) {\n        continue;\n      }\n      if (i.parameters().size() != method.parameters().size()) {\n        continue;\n      }\n      if (i.flags() != method.flags()) {\n        continue;\n      }\n      if (!Objects.equals(i.defaultValue(),method.defaultValue())) {\n        continue;\n      }\n      boolean paramEqual=true;\n      for (int j=0; j < method.parameters().size(); ++j) {\n        Type a=method.parameters().get(j);\n        Type b=i.parameters().get(j);\n        if (!a.equals(b)) {\n          paramEqual=false;\n          break;\n        }\n      }\n      if (!paramEqual) {\n        continue;\n      }\n      if (!compareMethodAnnotations(i.annotations(),method.annotations())) {\n        continue;\n      }\n      om=i;\n    }\n    if (om == null) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 355,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2912,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static boolean isSameStructure(ClassInfo clazz,ClassInfo old){\n  if (clazz.flags() != old.flags()) {\n    return false;\n  }\n  if (!clazz.typeParameters().equals(old.typeParameters())) {\n    return false;\n  }\n  if (!clazz.interfaceNames().equals(old.interfaceNames())) {\n    return false;\n  }\n  if (!compareAnnotations(clazz.classAnnotations(),old.classAnnotations())) {\n    return false;\n  }\n  if (old.fields().size() != clazz.fields().size()) {\n    return false;\n  }\n  Map<String,FieldInfo> oldFields=old.fields().stream().collect(Collectors.toMap(FieldInfo::name,Function.identity()));\n  for (  FieldInfo field : clazz.fields()) {\n    FieldInfo of=oldFields.get(field.name());\n    if (of == null) {\n      return false;\n    }\n    if (of.flags() != field.flags()) {\n      return false;\n    }\n    if (!of.type().equals(field.type())) {\n      return false;\n    }\n    if (!compareAnnotations(of.annotations(),field.annotations())) {\n      return false;\n    }\n  }\n  List<MethodInfo> methods=clazz.methods();\n  List<MethodInfo> oldMethods=old.methods();\n  if (methods.size() != oldMethods.size()) {\n    return false;\n  }\n  for (  MethodInfo method : methods) {\n    MethodInfo om=null;\n    for (    MethodInfo i : oldMethods) {\n      if (!i.name().equals(method.name())) {\n        continue;\n      }\n      if (!i.returnType().equals(method.returnType())) {\n        continue;\n      }\n      if (i.parameters().size() != method.parameters().size()) {\n        continue;\n      }\n      if (i.flags() != method.flags()) {\n        continue;\n      }\n      if (!Objects.equals(i.defaultValue(),method.defaultValue())) {\n        continue;\n      }\n      boolean paramEqual=true;\n      for (int j=0; j < method.parameters().size(); ++j) {\n        Type a=method.parameters().get(j);\n        Type b=i.parameters().get(j);\n        if (!a.equals(b)) {\n          paramEqual=false;\n          break;\n        }\n      }\n      if (!paramEqual) {\n        continue;\n      }\n      if (!compareMethodAnnotations(i.annotations(),method.annotations())) {\n        continue;\n      }\n      om=i;\n    }\n    if (om == null) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 367,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 48,
        "startColumnNumber" : 16,
        "endLineNumber" : 48,
        "endColumnNumber" : 47
      },
      "nodeContext" : "!of.type().equals(field.type())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.quarkus.deployment.dev.FieldInfo"
  }, {
    "nodeContext" : "field",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 51,
      "startColumnNumber" : 54,
      "endLineNumber" : 51,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 51,
        "startColumnNumber" : 54,
        "endLineNumber" : 51,
        "endColumnNumber" : 73
      },
      "nodeContext" : "field.annotations()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 51,
        "startColumnNumber" : 17,
        "endLineNumber" : 51,
        "endColumnNumber" : 74
      },
      "nodeContext" : "compareAnnotations(of.annotations(),field.annotations())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 51,
        "endColumnNumber" : 74
      },
      "nodeContext" : "!compareAnnotations(of.annotations(),field.annotations())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!compareAnnotations(of.annotations(),field.annotations())) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 40,
        "startColumnNumber" : 47,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  FieldInfo of=oldFields.get(field.name());\n  if (of == null) {\n    return false;\n  }\n  if (of.flags() != field.flags()) {\n    return false;\n  }\n  if (!of.type().equals(field.type())) {\n    return false;\n  }\n  if (!compareAnnotations(of.annotations(),field.annotations())) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 488,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (FieldInfo field : clazz.fields()) {\n  FieldInfo of=oldFields.get(field.name());\n  if (of == null) {\n    return false;\n  }\n  if (of.flags() != field.flags()) {\n    return false;\n  }\n  if (!of.type().equals(field.type())) {\n    return false;\n  }\n  if (!compareAnnotations(of.annotations(),field.annotations())) {\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 64,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2849,
        "startLineNumber" : 22,
        "startColumnNumber" : 67,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (clazz.flags() != old.flags()) {\n    return false;\n  }\n  if (!clazz.typeParameters().equals(old.typeParameters())) {\n    return false;\n  }\n  if (!clazz.interfaceNames().equals(old.interfaceNames())) {\n    return false;\n  }\n  if (!compareAnnotations(clazz.classAnnotations(),old.classAnnotations())) {\n    return false;\n  }\n  if (old.fields().size() != clazz.fields().size()) {\n    return false;\n  }\n  Map<String,FieldInfo> oldFields=old.fields().stream().collect(Collectors.toMap(FieldInfo::name,Function.identity()));\n  for (  FieldInfo field : clazz.fields()) {\n    FieldInfo of=oldFields.get(field.name());\n    if (of == null) {\n      return false;\n    }\n    if (of.flags() != field.flags()) {\n      return false;\n    }\n    if (!of.type().equals(field.type())) {\n      return false;\n    }\n    if (!compareAnnotations(of.annotations(),field.annotations())) {\n      return false;\n    }\n  }\n  List<MethodInfo> methods=clazz.methods();\n  List<MethodInfo> oldMethods=old.methods();\n  if (methods.size() != oldMethods.size()) {\n    return false;\n  }\n  for (  MethodInfo method : methods) {\n    MethodInfo om=null;\n    for (    MethodInfo i : oldMethods) {\n      if (!i.name().equals(method.name())) {\n        continue;\n      }\n      if (!i.returnType().equals(method.returnType())) {\n        continue;\n      }\n      if (i.parameters().size() != method.parameters().size()) {\n        continue;\n      }\n      if (i.flags() != method.flags()) {\n        continue;\n      }\n      if (!Objects.equals(i.defaultValue(),method.defaultValue())) {\n        continue;\n      }\n      boolean paramEqual=true;\n      for (int j=0; j < method.parameters().size(); ++j) {\n        Type a=method.parameters().get(j);\n        Type b=i.parameters().get(j);\n        if (!a.equals(b)) {\n          paramEqual=false;\n          break;\n        }\n      }\n      if (!paramEqual) {\n        continue;\n      }\n      if (!compareMethodAnnotations(i.annotations(),method.annotations())) {\n        continue;\n      }\n      om=i;\n    }\n    if (om == null) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 355,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2912,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static boolean isSameStructure(ClassInfo clazz,ClassInfo old){\n  if (clazz.flags() != old.flags()) {\n    return false;\n  }\n  if (!clazz.typeParameters().equals(old.typeParameters())) {\n    return false;\n  }\n  if (!clazz.interfaceNames().equals(old.interfaceNames())) {\n    return false;\n  }\n  if (!compareAnnotations(clazz.classAnnotations(),old.classAnnotations())) {\n    return false;\n  }\n  if (old.fields().size() != clazz.fields().size()) {\n    return false;\n  }\n  Map<String,FieldInfo> oldFields=old.fields().stream().collect(Collectors.toMap(FieldInfo::name,Function.identity()));\n  for (  FieldInfo field : clazz.fields()) {\n    FieldInfo of=oldFields.get(field.name());\n    if (of == null) {\n      return false;\n    }\n    if (of.flags() != field.flags()) {\n      return false;\n    }\n    if (!of.type().equals(field.type())) {\n      return false;\n    }\n    if (!compareAnnotations(of.annotations(),field.annotations())) {\n      return false;\n    }\n  }\n  List<MethodInfo> methods=clazz.methods();\n  List<MethodInfo> oldMethods=old.methods();\n  if (methods.size() != oldMethods.size()) {\n    return false;\n  }\n  for (  MethodInfo method : methods) {\n    MethodInfo om=null;\n    for (    MethodInfo i : oldMethods) {\n      if (!i.name().equals(method.name())) {\n        continue;\n      }\n      if (!i.returnType().equals(method.returnType())) {\n        continue;\n      }\n      if (i.parameters().size() != method.parameters().size()) {\n        continue;\n      }\n      if (i.flags() != method.flags()) {\n        continue;\n      }\n      if (!Objects.equals(i.defaultValue(),method.defaultValue())) {\n        continue;\n      }\n      boolean paramEqual=true;\n      for (int j=0; j < method.parameters().size(); ++j) {\n        Type a=method.parameters().get(j);\n        Type b=i.parameters().get(j);\n        if (!a.equals(b)) {\n          paramEqual=false;\n          break;\n        }\n      }\n      if (!paramEqual) {\n        continue;\n      }\n      if (!compareMethodAnnotations(i.annotations(),method.annotations())) {\n        continue;\n      }\n      om=i;\n    }\n    if (om == null) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 367,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 51,
        "endColumnNumber" : 74
      },
      "nodeContext" : "!compareAnnotations(of.annotations(),field.annotations())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.quarkus.deployment.dev.FieldInfo"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 41,
    "startColumnNumber" : 41,
    "endLineNumber" : 41,
    "endColumnNumber" : 46
  }, {
    "charLength" : 5,
    "startLineNumber" : 45,
    "startColumnNumber" : 30,
    "endLineNumber" : 45,
    "endColumnNumber" : 35
  }, {
    "charLength" : 5,
    "startLineNumber" : 48,
    "startColumnNumber" : 34,
    "endLineNumber" : 48,
    "endColumnNumber" : 39
  }, {
    "charLength" : 5,
    "startLineNumber" : 51,
    "startColumnNumber" : 54,
    "endLineNumber" : 51,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}