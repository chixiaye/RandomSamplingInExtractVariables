{
  "id" : 338,
  "expression" : "allMethods",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/main/java/org/apache/dubbo/common/utils/MethodUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "allMethods",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 166,
      "startColumnNumber" : 16,
      "endLineNumber" : 166,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 166,
        "startColumnNumber" : 16,
        "endLineNumber" : 166,
        "endColumnNumber" : 38
      },
      "nodeContext" : "allMethods.add(method)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 166,
        "startColumnNumber" : 16,
        "endLineNumber" : 166,
        "endColumnNumber" : 39
      },
      "nodeContext" : "allMethods.add(method);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 165,
        "startColumnNumber" : 42,
        "endLineNumber" : 167,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  allMethods.add(method);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 165,
        "startColumnNumber" : 12,
        "endLineNumber" : 167,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Method method : methods) {\n  allMethods.add(method);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 162,
        "startColumnNumber" : 55,
        "endLineNumber" : 168,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Method[] methods=publicOnly ? classToSearch.getMethods() : classToSearch.getDeclaredMethods();\n  for (  Method method : methods) {\n    allMethods.add(method);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 323,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 168,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Class<?> classToSearch : declaredClasses) {\n  Method[] methods=publicOnly ? classToSearch.getMethods() : classToSearch.getDeclaredMethods();\n  for (  Method method : methods) {\n    allMethods.add(method);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 144,
        "startColumnNumber" : 73,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (declaringClass == null || declaringClass.isPrimitive()) {\n    return emptyList();\n  }\n  List<Class<?>> declaredClasses=new LinkedList<>();\n  declaredClasses.add(declaringClass);\n  if (includeInheritedTypes) {\n    declaredClasses.addAll(getAllInheritedTypes(declaringClass));\n  }\n  List<Method> allMethods=new LinkedList<>();\n  for (  Class<?> classToSearch : declaredClasses) {\n    Method[] methods=publicOnly ? classToSearch.getMethods() : classToSearch.getDeclaredMethods();\n    for (    Method method : methods) {\n      allMethods.add(method);\n    }\n  }\n  return unmodifiableList(filterAll(allMethods,methodsToFilter));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get all  {@link Method methods} of the declared class\n * @param declaringClass        the declared class\n * @param includeInheritedTypes include the inherited types, e,g. super classes or interfaces\n * @param publicOnly            only public method\n * @param methodsToFilter       (optional) the methods to be filtered\n * @return non-null read-only {@link List}\n * @since 2.7.6\n */\nstatic List<Method> getMethods(Class<?> declaringClass,boolean includeInheritedTypes,boolean publicOnly,Predicate<Method>... methodsToFilter){\n  if (declaringClass == null || declaringClass.isPrimitive()) {\n    return emptyList();\n  }\n  List<Class<?>> declaredClasses=new LinkedList<>();\n  declaredClasses.add(declaringClass);\n  if (includeInheritedTypes) {\n    declaredClasses.addAll(getAllInheritedTypes(declaringClass));\n  }\n  List<Method> allMethods=new LinkedList<>();\n  for (  Class<?> classToSearch : declaredClasses) {\n    Method[] methods=publicOnly ? classToSearch.getMethods() : classToSearch.getDeclaredMethods();\n    for (    Method method : methods) {\n      allMethods.add(method);\n    }\n  }\n  return unmodifiableList(filterAll(allMethods,methodsToFilter));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 166,
        "startColumnNumber" : 16,
        "endLineNumber" : 166,
        "endColumnNumber" : 39
      },
      "nodeContext" : "allMethods.add(method);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.reflect.Method>"
  }, {
    "nodeContext" : "allMethods",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 170,
      "startColumnNumber" : 42,
      "endLineNumber" : 170,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 170,
        "startColumnNumber" : 32,
        "endLineNumber" : 170,
        "endColumnNumber" : 70
      },
      "nodeContext" : "filterAll(allMethods,methodsToFilter)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 170,
        "startColumnNumber" : 15,
        "endLineNumber" : 170,
        "endColumnNumber" : 71
      },
      "nodeContext" : "unmodifiableList(filterAll(allMethods,methodsToFilter))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 72
      },
      "nodeContext" : "return unmodifiableList(filterAll(allMethods,methodsToFilter));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 144,
        "startColumnNumber" : 73,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (declaringClass == null || declaringClass.isPrimitive()) {\n    return emptyList();\n  }\n  List<Class<?>> declaredClasses=new LinkedList<>();\n  declaredClasses.add(declaringClass);\n  if (includeInheritedTypes) {\n    declaredClasses.addAll(getAllInheritedTypes(declaringClass));\n  }\n  List<Method> allMethods=new LinkedList<>();\n  for (  Class<?> classToSearch : declaredClasses) {\n    Method[] methods=publicOnly ? classToSearch.getMethods() : classToSearch.getDeclaredMethods();\n    for (    Method method : methods) {\n      allMethods.add(method);\n    }\n  }\n  return unmodifiableList(filterAll(allMethods,methodsToFilter));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get all  {@link Method methods} of the declared class\n * @param declaringClass        the declared class\n * @param includeInheritedTypes include the inherited types, e,g. super classes or interfaces\n * @param publicOnly            only public method\n * @param methodsToFilter       (optional) the methods to be filtered\n * @return non-null read-only {@link List}\n * @since 2.7.6\n */\nstatic List<Method> getMethods(Class<?> declaringClass,boolean includeInheritedTypes,boolean publicOnly,Predicate<Method>... methodsToFilter){\n  if (declaringClass == null || declaringClass.isPrimitive()) {\n    return emptyList();\n  }\n  List<Class<?>> declaredClasses=new LinkedList<>();\n  declaredClasses.add(declaringClass);\n  if (includeInheritedTypes) {\n    declaredClasses.addAll(getAllInheritedTypes(declaringClass));\n  }\n  List<Method> allMethods=new LinkedList<>();\n  for (  Class<?> classToSearch : declaredClasses) {\n    Method[] methods=publicOnly ? classToSearch.getMethods() : classToSearch.getDeclaredMethods();\n    for (    Method method : methods) {\n      allMethods.add(method);\n    }\n  }\n  return unmodifiableList(filterAll(allMethods,methodsToFilter));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 72
      },
      "nodeContext" : "return unmodifiableList(filterAll(allMethods,methodsToFilter));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.reflect.Method>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 166,
    "startColumnNumber" : 16,
    "endLineNumber" : 166,
    "endColumnNumber" : 26
  }, {
    "charLength" : 10,
    "startLineNumber" : 170,
    "startColumnNumber" : 42,
    "endLineNumber" : 170,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}