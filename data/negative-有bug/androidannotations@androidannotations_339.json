{
  "id" : 339,
  "expression" : "returnType.getKind() != TypeKind.VOID",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/GetProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "returnType.getKind() != TypeKind.VOID",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 60,
      "startColumnNumber" : 6,
      "endLineNumber" : 60,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (returnType.getKind() != TypeKind.VOID) {\n  if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n    DeclaredType declaredReturnedType=(DeclaredType)returnType;\n    TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n    expectedClass=holder.refClass(typeParameter.toString());\n    generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n  }\n else {\n    generatedReturnType=holder.refClass(returnTypeString);\n    expectedClass=generatedReturnType;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 49,
        "startColumnNumber" : 91,
        "endLineNumber" : 77,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  RestImplementationHolder holder=restImplementationsHolder.getEnclosingHolder(element);\n  ExecutableElement executableElement=(ExecutableElement)element;\n  TypeMirror returnType=executableElement.getReturnType();\n  JClass generatedReturnType=null;\n  String returnTypeString=returnType.toString();\n  JClass expectedClass=null;\n  if (returnType.getKind() != TypeKind.VOID) {\n    if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n      DeclaredType declaredReturnedType=(DeclaredType)returnType;\n      TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n      expectedClass=holder.refClass(typeParameter.toString());\n      generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n    }\n else {\n      generatedReturnType=holder.refClass(returnTypeString);\n      expectedClass=generatedReturnType;\n    }\n  }\n  Get getAnnotation=element.getAnnotation(Get.class);\n  String urlSuffix=getAnnotation.value();\n  String url=holder.urlPrefix + urlSuffix;\n  generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement,url,expectedClass,generatedReturnType,codeModel));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1281,
        "startLineNumber" : 48,
        "startColumnNumber" : 1,
        "endLineNumber" : 77,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  RestImplementationHolder holder=restImplementationsHolder.getEnclosingHolder(element);\n  ExecutableElement executableElement=(ExecutableElement)element;\n  TypeMirror returnType=executableElement.getReturnType();\n  JClass generatedReturnType=null;\n  String returnTypeString=returnType.toString();\n  JClass expectedClass=null;\n  if (returnType.getKind() != TypeKind.VOID) {\n    if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n      DeclaredType declaredReturnedType=(DeclaredType)returnType;\n      TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n      expectedClass=holder.refClass(typeParameter.toString());\n      generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n    }\n else {\n      generatedReturnType=holder.refClass(returnTypeString);\n      expectedClass=generatedReturnType;\n    }\n  }\n  Get getAnnotation=element.getAnnotation(Get.class);\n  String urlSuffix=getAnnotation.value();\n  String url=holder.urlPrefix + urlSuffix;\n  generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement,url,expectedClass,generatedReturnType,codeModel));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (returnType.getKind() != TypeKind.VOID) {\n  if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {\n    DeclaredType declaredReturnedType=(DeclaredType)returnType;\n    TypeMirror typeParameter=declaredReturnedType.getTypeArguments().get(0);\n    expectedClass=holder.refClass(typeParameter.toString());\n    generatedReturnType=holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);\n  }\n else {\n    generatedReturnType=holder.refClass(returnTypeString);\n    expectedClass=generatedReturnType;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 10
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 60,
    "startColumnNumber" : 6,
    "endLineNumber" : 60,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}