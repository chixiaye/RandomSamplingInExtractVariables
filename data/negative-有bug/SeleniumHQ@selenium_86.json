{
  "id" : 86,
  "expression" : "WebDriver.class",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/testing/drivers/DefaultDriverSupplier.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "WebDriver.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 77,
      "startColumnNumber" : 85,
      "endLineNumber" : 77,
      "endColumnNumber" : 100
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 77,
        "startColumnNumber" : 49,
        "endLineNumber" : 77,
        "endColumnNumber" : 101
      },
      "nodeContext" : "Class.forName(className).asSubclass(WebDriver.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 77,
        "startColumnNumber" : 35,
        "endLineNumber" : 77,
        "endColumnNumber" : 101
      },
      "nodeContext" : "driverClass=Class.forName(className).asSubclass(WebDriver.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 102
      },
      "nodeContext" : "Class<? extends WebDriver> driverClass=Class.forName(className).asSubclass(WebDriver.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 76,
        "startColumnNumber" : 10,
        "endLineNumber" : 86,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Class<? extends WebDriver> driverClass=Class.forName(className).asSubclass(WebDriver.class);\n  Constructor<? extends WebDriver> constructor=driverClass.getConstructor(Capabilities.class);\n  driverConstructor=caps -> {\n    try {\n      return constructor.newInstance(caps);\n    }\n catch (    InstantiationException|IllegalAccessException|InvocationTargetException e) {\n      throw new RuntimeException(e);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  Class<? extends WebDriver> driverClass=Class.forName(className).asSubclass(WebDriver.class);\n  Constructor<? extends WebDriver> constructor=driverClass.getConstructor(Capabilities.class);\n  driverConstructor=caps -> {\n    try {\n      return constructor.newInstance(caps);\n    }\n catch (    InstantiationException|IllegalAccessException|InvocationTargetException e) {\n      throw new RuntimeException(e);\n    }\n  }\n;\n}\n catch (ClassNotFoundException|NoSuchMethodException e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 79,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 74,
        "startColumnNumber" : 11,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String className=System.getProperty(\"selenium.browser.class_name\");\n  try {\n    Class<? extends WebDriver> driverClass=Class.forName(className).asSubclass(WebDriver.class);\n    Constructor<? extends WebDriver> constructor=driverClass.getConstructor(Capabilities.class);\n    driverConstructor=caps -> {\n      try {\n        return constructor.newInstance(caps);\n      }\n catch (      InstantiationException|IllegalAccessException|InvocationTargetException e) {\n        throw new RuntimeException(e);\n      }\n    }\n;\n  }\n catch (  ClassNotFoundException|NoSuchMethodException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (capabilities != null) {\n  driverConstructor=driverConstructors.getOrDefault(capabilities.getClass(),caps -> {\n    if (capabilities.getBrowserName().equals(BrowserType.HTMLUNIT)) {\n      return new HtmlUnitDriver();\n    }\n    throw new RuntimeException(\"No driver can be provided for capabilities \" + caps);\n  }\n);\n}\n else {\n  String className=System.getProperty(\"selenium.browser.class_name\");\n  try {\n    Class<? extends WebDriver> driverClass=Class.forName(className).asSubclass(WebDriver.class);\n    Constructor<? extends WebDriver> constructor=driverClass.getConstructor(Capabilities.class);\n    driverConstructor=caps -> {\n      try {\n        return constructor.newInstance(caps);\n      }\n catch (      InstantiationException|IllegalAccessException|InvocationTargetException e) {\n        throw new RuntimeException(e);\n      }\n    }\n;\n  }\n catch (  ClassNotFoundException|NoSuchMethodException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 128,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1159,
        "startLineNumber" : 64,
        "startColumnNumber" : 25,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Function<Capabilities,WebDriver> driverConstructor;\n  if (capabilities != null) {\n    driverConstructor=driverConstructors.getOrDefault(capabilities.getClass(),caps -> {\n      if (capabilities.getBrowserName().equals(BrowserType.HTMLUNIT)) {\n        return new HtmlUnitDriver();\n      }\n      throw new RuntimeException(\"No driver can be provided for capabilities \" + caps);\n    }\n);\n  }\n else {\n    String className=System.getProperty(\"selenium.browser.class_name\");\n    try {\n      Class<? extends WebDriver> driverClass=Class.forName(className).asSubclass(WebDriver.class);\n      Constructor<? extends WebDriver> constructor=driverClass.getConstructor(Capabilities.class);\n      driverConstructor=caps -> {\n        try {\n          return constructor.newInstance(caps);\n        }\n catch (        InstantiationException|IllegalAccessException|InvocationTargetException e) {\n          throw new RuntimeException(e);\n        }\n      }\n;\n    }\n catch (    ClassNotFoundException|NoSuchMethodException e) {\n      throw new RuntimeException(e);\n    }\n  }\n  return driverConstructor.apply(capabilities);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1194,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public WebDriver get(){\n  Function<Capabilities,WebDriver> driverConstructor;\n  if (capabilities != null) {\n    driverConstructor=driverConstructors.getOrDefault(capabilities.getClass(),caps -> {\n      if (capabilities.getBrowserName().equals(BrowserType.HTMLUNIT)) {\n        return new HtmlUnitDriver();\n      }\n      throw new RuntimeException(\"No driver can be provided for capabilities \" + caps);\n    }\n);\n  }\n else {\n    String className=System.getProperty(\"selenium.browser.class_name\");\n    try {\n      Class<? extends WebDriver> driverClass=Class.forName(className).asSubclass(WebDriver.class);\n      Constructor<? extends WebDriver> constructor=driverClass.getConstructor(Capabilities.class);\n      driverConstructor=caps -> {\n        try {\n          return constructor.newInstance(caps);\n        }\n catch (        InstantiationException|IllegalAccessException|InvocationTargetException e) {\n          throw new RuntimeException(e);\n        }\n      }\n;\n    }\n catch (    ClassNotFoundException|NoSuchMethodException e) {\n      throw new RuntimeException(e);\n    }\n  }\n  return driverConstructor.apply(capabilities);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 102
      },
      "nodeContext" : "Class<? extends WebDriver> driverClass=Class.forName(className).asSubclass(WebDriver.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.openqa.selenium.WebDriver>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 77,
    "startColumnNumber" : 85,
    "endLineNumber" : 77,
    "endColumnNumber" : 100
  } ],
  "layoutRelationDataList" : [ ]
}