{
  "id" : 136,
  "expression" : "Thread.currentThread().getStackTrace()[1]",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/subprojects/inline/src/test/java/org/mockitoinline/StubbingLocationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Thread.currentThread().getStackTrace()[1]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 24,
      "startColumnNumber" : 41,
      "endLineNumber" : 24,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 24,
        "startColumnNumber" : 41,
        "endLineNumber" : 24,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Thread.currentThread().getStackTrace()[1].toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 24,
        "startColumnNumber" : 33,
        "endLineNumber" : 24,
        "endColumnNumber" : 93
      },
      "nodeContext" : "frame=Thread.currentThread().getStackTrace()[1].toString()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 24,
        "startColumnNumber" : 13,
        "endLineNumber" : 24,
        "endColumnNumber" : 94
      },
      "nodeContext" : "mock.concreteMethod(frame=Thread.currentThread().getStackTrace()[1].toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 24,
        "endColumnNumber" : 95
      },
      "nodeContext" : "when(mock.concreteMethod(frame=Thread.currentThread().getStackTrace()[1].toString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 24,
        "endColumnNumber" : 110
      },
      "nodeContext" : "when(mock.concreteMethod(frame=Thread.currentThread().getStackTrace()[1].toString())).thenReturn(\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 24,
        "endColumnNumber" : 111
      },
      "nodeContext" : "when(mock.concreteMethod(frame=Thread.currentThread().getStackTrace()[1].toString())).thenReturn(\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 20,
        "startColumnNumber" : 64,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ConcreteClass mock=mock(ConcreteClass.class);\n  String frame;\n  when(mock.concreteMethod(frame=Thread.currentThread().getStackTrace()[1].toString())).thenReturn(\"\");\n  mock.concreteMethod(frame);\n  Set<Stubbing> stubbings=AllInvocationsFinder.findStubbings(Collections.singleton(mock));\n  assertEquals(1,stubbings.size());\n  String location=stubbings.iterator().next().getInvocation().getLocation().toString();\n  assertEquals(\"-> at \" + frame,location);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void stubbing_location_should_be_the_correct_point(){\n  ConcreteClass mock=mock(ConcreteClass.class);\n  String frame;\n  when(mock.concreteMethod(frame=Thread.currentThread().getStackTrace()[1].toString())).thenReturn(\"\");\n  mock.concreteMethod(frame);\n  Set<Stubbing> stubbings=AllInvocationsFinder.findStubbings(Collections.singleton(mock));\n  assertEquals(1,stubbings.size());\n  String location=stubbings.iterator().next().getInvocation().getLocation().toString();\n  assertEquals(\"-> at \" + frame,location);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 24,
        "endColumnNumber" : 111
      },
      "nodeContext" : "when(mock.concreteMethod(frame=Thread.currentThread().getStackTrace()[1].toString())).thenReturn(\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 10
    },
    "tokenLength" : 4,
    "type" : "java.lang.StackTraceElement"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 24,
    "startColumnNumber" : 41,
    "endLineNumber" : 24,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}