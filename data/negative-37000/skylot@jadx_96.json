{
  "id" : 96,
  "expression" : "CheckTypeVisitor",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/FinishTypeInference.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CheckTypeVisitor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 45,
      "startColumnNumber" : 4,
      "endLineNumber" : 45,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 37
      },
      "nodeContext" : "CheckTypeVisitor.visit(mth,insn)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 38
      },
      "nodeContext" : "CheckTypeVisitor.visit(mth,insn);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 44,
        "startColumnNumber" : 49,
        "endLineNumber" : 46,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  CheckTypeVisitor.visit(mth,insn);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 44,
        "startColumnNumber" : 3,
        "endLineNumber" : 46,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (InsnNode insn : block.getInstructions()) {\n  CheckTypeVisitor.visit(mth,insn);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 43,
        "startColumnNumber" : 47,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  InsnNode insn : block.getInstructions()) {\n    CheckTypeVisitor.visit(mth,insn);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (BlockNode block : mth.getBasicBlocks()) {\n  for (  InsnNode insn : block.getInstructions()) {\n    CheckTypeVisitor.visit(mth,insn);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 772,
        "startLineNumber" : 12,
        "startColumnNumber" : 35,
        "endLineNumber" : 48,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (mth.isNoCode()) {\n    return;\n  }\n  boolean change;\n  int i=0;\n  do {\n    change=false;\n    for (    BlockNode block : mth.getBasicBlocks()) {\n      for (      InsnNode insn : block.getInstructions()) {\n        if (PostTypeInference.process(mth,insn)) {\n          change=true;\n        }\n      }\n    }\n    i++;\n    if (i > 1000) {\n      break;\n    }\n  }\n while (change);\n  DexNode dex=mth.dex();\n  for (  BlockNode block : mth.getBasicBlocks()) {\n    for (    InsnNode insn : block.getInstructions()) {\n      SelectTypeVisitor.visit(dex,insn);\n    }\n  }\n  for (  BlockNode block : mth.getBasicBlocks()) {\n    for (    InsnNode insn : block.getInstructions()) {\n      CheckTypeVisitor.visit(mth,insn);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 817,
        "startLineNumber" : 11,
        "startColumnNumber" : 1,
        "endLineNumber" : 48,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void visit(MethodNode mth){\n  if (mth.isNoCode()) {\n    return;\n  }\n  boolean change;\n  int i=0;\n  do {\n    change=false;\n    for (    BlockNode block : mth.getBasicBlocks()) {\n      for (      InsnNode insn : block.getInstructions()) {\n        if (PostTypeInference.process(mth,insn)) {\n          change=true;\n        }\n      }\n    }\n    i++;\n    if (i > 1000) {\n      break;\n    }\n  }\n while (change);\n  DexNode dex=mth.dex();\n  for (  BlockNode block : mth.getBasicBlocks()) {\n    for (    InsnNode insn : block.getInstructions()) {\n      SelectTypeVisitor.visit(dex,insn);\n    }\n  }\n  for (  BlockNode block : mth.getBasicBlocks()) {\n    for (    InsnNode insn : block.getInstructions()) {\n      CheckTypeVisitor.visit(mth,insn);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 38
      },
      "nodeContext" : "CheckTypeVisitor.visit(mth,insn);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.visitors.typeinference.CheckTypeVisitor"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 45,
    "startColumnNumber" : 4,
    "endLineNumber" : 45,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}