{
  "id" : 287,
  "expression" : "\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/single/SingleNullTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 85,
      "startLineNumber" : 114,
      "startColumnNumber" : 36,
      "endLineNumber" : 114,
      "endColumnNumber" : 121
    },
    "astNodeNumber" : 7,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 114,
        "startColumnNumber" : 24,
        "endLineNumber" : 114,
        "endColumnNumber" : 122
      },
      "nodeContext" : "Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 114,
        "startColumnNumber" : 24,
        "endLineNumber" : 114,
        "endColumnNumber" : 123
      },
      "nodeContext" : "Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 113,
        "startColumnNumber" : 74,
        "endLineNumber" : 115,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 113,
        "startColumnNumber" : 20,
        "endLineNumber" : 115,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!(ex.getCause() instanceof NullPointerException)) {\n  Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 112,
        "startColumnNumber" : 55,
        "endLineNumber" : 116,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (!(ex.getCause() instanceof NullPointerException)) {\n    Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 112,
        "startColumnNumber" : 18,
        "endLineNumber" : 116,
        "endColumnNumber" : 17
      },
      "nodeContext" : "catch (InvocationTargetException ex) {\n  if (!(ex.getCause() instanceof NullPointerException)) {\n    Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 109,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  m.invoke(null,values);\n  Assert.fail(\"No exception for argCount \" + argCount + \" / argNull \"+ argNull);\n}\n catch (InvocationTargetException ex) {\n  if (!(ex.getCause() instanceof NullPointerException)) {\n    Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 855,
        "startLineNumber" : 99,
        "startColumnNumber" : 66,
        "endLineNumber" : 117,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Class<?>[] params=new Class[argCount];\n  Arrays.fill(params,SingleConsumable.class);\n  Object[] values=new Object[argCount];\n  Arrays.fill(values,just1);\n  values[argNull - 1]=null;\n  Method m=clazz.getMethod(\"concat\",params);\n  try {\n    m.invoke(null,values);\n    Assert.fail(\"No exception for argCount \" + argCount + \" / argNull \"+ argNull);\n  }\n catch (  InvocationTargetException ex) {\n    if (!(ex.getCause() instanceof NullPointerException)) {\n      Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 99,
        "startColumnNumber" : 12,
        "endLineNumber" : 117,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int argNull=1; argNull <= argCount; argNull++) {\n  Class<?>[] params=new Class[argCount];\n  Arrays.fill(params,SingleConsumable.class);\n  Object[] values=new Object[argCount];\n  Arrays.fill(values,just1);\n  values[argNull - 1]=null;\n  Method m=clazz.getMethod(\"concat\",params);\n  try {\n    m.invoke(null,values);\n    Assert.fail(\"No exception for argCount \" + argCount + \" / argNull \"+ argNull);\n  }\n catch (  InvocationTargetException ex) {\n    if (!(ex.getCause() instanceof NullPointerException)) {\n      Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 116,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 935,
        "startLineNumber" : 98,
        "startColumnNumber" : 58,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int argNull=1; argNull <= argCount; argNull++) {\n    Class<?>[] params=new Class[argCount];\n    Arrays.fill(params,SingleConsumable.class);\n    Object[] values=new Object[argCount];\n    Arrays.fill(values,just1);\n    values[argNull - 1]=null;\n    Method m=clazz.getMethod(\"concat\",params);\n    try {\n      m.invoke(null,values);\n      Assert.fail(\"No exception for argCount \" + argCount + \" / argNull \"+ argNull);\n    }\n catch (    InvocationTargetException ex) {\n      if (!(ex.getCause() instanceof NullPointerException)) {\n        Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int argCount=2; argCount < 10; argCount++) {\n  for (int argNull=1; argNull <= argCount; argNull++) {\n    Class<?>[] params=new Class[argCount];\n    Arrays.fill(params,SingleConsumable.class);\n    Object[] values=new Object[argCount];\n    Arrays.fill(values,just1);\n    values[argNull - 1]=null;\n    Method m=clazz.getMethod(\"concat\",params);\n    try {\n      m.invoke(null,values);\n      Assert.fail(\"No exception for argCount \" + argCount + \" / argNull \"+ argNull);\n    }\n catch (    InvocationTargetException ex) {\n      if (!(ex.getCause() instanceof NullPointerException)) {\n        Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 128,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1087,
        "startLineNumber" : 95,
        "startColumnNumber" : 46,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"rawtypes\") Class<Single> clazz=Single.class;\n  for (int argCount=2; argCount < 10; argCount++) {\n    for (int argNull=1; argNull <= argCount; argNull++) {\n      Class<?>[] params=new Class[argCount];\n      Arrays.fill(params,SingleConsumable.class);\n      Object[] values=new Object[argCount];\n      Arrays.fill(values,just1);\n      values[argNull - 1]=null;\n      Method m=clazz.getMethod(\"concat\",params);\n      try {\n        m.invoke(null,values);\n        Assert.fail(\"No exception for argCount \" + argCount + \" / argNull \"+ argNull);\n      }\n catch (      InvocationTargetException ex) {\n        if (!(ex.getCause() instanceof NullPointerException)) {\n          Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1140,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void concatNull() throws Exception {\n  @SuppressWarnings(\"rawtypes\") Class<Single> clazz=Single.class;\n  for (int argCount=2; argCount < 10; argCount++) {\n    for (int argNull=1; argNull <= argCount; argNull++) {\n      Class<?>[] params=new Class[argCount];\n      Arrays.fill(params,SingleConsumable.class);\n      Object[] values=new Object[argCount];\n      Arrays.fill(values,just1);\n      values[argNull - 1]=null;\n      Method m=clazz.getMethod(\"concat\",params);\n      try {\n        m.invoke(null,values);\n        Assert.fail(\"No exception for argCount \" + argCount + \" / argNull \"+ argNull);\n      }\n catch (      InvocationTargetException ex) {\n        if (!(ex.getCause() instanceof NullPointerException)) {\n          Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 114,
        "startColumnNumber" : 24,
        "endLineNumber" : 114,
        "endColumnNumber" : 123
      },
      "nodeContext" : "Assert.fail(\"Unexpected exception for argCount \" + argCount + \" / argNull \"+ argNull+ \": \"+ ex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 12,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 85,
    "startLineNumber" : 114,
    "startColumnNumber" : 36,
    "endLineNumber" : 114,
    "endColumnNumber" : 121
  } ],
  "layoutRelationDataList" : [ ]
}