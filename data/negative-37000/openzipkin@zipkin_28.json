{
  "id" : 28,
  "expression" : "spans.get(0).timestamp / 1000",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-storage/elasticsearch/src/test/java/zipkin/elasticsearch/ElasticsearchDependenciesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "spans.get(0).timestamp / 1000",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 60,
      "startColumnNumber" : 32,
      "endLineNumber" : 60,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 60,
        "endColumnNumber" : 62
      },
      "nodeContext" : "midnightUTC(spans.get(0).timestamp / 1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 60,
        "startColumnNumber" : 9,
        "endLineNumber" : 60,
        "endColumnNumber" : 62
      },
      "nodeContext" : "midnight=midnightUTC(spans.get(0).timestamp / 1000)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 63
      },
      "nodeContext" : "long midnight=midnightUTC(spans.get(0).timestamp / 1000);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 55,
        "startColumnNumber" : 52,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  InMemoryStorage mem=new InMemoryStorage();\n  mem.spanConsumer().accept(spans);\n  List<DependencyLink> links=mem.spanStore().getDependencies(TODAY + DAY,null);\n  long midnight=midnightUTC(spans.get(0).timestamp / 1000);\n  storage.writeDependencyLinks(links,midnight);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * The current implementation does not include dependency aggregation. It includes retrieval of pre-aggregated links. <p>This uses  {@link InMemorySpanStore} to prepare links and {@link ElasticsearchStorage#writeDependencyLinks(List,long)}} to store them. <p>Note: The zipkin-dependencies-spark doesn't yet support writing dependency links to elasticsearch, until it does this span store cannot be used for dependency links.\n */\n@Override public void processDependencies(List<Span> spans){\n  InMemoryStorage mem=new InMemoryStorage();\n  mem.spanConsumer().accept(spans);\n  List<DependencyLink> links=mem.spanStore().getDependencies(TODAY + DAY,null);\n  long midnight=midnightUTC(spans.get(0).timestamp / 1000);\n  storage.writeDependencyLinks(links,midnight);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 63
      },
      "nodeContext" : "long midnight=midnightUTC(spans.get(0).timestamp / 1000);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 6,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 60,
    "startColumnNumber" : 32,
    "endLineNumber" : 60,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}