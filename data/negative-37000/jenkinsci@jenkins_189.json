{
  "id" : 189,
  "expression" : "\"one=$ONE\\n\" + \"two=$TWO\\n\" + \"four=$FOUR\\n\"",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/test/java/hudson/util/ArgumentListBuilderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"one=$ONE\\n\" + \"two=$TWO\\n\" + \"four=$FOUR\\n\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 78,
      "startLineNumber" : 230,
      "startColumnNumber" : 34,
      "endLineNumber" : 232,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 230,
        "startColumnNumber" : 21,
        "endLineNumber" : 232,
        "endColumnNumber" : 30
      },
      "nodeContext" : "properties=\"one=$ONE\\n\" + \"two=$TWO\\n\" + \"four=$FOUR\\n\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 230,
        "startColumnNumber" : 8,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "final String properties=\"one=$ONE\\n\" + \"two=$TWO\\n\" + \"four=$FOUR\\n\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 224,
        "startColumnNumber" : 105,
        "endLineNumber" : 243,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<String,String> map=new HashMap<>();\n  map.put(\"ONE\",\"one\\\\backslash\");\n  map.put(\"TWO\",\"two\\\\\\\\backslashes\");\n  map.put(\"FOUR\",\"four\\\\\\\\\\\\\\\\backslashes\");\n  final String properties=\"one=$ONE\\n\" + \"two=$TWO\\n\" + \"four=$FOUR\\n\";\n  final String args=new ArgumentListBuilder().addKeyValuePairsFromPropertyString(\"\",properties,new VariableResolver.ByMap<>(map)).toString();\n  assertThat(args,containsString(\"one=one\\\\backslash\"));\n  assertThat(args,containsString(\"two=two\\\\\\\\backslashes\"));\n  assertThat(args,containsString(\"four=four\\\\\\\\\\\\\\\\backslashes\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 223,
        "startColumnNumber" : 4,
        "endLineNumber" : 243,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void numberOfBackslashesInPropertiesShouldBePreservedAfterMacroExpansion() throws IOException {\n  final Map<String,String> map=new HashMap<>();\n  map.put(\"ONE\",\"one\\\\backslash\");\n  map.put(\"TWO\",\"two\\\\\\\\backslashes\");\n  map.put(\"FOUR\",\"four\\\\\\\\\\\\\\\\backslashes\");\n  final String properties=\"one=$ONE\\n\" + \"two=$TWO\\n\" + \"four=$FOUR\\n\";\n  final String args=new ArgumentListBuilder().addKeyValuePairsFromPropertyString(\"\",properties,new VariableResolver.ByMap<>(map)).toString();\n  assertThat(args,containsString(\"one=one\\\\backslash\"));\n  assertThat(args,containsString(\"two=two\\\\\\\\backslashes\"));\n  assertThat(args,containsString(\"four=four\\\\\\\\\\\\\\\\backslashes\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 230,
        "startColumnNumber" : 21,
        "endLineNumber" : 232,
        "endColumnNumber" : 30
      },
      "nodeContext" : "properties=\"one=$ONE\\n\" + \"two=$TWO\\n\" + \"four=$FOUR\\n\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 11,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 78,
    "startLineNumber" : 230,
    "startColumnNumber" : 34,
    "endLineNumber" : 232,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}