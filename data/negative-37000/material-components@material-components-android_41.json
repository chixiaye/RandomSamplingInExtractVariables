{
  "id" : 41,
  "expression" : "hideable && state == STATE_HIDDEN",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "hideable && state == STATE_HIDDEN",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 254,
      "startColumnNumber" : 15,
      "endLineNumber" : 254,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 254,
        "startColumnNumber" : 11,
        "endLineNumber" : 260,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (hideable && state == STATE_HIDDEN) {\n  ViewCompat.offsetTopAndBottom(child,parentHeight);\n}\n else if (state == STATE_COLLAPSED) {\n  ViewCompat.offsetTopAndBottom(child,collapsedOffset);\n}\n else if (state == STATE_DRAGGING || state == STATE_SETTLING) {\n  ViewCompat.offsetTopAndBottom(child,savedTop - child.getTop());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 459,
        "startLineNumber" : 252,
        "startColumnNumber" : 11,
        "endLineNumber" : 260,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (state == STATE_HALF_EXPANDED) {\n  ViewCompat.offsetTopAndBottom(child,halfExpandedOffset);\n}\n else if (hideable && state == STATE_HIDDEN) {\n  ViewCompat.offsetTopAndBottom(child,parentHeight);\n}\n else if (state == STATE_COLLAPSED) {\n  ViewCompat.offsetTopAndBottom(child,collapsedOffset);\n}\n else if (state == STATE_DRAGGING || state == STATE_SETTLING) {\n  ViewCompat.offsetTopAndBottom(child,savedTop - child.getTop());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 250,
        "startColumnNumber" : 4,
        "endLineNumber" : 260,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (state == STATE_EXPANDED) {\n  ViewCompat.offsetTopAndBottom(child,getExpandedOffset());\n}\n else if (state == STATE_HALF_EXPANDED) {\n  ViewCompat.offsetTopAndBottom(child,halfExpandedOffset);\n}\n else if (hideable && state == STATE_HIDDEN) {\n  ViewCompat.offsetTopAndBottom(child,parentHeight);\n}\n else if (state == STATE_COLLAPSED) {\n  ViewCompat.offsetTopAndBottom(child,collapsedOffset);\n}\n else if (state == STATE_DRAGGING || state == STATE_SETTLING) {\n  ViewCompat.offsetTopAndBottom(child,savedTop - child.getTop());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1675,
        "startLineNumber" : 226,
        "startColumnNumber" : 87,
        "endLineNumber" : 267,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (ViewCompat.getFitsSystemWindows(parent) && !ViewCompat.getFitsSystemWindows(child)) {\n    child.setFitsSystemWindows(true);\n  }\n  int savedTop=child.getTop();\n  parent.onLayoutChild(child,layoutDirection);\n  parentHeight=parent.getHeight();\n  if (peekHeightAuto) {\n    if (peekHeightMin == 0) {\n      peekHeightMin=parent.getResources().getDimensionPixelSize(R.dimen.design_bottom_sheet_peek_height_min);\n    }\n    lastPeekHeight=Math.max(peekHeightMin,parentHeight - parent.getWidth() * 9 / 16);\n  }\n else {\n    lastPeekHeight=peekHeight;\n  }\n  fitToContentsOffset=Math.max(0,parentHeight - child.getHeight());\n  halfExpandedOffset=parentHeight / 2;\n  calculateCollapsedOffset();\n  if (state == STATE_EXPANDED) {\n    ViewCompat.offsetTopAndBottom(child,getExpandedOffset());\n  }\n else   if (state == STATE_HALF_EXPANDED) {\n    ViewCompat.offsetTopAndBottom(child,halfExpandedOffset);\n  }\n else   if (hideable && state == STATE_HIDDEN) {\n    ViewCompat.offsetTopAndBottom(child,parentHeight);\n  }\n else   if (state == STATE_COLLAPSED) {\n    ViewCompat.offsetTopAndBottom(child,collapsedOffset);\n  }\n else   if (state == STATE_DRAGGING || state == STATE_SETTLING) {\n    ViewCompat.offsetTopAndBottom(child,savedTop - child.getTop());\n  }\n  if (viewDragHelper == null) {\n    viewDragHelper=ViewDragHelper.create(parent,dragCallback);\n  }\n  viewRef=new WeakReference<>(child);\n  nestedScrollingChildRef=new WeakReference<>(findScrollingChild(child));\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1772,
        "startLineNumber" : 225,
        "startColumnNumber" : 2,
        "endLineNumber" : 267,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean onLayoutChild(CoordinatorLayout parent,V child,int layoutDirection){\n  if (ViewCompat.getFitsSystemWindows(parent) && !ViewCompat.getFitsSystemWindows(child)) {\n    child.setFitsSystemWindows(true);\n  }\n  int savedTop=child.getTop();\n  parent.onLayoutChild(child,layoutDirection);\n  parentHeight=parent.getHeight();\n  if (peekHeightAuto) {\n    if (peekHeightMin == 0) {\n      peekHeightMin=parent.getResources().getDimensionPixelSize(R.dimen.design_bottom_sheet_peek_height_min);\n    }\n    lastPeekHeight=Math.max(peekHeightMin,parentHeight - parent.getWidth() * 9 / 16);\n  }\n else {\n    lastPeekHeight=peekHeight;\n  }\n  fitToContentsOffset=Math.max(0,parentHeight - child.getHeight());\n  halfExpandedOffset=parentHeight / 2;\n  calculateCollapsedOffset();\n  if (state == STATE_EXPANDED) {\n    ViewCompat.offsetTopAndBottom(child,getExpandedOffset());\n  }\n else   if (state == STATE_HALF_EXPANDED) {\n    ViewCompat.offsetTopAndBottom(child,halfExpandedOffset);\n  }\n else   if (hideable && state == STATE_HIDDEN) {\n    ViewCompat.offsetTopAndBottom(child,parentHeight);\n  }\n else   if (state == STATE_COLLAPSED) {\n    ViewCompat.offsetTopAndBottom(child,collapsedOffset);\n  }\n else   if (state == STATE_DRAGGING || state == STATE_SETTLING) {\n    ViewCompat.offsetTopAndBottom(child,savedTop - child.getTop());\n  }\n  if (viewDragHelper == null) {\n    viewDragHelper=ViewDragHelper.create(parent,dragCallback);\n  }\n  viewRef=new WeakReference<>(child);\n  nestedScrollingChildRef=new WeakReference<>(findScrollingChild(child));\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 254,
        "startColumnNumber" : 11,
        "endLineNumber" : 260,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (hideable && state == STATE_HIDDEN) {\n  ViewCompat.offsetTopAndBottom(child,parentHeight);\n}\n else if (state == STATE_COLLAPSED) {\n  ViewCompat.offsetTopAndBottom(child,collapsedOffset);\n}\n else if (state == STATE_DRAGGING || state == STATE_SETTLING) {\n  ViewCompat.offsetTopAndBottom(child,savedTop - child.getTop());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 9
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 254,
    "startColumnNumber" : 15,
    "endLineNumber" : 254,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}