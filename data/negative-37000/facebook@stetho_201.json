{
  "id" : 201,
  "expression" : "value instanceof Boolean",
  "projectName" : "facebook@stetho",
  "commitID" : "fee68519d93899dc5cfe6b992f56916a03b279f2",
  "filePath" : "/stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/Runtime.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "value instanceof Boolean",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 190,
      "startColumnNumber" : 17,
      "endLineNumber" : 190,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1224,
        "startLineNumber" : 190,
        "startColumnNumber" : 13,
        "endLineNumber" : 220,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (value instanceof Boolean) {\n  result.type=ObjectType.BOOLEAN;\n  result.value=value;\n}\n else if (value instanceof Number) {\n  result.type=ObjectType.NUMBER;\n  result.value=value;\n}\n else if (value instanceof Character) {\n  result.type=ObjectType.NUMBER;\n  result.value=Integer.valueOf(((Character)value).charValue());\n}\n else if (value instanceof String) {\n  result.type=ObjectType.STRING;\n  result.value=String.valueOf(value);\n}\n else {\n  result.type=ObjectType.OBJECT;\n  result.className=\"What??\";\n  result.objectId=String.valueOf(mObjects.putObject(value));\n  if (value.getClass().isArray()) {\n    result.description=\"array\";\n  }\n else   if (value instanceof List) {\n    result.description=\"List\";\n  }\n else   if (value instanceof Set) {\n    result.description=\"Set\";\n  }\n else   if (value instanceof Map) {\n    result.description=\"Map\";\n  }\n else {\n    result.description=getPropertyClassName(value);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 177,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1384,
        "startLineNumber" : 186,
        "startColumnNumber" : 6,
        "endLineNumber" : 220,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (value == null) {\n  result.type=ObjectType.OBJECT;\n  result.subtype=ObjectSubType.NULL;\n  result.value=JSONObject.NULL;\n}\n else if (value instanceof Boolean) {\n  result.type=ObjectType.BOOLEAN;\n  result.value=value;\n}\n else if (value instanceof Number) {\n  result.type=ObjectType.NUMBER;\n  result.value=value;\n}\n else if (value instanceof Character) {\n  result.type=ObjectType.NUMBER;\n  result.value=Integer.valueOf(((Character)value).charValue());\n}\n else if (value instanceof String) {\n  result.type=ObjectType.STRING;\n  result.value=String.valueOf(value);\n}\n else {\n  result.type=ObjectType.OBJECT;\n  result.className=\"What??\";\n  result.objectId=String.valueOf(mObjects.putObject(value));\n  if (value.getClass().isArray()) {\n    result.description=\"array\";\n  }\n else   if (value instanceof List) {\n    result.description=\"List\";\n  }\n else   if (value instanceof Set) {\n    result.description=\"Set\";\n  }\n else   if (value instanceof Map) {\n    result.description=\"Map\";\n  }\n else {\n    result.description=getPropertyClassName(value);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 206,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1467,
        "startLineNumber" : 184,
        "startColumnNumber" : 54,
        "endLineNumber" : 222,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RemoteObject result=new RemoteObject();\n  if (value == null) {\n    result.type=ObjectType.OBJECT;\n    result.subtype=ObjectSubType.NULL;\n    result.value=JSONObject.NULL;\n  }\n else   if (value instanceof Boolean) {\n    result.type=ObjectType.BOOLEAN;\n    result.value=value;\n  }\n else   if (value instanceof Number) {\n    result.type=ObjectType.NUMBER;\n    result.value=value;\n  }\n else   if (value instanceof Character) {\n    result.type=ObjectType.NUMBER;\n    result.value=Integer.valueOf(((Character)value).charValue());\n  }\n else   if (value instanceof String) {\n    result.type=ObjectType.STRING;\n    result.value=String.valueOf(value);\n  }\n else {\n    result.type=ObjectType.OBJECT;\n    result.className=\"What??\";\n    result.objectId=String.valueOf(mObjects.putObject(value));\n    if (value.getClass().isArray()) {\n      result.description=\"array\";\n    }\n else     if (value instanceof List) {\n      result.description=\"List\";\n    }\n else     if (value instanceof Set) {\n      result.description=\"Set\";\n    }\n else     if (value instanceof Map) {\n      result.description=\"Map\";\n    }\n else {\n      result.description=getPropertyClassName(value);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1517,
        "startLineNumber" : 184,
        "startColumnNumber" : 4,
        "endLineNumber" : 222,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public RemoteObject objectForRemote(Object value){\n  RemoteObject result=new RemoteObject();\n  if (value == null) {\n    result.type=ObjectType.OBJECT;\n    result.subtype=ObjectSubType.NULL;\n    result.value=JSONObject.NULL;\n  }\n else   if (value instanceof Boolean) {\n    result.type=ObjectType.BOOLEAN;\n    result.value=value;\n  }\n else   if (value instanceof Number) {\n    result.type=ObjectType.NUMBER;\n    result.value=value;\n  }\n else   if (value instanceof Character) {\n    result.type=ObjectType.NUMBER;\n    result.value=Integer.valueOf(((Character)value).charValue());\n  }\n else   if (value instanceof String) {\n    result.type=ObjectType.STRING;\n    result.value=String.valueOf(value);\n  }\n else {\n    result.type=ObjectType.OBJECT;\n    result.className=\"What??\";\n    result.objectId=String.valueOf(mObjects.putObject(value));\n    if (value.getClass().isArray()) {\n      result.description=\"array\";\n    }\n else     if (value instanceof List) {\n      result.description=\"List\";\n    }\n else     if (value instanceof Set) {\n      result.description=\"Set\";\n    }\n else     if (value instanceof Map) {\n      result.description=\"Map\";\n    }\n else {\n      result.description=getPropertyClassName(value);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 226,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1224,
        "startLineNumber" : 190,
        "startColumnNumber" : 13,
        "endLineNumber" : 220,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (value instanceof Boolean) {\n  result.type=ObjectType.BOOLEAN;\n  result.value=value;\n}\n else if (value instanceof Number) {\n  result.type=ObjectType.NUMBER;\n  result.value=value;\n}\n else if (value instanceof Character) {\n  result.type=ObjectType.NUMBER;\n  result.value=Integer.valueOf(((Character)value).charValue());\n}\n else if (value instanceof String) {\n  result.type=ObjectType.STRING;\n  result.value=String.valueOf(value);\n}\n else {\n  result.type=ObjectType.OBJECT;\n  result.className=\"What??\";\n  result.objectId=String.valueOf(mObjects.putObject(value));\n  if (value.getClass().isArray()) {\n    result.description=\"array\";\n  }\n else   if (value instanceof List) {\n    result.description=\"List\";\n  }\n else   if (value instanceof Set) {\n    result.description=\"Set\";\n  }\n else   if (value instanceof Map) {\n    result.description=\"Map\";\n  }\n else {\n    result.description=getPropertyClassName(value);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 177,
      "astHeight" : 14
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 190,
    "startColumnNumber" : 17,
    "endLineNumber" : 190,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}