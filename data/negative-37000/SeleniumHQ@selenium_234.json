{
  "id" : 234,
  "expression" : "!(rawStackTrace instanceof String)",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/org/openqa/selenium/remote/W3CHandshakeResponse.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!(rawStackTrace instanceof String)",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 48,
      "startColumnNumber" : 10,
      "endLineNumber" : 48,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 6,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 48,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!(rawStackTrace instanceof String)) {\n  rawStackTrace=String.valueOf(rawStackTrace);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1432,
        "startLineNumber" : 31,
        "startColumnNumber" : 20,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object rawValue=tuple.getData().get(\"value\");\n  if (!(rawValue instanceof Map)) {\n    return null;\n  }\n  Map<?,?> rawMap=(Map<?,?>)rawValue;\n  Object rawMessage=rawMap.get(\"message\");\n  Object rawError=rawMap.get(\"error\");\n  Object rawStackTrace=rawMap.get(\"stacktrace\");\n  rawStackTrace=rawStackTrace == null ? \"\" : rawStackTrace;\n  if (!(rawError instanceof String) || (!(rawMessage instanceof String))) {\n    return null;\n  }\n  if (!(rawStackTrace instanceof String)) {\n    rawStackTrace=String.valueOf(rawStackTrace);\n  }\n  Response response=new Response();\n  response.setState((String)rawError);\n  response.setStatus(new ErrorCodes().toStatus((String)rawError,Optional.of(tuple.getStatusCode())));\n  Class<? extends WebDriverException> type=new ErrorCodes().getExceptionType((String)rawError);\n  try {\n    WebDriverException exception=type.getConstructor(String.class).newInstance((String)rawMessage);\n    exception.addInfo(\"remote stacktrace\",(String)rawStackTrace);\n    response.setValue(exception);\n  }\n catch (  ReflectiveOperationException e) {\n    response.setValue(rawMessage);\n  }\n  new ErrorHandler().throwIfResponseFailed(response,tuple.getRequestDuration().toMillis());\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1441,
        "startLineNumber" : 31,
        "startColumnNumber" : 11,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "tuple -> {\n  Object rawValue=tuple.getData().get(\"value\");\n  if (!(rawValue instanceof Map)) {\n    return null;\n  }\n  Map<?,?> rawMap=(Map<?,?>)rawValue;\n  Object rawMessage=rawMap.get(\"message\");\n  Object rawError=rawMap.get(\"error\");\n  Object rawStackTrace=rawMap.get(\"stacktrace\");\n  rawStackTrace=rawStackTrace == null ? \"\" : rawStackTrace;\n  if (!(rawError instanceof String) || (!(rawMessage instanceof String))) {\n    return null;\n  }\n  if (!(rawStackTrace instanceof String)) {\n    rawStackTrace=String.valueOf(rawStackTrace);\n  }\n  Response response=new Response();\n  response.setState((String)rawError);\n  response.setStatus(new ErrorCodes().toStatus((String)rawError,Optional.of(tuple.getStatusCode())));\n  Class<? extends WebDriverException> type=new ErrorCodes().getExceptionType((String)rawError);\n  try {\n    WebDriverException exception=type.getConstructor(String.class).newInstance((String)rawMessage);\n    exception.addInfo(\"remote stacktrace\",(String)rawStackTrace);\n    response.setValue(exception);\n  }\n catch (  ReflectiveOperationException e) {\n    response.setValue(rawMessage);\n  }\n  new ErrorHandler().throwIfResponseFailed(response,tuple.getRequestDuration().toMillis());\n  return null;\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 220,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 48,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!(rawStackTrace instanceof String)) {\n  rawStackTrace=String.valueOf(rawStackTrace);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 48,
    "startColumnNumber" : 10,
    "endLineNumber" : 48,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}