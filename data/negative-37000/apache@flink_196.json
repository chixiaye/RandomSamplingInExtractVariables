{
  "id" : 196,
  "expression" : "new OutputStreamWriter(out,StandardCharsets.UTF_8)",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-filesystems/flink-azure-fs-hadoop/src/test/java/org/apache/flink/fs/azurefs/AzureFileSystemBehaviorITCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new OutputStreamWriter(out,StandardCharsets.UTF_8)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 158,
      "startColumnNumber" : 28,
      "endLineNumber" : 158,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 157,
        "startColumnNumber" : 39,
        "endLineNumber" : 158,
        "endColumnNumber" : 79
      },
      "nodeContext" : "writer=new OutputStreamWriter(out,StandardCharsets.UTF_8)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 157,
        "startColumnNumber" : 20,
        "endLineNumber" : 158,
        "endColumnNumber" : 79
      },
      "nodeContext" : "OutputStreamWriter writer=new OutputStreamWriter(out,StandardCharsets.UTF_8)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 156,
        "startColumnNumber" : 12,
        "endLineNumber" : 160,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (FSDataOutputStream out=fs.create(path,FileSystem.WriteMode.OVERWRITE);OutputStreamWriter writer=new OutputStreamWriter(out,StandardCharsets.UTF_8)){\n  writer.write(testLine);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 739,
        "startLineNumber" : 155,
        "startColumnNumber" : 12,
        "endLineNumber" : 171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try (FSDataOutputStream out=fs.create(path,FileSystem.WriteMode.OVERWRITE);OutputStreamWriter writer=new OutputStreamWriter(out,StandardCharsets.UTF_8)){\n    writer.write(testLine);\n  }\n   checkPathEventualExistence(fs,path,true,deadline);\n  try (FSDataInputStream in=fs.open(path);InputStreamReader ir=new InputStreamReader(in,StandardCharsets.UTF_8);BufferedReader reader=new BufferedReader(ir)){\n    String line=reader.readLine();\n    assertEquals(testLine,line);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  try (FSDataOutputStream out=fs.create(path,FileSystem.WriteMode.OVERWRITE);OutputStreamWriter writer=new OutputStreamWriter(out,StandardCharsets.UTF_8)){\n    writer.write(testLine);\n  }\n   checkPathEventualExistence(fs,path,true,deadline);\n  try (FSDataInputStream in=fs.open(path);InputStreamReader ir=new InputStreamReader(in,StandardCharsets.UTF_8);BufferedReader reader=new BufferedReader(ir)){\n    String line=reader.readLine();\n    assertEquals(testLine,line);\n  }\n }\n  finally {\n  fs.delete(path,false);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 94,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1159,
        "startLineNumber" : 147,
        "startColumnNumber" : 62,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final long deadline=System.nanoTime() + 30_000_000_000L;\n  final String testLine=\"Hello Upload!\";\n  final Path path=new Path(getBasePath() + \"/test.txt\");\n  final FileSystem fs=path.getFileSystem();\n  try {\n    try (FSDataOutputStream out=fs.create(path,FileSystem.WriteMode.OVERWRITE);OutputStreamWriter writer=new OutputStreamWriter(out,StandardCharsets.UTF_8)){\n      writer.write(testLine);\n    }\n     checkPathEventualExistence(fs,path,true,deadline);\n    try (FSDataInputStream in=fs.open(path);InputStreamReader ir=new InputStreamReader(in,StandardCharsets.UTF_8);BufferedReader reader=new BufferedReader(ir)){\n      String line=reader.readLine();\n      assertEquals(testLine,line);\n    }\n   }\n  finally {\n    fs.delete(path,false);\n  }\n  checkPathEventualExistence(fs,path,false,deadline);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1227,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimpleFileWriteAndRead() throws Exception {\n  final long deadline=System.nanoTime() + 30_000_000_000L;\n  final String testLine=\"Hello Upload!\";\n  final Path path=new Path(getBasePath() + \"/test.txt\");\n  final FileSystem fs=path.getFileSystem();\n  try {\n    try (FSDataOutputStream out=fs.create(path,FileSystem.WriteMode.OVERWRITE);OutputStreamWriter writer=new OutputStreamWriter(out,StandardCharsets.UTF_8)){\n      writer.write(testLine);\n    }\n     checkPathEventualExistence(fs,path,true,deadline);\n    try (FSDataInputStream in=fs.open(path);InputStreamReader ir=new InputStreamReader(in,StandardCharsets.UTF_8);BufferedReader reader=new BufferedReader(ir)){\n      String line=reader.readLine();\n      assertEquals(testLine,line);\n    }\n   }\n  finally {\n    fs.delete(path,false);\n  }\n  checkPathEventualExistence(fs,path,false,deadline);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 157,
        "startColumnNumber" : 39,
        "endLineNumber" : 158,
        "endColumnNumber" : 79
      },
      "nodeContext" : "writer=new OutputStreamWriter(out,StandardCharsets.UTF_8)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.io.OutputStreamWriter"
  } ],
  "positionList" : [ {
    "charLength" : 51,
    "startLineNumber" : 158,
    "startColumnNumber" : 28,
    "endLineNumber" : 158,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}