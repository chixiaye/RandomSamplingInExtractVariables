{
  "id" : 147,
  "expression" : "end",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/main/java/org/apache/ibatis/parsing/GenericTokenParser.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "end",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 22,
      "startColumnNumber" : 12,
      "endLineNumber" : 22,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 22,
        "startColumnNumber" : 12,
        "endLineNumber" : 22,
        "endColumnNumber" : 23
      },
      "nodeContext" : "end > start",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (end > start) {\n  String before=after.substring(0,start);\n  String content=after.substring(start + openToken.length(),end);\n  String substitution=handler.handleToken(content);\n  builder.append(before);\n  builder.append(substitution);\n  after=after.substring(end + closeToken.length());\n}\n else if (end > -1) {\n  String before=after.substring(0,end);\n  builder.append(before);\n  builder.append(closeToken);\n  after=after.substring(end + closeToken.length());\n}\n else {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 21,
        "startColumnNumber" : 25,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (end > start) {\n    String before=after.substring(0,start);\n    String content=after.substring(start + openToken.length(),end);\n    String substitution=handler.handleToken(content);\n    builder.append(before);\n    builder.append(substitution);\n    after=after.substring(end + closeToken.length());\n  }\n else   if (end > -1) {\n    String before=after.substring(0,end);\n    builder.append(before);\n    builder.append(closeToken);\n    after=after.substring(end + closeToken.length());\n  }\n else {\n    break;\n  }\n  start=after.indexOf(openToken);\n  end=after.indexOf(closeToken);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 21,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (start > -1) {\n  if (end > start) {\n    String before=after.substring(0,start);\n    String content=after.substring(start + openToken.length(),end);\n    String substitution=handler.handleToken(content);\n    builder.append(before);\n    builder.append(substitution);\n    after=after.substring(end + closeToken.length());\n  }\n else   if (end > -1) {\n    String before=after.substring(0,end);\n    builder.append(before);\n    builder.append(closeToken);\n    after=after.substring(end + closeToken.length());\n  }\n else {\n    break;\n  }\n  start=after.indexOf(openToken);\n  end=after.indexOf(closeToken);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 22,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String after=text;\n  int start=after.indexOf(openToken);\n  int end=after.indexOf(closeToken);\n  while (start > -1) {\n    if (end > start) {\n      String before=after.substring(0,start);\n      String content=after.substring(start + openToken.length(),end);\n      String substitution=handler.handleToken(content);\n      builder.append(before);\n      builder.append(substitution);\n      after=after.substring(end + closeToken.length());\n    }\n else     if (end > -1) {\n      String before=after.substring(0,end);\n      builder.append(before);\n      builder.append(closeToken);\n      after=after.substring(end + closeToken.length());\n    }\n else {\n      break;\n    }\n    start=after.indexOf(openToken);\n    end=after.indexOf(closeToken);\n  }\n  builder.append(after);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (text != null) {\n  String after=text;\n  int start=after.indexOf(openToken);\n  int end=after.indexOf(closeToken);\n  while (start > -1) {\n    if (end > start) {\n      String before=after.substring(0,start);\n      String content=after.substring(start + openToken.length(),end);\n      String substitution=handler.handleToken(content);\n      builder.append(before);\n      builder.append(substitution);\n      after=after.substring(end + closeToken.length());\n    }\n else     if (end > -1) {\n      String before=after.substring(0,end);\n      builder.append(before);\n      builder.append(closeToken);\n      after=after.substring(end + closeToken.length());\n    }\n else {\n      break;\n    }\n    start=after.indexOf(openToken);\n    end=after.indexOf(closeToken);\n  }\n  builder.append(after);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 150,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 15,
        "startColumnNumber" : 35,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder builder=new StringBuilder();\n  if (text != null) {\n    String after=text;\n    int start=after.indexOf(openToken);\n    int end=after.indexOf(closeToken);\n    while (start > -1) {\n      if (end > start) {\n        String before=after.substring(0,start);\n        String content=after.substring(start + openToken.length(),end);\n        String substitution=handler.handleToken(content);\n        builder.append(before);\n        builder.append(substitution);\n        after=after.substring(end + closeToken.length());\n      }\n else       if (end > -1) {\n        String before=after.substring(0,end);\n        builder.append(before);\n        builder.append(closeToken);\n        after=after.substring(end + closeToken.length());\n      }\n else {\n        break;\n      }\n      start=after.indexOf(openToken);\n      end=after.indexOf(closeToken);\n    }\n    builder.append(after);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 15,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public String parse(String text){\n  StringBuilder builder=new StringBuilder();\n  if (text != null) {\n    String after=text;\n    int start=after.indexOf(openToken);\n    int end=after.indexOf(closeToken);\n    while (start > -1) {\n      if (end > start) {\n        String before=after.substring(0,start);\n        String content=after.substring(start + openToken.length(),end);\n        String substitution=handler.handleToken(content);\n        builder.append(before);\n        builder.append(substitution);\n        after=after.substring(end + closeToken.length());\n      }\n else       if (end > -1) {\n        String before=after.substring(0,end);\n        builder.append(before);\n        builder.append(closeToken);\n        after=after.substring(end + closeToken.length());\n      }\n else {\n        break;\n      }\n      start=after.indexOf(openToken);\n      end=after.indexOf(closeToken);\n    }\n    builder.append(after);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 22,
        "startColumnNumber" : 12,
        "endLineNumber" : 22,
        "endColumnNumber" : 23
      },
      "nodeContext" : "end > start",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "end",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 24,
      "startColumnNumber" : 71,
      "endLineNumber" : 24,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 24,
        "startColumnNumber" : 27,
        "endLineNumber" : 24,
        "endColumnNumber" : 75
      },
      "nodeContext" : "after.substring(start + openToken.length(),end)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 24,
        "startColumnNumber" : 17,
        "endLineNumber" : 24,
        "endColumnNumber" : 75
      },
      "nodeContext" : "content=after.substring(start + openToken.length(),end)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 24,
        "startColumnNumber" : 10,
        "endLineNumber" : 24,
        "endColumnNumber" : 76
      },
      "nodeContext" : "String content=after.substring(start + openToken.length(),end);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 22,
        "startColumnNumber" : 25,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String before=after.substring(0,start);\n  String content=after.substring(start + openToken.length(),end);\n  String substitution=handler.handleToken(content);\n  builder.append(before);\n  builder.append(substitution);\n  after=after.substring(end + closeToken.length());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (end > start) {\n  String before=after.substring(0,start);\n  String content=after.substring(start + openToken.length(),end);\n  String substitution=handler.handleToken(content);\n  builder.append(before);\n  builder.append(substitution);\n  after=after.substring(end + closeToken.length());\n}\n else if (end > -1) {\n  String before=after.substring(0,end);\n  builder.append(before);\n  builder.append(closeToken);\n  after=after.substring(end + closeToken.length());\n}\n else {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 21,
        "startColumnNumber" : 25,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (end > start) {\n    String before=after.substring(0,start);\n    String content=after.substring(start + openToken.length(),end);\n    String substitution=handler.handleToken(content);\n    builder.append(before);\n    builder.append(substitution);\n    after=after.substring(end + closeToken.length());\n  }\n else   if (end > -1) {\n    String before=after.substring(0,end);\n    builder.append(before);\n    builder.append(closeToken);\n    after=after.substring(end + closeToken.length());\n  }\n else {\n    break;\n  }\n  start=after.indexOf(openToken);\n  end=after.indexOf(closeToken);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 21,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (start > -1) {\n  if (end > start) {\n    String before=after.substring(0,start);\n    String content=after.substring(start + openToken.length(),end);\n    String substitution=handler.handleToken(content);\n    builder.append(before);\n    builder.append(substitution);\n    after=after.substring(end + closeToken.length());\n  }\n else   if (end > -1) {\n    String before=after.substring(0,end);\n    builder.append(before);\n    builder.append(closeToken);\n    after=after.substring(end + closeToken.length());\n  }\n else {\n    break;\n  }\n  start=after.indexOf(openToken);\n  end=after.indexOf(closeToken);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 22,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String after=text;\n  int start=after.indexOf(openToken);\n  int end=after.indexOf(closeToken);\n  while (start > -1) {\n    if (end > start) {\n      String before=after.substring(0,start);\n      String content=after.substring(start + openToken.length(),end);\n      String substitution=handler.handleToken(content);\n      builder.append(before);\n      builder.append(substitution);\n      after=after.substring(end + closeToken.length());\n    }\n else     if (end > -1) {\n      String before=after.substring(0,end);\n      builder.append(before);\n      builder.append(closeToken);\n      after=after.substring(end + closeToken.length());\n    }\n else {\n      break;\n    }\n    start=after.indexOf(openToken);\n    end=after.indexOf(closeToken);\n  }\n  builder.append(after);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (text != null) {\n  String after=text;\n  int start=after.indexOf(openToken);\n  int end=after.indexOf(closeToken);\n  while (start > -1) {\n    if (end > start) {\n      String before=after.substring(0,start);\n      String content=after.substring(start + openToken.length(),end);\n      String substitution=handler.handleToken(content);\n      builder.append(before);\n      builder.append(substitution);\n      after=after.substring(end + closeToken.length());\n    }\n else     if (end > -1) {\n      String before=after.substring(0,end);\n      builder.append(before);\n      builder.append(closeToken);\n      after=after.substring(end + closeToken.length());\n    }\n else {\n      break;\n    }\n    start=after.indexOf(openToken);\n    end=after.indexOf(closeToken);\n  }\n  builder.append(after);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 150,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 15,
        "startColumnNumber" : 35,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder builder=new StringBuilder();\n  if (text != null) {\n    String after=text;\n    int start=after.indexOf(openToken);\n    int end=after.indexOf(closeToken);\n    while (start > -1) {\n      if (end > start) {\n        String before=after.substring(0,start);\n        String content=after.substring(start + openToken.length(),end);\n        String substitution=handler.handleToken(content);\n        builder.append(before);\n        builder.append(substitution);\n        after=after.substring(end + closeToken.length());\n      }\n else       if (end > -1) {\n        String before=after.substring(0,end);\n        builder.append(before);\n        builder.append(closeToken);\n        after=after.substring(end + closeToken.length());\n      }\n else {\n        break;\n      }\n      start=after.indexOf(openToken);\n      end=after.indexOf(closeToken);\n    }\n    builder.append(after);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 15,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public String parse(String text){\n  StringBuilder builder=new StringBuilder();\n  if (text != null) {\n    String after=text;\n    int start=after.indexOf(openToken);\n    int end=after.indexOf(closeToken);\n    while (start > -1) {\n      if (end > start) {\n        String before=after.substring(0,start);\n        String content=after.substring(start + openToken.length(),end);\n        String substitution=handler.handleToken(content);\n        builder.append(before);\n        builder.append(substitution);\n        after=after.substring(end + closeToken.length());\n      }\n else       if (end > -1) {\n        String before=after.substring(0,end);\n        builder.append(before);\n        builder.append(closeToken);\n        after=after.substring(end + closeToken.length());\n      }\n else {\n        break;\n      }\n      start=after.indexOf(openToken);\n      end=after.indexOf(closeToken);\n    }\n    builder.append(after);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 24,
        "startColumnNumber" : 10,
        "endLineNumber" : 24,
        "endColumnNumber" : 76
      },
      "nodeContext" : "String content=after.substring(start + openToken.length(),end);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "end",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 28,
      "startColumnNumber" : 34,
      "endLineNumber" : 28,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 28,
        "startColumnNumber" : 34,
        "endLineNumber" : 28,
        "endColumnNumber" : 59
      },
      "nodeContext" : "end + closeToken.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 28,
        "startColumnNumber" : 18,
        "endLineNumber" : 28,
        "endColumnNumber" : 60
      },
      "nodeContext" : "after.substring(end + closeToken.length())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 28,
        "startColumnNumber" : 10,
        "endLineNumber" : 28,
        "endColumnNumber" : 60
      },
      "nodeContext" : "after=after.substring(end + closeToken.length())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 28,
        "startColumnNumber" : 10,
        "endLineNumber" : 28,
        "endColumnNumber" : 61
      },
      "nodeContext" : "after=after.substring(end + closeToken.length());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 22,
        "startColumnNumber" : 25,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String before=after.substring(0,start);\n  String content=after.substring(start + openToken.length(),end);\n  String substitution=handler.handleToken(content);\n  builder.append(before);\n  builder.append(substitution);\n  after=after.substring(end + closeToken.length());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (end > start) {\n  String before=after.substring(0,start);\n  String content=after.substring(start + openToken.length(),end);\n  String substitution=handler.handleToken(content);\n  builder.append(before);\n  builder.append(substitution);\n  after=after.substring(end + closeToken.length());\n}\n else if (end > -1) {\n  String before=after.substring(0,end);\n  builder.append(before);\n  builder.append(closeToken);\n  after=after.substring(end + closeToken.length());\n}\n else {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 21,
        "startColumnNumber" : 25,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (end > start) {\n    String before=after.substring(0,start);\n    String content=after.substring(start + openToken.length(),end);\n    String substitution=handler.handleToken(content);\n    builder.append(before);\n    builder.append(substitution);\n    after=after.substring(end + closeToken.length());\n  }\n else   if (end > -1) {\n    String before=after.substring(0,end);\n    builder.append(before);\n    builder.append(closeToken);\n    after=after.substring(end + closeToken.length());\n  }\n else {\n    break;\n  }\n  start=after.indexOf(openToken);\n  end=after.indexOf(closeToken);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 21,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (start > -1) {\n  if (end > start) {\n    String before=after.substring(0,start);\n    String content=after.substring(start + openToken.length(),end);\n    String substitution=handler.handleToken(content);\n    builder.append(before);\n    builder.append(substitution);\n    after=after.substring(end + closeToken.length());\n  }\n else   if (end > -1) {\n    String before=after.substring(0,end);\n    builder.append(before);\n    builder.append(closeToken);\n    after=after.substring(end + closeToken.length());\n  }\n else {\n    break;\n  }\n  start=after.indexOf(openToken);\n  end=after.indexOf(closeToken);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 22,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String after=text;\n  int start=after.indexOf(openToken);\n  int end=after.indexOf(closeToken);\n  while (start > -1) {\n    if (end > start) {\n      String before=after.substring(0,start);\n      String content=after.substring(start + openToken.length(),end);\n      String substitution=handler.handleToken(content);\n      builder.append(before);\n      builder.append(substitution);\n      after=after.substring(end + closeToken.length());\n    }\n else     if (end > -1) {\n      String before=after.substring(0,end);\n      builder.append(before);\n      builder.append(closeToken);\n      after=after.substring(end + closeToken.length());\n    }\n else {\n      break;\n    }\n    start=after.indexOf(openToken);\n    end=after.indexOf(closeToken);\n  }\n  builder.append(after);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (text != null) {\n  String after=text;\n  int start=after.indexOf(openToken);\n  int end=after.indexOf(closeToken);\n  while (start > -1) {\n    if (end > start) {\n      String before=after.substring(0,start);\n      String content=after.substring(start + openToken.length(),end);\n      String substitution=handler.handleToken(content);\n      builder.append(before);\n      builder.append(substitution);\n      after=after.substring(end + closeToken.length());\n    }\n else     if (end > -1) {\n      String before=after.substring(0,end);\n      builder.append(before);\n      builder.append(closeToken);\n      after=after.substring(end + closeToken.length());\n    }\n else {\n      break;\n    }\n    start=after.indexOf(openToken);\n    end=after.indexOf(closeToken);\n  }\n  builder.append(after);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 150,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 15,
        "startColumnNumber" : 35,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder builder=new StringBuilder();\n  if (text != null) {\n    String after=text;\n    int start=after.indexOf(openToken);\n    int end=after.indexOf(closeToken);\n    while (start > -1) {\n      if (end > start) {\n        String before=after.substring(0,start);\n        String content=after.substring(start + openToken.length(),end);\n        String substitution=handler.handleToken(content);\n        builder.append(before);\n        builder.append(substitution);\n        after=after.substring(end + closeToken.length());\n      }\n else       if (end > -1) {\n        String before=after.substring(0,end);\n        builder.append(before);\n        builder.append(closeToken);\n        after=after.substring(end + closeToken.length());\n      }\n else {\n        break;\n      }\n      start=after.indexOf(openToken);\n      end=after.indexOf(closeToken);\n    }\n    builder.append(after);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 15,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public String parse(String text){\n  StringBuilder builder=new StringBuilder();\n  if (text != null) {\n    String after=text;\n    int start=after.indexOf(openToken);\n    int end=after.indexOf(closeToken);\n    while (start > -1) {\n      if (end > start) {\n        String before=after.substring(0,start);\n        String content=after.substring(start + openToken.length(),end);\n        String substitution=handler.handleToken(content);\n        builder.append(before);\n        builder.append(substitution);\n        after=after.substring(end + closeToken.length());\n      }\n else       if (end > -1) {\n        String before=after.substring(0,end);\n        builder.append(before);\n        builder.append(closeToken);\n        after=after.substring(end + closeToken.length());\n      }\n else {\n        break;\n      }\n      start=after.indexOf(openToken);\n      end=after.indexOf(closeToken);\n    }\n    builder.append(after);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 28,
        "startColumnNumber" : 10,
        "endLineNumber" : 28,
        "endColumnNumber" : 61
      },
      "nodeContext" : "after=after.substring(end + closeToken.length());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "end",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 29,
      "startColumnNumber" : 19,
      "endLineNumber" : 29,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 29,
        "startColumnNumber" : 19,
        "endLineNumber" : 29,
        "endColumnNumber" : 27
      },
      "nodeContext" : "end > -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 29,
        "startColumnNumber" : 15,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (end > -1) {\n  String before=after.substring(0,end);\n  builder.append(before);\n  builder.append(closeToken);\n  after=after.substring(end + closeToken.length());\n}\n else {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (end > start) {\n  String before=after.substring(0,start);\n  String content=after.substring(start + openToken.length(),end);\n  String substitution=handler.handleToken(content);\n  builder.append(before);\n  builder.append(substitution);\n  after=after.substring(end + closeToken.length());\n}\n else if (end > -1) {\n  String before=after.substring(0,end);\n  builder.append(before);\n  builder.append(closeToken);\n  after=after.substring(end + closeToken.length());\n}\n else {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 21,
        "startColumnNumber" : 25,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (end > start) {\n    String before=after.substring(0,start);\n    String content=after.substring(start + openToken.length(),end);\n    String substitution=handler.handleToken(content);\n    builder.append(before);\n    builder.append(substitution);\n    after=after.substring(end + closeToken.length());\n  }\n else   if (end > -1) {\n    String before=after.substring(0,end);\n    builder.append(before);\n    builder.append(closeToken);\n    after=after.substring(end + closeToken.length());\n  }\n else {\n    break;\n  }\n  start=after.indexOf(openToken);\n  end=after.indexOf(closeToken);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 21,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (start > -1) {\n  if (end > start) {\n    String before=after.substring(0,start);\n    String content=after.substring(start + openToken.length(),end);\n    String substitution=handler.handleToken(content);\n    builder.append(before);\n    builder.append(substitution);\n    after=after.substring(end + closeToken.length());\n  }\n else   if (end > -1) {\n    String before=after.substring(0,end);\n    builder.append(before);\n    builder.append(closeToken);\n    after=after.substring(end + closeToken.length());\n  }\n else {\n    break;\n  }\n  start=after.indexOf(openToken);\n  end=after.indexOf(closeToken);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 22,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String after=text;\n  int start=after.indexOf(openToken);\n  int end=after.indexOf(closeToken);\n  while (start > -1) {\n    if (end > start) {\n      String before=after.substring(0,start);\n      String content=after.substring(start + openToken.length(),end);\n      String substitution=handler.handleToken(content);\n      builder.append(before);\n      builder.append(substitution);\n      after=after.substring(end + closeToken.length());\n    }\n else     if (end > -1) {\n      String before=after.substring(0,end);\n      builder.append(before);\n      builder.append(closeToken);\n      after=after.substring(end + closeToken.length());\n    }\n else {\n      break;\n    }\n    start=after.indexOf(openToken);\n    end=after.indexOf(closeToken);\n  }\n  builder.append(after);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (text != null) {\n  String after=text;\n  int start=after.indexOf(openToken);\n  int end=after.indexOf(closeToken);\n  while (start > -1) {\n    if (end > start) {\n      String before=after.substring(0,start);\n      String content=after.substring(start + openToken.length(),end);\n      String substitution=handler.handleToken(content);\n      builder.append(before);\n      builder.append(substitution);\n      after=after.substring(end + closeToken.length());\n    }\n else     if (end > -1) {\n      String before=after.substring(0,end);\n      builder.append(before);\n      builder.append(closeToken);\n      after=after.substring(end + closeToken.length());\n    }\n else {\n      break;\n    }\n    start=after.indexOf(openToken);\n    end=after.indexOf(closeToken);\n  }\n  builder.append(after);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 150,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 15,
        "startColumnNumber" : 35,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder builder=new StringBuilder();\n  if (text != null) {\n    String after=text;\n    int start=after.indexOf(openToken);\n    int end=after.indexOf(closeToken);\n    while (start > -1) {\n      if (end > start) {\n        String before=after.substring(0,start);\n        String content=after.substring(start + openToken.length(),end);\n        String substitution=handler.handleToken(content);\n        builder.append(before);\n        builder.append(substitution);\n        after=after.substring(end + closeToken.length());\n      }\n else       if (end > -1) {\n        String before=after.substring(0,end);\n        builder.append(before);\n        builder.append(closeToken);\n        after=after.substring(end + closeToken.length());\n      }\n else {\n        break;\n      }\n      start=after.indexOf(openToken);\n      end=after.indexOf(closeToken);\n    }\n    builder.append(after);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 15,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public String parse(String text){\n  StringBuilder builder=new StringBuilder();\n  if (text != null) {\n    String after=text;\n    int start=after.indexOf(openToken);\n    int end=after.indexOf(closeToken);\n    while (start > -1) {\n      if (end > start) {\n        String before=after.substring(0,start);\n        String content=after.substring(start + openToken.length(),end);\n        String substitution=handler.handleToken(content);\n        builder.append(before);\n        builder.append(substitution);\n        after=after.substring(end + closeToken.length());\n      }\n else       if (end > -1) {\n        String before=after.substring(0,end);\n        builder.append(before);\n        builder.append(closeToken);\n        after=after.substring(end + closeToken.length());\n      }\n else {\n        break;\n      }\n      start=after.indexOf(openToken);\n      end=after.indexOf(closeToken);\n    }\n    builder.append(after);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 29,
        "startColumnNumber" : 19,
        "endLineNumber" : 29,
        "endColumnNumber" : 27
      },
      "nodeContext" : "end > -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "end",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 30,
      "startColumnNumber" : 45,
      "endLineNumber" : 30,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 30,
        "startColumnNumber" : 26,
        "endLineNumber" : 30,
        "endColumnNumber" : 49
      },
      "nodeContext" : "after.substring(0,end)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 30,
        "startColumnNumber" : 17,
        "endLineNumber" : 30,
        "endColumnNumber" : 49
      },
      "nodeContext" : "before=after.substring(0,end)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 30,
        "startColumnNumber" : 10,
        "endLineNumber" : 30,
        "endColumnNumber" : 50
      },
      "nodeContext" : "String before=after.substring(0,end);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 29,
        "startColumnNumber" : 29,
        "endLineNumber" : 34,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String before=after.substring(0,end);\n  builder.append(before);\n  builder.append(closeToken);\n  after=after.substring(end + closeToken.length());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 29,
        "startColumnNumber" : 15,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (end > -1) {\n  String before=after.substring(0,end);\n  builder.append(before);\n  builder.append(closeToken);\n  after=after.substring(end + closeToken.length());\n}\n else {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (end > start) {\n  String before=after.substring(0,start);\n  String content=after.substring(start + openToken.length(),end);\n  String substitution=handler.handleToken(content);\n  builder.append(before);\n  builder.append(substitution);\n  after=after.substring(end + closeToken.length());\n}\n else if (end > -1) {\n  String before=after.substring(0,end);\n  builder.append(before);\n  builder.append(closeToken);\n  after=after.substring(end + closeToken.length());\n}\n else {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 21,
        "startColumnNumber" : 25,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (end > start) {\n    String before=after.substring(0,start);\n    String content=after.substring(start + openToken.length(),end);\n    String substitution=handler.handleToken(content);\n    builder.append(before);\n    builder.append(substitution);\n    after=after.substring(end + closeToken.length());\n  }\n else   if (end > -1) {\n    String before=after.substring(0,end);\n    builder.append(before);\n    builder.append(closeToken);\n    after=after.substring(end + closeToken.length());\n  }\n else {\n    break;\n  }\n  start=after.indexOf(openToken);\n  end=after.indexOf(closeToken);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 21,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (start > -1) {\n  if (end > start) {\n    String before=after.substring(0,start);\n    String content=after.substring(start + openToken.length(),end);\n    String substitution=handler.handleToken(content);\n    builder.append(before);\n    builder.append(substitution);\n    after=after.substring(end + closeToken.length());\n  }\n else   if (end > -1) {\n    String before=after.substring(0,end);\n    builder.append(before);\n    builder.append(closeToken);\n    after=after.substring(end + closeToken.length());\n  }\n else {\n    break;\n  }\n  start=after.indexOf(openToken);\n  end=after.indexOf(closeToken);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 22,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String after=text;\n  int start=after.indexOf(openToken);\n  int end=after.indexOf(closeToken);\n  while (start > -1) {\n    if (end > start) {\n      String before=after.substring(0,start);\n      String content=after.substring(start + openToken.length(),end);\n      String substitution=handler.handleToken(content);\n      builder.append(before);\n      builder.append(substitution);\n      after=after.substring(end + closeToken.length());\n    }\n else     if (end > -1) {\n      String before=after.substring(0,end);\n      builder.append(before);\n      builder.append(closeToken);\n      after=after.substring(end + closeToken.length());\n    }\n else {\n      break;\n    }\n    start=after.indexOf(openToken);\n    end=after.indexOf(closeToken);\n  }\n  builder.append(after);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (text != null) {\n  String after=text;\n  int start=after.indexOf(openToken);\n  int end=after.indexOf(closeToken);\n  while (start > -1) {\n    if (end > start) {\n      String before=after.substring(0,start);\n      String content=after.substring(start + openToken.length(),end);\n      String substitution=handler.handleToken(content);\n      builder.append(before);\n      builder.append(substitution);\n      after=after.substring(end + closeToken.length());\n    }\n else     if (end > -1) {\n      String before=after.substring(0,end);\n      builder.append(before);\n      builder.append(closeToken);\n      after=after.substring(end + closeToken.length());\n    }\n else {\n      break;\n    }\n    start=after.indexOf(openToken);\n    end=after.indexOf(closeToken);\n  }\n  builder.append(after);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 150,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 15,
        "startColumnNumber" : 35,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder builder=new StringBuilder();\n  if (text != null) {\n    String after=text;\n    int start=after.indexOf(openToken);\n    int end=after.indexOf(closeToken);\n    while (start > -1) {\n      if (end > start) {\n        String before=after.substring(0,start);\n        String content=after.substring(start + openToken.length(),end);\n        String substitution=handler.handleToken(content);\n        builder.append(before);\n        builder.append(substitution);\n        after=after.substring(end + closeToken.length());\n      }\n else       if (end > -1) {\n        String before=after.substring(0,end);\n        builder.append(before);\n        builder.append(closeToken);\n        after=after.substring(end + closeToken.length());\n      }\n else {\n        break;\n      }\n      start=after.indexOf(openToken);\n      end=after.indexOf(closeToken);\n    }\n    builder.append(after);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 15,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public String parse(String text){\n  StringBuilder builder=new StringBuilder();\n  if (text != null) {\n    String after=text;\n    int start=after.indexOf(openToken);\n    int end=after.indexOf(closeToken);\n    while (start > -1) {\n      if (end > start) {\n        String before=after.substring(0,start);\n        String content=after.substring(start + openToken.length(),end);\n        String substitution=handler.handleToken(content);\n        builder.append(before);\n        builder.append(substitution);\n        after=after.substring(end + closeToken.length());\n      }\n else       if (end > -1) {\n        String before=after.substring(0,end);\n        builder.append(before);\n        builder.append(closeToken);\n        after=after.substring(end + closeToken.length());\n      }\n else {\n        break;\n      }\n      start=after.indexOf(openToken);\n      end=after.indexOf(closeToken);\n    }\n    builder.append(after);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 30,
        "startColumnNumber" : 10,
        "endLineNumber" : 30,
        "endColumnNumber" : 50
      },
      "nodeContext" : "String before=after.substring(0,end);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "end",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 33,
      "startColumnNumber" : 34,
      "endLineNumber" : 33,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 33,
        "startColumnNumber" : 34,
        "endLineNumber" : 33,
        "endColumnNumber" : 59
      },
      "nodeContext" : "end + closeToken.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 33,
        "startColumnNumber" : 18,
        "endLineNumber" : 33,
        "endColumnNumber" : 60
      },
      "nodeContext" : "after.substring(end + closeToken.length())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 33,
        "startColumnNumber" : 10,
        "endLineNumber" : 33,
        "endColumnNumber" : 60
      },
      "nodeContext" : "after=after.substring(end + closeToken.length())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 33,
        "startColumnNumber" : 10,
        "endLineNumber" : 33,
        "endColumnNumber" : 61
      },
      "nodeContext" : "after=after.substring(end + closeToken.length());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 29,
        "startColumnNumber" : 29,
        "endLineNumber" : 34,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String before=after.substring(0,end);\n  builder.append(before);\n  builder.append(closeToken);\n  after=after.substring(end + closeToken.length());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 29,
        "startColumnNumber" : 15,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (end > -1) {\n  String before=after.substring(0,end);\n  builder.append(before);\n  builder.append(closeToken);\n  after=after.substring(end + closeToken.length());\n}\n else {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (end > start) {\n  String before=after.substring(0,start);\n  String content=after.substring(start + openToken.length(),end);\n  String substitution=handler.handleToken(content);\n  builder.append(before);\n  builder.append(substitution);\n  after=after.substring(end + closeToken.length());\n}\n else if (end > -1) {\n  String before=after.substring(0,end);\n  builder.append(before);\n  builder.append(closeToken);\n  after=after.substring(end + closeToken.length());\n}\n else {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 21,
        "startColumnNumber" : 25,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (end > start) {\n    String before=after.substring(0,start);\n    String content=after.substring(start + openToken.length(),end);\n    String substitution=handler.handleToken(content);\n    builder.append(before);\n    builder.append(substitution);\n    after=after.substring(end + closeToken.length());\n  }\n else   if (end > -1) {\n    String before=after.substring(0,end);\n    builder.append(before);\n    builder.append(closeToken);\n    after=after.substring(end + closeToken.length());\n  }\n else {\n    break;\n  }\n  start=after.indexOf(openToken);\n  end=after.indexOf(closeToken);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 21,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (start > -1) {\n  if (end > start) {\n    String before=after.substring(0,start);\n    String content=after.substring(start + openToken.length(),end);\n    String substitution=handler.handleToken(content);\n    builder.append(before);\n    builder.append(substitution);\n    after=after.substring(end + closeToken.length());\n  }\n else   if (end > -1) {\n    String before=after.substring(0,end);\n    builder.append(before);\n    builder.append(closeToken);\n    after=after.substring(end + closeToken.length());\n  }\n else {\n    break;\n  }\n  start=after.indexOf(openToken);\n  end=after.indexOf(closeToken);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 22,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String after=text;\n  int start=after.indexOf(openToken);\n  int end=after.indexOf(closeToken);\n  while (start > -1) {\n    if (end > start) {\n      String before=after.substring(0,start);\n      String content=after.substring(start + openToken.length(),end);\n      String substitution=handler.handleToken(content);\n      builder.append(before);\n      builder.append(substitution);\n      after=after.substring(end + closeToken.length());\n    }\n else     if (end > -1) {\n      String before=after.substring(0,end);\n      builder.append(before);\n      builder.append(closeToken);\n      after=after.substring(end + closeToken.length());\n    }\n else {\n      break;\n    }\n    start=after.indexOf(openToken);\n    end=after.indexOf(closeToken);\n  }\n  builder.append(after);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (text != null) {\n  String after=text;\n  int start=after.indexOf(openToken);\n  int end=after.indexOf(closeToken);\n  while (start > -1) {\n    if (end > start) {\n      String before=after.substring(0,start);\n      String content=after.substring(start + openToken.length(),end);\n      String substitution=handler.handleToken(content);\n      builder.append(before);\n      builder.append(substitution);\n      after=after.substring(end + closeToken.length());\n    }\n else     if (end > -1) {\n      String before=after.substring(0,end);\n      builder.append(before);\n      builder.append(closeToken);\n      after=after.substring(end + closeToken.length());\n    }\n else {\n      break;\n    }\n    start=after.indexOf(openToken);\n    end=after.indexOf(closeToken);\n  }\n  builder.append(after);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 150,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 15,
        "startColumnNumber" : 35,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder builder=new StringBuilder();\n  if (text != null) {\n    String after=text;\n    int start=after.indexOf(openToken);\n    int end=after.indexOf(closeToken);\n    while (start > -1) {\n      if (end > start) {\n        String before=after.substring(0,start);\n        String content=after.substring(start + openToken.length(),end);\n        String substitution=handler.handleToken(content);\n        builder.append(before);\n        builder.append(substitution);\n        after=after.substring(end + closeToken.length());\n      }\n else       if (end > -1) {\n        String before=after.substring(0,end);\n        builder.append(before);\n        builder.append(closeToken);\n        after=after.substring(end + closeToken.length());\n      }\n else {\n        break;\n      }\n      start=after.indexOf(openToken);\n      end=after.indexOf(closeToken);\n    }\n    builder.append(after);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 15,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public String parse(String text){\n  StringBuilder builder=new StringBuilder();\n  if (text != null) {\n    String after=text;\n    int start=after.indexOf(openToken);\n    int end=after.indexOf(closeToken);\n    while (start > -1) {\n      if (end > start) {\n        String before=after.substring(0,start);\n        String content=after.substring(start + openToken.length(),end);\n        String substitution=handler.handleToken(content);\n        builder.append(before);\n        builder.append(substitution);\n        after=after.substring(end + closeToken.length());\n      }\n else       if (end > -1) {\n        String before=after.substring(0,end);\n        builder.append(before);\n        builder.append(closeToken);\n        after=after.substring(end + closeToken.length());\n      }\n else {\n        break;\n      }\n      start=after.indexOf(openToken);\n      end=after.indexOf(closeToken);\n    }\n    builder.append(after);\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 33,
        "startColumnNumber" : 10,
        "endLineNumber" : 33,
        "endColumnNumber" : 61
      },
      "nodeContext" : "after=after.substring(end + closeToken.length());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 22,
    "startColumnNumber" : 12,
    "endLineNumber" : 22,
    "endColumnNumber" : 15
  }, {
    "charLength" : 3,
    "startLineNumber" : 24,
    "startColumnNumber" : 71,
    "endLineNumber" : 24,
    "endColumnNumber" : 74
  }, {
    "charLength" : 3,
    "startLineNumber" : 28,
    "startColumnNumber" : 34,
    "endLineNumber" : 28,
    "endColumnNumber" : 37
  }, {
    "charLength" : 3,
    "startLineNumber" : 29,
    "startColumnNumber" : 19,
    "endLineNumber" : 29,
    "endColumnNumber" : 22
  }, {
    "charLength" : 3,
    "startLineNumber" : 30,
    "startColumnNumber" : 45,
    "endLineNumber" : 30,
    "endColumnNumber" : 48
  }, {
    "charLength" : 3,
    "startLineNumber" : 33,
    "startColumnNumber" : 34,
    "endLineNumber" : 33,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  } ]
}