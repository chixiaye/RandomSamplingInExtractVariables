{
  "id" : 295,
  "expression" : "meth.params()",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/annotations/src/main/java/mindustry/annotations/util/TypeIOResolver.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "meth.params()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 25,
      "startColumnNumber" : 39,
      "endLineNumber" : 25,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 25,
        "startColumnNumber" : 30,
        "endLineNumber" : 25,
        "endColumnNumber" : 52
      },
      "nodeContext" : "params=meth.params()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 25,
        "startColumnNumber" : 20,
        "endLineNumber" : 25,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Seq<Svar> params=meth.params();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1110,
        "startLineNumber" : 24,
        "startColumnNumber" : 72,
        "endLineNumber" : 36,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Seq<Svar> params=meth.params();\n  if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n    out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n  }\n else   if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n    out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n  }\n else   if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n    out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1166,
        "startLineNumber" : 24,
        "startColumnNumber" : 16,
        "endLineNumber" : 36,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n  Seq<Svar> params=meth.params();\n  if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n    out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n  }\n else   if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n    out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n  }\n else   if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n    out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 23,
        "startColumnNumber" : 39,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n    Seq<Svar> params=meth.params();\n    if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n      out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n    }\n else     if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n      out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n    }\n else     if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n      out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 23,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Smethod meth : methods) {\n  if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n    Seq<Svar> params=meth.params();\n    if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n      out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n    }\n else     if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n      out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n    }\n else     if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n      out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 177,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1348,
        "startLineNumber" : 20,
        "startColumnNumber" : 62,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Seq<Smethod> methods=type.methods();\n  for (  Smethod meth : methods) {\n    if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n      Seq<Svar> params=meth.params();\n      if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n        out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n      }\n else       if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n        out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n      }\n else       if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n        out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1402,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Stype type : processor.types(TypeIOHandler.class)) {\n  Seq<Smethod> methods=type.methods();\n  for (  Smethod meth : methods) {\n    if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n      Seq<Svar> params=meth.params();\n      if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n        out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n      }\n else       if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n        out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n      }\n else       if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n        out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 200,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1547,
        "startLineNumber" : 18,
        "startColumnNumber" : 66,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ClassSerializer out=new ClassSerializer(new ObjectMap<>(),new ObjectMap<>(),new ObjectMap<>());\n  for (  Stype type : processor.types(TypeIOHandler.class)) {\n    Seq<Smethod> methods=type.methods();\n    for (    Smethod meth : methods) {\n      if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n        Seq<Svar> params=meth.params();\n        if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n          out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n        }\n else         if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n          out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n        }\n else         if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n          out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n        }\n      }\n    }\n  }\n  return out;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1782,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Finds all class serializers for all types and returns them. Logs errors when necessary. Maps fully qualified class names to their serializers.\n */\npublic static ClassSerializer resolve(BaseProcessor processor){\n  ClassSerializer out=new ClassSerializer(new ObjectMap<>(),new ObjectMap<>(),new ObjectMap<>());\n  for (  Stype type : processor.types(TypeIOHandler.class)) {\n    Seq<Smethod> methods=type.methods();\n    for (    Smethod meth : methods) {\n      if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n        Seq<Svar> params=meth.params();\n        if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n          out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n        }\n else         if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n          out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n        }\n else         if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n          out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n        }\n      }\n    }\n  }\n  return out;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 234,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 25,
        "startColumnNumber" : 20,
        "endLineNumber" : 25,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Seq<Svar> params=meth.params();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "mindustry.annotations.Seq<mindustry.annotations.util.Svar>"
  }, {
    "nodeContext" : "meth.params()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 32,
      "startColumnNumber" : 150,
      "endLineNumber" : 32,
      "endColumnNumber" : 163
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 32,
        "startColumnNumber" : 150,
        "endLineNumber" : 32,
        "endColumnNumber" : 170
      },
      "nodeContext" : "meth.params().get(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 32,
        "startColumnNumber" : 150,
        "endLineNumber" : 32,
        "endColumnNumber" : 179
      },
      "nodeContext" : "meth.params().get(1).mirror()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 32,
        "startColumnNumber" : 132,
        "endLineNumber" : 32,
        "endColumnNumber" : 180
      },
      "nodeContext" : "meth.ret().equals(meth.params().get(1).mirror())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 32,
        "startColumnNumber" : 29,
        "endLineNumber" : 32,
        "endColumnNumber" : 180
      },
      "nodeContext" : "params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 416,
        "startLineNumber" : 32,
        "startColumnNumber" : 26,
        "endLineNumber" : 35,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n  out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 29,
        "startColumnNumber" : 26,
        "endLineNumber" : 35,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n  out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n}\n else if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n  out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 948,
        "startLineNumber" : 27,
        "startColumnNumber" : 20,
        "endLineNumber" : 35,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n  out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n}\n else if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n  out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n}\n else if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n  out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 144,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1110,
        "startLineNumber" : 24,
        "startColumnNumber" : 72,
        "endLineNumber" : 36,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Seq<Svar> params=meth.params();\n  if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n    out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n  }\n else   if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n    out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n  }\n else   if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n    out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1166,
        "startLineNumber" : 24,
        "startColumnNumber" : 16,
        "endLineNumber" : 36,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n  Seq<Svar> params=meth.params();\n  if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n    out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n  }\n else   if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n    out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n  }\n else   if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n    out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 23,
        "startColumnNumber" : 39,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n    Seq<Svar> params=meth.params();\n    if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n      out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n    }\n else     if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n      out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n    }\n else     if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n      out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 23,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Smethod meth : methods) {\n  if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n    Seq<Svar> params=meth.params();\n    if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n      out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n    }\n else     if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n      out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n    }\n else     if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n      out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 177,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1348,
        "startLineNumber" : 20,
        "startColumnNumber" : 62,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Seq<Smethod> methods=type.methods();\n  for (  Smethod meth : methods) {\n    if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n      Seq<Svar> params=meth.params();\n      if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n        out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n      }\n else       if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n        out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n      }\n else       if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n        out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1402,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Stype type : processor.types(TypeIOHandler.class)) {\n  Seq<Smethod> methods=type.methods();\n  for (  Smethod meth : methods) {\n    if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n      Seq<Svar> params=meth.params();\n      if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n        out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n      }\n else       if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n        out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n      }\n else       if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n        out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 200,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1547,
        "startLineNumber" : 18,
        "startColumnNumber" : 66,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ClassSerializer out=new ClassSerializer(new ObjectMap<>(),new ObjectMap<>(),new ObjectMap<>());\n  for (  Stype type : processor.types(TypeIOHandler.class)) {\n    Seq<Smethod> methods=type.methods();\n    for (    Smethod meth : methods) {\n      if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n        Seq<Svar> params=meth.params();\n        if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n          out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n        }\n else         if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n          out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n        }\n else         if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n          out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n        }\n      }\n    }\n  }\n  return out;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1782,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Finds all class serializers for all types and returns them. Logs errors when necessary. Maps fully qualified class names to their serializers.\n */\npublic static ClassSerializer resolve(BaseProcessor processor){\n  ClassSerializer out=new ClassSerializer(new ObjectMap<>(),new ObjectMap<>(),new ObjectMap<>());\n  for (  Stype type : processor.types(TypeIOHandler.class)) {\n    Seq<Smethod> methods=type.methods();\n    for (    Smethod meth : methods) {\n      if (meth.is(Modifier.PUBLIC) && meth.is(Modifier.STATIC)) {\n        Seq<Svar> params=meth.params();\n        if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Writes\")) {\n          out.writers.put(fix(params.get(1).tname().toString()),type.fullName() + \".\" + meth.name());\n        }\n else         if (params.size == 1 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid()) {\n          out.readers.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n        }\n else         if (params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())) {\n          out.mutatorReaders.put(fix(meth.retn().toString()),type.fullName() + \".\" + meth.name());\n        }\n      }\n    }\n  }\n  return out;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 234,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 32,
        "startColumnNumber" : 29,
        "endLineNumber" : 32,
        "endColumnNumber" : 180
      },
      "nodeContext" : "params.size == 2 && params.first().tname().toString().equals(\"arc.util.io.Reads\") && !meth.isVoid() && meth.ret().equals(meth.params().get(1).mirror())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 35,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "mindustry.annotations.Seq<mindustry.annotations.util.Svar>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 25,
    "startColumnNumber" : 39,
    "endLineNumber" : 25,
    "endColumnNumber" : 52
  }, {
    "charLength" : 13,
    "startLineNumber" : 32,
    "startColumnNumber" : 150,
    "endLineNumber" : 32,
    "endColumnNumber" : 163
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  } ]
}