{
  "id" : 479,
  "expression" : "field",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerResourcePatcher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "field",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 188,
      "startColumnNumber" : 33,
      "endLineNumber" : 188,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 188,
        "startColumnNumber" : 33,
        "endLineNumber" : 188,
        "endColumnNumber" : 65
      },
      "nodeContext" : "field.get(currentActivityThread)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 188,
        "startColumnNumber" : 25,
        "endLineNumber" : 188,
        "endColumnNumber" : 65
      },
      "nodeContext" : "value=field.get(currentActivityThread)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 188,
        "startColumnNumber" : 12,
        "endLineNumber" : 188,
        "endColumnNumber" : 66
      },
      "nodeContext" : "final Object value=field.get(currentActivityThread);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 187,
        "startColumnNumber" : 43,
        "endLineNumber" : 201,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Object value=field.get(currentActivityThread);\n  for (  Map.Entry<String,WeakReference<?>> entry : ((Map<String,WeakReference<?>>)value).entrySet()) {\n    final Object loadedApk=entry.getValue().get();\n    if (loadedApk == null) {\n      continue;\n    }\n    final String resDirPath=(String)resDir.get(loadedApk);\n    if (appInfo.sourceDir.equals(resDirPath)) {\n      resDir.set(loadedApk,externalResourceFile);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 187,
        "startColumnNumber" : 8,
        "endLineNumber" : 201,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Field field : packagesFields) {\n  final Object value=field.get(currentActivityThread);\n  for (  Map.Entry<String,WeakReference<?>> entry : ((Map<String,WeakReference<?>>)value).entrySet()) {\n    final Object loadedApk=entry.getValue().get();\n    if (loadedApk == null) {\n      continue;\n    }\n    final String resDirPath=(String)resDir.get(loadedApk);\n    if (appInfo.sourceDir.equals(resDirPath)) {\n      resDir.set(loadedApk,externalResourceFile);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3999,
        "startLineNumber" : 174,
        "startColumnNumber" : 115,
        "endLineNumber" : 268,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (externalResourceFile == null) {\n    return;\n  }\n  final ApplicationInfo appInfo=context.getApplicationInfo();\n  final Field[] packagesFields;\n  if (Build.VERSION.SDK_INT < 27) {\n    packagesFields=new Field[]{packagesFiled,resourcePackagesFiled};\n  }\n else {\n    packagesFields=new Field[]{packagesFiled};\n  }\n  for (  Field field : packagesFields) {\n    final Object value=field.get(currentActivityThread);\n    for (    Map.Entry<String,WeakReference<?>> entry : ((Map<String,WeakReference<?>>)value).entrySet()) {\n      final Object loadedApk=entry.getValue().get();\n      if (loadedApk == null) {\n        continue;\n      }\n      final String resDirPath=(String)resDir.get(loadedApk);\n      if (appInfo.sourceDir.equals(resDirPath)) {\n        resDir.set(loadedApk,externalResourceFile);\n      }\n    }\n  }\n  if (((Integer)addAssetPathMethod.invoke(newAssetManager,externalResourceFile)) == 0) {\n    throw new IllegalStateException(\"Could not create new AssetManager\");\n  }\n  if (shouldAddSharedLibraryAssets(appInfo)) {\n    for (    String sharedLibrary : appInfo.sharedLibraryFiles) {\n      if (!sharedLibrary.endsWith(\".apk\")) {\n        continue;\n      }\n      if (((Integer)addAssetPathAsSharedLibraryMethod.invoke(newAssetManager,sharedLibrary)) == 0) {\n        throw new IllegalStateException(\"AssetManager add SharedLibrary Fail\");\n      }\n      Log.i(TAG,\"addAssetPathAsSharedLibrary \" + sharedLibrary);\n    }\n  }\n  if (stringBlocksField != null && ensureStringBlocksMethod != null) {\n    stringBlocksField.set(newAssetManager,null);\n    ensureStringBlocksMethod.invoke(newAssetManager);\n  }\n  for (  WeakReference<Resources> wr : references) {\n    final Resources resources=wr.get();\n    if (resources == null) {\n      continue;\n    }\n    try {\n      assetsFiled.set(resources,newAssetManager);\n    }\n catch (    Throwable ignore) {\n      final Object resourceImpl=resourcesImplFiled.get(resources);\n      final Field implAssets=findField(resourceImpl,\"mAssets\");\n      implAssets.set(resourceImpl,newAssetManager);\n    }\n    clearPreloadTypedArrayIssue(resources);\n    resources.updateConfiguration(resources.getConfiguration(),resources.getDisplayMetrics());\n  }\n  if (Build.VERSION.SDK_INT >= 24) {\n    try {\n      if (publicSourceDirField != null) {\n        publicSourceDirField.set(context.getApplicationInfo(),externalResourceFile);\n      }\n    }\n catch (    Throwable ignore) {\n    }\n  }\n  if (!checkResUpdate(context)) {\n    throw new TinkerRuntimeException(ShareConstants.CHECK_RES_INSTALL_FAIL);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 353,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4208,
        "startLineNumber" : 169,
        "startColumnNumber" : 4,
        "endLineNumber" : 268,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param context\n * @param externalResourceFile\n * @throws Throwable\n */\npublic static void monkeyPatchExistingResources(Context context,String externalResourceFile) throws Throwable {\n  if (externalResourceFile == null) {\n    return;\n  }\n  final ApplicationInfo appInfo=context.getApplicationInfo();\n  final Field[] packagesFields;\n  if (Build.VERSION.SDK_INT < 27) {\n    packagesFields=new Field[]{packagesFiled,resourcePackagesFiled};\n  }\n else {\n    packagesFields=new Field[]{packagesFiled};\n  }\n  for (  Field field : packagesFields) {\n    final Object value=field.get(currentActivityThread);\n    for (    Map.Entry<String,WeakReference<?>> entry : ((Map<String,WeakReference<?>>)value).entrySet()) {\n      final Object loadedApk=entry.getValue().get();\n      if (loadedApk == null) {\n        continue;\n      }\n      final String resDirPath=(String)resDir.get(loadedApk);\n      if (appInfo.sourceDir.equals(resDirPath)) {\n        resDir.set(loadedApk,externalResourceFile);\n      }\n    }\n  }\n  if (((Integer)addAssetPathMethod.invoke(newAssetManager,externalResourceFile)) == 0) {\n    throw new IllegalStateException(\"Could not create new AssetManager\");\n  }\n  if (shouldAddSharedLibraryAssets(appInfo)) {\n    for (    String sharedLibrary : appInfo.sharedLibraryFiles) {\n      if (!sharedLibrary.endsWith(\".apk\")) {\n        continue;\n      }\n      if (((Integer)addAssetPathAsSharedLibraryMethod.invoke(newAssetManager,sharedLibrary)) == 0) {\n        throw new IllegalStateException(\"AssetManager add SharedLibrary Fail\");\n      }\n      Log.i(TAG,\"addAssetPathAsSharedLibrary \" + sharedLibrary);\n    }\n  }\n  if (stringBlocksField != null && ensureStringBlocksMethod != null) {\n    stringBlocksField.set(newAssetManager,null);\n    ensureStringBlocksMethod.invoke(newAssetManager);\n  }\n  for (  WeakReference<Resources> wr : references) {\n    final Resources resources=wr.get();\n    if (resources == null) {\n      continue;\n    }\n    try {\n      assetsFiled.set(resources,newAssetManager);\n    }\n catch (    Throwable ignore) {\n      final Object resourceImpl=resourcesImplFiled.get(resources);\n      final Field implAssets=findField(resourceImpl,\"mAssets\");\n      implAssets.set(resourceImpl,newAssetManager);\n    }\n    clearPreloadTypedArrayIssue(resources);\n    resources.updateConfiguration(resources.getConfiguration(),resources.getDisplayMetrics());\n  }\n  if (Build.VERSION.SDK_INT >= 24) {\n    try {\n      if (publicSourceDirField != null) {\n        publicSourceDirField.set(context.getApplicationInfo(),externalResourceFile);\n      }\n    }\n catch (    Throwable ignore) {\n    }\n  }\n  if (!checkResUpdate(context)) {\n    throw new TinkerRuntimeException(ShareConstants.CHECK_RES_INSTALL_FAIL);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 369,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 188,
        "startColumnNumber" : 12,
        "endLineNumber" : 188,
        "endColumnNumber" : 66
      },
      "nodeContext" : "final Object value=field.get(currentActivityThread);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Field"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 188,
    "startColumnNumber" : 33,
    "endLineNumber" : 188,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}