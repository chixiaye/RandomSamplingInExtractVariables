{
  "id" : 161,
  "expression" : "options.setHa(true)",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/DeploymentTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "options.setHa(true)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 70,
      "startColumnNumber" : 26,
      "endLineNumber" : 70,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertEquals(options,options.setHa(true))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(options,options.setHa(true));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 53,
        "startColumnNumber" : 28,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DeploymentOptions options=new DeploymentOptions();\n  assertNull(options.getConfig());\n  JsonObject config=new JsonObject().put(\"foo\",\"bar\").put(\"obj\",new JsonObject().put(\"quux\",123));\n  assertEquals(options,options.setConfig(config));\n  assertEquals(config,options.getConfig());\n  assertFalse(options.isWorker());\n  assertEquals(options,options.setWorker(true));\n  assertTrue(options.isWorker());\n  assertFalse(options.isMultiThreaded());\n  assertEquals(options,options.setMultiThreaded(true));\n  assertTrue(options.isMultiThreaded());\n  assertNull(options.getIsolationGroup());\n  String rand=TestUtils.randomUnicodeString(1000);\n  assertEquals(options,options.setIsolationGroup(rand));\n  assertEquals(rand,options.getIsolationGroup());\n  assertFalse(options.isHa());\n  assertEquals(options,options.setHa(true));\n  assertTrue(options.isHa());\n  assertNull(options.getExtraClasspath());\n  List<String> cp=Arrays.asList(\"foo\",\"bar\");\n  assertEquals(options,options.setExtraClasspath(cp));\n  assertNull(options.getIsolatedClasses());\n  List<String> isol=Arrays.asList(\"com.foo.MyClass\",\"org.foo.*\");\n  assertEquals(options,options.setIsolatedClasses(isol));\n  assertSame(isol,options.getIsolatedClasses());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1321,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testOptions(){\n  DeploymentOptions options=new DeploymentOptions();\n  assertNull(options.getConfig());\n  JsonObject config=new JsonObject().put(\"foo\",\"bar\").put(\"obj\",new JsonObject().put(\"quux\",123));\n  assertEquals(options,options.setConfig(config));\n  assertEquals(config,options.getConfig());\n  assertFalse(options.isWorker());\n  assertEquals(options,options.setWorker(true));\n  assertTrue(options.isWorker());\n  assertFalse(options.isMultiThreaded());\n  assertEquals(options,options.setMultiThreaded(true));\n  assertTrue(options.isMultiThreaded());\n  assertNull(options.getIsolationGroup());\n  String rand=TestUtils.randomUnicodeString(1000);\n  assertEquals(options,options.setIsolationGroup(rand));\n  assertEquals(rand,options.getIsolationGroup());\n  assertFalse(options.isHa());\n  assertEquals(options,options.setHa(true));\n  assertTrue(options.isHa());\n  assertNull(options.getExtraClasspath());\n  List<String> cp=Arrays.asList(\"foo\",\"bar\");\n  assertEquals(options,options.setExtraClasspath(cp));\n  assertNull(options.getIsolatedClasses());\n  List<String> isol=Arrays.asList(\"com.foo.MyClass\",\"org.foo.*\");\n  assertEquals(options,options.setIsolatedClasses(isol));\n  assertSame(isol,options.getIsolatedClasses());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(options,options.setHa(true));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "io.vertx.core.DeploymentOptions"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 70,
    "startColumnNumber" : 26,
    "endLineNumber" : 70,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}