{
  "id" : 325,
  "expression" : "Assertions",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-container/dubbo-container-spring/src/test/java/org/apache/dubbo/container/spring/SpringContainerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assertions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 34,
      "startColumnNumber" : 8,
      "endLineNumber" : 34,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 105
      },
      "nodeContext" : "Assertions.assertEquals(SpringContainer.class,container.context.getBean(\"container\").getClass())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 106
      },
      "nodeContext" : "Assertions.assertEquals(SpringContainer.class,container.context.getBean(\"container\").getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 31,
        "startColumnNumber" : 32,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SpringContainer container=(SpringContainer)ExtensionLoader.getExtensionLoader(Container.class).getExtension(\"spring\");\n  container.start();\n  Assertions.assertEquals(SpringContainer.class,container.context.getBean(\"container\").getClass());\n  container.stop();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testContainer(){\n  SpringContainer container=(SpringContainer)ExtensionLoader.getExtensionLoader(Container.class).getExtension(\"spring\");\n  container.start();\n  Assertions.assertEquals(SpringContainer.class,container.context.getBean(\"container\").getClass());\n  container.stop();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 106
      },
      "nodeContext" : "Assertions.assertEquals(SpringContainer.class,container.context.getBean(\"container\").getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 34,
    "startColumnNumber" : 8,
    "endLineNumber" : 34,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}