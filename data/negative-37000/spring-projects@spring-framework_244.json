{
  "id" : 244,
  "expression" : "xpath(performer,NS,2).exists()",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-test/src/test/java/org/springframework/test/web/client/samples/matchers/XpathRequestMatchersIntegrationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "xpath(performer,NS,2).exists()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 101,
      "startColumnNumber" : 14,
      "endLineNumber" : 101,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 47
      },
      "nodeContext" : "this.mockServer.expect(requestTo(\"/composers\")).andExpect(content().contentType(\"application/xml\")).andExpect(xpath(composer,NS,1).exists()).andExpect(xpath(composer,NS,2).exists()).andExpect(xpath(composer,NS,3).exists()).andExpect(xpath(composer,NS,4).exists()).andExpect(xpath(performer,NS,1).exists()).andExpect(xpath(performer,NS,2).exists())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 417,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 29
      },
      "nodeContext" : "this.mockServer.expect(requestTo(\"/composers\")).andExpect(content().contentType(\"application/xml\")).andExpect(xpath(composer,NS,1).exists()).andExpect(xpath(composer,NS,2).exists()).andExpect(xpath(composer,NS,3).exists()).andExpect(xpath(composer,NS,4).exists()).andExpect(xpath(performer,NS,1).exists()).andExpect(xpath(performer,NS,2).exists()).andRespond(withSuccess())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 73,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 30
      },
      "nodeContext" : "this.mockServer.expect(requestTo(\"/composers\")).andExpect(content().contentType(\"application/xml\")).andExpect(xpath(composer,NS,1).exists()).andExpect(xpath(composer,NS,2).exists()).andExpect(xpath(composer,NS,3).exists()).andExpect(xpath(composer,NS,4).exists()).andExpect(xpath(performer,NS,1).exists()).andExpect(xpath(performer,NS,2).exists()).andRespond(withSuccess());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 74,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 90,
        "startColumnNumber" : 43,
        "endLineNumber" : 105,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String composer=\"/ns:people/composers/composer[%s]\";\n  String performer=\"/ns:people/performers/performer[%s]\";\n  this.mockServer.expect(requestTo(\"/composers\")).andExpect(content().contentType(\"application/xml\")).andExpect(xpath(composer,NS,1).exists()).andExpect(xpath(composer,NS,2).exists()).andExpect(xpath(composer,NS,3).exists()).andExpect(xpath(composer,NS,4).exists()).andExpect(xpath(performer,NS,1).exists()).andExpect(xpath(performer,NS,2).exists()).andRespond(withSuccess());\n  executeAndVerify();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 89,
        "startColumnNumber" : 1,
        "endLineNumber" : 105,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testExists() throws Exception {\n  String composer=\"/ns:people/composers/composer[%s]\";\n  String performer=\"/ns:people/performers/performer[%s]\";\n  this.mockServer.expect(requestTo(\"/composers\")).andExpect(content().contentType(\"application/xml\")).andExpect(xpath(composer,NS,1).exists()).andExpect(xpath(composer,NS,2).exists()).andExpect(xpath(composer,NS,3).exists()).andExpect(xpath(composer,NS,4).exists()).andExpect(xpath(performer,NS,1).exists()).andExpect(xpath(performer,NS,2).exists()).andRespond(withSuccess());\n  executeAndVerify();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 47
      },
      "nodeContext" : "this.mockServer.expect(requestTo(\"/composers\")).andExpect(content().contentType(\"application/xml\")).andExpect(xpath(composer,NS,1).exists()).andExpect(xpath(composer,NS,2).exists()).andExpect(xpath(composer,NS,3).exists()).andExpect(xpath(composer,NS,4).exists()).andExpect(xpath(performer,NS,1).exists()).andExpect(xpath(performer,NS,2).exists())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 69,
      "astHeight" : 10
    },
    "tokenLength" : 5,
    "type" : "org.springframework.test.web.client.RequestMatcher"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 101,
    "startColumnNumber" : 14,
    "endLineNumber" : 101,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}