{
  "id" : 451,
  "expression" : "matcher.group(1)",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/jdbc/exec/JDBCCallableStatementImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "matcher.group(1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 156,
      "startColumnNumber" : 34,
      "endLineNumber" : 156,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 156,
        "startColumnNumber" : 23,
        "endLineNumber" : 156,
        "endColumnNumber" : 50
      },
      "nodeContext" : "procName=matcher.group(1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 156,
        "startColumnNumber" : 16,
        "endLineNumber" : 156,
        "endColumnNumber" : 51
      },
      "nodeContext" : "String procName=matcher.group(1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 155,
        "startColumnNumber" : 32,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String procName=matcher.group(1);\n  char divChar=dataSource.getSQLDialect().getStructSeparator();\n  if (procName.indexOf(divChar) != -1) {\n    return findProcedureByNames(session,procName.split(\"\\\\\" + divChar));\n  }\n else {\n    return findProcedureByNames(session,procName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 155,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (matcher.find()) {\n  String procName=matcher.group(1);\n  char divChar=dataSource.getSQLDialect().getStructSeparator();\n  if (procName.indexOf(divChar) != -1) {\n    return findProcedureByNames(session,procName.split(\"\\\\\" + divChar));\n  }\n else {\n    return findProcedureByNames(session,procName);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 523,
        "startLineNumber" : 153,
        "startColumnNumber" : 47,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Matcher matcher=EXEC_PATTERN.matcher(queryString);\n  if (matcher.find()) {\n    String procName=matcher.group(1);\n    char divChar=dataSource.getSQLDialect().getStructSeparator();\n    if (procName.indexOf(divChar) != -1) {\n      return findProcedureByNames(session,procName.split(\"\\\\\" + divChar));\n    }\n else {\n      return findProcedureByNames(session,procName);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!CommonUtils.isEmpty(queryString)) {\n  Matcher matcher=EXEC_PATTERN.matcher(queryString);\n  if (matcher.find()) {\n    String procName=matcher.group(1);\n    char divChar=dataSource.getSQLDialect().getStructSeparator();\n    if (procName.indexOf(divChar) != -1) {\n      return findProcedureByNames(session,procName.split(\"\\\\\" + divChar));\n    }\n else {\n      return findProcedureByNames(session,procName);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 665,
        "startLineNumber" : 151,
        "startColumnNumber" : 105,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DBPDataSource dataSource=session.getDataSource();\n  if (!CommonUtils.isEmpty(queryString)) {\n    Matcher matcher=EXEC_PATTERN.matcher(queryString);\n    if (matcher.find()) {\n      String procName=matcher.group(1);\n      char divChar=dataSource.getSQLDialect().getStructSeparator();\n      if (procName.indexOf(divChar) != -1) {\n        return findProcedureByNames(session,procName.split(\"\\\\\" + divChar));\n      }\n else {\n        return findProcedureByNames(session,procName);\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 766,
        "startLineNumber" : 151,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static DBSProcedure findProcedure(DBCSession session,String queryString) throws DBException {\n  DBPDataSource dataSource=session.getDataSource();\n  if (!CommonUtils.isEmpty(queryString)) {\n    Matcher matcher=EXEC_PATTERN.matcher(queryString);\n    if (matcher.find()) {\n      String procName=matcher.group(1);\n      char divChar=dataSource.getSQLDialect().getStructSeparator();\n      if (procName.indexOf(divChar) != -1) {\n        return findProcedureByNames(session,procName.split(\"\\\\\" + divChar));\n      }\n else {\n        return findProcedureByNames(session,procName);\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 156,
        "startColumnNumber" : 16,
        "endLineNumber" : 156,
        "endColumnNumber" : 51
      },
      "nodeContext" : "String procName=matcher.group(1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 156,
    "startColumnNumber" : 34,
    "endLineNumber" : 156,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}