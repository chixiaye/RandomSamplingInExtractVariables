{
  "id" : 351,
  "expression" : "(T)Integer.valueOf(getTcpKeepIdle())",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannelConfig.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(T)Integer.valueOf(getTcpKeepIdle())",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 97,
      "startColumnNumber" : 19,
      "endLineNumber" : 97,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 57
      },
      "nodeContext" : "return (T)Integer.valueOf(getTcpKeepIdle());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 96,
        "startColumnNumber" : 55,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return (T)Integer.valueOf(getTcpKeepIdle());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (option == EpollChannelOption.TCP_KEEPIDLE) {\n  return (T)Integer.valueOf(getTcpKeepIdle());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2092,
        "startLineNumber" : 68,
        "startColumnNumber" : 52,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (option == SO_RCVBUF) {\n    return (T)Integer.valueOf(getReceiveBufferSize());\n  }\n  if (option == SO_SNDBUF) {\n    return (T)Integer.valueOf(getSendBufferSize());\n  }\n  if (option == TCP_NODELAY) {\n    return (T)Boolean.valueOf(isTcpNoDelay());\n  }\n  if (option == SO_KEEPALIVE) {\n    return (T)Boolean.valueOf(isKeepAlive());\n  }\n  if (option == SO_REUSEADDR) {\n    return (T)Boolean.valueOf(isReuseAddress());\n  }\n  if (option == SO_LINGER) {\n    return (T)Integer.valueOf(getSoLinger());\n  }\n  if (option == IP_TOS) {\n    return (T)Integer.valueOf(getTrafficClass());\n  }\n  if (option == EpollChannelOption.TCP_CORK) {\n    return (T)Boolean.valueOf(isTcpCork());\n  }\n  if (option == EpollChannelOption.TCP_NOTSENT_LOWAT) {\n    return (T)Long.valueOf(getTcpNotSentLowAt());\n  }\n  if (option == EpollChannelOption.TCP_KEEPIDLE) {\n    return (T)Integer.valueOf(getTcpKeepIdle());\n  }\n  if (option == EpollChannelOption.TCP_KEEPINTVL) {\n    return (T)Integer.valueOf(getTcpKeepIntvl());\n  }\n  if (option == EpollChannelOption.TCP_KEEPCNT) {\n    return (T)Integer.valueOf(getTcpKeepCnt());\n  }\n  if (option == EpollChannelOption.TCP_USER_TIMEOUT) {\n    return (T)Integer.valueOf(getTcpUserTimeout());\n  }\n  if (option == EpollChannelOption.TCP_QUICKACK) {\n    return (T)Boolean.valueOf(isTcpQuickAck());\n  }\n  if (option == EpollChannelOption.IP_TRANSPARENT) {\n    return (T)Boolean.valueOf(isIpTransparent());\n  }\n  if (option == ChannelOption.TCP_FASTOPEN_CONNECT) {\n    return (T)Boolean.valueOf(isTcpFastOpenConnect());\n  }\n  if (option == EpollChannelOption.SO_BUSY_POLL) {\n    return (T)Integer.valueOf(getSoBusyPoll());\n  }\n  return super.getOption(option);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 263,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Override public <T>T getOption(ChannelOption<T> option){\n  if (option == SO_RCVBUF) {\n    return (T)Integer.valueOf(getReceiveBufferSize());\n  }\n  if (option == SO_SNDBUF) {\n    return (T)Integer.valueOf(getSendBufferSize());\n  }\n  if (option == TCP_NODELAY) {\n    return (T)Boolean.valueOf(isTcpNoDelay());\n  }\n  if (option == SO_KEEPALIVE) {\n    return (T)Boolean.valueOf(isKeepAlive());\n  }\n  if (option == SO_REUSEADDR) {\n    return (T)Boolean.valueOf(isReuseAddress());\n  }\n  if (option == SO_LINGER) {\n    return (T)Integer.valueOf(getSoLinger());\n  }\n  if (option == IP_TOS) {\n    return (T)Integer.valueOf(getTrafficClass());\n  }\n  if (option == EpollChannelOption.TCP_CORK) {\n    return (T)Boolean.valueOf(isTcpCork());\n  }\n  if (option == EpollChannelOption.TCP_NOTSENT_LOWAT) {\n    return (T)Long.valueOf(getTcpNotSentLowAt());\n  }\n  if (option == EpollChannelOption.TCP_KEEPIDLE) {\n    return (T)Integer.valueOf(getTcpKeepIdle());\n  }\n  if (option == EpollChannelOption.TCP_KEEPINTVL) {\n    return (T)Integer.valueOf(getTcpKeepIntvl());\n  }\n  if (option == EpollChannelOption.TCP_KEEPCNT) {\n    return (T)Integer.valueOf(getTcpKeepCnt());\n  }\n  if (option == EpollChannelOption.TCP_USER_TIMEOUT) {\n    return (T)Integer.valueOf(getTcpUserTimeout());\n  }\n  if (option == EpollChannelOption.TCP_QUICKACK) {\n    return (T)Boolean.valueOf(isTcpQuickAck());\n  }\n  if (option == EpollChannelOption.IP_TRANSPARENT) {\n    return (T)Boolean.valueOf(isIpTransparent());\n  }\n  if (option == ChannelOption.TCP_FASTOPEN_CONNECT) {\n    return (T)Boolean.valueOf(isTcpFastOpenConnect());\n  }\n  if (option == EpollChannelOption.SO_BUSY_POLL) {\n    return (T)Integer.valueOf(getSoBusyPoll());\n  }\n  return super.getOption(option);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 282,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 57
      },
      "nodeContext" : "return (T)Integer.valueOf(getTcpKeepIdle());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "T"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 97,
    "startColumnNumber" : 19,
    "endLineNumber" : 97,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}