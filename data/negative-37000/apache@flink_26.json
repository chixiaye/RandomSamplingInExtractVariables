{
  "id" : 26,
  "expression" : "env",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-java/src/test/java/org/apache/flink/api/java/functions/SemanticPropertiesTranslationTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "env",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 59,
      "startColumnNumber" : 16,
      "endLineNumber" : 59,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 83
      },
      "nodeContext" : "env.fromElements(new Tuple3<Long,String,Integer>(3L,\"test\",42))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 58,
        "startColumnNumber" : 47,
        "endLineNumber" : 59,
        "endColumnNumber" : 83
      },
      "nodeContext" : "input=env.fromElements(new Tuple3<Long,String,Integer>(3L,\"test\",42))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 84
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") DataSet<Tuple3<Long,String,Integer>> input=env.fromElements(new Tuple3<Long,String,Integer>(3L,\"test\",42));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1122,
        "startLineNumber" : 54,
        "startColumnNumber" : 63,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n  @SuppressWarnings(\"unchecked\") DataSet<Tuple3<Long,String,Integer>> input=env.fromElements(new Tuple3<Long,String,Integer>(3L,\"test\",42));\n  input.map(new WildcardForwardedMapper<Tuple3<Long,String,Integer>>()).output(new DiscardingOutputFormat<Tuple3<Long,String,Integer>>());\n  Plan plan=env.createProgramPlan();\n  GenericDataSinkBase<?> sink=plan.getDataSinks().iterator().next();\n  MapOperatorBase<?,?,?> mapper=(MapOperatorBase<?,?,?>)sink.getInput();\n  SingleInputSemanticProperties semantics=mapper.getSemanticProperties();\n  FieldSet fw1=semantics.getForwardingTargetFields(0,0);\n  FieldSet fw2=semantics.getForwardingTargetFields(0,1);\n  FieldSet fw3=semantics.getForwardingTargetFields(0,2);\n  assertNotNull(fw1);\n  assertNotNull(fw2);\n  assertNotNull(fw3);\n  assertTrue(fw1.contains(0));\n  assertTrue(fw2.contains(1));\n  assertTrue(fw3.contains(2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUnaryFunctionWildcardForwardedAnnotation(){\n  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n  @SuppressWarnings(\"unchecked\") DataSet<Tuple3<Long,String,Integer>> input=env.fromElements(new Tuple3<Long,String,Integer>(3L,\"test\",42));\n  input.map(new WildcardForwardedMapper<Tuple3<Long,String,Integer>>()).output(new DiscardingOutputFormat<Tuple3<Long,String,Integer>>());\n  Plan plan=env.createProgramPlan();\n  GenericDataSinkBase<?> sink=plan.getDataSinks().iterator().next();\n  MapOperatorBase<?,?,?> mapper=(MapOperatorBase<?,?,?>)sink.getInput();\n  SingleInputSemanticProperties semantics=mapper.getSemanticProperties();\n  FieldSet fw1=semantics.getForwardingTargetFields(0,0);\n  FieldSet fw2=semantics.getForwardingTargetFields(0,1);\n  FieldSet fw3=semantics.getForwardingTargetFields(0,2);\n  assertNotNull(fw1);\n  assertNotNull(fw2);\n  assertNotNull(fw3);\n  assertTrue(fw1.contains(0));\n  assertTrue(fw2.contains(1));\n  assertTrue(fw3.contains(2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 193,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 83
      },
      "nodeContext" : "env.fromElements(new Tuple3<Long,String,Integer>(3L,\"test\",42))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.api.java.ExecutionEnvironment"
  }, {
    "nodeContext" : "env",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 62,
      "startColumnNumber" : 20,
      "endLineNumber" : 62,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 62,
        "startColumnNumber" : 20,
        "endLineNumber" : 62,
        "endColumnNumber" : 43
      },
      "nodeContext" : "env.createProgramPlan()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 62,
        "startColumnNumber" : 13,
        "endLineNumber" : 62,
        "endColumnNumber" : 43
      },
      "nodeContext" : "plan=env.createProgramPlan()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Plan plan=env.createProgramPlan();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1122,
        "startLineNumber" : 54,
        "startColumnNumber" : 63,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n  @SuppressWarnings(\"unchecked\") DataSet<Tuple3<Long,String,Integer>> input=env.fromElements(new Tuple3<Long,String,Integer>(3L,\"test\",42));\n  input.map(new WildcardForwardedMapper<Tuple3<Long,String,Integer>>()).output(new DiscardingOutputFormat<Tuple3<Long,String,Integer>>());\n  Plan plan=env.createProgramPlan();\n  GenericDataSinkBase<?> sink=plan.getDataSinks().iterator().next();\n  MapOperatorBase<?,?,?> mapper=(MapOperatorBase<?,?,?>)sink.getInput();\n  SingleInputSemanticProperties semantics=mapper.getSemanticProperties();\n  FieldSet fw1=semantics.getForwardingTargetFields(0,0);\n  FieldSet fw2=semantics.getForwardingTargetFields(0,1);\n  FieldSet fw3=semantics.getForwardingTargetFields(0,2);\n  assertNotNull(fw1);\n  assertNotNull(fw2);\n  assertNotNull(fw3);\n  assertTrue(fw1.contains(0));\n  assertTrue(fw2.contains(1));\n  assertTrue(fw3.contains(2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUnaryFunctionWildcardForwardedAnnotation(){\n  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n  @SuppressWarnings(\"unchecked\") DataSet<Tuple3<Long,String,Integer>> input=env.fromElements(new Tuple3<Long,String,Integer>(3L,\"test\",42));\n  input.map(new WildcardForwardedMapper<Tuple3<Long,String,Integer>>()).output(new DiscardingOutputFormat<Tuple3<Long,String,Integer>>());\n  Plan plan=env.createProgramPlan();\n  GenericDataSinkBase<?> sink=plan.getDataSinks().iterator().next();\n  MapOperatorBase<?,?,?> mapper=(MapOperatorBase<?,?,?>)sink.getInput();\n  SingleInputSemanticProperties semantics=mapper.getSemanticProperties();\n  FieldSet fw1=semantics.getForwardingTargetFields(0,0);\n  FieldSet fw2=semantics.getForwardingTargetFields(0,1);\n  FieldSet fw3=semantics.getForwardingTargetFields(0,2);\n  assertNotNull(fw1);\n  assertNotNull(fw2);\n  assertNotNull(fw3);\n  assertTrue(fw1.contains(0));\n  assertTrue(fw2.contains(1));\n  assertTrue(fw3.contains(2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 193,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Plan plan=env.createProgramPlan();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.api.java.ExecutionEnvironment"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 59,
    "startColumnNumber" : 16,
    "endLineNumber" : 59,
    "endColumnNumber" : 19
  }, {
    "charLength" : 3,
    "startLineNumber" : 62,
    "startColumnNumber" : 20,
    "endLineNumber" : 62,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}