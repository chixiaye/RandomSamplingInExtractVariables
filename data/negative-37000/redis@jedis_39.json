{
  "id" : 39,
  "expression" : "Integer.parseInt(slotRange.substring(1).split(\"-\")[0])",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/main/java/redis/clients/util/ClusterNodeInformationParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer.parseInt(slotRange.substring(1).split(\"-\")[0])",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 54,
      "startLineNumber" : 51,
      "startColumnNumber" : 17,
      "endLineNumber" : 51,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 12,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 51,
        "startColumnNumber" : 10,
        "endLineNumber" : 51,
        "endColumnNumber" : 71
      },
      "nodeContext" : "slot=Integer.parseInt(slotRange.substring(1).split(\"-\")[0])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 72
      },
      "nodeContext" : "int slot=Integer.parseInt(slotRange.substring(1).split(\"-\")[0]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 49,
        "startColumnNumber" : 61,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int slot=Integer.parseInt(slotRange.substring(1).split(\"-\")[0]);\n  if (slotRange.contains(SLOT_IMPORT_IDENTIFIER)) {\n    info.addSlotBeingImported(slot);\n  }\n else {\n    info.addSlotBeingMigrated(slot);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (slotRange.startsWith(SLOT_IN_TRANSITION_IDENTIFIER)) {\n  int slot=Integer.parseInt(slotRange.substring(1).split(\"-\")[0]);\n  if (slotRange.contains(SLOT_IMPORT_IDENTIFIER)) {\n    info.addSlotBeingImported(slot);\n  }\n else {\n    info.addSlotBeingMigrated(slot);\n  }\n}\n else if (slotRange.contains(\"-\")) {\n  String[] slotRangePart=slotRange.split(\"-\");\n  for (int slot=Integer.valueOf(slotRangePart[0]); slot <= Integer.valueOf(slotRangePart[1]); slot++) {\n    info.addAvailableSlot(slot);\n  }\n}\n else {\n  info.addAvailableSlot(Integer.valueOf(slotRange));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 48,
        "startColumnNumber" : 95,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (slotRange.startsWith(SLOT_IN_TRANSITION_IDENTIFIER)) {\n    int slot=Integer.parseInt(slotRange.substring(1).split(\"-\")[0]);\n    if (slotRange.contains(SLOT_IMPORT_IDENTIFIER)) {\n      info.addSlotBeingImported(slot);\n    }\n else {\n      info.addSlotBeingMigrated(slot);\n    }\n  }\n else   if (slotRange.contains(\"-\")) {\n    String[] slotRangePart=slotRange.split(\"-\");\n    for (int slot=Integer.valueOf(slotRangePart[0]); slot <= Integer.valueOf(slotRangePart[1]); slot++) {\n      info.addAvailableSlot(slot);\n    }\n  }\n else {\n    info.addAvailableSlot(Integer.valueOf(slotRange));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void fillSlotInformationFromSlotRange(String slotRange,ClusterNodeInformation info){\n  if (slotRange.startsWith(SLOT_IN_TRANSITION_IDENTIFIER)) {\n    int slot=Integer.parseInt(slotRange.substring(1).split(\"-\")[0]);\n    if (slotRange.contains(SLOT_IMPORT_IDENTIFIER)) {\n      info.addSlotBeingImported(slot);\n    }\n else {\n      info.addSlotBeingMigrated(slot);\n    }\n  }\n else   if (slotRange.contains(\"-\")) {\n    String[] slotRangePart=slotRange.split(\"-\");\n    for (int slot=Integer.valueOf(slotRangePart[0]); slot <= Integer.valueOf(slotRangePart[1]); slot++) {\n      info.addAvailableSlot(slot);\n    }\n  }\n else {\n    info.addAvailableSlot(Integer.valueOf(slotRange));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 72
      },
      "nodeContext" : "int slot=Integer.parseInt(slotRange.substring(1).split(\"-\")[0]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 8,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 54,
    "startLineNumber" : 51,
    "startColumnNumber" : 17,
    "endLineNumber" : 51,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}