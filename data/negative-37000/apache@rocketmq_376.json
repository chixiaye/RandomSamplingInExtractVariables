{
  "id" : 376,
  "expression" : "PutMessageStatus.PUT_OK",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/store/src/test/java/org/apache/rocketmq/store/dledger/DLedgerCommitlogTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "PutMessageStatus.PUT_OK",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 137,
      "startColumnNumber" : 32,
      "endLineNumber" : 137,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 137,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Assert.assertEquals(PutMessageStatus.PUT_OK,putMessageResult.getPutMessageStatus())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 137,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertEquals(PutMessageStatus.PUT_OK,putMessageResult.getPutMessageStatus());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 131,
        "startColumnNumber" : 37,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MessageExtBrokerInner msgInner=buildMessage();\n  msgInner.setTopic(topic);\n  msgInner.setQueueId(0);\n  PutMessageResult putMessageResult=messageStore.putMessage(msgInner);\n  results.add(putMessageResult);\n  Assert.assertEquals(PutMessageStatus.PUT_OK,putMessageResult.getPutMessageStatus());\n  Assert.assertEquals(i,putMessageResult.getAppendMessageResult().getLogicsOffset());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  MessageExtBrokerInner msgInner=buildMessage();\n  msgInner.setTopic(topic);\n  msgInner.setQueueId(0);\n  PutMessageResult putMessageResult=messageStore.putMessage(msgInner);\n  results.add(putMessageResult);\n  Assert.assertEquals(PutMessageStatus.PUT_OK,putMessageResult.getPutMessageStatus());\n  Assert.assertEquals(i,putMessageResult.getAppendMessageResult().getLogicsOffset());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 63,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2095,
        "startLineNumber" : 122,
        "startColumnNumber" : 56,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String base=createBaseDir();\n  String peers=String.format(\"n0-localhost:%d\",nextPort());\n  String group=UUID.randomUUID().toString();\n  DefaultMessageStore messageStore=createDledgerMessageStore(base,group,\"n0\",peers,null,false,0);\n  Thread.sleep(1000);\n  String topic=UUID.randomUUID().toString();\n  List<PutMessageResult> results=new ArrayList<>();\n  for (int i=0; i < 10; i++) {\n    MessageExtBrokerInner msgInner=buildMessage();\n    msgInner.setTopic(topic);\n    msgInner.setQueueId(0);\n    PutMessageResult putMessageResult=messageStore.putMessage(msgInner);\n    results.add(putMessageResult);\n    Assert.assertEquals(PutMessageStatus.PUT_OK,putMessageResult.getPutMessageStatus());\n    Assert.assertEquals(i,putMessageResult.getAppendMessageResult().getLogicsOffset());\n  }\n  Thread.sleep(100);\n  Assert.assertEquals(0,messageStore.getMinOffsetInQueue(topic,0));\n  Assert.assertEquals(10,messageStore.getMaxOffsetInQueue(topic,0));\n  Assert.assertEquals(0,messageStore.dispatchBehindBytes());\n  GetMessageResult getMessageResult=messageStore.getMessage(\"group\",topic,0,0,32,null);\n  Assert.assertEquals(GetMessageStatus.FOUND,getMessageResult.getStatus());\n  Assert.assertEquals(10,getMessageResult.getMessageBufferList().size());\n  Assert.assertEquals(10,getMessageResult.getMessageMapedList().size());\n  for (int i=0; i < results.size(); i++) {\n    ByteBuffer buffer=getMessageResult.getMessageBufferList().get(i);\n    MessageExt messageExt=MessageDecoder.decode(buffer);\n    Assert.assertEquals(i,messageExt.getQueueOffset());\n    Assert.assertEquals(results.get(i).getAppendMessageResult().getMsgId(),messageExt.getMsgId());\n    Assert.assertEquals(results.get(i).getAppendMessageResult().getWroteOffset(),messageExt.getCommitLogOffset());\n  }\n  messageStore.destroy();\n  messageStore.shutdown();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 290,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2157,
        "startLineNumber" : 121,
        "startColumnNumber" : 4,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPutAndGetMessage() throws Exception {\n  String base=createBaseDir();\n  String peers=String.format(\"n0-localhost:%d\",nextPort());\n  String group=UUID.randomUUID().toString();\n  DefaultMessageStore messageStore=createDledgerMessageStore(base,group,\"n0\",peers,null,false,0);\n  Thread.sleep(1000);\n  String topic=UUID.randomUUID().toString();\n  List<PutMessageResult> results=new ArrayList<>();\n  for (int i=0; i < 10; i++) {\n    MessageExtBrokerInner msgInner=buildMessage();\n    msgInner.setTopic(topic);\n    msgInner.setQueueId(0);\n    PutMessageResult putMessageResult=messageStore.putMessage(msgInner);\n    results.add(putMessageResult);\n    Assert.assertEquals(PutMessageStatus.PUT_OK,putMessageResult.getPutMessageStatus());\n    Assert.assertEquals(i,putMessageResult.getAppendMessageResult().getLogicsOffset());\n  }\n  Thread.sleep(100);\n  Assert.assertEquals(0,messageStore.getMinOffsetInQueue(topic,0));\n  Assert.assertEquals(10,messageStore.getMaxOffsetInQueue(topic,0));\n  Assert.assertEquals(0,messageStore.dispatchBehindBytes());\n  GetMessageResult getMessageResult=messageStore.getMessage(\"group\",topic,0,0,32,null);\n  Assert.assertEquals(GetMessageStatus.FOUND,getMessageResult.getStatus());\n  Assert.assertEquals(10,getMessageResult.getMessageBufferList().size());\n  Assert.assertEquals(10,getMessageResult.getMessageMapedList().size());\n  for (int i=0; i < results.size(); i++) {\n    ByteBuffer buffer=getMessageResult.getMessageBufferList().get(i);\n    MessageExt messageExt=MessageDecoder.decode(buffer);\n    Assert.assertEquals(i,messageExt.getQueueOffset());\n    Assert.assertEquals(results.get(i).getAppendMessageResult().getMsgId(),messageExt.getMsgId());\n    Assert.assertEquals(results.get(i).getAppendMessageResult().getWroteOffset(),messageExt.getCommitLogOffset());\n  }\n  messageStore.destroy();\n  messageStore.shutdown();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 298,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 137,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertEquals(PutMessageStatus.PUT_OK,putMessageResult.getPutMessageStatus());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "org.apache.rocketmq.store.PutMessageStatus"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 137,
    "startColumnNumber" : 32,
    "endLineNumber" : 137,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}