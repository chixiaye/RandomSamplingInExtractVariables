{
  "id" : 30,
  "expression" : "\"after animation is cancelled, item should not be in \" + \"mMoveAnimations list\"",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/androidx/recyclerview/widget/DefaultItemAnimator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"after animation is cancelled, item should not be in \" + \"mMoveAnimations list\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 99,
      "startLineNumber" : 553,
      "startColumnNumber" : 44,
      "endLineNumber" : 554,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 553,
        "startColumnNumber" : 18,
        "endLineNumber" : 554,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mMoveAnimations list\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 553,
        "startColumnNumber" : 12,
        "endLineNumber" : 554,
        "endColumnNumber" : 46
      },
      "nodeContext" : "throw new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mMoveAnimations list\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 552,
        "startColumnNumber" : 69,
        "endLineNumber" : 555,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mMoveAnimations list\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 552,
        "startColumnNumber" : 8,
        "endLineNumber" : 555,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mMoveAnimations.remove(item) && BuildVars.DEBUG_VERSION) {\n  throw new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mMoveAnimations list\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3635,
        "startLineNumber" : 470,
        "startColumnNumber" : 59,
        "endLineNumber" : 557,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final View view=item.itemView;\n  view.animate().cancel();\n  for (int i=mPendingMoves.size() - 1; i >= 0; i--) {\n    MoveInfo moveInfo=mPendingMoves.get(i);\n    if (moveInfo.holder == item) {\n      view.setTranslationY(0);\n      view.setTranslationX(0);\n      dispatchMoveFinished(item);\n      mPendingMoves.remove(i);\n    }\n  }\n  endChangeAnimation(mPendingChanges,item);\n  if (mPendingRemovals.remove(item)) {\n    view.setAlpha(1);\n    view.setScaleX(1f);\n    view.setScaleY(1f);\n    dispatchRemoveFinished(item);\n  }\n  if (mPendingAdditions.remove(item)) {\n    view.setAlpha(1);\n    view.setScaleX(1f);\n    view.setScaleY(1f);\n    dispatchAddFinished(item);\n  }\n  for (int i=mChangesList.size() - 1; i >= 0; i--) {\n    ArrayList<ChangeInfo> changes=mChangesList.get(i);\n    endChangeAnimation(changes,item);\n    if (changes.isEmpty()) {\n      mChangesList.remove(i);\n    }\n  }\n  for (int i=mMovesList.size() - 1; i >= 0; i--) {\n    ArrayList<MoveInfo> moves=mMovesList.get(i);\n    for (int j=moves.size() - 1; j >= 0; j--) {\n      MoveInfo moveInfo=moves.get(j);\n      if (moveInfo.holder == item) {\n        view.setTranslationY(0);\n        view.setTranslationX(0);\n        dispatchMoveFinished(item);\n        moves.remove(j);\n        if (moves.isEmpty()) {\n          mMovesList.remove(i);\n        }\n        break;\n      }\n    }\n  }\n  for (int i=mAdditionsList.size() - 1; i >= 0; i--) {\n    ArrayList<RecyclerView.ViewHolder> additions=mAdditionsList.get(i);\n    if (additions.remove(item)) {\n      view.setAlpha(1);\n      dispatchAddFinished(item);\n      if (additions.isEmpty()) {\n        mAdditionsList.remove(i);\n      }\n    }\n  }\n  if (mRemoveAnimations.remove(item) && BuildVars.DEBUG_VERSION) {\n    throw new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mRemoveAnimations list\");\n  }\n  if (mAddAnimations.remove(item) && BuildVars.DEBUG_VERSION) {\n    throw new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mAddAnimations list\");\n  }\n  if (mChangeAnimations.remove(item) && BuildVars.DEBUG_VERSION) {\n    throw new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mChangeAnimations list\");\n  }\n  if (mMoveAnimations.remove(item) && BuildVars.DEBUG_VERSION) {\n    throw new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mMoveAnimations list\");\n  }\n  dispatchFinishedWhenDone();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 381,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3704,
        "startLineNumber" : 469,
        "startColumnNumber" : 4,
        "endLineNumber" : 557,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void endAnimation(RecyclerView.ViewHolder item){\n  final View view=item.itemView;\n  view.animate().cancel();\n  for (int i=mPendingMoves.size() - 1; i >= 0; i--) {\n    MoveInfo moveInfo=mPendingMoves.get(i);\n    if (moveInfo.holder == item) {\n      view.setTranslationY(0);\n      view.setTranslationX(0);\n      dispatchMoveFinished(item);\n      mPendingMoves.remove(i);\n    }\n  }\n  endChangeAnimation(mPendingChanges,item);\n  if (mPendingRemovals.remove(item)) {\n    view.setAlpha(1);\n    view.setScaleX(1f);\n    view.setScaleY(1f);\n    dispatchRemoveFinished(item);\n  }\n  if (mPendingAdditions.remove(item)) {\n    view.setAlpha(1);\n    view.setScaleX(1f);\n    view.setScaleY(1f);\n    dispatchAddFinished(item);\n  }\n  for (int i=mChangesList.size() - 1; i >= 0; i--) {\n    ArrayList<ChangeInfo> changes=mChangesList.get(i);\n    endChangeAnimation(changes,item);\n    if (changes.isEmpty()) {\n      mChangesList.remove(i);\n    }\n  }\n  for (int i=mMovesList.size() - 1; i >= 0; i--) {\n    ArrayList<MoveInfo> moves=mMovesList.get(i);\n    for (int j=moves.size() - 1; j >= 0; j--) {\n      MoveInfo moveInfo=moves.get(j);\n      if (moveInfo.holder == item) {\n        view.setTranslationY(0);\n        view.setTranslationX(0);\n        dispatchMoveFinished(item);\n        moves.remove(j);\n        if (moves.isEmpty()) {\n          mMovesList.remove(i);\n        }\n        break;\n      }\n    }\n  }\n  for (int i=mAdditionsList.size() - 1; i >= 0; i--) {\n    ArrayList<RecyclerView.ViewHolder> additions=mAdditionsList.get(i);\n    if (additions.remove(item)) {\n      view.setAlpha(1);\n      dispatchAddFinished(item);\n      if (additions.isEmpty()) {\n        mAdditionsList.remove(i);\n      }\n    }\n  }\n  if (mRemoveAnimations.remove(item) && BuildVars.DEBUG_VERSION) {\n    throw new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mRemoveAnimations list\");\n  }\n  if (mAddAnimations.remove(item) && BuildVars.DEBUG_VERSION) {\n    throw new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mAddAnimations list\");\n  }\n  if (mChangeAnimations.remove(item) && BuildVars.DEBUG_VERSION) {\n    throw new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mChangeAnimations list\");\n  }\n  if (mMoveAnimations.remove(item) && BuildVars.DEBUG_VERSION) {\n    throw new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mMoveAnimations list\");\n  }\n  dispatchFinishedWhenDone();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 393,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 553,
        "startColumnNumber" : 12,
        "endLineNumber" : 554,
        "endColumnNumber" : 46
      },
      "nodeContext" : "throw new IllegalStateException(\"after animation is cancelled, item should not be in \" + \"mMoveAnimations list\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 12,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 99,
    "startLineNumber" : 553,
    "startColumnNumber" : 44,
    "endLineNumber" : 554,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}