{
  "id" : 66,
  "expression" : "Assert",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/test/java/cn/hutool/core/bean/OptionalBeanTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 16,
      "startColumnNumber" : 8,
      "endLineNumber" : 16,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Assert.assertNull(value1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Assert.assertNull(value1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 10,
        "startColumnNumber" : 32,
        "endLineNumber" : 34,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  User user=new User();\n  user.setName(\"hello\");\n  String value1=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).get();\n  Assert.assertNull(value1);\n  boolean present=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).isPresent();\n  Assert.assertFalse(present);\n  String value2=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElse(\"没得地址\");\n  Assert.assertEquals(value2,\"没得地址\");\n  try {\n    OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElseThrow(() -> new RuntimeException(\"空指针了\"));\n  }\n catch (  Exception e) {\n    Assert.assertEquals(e.getMessage(),\"空指针了\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 9,
        "startColumnNumber" : 1,
        "endLineNumber" : 34,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void optionalBeanTest(){\n  User user=new User();\n  user.setName(\"hello\");\n  String value1=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).get();\n  Assert.assertNull(value1);\n  boolean present=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).isPresent();\n  Assert.assertFalse(present);\n  String value2=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElse(\"没得地址\");\n  Assert.assertEquals(value2,\"没得地址\");\n  try {\n    OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElseThrow(() -> new RuntimeException(\"空指针了\"));\n  }\n catch (  Exception e) {\n    Assert.assertEquals(e.getMessage(),\"空指针了\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Assert.assertNull(value1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 21,
      "startColumnNumber" : 2,
      "endLineNumber" : 21,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 21,
        "startColumnNumber" : 2,
        "endLineNumber" : 21,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Assert.assertFalse(present)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 21,
        "startColumnNumber" : 2,
        "endLineNumber" : 21,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Assert.assertFalse(present);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 10,
        "startColumnNumber" : 32,
        "endLineNumber" : 34,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  User user=new User();\n  user.setName(\"hello\");\n  String value1=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).get();\n  Assert.assertNull(value1);\n  boolean present=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).isPresent();\n  Assert.assertFalse(present);\n  String value2=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElse(\"没得地址\");\n  Assert.assertEquals(value2,\"没得地址\");\n  try {\n    OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElseThrow(() -> new RuntimeException(\"空指针了\"));\n  }\n catch (  Exception e) {\n    Assert.assertEquals(e.getMessage(),\"空指针了\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 9,
        "startColumnNumber" : 1,
        "endLineNumber" : 34,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void optionalBeanTest(){\n  User user=new User();\n  user.setName(\"hello\");\n  String value1=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).get();\n  Assert.assertNull(value1);\n  boolean present=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).isPresent();\n  Assert.assertFalse(present);\n  String value2=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElse(\"没得地址\");\n  Assert.assertEquals(value2,\"没得地址\");\n  try {\n    OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElseThrow(() -> new RuntimeException(\"空指针了\"));\n  }\n catch (  Exception e) {\n    Assert.assertEquals(e.getMessage(),\"空指针了\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 21,
        "startColumnNumber" : 2,
        "endLineNumber" : 21,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Assert.assertFalse(present);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 26,
      "startColumnNumber" : 2,
      "endLineNumber" : 26,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 26,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Assert.assertEquals(value2,\"没得地址\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 26,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Assert.assertEquals(value2,\"没得地址\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 10,
        "startColumnNumber" : 32,
        "endLineNumber" : 34,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  User user=new User();\n  user.setName(\"hello\");\n  String value1=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).get();\n  Assert.assertNull(value1);\n  boolean present=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).isPresent();\n  Assert.assertFalse(present);\n  String value2=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElse(\"没得地址\");\n  Assert.assertEquals(value2,\"没得地址\");\n  try {\n    OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElseThrow(() -> new RuntimeException(\"空指针了\"));\n  }\n catch (  Exception e) {\n    Assert.assertEquals(e.getMessage(),\"空指针了\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 9,
        "startColumnNumber" : 1,
        "endLineNumber" : 34,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void optionalBeanTest(){\n  User user=new User();\n  user.setName(\"hello\");\n  String value1=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).get();\n  Assert.assertNull(value1);\n  boolean present=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).isPresent();\n  Assert.assertFalse(present);\n  String value2=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElse(\"没得地址\");\n  Assert.assertEquals(value2,\"没得地址\");\n  try {\n    OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElseThrow(() -> new RuntimeException(\"空指针了\"));\n  }\n catch (  Exception e) {\n    Assert.assertEquals(e.getMessage(),\"空指针了\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 26,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Assert.assertEquals(value2,\"没得地址\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 32,
      "startColumnNumber" : 3,
      "endLineNumber" : 32,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 32,
        "startColumnNumber" : 3,
        "endLineNumber" : 32,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Assert.assertEquals(e.getMessage(),\"空指针了\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 32,
        "startColumnNumber" : 3,
        "endLineNumber" : 32,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Assert.assertEquals(e.getMessage(),\"空指针了\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 31,
        "startColumnNumber" : 24,
        "endLineNumber" : 33,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Assert.assertEquals(e.getMessage(),\"空指针了\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 3
      },
      "nodeContext" : "catch (Exception e) {\n  Assert.assertEquals(e.getMessage(),\"空指针了\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 33,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElseThrow(() -> new RuntimeException(\"空指针了\"));\n}\n catch (Exception e) {\n  Assert.assertEquals(e.getMessage(),\"空指针了\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 10,
        "startColumnNumber" : 32,
        "endLineNumber" : 34,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  User user=new User();\n  user.setName(\"hello\");\n  String value1=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).get();\n  Assert.assertNull(value1);\n  boolean present=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).isPresent();\n  Assert.assertFalse(present);\n  String value2=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElse(\"没得地址\");\n  Assert.assertEquals(value2,\"没得地址\");\n  try {\n    OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElseThrow(() -> new RuntimeException(\"空指针了\"));\n  }\n catch (  Exception e) {\n    Assert.assertEquals(e.getMessage(),\"空指针了\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 9,
        "startColumnNumber" : 1,
        "endLineNumber" : 34,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void optionalBeanTest(){\n  User user=new User();\n  user.setName(\"hello\");\n  String value1=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).get();\n  Assert.assertNull(value1);\n  boolean present=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).isPresent();\n  Assert.assertFalse(present);\n  String value2=OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElse(\"没得地址\");\n  Assert.assertEquals(value2,\"没得地址\");\n  try {\n    OptionalBean.ofNullable(user).getBean(User::getSchool).getBean(User.School::getAddress).orElseThrow(() -> new RuntimeException(\"空指针了\"));\n  }\n catch (  Exception e) {\n    Assert.assertEquals(e.getMessage(),\"空指针了\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 32,
        "startColumnNumber" : 3,
        "endLineNumber" : 32,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Assert.assertEquals(e.getMessage(),\"空指针了\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 16,
    "startColumnNumber" : 8,
    "endLineNumber" : 16,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 21,
    "startColumnNumber" : 2,
    "endLineNumber" : 21,
    "endColumnNumber" : 8
  }, {
    "charLength" : 6,
    "startLineNumber" : 26,
    "startColumnNumber" : 2,
    "endLineNumber" : 26,
    "endColumnNumber" : 8
  }, {
    "charLength" : 6,
    "startLineNumber" : 32,
    "startColumnNumber" : 3,
    "endLineNumber" : 32,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  } ]
}