{
  "id" : 359,
  "expression" : "aNew.get(j) % mNew.get(i)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/math/ChineseRemainderTheorem.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "aNew.get(j) % mNew.get(i)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 86,
      "startColumnNumber" : 17,
      "endLineNumber" : 86,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 86,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 43
      },
      "nodeContext" : "(aNew.get(j) % mNew.get(i))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 86,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(aNew.get(j) % mNew.get(i)) == aNew.get(i)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 31
      },
      "nodeContext" : "if ((aNew.get(j) % mNew.get(i)) == aNew.get(i)) {\n  aNew.remove(i);\n  mNew.remove(i);\n  i--;\n  break;\n}\n else return null;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 85,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  if ((aNew.get(j) % mNew.get(i)) == aNew.get(i)) {\n    aNew.remove(i);\n    mNew.remove(i);\n    i--;\n    break;\n  }\n else   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 78,
        "startColumnNumber" : 10,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (mNew.get(i) > mNew.get(j)) {\n  if ((aNew.get(i) % mNew.get(j)) == aNew.get(j)) {\n    aNew.remove(j);\n    mNew.remove(j);\n    j--;\n    continue;\n  }\n else   return null;\n}\n else {\n  if ((aNew.get(j) % mNew.get(i)) == aNew.get(i)) {\n    aNew.remove(i);\n    mNew.remove(i);\n    i--;\n    break;\n  }\n else   return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 77,
        "startColumnNumber" : 78,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (mNew.get(i) > mNew.get(j)) {\n    if ((aNew.get(i) % mNew.get(j)) == aNew.get(j)) {\n      aNew.remove(j);\n      mNew.remove(j);\n      j--;\n      continue;\n    }\n else     return null;\n  }\n else {\n    if ((aNew.get(j) % mNew.get(i)) == aNew.get(i)) {\n      aNew.remove(i);\n      mNew.remove(i);\n      i--;\n      break;\n    }\n else     return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 546,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mNew.get(i) % mNew.get(j) == 0 || mNew.get(j) % mNew.get(i) == 0) {\n  if (mNew.get(i) > mNew.get(j)) {\n    if ((aNew.get(i) % mNew.get(j)) == aNew.get(j)) {\n      aNew.remove(j);\n      mNew.remove(j);\n      j--;\n      continue;\n    }\n else     return null;\n  }\n else {\n    if ((aNew.get(j) % mNew.get(i)) == aNew.get(i)) {\n      aNew.remove(i);\n      mNew.remove(i);\n      i--;\n      break;\n    }\n else     return null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 103,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 76,
        "startColumnNumber" : 48,
        "endLineNumber" : 94,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (mNew.get(i) % mNew.get(j) == 0 || mNew.get(j) % mNew.get(i) == 0) {\n    if (mNew.get(i) > mNew.get(j)) {\n      if ((aNew.get(i) % mNew.get(j)) == aNew.get(j)) {\n        aNew.remove(j);\n        mNew.remove(j);\n        j--;\n        continue;\n      }\n else       return null;\n    }\n else {\n      if ((aNew.get(j) % mNew.get(i)) == aNew.get(i)) {\n        aNew.remove(i);\n        mNew.remove(i);\n        i--;\n        break;\n      }\n else       return null;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 606,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int j=i + 1; j < aNew.size(); j++) {\n  if (mNew.get(i) % mNew.get(j) == 0 || mNew.get(j) % mNew.get(i) == 0) {\n    if (mNew.get(i) > mNew.get(j)) {\n      if ((aNew.get(i) % mNew.get(j)) == aNew.get(j)) {\n        aNew.remove(j);\n        mNew.remove(j);\n        j--;\n        continue;\n      }\n else       return null;\n    }\n else {\n      if ((aNew.get(j) % mNew.get(i)) == aNew.get(i)) {\n        aNew.remove(i);\n        mNew.remove(i);\n        i--;\n        break;\n      }\n else       return null;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 119,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 75,
        "startColumnNumber" : 42,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int j=i + 1; j < aNew.size(); j++) {\n    if (mNew.get(i) % mNew.get(j) == 0 || mNew.get(j) % mNew.get(i) == 0) {\n      if (mNew.get(i) > mNew.get(j)) {\n        if ((aNew.get(i) % mNew.get(j)) == aNew.get(j)) {\n          aNew.remove(j);\n          mNew.remove(j);\n          j--;\n          continue;\n        }\n else         return null;\n      }\n else {\n        if ((aNew.get(j) % mNew.get(i)) == aNew.get(i)) {\n          aNew.remove(i);\n          mNew.remove(i);\n          i--;\n          break;\n        }\n else         return null;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 658,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < aNew.size(); i++) {\n  for (int j=i + 1; j < aNew.size(); j++) {\n    if (mNew.get(i) % mNew.get(j) == 0 || mNew.get(j) % mNew.get(i) == 0) {\n      if (mNew.get(i) > mNew.get(j)) {\n        if ((aNew.get(i) % mNew.get(j)) == aNew.get(j)) {\n          aNew.remove(j);\n          mNew.remove(j);\n          j--;\n          continue;\n        }\n else         return null;\n      }\n else {\n        if ((aNew.get(j) % mNew.get(i)) == aNew.get(i)) {\n          aNew.remove(i);\n          mNew.remove(i);\n          i--;\n          break;\n        }\n else         return null;\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 133,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1664,
        "startLineNumber" : 47,
        "startColumnNumber" : 52,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Long> aNew=new ArrayList<Long>();\n  List<Long> mNew=new ArrayList<Long>();\n  for (int i=0; i < a.length; i++) {\n    List<Long> factors=primeFactorization(m[i]);\n    Collections.sort(factors);\n    ListIterator<Long> iterator=factors.listIterator();\n    while (iterator.hasNext()) {\n      long val=iterator.next();\n      long total=val;\n      while (iterator.hasNext()) {\n        long nextVal=iterator.next();\n        if (nextVal == val) {\n          total*=val;\n        }\n else {\n          iterator.previous();\n          break;\n        }\n      }\n      aNew.add(a[i] % total);\n      mNew.add(total);\n    }\n  }\n  for (int i=0; i < aNew.size(); i++) {\n    for (int j=i + 1; j < aNew.size(); j++) {\n      if (mNew.get(i) % mNew.get(j) == 0 || mNew.get(j) % mNew.get(i) == 0) {\n        if (mNew.get(i) > mNew.get(j)) {\n          if ((aNew.get(i) % mNew.get(j)) == aNew.get(j)) {\n            aNew.remove(j);\n            mNew.remove(j);\n            j--;\n            continue;\n          }\n else           return null;\n        }\n else {\n          if ((aNew.get(j) % mNew.get(i)) == aNew.get(i)) {\n            aNew.remove(i);\n            mNew.remove(i);\n            i--;\n            break;\n          }\n else           return null;\n        }\n      }\n    }\n  }\n  long[][] res=new long[2][aNew.size()];\n  for (int i=0; i < aNew.size(); i++) {\n    res[0][i]=aNew.get(i);\n    res[1][i]=mNew.get(i);\n  }\n  return res;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 317,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1714,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static long[][] reduce(long[] a,long[] m){\n  List<Long> aNew=new ArrayList<Long>();\n  List<Long> mNew=new ArrayList<Long>();\n  for (int i=0; i < a.length; i++) {\n    List<Long> factors=primeFactorization(m[i]);\n    Collections.sort(factors);\n    ListIterator<Long> iterator=factors.listIterator();\n    while (iterator.hasNext()) {\n      long val=iterator.next();\n      long total=val;\n      while (iterator.hasNext()) {\n        long nextVal=iterator.next();\n        if (nextVal == val) {\n          total*=val;\n        }\n else {\n          iterator.previous();\n          break;\n        }\n      }\n      aNew.add(a[i] % total);\n      mNew.add(total);\n    }\n  }\n  for (int i=0; i < aNew.size(); i++) {\n    for (int j=i + 1; j < aNew.size(); j++) {\n      if (mNew.get(i) % mNew.get(j) == 0 || mNew.get(j) % mNew.get(i) == 0) {\n        if (mNew.get(i) > mNew.get(j)) {\n          if ((aNew.get(i) % mNew.get(j)) == aNew.get(j)) {\n            aNew.remove(j);\n            mNew.remove(j);\n            j--;\n            continue;\n          }\n else           return null;\n        }\n else {\n          if ((aNew.get(j) % mNew.get(i)) == aNew.get(i)) {\n            aNew.remove(i);\n            mNew.remove(i);\n            i--;\n            break;\n          }\n else           return null;\n        }\n      }\n    }\n  }\n  long[][] res=new long[2][aNew.size()];\n  for (int i=0; i < aNew.size(); i++) {\n    res[0][i]=aNew.get(i);\n    res[1][i]=mNew.get(i);\n  }\n  return res;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 335,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 86,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(aNew.get(j) % mNew.get(i)) == aNew.get(i)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 86,
    "startColumnNumber" : 17,
    "endLineNumber" : 86,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}