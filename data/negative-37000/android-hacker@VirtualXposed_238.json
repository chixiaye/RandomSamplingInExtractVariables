{
  "id" : 238,
  "expression" : "MethodProxy.class",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/client/hook/base/MethodInvocationProxy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MethodProxy.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 52,
      "startColumnNumber" : 27,
      "endLineNumber" : 52,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 52,
        "startColumnNumber" : 27,
        "endLineNumber" : 52,
        "endColumnNumber" : 73
      },
      "nodeContext" : "MethodProxy.class.isAssignableFrom(innerClass)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 51,
        "startColumnNumber" : 20,
        "endLineNumber" : 53,
        "endColumnNumber" : 77
      },
      "nodeContext" : "!Modifier.isAbstract(innerClass.getModifiers()) && MethodProxy.class.isAssignableFrom(innerClass) && innerClass.getAnnotation(SkipInject.class) == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!Modifier.isAbstract(innerClass.getModifiers()) && MethodProxy.class.isAssignableFrom(innerClass) && innerClass.getAnnotation(SkipInject.class) == null) {\n  addMethodProxy(innerClass);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 50,
        "startColumnNumber" : 53,
        "endLineNumber" : 56,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!Modifier.isAbstract(innerClass.getModifiers()) && MethodProxy.class.isAssignableFrom(innerClass) && innerClass.getAnnotation(SkipInject.class) == null) {\n    addMethodProxy(innerClass);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Class<?> innerClass : innerClasses) {\n  if (!Modifier.isAbstract(innerClass.getModifiers()) && MethodProxy.class.isAssignableFrom(innerClass) && innerClass.getAnnotation(SkipInject.class) == null) {\n    addMethodProxy(innerClass);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 47,
        "startColumnNumber" : 28,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Class<?> proxiesClass=inject.value();\n  Class<?>[] innerClasses=proxiesClass.getDeclaredClasses();\n  for (  Class<?> innerClass : innerClasses) {\n    if (!Modifier.isAbstract(innerClass.getModifiers()) && MethodProxy.class.isAssignableFrom(innerClass) && innerClass.getAnnotation(SkipInject.class) == null) {\n      addMethodProxy(innerClass);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 515,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (inject != null) {\n  Class<?> proxiesClass=inject.value();\n  Class<?>[] innerClasses=proxiesClass.getDeclaredClasses();\n  for (  Class<?> innerClass : innerClasses) {\n    if (!Modifier.isAbstract(innerClass.getModifiers()) && MethodProxy.class.isAssignableFrom(innerClass) && innerClass.getAnnotation(SkipInject.class) == null) {\n      addMethodProxy(innerClass);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 40,
        "startColumnNumber" : 35,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mInvocationStub == null) {\n    return;\n  }\n  Class<? extends MethodInvocationProxy> clazz=getClass();\n  Inject inject=clazz.getAnnotation(Inject.class);\n  if (inject != null) {\n    Class<?> proxiesClass=inject.value();\n    Class<?>[] innerClasses=proxiesClass.getDeclaredClasses();\n    for (    Class<?> innerClass : innerClasses) {\n      if (!Modifier.isAbstract(innerClass.getModifiers()) && MethodProxy.class.isAssignableFrom(innerClass) && innerClass.getAnnotation(SkipInject.class) == null) {\n        addMethodProxy(innerClass);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 758,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void onBindMethods(){\n  if (mInvocationStub == null) {\n    return;\n  }\n  Class<? extends MethodInvocationProxy> clazz=getClass();\n  Inject inject=clazz.getAnnotation(Inject.class);\n  if (inject != null) {\n    Class<?> proxiesClass=inject.value();\n    Class<?>[] innerClasses=proxiesClass.getDeclaredClasses();\n    for (    Class<?> innerClass : innerClasses) {\n      if (!Modifier.isAbstract(innerClass.getModifiers()) && MethodProxy.class.isAssignableFrom(innerClass) && innerClass.getAnnotation(SkipInject.class) == null) {\n        addMethodProxy(innerClass);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 52,
        "startColumnNumber" : 27,
        "endLineNumber" : 52,
        "endColumnNumber" : 73
      },
      "nodeContext" : "MethodProxy.class.isAssignableFrom(innerClass)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<com.lody.virtual.client.hook.base.MethodProxy>"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 52,
    "startColumnNumber" : 27,
    "endLineNumber" : 52,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}