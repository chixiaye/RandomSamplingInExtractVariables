{
  "id" : 386,
  "expression" : "index == -1",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/core/deployment/src/main/java/io/quarkus/deployment/console/AeshConsole.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "index == -1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 429,
      "startColumnNumber" : 20,
      "endLineNumber" : 429,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 429,
        "startColumnNumber" : 16,
        "endLineNumber" : 433,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (index == -1) {\n  trailing=stripped.length();\n}\n else {\n  trailing=stripped.length() - index - 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 422,
        "startColumnNumber" : 19,
        "endLineNumber" : 477,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  clearStatusMessages(buffer);\n  int cursorPos=lastWriteCursorX;\n  String stripped=stripAnsiCodes(s);\n  int lines=countLines(s,cursorPos);\n  int trailing=0;\n  int index=stripped.lastIndexOf(\"\\n\");\n  if (index == -1) {\n    trailing=stripped.length();\n  }\n else {\n    trailing=stripped.length() - index - 1;\n  }\n  int newCursorPos;\n  if (lines == 0) {\n    newCursorPos=trailing + cursorPos;\n  }\n else {\n    newCursorPos=trailing;\n  }\n  int usedBlankSpace=0;\n  if (cursorPos > 1 && lines == 0) {\n    gotoCoords(buffer,size.getHeight() - bottomBlankSpace - totalStatusLines- 1,cursorPos + 1);\n    buffer.append(s);\n    lastWriteCursorX=newCursorPos;\n    writeQueue.add(buffer.toString());\n  }\n else {\n    gotoLine(buffer,size.getHeight());\n    if (lines == 0) {\n      lines++;\n    }\n    int originalBlank=bottomBlankSpace;\n    if (bottomBlankSpace > 0) {\n      usedBlankSpace=Math.min(bottomBlankSpace,lines);\n      bottomBlankSpace-=usedBlankSpace;\n    }\n    int appendLines=Math.max(Math.min(cursorPos > 1 ? lines - 1 : lines,totalStatusLines + 1),1);\n    appendLines-=usedBlankSpace;\n    clearStatusMessages(buffer);\n    buffer.append(\"\\033[\").append(size.getHeight() - totalStatusLines - originalBlank- (cursorPos > 0 ? 1 : 0)).append(\";\").append(cursorPos + 1).append(\"H\");\n    buffer.append(s);\n    buffer.append(\"\\033[\").append(size.getHeight()).append(\";\").append(0).append(\"H\");\n    for (int i=0; i < appendLines; ++i) {\n      buffer.append(\"\\n\");\n    }\n    lastWriteCursorX=newCursorPos;\n    printStatusAndPrompt(buffer);\n    writeQueue.add(buffer.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2877,
        "startLineNumber" : 419,
        "startColumnNumber" : 12,
        "endLineNumber" : 477,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (totalStatusLines == 0) {\n  bottomBlankSpace=0;\n  writeQueue.add(s);\n}\n else {\n  clearStatusMessages(buffer);\n  int cursorPos=lastWriteCursorX;\n  String stripped=stripAnsiCodes(s);\n  int lines=countLines(s,cursorPos);\n  int trailing=0;\n  int index=stripped.lastIndexOf(\"\\n\");\n  if (index == -1) {\n    trailing=stripped.length();\n  }\n else {\n    trailing=stripped.length() - index - 1;\n  }\n  int newCursorPos;\n  if (lines == 0) {\n    newCursorPos=trailing + cursorPos;\n  }\n else {\n    newCursorPos=trailing;\n  }\n  int usedBlankSpace=0;\n  if (cursorPos > 1 && lines == 0) {\n    gotoCoords(buffer,size.getHeight() - bottomBlankSpace - totalStatusLines- 1,cursorPos + 1);\n    buffer.append(s);\n    lastWriteCursorX=newCursorPos;\n    writeQueue.add(buffer.toString());\n  }\n else {\n    gotoLine(buffer,size.getHeight());\n    if (lines == 0) {\n      lines++;\n    }\n    int originalBlank=bottomBlankSpace;\n    if (bottomBlankSpace > 0) {\n      usedBlankSpace=Math.min(bottomBlankSpace,lines);\n      bottomBlankSpace-=usedBlankSpace;\n    }\n    int appendLines=Math.max(Math.min(cursorPos > 1 ? lines - 1 : lines,totalStatusLines + 1),1);\n    appendLines-=usedBlankSpace;\n    clearStatusMessages(buffer);\n    buffer.append(\"\\033[\").append(size.getHeight() - totalStatusLines - originalBlank- (cursorPos > 0 ? 1 : 0)).append(\";\").append(cursorPos + 1).append(\"H\");\n    buffer.append(s);\n    buffer.append(\"\\033[\").append(size.getHeight()).append(\";\").append(0).append(\"H\");\n    for (int i=0; i < appendLines; ++i) {\n      buffer.append(\"\\n\");\n    }\n    lastWriteCursorX=newCursorPos;\n    printStatusAndPrompt(buffer);\n    writeQueue.add(buffer.toString());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 294,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 2901,
        "startLineNumber" : 418,
        "startColumnNumber" : 28,
        "endLineNumber" : 478,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (totalStatusLines == 0) {\n    bottomBlankSpace=0;\n    writeQueue.add(s);\n  }\n else {\n    clearStatusMessages(buffer);\n    int cursorPos=lastWriteCursorX;\n    String stripped=stripAnsiCodes(s);\n    int lines=countLines(s,cursorPos);\n    int trailing=0;\n    int index=stripped.lastIndexOf(\"\\n\");\n    if (index == -1) {\n      trailing=stripped.length();\n    }\n else {\n      trailing=stripped.length() - index - 1;\n    }\n    int newCursorPos;\n    if (lines == 0) {\n      newCursorPos=trailing + cursorPos;\n    }\n else {\n      newCursorPos=trailing;\n    }\n    int usedBlankSpace=0;\n    if (cursorPos > 1 && lines == 0) {\n      gotoCoords(buffer,size.getHeight() - bottomBlankSpace - totalStatusLines- 1,cursorPos + 1);\n      buffer.append(s);\n      lastWriteCursorX=newCursorPos;\n      writeQueue.add(buffer.toString());\n    }\n else {\n      gotoLine(buffer,size.getHeight());\n      if (lines == 0) {\n        lines++;\n      }\n      int originalBlank=bottomBlankSpace;\n      if (bottomBlankSpace > 0) {\n        usedBlankSpace=Math.min(bottomBlankSpace,lines);\n        bottomBlankSpace-=usedBlankSpace;\n      }\n      int appendLines=Math.max(Math.min(cursorPos > 1 ? lines - 1 : lines,totalStatusLines + 1),1);\n      appendLines-=usedBlankSpace;\n      clearStatusMessages(buffer);\n      buffer.append(\"\\033[\").append(size.getHeight() - totalStatusLines - originalBlank- (cursorPos > 0 ? 1 : 0)).append(\";\").append(cursorPos + 1).append(\"H\");\n      buffer.append(s);\n      buffer.append(\"\\033[\").append(size.getHeight()).append(\";\").append(0).append(\"H\");\n      for (int i=0; i < appendLines; ++i) {\n        buffer.append(\"\\n\");\n      }\n      lastWriteCursorX=newCursorPos;\n      printStatusAndPrompt(buffer);\n      writeQueue.add(buffer.toString());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 295,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2921,
        "startLineNumber" : 418,
        "startColumnNumber" : 8,
        "endLineNumber" : 478,
        "endColumnNumber" : 9
      },
      "nodeContext" : "synchronized (this) {\n  if (totalStatusLines == 0) {\n    bottomBlankSpace=0;\n    writeQueue.add(s);\n  }\n else {\n    clearStatusMessages(buffer);\n    int cursorPos=lastWriteCursorX;\n    String stripped=stripAnsiCodes(s);\n    int lines=countLines(s,cursorPos);\n    int trailing=0;\n    int index=stripped.lastIndexOf(\"\\n\");\n    if (index == -1) {\n      trailing=stripped.length();\n    }\n else {\n      trailing=stripped.length() - index - 1;\n    }\n    int newCursorPos;\n    if (lines == 0) {\n      newCursorPos=trailing + cursorPos;\n    }\n else {\n      newCursorPos=trailing;\n    }\n    int usedBlankSpace=0;\n    if (cursorPos > 1 && lines == 0) {\n      gotoCoords(buffer,size.getHeight() - bottomBlankSpace - totalStatusLines- 1,cursorPos + 1);\n      buffer.append(s);\n      lastWriteCursorX=newCursorPos;\n      writeQueue.add(buffer.toString());\n    }\n else {\n      gotoLine(buffer,size.getHeight());\n      if (lines == 0) {\n        lines++;\n      }\n      int originalBlank=bottomBlankSpace;\n      if (bottomBlankSpace > 0) {\n        usedBlankSpace=Math.min(bottomBlankSpace,lines);\n        bottomBlankSpace-=usedBlankSpace;\n      }\n      int appendLines=Math.max(Math.min(cursorPos > 1 ? lines - 1 : lines,totalStatusLines + 1),1);\n      appendLines-=usedBlankSpace;\n      clearStatusMessages(buffer);\n      buffer.append(\"\\033[\").append(size.getHeight() - totalStatusLines - originalBlank- (cursorPos > 0 ? 1 : 0)).append(\";\").append(cursorPos + 1).append(\"H\");\n      buffer.append(s);\n      buffer.append(\"\\033[\").append(size.getHeight()).append(\";\").append(0).append(\"H\");\n      for (int i=0; i < appendLines; ++i) {\n        buffer.append(\"\\n\");\n      }\n      lastWriteCursorX=newCursorPos;\n      printStatusAndPrompt(buffer);\n      writeQueue.add(buffer.toString());\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 297,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4019,
        "startLineNumber" : 386,
        "startColumnNumber" : 53,
        "endLineNumber" : 480,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (IN_WRITE.get()) {\n    return;\n  }\n  if (closed) {\n    IN_WRITE.set(true);\n    try {\n      connection.write(s);\n      return;\n    }\n  finally {\n      IN_WRITE.set(false);\n    }\n  }\n  if (lastColorCode != null) {\n    s=lastColorCode + s;\n  }\n  Matcher m=ESCAPE.matcher(s);\n  while (m.find()) {\n    int val=Integer.parseInt(m.group(1));\n    if (val == 0 || (val >= 30 && val <= 39) || (val >= 90 && val <= 97)) {\n      lastColorCode=m.group(0);\n    }\n  }\n  StringBuilder buffer=new StringBuilder();\n  if (!shouldWrite(errorStream,s)) {\n    return;\n  }\nsynchronized (this) {\n    if (totalStatusLines == 0) {\n      bottomBlankSpace=0;\n      writeQueue.add(s);\n    }\n else {\n      clearStatusMessages(buffer);\n      int cursorPos=lastWriteCursorX;\n      String stripped=stripAnsiCodes(s);\n      int lines=countLines(s,cursorPos);\n      int trailing=0;\n      int index=stripped.lastIndexOf(\"\\n\");\n      if (index == -1) {\n        trailing=stripped.length();\n      }\n else {\n        trailing=stripped.length() - index - 1;\n      }\n      int newCursorPos;\n      if (lines == 0) {\n        newCursorPos=trailing + cursorPos;\n      }\n else {\n        newCursorPos=trailing;\n      }\n      int usedBlankSpace=0;\n      if (cursorPos > 1 && lines == 0) {\n        gotoCoords(buffer,size.getHeight() - bottomBlankSpace - totalStatusLines- 1,cursorPos + 1);\n        buffer.append(s);\n        lastWriteCursorX=newCursorPos;\n        writeQueue.add(buffer.toString());\n      }\n else {\n        gotoLine(buffer,size.getHeight());\n        if (lines == 0) {\n          lines++;\n        }\n        int originalBlank=bottomBlankSpace;\n        if (bottomBlankSpace > 0) {\n          usedBlankSpace=Math.min(bottomBlankSpace,lines);\n          bottomBlankSpace-=usedBlankSpace;\n        }\n        int appendLines=Math.max(Math.min(cursorPos > 1 ? lines - 1 : lines,totalStatusLines + 1),1);\n        appendLines-=usedBlankSpace;\n        clearStatusMessages(buffer);\n        buffer.append(\"\\033[\").append(size.getHeight() - totalStatusLines - originalBlank- (cursorPos > 0 ? 1 : 0)).append(\";\").append(cursorPos + 1).append(\"H\");\n        buffer.append(s);\n        buffer.append(\"\\033[\").append(size.getHeight()).append(\";\").append(0).append(\"H\");\n        for (int i=0; i < appendLines; ++i) {\n          buffer.append(\"\\n\");\n        }\n        lastWriteCursorX=newCursorPos;\n        printStatusAndPrompt(buffer);\n        writeQueue.add(buffer.toString());\n      }\n    }\n  }\n  deadlockSafeWrite();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 411,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4068,
        "startLineNumber" : 386,
        "startColumnNumber" : 4,
        "endLineNumber" : 480,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void write(boolean errorStream,String s){\n  if (IN_WRITE.get()) {\n    return;\n  }\n  if (closed) {\n    IN_WRITE.set(true);\n    try {\n      connection.write(s);\n      return;\n    }\n  finally {\n      IN_WRITE.set(false);\n    }\n  }\n  if (lastColorCode != null) {\n    s=lastColorCode + s;\n  }\n  Matcher m=ESCAPE.matcher(s);\n  while (m.find()) {\n    int val=Integer.parseInt(m.group(1));\n    if (val == 0 || (val >= 30 && val <= 39) || (val >= 90 && val <= 97)) {\n      lastColorCode=m.group(0);\n    }\n  }\n  StringBuilder buffer=new StringBuilder();\n  if (!shouldWrite(errorStream,s)) {\n    return;\n  }\nsynchronized (this) {\n    if (totalStatusLines == 0) {\n      bottomBlankSpace=0;\n      writeQueue.add(s);\n    }\n else {\n      clearStatusMessages(buffer);\n      int cursorPos=lastWriteCursorX;\n      String stripped=stripAnsiCodes(s);\n      int lines=countLines(s,cursorPos);\n      int trailing=0;\n      int index=stripped.lastIndexOf(\"\\n\");\n      if (index == -1) {\n        trailing=stripped.length();\n      }\n else {\n        trailing=stripped.length() - index - 1;\n      }\n      int newCursorPos;\n      if (lines == 0) {\n        newCursorPos=trailing + cursorPos;\n      }\n else {\n        newCursorPos=trailing;\n      }\n      int usedBlankSpace=0;\n      if (cursorPos > 1 && lines == 0) {\n        gotoCoords(buffer,size.getHeight() - bottomBlankSpace - totalStatusLines- 1,cursorPos + 1);\n        buffer.append(s);\n        lastWriteCursorX=newCursorPos;\n        writeQueue.add(buffer.toString());\n      }\n else {\n        gotoLine(buffer,size.getHeight());\n        if (lines == 0) {\n          lines++;\n        }\n        int originalBlank=bottomBlankSpace;\n        if (bottomBlankSpace > 0) {\n          usedBlankSpace=Math.min(bottomBlankSpace,lines);\n          bottomBlankSpace-=usedBlankSpace;\n        }\n        int appendLines=Math.max(Math.min(cursorPos > 1 ? lines - 1 : lines,totalStatusLines + 1),1);\n        appendLines-=usedBlankSpace;\n        clearStatusMessages(buffer);\n        buffer.append(\"\\033[\").append(size.getHeight() - totalStatusLines - originalBlank- (cursorPos > 0 ? 1 : 0)).append(\";\").append(cursorPos + 1).append(\"H\");\n        buffer.append(s);\n        buffer.append(\"\\033[\").append(size.getHeight()).append(\";\").append(0).append(\"H\");\n        for (int i=0; i < appendLines; ++i) {\n          buffer.append(\"\\n\");\n        }\n        lastWriteCursorX=newCursorPos;\n        printStatusAndPrompt(buffer);\n        writeQueue.add(buffer.toString());\n      }\n    }\n  }\n  deadlockSafeWrite();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 422,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 429,
        "startColumnNumber" : 16,
        "endLineNumber" : 433,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (index == -1) {\n  trailing=stripped.length();\n}\n else {\n  trailing=stripped.length() - index - 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 429,
    "startColumnNumber" : 20,
    "endLineNumber" : 429,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}