{
  "id" : 349,
  "expression" : "87",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/fluentinterface/src/main/java/com/iluwatar/fluentinterface/app/App.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "87",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 58,
      "startColumnNumber" : 52,
      "endLineNumber" : 58,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 3,
        "startLineNumber" : 58,
        "startColumnNumber" : 51,
        "endLineNumber" : 58,
        "endColumnNumber" : 54
      },
      "nodeContext" : "-87",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 58,
        "startColumnNumber" : 22,
        "endLineNumber" : 58,
        "endColumnNumber" : 96
      },
      "nodeContext" : "List.of(1,-61,14,-22,18,-87,6,64,-82,26,-98,97,45,23,2,-68)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 96
      },
      "nodeContext" : "integerList=List.of(1,-61,14,-22,18,-87,6,64,-82,26,-98,97,45,23,2,-68)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 27,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 97
      },
      "nodeContext" : "var integerList=List.of(1,-61,14,-22,18,-87,6,64,-82,26,-98,97,45,23,2,-68);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 30,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1669,
        "startLineNumber" : 56,
        "startColumnNumber" : 41,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  var integerList=List.of(1,-61,14,-22,18,-87,6,64,-82,26,-98,97,45,23,2,-68);\n  prettyPrint(\"The initial list contains: \",integerList);\n  var firstFiveNegatives=SimpleFluentIterable.fromCopyOf(integerList).filter(negatives()).first(3).asList();\n  prettyPrint(\"The first three negative values are: \",firstFiveNegatives);\n  var lastTwoPositives=SimpleFluentIterable.fromCopyOf(integerList).filter(positives()).last(2).asList();\n  prettyPrint(\"The last two positive values are: \",lastTwoPositives);\n  SimpleFluentIterable.fromCopyOf(integerList).filter(number -> number % 2 == 0).first().ifPresent(evenNumber -> LOGGER.info(\"The first even number is: {}\",evenNumber));\n  var transformedList=SimpleFluentIterable.fromCopyOf(integerList).filter(negatives()).map(transformToString()).asList();\n  prettyPrint(\"A string-mapped list of negative numbers contains: \",transformedList);\n  var lastTwoOfFirstFourStringMapped=LazyFluentIterable.from(integerList).filter(positives()).first(4).last(2).map(number -> \"String[\" + valueOf(number) + \"]\").asList();\n  prettyPrint(\"The lazy list contains the last two of the first four positive numbers \" + \"mapped to Strings: \",lastTwoOfFirstFourStringMapped);\n  LazyFluentIterable.from(integerList).filter(negatives()).first(2).last().ifPresent(number -> LOGGER.info(\"Last amongst first two negatives: {}\",number));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1746,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 108,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Program entry point.\n */\npublic static void main(String[] args){\n  var integerList=List.of(1,-61,14,-22,18,-87,6,64,-82,26,-98,97,45,23,2,-68);\n  prettyPrint(\"The initial list contains: \",integerList);\n  var firstFiveNegatives=SimpleFluentIterable.fromCopyOf(integerList).filter(negatives()).first(3).asList();\n  prettyPrint(\"The first three negative values are: \",firstFiveNegatives);\n  var lastTwoPositives=SimpleFluentIterable.fromCopyOf(integerList).filter(positives()).last(2).asList();\n  prettyPrint(\"The last two positive values are: \",lastTwoPositives);\n  SimpleFluentIterable.fromCopyOf(integerList).filter(number -> number % 2 == 0).first().ifPresent(evenNumber -> LOGGER.info(\"The first even number is: {}\",evenNumber));\n  var transformedList=SimpleFluentIterable.fromCopyOf(integerList).filter(negatives()).map(transformToString()).asList();\n  prettyPrint(\"A string-mapped list of negative numbers contains: \",transformedList);\n  var lastTwoOfFirstFourStringMapped=LazyFluentIterable.from(integerList).filter(positives()).first(4).last(2).map(number -> \"String[\" + valueOf(number) + \"]\").asList();\n  prettyPrint(\"The lazy list contains the last two of the first four positive numbers \" + \"mapped to Strings: \",lastTwoOfFirstFourStringMapped);\n  LazyFluentIterable.from(integerList).filter(negatives()).first(2).last().ifPresent(number -> LOGGER.info(\"Last amongst first two negatives: {}\",number));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 97
      },
      "nodeContext" : "var integerList=List.of(1,-61,14,-22,18,-87,6,64,-82,26,-98,97,45,23,2,-68);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 30,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 58,
    "startColumnNumber" : 52,
    "endLineNumber" : 58,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}