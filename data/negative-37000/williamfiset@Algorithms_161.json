{
  "id" : 161,
  "expression" : "new Edge(1,2,1)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/BellmanFordEdgeList.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Edge(1,2,1)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 78,
      "startColumnNumber" : 15,
      "endLineNumber" : 78,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 32
      },
      "nodeContext" : "edges[1]=new Edge(1,2,1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 33
      },
      "nodeContext" : "edges[1]=new Edge(1,2,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1051,
        "startLineNumber" : 73,
        "startColumnNumber" : 41,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int E=10, V=9, start=0;\n  Edge[] edges=new Edge[E];\n  edges[0]=new Edge(0,1,1);\n  edges[1]=new Edge(1,2,1);\n  edges[2]=new Edge(2,4,1);\n  edges[3]=new Edge(4,3,-3);\n  edges[4]=new Edge(3,2,1);\n  edges[5]=new Edge(1,5,4);\n  edges[6]=new Edge(1,6,4);\n  edges[7]=new Edge(5,6,5);\n  edges[8]=new Edge(6,7,4);\n  edges[9]=new Edge(5,7,3);\n  double[] d=bellmanFord(edges,V,start);\n  for (int i=0; i < V; i++)   System.out.printf(\"The cost to get from node %d to %d is %.2f\\n\",start,i,d[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args){\n  int E=10, V=9, start=0;\n  Edge[] edges=new Edge[E];\n  edges[0]=new Edge(0,1,1);\n  edges[1]=new Edge(1,2,1);\n  edges[2]=new Edge(2,4,1);\n  edges[3]=new Edge(4,3,-3);\n  edges[4]=new Edge(3,2,1);\n  edges[5]=new Edge(1,5,4);\n  edges[6]=new Edge(1,6,4);\n  edges[7]=new Edge(5,6,5);\n  edges[8]=new Edge(6,7,4);\n  edges[9]=new Edge(5,7,3);\n  double[] d=bellmanFord(edges,V,start);\n  for (int i=0; i < V; i++)   System.out.printf(\"The cost to get from node %d to %d is %.2f\\n\",start,i,d[i]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 33
      },
      "nodeContext" : "edges[1]=new Edge(1,2,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "com.williamfiset.algorithms.graphtheory.BellmanFordEdgeList.Edge"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 78,
    "startColumnNumber" : 15,
    "endLineNumber" : 78,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}