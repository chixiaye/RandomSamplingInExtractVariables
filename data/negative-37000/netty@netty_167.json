{
  "id" : 167,
  "expression" : "END_PRIVATE_KEY",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/handler/src/main/java/io/netty/handler/ssl/PemPrivateKey.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "END_PRIVATE_KEY",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 77,
      "startColumnNumber" : 79,
      "endLineNumber" : 77,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 77,
        "startColumnNumber" : 79,
        "endLineNumber" : 77,
        "endColumnNumber" : 101
      },
      "nodeContext" : "END_PRIVATE_KEY.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 77,
        "startColumnNumber" : 27,
        "endLineNumber" : 77,
        "endColumnNumber" : 101
      },
      "nodeContext" : "BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 77,
        "startColumnNumber" : 20,
        "endLineNumber" : 77,
        "endColumnNumber" : 101
      },
      "nodeContext" : "size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 102
      },
      "nodeContext" : "int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n  boolean success=false;\n  final ByteBuf pem=useDirect ? allocator.directBuffer(size) : allocator.buffer(size);\n  try {\n    pem.writeBytes(BEGIN_PRIVATE_KEY);\n    pem.writeBytes(base64);\n    pem.writeBytes(END_PRIVATE_KEY);\n    PemValue value=new PemValue(pem,true);\n    success=true;\n    return value;\n  }\n  finally {\n    if (!success) {\n      SslUtils.zerooutAndRelease(pem);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n  boolean success=false;\n  final ByteBuf pem=useDirect ? allocator.directBuffer(size) : allocator.buffer(size);\n  try {\n    pem.writeBytes(BEGIN_PRIVATE_KEY);\n    pem.writeBytes(base64);\n    pem.writeBytes(END_PRIVATE_KEY);\n    PemValue value=new PemValue(pem,true);\n    success=true;\n    return value;\n  }\n  finally {\n    if (!success) {\n      SslUtils.zerooutAndRelease(pem);\n    }\n  }\n}\n  finally {\n  SslUtils.zerooutAndRelease(base64);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1016,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ByteBuf base64=SslUtils.toBase64(allocator,encoded);\n  try {\n    int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n    boolean success=false;\n    final ByteBuf pem=useDirect ? allocator.directBuffer(size) : allocator.buffer(size);\n    try {\n      pem.writeBytes(BEGIN_PRIVATE_KEY);\n      pem.writeBytes(base64);\n      pem.writeBytes(END_PRIVATE_KEY);\n      PemValue value=new PemValue(pem,true);\n      success=true;\n      return value;\n    }\n  finally {\n      if (!success) {\n        SslUtils.zerooutAndRelease(pem);\n      }\n    }\n  }\n  finally {\n    SslUtils.zerooutAndRelease(base64);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ByteBuf base64=SslUtils.toBase64(allocator,encoded);\n  try {\n    int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n    boolean success=false;\n    final ByteBuf pem=useDirect ? allocator.directBuffer(size) : allocator.buffer(size);\n    try {\n      pem.writeBytes(BEGIN_PRIVATE_KEY);\n      pem.writeBytes(base64);\n      pem.writeBytes(END_PRIVATE_KEY);\n      PemValue value=new PemValue(pem,true);\n      success=true;\n      return value;\n    }\n  finally {\n      if (!success) {\n        SslUtils.zerooutAndRelease(pem);\n      }\n    }\n  }\n  finally {\n    SslUtils.zerooutAndRelease(base64);\n  }\n}\n  finally {\n  SslUtils.zerooutAndRelease(encoded);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1167,
        "startLineNumber" : 72,
        "startColumnNumber" : 89,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ByteBuf encoded=Unpooled.wrappedBuffer(bytes);\n  try {\n    ByteBuf base64=SslUtils.toBase64(allocator,encoded);\n    try {\n      int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n      boolean success=false;\n      final ByteBuf pem=useDirect ? allocator.directBuffer(size) : allocator.buffer(size);\n      try {\n        pem.writeBytes(BEGIN_PRIVATE_KEY);\n        pem.writeBytes(base64);\n        pem.writeBytes(END_PRIVATE_KEY);\n        PemValue value=new PemValue(pem,true);\n        success=true;\n        return value;\n      }\n  finally {\n        if (!success) {\n          SslUtils.zerooutAndRelease(pem);\n        }\n      }\n    }\n  finally {\n      SslUtils.zerooutAndRelease(base64);\n    }\n  }\n  finally {\n    SslUtils.zerooutAndRelease(encoded);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1252,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static PemEncoded toPEM(ByteBufAllocator allocator,boolean useDirect,byte[] bytes){\n  ByteBuf encoded=Unpooled.wrappedBuffer(bytes);\n  try {\n    ByteBuf base64=SslUtils.toBase64(allocator,encoded);\n    try {\n      int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n      boolean success=false;\n      final ByteBuf pem=useDirect ? allocator.directBuffer(size) : allocator.buffer(size);\n      try {\n        pem.writeBytes(BEGIN_PRIVATE_KEY);\n        pem.writeBytes(base64);\n        pem.writeBytes(END_PRIVATE_KEY);\n        PemValue value=new PemValue(pem,true);\n        success=true;\n        return value;\n      }\n  finally {\n        if (!success) {\n          SslUtils.zerooutAndRelease(pem);\n        }\n      }\n    }\n  finally {\n      SslUtils.zerooutAndRelease(base64);\n    }\n  }\n  finally {\n    SslUtils.zerooutAndRelease(encoded);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 102
      },
      "nodeContext" : "int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "byte[]"
  }, {
    "nodeContext" : "END_PRIVATE_KEY",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 84,
      "startColumnNumber" : 35,
      "endLineNumber" : 84,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 84,
        "endColumnNumber" : 51
      },
      "nodeContext" : "pem.writeBytes(END_PRIVATE_KEY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 84,
        "endColumnNumber" : 52
      },
      "nodeContext" : "pem.writeBytes(END_PRIVATE_KEY);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 81,
        "startColumnNumber" : 20,
        "endLineNumber" : 89,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  pem.writeBytes(BEGIN_PRIVATE_KEY);\n  pem.writeBytes(base64);\n  pem.writeBytes(END_PRIVATE_KEY);\n  PemValue value=new PemValue(pem,true);\n  success=true;\n  return value;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 81,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  pem.writeBytes(BEGIN_PRIVATE_KEY);\n  pem.writeBytes(base64);\n  pem.writeBytes(END_PRIVATE_KEY);\n  PemValue value=new PemValue(pem,true);\n  success=true;\n  return value;\n}\n  finally {\n  if (!success) {\n    SslUtils.zerooutAndRelease(pem);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n  boolean success=false;\n  final ByteBuf pem=useDirect ? allocator.directBuffer(size) : allocator.buffer(size);\n  try {\n    pem.writeBytes(BEGIN_PRIVATE_KEY);\n    pem.writeBytes(base64);\n    pem.writeBytes(END_PRIVATE_KEY);\n    PemValue value=new PemValue(pem,true);\n    success=true;\n    return value;\n  }\n  finally {\n    if (!success) {\n      SslUtils.zerooutAndRelease(pem);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n  boolean success=false;\n  final ByteBuf pem=useDirect ? allocator.directBuffer(size) : allocator.buffer(size);\n  try {\n    pem.writeBytes(BEGIN_PRIVATE_KEY);\n    pem.writeBytes(base64);\n    pem.writeBytes(END_PRIVATE_KEY);\n    PemValue value=new PemValue(pem,true);\n    success=true;\n    return value;\n  }\n  finally {\n    if (!success) {\n      SslUtils.zerooutAndRelease(pem);\n    }\n  }\n}\n  finally {\n  SslUtils.zerooutAndRelease(base64);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1016,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ByteBuf base64=SslUtils.toBase64(allocator,encoded);\n  try {\n    int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n    boolean success=false;\n    final ByteBuf pem=useDirect ? allocator.directBuffer(size) : allocator.buffer(size);\n    try {\n      pem.writeBytes(BEGIN_PRIVATE_KEY);\n      pem.writeBytes(base64);\n      pem.writeBytes(END_PRIVATE_KEY);\n      PemValue value=new PemValue(pem,true);\n      success=true;\n      return value;\n    }\n  finally {\n      if (!success) {\n        SslUtils.zerooutAndRelease(pem);\n      }\n    }\n  }\n  finally {\n    SslUtils.zerooutAndRelease(base64);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ByteBuf base64=SslUtils.toBase64(allocator,encoded);\n  try {\n    int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n    boolean success=false;\n    final ByteBuf pem=useDirect ? allocator.directBuffer(size) : allocator.buffer(size);\n    try {\n      pem.writeBytes(BEGIN_PRIVATE_KEY);\n      pem.writeBytes(base64);\n      pem.writeBytes(END_PRIVATE_KEY);\n      PemValue value=new PemValue(pem,true);\n      success=true;\n      return value;\n    }\n  finally {\n      if (!success) {\n        SslUtils.zerooutAndRelease(pem);\n      }\n    }\n  }\n  finally {\n    SslUtils.zerooutAndRelease(base64);\n  }\n}\n  finally {\n  SslUtils.zerooutAndRelease(encoded);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1167,
        "startLineNumber" : 72,
        "startColumnNumber" : 89,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ByteBuf encoded=Unpooled.wrappedBuffer(bytes);\n  try {\n    ByteBuf base64=SslUtils.toBase64(allocator,encoded);\n    try {\n      int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n      boolean success=false;\n      final ByteBuf pem=useDirect ? allocator.directBuffer(size) : allocator.buffer(size);\n      try {\n        pem.writeBytes(BEGIN_PRIVATE_KEY);\n        pem.writeBytes(base64);\n        pem.writeBytes(END_PRIVATE_KEY);\n        PemValue value=new PemValue(pem,true);\n        success=true;\n        return value;\n      }\n  finally {\n        if (!success) {\n          SslUtils.zerooutAndRelease(pem);\n        }\n      }\n    }\n  finally {\n      SslUtils.zerooutAndRelease(base64);\n    }\n  }\n  finally {\n    SslUtils.zerooutAndRelease(encoded);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1252,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static PemEncoded toPEM(ByteBufAllocator allocator,boolean useDirect,byte[] bytes){\n  ByteBuf encoded=Unpooled.wrappedBuffer(bytes);\n  try {\n    ByteBuf base64=SslUtils.toBase64(allocator,encoded);\n    try {\n      int size=BEGIN_PRIVATE_KEY.length + base64.readableBytes() + END_PRIVATE_KEY.length;\n      boolean success=false;\n      final ByteBuf pem=useDirect ? allocator.directBuffer(size) : allocator.buffer(size);\n      try {\n        pem.writeBytes(BEGIN_PRIVATE_KEY);\n        pem.writeBytes(base64);\n        pem.writeBytes(END_PRIVATE_KEY);\n        PemValue value=new PemValue(pem,true);\n        success=true;\n        return value;\n      }\n  finally {\n        if (!success) {\n          SslUtils.zerooutAndRelease(pem);\n        }\n      }\n    }\n  finally {\n      SslUtils.zerooutAndRelease(base64);\n    }\n  }\n  finally {\n    SslUtils.zerooutAndRelease(encoded);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 84,
        "endColumnNumber" : 52
      },
      "nodeContext" : "pem.writeBytes(END_PRIVATE_KEY);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 77,
    "startColumnNumber" : 79,
    "endLineNumber" : 77,
    "endColumnNumber" : 94
  }, {
    "charLength" : 15,
    "startLineNumber" : 84,
    "startColumnNumber" : 35,
    "endLineNumber" : 84,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}