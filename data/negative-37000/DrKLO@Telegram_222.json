{
  "id" : 222,
  "expression" : "detectorResult.getBits()",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/zxing/multi/qrcode/QRCodeMultiReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "detectorResult.getBits()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 64,
      "startColumnNumber" : 58,
      "endLineNumber" : 64,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 64,
        "startColumnNumber" : 38,
        "endLineNumber" : 64,
        "endColumnNumber" : 90
      },
      "nodeContext" : "getDecoder().decode(detectorResult.getBits(),hints)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 64,
        "startColumnNumber" : 22,
        "endLineNumber" : 64,
        "endColumnNumber" : 90
      },
      "nodeContext" : "decoderResult=getDecoder().decode(detectorResult.getBits(),hints)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 91
      },
      "nodeContext" : "DecoderResult decoderResult=getDecoder().decode(detectorResult.getBits(),hints);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1340,
        "startLineNumber" : 63,
        "startColumnNumber" : 10,
        "endLineNumber" : 87,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  DecoderResult decoderResult=getDecoder().decode(detectorResult.getBits(),hints);\n  ResultPoint[] points=detectorResult.getPoints();\n  if (decoderResult.getOther() instanceof QRCodeDecoderMetaData) {\n    ((QRCodeDecoderMetaData)decoderResult.getOther()).applyMirroredCorrection(points);\n  }\n  Result result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),points,BarcodeFormat.QR_CODE);\n  List<byte[]> byteSegments=decoderResult.getByteSegments();\n  if (byteSegments != null) {\n    result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n  }\n  String ecLevel=decoderResult.getECLevel();\n  if (ecLevel != null) {\n    result.putMetadata(ResultMetadataType.ERROR_CORRECTION_LEVEL,ecLevel);\n  }\n  if (decoderResult.hasStructuredAppend()) {\n    result.putMetadata(ResultMetadataType.STRUCTURED_APPEND_SEQUENCE,decoderResult.getStructuredAppendSequenceNumber());\n    result.putMetadata(ResultMetadataType.STRUCTURED_APPEND_PARITY,decoderResult.getStructuredAppendParity());\n  }\n  results.add(result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1412,
        "startLineNumber" : 63,
        "startColumnNumber" : 6,
        "endLineNumber" : 89,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  DecoderResult decoderResult=getDecoder().decode(detectorResult.getBits(),hints);\n  ResultPoint[] points=detectorResult.getPoints();\n  if (decoderResult.getOther() instanceof QRCodeDecoderMetaData) {\n    ((QRCodeDecoderMetaData)decoderResult.getOther()).applyMirroredCorrection(points);\n  }\n  Result result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),points,BarcodeFormat.QR_CODE);\n  List<byte[]> byteSegments=decoderResult.getByteSegments();\n  if (byteSegments != null) {\n    result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n  }\n  String ecLevel=decoderResult.getECLevel();\n  if (ecLevel != null) {\n    result.putMetadata(ResultMetadataType.ERROR_CORRECTION_LEVEL,ecLevel);\n  }\n  if (decoderResult.hasStructuredAppend()) {\n    result.putMetadata(ResultMetadataType.STRUCTURED_APPEND_SEQUENCE,decoderResult.getStructuredAppendSequenceNumber());\n    result.putMetadata(ResultMetadataType.STRUCTURED_APPEND_PARITY,decoderResult.getStructuredAppendParity());\n  }\n  results.add(result);\n}\n catch (ReaderException re) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1426,
        "startLineNumber" : 62,
        "startColumnNumber" : 58,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    DecoderResult decoderResult=getDecoder().decode(detectorResult.getBits(),hints);\n    ResultPoint[] points=detectorResult.getPoints();\n    if (decoderResult.getOther() instanceof QRCodeDecoderMetaData) {\n      ((QRCodeDecoderMetaData)decoderResult.getOther()).applyMirroredCorrection(points);\n    }\n    Result result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),points,BarcodeFormat.QR_CODE);\n    List<byte[]> byteSegments=decoderResult.getByteSegments();\n    if (byteSegments != null) {\n      result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n    }\n    String ecLevel=decoderResult.getECLevel();\n    if (ecLevel != null) {\n      result.putMetadata(ResultMetadataType.ERROR_CORRECTION_LEVEL,ecLevel);\n    }\n    if (decoderResult.hasStructuredAppend()) {\n      result.putMetadata(ResultMetadataType.STRUCTURED_APPEND_SEQUENCE,decoderResult.getStructuredAppendSequenceNumber());\n      result.putMetadata(ResultMetadataType.STRUCTURED_APPEND_PARITY,decoderResult.getStructuredAppendParity());\n    }\n    results.add(result);\n  }\n catch (  ReaderException re) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1480,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (DetectorResult detectorResult : detectorResults) {\n  try {\n    DecoderResult decoderResult=getDecoder().decode(detectorResult.getBits(),hints);\n    ResultPoint[] points=detectorResult.getPoints();\n    if (decoderResult.getOther() instanceof QRCodeDecoderMetaData) {\n      ((QRCodeDecoderMetaData)decoderResult.getOther()).applyMirroredCorrection(points);\n    }\n    Result result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),points,BarcodeFormat.QR_CODE);\n    List<byte[]> byteSegments=decoderResult.getByteSegments();\n    if (byteSegments != null) {\n      result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n    }\n    String ecLevel=decoderResult.getECLevel();\n    if (ecLevel != null) {\n      result.putMetadata(ResultMetadataType.ERROR_CORRECTION_LEVEL,ecLevel);\n    }\n    if (decoderResult.hasStructuredAppend()) {\n      result.putMetadata(ResultMetadataType.STRUCTURED_APPEND_SEQUENCE,decoderResult.getStructuredAppendSequenceNumber());\n      result.putMetadata(ResultMetadataType.STRUCTURED_APPEND_PARITY,decoderResult.getStructuredAppendParity());\n    }\n    results.add(result);\n  }\n catch (  ReaderException re) {\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 151,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1818,
        "startLineNumber" : 59,
        "startColumnNumber" : 107,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Result> results=new ArrayList<>();\n  DetectorResult[] detectorResults=new MultiDetector(image.getBlackMatrix()).detectMulti(hints);\n  for (  DetectorResult detectorResult : detectorResults) {\n    try {\n      DecoderResult decoderResult=getDecoder().decode(detectorResult.getBits(),hints);\n      ResultPoint[] points=detectorResult.getPoints();\n      if (decoderResult.getOther() instanceof QRCodeDecoderMetaData) {\n        ((QRCodeDecoderMetaData)decoderResult.getOther()).applyMirroredCorrection(points);\n      }\n      Result result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),points,BarcodeFormat.QR_CODE);\n      List<byte[]> byteSegments=decoderResult.getByteSegments();\n      if (byteSegments != null) {\n        result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n      }\n      String ecLevel=decoderResult.getECLevel();\n      if (ecLevel != null) {\n        result.putMetadata(ResultMetadataType.ERROR_CORRECTION_LEVEL,ecLevel);\n      }\n      if (decoderResult.hasStructuredAppend()) {\n        result.putMetadata(ResultMetadataType.STRUCTURED_APPEND_SEQUENCE,decoderResult.getStructuredAppendSequenceNumber());\n        result.putMetadata(ResultMetadataType.STRUCTURED_APPEND_PARITY,decoderResult.getStructuredAppendParity());\n      }\n      results.add(result);\n    }\n catch (    ReaderException re) {\n    }\n  }\n  if (results.isEmpty()) {\n    return EMPTY_RESULT_ARRAY;\n  }\n else {\n    results=processStructuredAppend(results);\n    return results.toArray(EMPTY_RESULT_ARRAY);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1935,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Result[] decodeMultiple(BinaryBitmap image,Map<DecodeHintType,?> hints) throws NotFoundException {\n  List<Result> results=new ArrayList<>();\n  DetectorResult[] detectorResults=new MultiDetector(image.getBlackMatrix()).detectMulti(hints);\n  for (  DetectorResult detectorResult : detectorResults) {\n    try {\n      DecoderResult decoderResult=getDecoder().decode(detectorResult.getBits(),hints);\n      ResultPoint[] points=detectorResult.getPoints();\n      if (decoderResult.getOther() instanceof QRCodeDecoderMetaData) {\n        ((QRCodeDecoderMetaData)decoderResult.getOther()).applyMirroredCorrection(points);\n      }\n      Result result=new Result(decoderResult.getText(),decoderResult.getRawBytes(),points,BarcodeFormat.QR_CODE);\n      List<byte[]> byteSegments=decoderResult.getByteSegments();\n      if (byteSegments != null) {\n        result.putMetadata(ResultMetadataType.BYTE_SEGMENTS,byteSegments);\n      }\n      String ecLevel=decoderResult.getECLevel();\n      if (ecLevel != null) {\n        result.putMetadata(ResultMetadataType.ERROR_CORRECTION_LEVEL,ecLevel);\n      }\n      if (decoderResult.hasStructuredAppend()) {\n        result.putMetadata(ResultMetadataType.STRUCTURED_APPEND_SEQUENCE,decoderResult.getStructuredAppendSequenceNumber());\n        result.putMetadata(ResultMetadataType.STRUCTURED_APPEND_PARITY,decoderResult.getStructuredAppendParity());\n      }\n      results.add(result);\n    }\n catch (    ReaderException re) {\n    }\n  }\n  if (results.isEmpty()) {\n    return EMPTY_RESULT_ARRAY;\n  }\n else {\n    results=processStructuredAppend(results);\n    return results.toArray(EMPTY_RESULT_ARRAY);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 91
      },
      "nodeContext" : "DecoderResult decoderResult=getDecoder().decode(detectorResult.getBits(),hints);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.google.zxing.common.BitMatrix"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 64,
    "startColumnNumber" : 58,
    "endLineNumber" : 64,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}