{
  "id" : 196,
  "expression" : "\"Existing blob at address \"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/pe/cli/streams/CliStreamBlob.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Existing blob at address \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 119,
      "startColumnNumber" : 19,
      "endLineNumber" : 119,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 119,
        "startColumnNumber" : 19,
        "endLineNumber" : 119,
        "endColumnNumber" : 73
      },
      "nodeContext" : "\"Existing blob at address \" + addr + \" was not found.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 119,
        "startColumnNumber" : 3,
        "endLineNumber" : 119,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Msg.error(this,\"Existing blob at address \" + addr + \" was not found.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 119,
        "startColumnNumber" : 3,
        "endLineNumber" : 119,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Msg.error(this,\"Existing blob at address \" + addr + \" was not found.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 118,
        "startColumnNumber" : 36,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Msg.error(this,\"Existing blob at address \" + addr + \" was not found.\");\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 118,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (oldBlobDataComponent == null) {\n  Msg.error(this,\"Existing blob at address \" + addr + \" was not found.\");\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1545,
        "startLineNumber" : 103,
        "startColumnNumber" : 79,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Data containingData=program.getListing().getDefinedDataContaining(addr);\n  if (containingData == null || !containingData.isStructure()) {\n    Msg.error(this,\"Containing data of \" + updatedBlob.getName() + \" at address \"+ addr+ \" is not a structure.\");\n    return false;\n  }\n  Structure containingStructure=(Structure)containingData.getDataType();\n  int structureOffset=(int)addr.subtract(containingData.getAddress());\n  DataTypeComponent oldBlobDataComponent=containingStructure.getComponentAt(structureOffset);\n  if (oldBlobDataComponent == null) {\n    Msg.error(this,\"Existing blob at address \" + addr + \" was not found.\");\n    return false;\n  }\n  DataType oldBlobDataType=oldBlobDataComponent.getDataType();\n  DataType newBlobDataType=updatedBlob.toDataType();\n  if (oldBlobDataType.getLength() != newBlobDataType.getLength()) {\n    Msg.error(this,\"Cannot replace existing blob at address \" + addr + \" with \"+ updatedBlob.getName()+ \" because they have different sizes (Old: \"+ oldBlobDataType.getLength()+ \", New: \"+ newBlobDataType.getLength()+ \").\");\n    return false;\n  }\n  containingStructure.replaceAtOffset(structureOffset,newBlobDataType,updatedBlob.getSize(),updatedBlob.getName(),updatedBlob.getContentsComment());\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1854,
        "startLineNumber" : 96,
        "startColumnNumber" : 1,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Updates the blob at the given address with the new blob.\n * @param updatedBlob The updated blob.\n * @param addr The address of the blob to update.\n * @param program The program that will get the update.\n */\npublic boolean updateBlob(CliBlob updatedBlob,Address addr,Program program){\n  Data containingData=program.getListing().getDefinedDataContaining(addr);\n  if (containingData == null || !containingData.isStructure()) {\n    Msg.error(this,\"Containing data of \" + updatedBlob.getName() + \" at address \"+ addr+ \" is not a structure.\");\n    return false;\n  }\n  Structure containingStructure=(Structure)containingData.getDataType();\n  int structureOffset=(int)addr.subtract(containingData.getAddress());\n  DataTypeComponent oldBlobDataComponent=containingStructure.getComponentAt(structureOffset);\n  if (oldBlobDataComponent == null) {\n    Msg.error(this,\"Existing blob at address \" + addr + \" was not found.\");\n    return false;\n  }\n  DataType oldBlobDataType=oldBlobDataComponent.getDataType();\n  DataType newBlobDataType=updatedBlob.toDataType();\n  if (oldBlobDataType.getLength() != newBlobDataType.getLength()) {\n    Msg.error(this,\"Cannot replace existing blob at address \" + addr + \" with \"+ updatedBlob.getName()+ \" because they have different sizes (Old: \"+ oldBlobDataType.getLength()+ \", New: \"+ newBlobDataType.getLength()+ \").\");\n    return false;\n  }\n  containingStructure.replaceAtOffset(structureOffset,newBlobDataType,updatedBlob.getSize(),updatedBlob.getName(),updatedBlob.getContentsComment());\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 119,
        "startColumnNumber" : 3,
        "endLineNumber" : 119,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Msg.error(this,\"Existing blob at address \" + addr + \" was not found.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 119,
    "startColumnNumber" : 19,
    "endLineNumber" : 119,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}