{
  "id" : 116,
  "expression" : "\"homepageUrl\"",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/test/java/org/apache/dubbo/common/beanutil/JavaBeanSerializeUtilTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"homepageUrl\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 468,
      "startColumnNumber" : 96,
      "endLineNumber" : 468,
      "endColumnNumber" : 109
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 468,
        "startColumnNumber" : 72,
        "endLineNumber" : 468,
        "endColumnNumber" : 110
      },
      "nodeContext" : "infoProfile.getProperty(\"homepageUrl\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 468,
        "startColumnNumber" : 8,
        "endLineNumber" : 468,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEqualsPrimitive(person.getInfoProfile().getHomepageUrl(),infoProfile.getProperty(\"homepageUrl\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 468,
        "startColumnNumber" : 8,
        "endLineNumber" : 468,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEqualsPrimitive(person.getInfoProfile().getHomepageUrl(),infoProfile.getProperty(\"homepageUrl\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2001,
        "startLineNumber" : 447,
        "startColumnNumber" : 68,
        "endLineNumber" : 471,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JavaBeanDescriptor descriptor=(JavaBeanDescriptor)obj;\n  Assertions.assertTrue(descriptor.isBeanType());\n  assertEqualsPrimitive(person.getPersonId(),descriptor.getProperty(\"personId\"));\n  assertEqualsPrimitive(person.getLoginName(),descriptor.getProperty(\"loginName\"));\n  assertEqualsEnum(person.getStatus(),descriptor.getProperty(\"status\"));\n  assertEqualsPrimitive(person.getEmail(),descriptor.getProperty(\"email\"));\n  assertEqualsPrimitive(person.getPenName(),descriptor.getProperty(\"penName\"));\n  JavaBeanDescriptor infoProfile=(JavaBeanDescriptor)descriptor.getProperty(\"infoProfile\");\n  Assertions.assertTrue(infoProfile.isBeanType());\n  JavaBeanDescriptor phones=(JavaBeanDescriptor)infoProfile.getProperty(\"phones\");\n  Assertions.assertTrue(phones.isCollectionType());\n  assertEqualsPhone(person.getInfoProfile().getPhones().get(0),phones.getProperty(0));\n  assertEqualsPhone(person.getInfoProfile().getPhones().get(1),phones.getProperty(1));\n  assertEqualsPhone(person.getInfoProfile().getFax(),infoProfile.getProperty(\"fax\"));\n  assertEqualsFullAddress(person.getInfoProfile().getFullAddress(),infoProfile.getProperty(\"fullAddress\"));\n  assertEqualsPrimitive(person.getInfoProfile().getMobileNo(),infoProfile.getProperty(\"mobileNo\"));\n  assertEqualsPrimitive(person.getInfoProfile().getName(),infoProfile.getProperty(\"name\"));\n  assertEqualsPrimitive(person.getInfoProfile().getDepartment(),infoProfile.getProperty(\"department\"));\n  assertEqualsPrimitive(person.getInfoProfile().getJobTitle(),infoProfile.getProperty(\"jobTitle\"));\n  assertEqualsPrimitive(person.getInfoProfile().getHomepageUrl(),infoProfile.getProperty(\"homepageUrl\"));\n  assertEqualsPrimitive(person.getInfoProfile().isFemale(),infoProfile.getProperty(\"female\"));\n  assertEqualsPrimitive(person.getInfoProfile().isMale(),infoProfile.getProperty(\"male\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2065,
        "startLineNumber" : 447,
        "startColumnNumber" : 4,
        "endLineNumber" : 471,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static void assertEqualsBigPerson(BigPerson person,Object obj){\n  JavaBeanDescriptor descriptor=(JavaBeanDescriptor)obj;\n  Assertions.assertTrue(descriptor.isBeanType());\n  assertEqualsPrimitive(person.getPersonId(),descriptor.getProperty(\"personId\"));\n  assertEqualsPrimitive(person.getLoginName(),descriptor.getProperty(\"loginName\"));\n  assertEqualsEnum(person.getStatus(),descriptor.getProperty(\"status\"));\n  assertEqualsPrimitive(person.getEmail(),descriptor.getProperty(\"email\"));\n  assertEqualsPrimitive(person.getPenName(),descriptor.getProperty(\"penName\"));\n  JavaBeanDescriptor infoProfile=(JavaBeanDescriptor)descriptor.getProperty(\"infoProfile\");\n  Assertions.assertTrue(infoProfile.isBeanType());\n  JavaBeanDescriptor phones=(JavaBeanDescriptor)infoProfile.getProperty(\"phones\");\n  Assertions.assertTrue(phones.isCollectionType());\n  assertEqualsPhone(person.getInfoProfile().getPhones().get(0),phones.getProperty(0));\n  assertEqualsPhone(person.getInfoProfile().getPhones().get(1),phones.getProperty(1));\n  assertEqualsPhone(person.getInfoProfile().getFax(),infoProfile.getProperty(\"fax\"));\n  assertEqualsFullAddress(person.getInfoProfile().getFullAddress(),infoProfile.getProperty(\"fullAddress\"));\n  assertEqualsPrimitive(person.getInfoProfile().getMobileNo(),infoProfile.getProperty(\"mobileNo\"));\n  assertEqualsPrimitive(person.getInfoProfile().getName(),infoProfile.getProperty(\"name\"));\n  assertEqualsPrimitive(person.getInfoProfile().getDepartment(),infoProfile.getProperty(\"department\"));\n  assertEqualsPrimitive(person.getInfoProfile().getJobTitle(),infoProfile.getProperty(\"jobTitle\"));\n  assertEqualsPrimitive(person.getInfoProfile().getHomepageUrl(),infoProfile.getProperty(\"homepageUrl\"));\n  assertEqualsPrimitive(person.getInfoProfile().isFemale(),infoProfile.getProperty(\"female\"));\n  assertEqualsPrimitive(person.getInfoProfile().isMale(),infoProfile.getProperty(\"male\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 255,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 468,
        "startColumnNumber" : 8,
        "endLineNumber" : 468,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEqualsPrimitive(person.getInfoProfile().getHomepageUrl(),infoProfile.getProperty(\"homepageUrl\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 468,
    "startColumnNumber" : 96,
    "endLineNumber" : 468,
    "endColumnNumber" : 109
  } ],
  "layoutRelationDataList" : [ ]
}