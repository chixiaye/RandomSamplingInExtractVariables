{
  "id" : 195,
  "expression" : "vip",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "vip",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 98,
      "startColumnNumber" : 19,
      "endLineNumber" : 98,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 22
      },
      "nodeContext" : "this.vip=vip",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 23
      },
      "nodeContext" : "this.vip=vip;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2113,
        "startLineNumber" : 95,
        "startColumnNumber" : 126,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DefaultClientChannelManager(String originName,String vip,IClientConfig clientConfig,Registry spectatorRegistry){\n  this.loadBalancer=createLoadBalancer(clientConfig);\n  this.vip=vip;\n  this.clientConfig=clientConfig;\n  this.spectatorRegistry=spectatorRegistry;\n  this.perServerPools=new ConcurrentHashMap<>(200);\n  this.loadBalancer.addServerListChangeListener((oldList,newList) -> removeMissingServerConnectionPools(oldList,newList));\n  this.connPoolConfig=new ConnectionPoolConfigImpl(originName,this.clientConfig);\n  this.createNewConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create\",originName);\n  this.createConnSucceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_success\",originName);\n  this.createConnFailedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_create_fail\",originName);\n  this.closeConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_close\",originName);\n  this.requestConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_request\",originName);\n  this.reuseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_reuse\",originName);\n  this.releaseConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_release\",originName);\n  this.alreadyClosedCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_alreadyClosed\",originName);\n  this.connTakenFromPoolIsNotOpen=SpectatorUtils.newCounter(METRIC_PREFIX + \"_fromPoolIsClosed\",originName);\n  this.maxConnsPerHostExceededCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_maxConnsPerHostExceeded\",originName);\n  this.closeWrtBusyConnCounter=SpectatorUtils.newCounter(METRIC_PREFIX + \"_closeWrtBusyConnCounter\",originName);\n  this.connEstablishTimer=PercentileTimer.get(spectatorRegistry,spectatorRegistry.createId(METRIC_PREFIX + \"_createTiming\",\"id\",originName));\n  this.connsInPool=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inPool\",originName,new AtomicInteger());\n  this.connsInUse=SpectatorUtils.newGauge(METRIC_PREFIX + \"_inUse\",originName,new AtomicInteger());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 23
      },
      "nodeContext" : "this.vip=vip;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 98,
    "startColumnNumber" : 19,
    "endLineNumber" : 98,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}