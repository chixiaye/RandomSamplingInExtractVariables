{
  "id" : 314,
  "expression" : "new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(\"dim1\",\"dim2\")))",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/s3-extensions/src/test/java/org/apache/druid/data/input/s3/S3InputSourceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(\"dim1\",\"dim2\")))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 86,
      "startLineNumber" : 512,
      "startColumnNumber" : 8,
      "endLineNumber" : 512,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 510,
        "startColumnNumber" : 32,
        "endLineNumber" : 514,
        "endColumnNumber" : 5
      },
      "nodeContext" : "new InputRowSchema(new TimestampSpec(\"time\",\"auto\",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(\"dim1\",\"dim2\"))),ColumnsFilter.all())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 510,
        "startColumnNumber" : 19,
        "endLineNumber" : 514,
        "endColumnNumber" : 5
      },
      "nodeContext" : "someSchema=new InputRowSchema(new TimestampSpec(\"time\",\"auto\",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(\"dim1\",\"dim2\"))),ColumnsFilter.all())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 510,
        "startColumnNumber" : 4,
        "endLineNumber" : 514,
        "endColumnNumber" : 6
      },
      "nodeContext" : "InputRowSchema someSchema=new InputRowSchema(new TimestampSpec(\"time\",\"auto\",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(\"dim1\",\"dim2\"))),ColumnsFilter.all());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1411,
        "startLineNumber" : 492,
        "startColumnNumber" : 2,
        "endLineNumber" : 532,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  EasyMock.reset(S3_CLIENT);\n  expectListObjects(PREFIXES.get(0),ImmutableList.of(EXPECTED_URIS.get(0)),CONTENT);\n  expectListObjects(EXPECTED_URIS.get(1),ImmutableList.of(EXPECTED_URIS.get(1)),CONTENT);\n  expectGetObject(EXPECTED_URIS.get(0));\n  expectGetObject(EXPECTED_URIS.get(1));\n  EasyMock.replay(S3_CLIENT);\n  S3InputSource inputSource=new S3InputSource(SERVICE,SERVER_SIDE_ENCRYPTING_AMAZON_S3_BUILDER,INPUT_DATA_CONFIG,null,ImmutableList.of(PREFIXES.get(0),EXPECTED_URIS.get(1)),null,null);\n  InputRowSchema someSchema=new InputRowSchema(new TimestampSpec(\"time\",\"auto\",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(\"dim1\",\"dim2\"))),ColumnsFilter.all());\n  InputSourceReader reader=inputSource.reader(someSchema,new CsvInputFormat(ImmutableList.of(\"time\",\"dim1\",\"dim2\"),\"|\",false,null,0),temporaryFolder.newFolder());\n  CloseableIterator<InputRow> iterator=reader.read();\n  while (iterator.hasNext()) {\n    InputRow nextRow=iterator.next();\n    Assert.assertEquals(NOW,nextRow.getTimestamp());\n    Assert.assertEquals(\"hello\",nextRow.getDimension(\"dim1\").get(0));\n    Assert.assertEquals(\"world\",nextRow.getDimension(\"dim2\").get(0));\n  }\n  EasyMock.verify(S3_CLIENT);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1465,
        "startLineNumber" : 490,
        "startColumnNumber" : 2,
        "endLineNumber" : 532,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testReader() throws IOException {\n  EasyMock.reset(S3_CLIENT);\n  expectListObjects(PREFIXES.get(0),ImmutableList.of(EXPECTED_URIS.get(0)),CONTENT);\n  expectListObjects(EXPECTED_URIS.get(1),ImmutableList.of(EXPECTED_URIS.get(1)),CONTENT);\n  expectGetObject(EXPECTED_URIS.get(0));\n  expectGetObject(EXPECTED_URIS.get(1));\n  EasyMock.replay(S3_CLIENT);\n  S3InputSource inputSource=new S3InputSource(SERVICE,SERVER_SIDE_ENCRYPTING_AMAZON_S3_BUILDER,INPUT_DATA_CONFIG,null,ImmutableList.of(PREFIXES.get(0),EXPECTED_URIS.get(1)),null,null);\n  InputRowSchema someSchema=new InputRowSchema(new TimestampSpec(\"time\",\"auto\",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(\"dim1\",\"dim2\"))),ColumnsFilter.all());\n  InputSourceReader reader=inputSource.reader(someSchema,new CsvInputFormat(ImmutableList.of(\"time\",\"dim1\",\"dim2\"),\"|\",false,null,0),temporaryFolder.newFolder());\n  CloseableIterator<InputRow> iterator=reader.read();\n  while (iterator.hasNext()) {\n    InputRow nextRow=iterator.next();\n    Assert.assertEquals(NOW,nextRow.getTimestamp());\n    Assert.assertEquals(\"hello\",nextRow.getDimension(\"dim1\").get(0));\n    Assert.assertEquals(\"world\",nextRow.getDimension(\"dim2\").get(0));\n  }\n  EasyMock.verify(S3_CLIENT);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 202,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 510,
        "startColumnNumber" : 32,
        "endLineNumber" : 514,
        "endColumnNumber" : 5
      },
      "nodeContext" : "new InputRowSchema(new TimestampSpec(\"time\",\"auto\",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(\"dim1\",\"dim2\"))),ColumnsFilter.all())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 23,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "org.apache.druid.data.input.impl.DimensionsSpec"
  } ],
  "positionList" : [ {
    "charLength" : 86,
    "startLineNumber" : 512,
    "startColumnNumber" : 8,
    "endLineNumber" : 512,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}