{
  "id" : 2,
  "expression" : "new Executor(){\n  @Override public void execute(  Runnable task){\n    manualExecutorTask[0]=task;\n  }\n}\n",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/util/concurrent/ExecutionSequencerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Executor(){\n  @Override public void execute(  Runnable task){\n    manualExecutorTask[0]=task;\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 152,
      "startLineNumber" : 189,
      "startColumnNumber" : 8,
      "endLineNumber" : 194,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 21,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 188,
        "startColumnNumber" : 13,
        "endLineNumber" : 194,
        "endColumnNumber" : 9
      },
      "nodeContext" : "manualExecutor=new Executor(){\n  @Override public void execute(  Runnable task){\n    manualExecutorTask[0]=task;\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 188,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Executor manualExecutor=new Executor(){\n  @Override public void execute(  Runnable task){\n    manualExecutorTask[0]=task;\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 182,
        "startColumnNumber" : 66,
        "endLineNumber" : 225,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TestLogHandler logHandler=new TestLogHandler();\n  Logger.getLogger(AbstractFuture.class.getName()).addHandler(logHandler);\n  List<Future<?>> results=new ArrayList<>();\n  final Runnable[] manualExecutorTask=new Runnable[1];\n  Executor manualExecutor=new Executor(){\n    @Override public void execute(    Runnable task){\n      manualExecutorTask[0]=task;\n    }\n  }\n;\n  results.add(serializer.submit(Callables.returning(null),manualExecutor));\n  final Future<?>[] thingToCancel=new Future<?>[1];\n  results.add(serializer.submit(new Callable<Void>(){\n    @Override public Void call(){\n      thingToCancel[0].cancel(false);\n      return null;\n    }\n  }\n,directExecutor()));\n  thingToCancel[0]=serializer.submit(Callables.returning(null),directExecutor());\n  results.add(thingToCancel[0]);\n  for (int i=0; i < 5; i++) {\n    results.add(serializer.submit(Callables.returning(null),directExecutor()));\n  }\n  manualExecutorTask[0].run();\n  for (  Future<?> result : results) {\n    if (!result.isCancelled()) {\n      result.get(10,SECONDS);\n    }\n  }\n  assertThat(logHandler.getStoredLogRecords()).isEmpty();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1565,
        "startLineNumber" : 182,
        "startColumnNumber" : 2,
        "endLineNumber" : 225,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testCancellationDuringReentrancy() throws Exception {\n  TestLogHandler logHandler=new TestLogHandler();\n  Logger.getLogger(AbstractFuture.class.getName()).addHandler(logHandler);\n  List<Future<?>> results=new ArrayList<>();\n  final Runnable[] manualExecutorTask=new Runnable[1];\n  Executor manualExecutor=new Executor(){\n    @Override public void execute(    Runnable task){\n      manualExecutorTask[0]=task;\n    }\n  }\n;\n  results.add(serializer.submit(Callables.returning(null),manualExecutor));\n  final Future<?>[] thingToCancel=new Future<?>[1];\n  results.add(serializer.submit(new Callable<Void>(){\n    @Override public Void call(){\n      thingToCancel[0].cancel(false);\n      return null;\n    }\n  }\n,directExecutor()));\n  thingToCancel[0]=serializer.submit(Callables.returning(null),directExecutor());\n  results.add(thingToCancel[0]);\n  for (int i=0; i < 5; i++) {\n    results.add(serializer.submit(Callables.returning(null),directExecutor()));\n  }\n  manualExecutorTask[0].run();\n  for (  Future<?> result : results) {\n    if (!result.isCancelled()) {\n      result.get(10,SECONDS);\n    }\n  }\n  assertThat(logHandler.getStoredLogRecords()).isEmpty();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 188,
        "startColumnNumber" : 13,
        "endLineNumber" : 194,
        "endColumnNumber" : 9
      },
      "nodeContext" : "manualExecutor=new Executor(){\n  @Override public void execute(  Runnable task){\n    manualExecutorTask[0]=task;\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 23,
      "astHeight" : 9
    },
    "tokenLength" : 8,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 152,
    "startLineNumber" : 189,
    "startColumnNumber" : 8,
    "endLineNumber" : 194,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}