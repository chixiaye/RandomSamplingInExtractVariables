{
  "id" : 409,
  "expression" : "(String)it.next()",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/java/proguard/proguard6.2.2/src/proguard/DataEntryReaderFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(String)it.next()",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 222,
      "startColumnNumber" : 33,
      "endLineNumber" : 222,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 222,
        "startColumnNumber" : 23,
        "endLineNumber" : 222,
        "endColumnNumber" : 51
      },
      "nodeContext" : "element=(String)it.next()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 222,
        "startColumnNumber" : 16,
        "endLineNumber" : 222,
        "endColumnNumber" : 52
      },
      "nodeContext" : "String element=(String)it.next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 221,
        "startColumnNumber" : 12,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String element=(String)it.next();\n  if (element.contains(VERSIONS_PATTERN)) {\n    return originalFilter;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 220,
        "startColumnNumber" : 12,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (it.hasNext()) {\n  String element=(String)it.next();\n  if (element.contains(VERSIONS_PATTERN)) {\n    return originalFilter;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 216,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ListIterator it=originalFilter.listIterator();\n  while (it.hasNext()) {\n    String element=(String)it.next();\n    if (element.contains(VERSIONS_PATTERN)) {\n      return originalFilter;\n    }\n  }\n  List filter=new ArrayList();\n  filter.add(VERSIONS_EXCLUDE);\n  filter.addAll(originalFilter);\n  return filter;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 211,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (originalFilter == null) {\n  return Arrays.asList(VERSIONS_EXCLUDE);\n}\n else {\n  ListIterator it=originalFilter.listIterator();\n  while (it.hasNext()) {\n    String element=(String)it.next();\n    if (element.contains(VERSIONS_PATTERN)) {\n      return originalFilter;\n    }\n  }\n  List filter=new ArrayList();\n  filter.add(VERSIONS_EXCLUDE);\n  filter.addAll(originalFilter);\n  return filter;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 859,
        "startLineNumber" : 209,
        "startColumnNumber" : 4,
        "endLineNumber" : 235,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List originalFilter=classPathEntry.getFilter();\n  if (originalFilter == null) {\n    return Arrays.asList(VERSIONS_EXCLUDE);\n  }\n else {\n    ListIterator it=originalFilter.listIterator();\n    while (it.hasNext()) {\n      String element=(String)it.next();\n      if (element.contains(VERSIONS_PATTERN)) {\n        return originalFilter;\n      }\n    }\n    List filter=new ArrayList();\n    filter.add(VERSIONS_EXCLUDE);\n    filter.addAll(originalFilter);\n    return filter;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1322,
        "startLineNumber" : 200,
        "startColumnNumber" : 4,
        "endLineNumber" : 235,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Method to return an augmented filter for supported features. <p> Currently versioned class files (a feature introduced in Java 9) are not fully supported by ProGuard. Only 1 version of a class can be read and processed. If no custom filter targeting a specific version is used, exclude such classes from being read.\n */\npublic static List getFilterExcludingVersionedClasses(ClassPathEntry classPathEntry){\n  List originalFilter=classPathEntry.getFilter();\n  if (originalFilter == null) {\n    return Arrays.asList(VERSIONS_EXCLUDE);\n  }\n else {\n    ListIterator it=originalFilter.listIterator();\n    while (it.hasNext()) {\n      String element=(String)it.next();\n      if (element.contains(VERSIONS_PATTERN)) {\n        return originalFilter;\n      }\n    }\n    List filter=new ArrayList();\n    filter.add(VERSIONS_EXCLUDE);\n    filter.addAll(originalFilter);\n    return filter;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 222,
        "startColumnNumber" : 16,
        "endLineNumber" : 222,
        "endColumnNumber" : 52
      },
      "nodeContext" : "String element=(String)it.next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 222,
    "startColumnNumber" : 33,
    "endLineNumber" : 222,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}