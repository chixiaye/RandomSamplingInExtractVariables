{
  "id" : 34,
  "expression" : "percent - prevTableIndex",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/main/java/com/google/android/exoplayer2/extractor/mp3/XingSeeker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "percent - prevTableIndex",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 143,
      "startColumnNumber" : 35,
      "endLineNumber" : 143,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 143,
        "startColumnNumber" : 13,
        "endLineNumber" : 143,
        "endColumnNumber" : 59
      },
      "nodeContext" : "interpolateFraction=percent - prevTableIndex",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 143,
        "startColumnNumber" : 6,
        "endLineNumber" : 143,
        "endColumnNumber" : 60
      },
      "nodeContext" : "double interpolateFraction=percent - prevTableIndex;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 545,
        "startLineNumber" : 137,
        "startColumnNumber" : 11,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int prevTableIndex=(int)percent;\n  long[] tableOfContents=Assertions.checkStateNotNull(this.tableOfContents);\n  double prevScaledPosition=tableOfContents[prevTableIndex];\n  double nextScaledPosition=prevTableIndex == 99 ? 256 : tableOfContents[prevTableIndex + 1];\n  double interpolateFraction=percent - prevTableIndex;\n  scaledPosition=prevScaledPosition + (interpolateFraction * (nextScaledPosition - prevScaledPosition));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 606,
        "startLineNumber" : 135,
        "startColumnNumber" : 11,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (percent >= 100) {\n  scaledPosition=256;\n}\n else {\n  int prevTableIndex=(int)percent;\n  long[] tableOfContents=Assertions.checkStateNotNull(this.tableOfContents);\n  double prevScaledPosition=tableOfContents[prevTableIndex];\n  double nextScaledPosition=prevTableIndex == 99 ? 256 : tableOfContents[prevTableIndex + 1];\n  double interpolateFraction=percent - prevTableIndex;\n  scaledPosition=prevScaledPosition + (interpolateFraction * (nextScaledPosition - prevScaledPosition));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 663,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (percent <= 0) {\n  scaledPosition=0;\n}\n else if (percent >= 100) {\n  scaledPosition=256;\n}\n else {\n  int prevTableIndex=(int)percent;\n  long[] tableOfContents=Assertions.checkStateNotNull(this.tableOfContents);\n  double prevScaledPosition=tableOfContents[prevTableIndex];\n  double nextScaledPosition=prevTableIndex == 99 ? 256 : tableOfContents[prevTableIndex + 1];\n  double interpolateFraction=percent - prevTableIndex;\n  scaledPosition=prevScaledPosition + (interpolateFraction * (nextScaledPosition - prevScaledPosition));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1243,
        "startLineNumber" : 126,
        "startColumnNumber" : 47,
        "endLineNumber" : 151,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!isSeekable()) {\n    return new SeekPoints(new SeekPoint(0,dataStartPosition + xingFrameSize));\n  }\n  timeUs=Util.constrainValue(timeUs,0,durationUs);\n  double percent=(timeUs * 100d) / durationUs;\n  double scaledPosition;\n  if (percent <= 0) {\n    scaledPosition=0;\n  }\n else   if (percent >= 100) {\n    scaledPosition=256;\n  }\n else {\n    int prevTableIndex=(int)percent;\n    long[] tableOfContents=Assertions.checkStateNotNull(this.tableOfContents);\n    double prevScaledPosition=tableOfContents[prevTableIndex];\n    double nextScaledPosition=prevTableIndex == 99 ? 256 : tableOfContents[prevTableIndex + 1];\n    double interpolateFraction=percent - prevTableIndex;\n    scaledPosition=prevScaledPosition + (interpolateFraction * (nextScaledPosition - prevScaledPosition));\n  }\n  long positionOffset=Math.round((scaledPosition / 256) * dataSize);\n  positionOffset=Util.constrainValue(positionOffset,xingFrameSize,dataSize - 1);\n  return new SeekPoints(new SeekPoint(timeUs,dataStartPosition + positionOffset));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 125,
        "startColumnNumber" : 2,
        "endLineNumber" : 151,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public SeekPoints getSeekPoints(long timeUs){\n  if (!isSeekable()) {\n    return new SeekPoints(new SeekPoint(0,dataStartPosition + xingFrameSize));\n  }\n  timeUs=Util.constrainValue(timeUs,0,durationUs);\n  double percent=(timeUs * 100d) / durationUs;\n  double scaledPosition;\n  if (percent <= 0) {\n    scaledPosition=0;\n  }\n else   if (percent >= 100) {\n    scaledPosition=256;\n  }\n else {\n    int prevTableIndex=(int)percent;\n    long[] tableOfContents=Assertions.checkStateNotNull(this.tableOfContents);\n    double prevScaledPosition=tableOfContents[prevTableIndex];\n    double nextScaledPosition=prevTableIndex == 99 ? 256 : tableOfContents[prevTableIndex + 1];\n    double interpolateFraction=percent - prevTableIndex;\n    scaledPosition=prevScaledPosition + (interpolateFraction * (nextScaledPosition - prevScaledPosition));\n  }\n  long positionOffset=Math.round((scaledPosition / 256) * dataSize);\n  positionOffset=Util.constrainValue(positionOffset,xingFrameSize,dataSize - 1);\n  return new SeekPoints(new SeekPoint(timeUs,dataStartPosition + positionOffset));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 143,
        "startColumnNumber" : 6,
        "endLineNumber" : 143,
        "endColumnNumber" : 60
      },
      "nodeContext" : "double interpolateFraction=percent - prevTableIndex;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 143,
    "startColumnNumber" : 35,
    "endLineNumber" : 143,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}