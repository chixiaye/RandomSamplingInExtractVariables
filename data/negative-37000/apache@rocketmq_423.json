{
  "id" : 423,
  "expression" : "\"%s|%s|%s|%s|%s%n\"",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/tools/src/main/java/org/apache/rocketmq/tools/command/cluster/CLusterSendMsgRTCommand.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"%s|%s|%s|%s|%s%n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 174,
      "startColumnNumber" : 66,
      "endLineNumber" : 174,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 174,
        "startColumnNumber" : 52,
        "endLineNumber" : 176,
        "endColumnNumber" : 89
      },
      "nodeContext" : "String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 174,
        "startColumnNumber" : 28,
        "endLineNumber" : 176,
        "endColumnNumber" : 90
      },
      "nodeContext" : "System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 174,
        "startColumnNumber" : 28,
        "endLineNumber" : 176,
        "endColumnNumber" : 91
      },
      "nodeContext" : "System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 173,
        "startColumnNumber" : 31,
        "endLineNumber" : 177,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 165,
        "startColumnNumber" : 24,
        "endLineNumber" : 177,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (!printAsTlog) {\n  System.out.printf(\"%-24s  %-24s  %-8s  %-16s  %-16s%n\",clusterName,brokerName,String.format(\"%.2f\",rt),successCount,failCount);\n}\n else {\n  System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1810,
        "startLineNumber" : 140,
        "startColumnNumber" : 58,
        "endLineNumber" : 179,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Message msg=new Message(brokerName,getStringBySize(size).getBytes(MixAll.DEFAULT_CHARSET));\n  long start=0;\n  long end=0;\n  long elapsed=0;\n  int successCount=0;\n  int failCount=0;\n  for (int i=0; i < amount; i++) {\n    start=System.currentTimeMillis();\n    try {\n      producer.send(msg);\n      successCount++;\n      end=System.currentTimeMillis();\n    }\n catch (    Exception e) {\n      failCount++;\n      end=System.currentTimeMillis();\n    }\n    if (i != 0) {\n      elapsed+=end - start;\n    }\n  }\n  double rt=(double)elapsed / (amount - 1);\n  if (!printAsTlog) {\n    System.out.printf(\"%-24s  %-24s  %-8s  %-16s  %-16s%n\",clusterName,brokerName,String.format(\"%.2f\",rt),successCount,failCount);\n  }\n else {\n    System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1848,
        "startLineNumber" : 140,
        "startColumnNumber" : 20,
        "endLineNumber" : 179,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (String brokerName : brokerNames) {\n  Message msg=new Message(brokerName,getStringBySize(size).getBytes(MixAll.DEFAULT_CHARSET));\n  long start=0;\n  long end=0;\n  long elapsed=0;\n  int successCount=0;\n  int failCount=0;\n  for (int i=0; i < amount; i++) {\n    start=System.currentTimeMillis();\n    try {\n      producer.send(msg);\n      successCount++;\n      end=System.currentTimeMillis();\n    }\n catch (    Exception e) {\n      failCount++;\n      end=System.currentTimeMillis();\n    }\n    if (i != 0) {\n      elapsed+=end - start;\n    }\n  }\n  double rt=(double)elapsed / (amount - 1);\n  if (!printAsTlog) {\n    System.out.printf(\"%-24s  %-24s  %-8s  %-16s  %-16s%n\",clusterName,brokerName,String.format(\"%.2f\",rt),successCount,failCount);\n  }\n else {\n    System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 168,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2148,
        "startLineNumber" : 133,
        "startColumnNumber" : 56,
        "endLineNumber" : 181,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Set<String> brokerNames=clusterAddr.get(clusterName);\n  if (brokerNames == null) {\n    System.out.printf(\"cluster [%s] not exist\",clusterName);\n    break;\n  }\n  for (  String brokerName : brokerNames) {\n    Message msg=new Message(brokerName,getStringBySize(size).getBytes(MixAll.DEFAULT_CHARSET));\n    long start=0;\n    long end=0;\n    long elapsed=0;\n    int successCount=0;\n    int failCount=0;\n    for (int i=0; i < amount; i++) {\n      start=System.currentTimeMillis();\n      try {\n        producer.send(msg);\n        successCount++;\n        end=System.currentTimeMillis();\n      }\n catch (      Exception e) {\n        failCount++;\n        end=System.currentTimeMillis();\n      }\n      if (i != 0) {\n        elapsed+=end - start;\n      }\n    }\n    double rt=(double)elapsed / (amount - 1);\n    if (!printAsTlog) {\n      System.out.printf(\"%-24s  %-24s  %-8s  %-16s  %-16s%n\",clusterName,brokerName,String.format(\"%.2f\",rt),successCount,failCount);\n    }\n else {\n      System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2188,
        "startLineNumber" : 133,
        "startColumnNumber" : 16,
        "endLineNumber" : 181,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (String clusterName : clusterNames) {\n  Set<String> brokerNames=clusterAddr.get(clusterName);\n  if (brokerNames == null) {\n    System.out.printf(\"cluster [%s] not exist\",clusterName);\n    break;\n  }\n  for (  String brokerName : brokerNames) {\n    Message msg=new Message(brokerName,getStringBySize(size).getBytes(MixAll.DEFAULT_CHARSET));\n    long start=0;\n    long end=0;\n    long elapsed=0;\n    int successCount=0;\n    int failCount=0;\n    for (int i=0; i < amount; i++) {\n      start=System.currentTimeMillis();\n      try {\n        producer.send(msg);\n        successCount++;\n        end=System.currentTimeMillis();\n      }\n catch (      Exception e) {\n        failCount++;\n        end=System.currentTimeMillis();\n      }\n      if (i != 0) {\n        elapsed+=end - start;\n      }\n    }\n    double rt=(double)elapsed / (amount - 1);\n    if (!printAsTlog) {\n      System.out.printf(\"%-24s  %-24s  %-8s  %-16s  %-16s%n\",clusterName,brokerName,String.format(\"%.2f\",rt),successCount,failCount);\n    }\n else {\n      System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 201,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2268,
        "startLineNumber" : 132,
        "startColumnNumber" : 25,
        "endLineNumber" : 184,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  String clusterName : clusterNames) {\n    Set<String> brokerNames=clusterAddr.get(clusterName);\n    if (brokerNames == null) {\n      System.out.printf(\"cluster [%s] not exist\",clusterName);\n      break;\n    }\n    for (    String brokerName : brokerNames) {\n      Message msg=new Message(brokerName,getStringBySize(size).getBytes(MixAll.DEFAULT_CHARSET));\n      long start=0;\n      long end=0;\n      long elapsed=0;\n      int successCount=0;\n      int failCount=0;\n      for (int i=0; i < amount; i++) {\n        start=System.currentTimeMillis();\n        try {\n          producer.send(msg);\n          successCount++;\n          end=System.currentTimeMillis();\n        }\n catch (        Exception e) {\n          failCount++;\n          end=System.currentTimeMillis();\n        }\n        if (i != 0) {\n          elapsed+=end - start;\n        }\n      }\n      double rt=(double)elapsed / (amount - 1);\n      if (!printAsTlog) {\n        System.out.printf(\"%-24s  %-24s  %-8s  %-16s  %-16s%n\",clusterName,brokerName,String.format(\"%.2f\",rt),successCount,failCount);\n      }\n else {\n        System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n      }\n    }\n  }\n  Thread.sleep(interval * 1000);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2281,
        "startLineNumber" : 132,
        "startColumnNumber" : 12,
        "endLineNumber" : 184,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (true) {\n  for (  String clusterName : clusterNames) {\n    Set<String> brokerNames=clusterAddr.get(clusterName);\n    if (brokerNames == null) {\n      System.out.printf(\"cluster [%s] not exist\",clusterName);\n      break;\n    }\n    for (    String brokerName : brokerNames) {\n      Message msg=new Message(brokerName,getStringBySize(size).getBytes(MixAll.DEFAULT_CHARSET));\n      long start=0;\n      long end=0;\n      long elapsed=0;\n      int successCount=0;\n      int failCount=0;\n      for (int i=0; i < amount; i++) {\n        start=System.currentTimeMillis();\n        try {\n          producer.send(msg);\n          successCount++;\n          end=System.currentTimeMillis();\n        }\n catch (        Exception e) {\n          failCount++;\n          end=System.currentTimeMillis();\n        }\n        if (i != 0) {\n          elapsed+=end - start;\n        }\n      }\n      double rt=(double)elapsed / (amount - 1);\n      if (!printAsTlog) {\n        System.out.printf(\"%-24s  %-24s  %-8s  %-16s  %-16s%n\",clusterName,brokerName,String.format(\"%.2f\",rt),successCount,failCount);\n      }\n else {\n        System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n      }\n    }\n  }\n  Thread.sleep(interval * 1000);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 211,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3880,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 186,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  defaultMQAdminExt.start();\n  producer.start();\n  ClusterInfo clusterInfoSerializeWrapper=defaultMQAdminExt.examineBrokerClusterInfo();\n  HashMap<String,Set<String>> clusterAddr=clusterInfoSerializeWrapper.getClusterAddrTable();\n  Set<String> clusterNames=null;\n  long amount=!commandLine.hasOption('a') ? 50 : Long.parseLong(commandLine.getOptionValue('a').trim());\n  long size=!commandLine.hasOption('s') ? 128 : Long.parseLong(commandLine.getOptionValue('s').trim());\n  long interval=!commandLine.hasOption('i') ? 10 : Long.parseLong(commandLine.getOptionValue('i').trim());\n  boolean printAsTlog=commandLine.hasOption('p') && Boolean.parseBoolean(commandLine.getOptionValue('p').trim());\n  String machineRoom=!commandLine.hasOption('m') ? \"noname\" : commandLine.getOptionValue('m').trim();\n  if (commandLine.hasOption('c')) {\n    clusterNames=new TreeSet<String>();\n    clusterNames.add(commandLine.getOptionValue('c').trim());\n  }\n else {\n    clusterNames=clusterAddr.keySet();\n  }\n  if (!printAsTlog) {\n    System.out.printf(\"%-24s  %-24s  %-4s  %-8s  %-8s%n\",\"#Cluster Name\",\"#Broker Name\",\"#RT\",\"#successCount\",\"#failCount\");\n  }\n  while (true) {\n    for (    String clusterName : clusterNames) {\n      Set<String> brokerNames=clusterAddr.get(clusterName);\n      if (brokerNames == null) {\n        System.out.printf(\"cluster [%s] not exist\",clusterName);\n        break;\n      }\n      for (      String brokerName : brokerNames) {\n        Message msg=new Message(brokerName,getStringBySize(size).getBytes(MixAll.DEFAULT_CHARSET));\n        long start=0;\n        long end=0;\n        long elapsed=0;\n        int successCount=0;\n        int failCount=0;\n        for (int i=0; i < amount; i++) {\n          start=System.currentTimeMillis();\n          try {\n            producer.send(msg);\n            successCount++;\n            end=System.currentTimeMillis();\n          }\n catch (          Exception e) {\n            failCount++;\n            end=System.currentTimeMillis();\n          }\n          if (i != 0) {\n            elapsed+=end - start;\n          }\n        }\n        double rt=(double)elapsed / (amount - 1);\n        if (!printAsTlog) {\n          System.out.printf(\"%-24s  %-24s  %-8s  %-16s  %-16s%n\",clusterName,brokerName,String.format(\"%.2f\",rt),successCount,failCount);\n        }\n else {\n          System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n        }\n      }\n    }\n    Thread.sleep(interval * 1000);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 397,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4110,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  defaultMQAdminExt.start();\n  producer.start();\n  ClusterInfo clusterInfoSerializeWrapper=defaultMQAdminExt.examineBrokerClusterInfo();\n  HashMap<String,Set<String>> clusterAddr=clusterInfoSerializeWrapper.getClusterAddrTable();\n  Set<String> clusterNames=null;\n  long amount=!commandLine.hasOption('a') ? 50 : Long.parseLong(commandLine.getOptionValue('a').trim());\n  long size=!commandLine.hasOption('s') ? 128 : Long.parseLong(commandLine.getOptionValue('s').trim());\n  long interval=!commandLine.hasOption('i') ? 10 : Long.parseLong(commandLine.getOptionValue('i').trim());\n  boolean printAsTlog=commandLine.hasOption('p') && Boolean.parseBoolean(commandLine.getOptionValue('p').trim());\n  String machineRoom=!commandLine.hasOption('m') ? \"noname\" : commandLine.getOptionValue('m').trim();\n  if (commandLine.hasOption('c')) {\n    clusterNames=new TreeSet<String>();\n    clusterNames.add(commandLine.getOptionValue('c').trim());\n  }\n else {\n    clusterNames=clusterAddr.keySet();\n  }\n  if (!printAsTlog) {\n    System.out.printf(\"%-24s  %-24s  %-4s  %-8s  %-8s%n\",\"#Cluster Name\",\"#Broker Name\",\"#RT\",\"#successCount\",\"#failCount\");\n  }\n  while (true) {\n    for (    String clusterName : clusterNames) {\n      Set<String> brokerNames=clusterAddr.get(clusterName);\n      if (brokerNames == null) {\n        System.out.printf(\"cluster [%s] not exist\",clusterName);\n        break;\n      }\n      for (      String brokerName : brokerNames) {\n        Message msg=new Message(brokerName,getStringBySize(size).getBytes(MixAll.DEFAULT_CHARSET));\n        long start=0;\n        long end=0;\n        long elapsed=0;\n        int successCount=0;\n        int failCount=0;\n        for (int i=0; i < amount; i++) {\n          start=System.currentTimeMillis();\n          try {\n            producer.send(msg);\n            successCount++;\n            end=System.currentTimeMillis();\n          }\n catch (          Exception e) {\n            failCount++;\n            end=System.currentTimeMillis();\n          }\n          if (i != 0) {\n            elapsed+=end - start;\n          }\n        }\n        double rt=(double)elapsed / (amount - 1);\n        if (!printAsTlog) {\n          System.out.printf(\"%-24s  %-24s  %-8s  %-16s  %-16s%n\",clusterName,brokerName,String.format(\"%.2f\",rt),successCount,failCount);\n        }\n else {\n          System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n        }\n      }\n    }\n    Thread.sleep(interval * 1000);\n  }\n}\n catch (Exception e) {\n  throw new SubCommandException(this.getClass().getSimpleName() + \" command failed\",e);\n}\n finally {\n  defaultMQAdminExt.shutdown();\n  producer.shutdown();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 425,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4439,
        "startLineNumber" : 84,
        "startColumnNumber" : 110,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DefaultMQAdminExt defaultMQAdminExt=new DefaultMQAdminExt(rpcHook);\n  defaultMQAdminExt.setInstanceName(Long.toString(System.currentTimeMillis()));\n  DefaultMQProducer producer=new DefaultMQProducer(rpcHook);\n  producer.setProducerGroup(Long.toString(System.currentTimeMillis()));\n  try {\n    defaultMQAdminExt.start();\n    producer.start();\n    ClusterInfo clusterInfoSerializeWrapper=defaultMQAdminExt.examineBrokerClusterInfo();\n    HashMap<String,Set<String>> clusterAddr=clusterInfoSerializeWrapper.getClusterAddrTable();\n    Set<String> clusterNames=null;\n    long amount=!commandLine.hasOption('a') ? 50 : Long.parseLong(commandLine.getOptionValue('a').trim());\n    long size=!commandLine.hasOption('s') ? 128 : Long.parseLong(commandLine.getOptionValue('s').trim());\n    long interval=!commandLine.hasOption('i') ? 10 : Long.parseLong(commandLine.getOptionValue('i').trim());\n    boolean printAsTlog=commandLine.hasOption('p') && Boolean.parseBoolean(commandLine.getOptionValue('p').trim());\n    String machineRoom=!commandLine.hasOption('m') ? \"noname\" : commandLine.getOptionValue('m').trim();\n    if (commandLine.hasOption('c')) {\n      clusterNames=new TreeSet<String>();\n      clusterNames.add(commandLine.getOptionValue('c').trim());\n    }\n else {\n      clusterNames=clusterAddr.keySet();\n    }\n    if (!printAsTlog) {\n      System.out.printf(\"%-24s  %-24s  %-4s  %-8s  %-8s%n\",\"#Cluster Name\",\"#Broker Name\",\"#RT\",\"#successCount\",\"#failCount\");\n    }\n    while (true) {\n      for (      String clusterName : clusterNames) {\n        Set<String> brokerNames=clusterAddr.get(clusterName);\n        if (brokerNames == null) {\n          System.out.printf(\"cluster [%s] not exist\",clusterName);\n          break;\n        }\n        for (        String brokerName : brokerNames) {\n          Message msg=new Message(brokerName,getStringBySize(size).getBytes(MixAll.DEFAULT_CHARSET));\n          long start=0;\n          long end=0;\n          long elapsed=0;\n          int successCount=0;\n          int failCount=0;\n          for (int i=0; i < amount; i++) {\n            start=System.currentTimeMillis();\n            try {\n              producer.send(msg);\n              successCount++;\n              end=System.currentTimeMillis();\n            }\n catch (            Exception e) {\n              failCount++;\n              end=System.currentTimeMillis();\n            }\n            if (i != 0) {\n              elapsed+=end - start;\n            }\n          }\n          double rt=(double)elapsed / (amount - 1);\n          if (!printAsTlog) {\n            System.out.printf(\"%-24s  %-24s  %-8s  %-16s  %-16s%n\",clusterName,brokerName,String.format(\"%.2f\",rt),successCount,failCount);\n          }\n else {\n            System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n          }\n        }\n      }\n      Thread.sleep(interval * 1000);\n    }\n  }\n catch (  Exception e) {\n    throw new SubCommandException(this.getClass().getSimpleName() + \" command failed\",e);\n  }\n finally {\n    defaultMQAdminExt.shutdown();\n    producer.shutdown();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 464,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4559,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void execute(CommandLine commandLine,Options options,RPCHook rpcHook) throws SubCommandException {\n  DefaultMQAdminExt defaultMQAdminExt=new DefaultMQAdminExt(rpcHook);\n  defaultMQAdminExt.setInstanceName(Long.toString(System.currentTimeMillis()));\n  DefaultMQProducer producer=new DefaultMQProducer(rpcHook);\n  producer.setProducerGroup(Long.toString(System.currentTimeMillis()));\n  try {\n    defaultMQAdminExt.start();\n    producer.start();\n    ClusterInfo clusterInfoSerializeWrapper=defaultMQAdminExt.examineBrokerClusterInfo();\n    HashMap<String,Set<String>> clusterAddr=clusterInfoSerializeWrapper.getClusterAddrTable();\n    Set<String> clusterNames=null;\n    long amount=!commandLine.hasOption('a') ? 50 : Long.parseLong(commandLine.getOptionValue('a').trim());\n    long size=!commandLine.hasOption('s') ? 128 : Long.parseLong(commandLine.getOptionValue('s').trim());\n    long interval=!commandLine.hasOption('i') ? 10 : Long.parseLong(commandLine.getOptionValue('i').trim());\n    boolean printAsTlog=commandLine.hasOption('p') && Boolean.parseBoolean(commandLine.getOptionValue('p').trim());\n    String machineRoom=!commandLine.hasOption('m') ? \"noname\" : commandLine.getOptionValue('m').trim();\n    if (commandLine.hasOption('c')) {\n      clusterNames=new TreeSet<String>();\n      clusterNames.add(commandLine.getOptionValue('c').trim());\n    }\n else {\n      clusterNames=clusterAddr.keySet();\n    }\n    if (!printAsTlog) {\n      System.out.printf(\"%-24s  %-24s  %-4s  %-8s  %-8s%n\",\"#Cluster Name\",\"#Broker Name\",\"#RT\",\"#successCount\",\"#failCount\");\n    }\n    while (true) {\n      for (      String clusterName : clusterNames) {\n        Set<String> brokerNames=clusterAddr.get(clusterName);\n        if (brokerNames == null) {\n          System.out.printf(\"cluster [%s] not exist\",clusterName);\n          break;\n        }\n        for (        String brokerName : brokerNames) {\n          Message msg=new Message(brokerName,getStringBySize(size).getBytes(MixAll.DEFAULT_CHARSET));\n          long start=0;\n          long end=0;\n          long elapsed=0;\n          int successCount=0;\n          int failCount=0;\n          for (int i=0; i < amount; i++) {\n            start=System.currentTimeMillis();\n            try {\n              producer.send(msg);\n              successCount++;\n              end=System.currentTimeMillis();\n            }\n catch (            Exception e) {\n              failCount++;\n              end=System.currentTimeMillis();\n            }\n            if (i != 0) {\n              elapsed+=end - start;\n            }\n          }\n          double rt=(double)elapsed / (amount - 1);\n          if (!printAsTlog) {\n            System.out.printf(\"%-24s  %-24s  %-8s  %-16s  %-16s%n\",clusterName,brokerName,String.format(\"%.2f\",rt),successCount,failCount);\n          }\n else {\n            System.out.printf(\"%s\",String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP)));\n          }\n        }\n      }\n      Thread.sleep(interval * 1000);\n    }\n  }\n catch (  Exception e) {\n    throw new SubCommandException(this.getClass().getSimpleName() + \" command failed\",e);\n  }\n finally {\n    defaultMQAdminExt.shutdown();\n    producer.shutdown();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 484,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 174,
        "startColumnNumber" : 52,
        "endLineNumber" : 176,
        "endColumnNumber" : 89
      },
      "nodeContext" : "String.format(\"%s|%s|%s|%s|%s%n\",getCurTime(),machineRoom,clusterName,brokerName,new BigDecimal(rt).setScale(0,BigDecimal.ROUND_HALF_UP))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 174,
    "startColumnNumber" : 66,
    "endLineNumber" : 174,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}