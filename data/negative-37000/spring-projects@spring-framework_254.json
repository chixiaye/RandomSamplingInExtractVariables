{
  "id" : 254,
  "expression" : "TEXT.getBytes()",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-jms/src/test/java/org/springframework/jms/listener/adapter/MessageListenerAdapterTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TEXT.getBytes()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 79,
      "startColumnNumber" : 58,
      "endLineNumber" : 79,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 79,
        "startColumnNumber" : 58,
        "endLineNumber" : 79,
        "endColumnNumber" : 80
      },
      "nodeContext" : "TEXT.getBytes().length",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 79,
        "startColumnNumber" : 49,
        "endLineNumber" : 79,
        "endColumnNumber" : 81
      },
      "nodeContext" : "new Long(TEXT.getBytes().length)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 82
      },
      "nodeContext" : "given(bytesMessage.getBodyLength()).willReturn(new Long(TEXT.getBytes().length))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 83
      },
      "nodeContext" : "given(bytesMessage.getBodyLength()).willReturn(new Long(TEXT.getBytes().length));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 787,
        "startLineNumber" : 76,
        "startColumnNumber" : 79,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  BytesMessage bytesMessage=mock(BytesMessage.class);\n  given(bytesMessage.getBodyLength()).willReturn(new Long(TEXT.getBytes().length));\n  given(bytesMessage.readBytes(any(byte[].class))).willAnswer(new Answer<Integer>(){\n    @Override public Integer answer(    InvocationOnMock invocation) throws Throwable {\n      byte[] bytes=(byte[])invocation.getArguments()[0];\n      ByteArrayInputStream inputStream=new ByteArrayInputStream(TEXT.getBytes());\n      return inputStream.read(bytes);\n    }\n  }\n);\n  MessageContentsDelegate delegate=mock(MessageContentsDelegate.class);\n  MessageListenerAdapter adapter=new MessageListenerAdapter(delegate);\n  adapter.onMessage(bytesMessage);\n  verify(delegate).handleMessage(TEXT.getBytes());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 872,
        "startLineNumber" : 75,
        "startColumnNumber" : 1,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testWithMessageContentsDelegateForBytesMessage() throws Exception {\n  BytesMessage bytesMessage=mock(BytesMessage.class);\n  given(bytesMessage.getBodyLength()).willReturn(new Long(TEXT.getBytes().length));\n  given(bytesMessage.readBytes(any(byte[].class))).willAnswer(new Answer<Integer>(){\n    @Override public Integer answer(    InvocationOnMock invocation) throws Throwable {\n      byte[] bytes=(byte[])invocation.getArguments()[0];\n      ByteArrayInputStream inputStream=new ByteArrayInputStream(TEXT.getBytes());\n      return inputStream.read(bytes);\n    }\n  }\n);\n  MessageContentsDelegate delegate=mock(MessageContentsDelegate.class);\n  MessageListenerAdapter adapter=new MessageListenerAdapter(delegate);\n  adapter.onMessage(bytesMessage);\n  verify(delegate).handleMessage(TEXT.getBytes());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 83
      },
      "nodeContext" : "given(bytesMessage.getBodyLength()).willReturn(new Long(TEXT.getBytes().length));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "byte[]"
  }, {
    "nodeContext" : "TEXT.getBytes()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 94,
      "startColumnNumber" : 33,
      "endLineNumber" : 94,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "verify(delegate).handleMessage(TEXT.getBytes())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 50
      },
      "nodeContext" : "verify(delegate).handleMessage(TEXT.getBytes());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 787,
        "startLineNumber" : 76,
        "startColumnNumber" : 79,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  BytesMessage bytesMessage=mock(BytesMessage.class);\n  given(bytesMessage.getBodyLength()).willReturn(new Long(TEXT.getBytes().length));\n  given(bytesMessage.readBytes(any(byte[].class))).willAnswer(new Answer<Integer>(){\n    @Override public Integer answer(    InvocationOnMock invocation) throws Throwable {\n      byte[] bytes=(byte[])invocation.getArguments()[0];\n      ByteArrayInputStream inputStream=new ByteArrayInputStream(TEXT.getBytes());\n      return inputStream.read(bytes);\n    }\n  }\n);\n  MessageContentsDelegate delegate=mock(MessageContentsDelegate.class);\n  MessageListenerAdapter adapter=new MessageListenerAdapter(delegate);\n  adapter.onMessage(bytesMessage);\n  verify(delegate).handleMessage(TEXT.getBytes());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 872,
        "startLineNumber" : 75,
        "startColumnNumber" : 1,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testWithMessageContentsDelegateForBytesMessage() throws Exception {\n  BytesMessage bytesMessage=mock(BytesMessage.class);\n  given(bytesMessage.getBodyLength()).willReturn(new Long(TEXT.getBytes().length));\n  given(bytesMessage.readBytes(any(byte[].class))).willAnswer(new Answer<Integer>(){\n    @Override public Integer answer(    InvocationOnMock invocation) throws Throwable {\n      byte[] bytes=(byte[])invocation.getArguments()[0];\n      ByteArrayInputStream inputStream=new ByteArrayInputStream(TEXT.getBytes());\n      return inputStream.read(bytes);\n    }\n  }\n);\n  MessageContentsDelegate delegate=mock(MessageContentsDelegate.class);\n  MessageListenerAdapter adapter=new MessageListenerAdapter(delegate);\n  adapter.onMessage(bytesMessage);\n  verify(delegate).handleMessage(TEXT.getBytes());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 50
      },
      "nodeContext" : "verify(delegate).handleMessage(TEXT.getBytes());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 79,
    "startColumnNumber" : 58,
    "endLineNumber" : 79,
    "endColumnNumber" : 73
  }, {
    "charLength" : 15,
    "startLineNumber" : 94,
    "startColumnNumber" : 33,
    "endLineNumber" : 94,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}