{
  "id" : 409,
  "expression" : "reader",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/tasks/MySQLDatabaseExportHandler.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "reader",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 189,
      "startColumnNumber" : 38,
      "endLineNumber" : 189,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 189,
        "startColumnNumber" : 38,
        "endLineNumber" : 189,
        "endColumnNumber" : 55
      },
      "nodeContext" : "reader.readLine()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 189,
        "startColumnNumber" : 31,
        "endLineNumber" : 189,
        "endColumnNumber" : 55
      },
      "nodeContext" : "line=reader.readLine()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 189,
        "startColumnNumber" : 24,
        "endLineNumber" : 189,
        "endColumnNumber" : 56
      },
      "nodeContext" : "String line=reader.readLine();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 876,
        "startLineNumber" : 188,
        "startColumnNumber" : 31,
        "endLineNumber" : 205,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String line=reader.readLine();\n  if (line == null) {\n    break;\n  }\n  final Matcher matcher=DEFINER_PATTER.matcher(line);\n  if (matcher.find()) {\n    line=matcher.replaceFirst(\"\");\n  }\n  long currentTime=System.currentTimeMillis();\n  if (currentTime - prevStatusUpdateTime > 300) {\n    monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n    prevStatusUpdateTime=currentTime;\n  }\n  line=filterLine(line);\n  writer.write(line);\n  writer.newLine();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 887,
        "startLineNumber" : 188,
        "startColumnNumber" : 20,
        "endLineNumber" : 205,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (; ; ) {\n  String line=reader.readLine();\n  if (line == null) {\n    break;\n  }\n  final Matcher matcher=DEFINER_PATTER.matcher(line);\n  if (matcher.find()) {\n    line=matcher.replaceFirst(\"\");\n  }\n  long currentTime=System.currentTimeMillis();\n  if (currentTime - prevStatusUpdateTime > 300) {\n    monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n    prevStatusUpdateTime=currentTime;\n  }\n  line=filterLine(line);\n  writer.write(line);\n  writer.newLine();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 186,
        "startColumnNumber" : 74,
        "endLineNumber" : 207,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output,GeneralUtils.DEFAULT_ENCODING));\n  for (; ; ) {\n    String line=reader.readLine();\n    if (line == null) {\n      break;\n    }\n    final Matcher matcher=DEFINER_PATTER.matcher(line);\n    if (matcher.find()) {\n      line=matcher.replaceFirst(\"\");\n    }\n    long currentTime=System.currentTimeMillis();\n    if (currentTime - prevStatusUpdateTime > 300) {\n      monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n      prevStatusUpdateTime=currentTime;\n    }\n    line=filterLine(line);\n    writer.write(line);\n    writer.newLine();\n  }\n  writer.flush();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1148,
        "startLineNumber" : 186,
        "startColumnNumber" : 16,
        "endLineNumber" : 207,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try (OutputStream output=new FileOutputStream(outFile)){\n  BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output,GeneralUtils.DEFAULT_ENCODING));\n  for (; ; ) {\n    String line=reader.readLine();\n    if (line == null) {\n      break;\n    }\n    final Matcher matcher=DEFINER_PATTER.matcher(line);\n    if (matcher.find()) {\n      line=matcher.replaceFirst(\"\");\n    }\n    long currentTime=System.currentTimeMillis();\n    if (currentTime - prevStatusUpdateTime > 300) {\n      monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n      prevStatusUpdateTime=currentTime;\n    }\n    line=filterLine(line);\n    writer.write(line);\n    writer.newLine();\n  }\n  writer.flush();\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1378,
        "startLineNumber" : 182,
        "startColumnNumber" : 16,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  NumberFormat numberFormat=NumberFormat.getInstance();\n  LineNumberReader reader=new LineNumberReader(new InputStreamReader(input,GeneralUtils.DEFAULT_ENCODING));\n  try (OutputStream output=new FileOutputStream(outFile)){\n    BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output,GeneralUtils.DEFAULT_ENCODING));\n    for (; ; ) {\n      String line=reader.readLine();\n      if (line == null) {\n        break;\n      }\n      final Matcher matcher=DEFINER_PATTER.matcher(line);\n      if (matcher.find()) {\n        line=matcher.replaceFirst(\"\");\n      }\n      long currentTime=System.currentTimeMillis();\n      if (currentTime - prevStatusUpdateTime > 300) {\n        monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n        prevStatusUpdateTime=currentTime;\n      }\n      line=filterLine(line);\n      writer.write(line);\n      writer.newLine();\n    }\n    writer.flush();\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1438,
        "startLineNumber" : 182,
        "startColumnNumber" : 12,
        "endLineNumber" : 210,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  NumberFormat numberFormat=NumberFormat.getInstance();\n  LineNumberReader reader=new LineNumberReader(new InputStreamReader(input,GeneralUtils.DEFAULT_ENCODING));\n  try (OutputStream output=new FileOutputStream(outFile)){\n    BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output,GeneralUtils.DEFAULT_ENCODING));\n    for (; ; ) {\n      String line=reader.readLine();\n      if (line == null) {\n        break;\n      }\n      final Matcher matcher=DEFINER_PATTER.matcher(line);\n      if (matcher.find()) {\n        line=matcher.replaceFirst(\"\");\n      }\n      long currentTime=System.currentTimeMillis();\n      if (currentTime - prevStatusUpdateTime > 300) {\n        monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n        prevStatusUpdateTime=currentTime;\n      }\n      line=filterLine(line);\n      writer.write(line);\n      writer.newLine();\n    }\n    writer.flush();\n  }\n }\n  finally {\n  monitor.done();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 144,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1560,
        "startLineNumber" : 179,
        "startColumnNumber" : 49,
        "endLineNumber" : 211,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  monitor.beginTask(\"Export database\",100);\n  long prevStatusUpdateTime=0;\n  try {\n    NumberFormat numberFormat=NumberFormat.getInstance();\n    LineNumberReader reader=new LineNumberReader(new InputStreamReader(input,GeneralUtils.DEFAULT_ENCODING));\n    try (OutputStream output=new FileOutputStream(outFile)){\n      BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output,GeneralUtils.DEFAULT_ENCODING));\n      for (; ; ) {\n        String line=reader.readLine();\n        if (line == null) {\n          break;\n        }\n        final Matcher matcher=DEFINER_PATTER.matcher(line);\n        if (matcher.find()) {\n          line=matcher.replaceFirst(\"\");\n        }\n        long currentTime=System.currentTimeMillis();\n        if (currentTime - prevStatusUpdateTime > 300) {\n          monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n          prevStatusUpdateTime=currentTime;\n        }\n        line=filterLine(line);\n        writer.write(line);\n        writer.newLine();\n      }\n      writer.flush();\n    }\n   }\n  finally {\n    monitor.done();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1619,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 211,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void runDump() throws IOException {\n  monitor.beginTask(\"Export database\",100);\n  long prevStatusUpdateTime=0;\n  try {\n    NumberFormat numberFormat=NumberFormat.getInstance();\n    LineNumberReader reader=new LineNumberReader(new InputStreamReader(input,GeneralUtils.DEFAULT_ENCODING));\n    try (OutputStream output=new FileOutputStream(outFile)){\n      BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output,GeneralUtils.DEFAULT_ENCODING));\n      for (; ; ) {\n        String line=reader.readLine();\n        if (line == null) {\n          break;\n        }\n        final Matcher matcher=DEFINER_PATTER.matcher(line);\n        if (matcher.find()) {\n          line=matcher.replaceFirst(\"\");\n        }\n        long currentTime=System.currentTimeMillis();\n        if (currentTime - prevStatusUpdateTime > 300) {\n          monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n          prevStatusUpdateTime=currentTime;\n        }\n        line=filterLine(line);\n        writer.write(line);\n        writer.newLine();\n      }\n      writer.flush();\n    }\n   }\n  finally {\n    monitor.done();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 189,
        "startColumnNumber" : 24,
        "endLineNumber" : 189,
        "endColumnNumber" : 56
      },
      "nodeContext" : "String line=reader.readLine();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.LineNumberReader"
  }, {
    "nodeContext" : "reader",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 199,
      "startColumnNumber" : 75,
      "endLineNumber" : 199,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 199,
        "startColumnNumber" : 75,
        "endLineNumber" : 199,
        "endColumnNumber" : 97
      },
      "nodeContext" : "reader.getLineNumber()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 199,
        "startColumnNumber" : 55,
        "endLineNumber" : 199,
        "endColumnNumber" : 98
      },
      "nodeContext" : "numberFormat.format(reader.getLineNumber())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 199,
        "startColumnNumber" : 44,
        "endLineNumber" : 199,
        "endColumnNumber" : 109
      },
      "nodeContext" : "\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 199,
        "startColumnNumber" : 28,
        "endLineNumber" : 199,
        "endColumnNumber" : 110
      },
      "nodeContext" : "monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 199,
        "startColumnNumber" : 28,
        "endLineNumber" : 199,
        "endColumnNumber" : 111
      },
      "nodeContext" : "monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 198,
        "startColumnNumber" : 70,
        "endLineNumber" : 201,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n  prevStatusUpdateTime=currentTime;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 198,
        "startColumnNumber" : 24,
        "endLineNumber" : 201,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (currentTime - prevStatusUpdateTime > 300) {\n  monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n  prevStatusUpdateTime=currentTime;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 876,
        "startLineNumber" : 188,
        "startColumnNumber" : 31,
        "endLineNumber" : 205,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String line=reader.readLine();\n  if (line == null) {\n    break;\n  }\n  final Matcher matcher=DEFINER_PATTER.matcher(line);\n  if (matcher.find()) {\n    line=matcher.replaceFirst(\"\");\n  }\n  long currentTime=System.currentTimeMillis();\n  if (currentTime - prevStatusUpdateTime > 300) {\n    monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n    prevStatusUpdateTime=currentTime;\n  }\n  line=filterLine(line);\n  writer.write(line);\n  writer.newLine();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 887,
        "startLineNumber" : 188,
        "startColumnNumber" : 20,
        "endLineNumber" : 205,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (; ; ) {\n  String line=reader.readLine();\n  if (line == null) {\n    break;\n  }\n  final Matcher matcher=DEFINER_PATTER.matcher(line);\n  if (matcher.find()) {\n    line=matcher.replaceFirst(\"\");\n  }\n  long currentTime=System.currentTimeMillis();\n  if (currentTime - prevStatusUpdateTime > 300) {\n    monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n    prevStatusUpdateTime=currentTime;\n  }\n  line=filterLine(line);\n  writer.write(line);\n  writer.newLine();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 186,
        "startColumnNumber" : 74,
        "endLineNumber" : 207,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output,GeneralUtils.DEFAULT_ENCODING));\n  for (; ; ) {\n    String line=reader.readLine();\n    if (line == null) {\n      break;\n    }\n    final Matcher matcher=DEFINER_PATTER.matcher(line);\n    if (matcher.find()) {\n      line=matcher.replaceFirst(\"\");\n    }\n    long currentTime=System.currentTimeMillis();\n    if (currentTime - prevStatusUpdateTime > 300) {\n      monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n      prevStatusUpdateTime=currentTime;\n    }\n    line=filterLine(line);\n    writer.write(line);\n    writer.newLine();\n  }\n  writer.flush();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1148,
        "startLineNumber" : 186,
        "startColumnNumber" : 16,
        "endLineNumber" : 207,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try (OutputStream output=new FileOutputStream(outFile)){\n  BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output,GeneralUtils.DEFAULT_ENCODING));\n  for (; ; ) {\n    String line=reader.readLine();\n    if (line == null) {\n      break;\n    }\n    final Matcher matcher=DEFINER_PATTER.matcher(line);\n    if (matcher.find()) {\n      line=matcher.replaceFirst(\"\");\n    }\n    long currentTime=System.currentTimeMillis();\n    if (currentTime - prevStatusUpdateTime > 300) {\n      monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n      prevStatusUpdateTime=currentTime;\n    }\n    line=filterLine(line);\n    writer.write(line);\n    writer.newLine();\n  }\n  writer.flush();\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1378,
        "startLineNumber" : 182,
        "startColumnNumber" : 16,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  NumberFormat numberFormat=NumberFormat.getInstance();\n  LineNumberReader reader=new LineNumberReader(new InputStreamReader(input,GeneralUtils.DEFAULT_ENCODING));\n  try (OutputStream output=new FileOutputStream(outFile)){\n    BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output,GeneralUtils.DEFAULT_ENCODING));\n    for (; ; ) {\n      String line=reader.readLine();\n      if (line == null) {\n        break;\n      }\n      final Matcher matcher=DEFINER_PATTER.matcher(line);\n      if (matcher.find()) {\n        line=matcher.replaceFirst(\"\");\n      }\n      long currentTime=System.currentTimeMillis();\n      if (currentTime - prevStatusUpdateTime > 300) {\n        monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n        prevStatusUpdateTime=currentTime;\n      }\n      line=filterLine(line);\n      writer.write(line);\n      writer.newLine();\n    }\n    writer.flush();\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1438,
        "startLineNumber" : 182,
        "startColumnNumber" : 12,
        "endLineNumber" : 210,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  NumberFormat numberFormat=NumberFormat.getInstance();\n  LineNumberReader reader=new LineNumberReader(new InputStreamReader(input,GeneralUtils.DEFAULT_ENCODING));\n  try (OutputStream output=new FileOutputStream(outFile)){\n    BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output,GeneralUtils.DEFAULT_ENCODING));\n    for (; ; ) {\n      String line=reader.readLine();\n      if (line == null) {\n        break;\n      }\n      final Matcher matcher=DEFINER_PATTER.matcher(line);\n      if (matcher.find()) {\n        line=matcher.replaceFirst(\"\");\n      }\n      long currentTime=System.currentTimeMillis();\n      if (currentTime - prevStatusUpdateTime > 300) {\n        monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n        prevStatusUpdateTime=currentTime;\n      }\n      line=filterLine(line);\n      writer.write(line);\n      writer.newLine();\n    }\n    writer.flush();\n  }\n }\n  finally {\n  monitor.done();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 144,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1560,
        "startLineNumber" : 179,
        "startColumnNumber" : 49,
        "endLineNumber" : 211,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  monitor.beginTask(\"Export database\",100);\n  long prevStatusUpdateTime=0;\n  try {\n    NumberFormat numberFormat=NumberFormat.getInstance();\n    LineNumberReader reader=new LineNumberReader(new InputStreamReader(input,GeneralUtils.DEFAULT_ENCODING));\n    try (OutputStream output=new FileOutputStream(outFile)){\n      BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output,GeneralUtils.DEFAULT_ENCODING));\n      for (; ; ) {\n        String line=reader.readLine();\n        if (line == null) {\n          break;\n        }\n        final Matcher matcher=DEFINER_PATTER.matcher(line);\n        if (matcher.find()) {\n          line=matcher.replaceFirst(\"\");\n        }\n        long currentTime=System.currentTimeMillis();\n        if (currentTime - prevStatusUpdateTime > 300) {\n          monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n          prevStatusUpdateTime=currentTime;\n        }\n        line=filterLine(line);\n        writer.write(line);\n        writer.newLine();\n      }\n      writer.flush();\n    }\n   }\n  finally {\n    monitor.done();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1619,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 211,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void runDump() throws IOException {\n  monitor.beginTask(\"Export database\",100);\n  long prevStatusUpdateTime=0;\n  try {\n    NumberFormat numberFormat=NumberFormat.getInstance();\n    LineNumberReader reader=new LineNumberReader(new InputStreamReader(input,GeneralUtils.DEFAULT_ENCODING));\n    try (OutputStream output=new FileOutputStream(outFile)){\n      BufferedWriter writer=new BufferedWriter(new OutputStreamWriter(output,GeneralUtils.DEFAULT_ENCODING));\n      for (; ; ) {\n        String line=reader.readLine();\n        if (line == null) {\n          break;\n        }\n        final Matcher matcher=DEFINER_PATTER.matcher(line);\n        if (matcher.find()) {\n          line=matcher.replaceFirst(\"\");\n        }\n        long currentTime=System.currentTimeMillis();\n        if (currentTime - prevStatusUpdateTime > 300) {\n          monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n          prevStatusUpdateTime=currentTime;\n        }\n        line=filterLine(line);\n        writer.write(line);\n        writer.newLine();\n      }\n      writer.flush();\n    }\n   }\n  finally {\n    monitor.done();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 199,
        "startColumnNumber" : 28,
        "endLineNumber" : 199,
        "endColumnNumber" : 111
      },
      "nodeContext" : "monitor.subTask(\"Saved \" + numberFormat.format(reader.getLineNumber()) + \" lines\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.io.LineNumberReader"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 189,
    "startColumnNumber" : 38,
    "endLineNumber" : 189,
    "endColumnNumber" : 44
  }, {
    "charLength" : 6,
    "startLineNumber" : 199,
    "startColumnNumber" : 75,
    "endLineNumber" : 199,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  } ]
}