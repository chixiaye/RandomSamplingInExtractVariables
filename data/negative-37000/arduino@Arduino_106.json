{
  "id" : 106,
  "expression" : "System.out",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/packages/UserLibrary.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 116,
      "startColumnNumber" : 10,
      "endLineNumber" : 116,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 116,
        "startColumnNumber" : 10,
        "endLineNumber" : 116,
        "endColumnNumber" : 123
      },
      "nodeContext" : "System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 116,
        "startColumnNumber" : 10,
        "endLineNumber" : 116,
        "endColumnNumber" : 124
      },
      "nodeContext" : "System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 115,
        "startColumnNumber" : 48,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\");\n  continue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (FileUtils.isSCCSOrHiddenFile(file)) {\n  System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\");\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 114,
        "startColumnNumber" : 30,
        "endLineNumber" : 119,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (FileUtils.isSCCSOrHiddenFile(file)) {\n    System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\");\n    continue;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 119,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (file.isDirectory()) {\n  if (FileUtils.isSCCSOrHiddenFile(file)) {\n    System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\");\n    continue;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 113,
        "startColumnNumber" : 44,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (file.isDirectory()) {\n    if (FileUtils.isSCCSOrHiddenFile(file)) {\n      System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\");\n      continue;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 292,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (File file : libFolder.listFiles()) {\n  if (file.isDirectory()) {\n    if (FileUtils.isSCCSOrHiddenFile(file)) {\n      System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\");\n      continue;\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3616,
        "startLineNumber" : 67,
        "startColumnNumber" : 70,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File propertiesFile=new File(libFolder,\"library.properties\");\n  PreferencesMap properties=new PreferencesMap();\n  properties.load(propertiesFile);\n  if (!properties.containsKey(\"maintainer\") && properties.containsKey(\"email\")) {\n    properties.put(\"maintainer\",properties.get(\"email\"));\n  }\n  File archFolder=new File(libFolder,\"arch\");\n  if (archFolder.isDirectory())   throw new IOException(\"'arch' folder is no longer supported! See \" + \"http://goo.gl/gfFJzU for more information\");\n  for (  String p : MANDATORY_PROPERTIES)   if (!properties.containsKey(p))   throw new IOException(\"Missing '\" + p + \"' from library\");\n  LibraryLayout layout;\n  File srcFolder=new File(libFolder,\"src\");\n  if (srcFolder.exists() && srcFolder.isDirectory()) {\n    layout=LibraryLayout.RECURSIVE;\n    File utilFolder=new File(libFolder,\"utility\");\n    if (utilFolder.exists() && utilFolder.isDirectory()) {\n      throw new IOException(\"Library can't use both 'src' and 'utility' folders.\");\n    }\n  }\n else {\n    layout=LibraryLayout.FLAT;\n  }\n  for (  File file : libFolder.listFiles()) {\n    if (file.isDirectory()) {\n      if (FileUtils.isSCCSOrHiddenFile(file)) {\n        System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\");\n        continue;\n      }\n    }\n  }\n  String architectures=properties.get(\"architectures\");\n  if (architectures == null)   architectures=\"*\";\n  List<String> archs=new ArrayList<String>();\n  for (  String arch : architectures.split(\",\"))   archs.add(arch.trim());\n  String category=properties.get(\"category\");\n  if (category == null)   category=\"Uncategorized\";\n  if (!CATEGORIES.contains(category)) {\n    category=\"Uncategorized\";\n    System.out.println(\"WARNING: Category '\" + category + \"' in library \"+ properties.get(\"name\")+ \" is not valid. Setting to 'Uncategorized'\");\n  }\n  String license=properties.get(\"license\");\n  if (license == null) {\n    license=\"Unspecified\";\n  }\n  String types=properties.get(\"types\");\n  if (types == null) {\n    types=\"Contributed\";\n  }\n  List<String> typesList=new LinkedList<String>();\n  for (  String type : types.split(\",\")) {\n    typesList.add(type.trim());\n  }\n  UserLibrary res=new UserLibrary();\n  res.setInstalledFolder(libFolder);\n  res.setInstalled(true);\n  res.name=properties.get(\"name\").trim();\n  res.version=properties.get(\"version\").trim();\n  res.author=properties.get(\"author\").trim();\n  res.maintainer=properties.get(\"maintainer\").trim();\n  res.sentence=properties.get(\"sentence\").trim();\n  res.paragraph=properties.get(\"paragraph\").trim();\n  res.website=properties.get(\"url\").trim();\n  res.category=category.trim();\n  res.license=license.trim();\n  res.architectures=archs;\n  res.layout=layout;\n  res.declaredTypes=typesList;\n  return res;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3684,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static UserLibrary create(File libFolder) throws IOException {\n  File propertiesFile=new File(libFolder,\"library.properties\");\n  PreferencesMap properties=new PreferencesMap();\n  properties.load(propertiesFile);\n  if (!properties.containsKey(\"maintainer\") && properties.containsKey(\"email\")) {\n    properties.put(\"maintainer\",properties.get(\"email\"));\n  }\n  File archFolder=new File(libFolder,\"arch\");\n  if (archFolder.isDirectory())   throw new IOException(\"'arch' folder is no longer supported! See \" + \"http://goo.gl/gfFJzU for more information\");\n  for (  String p : MANDATORY_PROPERTIES)   if (!properties.containsKey(p))   throw new IOException(\"Missing '\" + p + \"' from library\");\n  LibraryLayout layout;\n  File srcFolder=new File(libFolder,\"src\");\n  if (srcFolder.exists() && srcFolder.isDirectory()) {\n    layout=LibraryLayout.RECURSIVE;\n    File utilFolder=new File(libFolder,\"utility\");\n    if (utilFolder.exists() && utilFolder.isDirectory()) {\n      throw new IOException(\"Library can't use both 'src' and 'utility' folders.\");\n    }\n  }\n else {\n    layout=LibraryLayout.FLAT;\n  }\n  for (  File file : libFolder.listFiles()) {\n    if (file.isDirectory()) {\n      if (FileUtils.isSCCSOrHiddenFile(file)) {\n        System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\");\n        continue;\n      }\n    }\n  }\n  String architectures=properties.get(\"architectures\");\n  if (architectures == null)   architectures=\"*\";\n  List<String> archs=new ArrayList<String>();\n  for (  String arch : architectures.split(\",\"))   archs.add(arch.trim());\n  String category=properties.get(\"category\");\n  if (category == null)   category=\"Uncategorized\";\n  if (!CATEGORIES.contains(category)) {\n    category=\"Uncategorized\";\n    System.out.println(\"WARNING: Category '\" + category + \"' in library \"+ properties.get(\"name\")+ \" is not valid. Setting to 'Uncategorized'\");\n  }\n  String license=properties.get(\"license\");\n  if (license == null) {\n    license=\"Unspecified\";\n  }\n  String types=properties.get(\"types\");\n  if (types == null) {\n    types=\"Contributed\";\n  }\n  List<String> typesList=new LinkedList<String>();\n  for (  String type : types.split(\",\")) {\n    typesList.add(type.trim());\n  }\n  UserLibrary res=new UserLibrary();\n  res.setInstalledFolder(libFolder);\n  res.setInstalled(true);\n  res.name=properties.get(\"name\").trim();\n  res.version=properties.get(\"version\").trim();\n  res.author=properties.get(\"author\").trim();\n  res.maintainer=properties.get(\"maintainer\").trim();\n  res.sentence=properties.get(\"sentence\").trim();\n  res.paragraph=properties.get(\"paragraph\").trim();\n  res.website=properties.get(\"url\").trim();\n  res.category=category.trim();\n  res.license=license.trim();\n  res.architectures=archs;\n  res.layout=layout;\n  res.declaredTypes=typesList;\n  return res;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 485,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 116,
        "startColumnNumber" : 10,
        "endLineNumber" : 116,
        "endColumnNumber" : 124
      },
      "nodeContext" : "System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  }, {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 135,
      "startColumnNumber" : 6,
      "endLineNumber" : 135,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 135,
        "startColumnNumber" : 6,
        "endLineNumber" : 136,
        "endColumnNumber" : 83
      },
      "nodeContext" : "System.out.println(\"WARNING: Category '\" + category + \"' in library \"+ properties.get(\"name\")+ \" is not valid. Setting to 'Uncategorized'\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 135,
        "startColumnNumber" : 6,
        "endLineNumber" : 136,
        "endColumnNumber" : 84
      },
      "nodeContext" : "System.out.println(\"WARNING: Category '\" + category + \"' in library \"+ properties.get(\"name\")+ \" is not valid. Setting to 'Uncategorized'\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 133,
        "startColumnNumber" : 40,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  category=\"Uncategorized\";\n  System.out.println(\"WARNING: Category '\" + category + \"' in library \"+ properties.get(\"name\")+ \" is not valid. Setting to 'Uncategorized'\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!CATEGORIES.contains(category)) {\n  category=\"Uncategorized\";\n  System.out.println(\"WARNING: Category '\" + category + \"' in library \"+ properties.get(\"name\")+ \" is not valid. Setting to 'Uncategorized'\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3616,
        "startLineNumber" : 67,
        "startColumnNumber" : 70,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File propertiesFile=new File(libFolder,\"library.properties\");\n  PreferencesMap properties=new PreferencesMap();\n  properties.load(propertiesFile);\n  if (!properties.containsKey(\"maintainer\") && properties.containsKey(\"email\")) {\n    properties.put(\"maintainer\",properties.get(\"email\"));\n  }\n  File archFolder=new File(libFolder,\"arch\");\n  if (archFolder.isDirectory())   throw new IOException(\"'arch' folder is no longer supported! See \" + \"http://goo.gl/gfFJzU for more information\");\n  for (  String p : MANDATORY_PROPERTIES)   if (!properties.containsKey(p))   throw new IOException(\"Missing '\" + p + \"' from library\");\n  LibraryLayout layout;\n  File srcFolder=new File(libFolder,\"src\");\n  if (srcFolder.exists() && srcFolder.isDirectory()) {\n    layout=LibraryLayout.RECURSIVE;\n    File utilFolder=new File(libFolder,\"utility\");\n    if (utilFolder.exists() && utilFolder.isDirectory()) {\n      throw new IOException(\"Library can't use both 'src' and 'utility' folders.\");\n    }\n  }\n else {\n    layout=LibraryLayout.FLAT;\n  }\n  for (  File file : libFolder.listFiles()) {\n    if (file.isDirectory()) {\n      if (FileUtils.isSCCSOrHiddenFile(file)) {\n        System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\");\n        continue;\n      }\n    }\n  }\n  String architectures=properties.get(\"architectures\");\n  if (architectures == null)   architectures=\"*\";\n  List<String> archs=new ArrayList<String>();\n  for (  String arch : architectures.split(\",\"))   archs.add(arch.trim());\n  String category=properties.get(\"category\");\n  if (category == null)   category=\"Uncategorized\";\n  if (!CATEGORIES.contains(category)) {\n    category=\"Uncategorized\";\n    System.out.println(\"WARNING: Category '\" + category + \"' in library \"+ properties.get(\"name\")+ \" is not valid. Setting to 'Uncategorized'\");\n  }\n  String license=properties.get(\"license\");\n  if (license == null) {\n    license=\"Unspecified\";\n  }\n  String types=properties.get(\"types\");\n  if (types == null) {\n    types=\"Contributed\";\n  }\n  List<String> typesList=new LinkedList<String>();\n  for (  String type : types.split(\",\")) {\n    typesList.add(type.trim());\n  }\n  UserLibrary res=new UserLibrary();\n  res.setInstalledFolder(libFolder);\n  res.setInstalled(true);\n  res.name=properties.get(\"name\").trim();\n  res.version=properties.get(\"version\").trim();\n  res.author=properties.get(\"author\").trim();\n  res.maintainer=properties.get(\"maintainer\").trim();\n  res.sentence=properties.get(\"sentence\").trim();\n  res.paragraph=properties.get(\"paragraph\").trim();\n  res.website=properties.get(\"url\").trim();\n  res.category=category.trim();\n  res.license=license.trim();\n  res.architectures=archs;\n  res.layout=layout;\n  res.declaredTypes=typesList;\n  return res;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 473,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3684,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static UserLibrary create(File libFolder) throws IOException {\n  File propertiesFile=new File(libFolder,\"library.properties\");\n  PreferencesMap properties=new PreferencesMap();\n  properties.load(propertiesFile);\n  if (!properties.containsKey(\"maintainer\") && properties.containsKey(\"email\")) {\n    properties.put(\"maintainer\",properties.get(\"email\"));\n  }\n  File archFolder=new File(libFolder,\"arch\");\n  if (archFolder.isDirectory())   throw new IOException(\"'arch' folder is no longer supported! See \" + \"http://goo.gl/gfFJzU for more information\");\n  for (  String p : MANDATORY_PROPERTIES)   if (!properties.containsKey(p))   throw new IOException(\"Missing '\" + p + \"' from library\");\n  LibraryLayout layout;\n  File srcFolder=new File(libFolder,\"src\");\n  if (srcFolder.exists() && srcFolder.isDirectory()) {\n    layout=LibraryLayout.RECURSIVE;\n    File utilFolder=new File(libFolder,\"utility\");\n    if (utilFolder.exists() && utilFolder.isDirectory()) {\n      throw new IOException(\"Library can't use both 'src' and 'utility' folders.\");\n    }\n  }\n else {\n    layout=LibraryLayout.FLAT;\n  }\n  for (  File file : libFolder.listFiles()) {\n    if (file.isDirectory()) {\n      if (FileUtils.isSCCSOrHiddenFile(file)) {\n        System.out.println(\"WARNING: Spurious \" + file.getName() + \" folder in '\"+ properties.get(\"name\")+ \"' library\");\n        continue;\n      }\n    }\n  }\n  String architectures=properties.get(\"architectures\");\n  if (architectures == null)   architectures=\"*\";\n  List<String> archs=new ArrayList<String>();\n  for (  String arch : architectures.split(\",\"))   archs.add(arch.trim());\n  String category=properties.get(\"category\");\n  if (category == null)   category=\"Uncategorized\";\n  if (!CATEGORIES.contains(category)) {\n    category=\"Uncategorized\";\n    System.out.println(\"WARNING: Category '\" + category + \"' in library \"+ properties.get(\"name\")+ \" is not valid. Setting to 'Uncategorized'\");\n  }\n  String license=properties.get(\"license\");\n  if (license == null) {\n    license=\"Unspecified\";\n  }\n  String types=properties.get(\"types\");\n  if (types == null) {\n    types=\"Contributed\";\n  }\n  List<String> typesList=new LinkedList<String>();\n  for (  String type : types.split(\",\")) {\n    typesList.add(type.trim());\n  }\n  UserLibrary res=new UserLibrary();\n  res.setInstalledFolder(libFolder);\n  res.setInstalled(true);\n  res.name=properties.get(\"name\").trim();\n  res.version=properties.get(\"version\").trim();\n  res.author=properties.get(\"author\").trim();\n  res.maintainer=properties.get(\"maintainer\").trim();\n  res.sentence=properties.get(\"sentence\").trim();\n  res.paragraph=properties.get(\"paragraph\").trim();\n  res.website=properties.get(\"url\").trim();\n  res.category=category.trim();\n  res.license=license.trim();\n  res.architectures=archs;\n  res.layout=layout;\n  res.declaredTypes=typesList;\n  return res;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 485,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 135,
        "startColumnNumber" : 6,
        "endLineNumber" : 136,
        "endColumnNumber" : 83
      },
      "nodeContext" : "System.out.println(\"WARNING: Category '\" + category + \"' in library \"+ properties.get(\"name\")+ \" is not valid. Setting to 'Uncategorized'\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 116,
    "startColumnNumber" : 10,
    "endLineNumber" : 116,
    "endColumnNumber" : 20
  }, {
    "charLength" : 10,
    "startLineNumber" : 135,
    "startColumnNumber" : 6,
    "endLineNumber" : 135,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}