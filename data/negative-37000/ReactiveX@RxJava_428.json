{
  "id" : 428,
  "expression" : "o",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableSkipLastTimedTest.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 42,
      "startColumnNumber" : 25,
      "endLineNumber" : 42,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 27
      },
      "nodeContext" : "result.subscribe(o)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 28
      },
      "nodeContext" : "result.subscribe(o);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 32,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastTimed(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 28
      },
      "nodeContext" : "result.subscribe(o);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Observer<java.lang.Object>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 57,
      "startColumnNumber" : 34,
      "endLineNumber" : 57,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 57,
        "startColumnNumber" : 26,
        "endLineNumber" : 57,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inOrder(o)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inOrder=inOrder(o)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 37
      },
      "nodeContext" : "InOrder inOrder=inOrder(o);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 32,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastTimed(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 37
      },
      "nodeContext" : "InOrder inOrder=inOrder(o);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Observer<java.lang.Object>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 58,
      "startColumnNumber" : 23,
      "endLineNumber" : 58,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 25
      },
      "nodeContext" : "inOrder.verify(o)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 35
      },
      "nodeContext" : "inOrder.verify(o).onNext(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inOrder.verify(o).onNext(1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 32,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastTimed(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inOrder.verify(o).onNext(1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Observer<java.lang.Object>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 59,
      "startColumnNumber" : 23,
      "endLineNumber" : 59,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 25
      },
      "nodeContext" : "inOrder.verify(o)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 35
      },
      "nodeContext" : "inOrder.verify(o).onNext(2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inOrder.verify(o).onNext(2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 32,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastTimed(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inOrder.verify(o).onNext(2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Observer<java.lang.Object>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 60,
      "startColumnNumber" : 23,
      "endLineNumber" : 60,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 25
      },
      "nodeContext" : "inOrder.verify(o)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 35
      },
      "nodeContext" : "inOrder.verify(o).onNext(3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inOrder.verify(o).onNext(3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 32,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastTimed(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inOrder.verify(o).onNext(3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Observer<java.lang.Object>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 61,
      "startColumnNumber" : 23,
      "endLineNumber" : 61,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 34
      },
      "nodeContext" : "inOrder.verify(o,never())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 44
      },
      "nodeContext" : "inOrder.verify(o,never()).onNext(4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 45
      },
      "nodeContext" : "inOrder.verify(o,never()).onNext(4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 32,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastTimed(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 45
      },
      "nodeContext" : "inOrder.verify(o,never()).onNext(4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Observer<java.lang.Object>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 62,
      "startColumnNumber" : 23,
      "endLineNumber" : 62,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 34
      },
      "nodeContext" : "inOrder.verify(o,never())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 44
      },
      "nodeContext" : "inOrder.verify(o,never()).onNext(5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 45
      },
      "nodeContext" : "inOrder.verify(o,never()).onNext(5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 32,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastTimed(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 45
      },
      "nodeContext" : "inOrder.verify(o,never()).onNext(5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Observer<java.lang.Object>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 63,
      "startColumnNumber" : 23,
      "endLineNumber" : 63,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 34
      },
      "nodeContext" : "inOrder.verify(o,never())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 44
      },
      "nodeContext" : "inOrder.verify(o,never()).onNext(6)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 45
      },
      "nodeContext" : "inOrder.verify(o,never()).onNext(6);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 32,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastTimed(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 45
      },
      "nodeContext" : "inOrder.verify(o,never()).onNext(6);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Observer<java.lang.Object>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 64,
      "startColumnNumber" : 23,
      "endLineNumber" : 64,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 25
      },
      "nodeContext" : "inOrder.verify(o)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 38
      },
      "nodeContext" : "inOrder.verify(o).onComplete()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 39
      },
      "nodeContext" : "inOrder.verify(o).onComplete();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 32,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastTimed(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 39
      },
      "nodeContext" : "inOrder.verify(o).onComplete();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Observer<java.lang.Object>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 67,
      "startColumnNumber" : 15,
      "endLineNumber" : 67,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 26
      },
      "nodeContext" : "verify(o,never())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 56
      },
      "nodeContext" : "verify(o,never()).onError(any(Throwable.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 57
      },
      "nodeContext" : "verify(o,never()).onError(any(Throwable.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 32,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSkipLastTimed(){\n  TestScheduler scheduler=new TestScheduler();\n  PublishSubject<Integer> source=PublishSubject.create();\n  Observable<Integer> result=source.skipLast(1000,TimeUnit.MILLISECONDS,scheduler);\n  Observer<Object> o=TestHelper.mockObserver();\n  result.subscribe(o);\n  source.onNext(1);\n  source.onNext(2);\n  source.onNext(3);\n  scheduler.advanceTimeBy(500,TimeUnit.MILLISECONDS);\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  scheduler.advanceTimeBy(950,TimeUnit.MILLISECONDS);\n  source.onComplete();\n  InOrder inOrder=inOrder(o);\n  inOrder.verify(o).onNext(1);\n  inOrder.verify(o).onNext(2);\n  inOrder.verify(o).onNext(3);\n  inOrder.verify(o,never()).onNext(4);\n  inOrder.verify(o,never()).onNext(5);\n  inOrder.verify(o,never()).onNext(6);\n  inOrder.verify(o).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(o,never()).onError(any(Throwable.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 57
      },
      "nodeContext" : "verify(o,never()).onError(any(Throwable.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Observer<java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 42,
    "startColumnNumber" : 25,
    "endLineNumber" : 42,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 57,
    "startColumnNumber" : 34,
    "endLineNumber" : 57,
    "endColumnNumber" : 35
  }, {
    "charLength" : 1,
    "startLineNumber" : 58,
    "startColumnNumber" : 23,
    "endLineNumber" : 58,
    "endColumnNumber" : 24
  }, {
    "charLength" : 1,
    "startLineNumber" : 59,
    "startColumnNumber" : 23,
    "endLineNumber" : 59,
    "endColumnNumber" : 24
  }, {
    "charLength" : 1,
    "startLineNumber" : 60,
    "startColumnNumber" : 23,
    "endLineNumber" : 60,
    "endColumnNumber" : 24
  }, {
    "charLength" : 1,
    "startLineNumber" : 61,
    "startColumnNumber" : 23,
    "endLineNumber" : 61,
    "endColumnNumber" : 24
  }, {
    "charLength" : 1,
    "startLineNumber" : 62,
    "startColumnNumber" : 23,
    "endLineNumber" : 62,
    "endColumnNumber" : 24
  }, {
    "charLength" : 1,
    "startLineNumber" : 63,
    "startColumnNumber" : 23,
    "endLineNumber" : 63,
    "endColumnNumber" : 24
  }, {
    "charLength" : 1,
    "startLineNumber" : 64,
    "startColumnNumber" : 23,
    "endLineNumber" : 64,
    "endColumnNumber" : 24
  }, {
    "charLength" : 1,
    "startLineNumber" : 67,
    "startColumnNumber" : 15,
    "endLineNumber" : 67,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  } ]
}