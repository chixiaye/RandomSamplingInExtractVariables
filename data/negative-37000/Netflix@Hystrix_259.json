{
  "id" : 259,
  "expression" : "500",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-servo-metrics-publisher/src/test/java/com/netflix/hystrix/contrib/servopublisher/HystrixServoMetricsPublisherCommandTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "500",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 77,
      "startColumnNumber" : 21,
      "endLineNumber" : 77,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Thread.sleep(500)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Thread.sleep(500);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1871,
        "startLineNumber" : 50,
        "startColumnNumber" : 55,
        "endLineNumber" : 83,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"ServoCOMMAND-A\");\n  HystrixCircuitBreaker circuitBreaker=HystrixCircuitBreaker.Factory.getInstance(key);\n  HystrixCommandProperties properties=new HystrixPropertiesCommandDefault(key,propertiesSetter);\n  HystrixCommandMetrics metrics=HystrixCommandMetrics.getInstance(key,groupKey,properties);\n  HystrixServoMetricsPublisherCommand servoPublisher=new HystrixServoMetricsPublisherCommand(key,groupKey,metrics,circuitBreaker,properties);\n  servoPublisher.initialize();\n  final int NUM_SECONDS=5;\n  for (int i=0; i < NUM_SECONDS; i++) {\n    new SuccessCommand(key).execute();\n    new SuccessCommand(key).execute();\n    new SuccessCommand(key).execute();\n    Thread.sleep(10);\n    new TimeoutCommand(key).execute();\n    new SuccessCommand(key).execute();\n    new FailureCommand(key).execute();\n    new SuccessCommand(key).execute();\n    new SuccessCommand(key).execute();\n    new SuccessCommand(key).execute();\n    Thread.sleep(10);\n    new SuccessCommand(key).execute();\n  }\n  Thread.sleep(500);\n  assertEquals(40L,servoPublisher.getCumulativeMonitor(\"success\",HystrixEventType.SUCCESS).getValue());\n  assertEquals(5L,servoPublisher.getCumulativeMonitor(\"timeout\",HystrixEventType.TIMEOUT).getValue());\n  assertEquals(5L,servoPublisher.getCumulativeMonitor(\"failure\",HystrixEventType.FAILURE).getValue());\n  assertEquals(10L,servoPublisher.getCumulativeMonitor(\"fallback_success\",HystrixEventType.FALLBACK_SUCCESS).getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1932,
        "startLineNumber" : 49,
        "startColumnNumber" : 1,
        "endLineNumber" : 83,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testCumulativeCounters() throws Exception {\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"ServoCOMMAND-A\");\n  HystrixCircuitBreaker circuitBreaker=HystrixCircuitBreaker.Factory.getInstance(key);\n  HystrixCommandProperties properties=new HystrixPropertiesCommandDefault(key,propertiesSetter);\n  HystrixCommandMetrics metrics=HystrixCommandMetrics.getInstance(key,groupKey,properties);\n  HystrixServoMetricsPublisherCommand servoPublisher=new HystrixServoMetricsPublisherCommand(key,groupKey,metrics,circuitBreaker,properties);\n  servoPublisher.initialize();\n  final int NUM_SECONDS=5;\n  for (int i=0; i < NUM_SECONDS; i++) {\n    new SuccessCommand(key).execute();\n    new SuccessCommand(key).execute();\n    new SuccessCommand(key).execute();\n    Thread.sleep(10);\n    new TimeoutCommand(key).execute();\n    new SuccessCommand(key).execute();\n    new FailureCommand(key).execute();\n    new SuccessCommand(key).execute();\n    new SuccessCommand(key).execute();\n    new SuccessCommand(key).execute();\n    Thread.sleep(10);\n    new SuccessCommand(key).execute();\n  }\n  Thread.sleep(500);\n  assertEquals(40L,servoPublisher.getCumulativeMonitor(\"success\",HystrixEventType.SUCCESS).getValue());\n  assertEquals(5L,servoPublisher.getCumulativeMonitor(\"timeout\",HystrixEventType.TIMEOUT).getValue());\n  assertEquals(5L,servoPublisher.getCumulativeMonitor(\"failure\",HystrixEventType.FAILURE).getValue());\n  assertEquals(10L,servoPublisher.getCumulativeMonitor(\"fallback_success\",HystrixEventType.FALLBACK_SUCCESS).getValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Thread.sleep(500);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 77,
    "startColumnNumber" : 21,
    "endLineNumber" : 77,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}