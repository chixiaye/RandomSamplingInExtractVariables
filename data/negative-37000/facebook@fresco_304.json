{
  "id" : 304,
  "expression" : "viewAbsolute[0]",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/samples/zoomable/src/main/java/com/facebook/samples/zoomable/DefaultZoomableController.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "viewAbsolute[0]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 363,
      "startColumnNumber" : 36,
      "endLineNumber" : 363,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 363,
        "startColumnNumber" : 22,
        "endLineNumber" : 363,
        "endColumnNumber" : 51
      },
      "nodeContext" : "viewPoint.x - viewAbsolute[0]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 363,
        "startColumnNumber" : 10,
        "endLineNumber" : 363,
        "endColumnNumber" : 51
      },
      "nodeContext" : "distanceX=viewPoint.x - viewAbsolute[0]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 363,
        "startColumnNumber" : 4,
        "endLineNumber" : 363,
        "endColumnNumber" : 52
      },
      "nodeContext" : "float distanceX=viewPoint.x - viewAbsolute[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 358,
        "startColumnNumber" : 33,
        "endLineNumber" : 371,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  float[] viewAbsolute=mTempValues;\n  viewAbsolute[0]=imagePoint.x;\n  viewAbsolute[1]=imagePoint.y;\n  mapRelativeToAbsolute(viewAbsolute,viewAbsolute,1);\n  float distanceX=viewPoint.x - viewAbsolute[0];\n  float distanceY=viewPoint.y - viewAbsolute[1];\n  boolean transformCorrected=false;\n  outTransform.setScale(scale,scale,viewAbsolute[0],viewAbsolute[1]);\n  transformCorrected|=limitScale(outTransform,viewAbsolute[0],viewAbsolute[1],limitFlags);\n  outTransform.postTranslate(distanceX,distanceY);\n  transformCorrected|=limitTranslation(outTransform,limitFlags);\n  return transformCorrected;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1455,
        "startLineNumber" : 342,
        "startColumnNumber" : 2,
        "endLineNumber" : 371,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Calculates the zoom transformation that would zoom to the desired scale and position the image so that the given image point corresponds to the given view point.\n * @param outTransform the matrix to store the result to\n * @param scale desired scale, will be limited to {min, max} scale factor\n * @param imagePoint 2D point in image's relative coordinate system (i.e. 0 <= x, y <= 1)\n * @param viewPoint 2D point in view's absolute coordinate system\n * @param limitFlags whether to limit translation and/or scale.\n * @return whether or not the transform has been corrected due to limitation\n */\nprotected boolean calculateZoomToPointTransform(Matrix outTransform,float scale,PointF imagePoint,PointF viewPoint,@LimitFlag int limitFlags){\n  float[] viewAbsolute=mTempValues;\n  viewAbsolute[0]=imagePoint.x;\n  viewAbsolute[1]=imagePoint.y;\n  mapRelativeToAbsolute(viewAbsolute,viewAbsolute,1);\n  float distanceX=viewPoint.x - viewAbsolute[0];\n  float distanceY=viewPoint.y - viewAbsolute[1];\n  boolean transformCorrected=false;\n  outTransform.setScale(scale,scale,viewAbsolute[0],viewAbsolute[1]);\n  transformCorrected|=limitScale(outTransform,viewAbsolute[0],viewAbsolute[1],limitFlags);\n  outTransform.postTranslate(distanceX,distanceY);\n  transformCorrected|=limitTranslation(outTransform,limitFlags);\n  return transformCorrected;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 363,
        "startColumnNumber" : 4,
        "endLineNumber" : 363,
        "endColumnNumber" : 52
      },
      "nodeContext" : "float distanceX=viewPoint.x - viewAbsolute[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "float"
  }, {
    "nodeContext" : "viewAbsolute[0]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 366,
      "startColumnNumber" : 40,
      "endLineNumber" : 366,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 366,
        "startColumnNumber" : 4,
        "endLineNumber" : 366,
        "endColumnNumber" : 73
      },
      "nodeContext" : "outTransform.setScale(scale,scale,viewAbsolute[0],viewAbsolute[1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 366,
        "startColumnNumber" : 4,
        "endLineNumber" : 366,
        "endColumnNumber" : 74
      },
      "nodeContext" : "outTransform.setScale(scale,scale,viewAbsolute[0],viewAbsolute[1]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 358,
        "startColumnNumber" : 33,
        "endLineNumber" : 371,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  float[] viewAbsolute=mTempValues;\n  viewAbsolute[0]=imagePoint.x;\n  viewAbsolute[1]=imagePoint.y;\n  mapRelativeToAbsolute(viewAbsolute,viewAbsolute,1);\n  float distanceX=viewPoint.x - viewAbsolute[0];\n  float distanceY=viewPoint.y - viewAbsolute[1];\n  boolean transformCorrected=false;\n  outTransform.setScale(scale,scale,viewAbsolute[0],viewAbsolute[1]);\n  transformCorrected|=limitScale(outTransform,viewAbsolute[0],viewAbsolute[1],limitFlags);\n  outTransform.postTranslate(distanceX,distanceY);\n  transformCorrected|=limitTranslation(outTransform,limitFlags);\n  return transformCorrected;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1455,
        "startLineNumber" : 342,
        "startColumnNumber" : 2,
        "endLineNumber" : 371,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Calculates the zoom transformation that would zoom to the desired scale and position the image so that the given image point corresponds to the given view point.\n * @param outTransform the matrix to store the result to\n * @param scale desired scale, will be limited to {min, max} scale factor\n * @param imagePoint 2D point in image's relative coordinate system (i.e. 0 <= x, y <= 1)\n * @param viewPoint 2D point in view's absolute coordinate system\n * @param limitFlags whether to limit translation and/or scale.\n * @return whether or not the transform has been corrected due to limitation\n */\nprotected boolean calculateZoomToPointTransform(Matrix outTransform,float scale,PointF imagePoint,PointF viewPoint,@LimitFlag int limitFlags){\n  float[] viewAbsolute=mTempValues;\n  viewAbsolute[0]=imagePoint.x;\n  viewAbsolute[1]=imagePoint.y;\n  mapRelativeToAbsolute(viewAbsolute,viewAbsolute,1);\n  float distanceX=viewPoint.x - viewAbsolute[0];\n  float distanceY=viewPoint.y - viewAbsolute[1];\n  boolean transformCorrected=false;\n  outTransform.setScale(scale,scale,viewAbsolute[0],viewAbsolute[1]);\n  transformCorrected|=limitScale(outTransform,viewAbsolute[0],viewAbsolute[1],limitFlags);\n  outTransform.postTranslate(distanceX,distanceY);\n  transformCorrected|=limitTranslation(outTransform,limitFlags);\n  return transformCorrected;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 366,
        "startColumnNumber" : 4,
        "endLineNumber" : 366,
        "endColumnNumber" : 74
      },
      "nodeContext" : "outTransform.setScale(scale,scale,viewAbsolute[0],viewAbsolute[1]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "float"
  }, {
    "nodeContext" : "viewAbsolute[0]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 367,
      "startColumnNumber" : 51,
      "endLineNumber" : 367,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 367,
        "startColumnNumber" : 26,
        "endLineNumber" : 367,
        "endColumnNumber" : 96
      },
      "nodeContext" : "limitScale(outTransform,viewAbsolute[0],viewAbsolute[1],limitFlags)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 367,
        "startColumnNumber" : 4,
        "endLineNumber" : 367,
        "endColumnNumber" : 96
      },
      "nodeContext" : "transformCorrected|=limitScale(outTransform,viewAbsolute[0],viewAbsolute[1],limitFlags)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 367,
        "startColumnNumber" : 4,
        "endLineNumber" : 367,
        "endColumnNumber" : 97
      },
      "nodeContext" : "transformCorrected|=limitScale(outTransform,viewAbsolute[0],viewAbsolute[1],limitFlags);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 358,
        "startColumnNumber" : 33,
        "endLineNumber" : 371,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  float[] viewAbsolute=mTempValues;\n  viewAbsolute[0]=imagePoint.x;\n  viewAbsolute[1]=imagePoint.y;\n  mapRelativeToAbsolute(viewAbsolute,viewAbsolute,1);\n  float distanceX=viewPoint.x - viewAbsolute[0];\n  float distanceY=viewPoint.y - viewAbsolute[1];\n  boolean transformCorrected=false;\n  outTransform.setScale(scale,scale,viewAbsolute[0],viewAbsolute[1]);\n  transformCorrected|=limitScale(outTransform,viewAbsolute[0],viewAbsolute[1],limitFlags);\n  outTransform.postTranslate(distanceX,distanceY);\n  transformCorrected|=limitTranslation(outTransform,limitFlags);\n  return transformCorrected;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1455,
        "startLineNumber" : 342,
        "startColumnNumber" : 2,
        "endLineNumber" : 371,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Calculates the zoom transformation that would zoom to the desired scale and position the image so that the given image point corresponds to the given view point.\n * @param outTransform the matrix to store the result to\n * @param scale desired scale, will be limited to {min, max} scale factor\n * @param imagePoint 2D point in image's relative coordinate system (i.e. 0 <= x, y <= 1)\n * @param viewPoint 2D point in view's absolute coordinate system\n * @param limitFlags whether to limit translation and/or scale.\n * @return whether or not the transform has been corrected due to limitation\n */\nprotected boolean calculateZoomToPointTransform(Matrix outTransform,float scale,PointF imagePoint,PointF viewPoint,@LimitFlag int limitFlags){\n  float[] viewAbsolute=mTempValues;\n  viewAbsolute[0]=imagePoint.x;\n  viewAbsolute[1]=imagePoint.y;\n  mapRelativeToAbsolute(viewAbsolute,viewAbsolute,1);\n  float distanceX=viewPoint.x - viewAbsolute[0];\n  float distanceY=viewPoint.y - viewAbsolute[1];\n  boolean transformCorrected=false;\n  outTransform.setScale(scale,scale,viewAbsolute[0],viewAbsolute[1]);\n  transformCorrected|=limitScale(outTransform,viewAbsolute[0],viewAbsolute[1],limitFlags);\n  outTransform.postTranslate(distanceX,distanceY);\n  transformCorrected|=limitTranslation(outTransform,limitFlags);\n  return transformCorrected;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 367,
        "startColumnNumber" : 4,
        "endLineNumber" : 367,
        "endColumnNumber" : 97
      },
      "nodeContext" : "transformCorrected|=limitScale(outTransform,viewAbsolute[0],viewAbsolute[1],limitFlags);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 363,
    "startColumnNumber" : 36,
    "endLineNumber" : 363,
    "endColumnNumber" : 51
  }, {
    "charLength" : 15,
    "startLineNumber" : 366,
    "startColumnNumber" : 40,
    "endLineNumber" : 366,
    "endColumnNumber" : 55
  }, {
    "charLength" : 15,
    "startLineNumber" : 367,
    "startColumnNumber" : 51,
    "endLineNumber" : 367,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}