{
  "id" : 290,
  "expression" : "false",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/appbar/HeaderScrollingViewBehavior.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 101,
      "startColumnNumber" : 11,
      "endLineNumber" : 101,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 17
      },
      "nodeContext" : "return false;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1845,
        "startLineNumber" : 58,
        "startColumnNumber" : 22,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int childLpHeight=child.getLayoutParams().height;\n  if (childLpHeight == ViewGroup.LayoutParams.MATCH_PARENT || childLpHeight == ViewGroup.LayoutParams.WRAP_CONTENT) {\n    final List<View> dependencies=parent.getDependencies(child);\n    final View header=findFirstDependency(dependencies);\n    if (header != null) {\n      if (ViewCompat.getFitsSystemWindows(header) && !ViewCompat.getFitsSystemWindows(child)) {\n        ViewCompat.setFitsSystemWindows(child,true);\n        if (ViewCompat.getFitsSystemWindows(child)) {\n          child.requestLayout();\n          return true;\n        }\n      }\n      int availableHeight=View.MeasureSpec.getSize(parentHeightMeasureSpec);\n      if (availableHeight == 0) {\n        availableHeight=parent.getHeight();\n      }\n      final int height=availableHeight - header.getMeasuredHeight() + getScrollRange(header);\n      final int heightMeasureSpec=View.MeasureSpec.makeMeasureSpec(height,childLpHeight == ViewGroup.LayoutParams.MATCH_PARENT ? View.MeasureSpec.EXACTLY : View.MeasureSpec.AT_MOST);\n      parent.onMeasureChild(child,parentWidthMeasureSpec,widthUsed,heightMeasureSpec,heightUsed);\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2050,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean onMeasureChild(CoordinatorLayout parent,View child,int parentWidthMeasureSpec,int widthUsed,int parentHeightMeasureSpec,int heightUsed){\n  final int childLpHeight=child.getLayoutParams().height;\n  if (childLpHeight == ViewGroup.LayoutParams.MATCH_PARENT || childLpHeight == ViewGroup.LayoutParams.WRAP_CONTENT) {\n    final List<View> dependencies=parent.getDependencies(child);\n    final View header=findFirstDependency(dependencies);\n    if (header != null) {\n      if (ViewCompat.getFitsSystemWindows(header) && !ViewCompat.getFitsSystemWindows(child)) {\n        ViewCompat.setFitsSystemWindows(child,true);\n        if (ViewCompat.getFitsSystemWindows(child)) {\n          child.requestLayout();\n          return true;\n        }\n      }\n      int availableHeight=View.MeasureSpec.getSize(parentHeightMeasureSpec);\n      if (availableHeight == 0) {\n        availableHeight=parent.getHeight();\n      }\n      final int height=availableHeight - header.getMeasuredHeight() + getScrollRange(header);\n      final int heightMeasureSpec=View.MeasureSpec.makeMeasureSpec(height,childLpHeight == ViewGroup.LayoutParams.MATCH_PARENT ? View.MeasureSpec.EXACTLY : View.MeasureSpec.AT_MOST);\n      parent.onMeasureChild(child,parentWidthMeasureSpec,widthUsed,heightMeasureSpec,heightUsed);\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 188,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 17
      },
      "nodeContext" : "return false;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 101,
    "startColumnNumber" : 11,
    "endLineNumber" : 101,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}