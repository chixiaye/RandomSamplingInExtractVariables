{
  "id" : 79,
  "expression" : "filterLineNo(exceptionMessage)",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitoutil/JUnitResultAssert.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "filterLineNo(exceptionMessage)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 101,
      "startColumnNumber" : 21,
      "endLineNumber" : 101,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 97
      },
      "nodeContext" : "assertEquals(filterLineNo(exceptionMessage),filterLineNo(f.getException().getMessage()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertEquals(filterLineNo(exceptionMessage),filterLineNo(f.getException().getMessage()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 98,
        "startColumnNumber" : 85,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  fails(1,expectedException);\n  Failure f=firstOf(result.getFailures());\n  assertEquals(filterLineNo(exceptionMessage),filterLineNo(f.getException().getMessage()));\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Expects single failure with specific exception and exception message. Automatically filters line numbers from exception messages.\n */\npublic JUnitResultAssert fails(Class expectedException,String exceptionMessage){\n  fails(1,expectedException);\n  Failure f=firstOf(result.getFailures());\n  assertEquals(filterLineNo(exceptionMessage),filterLineNo(f.getException().getMessage()));\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertEquals(filterLineNo(exceptionMessage),filterLineNo(f.getException().getMessage()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 101,
    "startColumnNumber" : 21,
    "endLineNumber" : 101,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}