{
  "id" : 167,
  "expression" : "encodedImage2.getWidth()",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline-base/src/test/java/com/facebook/imagepipeline/image/EncodedImageTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "encodedImage2.getWidth()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 89,
      "startColumnNumber" : 42,
      "endLineNumber" : 89,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(encodedImage.getWidth(),encodedImage2.getWidth())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals(encodedImage.getWidth(),encodedImage2.getWidth());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1713,
        "startLineNumber" : 71,
        "startColumnNumber" : 32,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  EncodedImage encodedImage=new EncodedImage(mByteBufferRef);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  encodedImage.setRotationAngle(0);\n  encodedImage.setExifOrientation(5);\n  encodedImage.setWidth(1);\n  encodedImage.setHeight(2);\n  encodedImage.setSampleSize(4);\n  encodedImage.setBytesRange(BytesRange.toMax(1000));\n  EncodedImage encodedImage2=EncodedImage.cloneOrNull(encodedImage);\n  assertEquals(3,mByteBufferRef.getUnderlyingReferenceTestOnly().getRefCountTestOnly());\n  assertSame(encodedImage.getByteBufferRef().getUnderlyingReferenceTestOnly(),encodedImage2.getByteBufferRef().getUnderlyingReferenceTestOnly());\n  assertEquals(encodedImage.getImageFormat(),encodedImage2.getImageFormat());\n  assertEquals(encodedImage.getRotationAngle(),encodedImage2.getRotationAngle());\n  assertEquals(encodedImage.getExifOrientation(),encodedImage2.getExifOrientation());\n  assertEquals(encodedImage.getHeight(),encodedImage2.getHeight());\n  assertEquals(encodedImage.getWidth(),encodedImage2.getWidth());\n  assertEquals(encodedImage.getSampleSize(),encodedImage2.getSampleSize());\n  assertEquals(encodedImage.getBytesRange(),encodedImage2.getBytesRange());\n  encodedImage=new EncodedImage(mInputStreamSupplier,100);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  encodedImage.setRotationAngle(0);\n  encodedImage.setExifOrientation(5);\n  encodedImage.setWidth(1);\n  encodedImage.setHeight(2);\n  encodedImage2=EncodedImage.cloneOrNull(encodedImage);\n  assertSame(encodedImage.getInputStream(),encodedImage2.getInputStream());\n  assertEquals(encodedImage2.getSize(),encodedImage.getSize());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1751,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCloneOrNull(){\n  EncodedImage encodedImage=new EncodedImage(mByteBufferRef);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  encodedImage.setRotationAngle(0);\n  encodedImage.setExifOrientation(5);\n  encodedImage.setWidth(1);\n  encodedImage.setHeight(2);\n  encodedImage.setSampleSize(4);\n  encodedImage.setBytesRange(BytesRange.toMax(1000));\n  EncodedImage encodedImage2=EncodedImage.cloneOrNull(encodedImage);\n  assertEquals(3,mByteBufferRef.getUnderlyingReferenceTestOnly().getRefCountTestOnly());\n  assertSame(encodedImage.getByteBufferRef().getUnderlyingReferenceTestOnly(),encodedImage2.getByteBufferRef().getUnderlyingReferenceTestOnly());\n  assertEquals(encodedImage.getImageFormat(),encodedImage2.getImageFormat());\n  assertEquals(encodedImage.getRotationAngle(),encodedImage2.getRotationAngle());\n  assertEquals(encodedImage.getExifOrientation(),encodedImage2.getExifOrientation());\n  assertEquals(encodedImage.getHeight(),encodedImage2.getHeight());\n  assertEquals(encodedImage.getWidth(),encodedImage2.getWidth());\n  assertEquals(encodedImage.getSampleSize(),encodedImage2.getSampleSize());\n  assertEquals(encodedImage.getBytesRange(),encodedImage2.getBytesRange());\n  encodedImage=new EncodedImage(mInputStreamSupplier,100);\n  encodedImage.setImageFormat(DefaultImageFormats.JPEG);\n  encodedImage.setRotationAngle(0);\n  encodedImage.setExifOrientation(5);\n  encodedImage.setWidth(1);\n  encodedImage.setHeight(2);\n  encodedImage2=EncodedImage.cloneOrNull(encodedImage);\n  assertSame(encodedImage.getInputStream(),encodedImage2.getInputStream());\n  assertEquals(encodedImage2.getSize(),encodedImage.getSize());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 210,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals(encodedImage.getWidth(),encodedImage2.getWidth());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 89,
    "startColumnNumber" : 42,
    "endLineNumber" : 89,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}