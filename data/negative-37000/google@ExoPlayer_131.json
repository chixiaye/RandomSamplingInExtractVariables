{
  "id" : 131,
  "expression" : "resourceInfo == null",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/testutils/src/main/java/com/google/android/exoplayer2/testutil/AdditionalFailureInfo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "resourceInfo == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 69,
      "startColumnNumber" : 14,
      "endLineNumber" : 69,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1164,
        "startLineNumber" : 69,
        "startColumnNumber" : 10,
        "endLineNumber" : 89,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (resourceInfo == null) {\n  throw e;\n}\n else if (e instanceof AssertionError) {\n  DiscreteAssertionError assertionError=new DiscreteAssertionError(resourceInfo + \"\\n\" + e.getMessage(),e.getCause());\n  assertionError.setStackTrace(e.getStackTrace());\n  throw assertionError;\n}\n else {\n  Exception exception=new Exception(resourceInfo,e);\n  StackTraceElement[] stackTrace=exception.getStackTrace();\n  if (stackTrace.length > 0) {\n    exception.setStackTrace(Util.nullSafeArrayCopyOfRange(stackTrace,0,1));\n  }\n  throw exception;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 1267,
        "startLineNumber" : 67,
        "startColumnNumber" : 30,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  @Nullable String resourceInfo=AdditionalFailureInfo.this.info.get();\n  if (resourceInfo == null) {\n    throw e;\n  }\n else   if (e instanceof AssertionError) {\n    DiscreteAssertionError assertionError=new DiscreteAssertionError(resourceInfo + \"\\n\" + e.getMessage(),e.getCause());\n    assertionError.setStackTrace(e.getStackTrace());\n    throw assertionError;\n  }\n else {\n    Exception exception=new Exception(resourceInfo,e);\n    StackTraceElement[] stackTrace=exception.getStackTrace();\n    if (stackTrace.length > 0) {\n      exception.setStackTrace(Util.nullSafeArrayCopyOfRange(stackTrace,0,1));\n    }\n    throw exception;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 67,
        "startColumnNumber" : 10,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable e) {\n  @Nullable String resourceInfo=AdditionalFailureInfo.this.info.get();\n  if (resourceInfo == null) {\n    throw e;\n  }\n else   if (e instanceof AssertionError) {\n    DiscreteAssertionError assertionError=new DiscreteAssertionError(resourceInfo + \"\\n\" + e.getMessage(),e.getCause());\n    assertionError.setStackTrace(e.getStackTrace());\n    throw assertionError;\n  }\n else {\n    Exception exception=new Exception(resourceInfo,e);\n    StackTraceElement[] stackTrace=exception.getStackTrace();\n    if (stackTrace.length > 0) {\n      exception.setStackTrace(Util.nullSafeArrayCopyOfRange(stackTrace,0,1));\n    }\n    throw exception;\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 98,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  base.evaluate();\n}\n catch (Throwable e) {\n  @Nullable String resourceInfo=AdditionalFailureInfo.this.info.get();\n  if (resourceInfo == null) {\n    throw e;\n  }\n else   if (e instanceof AssertionError) {\n    DiscreteAssertionError assertionError=new DiscreteAssertionError(resourceInfo + \"\\n\" + e.getMessage(),e.getCause());\n    assertionError.setStackTrace(e.getStackTrace());\n    throw assertionError;\n  }\n else {\n    Exception exception=new Exception(resourceInfo,e);\n    StackTraceElement[] stackTrace=exception.getStackTrace();\n    if (stackTrace.length > 0) {\n      exception.setStackTrace(Util.nullSafeArrayCopyOfRange(stackTrace,0,1));\n    }\n    throw exception;\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 104,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1348,
        "startLineNumber" : 64,
        "startColumnNumber" : 46,
        "endLineNumber" : 91,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    base.evaluate();\n  }\n catch (  Throwable e) {\n    @Nullable String resourceInfo=AdditionalFailureInfo.this.info.get();\n    if (resourceInfo == null) {\n      throw e;\n    }\n else     if (e instanceof AssertionError) {\n      DiscreteAssertionError assertionError=new DiscreteAssertionError(resourceInfo + \"\\n\" + e.getMessage(),e.getCause());\n      assertionError.setStackTrace(e.getStackTrace());\n      throw assertionError;\n    }\n else {\n      Exception exception=new Exception(resourceInfo,e);\n      StackTraceElement[] stackTrace=exception.getStackTrace();\n      if (stackTrace.length > 0) {\n        exception.setStackTrace(Util.nullSafeArrayCopyOfRange(stackTrace,0,1));\n      }\n      throw exception;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1404,
        "startLineNumber" : 63,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 7
      },
      "nodeContext" : "@Override public void evaluate() throws Throwable {\n  try {\n    base.evaluate();\n  }\n catch (  Throwable e) {\n    @Nullable String resourceInfo=AdditionalFailureInfo.this.info.get();\n    if (resourceInfo == null) {\n      throw e;\n    }\n else     if (e instanceof AssertionError) {\n      DiscreteAssertionError assertionError=new DiscreteAssertionError(resourceInfo + \"\\n\" + e.getMessage(),e.getCause());\n      assertionError.setStackTrace(e.getStackTrace());\n      throw assertionError;\n    }\n else {\n      Exception exception=new Exception(resourceInfo,e);\n      StackTraceElement[] stackTrace=exception.getStackTrace();\n      if (stackTrace.length > 0) {\n        exception.setStackTrace(Util.nullSafeArrayCopyOfRange(stackTrace,0,1));\n      }\n      throw exception;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1164,
        "startLineNumber" : 69,
        "startColumnNumber" : 10,
        "endLineNumber" : 89,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (resourceInfo == null) {\n  throw e;\n}\n else if (e instanceof AssertionError) {\n  DiscreteAssertionError assertionError=new DiscreteAssertionError(resourceInfo + \"\\n\" + e.getMessage(),e.getCause());\n  assertionError.setStackTrace(e.getStackTrace());\n  throw assertionError;\n}\n else {\n  Exception exception=new Exception(resourceInfo,e);\n  StackTraceElement[] stackTrace=exception.getStackTrace();\n  if (stackTrace.length > 0) {\n    exception.setStackTrace(Util.nullSafeArrayCopyOfRange(stackTrace,0,1));\n  }\n  throw exception;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 9
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 69,
    "startColumnNumber" : 14,
    "endLineNumber" : 69,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}