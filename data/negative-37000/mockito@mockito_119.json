{
  "id" : 119,
  "expression" : "when(mock.simpleMethod()).thenReturn(\"one\").thenReturn(\"two\")",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/stubbing/StubbingConsecutiveAnswersTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "when(mock.simpleMethod()).thenReturn(\"one\").thenReturn(\"two\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 61,
      "startLineNumber" : 22,
      "startColumnNumber" : 8,
      "endLineNumber" : 22,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 11,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 89
      },
      "nodeContext" : "when(mock.simpleMethod()).thenReturn(\"one\").thenReturn(\"two\").thenReturn(\"three\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 90
      },
      "nodeContext" : "when(mock.simpleMethod()).thenReturn(\"one\").thenReturn(\"two\").thenReturn(\"three\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 21,
        "startColumnNumber" : 68,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  when(mock.simpleMethod()).thenReturn(\"one\").thenReturn(\"two\").thenReturn(\"three\");\n  assertEquals(\"one\",mock.simpleMethod());\n  assertEquals(\"two\",mock.simpleMethod());\n  assertEquals(\"three\",mock.simpleMethod());\n  assertEquals(\"three\",mock.simpleMethod());\n  assertEquals(\"three\",mock.simpleMethod());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 438,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_return_consecutive_values() throws Exception {\n  when(mock.simpleMethod()).thenReturn(\"one\").thenReturn(\"two\").thenReturn(\"three\");\n  assertEquals(\"one\",mock.simpleMethod());\n  assertEquals(\"two\",mock.simpleMethod());\n  assertEquals(\"three\",mock.simpleMethod());\n  assertEquals(\"three\",mock.simpleMethod());\n  assertEquals(\"three\",mock.simpleMethod());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 90
      },
      "nodeContext" : "when(mock.simpleMethod()).thenReturn(\"one\").thenReturn(\"two\").thenReturn(\"three\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 7,
    "type" : "org.mockito.stubbing.OngoingStubbing<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 61,
    "startLineNumber" : 22,
    "startColumnNumber" : 8,
    "endLineNumber" : 22,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}