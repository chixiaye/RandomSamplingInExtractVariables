{
  "id" : 22,
  "expression" : "m[1][1]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/linearalgebra/MatrixDeterminantLaplaceExpansion.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "m[1][1]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 101,
      "startColumnNumber" : 30,
      "endLineNumber" : 101,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 101,
        "startColumnNumber" : 26,
        "endLineNumber" : 101,
        "endColumnNumber" : 37
      },
      "nodeContext" : "e=m[1][1]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 101,
        "startColumnNumber" : 6,
        "endLineNumber" : 101,
        "endColumnNumber" : 51
      },
      "nodeContext" : "double d=m[1][0], e=m[1][1], f=m[1][2];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  double a=m[0][0], b=m[0][1], c=m[0][2];\n  double d=m[1][0], e=m[1][1], f=m[1][2];\n  double g=m[2][0], h=m[2][1], i=m[2][2];\n  return a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (n == 3) {\n  double a=m[0][0], b=m[0][1], c=m[0][2];\n  double d=m[1][0], e=m[1][1], f=m[1][2];\n  double g=m[2][0], h=m[2][1], i=m[2][2];\n  return a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 94,
        "startColumnNumber" : 46,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int n=m.length;\n  if (n == 3) {\n    double a=m[0][0], b=m[0][1], c=m[0][2];\n    double d=m[1][0], e=m[1][1], f=m[1][2];\n    double g=m[2][0], h=m[2][1], i=m[2][2];\n    return a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g);\n  }\n  int det=0;\n  for (int i=0; i < n; i++) {\n    for (int j=0; j < n; j++) {\n      double c=m[i][j];\n      if (Math.abs(c) > EPS) {\n        double[][] newMatrix=constructMatrix(m,j);\n        double parity=((j & 1) == 0) ? +1 : -1;\n        det+=parity * c * laplace(newMatrix);\n      }\n    }\n  }\n  return det;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static double laplace(double[][] m){\n  final int n=m.length;\n  if (n == 3) {\n    double a=m[0][0], b=m[0][1], c=m[0][2];\n    double d=m[1][0], e=m[1][1], f=m[1][2];\n    double g=m[2][0], h=m[2][1], i=m[2][2];\n    return a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g);\n  }\n  int det=0;\n  for (int i=0; i < n; i++) {\n    for (int j=0; j < n; j++) {\n      double c=m[i][j];\n      if (Math.abs(c) > EPS) {\n        double[][] newMatrix=constructMatrix(m,j);\n        double parity=((j & 1) == 0) ? +1 : -1;\n        det+=parity * c * laplace(newMatrix);\n      }\n    }\n  }\n  return det;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 101,
        "startColumnNumber" : 6,
        "endLineNumber" : 101,
        "endColumnNumber" : 51
      },
      "nodeContext" : "double d=m[1][0], e=m[1][1], f=m[1][2];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 101,
    "startColumnNumber" : 30,
    "endLineNumber" : 101,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}