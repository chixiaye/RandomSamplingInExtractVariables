{
  "id" : 179,
  "expression" : "TEST_START_PATTERN",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/utils/src/main/java/org/keycloak/testsuite/LogTrimmer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TEST_START_PATTERN",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 29,
      "startColumnNumber" : 34,
      "endLineNumber" : 29,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 29,
        "startColumnNumber" : 34,
        "endLineNumber" : 29,
        "endColumnNumber" : 66
      },
      "nodeContext" : "TEST_START_PATTERN.matcher(line)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 29,
        "startColumnNumber" : 20,
        "endLineNumber" : 29,
        "endColumnNumber" : 66
      },
      "nodeContext" : "testMatcher=TEST_START_PATTERN.matcher(line)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 29,
        "startColumnNumber" : 20,
        "endLineNumber" : 29,
        "endColumnNumber" : 67
      },
      "nodeContext" : "testMatcher=TEST_START_PATTERN.matcher(line);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 28,
        "startColumnNumber" : 41,
        "endLineNumber" : 36,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  testMatcher=TEST_START_PATTERN.matcher(line);\n  if (testMatcher.find()) {\n    testRunning=testMatcher.group(TEST_NAME_GROUP);\n    System.out.println(line);\n  }\n else {\n    System.out.println(\"-- \" + line);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1228,
        "startLineNumber" : 28,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (testRunning == null) {\n  testMatcher=TEST_START_PATTERN.matcher(line);\n  if (testMatcher.find()) {\n    testRunning=testMatcher.group(TEST_NAME_GROUP);\n    System.out.println(line);\n  }\n else {\n    System.out.println(\"-- \" + line);\n  }\n}\n else {\n  if (line.contains(\"Tests run:\")) {\n    if (!(line.contains(\"Failures: 0\") && line.contains(\"Errors: 0\"))) {\n      System.out.println(\"--------- \" + testRunning + \" output start ---------\");\n      System.out.println(testText.toString());\n      System.out.println(\"--------- \" + testRunning + \" output end  ---------\");\n    }\n    System.out.println(line);\n    testRunning=null;\n    testText=new StringBuilder();\n  }\n else {\n    testText.append(testRunning.substring(testRunning.lastIndexOf('.') + 1) + \" ++ \" + line);\n    testText.append(\"\\n\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 129,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1303,
        "startLineNumber" : 26,
        "startColumnNumber" : 42,
        "endLineNumber" : 51,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  line=scanner.nextLine();\n  if (testRunning == null) {\n    testMatcher=TEST_START_PATTERN.matcher(line);\n    if (testMatcher.find()) {\n      testRunning=testMatcher.group(TEST_NAME_GROUP);\n      System.out.println(line);\n    }\n else {\n      System.out.println(\"-- \" + line);\n    }\n  }\n else {\n    if (line.contains(\"Tests run:\")) {\n      if (!(line.contains(\"Failures: 0\") && line.contains(\"Errors: 0\"))) {\n        System.out.println(\"--------- \" + testRunning + \" output start ---------\");\n        System.out.println(testText.toString());\n        System.out.println(\"--------- \" + testRunning + \" output end  ---------\");\n      }\n      System.out.println(line);\n      testRunning=null;\n      testText=new StringBuilder();\n    }\n else {\n      testText.append(testRunning.substring(testRunning.lastIndexOf('.') + 1) + \" ++ \" + line);\n      testText.append(\"\\n\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1333,
        "startLineNumber" : 26,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (scanner.hasNextLine()) {\n  line=scanner.nextLine();\n  if (testRunning == null) {\n    testMatcher=TEST_START_PATTERN.matcher(line);\n    if (testMatcher.find()) {\n      testRunning=testMatcher.group(TEST_NAME_GROUP);\n      System.out.println(line);\n    }\n else {\n      System.out.println(\"-- \" + line);\n    }\n  }\n else {\n    if (line.contains(\"Tests run:\")) {\n      if (!(line.contains(\"Failures: 0\") && line.contains(\"Errors: 0\"))) {\n        System.out.println(\"--------- \" + testRunning + \" output start ---------\");\n        System.out.println(testText.toString());\n        System.out.println(\"--------- \" + testRunning + \" output end  ---------\");\n      }\n      System.out.println(line);\n      testRunning=null;\n      testText=new StringBuilder();\n    }\n else {\n      testText.append(testRunning.substring(testRunning.lastIndexOf('.') + 1) + \" ++ \" + line);\n      testText.append(\"\\n\");\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 140,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1527,
        "startLineNumber" : 20,
        "startColumnNumber" : 55,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String testRunning=null;\n  String line=null;\n  Matcher testMatcher=null;\n  StringBuilder testText=new StringBuilder();\n  while (scanner.hasNextLine()) {\n    line=scanner.nextLine();\n    if (testRunning == null) {\n      testMatcher=TEST_START_PATTERN.matcher(line);\n      if (testMatcher.find()) {\n        testRunning=testMatcher.group(TEST_NAME_GROUP);\n        System.out.println(line);\n      }\n else {\n        System.out.println(\"-- \" + line);\n      }\n    }\n else {\n      if (line.contains(\"Tests run:\")) {\n        if (!(line.contains(\"Failures: 0\") && line.contains(\"Errors: 0\"))) {\n          System.out.println(\"--------- \" + testRunning + \" output start ---------\");\n          System.out.println(testText.toString());\n          System.out.println(\"--------- \" + testRunning + \" output end  ---------\");\n        }\n        System.out.println(line);\n        testRunning=null;\n        testText=new StringBuilder();\n      }\n else {\n        testText.append(testRunning.substring(testRunning.lastIndexOf('.') + 1) + \" ++ \" + line);\n        testText.append(\"\\n\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1574,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (Scanner scanner=new Scanner(System.in)){\n  String testRunning=null;\n  String line=null;\n  Matcher testMatcher=null;\n  StringBuilder testText=new StringBuilder();\n  while (scanner.hasNextLine()) {\n    line=scanner.nextLine();\n    if (testRunning == null) {\n      testMatcher=TEST_START_PATTERN.matcher(line);\n      if (testMatcher.find()) {\n        testRunning=testMatcher.group(TEST_NAME_GROUP);\n        System.out.println(line);\n      }\n else {\n        System.out.println(\"-- \" + line);\n      }\n    }\n else {\n      if (line.contains(\"Tests run:\")) {\n        if (!(line.contains(\"Failures: 0\") && line.contains(\"Errors: 0\"))) {\n          System.out.println(\"--------- \" + testRunning + \" output start ---------\");\n          System.out.println(testText.toString());\n          System.out.println(\"--------- \" + testRunning + \" output end  ---------\");\n        }\n        System.out.println(line);\n        testRunning=null;\n        testText=new StringBuilder();\n      }\n else {\n        testText.append(testRunning.substring(testRunning.lastIndexOf('.') + 1) + \" ++ \" + line);\n        testText.append(\"\\n\");\n      }\n    }\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 179,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1590,
        "startLineNumber" : 19,
        "startColumnNumber" : 43,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (Scanner scanner=new Scanner(System.in)){\n    String testRunning=null;\n    String line=null;\n    Matcher testMatcher=null;\n    StringBuilder testText=new StringBuilder();\n    while (scanner.hasNextLine()) {\n      line=scanner.nextLine();\n      if (testRunning == null) {\n        testMatcher=TEST_START_PATTERN.matcher(line);\n        if (testMatcher.find()) {\n          testRunning=testMatcher.group(TEST_NAME_GROUP);\n          System.out.println(line);\n        }\n else {\n          System.out.println(\"-- \" + line);\n        }\n      }\n else {\n        if (line.contains(\"Tests run:\")) {\n          if (!(line.contains(\"Failures: 0\") && line.contains(\"Errors: 0\"))) {\n            System.out.println(\"--------- \" + testRunning + \" output start ---------\");\n            System.out.println(testText.toString());\n            System.out.println(\"--------- \" + testRunning + \" output end  ---------\");\n          }\n          System.out.println(line);\n          testRunning=null;\n          testText=new StringBuilder();\n        }\n else {\n          testText.append(testRunning.substring(testRunning.lastIndexOf('.') + 1) + \" ++ \" + line);\n          testText.append(\"\\n\");\n        }\n      }\n    }\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1629,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  try (Scanner scanner=new Scanner(System.in)){\n    String testRunning=null;\n    String line=null;\n    Matcher testMatcher=null;\n    StringBuilder testText=new StringBuilder();\n    while (scanner.hasNextLine()) {\n      line=scanner.nextLine();\n      if (testRunning == null) {\n        testMatcher=TEST_START_PATTERN.matcher(line);\n        if (testMatcher.find()) {\n          testRunning=testMatcher.group(TEST_NAME_GROUP);\n          System.out.println(line);\n        }\n else {\n          System.out.println(\"-- \" + line);\n        }\n      }\n else {\n        if (line.contains(\"Tests run:\")) {\n          if (!(line.contains(\"Failures: 0\") && line.contains(\"Errors: 0\"))) {\n            System.out.println(\"--------- \" + testRunning + \" output start ---------\");\n            System.out.println(testText.toString());\n            System.out.println(\"--------- \" + testRunning + \" output end  ---------\");\n          }\n          System.out.println(line);\n          testRunning=null;\n          testText=new StringBuilder();\n        }\n else {\n          testText.append(testRunning.substring(testRunning.lastIndexOf('.') + 1) + \" ++ \" + line);\n          testText.append(\"\\n\");\n        }\n      }\n    }\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 29,
        "startColumnNumber" : 20,
        "endLineNumber" : 29,
        "endColumnNumber" : 67
      },
      "nodeContext" : "testMatcher=TEST_START_PATTERN.matcher(line);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.util.regex.Pattern"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 29,
    "startColumnNumber" : 34,
    "endLineNumber" : 29,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}