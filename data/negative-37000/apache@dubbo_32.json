{
  "id" : 32,
  "expression" : "new MockedChannel(){\n  @Override public void send(  Object message) throws RemotingException {\n    Response res=(Response)message;\n    Assertions.assertEquals(request.getId(),res.getId());\n    Assertions.assertEquals(request.getVersion(),res.getVersion());\n    Assertions.assertEquals(Response.BAD_REQUEST,res.getStatus());\n    Assertions.assertNull(res.getResult());\n    Assertions.assertTrue(res.getErrorMessage().contains(BizException.class.getName()));\n    count.incrementAndGet();\n  }\n}\n",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/handler/HeaderExchangeHandlerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new MockedChannel(){\n  @Override public void send(  Object message) throws RemotingException {\n    Response res=(Response)message;\n    Assertions.assertEquals(request.getId(),res.getId());\n    Assertions.assertEquals(request.getVersion(),res.getVersion());\n    Assertions.assertEquals(Response.BAD_REQUEST,res.getStatus());\n    Assertions.assertNull(res.getResult());\n    Assertions.assertTrue(res.getErrorMessage().contains(BizException.class.getName()));\n    count.incrementAndGet();\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 620,
      "startLineNumber" : 139,
      "startColumnNumber" : 33,
      "endLineNumber" : 150,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 81,
    "astHeight" : 11,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 139,
        "startColumnNumber" : 22,
        "endLineNumber" : 150,
        "endColumnNumber" : 9
      },
      "nodeContext" : "mchannel=new MockedChannel(){\n  @Override public void send(  Object message) throws RemotingException {\n    Response res=(Response)message;\n    Assertions.assertEquals(request.getId(),res.getId());\n    Assertions.assertEquals(request.getVersion(),res.getVersion());\n    Assertions.assertEquals(Response.BAD_REQUEST,res.getStatus());\n    Assertions.assertNull(res.getResult());\n    Assertions.assertTrue(res.getErrorMessage().contains(BizException.class.getName()));\n    count.incrementAndGet();\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 83,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 150,
        "endColumnNumber" : 10
      },
      "nodeContext" : "final Channel mchannel=new MockedChannel(){\n  @Override public void send(  Object message) throws RemotingException {\n    Response res=(Response)message;\n    Assertions.assertEquals(request.getId(),res.getId());\n    Assertions.assertEquals(request.getVersion(),res.getVersion());\n    Assertions.assertEquals(Response.BAD_REQUEST,res.getStatus());\n    Assertions.assertNull(res.getResult());\n    Assertions.assertTrue(res.getErrorMessage().contains(BizException.class.getName()));\n    count.incrementAndGet();\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 87,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 132,
        "startColumnNumber" : 92,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Request request=new Request();\n  request.setTwoWay(true);\n  request.setData(new BizException());\n  request.setBroken(true);\n  final AtomicInteger count=new AtomicInteger(0);\n  final Channel mchannel=new MockedChannel(){\n    @Override public void send(    Object message) throws RemotingException {\n      Response res=(Response)message;\n      Assertions.assertEquals(request.getId(),res.getId());\n      Assertions.assertEquals(request.getVersion(),res.getVersion());\n      Assertions.assertEquals(Response.BAD_REQUEST,res.getStatus());\n      Assertions.assertNull(res.getResult());\n      Assertions.assertTrue(res.getErrorMessage().contains(BizException.class.getName()));\n      count.incrementAndGet();\n    }\n  }\n;\n  HeaderExchangeHandler hexhandler=new HeaderExchangeHandler(new MockedExchangeHandler());\n  hexhandler.received(mchannel,request);\n  Assertions.assertEquals(1,count.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1173,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test_received_request_twoway_error_reqeustBroken() throws RemotingException {\n  final Request request=new Request();\n  request.setTwoWay(true);\n  request.setData(new BizException());\n  request.setBroken(true);\n  final AtomicInteger count=new AtomicInteger(0);\n  final Channel mchannel=new MockedChannel(){\n    @Override public void send(    Object message) throws RemotingException {\n      Response res=(Response)message;\n      Assertions.assertEquals(request.getId(),res.getId());\n      Assertions.assertEquals(request.getVersion(),res.getVersion());\n      Assertions.assertEquals(Response.BAD_REQUEST,res.getStatus());\n      Assertions.assertNull(res.getResult());\n      Assertions.assertTrue(res.getErrorMessage().contains(BizException.class.getName()));\n      count.incrementAndGet();\n    }\n  }\n;\n  HeaderExchangeHandler hexhandler=new HeaderExchangeHandler(new MockedExchangeHandler());\n  hexhandler.received(mchannel,request);\n  Assertions.assertEquals(1,count.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 150,
        "endColumnNumber" : 10
      },
      "nodeContext" : "final Channel mchannel=new MockedChannel(){\n  @Override public void send(  Object message) throws RemotingException {\n    Response res=(Response)message;\n    Assertions.assertEquals(request.getId(),res.getId());\n    Assertions.assertEquals(request.getVersion(),res.getVersion());\n    Assertions.assertEquals(Response.BAD_REQUEST,res.getStatus());\n    Assertions.assertNull(res.getResult());\n    Assertions.assertTrue(res.getErrorMessage().contains(BizException.class.getName()));\n    count.incrementAndGet();\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 87,
      "astHeight" : 13
    },
    "tokenLength" : 42,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 620,
    "startLineNumber" : 139,
    "startColumnNumber" : 33,
    "endLineNumber" : 150,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}