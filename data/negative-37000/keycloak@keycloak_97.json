{
  "id" : 97,
  "expression" : "serializedApplicationData",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/forms/FlowOverrideTest.java",
  "occurrences" : 9,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "serializedApplicationData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 159,
      "startColumnNumber" : 30,
      "endLineNumber" : 159,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 159,
        "startColumnNumber" : 30,
        "endLineNumber" : 159,
        "endColumnNumber" : 74
      },
      "nodeContext" : "serializedApplicationData.applicationBaseUrl",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 159,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 75
      },
      "nodeContext" : "client.setBaseUrl(serializedApplicationData.applicationBaseUrl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 159,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 76
      },
      "nodeContext" : "client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 7210,
        "startLineNumber" : 100,
        "startColumnNumber" : 46,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 685,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7221,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 688,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 159,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 76
      },
      "nodeContext" : "client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.testsuite.forms.SerializableApplicationData"
  }, {
    "nodeContext" : "serializedApplicationData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 160,
      "startColumnNumber" : 36,
      "endLineNumber" : 160,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 160,
        "startColumnNumber" : 36,
        "endLineNumber" : 160,
        "endColumnNumber" : 86
      },
      "nodeContext" : "serializedApplicationData.applicationManagementUrl",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 160,
        "startColumnNumber" : 12,
        "endLineNumber" : 160,
        "endColumnNumber" : 87
      },
      "nodeContext" : "client.setManagementUrl(serializedApplicationData.applicationManagementUrl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 160,
        "startColumnNumber" : 12,
        "endLineNumber" : 160,
        "endColumnNumber" : 88
      },
      "nodeContext" : "client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 7210,
        "startLineNumber" : 100,
        "startColumnNumber" : 46,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 685,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7221,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 688,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 160,
        "startColumnNumber" : 12,
        "endLineNumber" : 160,
        "endColumnNumber" : 88
      },
      "nodeContext" : "client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.testsuite.forms.SerializableApplicationData"
  }, {
    "nodeContext" : "serializedApplicationData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 162,
      "startColumnNumber" : 34,
      "endLineNumber" : 162,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 162,
        "startColumnNumber" : 34,
        "endLineNumber" : 162,
        "endColumnNumber" : 82
      },
      "nodeContext" : "serializedApplicationData.applicationRedirectUrl",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 162,
        "startColumnNumber" : 12,
        "endLineNumber" : 162,
        "endColumnNumber" : 83
      },
      "nodeContext" : "client.addRedirectUri(serializedApplicationData.applicationRedirectUrl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 162,
        "startColumnNumber" : 12,
        "endLineNumber" : 162,
        "endColumnNumber" : 84
      },
      "nodeContext" : "client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 7210,
        "startLineNumber" : 100,
        "startColumnNumber" : 46,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 685,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7221,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 688,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 162,
        "startColumnNumber" : 12,
        "endLineNumber" : 162,
        "endColumnNumber" : 84
      },
      "nodeContext" : "client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.testsuite.forms.SerializableApplicationData"
  }, {
    "nodeContext" : "serializedApplicationData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 202,
      "startColumnNumber" : 30,
      "endLineNumber" : 202,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 202,
        "startColumnNumber" : 30,
        "endLineNumber" : 202,
        "endColumnNumber" : 74
      },
      "nodeContext" : "serializedApplicationData.applicationBaseUrl",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 202,
        "endColumnNumber" : 75
      },
      "nodeContext" : "client.setBaseUrl(serializedApplicationData.applicationBaseUrl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 202,
        "endColumnNumber" : 76
      },
      "nodeContext" : "client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 7210,
        "startLineNumber" : 100,
        "startColumnNumber" : 46,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 685,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7221,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 688,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 202,
        "endColumnNumber" : 76
      },
      "nodeContext" : "client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.testsuite.forms.SerializableApplicationData"
  }, {
    "nodeContext" : "serializedApplicationData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 203,
      "startColumnNumber" : 36,
      "endLineNumber" : 203,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 203,
        "startColumnNumber" : 36,
        "endLineNumber" : 203,
        "endColumnNumber" : 86
      },
      "nodeContext" : "serializedApplicationData.applicationManagementUrl",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 203,
        "endColumnNumber" : 87
      },
      "nodeContext" : "client.setManagementUrl(serializedApplicationData.applicationManagementUrl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 203,
        "endColumnNumber" : 88
      },
      "nodeContext" : "client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 7210,
        "startLineNumber" : 100,
        "startColumnNumber" : 46,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 685,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7221,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 688,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 203,
        "endColumnNumber" : 88
      },
      "nodeContext" : "client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.testsuite.forms.SerializableApplicationData"
  }, {
    "nodeContext" : "serializedApplicationData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 205,
      "startColumnNumber" : 34,
      "endLineNumber" : 205,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 205,
        "startColumnNumber" : 34,
        "endLineNumber" : 205,
        "endColumnNumber" : 82
      },
      "nodeContext" : "serializedApplicationData.applicationRedirectUrl",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 205,
        "endColumnNumber" : 83
      },
      "nodeContext" : "client.addRedirectUri(serializedApplicationData.applicationRedirectUrl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 205,
        "endColumnNumber" : 84
      },
      "nodeContext" : "client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 7210,
        "startLineNumber" : 100,
        "startColumnNumber" : 46,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 685,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7221,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 688,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 205,
        "endColumnNumber" : 84
      },
      "nodeContext" : "client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.testsuite.forms.SerializableApplicationData"
  }, {
    "nodeContext" : "serializedApplicationData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 214,
      "startColumnNumber" : 30,
      "endLineNumber" : 214,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 214,
        "startColumnNumber" : 30,
        "endLineNumber" : 214,
        "endColumnNumber" : 74
      },
      "nodeContext" : "serializedApplicationData.applicationBaseUrl",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 214,
        "startColumnNumber" : 12,
        "endLineNumber" : 214,
        "endColumnNumber" : 75
      },
      "nodeContext" : "client.setBaseUrl(serializedApplicationData.applicationBaseUrl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 214,
        "startColumnNumber" : 12,
        "endLineNumber" : 214,
        "endColumnNumber" : 76
      },
      "nodeContext" : "client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 7210,
        "startLineNumber" : 100,
        "startColumnNumber" : 46,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 685,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7221,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 688,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 214,
        "startColumnNumber" : 12,
        "endLineNumber" : 214,
        "endColumnNumber" : 76
      },
      "nodeContext" : "client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.testsuite.forms.SerializableApplicationData"
  }, {
    "nodeContext" : "serializedApplicationData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 215,
      "startColumnNumber" : 36,
      "endLineNumber" : 215,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 215,
        "startColumnNumber" : 36,
        "endLineNumber" : 215,
        "endColumnNumber" : 86
      },
      "nodeContext" : "serializedApplicationData.applicationManagementUrl",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 215,
        "startColumnNumber" : 12,
        "endLineNumber" : 215,
        "endColumnNumber" : 87
      },
      "nodeContext" : "client.setManagementUrl(serializedApplicationData.applicationManagementUrl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 215,
        "startColumnNumber" : 12,
        "endLineNumber" : 215,
        "endColumnNumber" : 88
      },
      "nodeContext" : "client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 7210,
        "startLineNumber" : 100,
        "startColumnNumber" : 46,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 685,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7221,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 688,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 215,
        "startColumnNumber" : 12,
        "endLineNumber" : 215,
        "endColumnNumber" : 88
      },
      "nodeContext" : "client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.testsuite.forms.SerializableApplicationData"
  }, {
    "nodeContext" : "serializedApplicationData",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 217,
      "startColumnNumber" : 34,
      "endLineNumber" : 217,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 217,
        "startColumnNumber" : 34,
        "endLineNumber" : 217,
        "endColumnNumber" : 82
      },
      "nodeContext" : "serializedApplicationData.applicationRedirectUrl",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 83
      },
      "nodeContext" : "client.addRedirectUri(serializedApplicationData.applicationRedirectUrl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 84
      },
      "nodeContext" : "client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 7210,
        "startLineNumber" : 100,
        "startColumnNumber" : 46,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 685,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7221,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  RealmModel realm=session.realms().getRealmByName(\"test\");\n  ClientModel client=session.clients().getClientByClientId(realm,\"test-app-flow\");\n  if (client != null) {\n    return;\n  }\n  client=session.clients().getClientByClientId(realm,\"test-app\");\n  client.setDirectAccessGrantsEnabled(true);\n  AuthenticationFlowModel browser=new AuthenticationFlowModel();\n  browser.setAlias(\"parent-flow\");\n  browser.setDescription(\"browser based authentication\");\n  browser.setProviderId(\"basic-flow\");\n  browser.setTopLevel(true);\n  browser.setBuiltIn(true);\n  browser=realm.addAuthenticationFlow(browser);\n  AuthenticationFlowModel subflow2=new AuthenticationFlowModel();\n  subflow2.setTopLevel(false);\n  subflow2.setBuiltIn(true);\n  subflow2.setAlias(\"subflow-2\");\n  subflow2.setDescription(\"username+password AND pushButton\");\n  subflow2.setProviderId(\"basic-flow\");\n  subflow2=realm.addAuthenticationFlow(subflow2);\n  AuthenticationExecutionModel execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(browser.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.ALTERNATIVE);\n  execution.setFlowId(subflow2.getId());\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(true);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(PushButtonAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(subflow2.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernamePasswordFormFactory.PROVIDER_ID);\n  execution.setPriority(20);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_FLOW);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setPublicClient(false);\n  AuthenticationFlowModel directGrant=new AuthenticationFlowModel();\n  directGrant.setAlias(\"direct-override-flow\");\n  directGrant.setDescription(\"direct grant based authentication\");\n  directGrant.setProviderId(\"basic-flow\");\n  directGrant.setTopLevel(true);\n  directGrant.setBuiltIn(true);\n  directGrant=realm.addAuthenticationFlow(directGrant);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(directGrant.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(UsernameOnlyAuthenticator.PROVIDER_ID);\n  execution.setPriority(10);\n  execution.setAuthenticatorFlow(false);\n  realm.addAuthenticatorExecution(execution);\n  AuthenticationFlowModel challengeOTP=new AuthenticationFlowModel();\n  challengeOTP.setAlias(\"challenge-override-flow\");\n  challengeOTP.setDescription(\"challenge grant based authentication\");\n  challengeOTP.setProviderId(\"basic-flow\");\n  challengeOTP.setTopLevel(true);\n  challengeOTP.setBuiltIn(true);\n  challengeOTP=realm.addAuthenticationFlow(challengeOTP);\n  execution=new AuthenticationExecutionModel();\n  execution.setParentFlow(challengeOTP.getId());\n  execution.setRequirement(AuthenticationExecutionModel.Requirement.REQUIRED);\n  execution.setAuthenticator(BasicAuthOTPAuthenticatorFactory.PROVIDER_ID);\n  execution.setPriority(10);\n  realm.addAuthenticatorExecution(execution);\n  client=realm.addClient(TEST_APP_DIRECT_OVERRIDE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(false);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,browser.getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,directGrant.getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE);\n  client.setSecret(\"password\");\n  client.setBaseUrl(serializedApplicationData.applicationBaseUrl);\n  client.setManagementUrl(serializedApplicationData.applicationManagementUrl);\n  client.setEnabled(true);\n  client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"http challenge\").getId());\n  client=realm.addClient(TEST_APP_HTTP_CHALLENGE_OTP);\n  client.setSecret(\"password\");\n  client.setBaseUrl(\"http://localhost:8180/auth/realms/master/app/auth\");\n  client.setManagementUrl(\"http://localhost:8180/auth/realms/master/app/admin\");\n  client.setEnabled(true);\n  client.addRedirectUri(\"http://localhost:8180/auth/realms/master/app/auth/*\");\n  client.setPublicClient(true);\n  client.setDirectAccessGrantsEnabled(true);\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.DIRECT_GRANT_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n  client.setAuthenticationFlowBindingOverride(AuthenticationFlowBindings.BROWSER_BINDING,realm.getFlowByAlias(\"challenge-override-flow\").getId());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 688,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 84
      },
      "nodeContext" : "client.addRedirectUri(serializedApplicationData.applicationRedirectUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.testsuite.forms.SerializableApplicationData"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 159,
    "startColumnNumber" : 30,
    "endLineNumber" : 159,
    "endColumnNumber" : 55
  }, {
    "charLength" : 25,
    "startLineNumber" : 160,
    "startColumnNumber" : 36,
    "endLineNumber" : 160,
    "endColumnNumber" : 61
  }, {
    "charLength" : 25,
    "startLineNumber" : 162,
    "startColumnNumber" : 34,
    "endLineNumber" : 162,
    "endColumnNumber" : 59
  }, {
    "charLength" : 25,
    "startLineNumber" : 202,
    "startColumnNumber" : 30,
    "endLineNumber" : 202,
    "endColumnNumber" : 55
  }, {
    "charLength" : 25,
    "startLineNumber" : 203,
    "startColumnNumber" : 36,
    "endLineNumber" : 203,
    "endColumnNumber" : 61
  }, {
    "charLength" : 25,
    "startLineNumber" : 205,
    "startColumnNumber" : 34,
    "endLineNumber" : 205,
    "endColumnNumber" : 59
  }, {
    "charLength" : 25,
    "startLineNumber" : 214,
    "startColumnNumber" : 30,
    "endLineNumber" : 214,
    "endColumnNumber" : 55
  }, {
    "charLength" : 25,
    "startLineNumber" : 215,
    "startColumnNumber" : 36,
    "endLineNumber" : 215,
    "endColumnNumber" : 61
  }, {
    "charLength" : 25,
    "startLineNumber" : 217,
    "startColumnNumber" : 34,
    "endLineNumber" : 217,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  } ]
}