{
  "id" : 244,
  "expression" : "stackTraceFilter.filterFirst(stackTraceHolder,isInline)",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/debugging/LocationImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "stackTraceFilter.filterFirst(stackTraceHolder,isInline)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 56,
      "startLineNumber" : 50,
      "startColumnNumber" : 37,
      "endLineNumber" : 50,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 50,
        "startColumnNumber" : 26,
        "endLineNumber" : 50,
        "endColumnNumber" : 93
      },
      "nodeContext" : "filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 94
      },
      "nodeContext" : "StackTraceElement filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 49,
        "startColumnNumber" : 93,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline);\n  if (filtered == null) {\n    this.stackTraceLine=\"-> at <<unknown line>>\";\n    this.sourceFile=\"<unknown source file>\";\n  }\n else {\n    this.stackTraceLine=\"-> at \" + filtered.toString();\n    this.sourceFile=filtered.getFileName();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 937,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Eagerly compute the stacktrace line from the stackTraceHolder. Storing the Throwable is memory-intensive for tests that have large stacktraces and have a lot of invocations on mocks.\n */\nprivate void computeStackTraceInformation(StackTraceFilter stackTraceFilter,Throwable stackTraceHolder,boolean isInline){\n  StackTraceElement filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline);\n  if (filtered == null) {\n    this.stackTraceLine=\"-> at <<unknown line>>\";\n    this.sourceFile=\"<unknown source file>\";\n  }\n else {\n    this.stackTraceLine=\"-> at \" + filtered.toString();\n    this.sourceFile=filtered.getFileName();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 94
      },
      "nodeContext" : "StackTraceElement filtered=stackTraceFilter.filterFirst(stackTraceHolder,isInline);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.StackTraceElement"
  } ],
  "positionList" : [ {
    "charLength" : 56,
    "startLineNumber" : 50,
    "startColumnNumber" : 37,
    "endLineNumber" : 50,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}