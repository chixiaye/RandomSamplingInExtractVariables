{
  "id" : 117,
  "expression" : "o",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableDeferTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 75,
      "startColumnNumber" : 25,
      "endLineNumber" : 75,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 27
      },
      "nodeContext" : "result.subscribe(o)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 28
      },
      "nodeContext" : "result.subscribe(o);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 66,
        "startColumnNumber" : 42,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Supplier<Flowable<String>> factory=mock(Supplier.class);\n  when(factory.get()).thenThrow(new TestException());\n  Flowable<String> result=Flowable.defer(factory);\n  DefaultObserver<String> o=mock(DefaultObserver.class);\n  result.subscribe(o);\n  verify(o).onError(any(TestException.class));\n  verify(o,never()).onNext(any(String.class));\n  verify(o,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDeferFunctionThrows(){\n  Supplier<Flowable<String>> factory=mock(Supplier.class);\n  when(factory.get()).thenThrow(new TestException());\n  Flowable<String> result=Flowable.defer(factory);\n  DefaultObserver<String> o=mock(DefaultObserver.class);\n  result.subscribe(o);\n  verify(o).onError(any(TestException.class));\n  verify(o,never()).onNext(any(String.class));\n  verify(o,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 28
      },
      "nodeContext" : "result.subscribe(o);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.subscribers.DefaultObserver<java.lang.String>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 77,
      "startColumnNumber" : 15,
      "endLineNumber" : 77,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 17
      },
      "nodeContext" : "verify(o)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 51
      },
      "nodeContext" : "verify(o).onError(any(TestException.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 52
      },
      "nodeContext" : "verify(o).onError(any(TestException.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 66,
        "startColumnNumber" : 42,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Supplier<Flowable<String>> factory=mock(Supplier.class);\n  when(factory.get()).thenThrow(new TestException());\n  Flowable<String> result=Flowable.defer(factory);\n  DefaultObserver<String> o=mock(DefaultObserver.class);\n  result.subscribe(o);\n  verify(o).onError(any(TestException.class));\n  verify(o,never()).onNext(any(String.class));\n  verify(o,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDeferFunctionThrows(){\n  Supplier<Flowable<String>> factory=mock(Supplier.class);\n  when(factory.get()).thenThrow(new TestException());\n  Flowable<String> result=Flowable.defer(factory);\n  DefaultObserver<String> o=mock(DefaultObserver.class);\n  result.subscribe(o);\n  verify(o).onError(any(TestException.class));\n  verify(o,never()).onNext(any(String.class));\n  verify(o,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 52
      },
      "nodeContext" : "verify(o).onError(any(TestException.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.subscribers.DefaultObserver<java.lang.String>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 78,
      "startColumnNumber" : 15,
      "endLineNumber" : 78,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 26
      },
      "nodeContext" : "verify(o,never())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 52
      },
      "nodeContext" : "verify(o,never()).onNext(any(String.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 53
      },
      "nodeContext" : "verify(o,never()).onNext(any(String.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 66,
        "startColumnNumber" : 42,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Supplier<Flowable<String>> factory=mock(Supplier.class);\n  when(factory.get()).thenThrow(new TestException());\n  Flowable<String> result=Flowable.defer(factory);\n  DefaultObserver<String> o=mock(DefaultObserver.class);\n  result.subscribe(o);\n  verify(o).onError(any(TestException.class));\n  verify(o,never()).onNext(any(String.class));\n  verify(o,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDeferFunctionThrows(){\n  Supplier<Flowable<String>> factory=mock(Supplier.class);\n  when(factory.get()).thenThrow(new TestException());\n  Flowable<String> result=Flowable.defer(factory);\n  DefaultObserver<String> o=mock(DefaultObserver.class);\n  result.subscribe(o);\n  verify(o).onError(any(TestException.class));\n  verify(o,never()).onNext(any(String.class));\n  verify(o,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 53
      },
      "nodeContext" : "verify(o,never()).onNext(any(String.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.subscribers.DefaultObserver<java.lang.String>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 79,
      "startColumnNumber" : 15,
      "endLineNumber" : 79,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 26
      },
      "nodeContext" : "verify(o,never())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 39
      },
      "nodeContext" : "verify(o,never()).onComplete()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 40
      },
      "nodeContext" : "verify(o,never()).onComplete();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 66,
        "startColumnNumber" : 42,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Supplier<Flowable<String>> factory=mock(Supplier.class);\n  when(factory.get()).thenThrow(new TestException());\n  Flowable<String> result=Flowable.defer(factory);\n  DefaultObserver<String> o=mock(DefaultObserver.class);\n  result.subscribe(o);\n  verify(o).onError(any(TestException.class));\n  verify(o,never()).onNext(any(String.class));\n  verify(o,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDeferFunctionThrows(){\n  Supplier<Flowable<String>> factory=mock(Supplier.class);\n  when(factory.get()).thenThrow(new TestException());\n  Flowable<String> result=Flowable.defer(factory);\n  DefaultObserver<String> o=mock(DefaultObserver.class);\n  result.subscribe(o);\n  verify(o).onError(any(TestException.class));\n  verify(o,never()).onNext(any(String.class));\n  verify(o,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 40
      },
      "nodeContext" : "verify(o,never()).onComplete();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.subscribers.DefaultObserver<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 75,
    "startColumnNumber" : 25,
    "endLineNumber" : 75,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 77,
    "startColumnNumber" : 15,
    "endLineNumber" : 77,
    "endColumnNumber" : 16
  }, {
    "charLength" : 1,
    "startLineNumber" : 78,
    "startColumnNumber" : 15,
    "endLineNumber" : 78,
    "endColumnNumber" : 16
  }, {
    "charLength" : 1,
    "startLineNumber" : 79,
    "startColumnNumber" : 15,
    "endLineNumber" : 79,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}