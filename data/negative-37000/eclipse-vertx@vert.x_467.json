{
  "id" : 467,
  "expression" : "name1",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/VerticleFactoryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "name1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 130,
      "startColumnNumber" : 25,
      "endLineNumber" : 130,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 871,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 6
      },
      "nodeContext" : "vertx.deployVerticle(name1,new DeploymentOptions(),ar -> {\n  assertTrue(ar.succeeded());\n  assertEquals(name1,fact1.identifier);\n  assertTrue(verticle1.startCalled);\n  assertFalse(verticle2.startCalled);\n  assertFalse(verticle3.startCalled);\n  assertNull(fact2.identifier);\n  assertNull(fact3.identifier);\n  vertx.deployVerticle(name2,new DeploymentOptions(),ar2 -> {\n    assertTrue(ar2.succeeded());\n    assertEquals(name2,fact2.identifier);\n    assertTrue(verticle2.startCalled);\n    assertFalse(verticle3.startCalled);\n    assertNull(fact3.identifier);\n    vertx.deployVerticle(name3,new DeploymentOptions(),ar3 -> {\n      assertTrue(ar3.succeeded());\n      assertEquals(name3,fact3.identifier);\n      assertTrue(verticle3.startCalled);\n      testComplete();\n    }\n);\n  }\n);\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 131,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 872,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 7
      },
      "nodeContext" : "vertx.deployVerticle(name1,new DeploymentOptions(),ar -> {\n  assertTrue(ar.succeeded());\n  assertEquals(name1,fact1.identifier);\n  assertTrue(verticle1.startCalled);\n  assertFalse(verticle2.startCalled);\n  assertFalse(verticle3.startCalled);\n  assertNull(fact2.identifier);\n  assertNull(fact3.identifier);\n  vertx.deployVerticle(name2,new DeploymentOptions(),ar2 -> {\n    assertTrue(ar2.succeeded());\n    assertEquals(name2,fact2.identifier);\n    assertTrue(verticle2.startCalled);\n    assertFalse(verticle3.startCalled);\n    assertNull(fact3.identifier);\n    vertx.deployVerticle(name3,new DeploymentOptions(),ar3 -> {\n      assertTrue(ar3.succeeded());\n      assertEquals(name3,fact3.identifier);\n      assertTrue(verticle3.startCalled);\n      testComplete();\n    }\n);\n  }\n);\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 132,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 117,
        "startColumnNumber" : 36,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TestVerticle verticle1=new TestVerticle();\n  TestVerticle verticle2=new TestVerticle();\n  TestVerticle verticle3=new TestVerticle();\n  TestVerticleFactory fact1=new TestVerticleFactory(\"aa\",verticle1);\n  TestVerticleFactory fact2=new TestVerticleFactory(\"bb\",verticle2);\n  TestVerticleFactory fact3=new TestVerticleFactory(\"cc\",verticle3);\n  vertx.registerVerticleFactory(fact1);\n  vertx.registerVerticleFactory(fact2);\n  vertx.registerVerticleFactory(fact3);\n  String name1=\"aa:myverticle1\";\n  String name2=\"bb:myverticle2\";\n  String name3=\"cc:myverticle3\";\n  vertx.deployVerticle(name1,new DeploymentOptions(),ar -> {\n    assertTrue(ar.succeeded());\n    assertEquals(name1,fact1.identifier);\n    assertTrue(verticle1.startCalled);\n    assertFalse(verticle2.startCalled);\n    assertFalse(verticle3.startCalled);\n    assertNull(fact2.identifier);\n    assertNull(fact3.identifier);\n    vertx.deployVerticle(name2,new DeploymentOptions(),ar2 -> {\n      assertTrue(ar2.succeeded());\n      assertEquals(name2,fact2.identifier);\n      assertTrue(verticle2.startCalled);\n      assertFalse(verticle3.startCalled);\n      assertNull(fact3.identifier);\n      vertx.deployVerticle(name3,new DeploymentOptions(),ar3 -> {\n        assertTrue(ar3.succeeded());\n        assertEquals(name3,fact3.identifier);\n        assertTrue(verticle3.startCalled);\n        testComplete();\n      }\n);\n    }\n);\n  }\n);\n  await();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1543,
        "startLineNumber" : 116,
        "startColumnNumber" : 2,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMatchWithPrefix(){\n  TestVerticle verticle1=new TestVerticle();\n  TestVerticle verticle2=new TestVerticle();\n  TestVerticle verticle3=new TestVerticle();\n  TestVerticleFactory fact1=new TestVerticleFactory(\"aa\",verticle1);\n  TestVerticleFactory fact2=new TestVerticleFactory(\"bb\",verticle2);\n  TestVerticleFactory fact3=new TestVerticleFactory(\"cc\",verticle3);\n  vertx.registerVerticleFactory(fact1);\n  vertx.registerVerticleFactory(fact2);\n  vertx.registerVerticleFactory(fact3);\n  String name1=\"aa:myverticle1\";\n  String name2=\"bb:myverticle2\";\n  String name3=\"cc:myverticle3\";\n  vertx.deployVerticle(name1,new DeploymentOptions(),ar -> {\n    assertTrue(ar.succeeded());\n    assertEquals(name1,fact1.identifier);\n    assertTrue(verticle1.startCalled);\n    assertFalse(verticle2.startCalled);\n    assertFalse(verticle3.startCalled);\n    assertNull(fact2.identifier);\n    assertNull(fact3.identifier);\n    vertx.deployVerticle(name2,new DeploymentOptions(),ar2 -> {\n      assertTrue(ar2.succeeded());\n      assertEquals(name2,fact2.identifier);\n      assertTrue(verticle2.startCalled);\n      assertFalse(verticle3.startCalled);\n      assertNull(fact3.identifier);\n      vertx.deployVerticle(name3,new DeploymentOptions(),ar3 -> {\n        assertTrue(ar3.succeeded());\n        assertEquals(name3,fact3.identifier);\n        assertTrue(verticle3.startCalled);\n        testComplete();\n      }\n);\n    }\n);\n  }\n);\n  await();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 229,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 871,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 6
      },
      "nodeContext" : "vertx.deployVerticle(name1,new DeploymentOptions(),ar -> {\n  assertTrue(ar.succeeded());\n  assertEquals(name1,fact1.identifier);\n  assertTrue(verticle1.startCalled);\n  assertFalse(verticle2.startCalled);\n  assertFalse(verticle3.startCalled);\n  assertNull(fact2.identifier);\n  assertNull(fact3.identifier);\n  vertx.deployVerticle(name2,new DeploymentOptions(),ar2 -> {\n    assertTrue(ar2.succeeded());\n    assertEquals(name2,fact2.identifier);\n    assertTrue(verticle2.startCalled);\n    assertFalse(verticle3.startCalled);\n    assertNull(fact3.identifier);\n    vertx.deployVerticle(name3,new DeploymentOptions(),ar3 -> {\n      assertTrue(ar3.succeeded());\n      assertEquals(name3,fact3.identifier);\n      assertTrue(verticle3.startCalled);\n      testComplete();\n    }\n);\n  }\n);\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 131,
      "astHeight" : 15
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 130,
    "startColumnNumber" : 25,
    "endLineNumber" : 130,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}