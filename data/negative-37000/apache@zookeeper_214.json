{
  "id" : 214,
  "expression" : "results",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/test/org/apache/zookeeper/test/SyncCallTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "results",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 55,
      "startColumnNumber" : 53,
      "endLineNumber" : 55,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 61
      },
      "nodeContext" : "zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 62
      },
      "nodeContext" : "zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 62
      },
      "nodeContext" : "for (int i=0; i < 100; i++) zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.info(\"Starting ZK:\" + (new Date()).toString());\n  opsCount=new CountDownLatch(limit);\n  ZooKeeper zk=createClient();\n  LOG.info(\"Beginning test:\" + (new Date()).toString());\n  for (int i=0; i < 100; i++)   zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.sync(\"/test\",this,results);\n  for (int i=0; i < 100; i++)   zk.delete(\"/test\" + i,0,this,results);\n  for (int i=0; i < 100; i++)   zk.getChildren(\"/\",new NullWatcher(),this,results);\n  LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n  if (!opsCount.await(10000,TimeUnit.MILLISECONDS))   fail(\"Haven't received all confirmations\" + opsCount.getCount());\n  for (int i=0; i < limit; i++) {\n    assertEquals(0,(int)results.get(i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  LOG.info(\"Starting ZK:\" + (new Date()).toString());\n  opsCount=new CountDownLatch(limit);\n  ZooKeeper zk=createClient();\n  LOG.info(\"Beginning test:\" + (new Date()).toString());\n  for (int i=0; i < 100; i++)   zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.sync(\"/test\",this,results);\n  for (int i=0; i < 100; i++)   zk.delete(\"/test\" + i,0,this,results);\n  for (int i=0; i < 100; i++)   zk.getChildren(\"/\",new NullWatcher(),this,results);\n  LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n  if (!opsCount.await(10000,TimeUnit.MILLISECONDS))   fail(\"Haven't received all confirmations\" + opsCount.getCount());\n  for (int i=0; i < limit; i++) {\n    assertEquals(0,(int)results.get(i));\n  }\n}\n catch (IOException e) {\n  System.out.println(e.toString());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 186,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 46,
        "startColumnNumber" : 44,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    LOG.info(\"Starting ZK:\" + (new Date()).toString());\n    opsCount=new CountDownLatch(limit);\n    ZooKeeper zk=createClient();\n    LOG.info(\"Beginning test:\" + (new Date()).toString());\n    for (int i=0; i < 100; i++)     zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.sync(\"/test\",this,results);\n    for (int i=0; i < 100; i++)     zk.delete(\"/test\" + i,0,this,results);\n    for (int i=0; i < 100; i++)     zk.getChildren(\"/\",new NullWatcher(),this,results);\n    LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n    if (!opsCount.await(10000,TimeUnit.MILLISECONDS))     fail(\"Haven't received all confirmations\" + opsCount.getCount());\n    for (int i=0; i < limit; i++) {\n      assertEquals(0,(int)results.get(i));\n    }\n  }\n catch (  IOException e) {\n    System.out.println(e.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSync() throws Exception {\n  try {\n    LOG.info(\"Starting ZK:\" + (new Date()).toString());\n    opsCount=new CountDownLatch(limit);\n    ZooKeeper zk=createClient();\n    LOG.info(\"Beginning test:\" + (new Date()).toString());\n    for (int i=0; i < 100; i++)     zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.sync(\"/test\",this,results);\n    for (int i=0; i < 100; i++)     zk.delete(\"/test\" + i,0,this,results);\n    for (int i=0; i < 100; i++)     zk.getChildren(\"/\",new NullWatcher(),this,results);\n    LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n    if (!opsCount.await(10000,TimeUnit.MILLISECONDS))     fail(\"Haven't received all confirmations\" + opsCount.getCount());\n    for (int i=0; i < limit; i++) {\n      assertEquals(0,(int)results.get(i));\n    }\n  }\n catch (  IOException e) {\n    System.out.println(e.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 61
      },
      "nodeContext" : "zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Integer>"
  }, {
    "nodeContext" : "results",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 56,
      "startColumnNumber" : 35,
      "endLineNumber" : 56,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 43
      },
      "nodeContext" : "zk.sync(\"/test\",this,results)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 44
      },
      "nodeContext" : "zk.sync(\"/test\",this,results);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.info(\"Starting ZK:\" + (new Date()).toString());\n  opsCount=new CountDownLatch(limit);\n  ZooKeeper zk=createClient();\n  LOG.info(\"Beginning test:\" + (new Date()).toString());\n  for (int i=0; i < 100; i++)   zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.sync(\"/test\",this,results);\n  for (int i=0; i < 100; i++)   zk.delete(\"/test\" + i,0,this,results);\n  for (int i=0; i < 100; i++)   zk.getChildren(\"/\",new NullWatcher(),this,results);\n  LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n  if (!opsCount.await(10000,TimeUnit.MILLISECONDS))   fail(\"Haven't received all confirmations\" + opsCount.getCount());\n  for (int i=0; i < limit; i++) {\n    assertEquals(0,(int)results.get(i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  LOG.info(\"Starting ZK:\" + (new Date()).toString());\n  opsCount=new CountDownLatch(limit);\n  ZooKeeper zk=createClient();\n  LOG.info(\"Beginning test:\" + (new Date()).toString());\n  for (int i=0; i < 100; i++)   zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.sync(\"/test\",this,results);\n  for (int i=0; i < 100; i++)   zk.delete(\"/test\" + i,0,this,results);\n  for (int i=0; i < 100; i++)   zk.getChildren(\"/\",new NullWatcher(),this,results);\n  LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n  if (!opsCount.await(10000,TimeUnit.MILLISECONDS))   fail(\"Haven't received all confirmations\" + opsCount.getCount());\n  for (int i=0; i < limit; i++) {\n    assertEquals(0,(int)results.get(i));\n  }\n}\n catch (IOException e) {\n  System.out.println(e.toString());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 186,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 46,
        "startColumnNumber" : 44,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    LOG.info(\"Starting ZK:\" + (new Date()).toString());\n    opsCount=new CountDownLatch(limit);\n    ZooKeeper zk=createClient();\n    LOG.info(\"Beginning test:\" + (new Date()).toString());\n    for (int i=0; i < 100; i++)     zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.sync(\"/test\",this,results);\n    for (int i=0; i < 100; i++)     zk.delete(\"/test\" + i,0,this,results);\n    for (int i=0; i < 100; i++)     zk.getChildren(\"/\",new NullWatcher(),this,results);\n    LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n    if (!opsCount.await(10000,TimeUnit.MILLISECONDS))     fail(\"Haven't received all confirmations\" + opsCount.getCount());\n    for (int i=0; i < limit; i++) {\n      assertEquals(0,(int)results.get(i));\n    }\n  }\n catch (  IOException e) {\n    System.out.println(e.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSync() throws Exception {\n  try {\n    LOG.info(\"Starting ZK:\" + (new Date()).toString());\n    opsCount=new CountDownLatch(limit);\n    ZooKeeper zk=createClient();\n    LOG.info(\"Beginning test:\" + (new Date()).toString());\n    for (int i=0; i < 100; i++)     zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.sync(\"/test\",this,results);\n    for (int i=0; i < 100; i++)     zk.delete(\"/test\" + i,0,this,results);\n    for (int i=0; i < 100; i++)     zk.getChildren(\"/\",new NullWatcher(),this,results);\n    LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n    if (!opsCount.await(10000,TimeUnit.MILLISECONDS))     fail(\"Haven't received all confirmations\" + opsCount.getCount());\n    for (int i=0; i < limit; i++) {\n      assertEquals(0,(int)results.get(i));\n    }\n  }\n catch (  IOException e) {\n    System.out.println(e.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 44
      },
      "nodeContext" : "zk.sync(\"/test\",this,results);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Integer>"
  }, {
    "nodeContext" : "results",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 58,
      "startColumnNumber" : 48,
      "endLineNumber" : 58,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 56
      },
      "nodeContext" : "zk.delete(\"/test\" + i,0,this,results)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 57
      },
      "nodeContext" : "zk.delete(\"/test\" + i,0,this,results);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 57
      },
      "nodeContext" : "for (int i=0; i < 100; i++) zk.delete(\"/test\" + i,0,this,results);\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.info(\"Starting ZK:\" + (new Date()).toString());\n  opsCount=new CountDownLatch(limit);\n  ZooKeeper zk=createClient();\n  LOG.info(\"Beginning test:\" + (new Date()).toString());\n  for (int i=0; i < 100; i++)   zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.sync(\"/test\",this,results);\n  for (int i=0; i < 100; i++)   zk.delete(\"/test\" + i,0,this,results);\n  for (int i=0; i < 100; i++)   zk.getChildren(\"/\",new NullWatcher(),this,results);\n  LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n  if (!opsCount.await(10000,TimeUnit.MILLISECONDS))   fail(\"Haven't received all confirmations\" + opsCount.getCount());\n  for (int i=0; i < limit; i++) {\n    assertEquals(0,(int)results.get(i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  LOG.info(\"Starting ZK:\" + (new Date()).toString());\n  opsCount=new CountDownLatch(limit);\n  ZooKeeper zk=createClient();\n  LOG.info(\"Beginning test:\" + (new Date()).toString());\n  for (int i=0; i < 100; i++)   zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.sync(\"/test\",this,results);\n  for (int i=0; i < 100; i++)   zk.delete(\"/test\" + i,0,this,results);\n  for (int i=0; i < 100; i++)   zk.getChildren(\"/\",new NullWatcher(),this,results);\n  LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n  if (!opsCount.await(10000,TimeUnit.MILLISECONDS))   fail(\"Haven't received all confirmations\" + opsCount.getCount());\n  for (int i=0; i < limit; i++) {\n    assertEquals(0,(int)results.get(i));\n  }\n}\n catch (IOException e) {\n  System.out.println(e.toString());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 186,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 46,
        "startColumnNumber" : 44,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    LOG.info(\"Starting ZK:\" + (new Date()).toString());\n    opsCount=new CountDownLatch(limit);\n    ZooKeeper zk=createClient();\n    LOG.info(\"Beginning test:\" + (new Date()).toString());\n    for (int i=0; i < 100; i++)     zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.sync(\"/test\",this,results);\n    for (int i=0; i < 100; i++)     zk.delete(\"/test\" + i,0,this,results);\n    for (int i=0; i < 100; i++)     zk.getChildren(\"/\",new NullWatcher(),this,results);\n    LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n    if (!opsCount.await(10000,TimeUnit.MILLISECONDS))     fail(\"Haven't received all confirmations\" + opsCount.getCount());\n    for (int i=0; i < limit; i++) {\n      assertEquals(0,(int)results.get(i));\n    }\n  }\n catch (  IOException e) {\n    System.out.println(e.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSync() throws Exception {\n  try {\n    LOG.info(\"Starting ZK:\" + (new Date()).toString());\n    opsCount=new CountDownLatch(limit);\n    ZooKeeper zk=createClient();\n    LOG.info(\"Beginning test:\" + (new Date()).toString());\n    for (int i=0; i < 100; i++)     zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.sync(\"/test\",this,results);\n    for (int i=0; i < 100; i++)     zk.delete(\"/test\" + i,0,this,results);\n    for (int i=0; i < 100; i++)     zk.getChildren(\"/\",new NullWatcher(),this,results);\n    LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n    if (!opsCount.await(10000,TimeUnit.MILLISECONDS))     fail(\"Haven't received all confirmations\" + opsCount.getCount());\n    for (int i=0; i < limit; i++) {\n      assertEquals(0,(int)results.get(i));\n    }\n  }\n catch (  IOException e) {\n    System.out.println(e.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 57
      },
      "nodeContext" : "zk.delete(\"/test\" + i,0,this,results);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Integer>"
  }, {
    "nodeContext" : "results",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 60,
      "startColumnNumber" : 61,
      "endLineNumber" : 60,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 69
      },
      "nodeContext" : "zk.getChildren(\"/\",new NullWatcher(),this,results)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 70
      },
      "nodeContext" : "zk.getChildren(\"/\",new NullWatcher(),this,results);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 70
      },
      "nodeContext" : "for (int i=0; i < 100; i++) zk.getChildren(\"/\",new NullWatcher(),this,results);\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.info(\"Starting ZK:\" + (new Date()).toString());\n  opsCount=new CountDownLatch(limit);\n  ZooKeeper zk=createClient();\n  LOG.info(\"Beginning test:\" + (new Date()).toString());\n  for (int i=0; i < 100; i++)   zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.sync(\"/test\",this,results);\n  for (int i=0; i < 100; i++)   zk.delete(\"/test\" + i,0,this,results);\n  for (int i=0; i < 100; i++)   zk.getChildren(\"/\",new NullWatcher(),this,results);\n  LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n  if (!opsCount.await(10000,TimeUnit.MILLISECONDS))   fail(\"Haven't received all confirmations\" + opsCount.getCount());\n  for (int i=0; i < limit; i++) {\n    assertEquals(0,(int)results.get(i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  LOG.info(\"Starting ZK:\" + (new Date()).toString());\n  opsCount=new CountDownLatch(limit);\n  ZooKeeper zk=createClient();\n  LOG.info(\"Beginning test:\" + (new Date()).toString());\n  for (int i=0; i < 100; i++)   zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.sync(\"/test\",this,results);\n  for (int i=0; i < 100; i++)   zk.delete(\"/test\" + i,0,this,results);\n  for (int i=0; i < 100; i++)   zk.getChildren(\"/\",new NullWatcher(),this,results);\n  LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n  if (!opsCount.await(10000,TimeUnit.MILLISECONDS))   fail(\"Haven't received all confirmations\" + opsCount.getCount());\n  for (int i=0; i < limit; i++) {\n    assertEquals(0,(int)results.get(i));\n  }\n}\n catch (IOException e) {\n  System.out.println(e.toString());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 186,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 46,
        "startColumnNumber" : 44,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    LOG.info(\"Starting ZK:\" + (new Date()).toString());\n    opsCount=new CountDownLatch(limit);\n    ZooKeeper zk=createClient();\n    LOG.info(\"Beginning test:\" + (new Date()).toString());\n    for (int i=0; i < 100; i++)     zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.sync(\"/test\",this,results);\n    for (int i=0; i < 100; i++)     zk.delete(\"/test\" + i,0,this,results);\n    for (int i=0; i < 100; i++)     zk.getChildren(\"/\",new NullWatcher(),this,results);\n    LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n    if (!opsCount.await(10000,TimeUnit.MILLISECONDS))     fail(\"Haven't received all confirmations\" + opsCount.getCount());\n    for (int i=0; i < limit; i++) {\n      assertEquals(0,(int)results.get(i));\n    }\n  }\n catch (  IOException e) {\n    System.out.println(e.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSync() throws Exception {\n  try {\n    LOG.info(\"Starting ZK:\" + (new Date()).toString());\n    opsCount=new CountDownLatch(limit);\n    ZooKeeper zk=createClient();\n    LOG.info(\"Beginning test:\" + (new Date()).toString());\n    for (int i=0; i < 100; i++)     zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.sync(\"/test\",this,results);\n    for (int i=0; i < 100; i++)     zk.delete(\"/test\" + i,0,this,results);\n    for (int i=0; i < 100; i++)     zk.getChildren(\"/\",new NullWatcher(),this,results);\n    LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n    if (!opsCount.await(10000,TimeUnit.MILLISECONDS))     fail(\"Haven't received all confirmations\" + opsCount.getCount());\n    for (int i=0; i < limit; i++) {\n      assertEquals(0,(int)results.get(i));\n    }\n  }\n catch (  IOException e) {\n    System.out.println(e.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 70
      },
      "nodeContext" : "zk.getChildren(\"/\",new NullWatcher(),this,results);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Integer>"
  }, {
    "nodeContext" : "results",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 68,
      "startColumnNumber" : 38,
      "endLineNumber" : 68,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 68,
        "startColumnNumber" : 38,
        "endLineNumber" : 68,
        "endColumnNumber" : 52
      },
      "nodeContext" : "results.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 68,
        "startColumnNumber" : 32,
        "endLineNumber" : 68,
        "endColumnNumber" : 52
      },
      "nodeContext" : "(int)results.get(i)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(0,(int)results.get(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals(0,(int)results.get(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 67,
        "startColumnNumber" : 43,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  assertEquals(0,(int)results.get(i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < limit; i++) {\n  assertEquals(0,(int)results.get(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.info(\"Starting ZK:\" + (new Date()).toString());\n  opsCount=new CountDownLatch(limit);\n  ZooKeeper zk=createClient();\n  LOG.info(\"Beginning test:\" + (new Date()).toString());\n  for (int i=0; i < 100; i++)   zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.sync(\"/test\",this,results);\n  for (int i=0; i < 100; i++)   zk.delete(\"/test\" + i,0,this,results);\n  for (int i=0; i < 100; i++)   zk.getChildren(\"/\",new NullWatcher(),this,results);\n  LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n  if (!opsCount.await(10000,TimeUnit.MILLISECONDS))   fail(\"Haven't received all confirmations\" + opsCount.getCount());\n  for (int i=0; i < limit; i++) {\n    assertEquals(0,(int)results.get(i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  LOG.info(\"Starting ZK:\" + (new Date()).toString());\n  opsCount=new CountDownLatch(limit);\n  ZooKeeper zk=createClient();\n  LOG.info(\"Beginning test:\" + (new Date()).toString());\n  for (int i=0; i < 100; i++)   zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.sync(\"/test\",this,results);\n  for (int i=0; i < 100; i++)   zk.delete(\"/test\" + i,0,this,results);\n  for (int i=0; i < 100; i++)   zk.getChildren(\"/\",new NullWatcher(),this,results);\n  LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n  if (!opsCount.await(10000,TimeUnit.MILLISECONDS))   fail(\"Haven't received all confirmations\" + opsCount.getCount());\n  for (int i=0; i < limit; i++) {\n    assertEquals(0,(int)results.get(i));\n  }\n}\n catch (IOException e) {\n  System.out.println(e.toString());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 186,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 46,
        "startColumnNumber" : 44,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    LOG.info(\"Starting ZK:\" + (new Date()).toString());\n    opsCount=new CountDownLatch(limit);\n    ZooKeeper zk=createClient();\n    LOG.info(\"Beginning test:\" + (new Date()).toString());\n    for (int i=0; i < 100; i++)     zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.sync(\"/test\",this,results);\n    for (int i=0; i < 100; i++)     zk.delete(\"/test\" + i,0,this,results);\n    for (int i=0; i < 100; i++)     zk.getChildren(\"/\",new NullWatcher(),this,results);\n    LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n    if (!opsCount.await(10000,TimeUnit.MILLISECONDS))     fail(\"Haven't received all confirmations\" + opsCount.getCount());\n    for (int i=0; i < limit; i++) {\n      assertEquals(0,(int)results.get(i));\n    }\n  }\n catch (  IOException e) {\n    System.out.println(e.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSync() throws Exception {\n  try {\n    LOG.info(\"Starting ZK:\" + (new Date()).toString());\n    opsCount=new CountDownLatch(limit);\n    ZooKeeper zk=createClient();\n    LOG.info(\"Beginning test:\" + (new Date()).toString());\n    for (int i=0; i < 100; i++)     zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.sync(\"/test\",this,results);\n    for (int i=0; i < 100; i++)     zk.delete(\"/test\" + i,0,this,results);\n    for (int i=0; i < 100; i++)     zk.getChildren(\"/\",new NullWatcher(),this,results);\n    LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n    if (!opsCount.await(10000,TimeUnit.MILLISECONDS))     fail(\"Haven't received all confirmations\" + opsCount.getCount());\n    for (int i=0; i < limit; i++) {\n      assertEquals(0,(int)results.get(i));\n    }\n  }\n catch (  IOException e) {\n    System.out.println(e.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals(0,(int)results.get(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 55,
    "startColumnNumber" : 53,
    "endLineNumber" : 55,
    "endColumnNumber" : 60
  }, {
    "charLength" : 7,
    "startLineNumber" : 56,
    "startColumnNumber" : 35,
    "endLineNumber" : 56,
    "endColumnNumber" : 42
  }, {
    "charLength" : 7,
    "startLineNumber" : 58,
    "startColumnNumber" : 48,
    "endLineNumber" : 58,
    "endColumnNumber" : 55
  }, {
    "charLength" : 7,
    "startLineNumber" : 60,
    "startColumnNumber" : 61,
    "endLineNumber" : 60,
    "endColumnNumber" : 68
  }, {
    "charLength" : 7,
    "startLineNumber" : 68,
    "startColumnNumber" : 38,
    "endLineNumber" : 68,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 6
  } ]
}