{
  "id" : 222,
  "expression" : "source.toBlocking()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/BlockingOperatorLatestTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "source.toBlocking()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 141,
      "startColumnNumber" : 44,
      "endLineNumber" : 141,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 141,
        "startColumnNumber" : 34,
        "endLineNumber" : 141,
        "endColumnNumber" : 63
      },
      "nodeContext" : "blocker=source.toBlocking()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 64
      },
      "nodeContext" : "BlockingFlowable<Integer> blocker=source.toBlocking();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 139,
        "startColumnNumber" : 35,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  BlockingFlowable<Integer> blocker=source.toBlocking();\n  Iterable<Integer> iter=blocker.latest();\n  Iterator<Integer> it=iter.iterator();\n  source.onNext(1);\n  Assert.assertEquals(Integer.valueOf(1),it.next());\n  source.onNext(2);\n  source.onNext(3);\n  Assert.assertEquals(Integer.valueOf(3),it.next());\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  Assert.assertEquals(Integer.valueOf(6),it.next());\n  source.onNext(7);\n  source.onComplete();\n  Assert.assertEquals(false,it.hasNext());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 775,
        "startLineNumber" : 138,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=1000) public void testFasterSource(){\n  PublishProcessor<Integer> source=PublishProcessor.create();\n  BlockingFlowable<Integer> blocker=source.toBlocking();\n  Iterable<Integer> iter=blocker.latest();\n  Iterator<Integer> it=iter.iterator();\n  source.onNext(1);\n  Assert.assertEquals(Integer.valueOf(1),it.next());\n  source.onNext(2);\n  source.onNext(3);\n  Assert.assertEquals(Integer.valueOf(3),it.next());\n  source.onNext(4);\n  source.onNext(5);\n  source.onNext(6);\n  Assert.assertEquals(Integer.valueOf(6),it.next());\n  source.onNext(7);\n  source.onComplete();\n  Assert.assertEquals(false,it.hasNext());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 64
      },
      "nodeContext" : "BlockingFlowable<Integer> blocker=source.toBlocking();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.reactivex.flowables.BlockingFlowable<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 141,
    "startColumnNumber" : 44,
    "endLineNumber" : 141,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}