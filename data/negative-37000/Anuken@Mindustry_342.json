{
  "id" : 342,
  "expression" : "legExtension",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/type/UnitType.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "legExtension",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 703,
      "startColumnNumber" : 64,
      "endLineNumber" : 703,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 703,
        "startColumnNumber" : 12,
        "endLineNumber" : 703,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Tmp.v1.set(leg.base).sub(leg.joint).inv().setLength(legExtension)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 703,
        "startColumnNumber" : 12,
        "endLineNumber" : 703,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Tmp.v1.set(leg.base).sub(leg.joint).inv().setLength(legExtension);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1461,
        "startLineNumber" : 694,
        "startColumnNumber" : 49,
        "endLineNumber" : 728,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int i=(j % 2 == 0 ? j / 2 : legs.length - 1 - j / 2);\n  Leg leg=legs[i];\n  float angle=unit.legAngle(rotation,i);\n  boolean flip=i >= legs.length / 2f;\n  int flips=Mathf.sign(flip);\n  Vec2 position=legOffset.trns(angle,legBaseOffset).add(unit);\n  Tmp.v1.set(leg.base).sub(leg.joint).inv().setLength(legExtension);\n  if (leg.moving && visualElevation > 0) {\n    float scl=visualElevation;\n    float elev=Mathf.slope(1f - leg.stage) * scl;\n    Draw.color(Pal.shadow);\n    Draw.rect(footRegion,leg.base.x + shadowTX * elev,leg.base.y + shadowTY * elev,position.angleTo(leg.base));\n    Draw.color();\n  }\n  Draw.rect(footRegion,leg.base.x,leg.base.y,position.angleTo(leg.base));\n  Lines.stroke(legRegion.height * Draw.scl * flips);\n  Lines.line(legRegion,position.x,position.y,leg.joint.x,leg.joint.y,false);\n  Lines.stroke(legBaseRegion.height * Draw.scl * flips);\n  Lines.line(legBaseRegion,leg.joint.x + Tmp.v1.x,leg.joint.y + Tmp.v1.y,leg.base.x,leg.base.y,false);\n  if (jointRegion.found()) {\n    Draw.rect(jointRegion,leg.joint.x,leg.joint.y);\n  }\n  if (baseJointRegion.found()) {\n    Draw.rect(baseJointRegion,position.x,position.y,rotation);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 301,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 694,
        "startColumnNumber" : 8,
        "endLineNumber" : 728,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int j=legs.length - 1; j >= 0; j--) {\n  int i=(j % 2 == 0 ? j / 2 : legs.length - 1 - j / 2);\n  Leg leg=legs[i];\n  float angle=unit.legAngle(rotation,i);\n  boolean flip=i >= legs.length / 2f;\n  int flips=Mathf.sign(flip);\n  Vec2 position=legOffset.trns(angle,legBaseOffset).add(unit);\n  Tmp.v1.set(leg.base).sub(leg.joint).inv().setLength(legExtension);\n  if (leg.moving && visualElevation > 0) {\n    float scl=visualElevation;\n    float elev=Mathf.slope(1f - leg.stage) * scl;\n    Draw.color(Pal.shadow);\n    Draw.rect(footRegion,leg.base.x + shadowTX * elev,leg.base.y + shadowTY * elev,position.angleTo(leg.base));\n    Draw.color();\n  }\n  Draw.rect(footRegion,leg.base.x,leg.base.y,position.angleTo(leg.base));\n  Lines.stroke(legRegion.height * Draw.scl * flips);\n  Lines.line(legRegion,position.x,position.y,leg.joint.x,leg.joint.y,false);\n  Lines.stroke(legBaseRegion.height * Draw.scl * flips);\n  Lines.line(legBaseRegion,leg.joint.x + Tmp.v1.x,leg.joint.y + Tmp.v1.y,leg.base.x,leg.base.y,false);\n  if (jointRegion.found()) {\n    Draw.rect(jointRegion,leg.joint.x,leg.joint.y);\n  }\n  if (baseJointRegion.found()) {\n    Draw.rect(baseJointRegion,position.x,position.y,rotation);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 316,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1951,
        "startLineNumber" : 681,
        "startColumnNumber" : 57,
        "endLineNumber" : 735,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  applyColor(unit);\n  Leg[] legs=unit.legs();\n  float ssize=footRegion.width * Draw.scl * 1.5f;\n  float rotation=unit.baseRotation();\n  for (  Leg leg : legs) {\n    Drawf.shadow(leg.base.x,leg.base.y,ssize);\n  }\n  for (int j=legs.length - 1; j >= 0; j--) {\n    int i=(j % 2 == 0 ? j / 2 : legs.length - 1 - j / 2);\n    Leg leg=legs[i];\n    float angle=unit.legAngle(rotation,i);\n    boolean flip=i >= legs.length / 2f;\n    int flips=Mathf.sign(flip);\n    Vec2 position=legOffset.trns(angle,legBaseOffset).add(unit);\n    Tmp.v1.set(leg.base).sub(leg.joint).inv().setLength(legExtension);\n    if (leg.moving && visualElevation > 0) {\n      float scl=visualElevation;\n      float elev=Mathf.slope(1f - leg.stage) * scl;\n      Draw.color(Pal.shadow);\n      Draw.rect(footRegion,leg.base.x + shadowTX * elev,leg.base.y + shadowTY * elev,position.angleTo(leg.base));\n      Draw.color();\n    }\n    Draw.rect(footRegion,leg.base.x,leg.base.y,position.angleTo(leg.base));\n    Lines.stroke(legRegion.height * Draw.scl * flips);\n    Lines.line(legRegion,position.x,position.y,leg.joint.x,leg.joint.y,false);\n    Lines.stroke(legBaseRegion.height * Draw.scl * flips);\n    Lines.line(legBaseRegion,leg.joint.x + Tmp.v1.x,leg.joint.y + Tmp.v1.y,leg.base.x,leg.base.y,false);\n    if (jointRegion.found()) {\n      Draw.rect(jointRegion,leg.joint.x,leg.joint.y);\n    }\n    if (baseJointRegion.found()) {\n      Draw.rect(baseJointRegion,position.x,position.y,rotation);\n    }\n  }\n  if (baseRegion.found()) {\n    Draw.rect(baseRegion,unit.x,unit.y,rotation - 90);\n  }\n  Draw.reset();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 395,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2004,
        "startLineNumber" : 681,
        "startColumnNumber" : 4,
        "endLineNumber" : 735,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public <T extends Unit & Legsc>void drawLegs(T unit){\n  applyColor(unit);\n  Leg[] legs=unit.legs();\n  float ssize=footRegion.width * Draw.scl * 1.5f;\n  float rotation=unit.baseRotation();\n  for (  Leg leg : legs) {\n    Drawf.shadow(leg.base.x,leg.base.y,ssize);\n  }\n  for (int j=legs.length - 1; j >= 0; j--) {\n    int i=(j % 2 == 0 ? j / 2 : legs.length - 1 - j / 2);\n    Leg leg=legs[i];\n    float angle=unit.legAngle(rotation,i);\n    boolean flip=i >= legs.length / 2f;\n    int flips=Mathf.sign(flip);\n    Vec2 position=legOffset.trns(angle,legBaseOffset).add(unit);\n    Tmp.v1.set(leg.base).sub(leg.joint).inv().setLength(legExtension);\n    if (leg.moving && visualElevation > 0) {\n      float scl=visualElevation;\n      float elev=Mathf.slope(1f - leg.stage) * scl;\n      Draw.color(Pal.shadow);\n      Draw.rect(footRegion,leg.base.x + shadowTX * elev,leg.base.y + shadowTY * elev,position.angleTo(leg.base));\n      Draw.color();\n    }\n    Draw.rect(footRegion,leg.base.x,leg.base.y,position.angleTo(leg.base));\n    Lines.stroke(legRegion.height * Draw.scl * flips);\n    Lines.line(legRegion,position.x,position.y,leg.joint.x,leg.joint.y,false);\n    Lines.stroke(legBaseRegion.height * Draw.scl * flips);\n    Lines.line(legBaseRegion,leg.joint.x + Tmp.v1.x,leg.joint.y + Tmp.v1.y,leg.base.x,leg.base.y,false);\n    if (jointRegion.found()) {\n      Draw.rect(jointRegion,leg.joint.x,leg.joint.y);\n    }\n    if (baseJointRegion.found()) {\n      Draw.rect(baseJointRegion,position.x,position.y,rotation);\n    }\n  }\n  if (baseRegion.found()) {\n    Draw.rect(baseRegion,unit.x,unit.y,rotation - 90);\n  }\n  Draw.reset();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 409,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 703,
        "startColumnNumber" : 12,
        "endLineNumber" : 703,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Tmp.v1.set(leg.base).sub(leg.joint).inv().setLength(legExtension);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 703,
    "startColumnNumber" : 64,
    "endLineNumber" : 703,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}