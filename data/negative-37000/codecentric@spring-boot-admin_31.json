{
  "id" : 31,
  "expression" : "Level.FINEST",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/main/java/de/codecentric/boot/admin/server/services/InfoUpdater.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Level.FINEST",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 65,
      "startColumnNumber" : 49,
      "endLineNumber" : 65,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 65,
        "endColumnNumber" : 62
      },
      "nodeContext" : "applicationOps.getInfo(application).log(log.getName(),Level.FINEST)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 81
      },
      "nodeContext" : "applicationOps.getInfo(application).log(log.getName(),Level.FINEST).map(response -> convertInfo(application,response))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 67,
        "endColumnNumber" : 90
      },
      "nodeContext" : "applicationOps.getInfo(application).log(log.getName(),Level.FINEST).map(response -> convertInfo(application,response)).onErrorResume(ex -> Mono.just(convertInfo(application,ex)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 328,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 68,
        "endColumnNumber" : 56
      },
      "nodeContext" : "applicationOps.getInfo(application).log(log.getName(),Level.FINEST).map(response -> convertInfo(application,response)).onErrorResume(ex -> Mono.just(convertInfo(application,ex))).map(application::withInfo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 57
      },
      "nodeContext" : "return applicationOps.getInfo(application).log(log.getName(),Level.FINEST).map(response -> convertInfo(application,response)).onErrorResume(ex -> Mono.just(convertInfo(application,ex))).map(application::withInfo);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 55,
        "startColumnNumber" : 68,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (application.getStatusInfo().isOffline() || application.getStatusInfo().isUnknown()) {\n    return Mono.empty();\n  }\n  if (!application.getEndpoints().isPresent(Endpoint.INFO)) {\n    return Mono.empty();\n  }\n  log.debug(\"Update info for {}\",application);\n  return applicationOps.getInfo(application).log(log.getName(),Level.FINEST).map(response -> convertInfo(application,response)).onErrorResume(ex -> Mono.just(convertInfo(application,ex))).map(application::withInfo);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Mono<Application> doUpdateInfo(Application application){\n  if (application.getStatusInfo().isOffline() || application.getStatusInfo().isUnknown()) {\n    return Mono.empty();\n  }\n  if (!application.getEndpoints().isPresent(Endpoint.INFO)) {\n    return Mono.empty();\n  }\n  log.debug(\"Update info for {}\",application);\n  return applicationOps.getInfo(application).log(log.getName(),Level.FINEST).map(response -> convertInfo(application,response)).onErrorResume(ex -> Mono.just(convertInfo(application,ex))).map(application::withInfo);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 65,
        "endColumnNumber" : 62
      },
      "nodeContext" : "applicationOps.getInfo(application).log(log.getName(),Level.FINEST)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.util.logging.Level"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 65,
    "startColumnNumber" : 49,
    "endLineNumber" : 65,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}