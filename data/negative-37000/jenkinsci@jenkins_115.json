{
  "id" : 115,
  "expression" : "i < toFillCount",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/jenkins/widgets/HistoryPageFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < toFillCount",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 190,
      "startColumnNumber" : 56,
      "endLineNumber" : 190,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 190,
        "startColumnNumber" : 56,
        "endLineNumber" : 190,
        "endColumnNumber" : 96
      },
      "nodeContext" : "i < toFillCount && skippedIter.hasNext()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 190,
        "startColumnNumber" : 24,
        "endLineNumber" : 193,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=itemsToAdd.size(); i < toFillCount && skippedIter.hasNext(); i++) {\n  ItemT item=skippedIter.next();\n  itemsToAdd.addLast(item);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 625,
        "startLineNumber" : 185,
        "startColumnNumber" : 57,
        "endLineNumber" : 194,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Iterator<ItemT> skippedIter=items.iterator();\n  Iterators.skip(skippedIter,itemsToAdd.size());\n  for (int i=itemsToAdd.size(); i < toFillCount && skippedIter.hasNext(); i++) {\n    ItemT item=skippedIter.next();\n    itemsToAdd.addLast(item);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 185,
        "startColumnNumber" : 20,
        "endLineNumber" : 194,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (itemsToAdd.size() < toFillCount) {\n  Iterator<ItemT> skippedIter=items.iterator();\n  Iterators.skip(skippedIter,itemsToAdd.size());\n  for (int i=itemsToAdd.size(); i < toFillCount && skippedIter.hasNext(); i++) {\n    ItemT item=skippedIter.next();\n    itemsToAdd.addLast(item);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1030,
        "startLineNumber" : 182,
        "startColumnNumber" : 23,
        "endLineNumber" : 199,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (itemsToAdd.size() < toFillCount) {\n    Iterator<ItemT> skippedIter=items.iterator();\n    Iterators.skip(skippedIter,itemsToAdd.size());\n    for (int i=itemsToAdd.size(); i < toFillCount && skippedIter.hasNext(); i++) {\n      ItemT item=skippedIter.next();\n      itemsToAdd.addLast(item);\n    }\n  }\n  hasDownPage=iter.hasNext();\n  for (  Object item : itemsToAdd) {\n    add(item);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1187,
        "startLineNumber" : 179,
        "startColumnNumber" : 16,
        "endLineNumber" : 199,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (itemsToAdd.size() == 0) {\n  hasDownPage=true;\n}\n else {\n  if (itemsToAdd.size() < toFillCount) {\n    Iterator<ItemT> skippedIter=items.iterator();\n    Iterators.skip(skippedIter,itemsToAdd.size());\n    for (int i=itemsToAdd.size(); i < toFillCount && skippedIter.hasNext(); i++) {\n      ItemT item=skippedIter.next();\n      itemsToAdd.addLast(item);\n    }\n  }\n  hasDownPage=iter.hasNext();\n  for (  Object item : itemsToAdd) {\n    add(item);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2217,
        "startLineNumber" : 158,
        "startColumnNumber" : 33,
        "endLineNumber" : 200,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  LinkedList<ItemT> itemsToAdd=new LinkedList<>();\n  Iterator<ItemT> iter=items.iterator();\n  while (iter.hasNext()) {\n    ItemT item=iter.next();\n    if (HistoryPageEntry.getEntryId(item) > newerThan) {\n      itemsToAdd.addLast(item);\n      if (itemsToAdd.size() > toFillCount) {\n        itemsToAdd.removeFirst();\n        hasUpPage=true;\n      }\n    }\n else {\n      break;\n    }\n  }\n  if (itemsToAdd.size() == 0) {\n    hasDownPage=true;\n  }\n else {\n    if (itemsToAdd.size() < toFillCount) {\n      Iterator<ItemT> skippedIter=items.iterator();\n      Iterators.skip(skippedIter,itemsToAdd.size());\n      for (int i=itemsToAdd.size(); i < toFillCount && skippedIter.hasNext(); i++) {\n        ItemT item=skippedIter.next();\n        itemsToAdd.addLast(item);\n      }\n    }\n    hasDownPage=iter.hasNext();\n    for (    Object item : itemsToAdd) {\n      add(item);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2238,
        "startLineNumber" : 158,
        "startColumnNumber" : 12,
        "endLineNumber" : 200,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (toFillCount > 0) {\n  LinkedList<ItemT> itemsToAdd=new LinkedList<>();\n  Iterator<ItemT> iter=items.iterator();\n  while (iter.hasNext()) {\n    ItemT item=iter.next();\n    if (HistoryPageEntry.getEntryId(item) > newerThan) {\n      itemsToAdd.addLast(item);\n      if (itemsToAdd.size() > toFillCount) {\n        itemsToAdd.removeFirst();\n        hasUpPage=true;\n      }\n    }\n else {\n      break;\n    }\n  }\n  if (itemsToAdd.size() == 0) {\n    hasDownPage=true;\n  }\n else {\n    if (itemsToAdd.size() < toFillCount) {\n      Iterator<ItemT> skippedIter=items.iterator();\n      Iterators.skip(skippedIter,itemsToAdd.size());\n      for (int i=itemsToAdd.size(); i < toFillCount && skippedIter.hasNext(); i++) {\n        ItemT item=skippedIter.next();\n        itemsToAdd.addLast(item);\n      }\n    }\n    hasDownPage=iter.hasNext();\n    for (    Object item : itemsToAdd) {\n      add(item);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 157,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2311,
        "startLineNumber" : 156,
        "startColumnNumber" : 38,
        "endLineNumber" : 201,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int toFillCount=getFillCount();\n  if (toFillCount > 0) {\n    LinkedList<ItemT> itemsToAdd=new LinkedList<>();\n    Iterator<ItemT> iter=items.iterator();\n    while (iter.hasNext()) {\n      ItemT item=iter.next();\n      if (HistoryPageEntry.getEntryId(item) > newerThan) {\n        itemsToAdd.addLast(item);\n        if (itemsToAdd.size() > toFillCount) {\n          itemsToAdd.removeFirst();\n          hasUpPage=true;\n        }\n      }\n else {\n        break;\n      }\n    }\n    if (itemsToAdd.size() == 0) {\n      hasDownPage=true;\n    }\n else {\n      if (itemsToAdd.size() < toFillCount) {\n        Iterator<ItemT> skippedIter=items.iterator();\n        Iterators.skip(skippedIter,itemsToAdd.size());\n        for (int i=itemsToAdd.size(); i < toFillCount && skippedIter.hasNext(); i++) {\n          ItemT item=skippedIter.next();\n          itemsToAdd.addLast(item);\n        }\n      }\n      hasDownPage=iter.hasNext();\n      for (      Object item : itemsToAdd) {\n        add(item);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2837,
        "startLineNumber" : 156,
        "startColumnNumber" : 15,
        "endLineNumber" : 215,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (newerThan != null) {\n  int toFillCount=getFillCount();\n  if (toFillCount > 0) {\n    LinkedList<ItemT> itemsToAdd=new LinkedList<>();\n    Iterator<ItemT> iter=items.iterator();\n    while (iter.hasNext()) {\n      ItemT item=iter.next();\n      if (HistoryPageEntry.getEntryId(item) > newerThan) {\n        itemsToAdd.addLast(item);\n        if (itemsToAdd.size() > toFillCount) {\n          itemsToAdd.removeFirst();\n          hasUpPage=true;\n        }\n      }\n else {\n        break;\n      }\n    }\n    if (itemsToAdd.size() == 0) {\n      hasDownPage=true;\n    }\n else {\n      if (itemsToAdd.size() < toFillCount) {\n        Iterator<ItemT> skippedIter=items.iterator();\n        Iterators.skip(skippedIter,itemsToAdd.size());\n        for (int i=itemsToAdd.size(); i < toFillCount && skippedIter.hasNext(); i++) {\n          ItemT item=skippedIter.next();\n          itemsToAdd.addLast(item);\n        }\n      }\n      hasDownPage=iter.hasNext();\n      for (      Object item : itemsToAdd) {\n        add(item);\n      }\n    }\n  }\n}\n else {\n  Iterator<ItemT> iter=items.iterator();\n  while (iter.hasNext()) {\n    Object item=iter.next();\n    if (HistoryPageEntry.getEntryId(item) >= olderThan) {\n      hasUpPage=true;\n    }\n else {\n      add(item);\n      if (isFull()) {\n        hasDownPage=iter.hasNext();\n        break;\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 221,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3227,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 215,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (newerThan == null && olderThan == null) {\n  Iterator<ItemT> iter=items.iterator();\n  while (iter.hasNext()) {\n    add(iter.next());\n    if (isFull()) {\n      break;\n    }\n  }\n  hasDownPage=iter.hasNext();\n}\n else if (newerThan != null) {\n  int toFillCount=getFillCount();\n  if (toFillCount > 0) {\n    LinkedList<ItemT> itemsToAdd=new LinkedList<>();\n    Iterator<ItemT> iter=items.iterator();\n    while (iter.hasNext()) {\n      ItemT item=iter.next();\n      if (HistoryPageEntry.getEntryId(item) > newerThan) {\n        itemsToAdd.addLast(item);\n        if (itemsToAdd.size() > toFillCount) {\n          itemsToAdd.removeFirst();\n          hasUpPage=true;\n        }\n      }\n else {\n        break;\n      }\n    }\n    if (itemsToAdd.size() == 0) {\n      hasDownPage=true;\n    }\n else {\n      if (itemsToAdd.size() < toFillCount) {\n        Iterator<ItemT> skippedIter=items.iterator();\n        Iterators.skip(skippedIter,itemsToAdd.size());\n        for (int i=itemsToAdd.size(); i < toFillCount && skippedIter.hasNext(); i++) {\n          ItemT item=skippedIter.next();\n          itemsToAdd.addLast(item);\n        }\n      }\n      hasDownPage=iter.hasNext();\n      for (      Object item : itemsToAdd) {\n        add(item);\n      }\n    }\n  }\n}\n else {\n  Iterator<ItemT> iter=items.iterator();\n  while (iter.hasNext()) {\n    Object item=iter.next();\n    if (HistoryPageEntry.getEntryId(item) >= olderThan) {\n      hasUpPage=true;\n    }\n else {\n      add(item);\n      if (isFull()) {\n        hasDownPage=iter.hasNext();\n        break;\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 263,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3557,
        "startLineNumber" : 136,
        "startColumnNumber" : 69,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!items.iterator().hasNext()) {\n    return;\n  }\n  nextBuildNumber=getNextBuildNumber(items.iterator().next());\n  if (newerThan == null && olderThan == null) {\n    Iterator<ItemT> iter=items.iterator();\n    while (iter.hasNext()) {\n      add(iter.next());\n      if (isFull()) {\n        break;\n      }\n    }\n    hasDownPage=iter.hasNext();\n  }\n else   if (newerThan != null) {\n    int toFillCount=getFillCount();\n    if (toFillCount > 0) {\n      LinkedList<ItemT> itemsToAdd=new LinkedList<>();\n      Iterator<ItemT> iter=items.iterator();\n      while (iter.hasNext()) {\n        ItemT item=iter.next();\n        if (HistoryPageEntry.getEntryId(item) > newerThan) {\n          itemsToAdd.addLast(item);\n          if (itemsToAdd.size() > toFillCount) {\n            itemsToAdd.removeFirst();\n            hasUpPage=true;\n          }\n        }\n else {\n          break;\n        }\n      }\n      if (itemsToAdd.size() == 0) {\n        hasDownPage=true;\n      }\n else {\n        if (itemsToAdd.size() < toFillCount) {\n          Iterator<ItemT> skippedIter=items.iterator();\n          Iterators.skip(skippedIter,itemsToAdd.size());\n          for (int i=itemsToAdd.size(); i < toFillCount && skippedIter.hasNext(); i++) {\n            ItemT item=skippedIter.next();\n            itemsToAdd.addLast(item);\n          }\n        }\n        hasDownPage=iter.hasNext();\n        for (        Object item : itemsToAdd) {\n          add(item);\n        }\n      }\n    }\n  }\n else {\n    Iterator<ItemT> iter=items.iterator();\n    while (iter.hasNext()) {\n      Object item=iter.next();\n      if (HistoryPageEntry.getEntryId(item) >= olderThan) {\n        hasUpPage=true;\n      }\n else {\n        add(item);\n        if (isFull()) {\n          hasDownPage=iter.hasNext();\n          break;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3823,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Add items to the History page, internal implementation.\n * @param items The items to be added.\n * @param < ItemT > The type of items should either be T or Queue.Item.\n */\nprivate <ItemT>void addInternal(@NonNull Iterable<ItemT> items){\n  if (!items.iterator().hasNext()) {\n    return;\n  }\n  nextBuildNumber=getNextBuildNumber(items.iterator().next());\n  if (newerThan == null && olderThan == null) {\n    Iterator<ItemT> iter=items.iterator();\n    while (iter.hasNext()) {\n      add(iter.next());\n      if (isFull()) {\n        break;\n      }\n    }\n    hasDownPage=iter.hasNext();\n  }\n else   if (newerThan != null) {\n    int toFillCount=getFillCount();\n    if (toFillCount > 0) {\n      LinkedList<ItemT> itemsToAdd=new LinkedList<>();\n      Iterator<ItemT> iter=items.iterator();\n      while (iter.hasNext()) {\n        ItemT item=iter.next();\n        if (HistoryPageEntry.getEntryId(item) > newerThan) {\n          itemsToAdd.addLast(item);\n          if (itemsToAdd.size() > toFillCount) {\n            itemsToAdd.removeFirst();\n            hasUpPage=true;\n          }\n        }\n else {\n          break;\n        }\n      }\n      if (itemsToAdd.size() == 0) {\n        hasDownPage=true;\n      }\n else {\n        if (itemsToAdd.size() < toFillCount) {\n          Iterator<ItemT> skippedIter=items.iterator();\n          Iterators.skip(skippedIter,itemsToAdd.size());\n          for (int i=itemsToAdd.size(); i < toFillCount && skippedIter.hasNext(); i++) {\n            ItemT item=skippedIter.next();\n            itemsToAdd.addLast(item);\n          }\n        }\n        hasDownPage=iter.hasNext();\n        for (        Object item : itemsToAdd) {\n          add(item);\n        }\n      }\n    }\n  }\n else {\n    Iterator<ItemT> iter=items.iterator();\n    while (iter.hasNext()) {\n      Object item=iter.next();\n      if (HistoryPageEntry.getEntryId(item) >= olderThan) {\n        hasUpPage=true;\n      }\n else {\n        add(item);\n        if (isFull()) {\n          hasDownPage=iter.hasNext();\n          break;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 190,
        "startColumnNumber" : 56,
        "endLineNumber" : 190,
        "endColumnNumber" : 96
      },
      "nodeContext" : "i < toFillCount && skippedIter.hasNext()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 190,
    "startColumnNumber" : 56,
    "endLineNumber" : 190,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}