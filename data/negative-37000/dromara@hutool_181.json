{
  "id" : 181,
  "expression" : "fileList",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/io/file/PathUtil.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fileList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 70,
      "startColumnNumber" : 10,
      "endLineNumber" : 70,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 70,
        "startColumnNumber" : 3,
        "endLineNumber" : 70,
        "endColumnNumber" : 19
      },
      "nodeContext" : "return fileList;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 69,
        "startColumnNumber" : 51,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return fileList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (null == path || false == Files.exists(path)) {\n  return fileList;\n}\n else if (false == isDirectory(path)) {\n  final File file=path.toFile();\n  if (null == fileFilter || fileFilter.accept(file)) {\n    fileList.add(file);\n  }\n  return fileList;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 66,
        "startColumnNumber" : 84,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final List<File> fileList=new ArrayList<>();\n  if (null == path || false == Files.exists(path)) {\n    return fileList;\n  }\n else   if (false == isDirectory(path)) {\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return fileList;\n  }\n  walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n    @Override public FileVisitResult visitFile(    Path path,    BasicFileAttributes attrs){\n      final File file=path.toFile();\n      if (null == fileFilter || fileFilter.accept(file)) {\n        fileList.add(file);\n      }\n      return FileVisitResult.CONTINUE;\n    }\n  }\n);\n  return fileList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 递归遍历目录以及子目录中的所有文件<br> 如果提供path为文件，直接返回过滤结果\n * @param path       当前遍历文件或目录\n * @param maxDepth   遍历最大深度，-1表示遍历到没有目录为止\n * @param fileFilter 文件过滤规则对象，选择要保留的文件，只对文件有效，不过滤目录，null表示接收全部文件\n * @return 文件列表\n * @since 5.4.1\n */\npublic static List<File> loopFiles(Path path,int maxDepth,FileFilter fileFilter){\n  final List<File> fileList=new ArrayList<>();\n  if (null == path || false == Files.exists(path)) {\n    return fileList;\n  }\n else   if (false == isDirectory(path)) {\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return fileList;\n  }\n  walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n    @Override public FileVisitResult visitFile(    Path path,    BasicFileAttributes attrs){\n      final File file=path.toFile();\n      if (null == fileFilter || fileFilter.accept(file)) {\n        fileList.add(file);\n      }\n      return FileVisitResult.CONTINUE;\n    }\n  }\n);\n  return fileList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 70,
        "startColumnNumber" : 3,
        "endLineNumber" : 70,
        "endColumnNumber" : 19
      },
      "nodeContext" : "return fileList;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.io.File>"
  }, {
    "nodeContext" : "fileList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 74,
      "startColumnNumber" : 4,
      "endLineNumber" : 74,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 22
      },
      "nodeContext" : "fileList.add(file)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 23
      },
      "nodeContext" : "fileList.add(file);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 73,
        "startColumnNumber" : 54,
        "endLineNumber" : 75,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  fileList.add(file);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 73,
        "startColumnNumber" : 3,
        "endLineNumber" : 75,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (null == fileFilter || fileFilter.accept(file)) {\n  fileList.add(file);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 71,
        "startColumnNumber" : 41,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final File file=path.toFile();\n  if (null == fileFilter || fileFilter.accept(file)) {\n    fileList.add(file);\n  }\n  return fileList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 71,
        "startColumnNumber" : 9,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (false == isDirectory(path)) {\n  final File file=path.toFile();\n  if (null == fileFilter || fileFilter.accept(file)) {\n    fileList.add(file);\n  }\n  return fileList;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (null == path || false == Files.exists(path)) {\n  return fileList;\n}\n else if (false == isDirectory(path)) {\n  final File file=path.toFile();\n  if (null == fileFilter || fileFilter.accept(file)) {\n    fileList.add(file);\n  }\n  return fileList;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 66,
        "startColumnNumber" : 84,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final List<File> fileList=new ArrayList<>();\n  if (null == path || false == Files.exists(path)) {\n    return fileList;\n  }\n else   if (false == isDirectory(path)) {\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return fileList;\n  }\n  walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n    @Override public FileVisitResult visitFile(    Path path,    BasicFileAttributes attrs){\n      final File file=path.toFile();\n      if (null == fileFilter || fileFilter.accept(file)) {\n        fileList.add(file);\n      }\n      return FileVisitResult.CONTINUE;\n    }\n  }\n);\n  return fileList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 递归遍历目录以及子目录中的所有文件<br> 如果提供path为文件，直接返回过滤结果\n * @param path       当前遍历文件或目录\n * @param maxDepth   遍历最大深度，-1表示遍历到没有目录为止\n * @param fileFilter 文件过滤规则对象，选择要保留的文件，只对文件有效，不过滤目录，null表示接收全部文件\n * @return 文件列表\n * @since 5.4.1\n */\npublic static List<File> loopFiles(Path path,int maxDepth,FileFilter fileFilter){\n  final List<File> fileList=new ArrayList<>();\n  if (null == path || false == Files.exists(path)) {\n    return fileList;\n  }\n else   if (false == isDirectory(path)) {\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return fileList;\n  }\n  walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n    @Override public FileVisitResult visitFile(    Path path,    BasicFileAttributes attrs){\n      final File file=path.toFile();\n      if (null == fileFilter || fileFilter.accept(file)) {\n        fileList.add(file);\n      }\n      return FileVisitResult.CONTINUE;\n    }\n  }\n);\n  return fileList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 23
      },
      "nodeContext" : "fileList.add(file);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.io.File>"
  }, {
    "nodeContext" : "fileList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 76,
      "startColumnNumber" : 10,
      "endLineNumber" : 76,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 76,
        "startColumnNumber" : 3,
        "endLineNumber" : 76,
        "endColumnNumber" : 19
      },
      "nodeContext" : "return fileList;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 71,
        "startColumnNumber" : 41,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final File file=path.toFile();\n  if (null == fileFilter || fileFilter.accept(file)) {\n    fileList.add(file);\n  }\n  return fileList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 71,
        "startColumnNumber" : 9,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (false == isDirectory(path)) {\n  final File file=path.toFile();\n  if (null == fileFilter || fileFilter.accept(file)) {\n    fileList.add(file);\n  }\n  return fileList;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (null == path || false == Files.exists(path)) {\n  return fileList;\n}\n else if (false == isDirectory(path)) {\n  final File file=path.toFile();\n  if (null == fileFilter || fileFilter.accept(file)) {\n    fileList.add(file);\n  }\n  return fileList;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 66,
        "startColumnNumber" : 84,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final List<File> fileList=new ArrayList<>();\n  if (null == path || false == Files.exists(path)) {\n    return fileList;\n  }\n else   if (false == isDirectory(path)) {\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return fileList;\n  }\n  walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n    @Override public FileVisitResult visitFile(    Path path,    BasicFileAttributes attrs){\n      final File file=path.toFile();\n      if (null == fileFilter || fileFilter.accept(file)) {\n        fileList.add(file);\n      }\n      return FileVisitResult.CONTINUE;\n    }\n  }\n);\n  return fileList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 递归遍历目录以及子目录中的所有文件<br> 如果提供path为文件，直接返回过滤结果\n * @param path       当前遍历文件或目录\n * @param maxDepth   遍历最大深度，-1表示遍历到没有目录为止\n * @param fileFilter 文件过滤规则对象，选择要保留的文件，只对文件有效，不过滤目录，null表示接收全部文件\n * @return 文件列表\n * @since 5.4.1\n */\npublic static List<File> loopFiles(Path path,int maxDepth,FileFilter fileFilter){\n  final List<File> fileList=new ArrayList<>();\n  if (null == path || false == Files.exists(path)) {\n    return fileList;\n  }\n else   if (false == isDirectory(path)) {\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return fileList;\n  }\n  walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n    @Override public FileVisitResult visitFile(    Path path,    BasicFileAttributes attrs){\n      final File file=path.toFile();\n      if (null == fileFilter || fileFilter.accept(file)) {\n        fileList.add(file);\n      }\n      return FileVisitResult.CONTINUE;\n    }\n  }\n);\n  return fileList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 76,
        "startColumnNumber" : 3,
        "endLineNumber" : 76,
        "endColumnNumber" : 19
      },
      "nodeContext" : "return fileList;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.io.File>"
  }, {
    "nodeContext" : "fileList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 91,
      "startColumnNumber" : 9,
      "endLineNumber" : 91,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 91,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return fileList;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 66,
        "startColumnNumber" : 84,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final List<File> fileList=new ArrayList<>();\n  if (null == path || false == Files.exists(path)) {\n    return fileList;\n  }\n else   if (false == isDirectory(path)) {\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return fileList;\n  }\n  walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n    @Override public FileVisitResult visitFile(    Path path,    BasicFileAttributes attrs){\n      final File file=path.toFile();\n      if (null == fileFilter || fileFilter.accept(file)) {\n        fileList.add(file);\n      }\n      return FileVisitResult.CONTINUE;\n    }\n  }\n);\n  return fileList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 递归遍历目录以及子目录中的所有文件<br> 如果提供path为文件，直接返回过滤结果\n * @param path       当前遍历文件或目录\n * @param maxDepth   遍历最大深度，-1表示遍历到没有目录为止\n * @param fileFilter 文件过滤规则对象，选择要保留的文件，只对文件有效，不过滤目录，null表示接收全部文件\n * @return 文件列表\n * @since 5.4.1\n */\npublic static List<File> loopFiles(Path path,int maxDepth,FileFilter fileFilter){\n  final List<File> fileList=new ArrayList<>();\n  if (null == path || false == Files.exists(path)) {\n    return fileList;\n  }\n else   if (false == isDirectory(path)) {\n    final File file=path.toFile();\n    if (null == fileFilter || fileFilter.accept(file)) {\n      fileList.add(file);\n    }\n    return fileList;\n  }\n  walkFiles(path,maxDepth,new SimpleFileVisitor<Path>(){\n    @Override public FileVisitResult visitFile(    Path path,    BasicFileAttributes attrs){\n      final File file=path.toFile();\n      if (null == fileFilter || fileFilter.accept(file)) {\n        fileList.add(file);\n      }\n      return FileVisitResult.CONTINUE;\n    }\n  }\n);\n  return fileList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 91,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return fileList;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.io.File>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 70,
    "startColumnNumber" : 10,
    "endLineNumber" : 70,
    "endColumnNumber" : 18
  }, {
    "charLength" : 8,
    "startLineNumber" : 74,
    "startColumnNumber" : 4,
    "endLineNumber" : 74,
    "endColumnNumber" : 12
  }, {
    "charLength" : 8,
    "startLineNumber" : 76,
    "startColumnNumber" : 10,
    "endLineNumber" : 76,
    "endColumnNumber" : 18
  }, {
    "charLength" : 8,
    "startLineNumber" : 91,
    "startColumnNumber" : 9,
    "endLineNumber" : 91,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  } ]
}