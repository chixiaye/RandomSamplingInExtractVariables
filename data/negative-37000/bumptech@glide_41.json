{
  "id" : 41,
  "expression" : "148",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "148",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 73,
      "startColumnNumber" : 31,
      "endLineNumber" : 73,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 73,
        "startColumnNumber" : 14,
        "endLineNumber" : 73,
        "endColumnNumber" : 34
      },
      "nodeContext" : "expectedHeight=148",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 35
      },
      "nodeContext" : "final int expectedHeight=148;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 728,
        "startLineNumber" : 71,
        "startColumnNumber" : 52,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int expectedWidth=13;\n  final int expectedHeight=148;\n  final Resource<Bitmap> resource=mockResource(223,4123);\n  BitmapTransformation transformation=new BitmapTransformation(bitmapPool){\n    @Override public void updateDiskCacheKey(    MessageDigest messageDigest){\n    }\n    @Override protected Bitmap transform(    BitmapPool pool,    Bitmap toTransform,    int outWidth,    int outHeight){\n      assertEquals(bitmapPool,pool);\n      assertEquals(resource.get(),toTransform);\n      assertEquals(expectedWidth,outWidth);\n      assertEquals(expectedHeight,outHeight);\n      return resource.get();\n    }\n  }\n;\n  transformation.transform(resource,expectedWidth,expectedHeight);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPassesGivenArgumentsToTransform(){\n  final int expectedWidth=13;\n  final int expectedHeight=148;\n  final Resource<Bitmap> resource=mockResource(223,4123);\n  BitmapTransformation transformation=new BitmapTransformation(bitmapPool){\n    @Override public void updateDiskCacheKey(    MessageDigest messageDigest){\n    }\n    @Override protected Bitmap transform(    BitmapPool pool,    Bitmap toTransform,    int outWidth,    int outHeight){\n      assertEquals(bitmapPool,pool);\n      assertEquals(resource.get(),toTransform);\n      assertEquals(expectedWidth,outWidth);\n      assertEquals(expectedHeight,outHeight);\n      return resource.get();\n    }\n  }\n;\n  transformation.transform(resource,expectedWidth,expectedHeight);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 35
      },
      "nodeContext" : "final int expectedHeight=148;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 73,
    "startColumnNumber" : 31,
    "endLineNumber" : 73,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}