{
  "id" : 75,
  "expression" : "ArgumentCaptor",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/test/java/org/thoughtcrime/securesms/testutil/SecureRandomTestUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ArgumentCaptor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 26,
      "startColumnNumber" : 38,
      "endLineNumber" : 26,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 26,
        "startColumnNumber" : 38,
        "endLineNumber" : 26,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ArgumentCaptor.forClass(byte[].class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 26,
        "startColumnNumber" : 27,
        "endLineNumber" : 26,
        "endColumnNumber" : 75
      },
      "nodeContext" : "argument=ArgumentCaptor.forClass(byte[].class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 76
      },
      "nodeContext" : "ArgumentCaptor<byte[]> argument=ArgumentCaptor.forClass(byte[].class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 24,
        "startColumnNumber" : 60,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SecureRandom mock=mock(SecureRandom.class);\n  ArgumentCaptor<byte[]> argument=ArgumentCaptor.forClass(byte[].class);\n  doAnswer(new Answer<Void>(){\n    private int count;\n    @Override public Void answer(    InvocationOnMock invocation){\n      assertEquals(\"SecureRandom Mock: nextBytes only expected to be called once\",1,++count);\n      byte[] output=argument.getValue();\n      assertEquals(\"SecureRandom Mock: nextBytes byte[] length requested does not match byte[] setup\",returnValue.length,output.length);\n      System.arraycopy(returnValue,0,output,0,returnValue.length);\n      return null;\n    }\n  }\n).when(mock).nextBytes(argument.capture());\n  return mock;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1060,
        "startLineNumber" : 18,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a  {@link SecureRandom} that returns exactly the {@param returnValue} the first timeits  {@link SecureRandom#nextBytes(byte[])}} method is called. <p> Any attempt to call with the incorrect length, or a second time will fail.\n */\npublic static SecureRandom mockRandom(byte[] returnValue){\n  SecureRandom mock=mock(SecureRandom.class);\n  ArgumentCaptor<byte[]> argument=ArgumentCaptor.forClass(byte[].class);\n  doAnswer(new Answer<Void>(){\n    private int count;\n    @Override public Void answer(    InvocationOnMock invocation){\n      assertEquals(\"SecureRandom Mock: nextBytes only expected to be called once\",1,++count);\n      byte[] output=argument.getValue();\n      assertEquals(\"SecureRandom Mock: nextBytes byte[] length requested does not match byte[] setup\",returnValue.length,output.length);\n      System.arraycopy(returnValue,0,output,0,returnValue.length);\n      return null;\n    }\n  }\n).when(mock).nextBytes(argument.capture());\n  return mock;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 76
      },
      "nodeContext" : "ArgumentCaptor<byte[]> argument=ArgumentCaptor.forClass(byte[].class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 26,
    "startColumnNumber" : 38,
    "endLineNumber" : 26,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}