{
  "id" : 252,
  "expression" : "null",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/model/RunnerStack.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 66,
      "startColumnNumber" : 17,
      "endLineNumber" : 66,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 21
      },
      "nodeContext" : "e != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (e != null) {\n  Stack<RunExecution> s=stack.get(e);\n  if (s != null && !s.isEmpty()) {\n    return s.peek();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 64,
        "startColumnNumber" : 51,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Executor e=Executor.currentExecutor();\n  if (e != null) {\n    Stack<RunExecution> s=stack.get(e);\n    if (s != null && !s.isEmpty()) {\n      return s.peek();\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 944,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Looks up the currently running build, if known. <p>While most  {@link Run} implementations do add a {@link RunExecution} to the stack for the duration of the build,those which have a different implementation of  {@link Run#run} (or which do additional work after {@link Run#execute} completes)may not consistently or ever keep an execution on the stack. In such cases this method will return null, meaning that  {@link CheckPoint#block(BuildListener,String)} and {@link CheckPoint#report} will do nothing.\n * @return a running build, or null if one has not been recorded\n */\nsynchronized @CheckForNull RunExecution peek(){\n  Executor e=Executor.currentExecutor();\n  if (e != null) {\n    Stack<RunExecution> s=stack.get(e);\n    if (s != null && !s.isEmpty()) {\n      return s.peek();\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 21
      },
      "nodeContext" : "e != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 68,
      "startColumnNumber" : 21,
      "endLineNumber" : 68,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 25
      },
      "nodeContext" : "s != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 41
      },
      "nodeContext" : "s != null && !s.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (s != null && !s.isEmpty()) {\n  return s.peek();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 66,
        "startColumnNumber" : 23,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Stack<RunExecution> s=stack.get(e);\n  if (s != null && !s.isEmpty()) {\n    return s.peek();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (e != null) {\n  Stack<RunExecution> s=stack.get(e);\n  if (s != null && !s.isEmpty()) {\n    return s.peek();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 64,
        "startColumnNumber" : 51,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Executor e=Executor.currentExecutor();\n  if (e != null) {\n    Stack<RunExecution> s=stack.get(e);\n    if (s != null && !s.isEmpty()) {\n      return s.peek();\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 944,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Looks up the currently running build, if known. <p>While most  {@link Run} implementations do add a {@link RunExecution} to the stack for the duration of the build,those which have a different implementation of  {@link Run#run} (or which do additional work after {@link Run#execute} completes)may not consistently or ever keep an execution on the stack. In such cases this method will return null, meaning that  {@link CheckPoint#block(BuildListener,String)} and {@link CheckPoint#report} will do nothing.\n * @return a running build, or null if one has not been recorded\n */\nsynchronized @CheckForNull RunExecution peek(){\n  Executor e=Executor.currentExecutor();\n  if (e != null) {\n    Stack<RunExecution> s=stack.get(e);\n    if (s != null && !s.isEmpty()) {\n      return s.peek();\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 41
      },
      "nodeContext" : "s != null && !s.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 72,
      "startColumnNumber" : 15,
      "endLineNumber" : 72,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 64,
        "startColumnNumber" : 51,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Executor e=Executor.currentExecutor();\n  if (e != null) {\n    Stack<RunExecution> s=stack.get(e);\n    if (s != null && !s.isEmpty()) {\n      return s.peek();\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 944,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Looks up the currently running build, if known. <p>While most  {@link Run} implementations do add a {@link RunExecution} to the stack for the duration of the build,those which have a different implementation of  {@link Run#run} (or which do additional work after {@link Run#execute} completes)may not consistently or ever keep an execution on the stack. In such cases this method will return null, meaning that  {@link CheckPoint#block(BuildListener,String)} and {@link CheckPoint#report} will do nothing.\n * @return a running build, or null if one has not been recorded\n */\nsynchronized @CheckForNull RunExecution peek(){\n  Executor e=Executor.currentExecutor();\n  if (e != null) {\n    Stack<RunExecution> s=stack.get(e);\n    if (s != null && !s.isEmpty()) {\n      return s.peek();\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 66,
    "startColumnNumber" : 17,
    "endLineNumber" : 66,
    "endColumnNumber" : 21
  }, {
    "charLength" : 4,
    "startLineNumber" : 68,
    "startColumnNumber" : 21,
    "endLineNumber" : 68,
    "endColumnNumber" : 25
  }, {
    "charLength" : 4,
    "startLineNumber" : 72,
    "startColumnNumber" : 15,
    "endLineNumber" : 72,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  } ]
}