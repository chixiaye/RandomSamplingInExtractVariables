{
  "id" : 86,
  "expression" : "spans",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-junit/src/test/java/zipkin/junit/HttpSpanConsumer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "spans",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 44,
      "startColumnNumber" : 47,
      "endLineNumber" : 44,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 44,
        "startColumnNumber" : 25,
        "endLineNumber" : 44,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Codec.JSON.writeSpans(spans)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 44,
        "startColumnNumber" : 11,
        "endLineNumber" : 44,
        "endColumnNumber" : 53
      },
      "nodeContext" : "spansInJson=Codec.JSON.writeSpans(spans)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 54
      },
      "nodeContext" : "byte[] spansInJson=Codec.JSON.writeSpans(spans);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 523,
        "startLineNumber" : 43,
        "startColumnNumber" : 70,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] spansInJson=Codec.JSON.writeSpans(spans);\n  client.newCall(new Request.Builder().url(baseUrl.resolve(\"/api/v1/spans\")).post(RequestBody.create(MediaType.parse(\"application/json\"),spansInJson)).build()).enqueue(new okhttp3.Callback(){\n    @Override public void onFailure(    Call call,    IOException e){\n      callback.onError(e);\n    }\n    @Override public void onResponse(    Call call,    Response response) throws IOException {\n      callback.onSuccess(null);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 603,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void accept(List<Span> spans,final Callback<Void> callback){\n  byte[] spansInJson=Codec.JSON.writeSpans(spans);\n  client.newCall(new Request.Builder().url(baseUrl.resolve(\"/api/v1/spans\")).post(RequestBody.create(MediaType.parse(\"application/json\"),spansInJson)).build()).enqueue(new okhttp3.Callback(){\n    @Override public void onFailure(    Call call,    IOException e){\n      callback.onError(e);\n    }\n    @Override public void onResponse(    Call call,    Response response) throws IOException {\n      callback.onSuccess(null);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 54
      },
      "nodeContext" : "byte[] spansInJson=Codec.JSON.writeSpans(spans);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<zipkin.Span>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 44,
    "startColumnNumber" : 47,
    "endLineNumber" : 44,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}