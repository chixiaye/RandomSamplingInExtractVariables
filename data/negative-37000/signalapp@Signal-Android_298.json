{
  "id" : 298,
  "expression" : "\"Migrating to encrypted passphrase.\"",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/backup/BackupPassphrase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Migrating to encrypted passphrase.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 32,
      "startColumnNumber" : 17,
      "endLineNumber" : 32,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 32,
        "startColumnNumber" : 6,
        "endLineNumber" : 32,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Log.i(TAG,\"Migrating to encrypted passphrase.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 32,
        "startColumnNumber" : 6,
        "endLineNumber" : 32,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Log.i(TAG,\"Migrating to encrypted passphrase.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 31,
        "startColumnNumber" : 37,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Log.i(TAG,\"Migrating to encrypted passphrase.\");\n  set(context,passphrase);\n  encryptedPassphrase=TextSecurePreferences.getEncryptedBackupPassphrase(context);\n  if (encryptedPassphrase == null)   throw new AssertionError(\"Passphrase migration failed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (encryptedPassphrase == null) {\n  Log.i(TAG,\"Migrating to encrypted passphrase.\");\n  set(context,passphrase);\n  encryptedPassphrase=TextSecurePreferences.getEncryptedBackupPassphrase(context);\n  if (encryptedPassphrase == null)   throw new AssertionError(\"Passphrase migration failed\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 23,
        "startColumnNumber" : 63,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String passphrase=TextSecurePreferences.getBackupPassphrase(context);\n  String encryptedPassphrase=TextSecurePreferences.getEncryptedBackupPassphrase(context);\n  if (Build.VERSION.SDK_INT < 23 || (passphrase == null && encryptedPassphrase == null)) {\n    return stripSpaces(passphrase);\n  }\n  if (encryptedPassphrase == null) {\n    Log.i(TAG,\"Migrating to encrypted passphrase.\");\n    set(context,passphrase);\n    encryptedPassphrase=TextSecurePreferences.getEncryptedBackupPassphrase(context);\n    if (encryptedPassphrase == null)     throw new AssertionError(\"Passphrase migration failed\");\n  }\n  KeyStoreHelper.SealedData data=KeyStoreHelper.SealedData.fromString(encryptedPassphrase);\n  return stripSpaces(new String(KeyStoreHelper.unseal(data)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static @Nullable String get(@NonNull Context context){\n  String passphrase=TextSecurePreferences.getBackupPassphrase(context);\n  String encryptedPassphrase=TextSecurePreferences.getEncryptedBackupPassphrase(context);\n  if (Build.VERSION.SDK_INT < 23 || (passphrase == null && encryptedPassphrase == null)) {\n    return stripSpaces(passphrase);\n  }\n  if (encryptedPassphrase == null) {\n    Log.i(TAG,\"Migrating to encrypted passphrase.\");\n    set(context,passphrase);\n    encryptedPassphrase=TextSecurePreferences.getEncryptedBackupPassphrase(context);\n    if (encryptedPassphrase == null)     throw new AssertionError(\"Passphrase migration failed\");\n  }\n  KeyStoreHelper.SealedData data=KeyStoreHelper.SealedData.fromString(encryptedPassphrase);\n  return stripSpaces(new String(KeyStoreHelper.unseal(data)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 32,
        "startColumnNumber" : 6,
        "endLineNumber" : 32,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Log.i(TAG,\"Migrating to encrypted passphrase.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 32,
    "startColumnNumber" : 17,
    "endLineNumber" : 32,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}