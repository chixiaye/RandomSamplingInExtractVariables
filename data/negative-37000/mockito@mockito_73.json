{
  "id" : 73,
  "expression" : "new InvocationBuilder().args(\"x\")",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockito/internal/junit/StubbingArgMismatchesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new InvocationBuilder().args(\"x\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 55,
      "startColumnNumber" : 16,
      "endLineNumber" : 55,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 74
      },
      "nodeContext" : "new InvocationBuilder().args(\"x\").location(\"-> at X.java\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 89
      },
      "nodeContext" : "new InvocationBuilder().args(\"x\").location(\"-> at X.java\").toInvocation()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 25
      },
      "nodeContext" : "mismatches.add(new InvocationBuilder().args(\"x\").location(\"-> at X.java\").toInvocation(),stubbing)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 26
      },
      "nodeContext" : "mismatches.add(new InvocationBuilder().args(\"x\").location(\"-> at X.java\").toInvocation(),stubbing);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1515,
        "startLineNumber" : 50,
        "startColumnNumber" : 29,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Invocation stubbing=new InvocationBuilder().args(\"a\").location(\"-> at A.java\").toInvocation();\n  mismatches.add(new InvocationBuilder().args(\"x\").location(\"-> at X.java\").toInvocation(),stubbing);\n  mismatches.add(new InvocationBuilder().args(\"y\").location(\"-> at Y.java\").toInvocation(),stubbing);\n  mismatches.add(new InvocationBuilder().method(\"differentMethod\").args(\"n\").location(\"-> at N.java\").toInvocation(),new InvocationBuilder().method(\"differentMethod\").args(\"m\").location(\"-> at M.java\").toInvocation());\n  mismatches.format(\"MyTest.myTestMethod\",logger);\n  assertEquals(\"[MockitoHint] MyTest.myTestMethod (see javadoc for MockitoHint):\\n\" + \"[MockitoHint] 1. Unused... -> at A.java\\n\" + \"[MockitoHint]  ...args ok? -> at X.java\\n\"+ \"[MockitoHint]  ...args ok? -> at Y.java\\n\"+ \"[MockitoHint] 2. Unused... -> at M.java\\n\"+ \"[MockitoHint]  ...args ok? -> at N.java\\n\",logger.getLoggedInfo());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1636,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void multiple_matching_invocations_per_stub_plus_some_other_invocation() throws Exception {\n  Invocation stubbing=new InvocationBuilder().args(\"a\").location(\"-> at A.java\").toInvocation();\n  mismatches.add(new InvocationBuilder().args(\"x\").location(\"-> at X.java\").toInvocation(),stubbing);\n  mismatches.add(new InvocationBuilder().args(\"y\").location(\"-> at Y.java\").toInvocation(),stubbing);\n  mismatches.add(new InvocationBuilder().method(\"differentMethod\").args(\"n\").location(\"-> at N.java\").toInvocation(),new InvocationBuilder().method(\"differentMethod\").args(\"m\").location(\"-> at M.java\").toInvocation());\n  mismatches.format(\"MyTest.myTestMethod\",logger);\n  assertEquals(\"[MockitoHint] MyTest.myTestMethod (see javadoc for MockitoHint):\\n\" + \"[MockitoHint] 1. Unused... -> at A.java\\n\" + \"[MockitoHint]  ...args ok? -> at X.java\\n\"+ \"[MockitoHint]  ...args ok? -> at Y.java\\n\"+ \"[MockitoHint] 2. Unused... -> at M.java\\n\"+ \"[MockitoHint]  ...args ok? -> at N.java\\n\",logger.getLoggedInfo());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 89
      },
      "nodeContext" : "new InvocationBuilder().args(\"x\").location(\"-> at X.java\").toInvocation()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "org.mockito.internal.invocation.InvocationBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 55,
    "startColumnNumber" : 16,
    "endLineNumber" : 55,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}