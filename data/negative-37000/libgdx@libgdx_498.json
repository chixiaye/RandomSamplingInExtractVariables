{
  "id" : 498,
  "expression" : "Gdx",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/graphics/profiling/GLErrorListener.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Gdx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 55,
      "startColumnNumber" : 4,
      "endLineNumber" : 55,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 11
      },
      "nodeContext" : "Gdx.app",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Gdx.app.error(\"GLProfiler\",\"Error \" + resolveErrorNumber(error) + \" from \"+ place)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Gdx.app.error(\"GLProfiler\",\"Error \" + resolveErrorNumber(error) + \" from \"+ place);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 54,
        "startColumnNumber" : 22,
        "endLineNumber" : 56,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Gdx.app.error(\"GLProfiler\",\"Error \" + resolveErrorNumber(error) + \" from \"+ place);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 54,
        "startColumnNumber" : 3,
        "endLineNumber" : 70,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (place != null) {\n  Gdx.app.error(\"GLProfiler\",\"Error \" + resolveErrorNumber(error) + \" from \"+ place);\n}\n else {\n  StringBuilder sb=new StringBuilder(\"Error \");\n  sb.append(resolveErrorNumber(error));\n  sb.append(\" at:\\n\");\n  try {\n    final StackTraceElement[] stack=exc.getStackTrace();\n    for (int i=0; i < stack.length; i++) {\n      sb.append(stack[i].toString()).append('\\n');\n    }\n  }\n catch (  Exception ignored) {\n    sb.append(\" (Failed to print stack trace: \").append(ignored).append(\")\");\n  }\n  Gdx.app.error(\"GLProfiler\",sb.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 107,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 36,
        "startColumnNumber" : 34,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Exception exc=new Exception();\n  String place=null;\n  try {\n    final StackTraceElement[] stack=exc.getStackTrace();\n    for (int i=0; i < stack.length; i++) {\n      if (stack[i].getMethodName().contains(\"check\")) {\n        if (i + 1 < stack.length) {\n          final StackTraceElement glMethod=stack[i + 1];\n          place=glMethod.getMethodName();\n        }\n        break;\n      }\n    }\n  }\n catch (  Exception ignored) {\n  }\n  if (place != null) {\n    Gdx.app.error(\"GLProfiler\",\"Error \" + resolveErrorNumber(error) + \" from \"+ place);\n  }\n else {\n    StringBuilder sb=new StringBuilder(\"Error \");\n    sb.append(resolveErrorNumber(error));\n    sb.append(\" at:\\n\");\n    try {\n      final StackTraceElement[] stack=exc.getStackTrace();\n      for (int i=0; i < stack.length; i++) {\n        sb.append(stack[i].toString()).append('\\n');\n      }\n    }\n catch (    Exception ignored) {\n      sb.append(\" (Failed to print stack trace: \").append(ignored).append(\")\");\n    }\n    Gdx.app.error(\"GLProfiler\",sb.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void onError(int error){\n  final Exception exc=new Exception();\n  String place=null;\n  try {\n    final StackTraceElement[] stack=exc.getStackTrace();\n    for (int i=0; i < stack.length; i++) {\n      if (stack[i].getMethodName().contains(\"check\")) {\n        if (i + 1 < stack.length) {\n          final StackTraceElement glMethod=stack[i + 1];\n          place=glMethod.getMethodName();\n        }\n        break;\n      }\n    }\n  }\n catch (  Exception ignored) {\n  }\n  if (place != null) {\n    Gdx.app.error(\"GLProfiler\",\"Error \" + resolveErrorNumber(error) + \" from \"+ place);\n  }\n else {\n    StringBuilder sb=new StringBuilder(\"Error \");\n    sb.append(resolveErrorNumber(error));\n    sb.append(\" at:\\n\");\n    try {\n      final StackTraceElement[] stack=exc.getStackTrace();\n      for (int i=0; i < stack.length; i++) {\n        sb.append(stack[i].toString()).append('\\n');\n      }\n    }\n catch (    Exception ignored) {\n      sb.append(\" (Failed to print stack trace: \").append(ignored).append(\")\");\n    }\n    Gdx.app.error(\"GLProfiler\",sb.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Gdx.app.error(\"GLProfiler\",\"Error \" + resolveErrorNumber(error) + \" from \"+ place);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.Gdx"
  }, {
    "nodeContext" : "Gdx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 68,
      "startColumnNumber" : 4,
      "endLineNumber" : 68,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 11
      },
      "nodeContext" : "Gdx.app",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Gdx.app.error(\"GLProfiler\",sb.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Gdx.app.error(\"GLProfiler\",sb.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 56,
        "startColumnNumber" : 10,
        "endLineNumber" : 70,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder(\"Error \");\n  sb.append(resolveErrorNumber(error));\n  sb.append(\" at:\\n\");\n  try {\n    final StackTraceElement[] stack=exc.getStackTrace();\n    for (int i=0; i < stack.length; i++) {\n      sb.append(stack[i].toString()).append('\\n');\n    }\n  }\n catch (  Exception ignored) {\n    sb.append(\" (Failed to print stack trace: \").append(ignored).append(\")\");\n  }\n  Gdx.app.error(\"GLProfiler\",sb.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 54,
        "startColumnNumber" : 3,
        "endLineNumber" : 70,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (place != null) {\n  Gdx.app.error(\"GLProfiler\",\"Error \" + resolveErrorNumber(error) + \" from \"+ place);\n}\n else {\n  StringBuilder sb=new StringBuilder(\"Error \");\n  sb.append(resolveErrorNumber(error));\n  sb.append(\" at:\\n\");\n  try {\n    final StackTraceElement[] stack=exc.getStackTrace();\n    for (int i=0; i < stack.length; i++) {\n      sb.append(stack[i].toString()).append('\\n');\n    }\n  }\n catch (  Exception ignored) {\n    sb.append(\" (Failed to print stack trace: \").append(ignored).append(\")\");\n  }\n  Gdx.app.error(\"GLProfiler\",sb.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 107,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1183,
        "startLineNumber" : 36,
        "startColumnNumber" : 34,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Exception exc=new Exception();\n  String place=null;\n  try {\n    final StackTraceElement[] stack=exc.getStackTrace();\n    for (int i=0; i < stack.length; i++) {\n      if (stack[i].getMethodName().contains(\"check\")) {\n        if (i + 1 < stack.length) {\n          final StackTraceElement glMethod=stack[i + 1];\n          place=glMethod.getMethodName();\n        }\n        break;\n      }\n    }\n  }\n catch (  Exception ignored) {\n  }\n  if (place != null) {\n    Gdx.app.error(\"GLProfiler\",\"Error \" + resolveErrorNumber(error) + \" from \"+ place);\n  }\n else {\n    StringBuilder sb=new StringBuilder(\"Error \");\n    sb.append(resolveErrorNumber(error));\n    sb.append(\" at:\\n\");\n    try {\n      final StackTraceElement[] stack=exc.getStackTrace();\n      for (int i=0; i < stack.length; i++) {\n        sb.append(stack[i].toString()).append('\\n');\n      }\n    }\n catch (    Exception ignored) {\n      sb.append(\" (Failed to print stack trace: \").append(ignored).append(\")\");\n    }\n    Gdx.app.error(\"GLProfiler\",sb.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void onError(int error){\n  final Exception exc=new Exception();\n  String place=null;\n  try {\n    final StackTraceElement[] stack=exc.getStackTrace();\n    for (int i=0; i < stack.length; i++) {\n      if (stack[i].getMethodName().contains(\"check\")) {\n        if (i + 1 < stack.length) {\n          final StackTraceElement glMethod=stack[i + 1];\n          place=glMethod.getMethodName();\n        }\n        break;\n      }\n    }\n  }\n catch (  Exception ignored) {\n  }\n  if (place != null) {\n    Gdx.app.error(\"GLProfiler\",\"Error \" + resolveErrorNumber(error) + \" from \"+ place);\n  }\n else {\n    StringBuilder sb=new StringBuilder(\"Error \");\n    sb.append(resolveErrorNumber(error));\n    sb.append(\" at:\\n\");\n    try {\n      final StackTraceElement[] stack=exc.getStackTrace();\n      for (int i=0; i < stack.length; i++) {\n        sb.append(stack[i].toString()).append('\\n');\n      }\n    }\n catch (    Exception ignored) {\n      sb.append(\" (Failed to print stack trace: \").append(ignored).append(\")\");\n    }\n    Gdx.app.error(\"GLProfiler\",sb.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Gdx.app.error(\"GLProfiler\",sb.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.Gdx"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 55,
    "startColumnNumber" : 4,
    "endLineNumber" : 55,
    "endColumnNumber" : 7
  }, {
    "charLength" : 3,
    "startLineNumber" : 68,
    "startColumnNumber" : 4,
    "endLineNumber" : 68,
    "endColumnNumber" : 7
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}