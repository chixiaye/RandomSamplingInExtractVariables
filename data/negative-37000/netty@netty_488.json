{
  "id" : 488,
  "expression" : "epoll.intValue()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "epoll.intValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 45,
      "startColumnNumber" : 31,
      "endLineNumber" : 45,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Native.epollCtlAdd(epoll.intValue(),timerFd.intValue(),Native.EPOLLIN)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Native.epollCtlAdd(epoll.intValue(),timerFd.intValue(),Native.EPOLLIN);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1187,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final FileDescriptor epoll=Native.newEpollCreate();\n  final FileDescriptor timerFd=Native.newTimerFd();\n  final FileDescriptor eventfd=Native.newEventFd();\n  Native.epollCtlAdd(epoll.intValue(),timerFd.intValue(),Native.EPOLLIN);\n  Native.epollCtlAdd(epoll.intValue(),eventfd.intValue(),Native.EPOLLIN);\n  final AtomicReference<Throwable> ref=new AtomicReference<>();\n  Thread t=new Thread(() -> {\n    try {\n      assertEquals(1,Native.epollWait(epoll,eventArray,timerFd,-1,-1));\n      assertEquals(eventfd.intValue(),eventArray.fd(0));\n    }\n catch (    Throwable cause) {\n      ref.set(cause);\n    }\n  }\n);\n  t.start();\n  t.join(1000);\n  assertTrue(t.isAlive());\n  Native.eventFdWrite(eventfd.intValue(),1);\n  t.join();\n  assertNull(ref.get());\n  epoll.close();\n  timerFd.close();\n  eventfd.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1244,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  final FileDescriptor epoll=Native.newEpollCreate();\n  final FileDescriptor timerFd=Native.newTimerFd();\n  final FileDescriptor eventfd=Native.newEventFd();\n  Native.epollCtlAdd(epoll.intValue(),timerFd.intValue(),Native.EPOLLIN);\n  Native.epollCtlAdd(epoll.intValue(),eventfd.intValue(),Native.EPOLLIN);\n  final AtomicReference<Throwable> ref=new AtomicReference<>();\n  Thread t=new Thread(() -> {\n    try {\n      assertEquals(1,Native.epollWait(epoll,eventArray,timerFd,-1,-1));\n      assertEquals(eventfd.intValue(),eventArray.fd(0));\n    }\n catch (    Throwable cause) {\n      ref.set(cause);\n    }\n  }\n);\n  t.start();\n  t.join(1000);\n  assertTrue(t.isAlive());\n  Native.eventFdWrite(eventfd.intValue(),1);\n  t.join();\n  assertNull(ref.get());\n  epoll.close();\n  timerFd.close();\n  eventfd.close();\n}\n  finally {\n  eventArray.free();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 165,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 39,
        "startColumnNumber" : 69,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final EpollEventArray eventArray=new EpollEventArray(8);\n  try {\n    final FileDescriptor epoll=Native.newEpollCreate();\n    final FileDescriptor timerFd=Native.newTimerFd();\n    final FileDescriptor eventfd=Native.newEventFd();\n    Native.epollCtlAdd(epoll.intValue(),timerFd.intValue(),Native.EPOLLIN);\n    Native.epollCtlAdd(epoll.intValue(),eventfd.intValue(),Native.EPOLLIN);\n    final AtomicReference<Throwable> ref=new AtomicReference<>();\n    Thread t=new Thread(() -> {\n      try {\n        assertEquals(1,Native.epollWait(epoll,eventArray,timerFd,-1,-1));\n        assertEquals(eventfd.intValue(),eventArray.fd(0));\n      }\n catch (      Throwable cause) {\n        ref.set(cause);\n      }\n    }\n);\n    t.start();\n    t.join(1000);\n    assertTrue(t.isAlive());\n    Native.eventFdWrite(eventfd.intValue(),1);\n    t.join();\n    assertNull(ref.get());\n    epoll.close();\n    timerFd.close();\n    eventfd.close();\n  }\n  finally {\n    eventArray.free();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1464,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Timeout(value=5000,unit=TimeUnit.MILLISECONDS) public void testEpollWaitWithTimeOutMinusOne() throws Exception {\n  final EpollEventArray eventArray=new EpollEventArray(8);\n  try {\n    final FileDescriptor epoll=Native.newEpollCreate();\n    final FileDescriptor timerFd=Native.newTimerFd();\n    final FileDescriptor eventfd=Native.newEventFd();\n    Native.epollCtlAdd(epoll.intValue(),timerFd.intValue(),Native.EPOLLIN);\n    Native.epollCtlAdd(epoll.intValue(),eventfd.intValue(),Native.EPOLLIN);\n    final AtomicReference<Throwable> ref=new AtomicReference<>();\n    Thread t=new Thread(() -> {\n      try {\n        assertEquals(1,Native.epollWait(epoll,eventArray,timerFd,-1,-1));\n        assertEquals(eventfd.intValue(),eventArray.fd(0));\n      }\n catch (      Throwable cause) {\n        ref.set(cause);\n      }\n    }\n);\n    t.start();\n    t.join(1000);\n    assertTrue(t.isAlive());\n    Native.eventFdWrite(eventfd.intValue(),1);\n    t.join();\n    assertNull(ref.get());\n    epoll.close();\n    timerFd.close();\n    eventfd.close();\n  }\n  finally {\n    eventArray.free();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Native.epollCtlAdd(epoll.intValue(),timerFd.intValue(),Native.EPOLLIN);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "epoll.intValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 46,
      "startColumnNumber" : 31,
      "endLineNumber" : 46,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Native.epollCtlAdd(epoll.intValue(),eventfd.intValue(),Native.EPOLLIN)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Native.epollCtlAdd(epoll.intValue(),eventfd.intValue(),Native.EPOLLIN);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1187,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final FileDescriptor epoll=Native.newEpollCreate();\n  final FileDescriptor timerFd=Native.newTimerFd();\n  final FileDescriptor eventfd=Native.newEventFd();\n  Native.epollCtlAdd(epoll.intValue(),timerFd.intValue(),Native.EPOLLIN);\n  Native.epollCtlAdd(epoll.intValue(),eventfd.intValue(),Native.EPOLLIN);\n  final AtomicReference<Throwable> ref=new AtomicReference<>();\n  Thread t=new Thread(() -> {\n    try {\n      assertEquals(1,Native.epollWait(epoll,eventArray,timerFd,-1,-1));\n      assertEquals(eventfd.intValue(),eventArray.fd(0));\n    }\n catch (    Throwable cause) {\n      ref.set(cause);\n    }\n  }\n);\n  t.start();\n  t.join(1000);\n  assertTrue(t.isAlive());\n  Native.eventFdWrite(eventfd.intValue(),1);\n  t.join();\n  assertNull(ref.get());\n  epoll.close();\n  timerFd.close();\n  eventfd.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1244,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  final FileDescriptor epoll=Native.newEpollCreate();\n  final FileDescriptor timerFd=Native.newTimerFd();\n  final FileDescriptor eventfd=Native.newEventFd();\n  Native.epollCtlAdd(epoll.intValue(),timerFd.intValue(),Native.EPOLLIN);\n  Native.epollCtlAdd(epoll.intValue(),eventfd.intValue(),Native.EPOLLIN);\n  final AtomicReference<Throwable> ref=new AtomicReference<>();\n  Thread t=new Thread(() -> {\n    try {\n      assertEquals(1,Native.epollWait(epoll,eventArray,timerFd,-1,-1));\n      assertEquals(eventfd.intValue(),eventArray.fd(0));\n    }\n catch (    Throwable cause) {\n      ref.set(cause);\n    }\n  }\n);\n  t.start();\n  t.join(1000);\n  assertTrue(t.isAlive());\n  Native.eventFdWrite(eventfd.intValue(),1);\n  t.join();\n  assertNull(ref.get());\n  epoll.close();\n  timerFd.close();\n  eventfd.close();\n}\n  finally {\n  eventArray.free();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 165,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 39,
        "startColumnNumber" : 69,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final EpollEventArray eventArray=new EpollEventArray(8);\n  try {\n    final FileDescriptor epoll=Native.newEpollCreate();\n    final FileDescriptor timerFd=Native.newTimerFd();\n    final FileDescriptor eventfd=Native.newEventFd();\n    Native.epollCtlAdd(epoll.intValue(),timerFd.intValue(),Native.EPOLLIN);\n    Native.epollCtlAdd(epoll.intValue(),eventfd.intValue(),Native.EPOLLIN);\n    final AtomicReference<Throwable> ref=new AtomicReference<>();\n    Thread t=new Thread(() -> {\n      try {\n        assertEquals(1,Native.epollWait(epoll,eventArray,timerFd,-1,-1));\n        assertEquals(eventfd.intValue(),eventArray.fd(0));\n      }\n catch (      Throwable cause) {\n        ref.set(cause);\n      }\n    }\n);\n    t.start();\n    t.join(1000);\n    assertTrue(t.isAlive());\n    Native.eventFdWrite(eventfd.intValue(),1);\n    t.join();\n    assertNull(ref.get());\n    epoll.close();\n    timerFd.close();\n    eventfd.close();\n  }\n  finally {\n    eventArray.free();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1464,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Timeout(value=5000,unit=TimeUnit.MILLISECONDS) public void testEpollWaitWithTimeOutMinusOne() throws Exception {\n  final EpollEventArray eventArray=new EpollEventArray(8);\n  try {\n    final FileDescriptor epoll=Native.newEpollCreate();\n    final FileDescriptor timerFd=Native.newTimerFd();\n    final FileDescriptor eventfd=Native.newEventFd();\n    Native.epollCtlAdd(epoll.intValue(),timerFd.intValue(),Native.EPOLLIN);\n    Native.epollCtlAdd(epoll.intValue(),eventfd.intValue(),Native.EPOLLIN);\n    final AtomicReference<Throwable> ref=new AtomicReference<>();\n    Thread t=new Thread(() -> {\n      try {\n        assertEquals(1,Native.epollWait(epoll,eventArray,timerFd,-1,-1));\n        assertEquals(eventfd.intValue(),eventArray.fd(0));\n      }\n catch (      Throwable cause) {\n        ref.set(cause);\n      }\n    }\n);\n    t.start();\n    t.join(1000);\n    assertTrue(t.isAlive());\n    Native.eventFdWrite(eventfd.intValue(),1);\n    t.join();\n    assertNull(ref.get());\n    epoll.close();\n    timerFd.close();\n    eventfd.close();\n  }\n  finally {\n    eventArray.free();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Native.epollCtlAdd(epoll.intValue(),eventfd.intValue(),Native.EPOLLIN);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 45,
    "startColumnNumber" : 31,
    "endLineNumber" : 45,
    "endColumnNumber" : 47
  }, {
    "charLength" : 16,
    "startLineNumber" : 46,
    "startColumnNumber" : 31,
    "endLineNumber" : 46,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}