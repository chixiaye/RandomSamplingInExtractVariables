{
  "id" : 72,
  "expression" : "e",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/server/quorum/FollowerHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 116,
      "startColumnNumber" : 52,
      "endLineNumber" : 116,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 116,
        "startColumnNumber" : 20,
        "endLineNumber" : 116,
        "endColumnNumber" : 54
      },
      "nodeContext" : "LOG.warn(\"Unexpected exception\",e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 116,
        "startColumnNumber" : 20,
        "endLineNumber" : 116,
        "endColumnNumber" : 55
      },
      "nodeContext" : "LOG.warn(\"Unexpected exception\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 115,
        "startColumnNumber" : 38,
        "endLineNumber" : 117,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  LOG.warn(\"Unexpected exception\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 115,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!sock.isClosed()) {\n  LOG.warn(\"Unexpected exception\",e);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 114,
        "startColumnNumber" : 36,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!sock.isClosed()) {\n    LOG.warn(\"Unexpected exception\",e);\n  }\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 114,
        "startColumnNumber" : 14,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (IOException e) {\n  if (!sock.isClosed()) {\n    LOG.warn(\"Unexpected exception\",e);\n  }\n  break;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 279,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  oa.writeRecord(p,\"packet\");\n  bufferedOutput.flush();\n}\n catch (IOException e) {\n  if (!sock.isClosed()) {\n    LOG.warn(\"Unexpected exception\",e);\n  }\n  break;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 666,
        "startLineNumber" : 99,
        "startColumnNumber" : 21,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  QuorumPacket p;\n  p=queuedPackets.take();\n  if (p == proposalOfDeath) {\n    break;\n  }\n  if (p.getType() == Leader.PING) {\n    traceMask=ZooTrace.SERVER_PING_TRACE_MASK;\n  }\n  ZooTrace.logQuorumPacket(LOG,traceMask,'o',p);\n  try {\n    oa.writeRecord(p,\"packet\");\n    bufferedOutput.flush();\n  }\n catch (  IOException e) {\n    if (!sock.isClosed()) {\n      LOG.warn(\"Unexpected exception\",e);\n    }\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (true) {\n  QuorumPacket p;\n  p=queuedPackets.take();\n  if (p == proposalOfDeath) {\n    break;\n  }\n  if (p.getType() == Leader.PING) {\n    traceMask=ZooTrace.SERVER_PING_TRACE_MASK;\n  }\n  ZooTrace.logQuorumPacket(LOG,traceMask,'o',p);\n  try {\n    oa.writeRecord(p,\"packet\");\n    bufferedOutput.flush();\n  }\n catch (  IOException e) {\n    if (!sock.isClosed()) {\n      LOG.warn(\"Unexpected exception\",e);\n    }\n    break;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 97,
        "startColumnNumber" : 59,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long traceMask=ZooTrace.SERVER_PACKET_TRACE_MASK;\n  while (true) {\n    QuorumPacket p;\n    p=queuedPackets.take();\n    if (p == proposalOfDeath) {\n      break;\n    }\n    if (p.getType() == Leader.PING) {\n      traceMask=ZooTrace.SERVER_PING_TRACE_MASK;\n    }\n    ZooTrace.logQuorumPacket(LOG,traceMask,'o',p);\n    try {\n      oa.writeRecord(p,\"packet\");\n      bufferedOutput.flush();\n    }\n catch (    IOException e) {\n      if (!sock.isClosed()) {\n        LOG.warn(\"Unexpected exception\",e);\n      }\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 963,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method will use the thread to send packets added to the queuedPackets list\n * @throws InterruptedException\n */\nprivate void sendPackets() throws InterruptedException {\n  long traceMask=ZooTrace.SERVER_PACKET_TRACE_MASK;\n  while (true) {\n    QuorumPacket p;\n    p=queuedPackets.take();\n    if (p == proposalOfDeath) {\n      break;\n    }\n    if (p.getType() == Leader.PING) {\n      traceMask=ZooTrace.SERVER_PING_TRACE_MASK;\n    }\n    ZooTrace.logQuorumPacket(LOG,traceMask,'o',p);\n    try {\n      oa.writeRecord(p,\"packet\");\n      bufferedOutput.flush();\n    }\n catch (    IOException e) {\n      if (!sock.isClosed()) {\n        LOG.warn(\"Unexpected exception\",e);\n      }\n      break;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 116,
        "startColumnNumber" : 20,
        "endLineNumber" : 116,
        "endColumnNumber" : 55
      },
      "nodeContext" : "LOG.warn(\"Unexpected exception\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.IOException"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 116,
    "startColumnNumber" : 52,
    "endLineNumber" : 116,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}