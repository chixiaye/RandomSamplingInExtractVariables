{
  "id" : 216,
  "expression" : "!configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/common/network/ChannelBuilders.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 65,
      "startLineNumber" : 157,
      "startColumnNumber" : 64,
      "endLineNumber" : 157,
      "endColumnNumber" : 129
    },
    "astNodeNumber" : 9,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 157,
        "startColumnNumber" : 32,
        "endLineNumber" : 157,
        "endColumnNumber" : 129
      },
      "nodeContext" : "configuredClientAuth != null && !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 157,
        "startColumnNumber" : 28,
        "endLineNumber" : 162,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (configuredClientAuth != null && !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) {\n  log.warn(\"Broker configuration '{}' is applied only to SSL listeners. Listener-prefixed configuration can be used\" + \" to enable SSL client authentication for SASL_SSL listeners. In future releases, broker-wide option without\" + \" listener prefix may be applied to SASL_SSL listeners as well. All configuration options intended for specific\"+ \" listeners should be listener-prefixed.\",BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 155,
        "startColumnNumber" : 56,
        "endLineNumber" : 163,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  sslClientAuthOverride=SslClientAuth.NONE.name().toLowerCase(Locale.ROOT);\n  if (configuredClientAuth != null && !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) {\n    log.warn(\"Broker configuration '{}' is applied only to SSL listeners. Listener-prefixed configuration can be used\" + \" to enable SSL client authentication for SASL_SSL listeners. In future releases, broker-wide option without\" + \" listener prefix may be applied to SASL_SSL listeners as well. All configuration options intended for specific\"+ \" listeners should be listener-prefixed.\",BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 155,
        "startColumnNumber" : 24,
        "endLineNumber" : 163,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (listenerClientAuth == null) {\n  sslClientAuthOverride=SslClientAuth.NONE.name().toLowerCase(Locale.ROOT);\n  if (configuredClientAuth != null && !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) {\n    log.warn(\"Broker configuration '{}' is applied only to SSL listeners. Listener-prefixed configuration can be used\" + \" to enable SSL client authentication for SASL_SSL listeners. In future releases, broker-wide option without\" + \" listener prefix may be applied to SASL_SSL listeners as well. All configuration options intended for specific\"+ \" listeners should be listener-prefixed.\",BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1739,
        "startLineNumber" : 146,
        "startColumnNumber" : 95,
        "endLineNumber" : 164,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String configuredClientAuth=(String)configs.get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n  String listenerClientAuth=(String)config.originalsWithPrefix(listenerName.configPrefix(),true).get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n  if (listenerClientAuth == null) {\n    sslClientAuthOverride=SslClientAuth.NONE.name().toLowerCase(Locale.ROOT);\n    if (configuredClientAuth != null && !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) {\n      log.warn(\"Broker configuration '{}' is applied only to SSL listeners. Listener-prefixed configuration can be used\" + \" to enable SSL client authentication for SASL_SSL listeners. In future releases, broker-wide option without\" + \" listener prefix may be applied to SASL_SSL listeners as well. All configuration options intended for specific\"+ \" listeners should be listener-prefixed.\",BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1814,
        "startLineNumber" : 146,
        "startColumnNumber" : 20,
        "endLineNumber" : 164,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (listenerName != null && securityProtocol == SecurityProtocol.SASL_SSL) {\n  String configuredClientAuth=(String)configs.get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n  String listenerClientAuth=(String)config.originalsWithPrefix(listenerName.configPrefix(),true).get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n  if (listenerClientAuth == null) {\n    sslClientAuthOverride=SslClientAuth.NONE.name().toLowerCase(Locale.ROOT);\n    if (configuredClientAuth != null && !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) {\n      log.warn(\"Broker configuration '{}' is applied only to SSL listeners. Listener-prefixed configuration can be used\" + \" to enable SSL client authentication for SASL_SSL listeners. In future releases, broker-wide option without\" + \" listener prefix may be applied to SASL_SSL listeners as well. All configuration options intended for specific\"+ \" listeners should be listener-prefixed.\",BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2429,
        "startLineNumber" : 138,
        "startColumnNumber" : 41,
        "endLineNumber" : 165,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"unchecked\") List<String> enabledMechanisms=(List<String>)configs.get(BrokerSecurityConfigs.SASL_ENABLED_MECHANISMS_CONFIG);\n  jaasContexts=new HashMap<>(enabledMechanisms.size());\n  for (  String mechanism : enabledMechanisms)   jaasContexts.put(mechanism,JaasContext.loadServerContext(listenerName,mechanism,configs));\n  if (listenerName != null && securityProtocol == SecurityProtocol.SASL_SSL) {\n    String configuredClientAuth=(String)configs.get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n    String listenerClientAuth=(String)config.originalsWithPrefix(listenerName.configPrefix(),true).get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n    if (listenerClientAuth == null) {\n      sslClientAuthOverride=SslClientAuth.NONE.name().toLowerCase(Locale.ROOT);\n      if (configuredClientAuth != null && !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) {\n        log.warn(\"Broker configuration '{}' is applied only to SSL listeners. Listener-prefixed configuration can be used\" + \" to enable SSL client authentication for SASL_SSL listeners. In future releases, broker-wide option without\" + \" listener prefix may be applied to SASL_SSL listeners as well. All configuration options intended for specific\"+ \" listeners should be listener-prefixed.\",BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 2920,
        "startLineNumber" : 138,
        "startColumnNumber" : 16,
        "endLineNumber" : 170,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (mode == Mode.SERVER) {\n  @SuppressWarnings(\"unchecked\") List<String> enabledMechanisms=(List<String>)configs.get(BrokerSecurityConfigs.SASL_ENABLED_MECHANISMS_CONFIG);\n  jaasContexts=new HashMap<>(enabledMechanisms.size());\n  for (  String mechanism : enabledMechanisms)   jaasContexts.put(mechanism,JaasContext.loadServerContext(listenerName,mechanism,configs));\n  if (listenerName != null && securityProtocol == SecurityProtocol.SASL_SSL) {\n    String configuredClientAuth=(String)configs.get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n    String listenerClientAuth=(String)config.originalsWithPrefix(listenerName.configPrefix(),true).get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n    if (listenerClientAuth == null) {\n      sslClientAuthOverride=SslClientAuth.NONE.name().toLowerCase(Locale.ROOT);\n      if (configuredClientAuth != null && !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) {\n        log.warn(\"Broker configuration '{}' is applied only to SSL listeners. Listener-prefixed configuration can be used\" + \" to enable SSL client authentication for SASL_SSL listeners. In future releases, broker-wide option without\" + \" listener prefix may be applied to SASL_SSL listeners as well. All configuration options intended for specific\"+ \" listeners should be listener-prefixed.\",BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n      }\n    }\n  }\n}\n else {\n  JaasContext jaasContext=contextType == JaasContext.Type.CLIENT ? JaasContext.loadClientContext(configs) : JaasContext.loadServerContext(listenerName,clientSaslMechanism,configs);\n  jaasContexts=Collections.singletonMap(clientSaslMechanism,jaasContext);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 179,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4251,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (securityProtocol) {\ncase SSL:  requireNonNullMode(mode,securityProtocol);\nchannelBuilder=new SslChannelBuilder(mode,listenerName,isInterBrokerListener,logContext);\nbreak;\ncase SASL_SSL:case SASL_PLAINTEXT:requireNonNullMode(mode,securityProtocol);\nMap<String,JaasContext> jaasContexts;\nString sslClientAuthOverride=null;\nif (mode == Mode.SERVER) {\n@SuppressWarnings(\"unchecked\") List<String> enabledMechanisms=(List<String>)configs.get(BrokerSecurityConfigs.SASL_ENABLED_MECHANISMS_CONFIG);\njaasContexts=new HashMap<>(enabledMechanisms.size());\nfor (String mechanism : enabledMechanisms) jaasContexts.put(mechanism,JaasContext.loadServerContext(listenerName,mechanism,configs));\nif (listenerName != null && securityProtocol == SecurityProtocol.SASL_SSL) {\nString configuredClientAuth=(String)configs.get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\nString listenerClientAuth=(String)config.originalsWithPrefix(listenerName.configPrefix(),true).get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\nif (listenerClientAuth == null) {\nsslClientAuthOverride=SslClientAuth.NONE.name().toLowerCase(Locale.ROOT);\nif (configuredClientAuth != null && !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) {\nlog.warn(\"Broker configuration '{}' is applied only to SSL listeners. Listener-prefixed configuration can be used\" + \" to enable SSL client authentication for SASL_SSL listeners. In future releases, broker-wide option without\" + \" listener prefix may be applied to SASL_SSL listeners as well. All configuration options intended for specific\"+ \" listeners should be listener-prefixed.\",BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n}\n}\n}\n}\n else {\nJaasContext jaasContext=contextType == JaasContext.Type.CLIENT ? JaasContext.loadClientContext(configs) : JaasContext.loadServerContext(listenerName,clientSaslMechanism,configs);\njaasContexts=Collections.singletonMap(clientSaslMechanism,jaasContext);\n}\nchannelBuilder=new SaslChannelBuilder(mode,jaasContexts,securityProtocol,listenerName,isInterBrokerListener,clientSaslMechanism,saslHandshakeRequestEnable,credentialCache,tokenCache,sslClientAuthOverride,time,logContext,apiVersionSupplier);\nbreak;\ncase PLAINTEXT:channelBuilder=new PlaintextChannelBuilder(listenerName);\nbreak;\ndefault:throw new IllegalArgumentException(\"Unexpected securityProtocol \" + securityProtocol);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 262,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4465,
        "startLineNumber" : 124,
        "startColumnNumber" : 91,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Object> configs=channelBuilderConfigs(config,listenerName);\n  ChannelBuilder channelBuilder;\nswitch (securityProtocol) {\ncase SSL:    requireNonNullMode(mode,securityProtocol);\n  channelBuilder=new SslChannelBuilder(mode,listenerName,isInterBrokerListener,logContext);\nbreak;\ncase SASL_SSL:case SASL_PLAINTEXT:requireNonNullMode(mode,securityProtocol);\nMap<String,JaasContext> jaasContexts;\nString sslClientAuthOverride=null;\nif (mode == Mode.SERVER) {\n@SuppressWarnings(\"unchecked\") List<String> enabledMechanisms=(List<String>)configs.get(BrokerSecurityConfigs.SASL_ENABLED_MECHANISMS_CONFIG);\njaasContexts=new HashMap<>(enabledMechanisms.size());\nfor (String mechanism : enabledMechanisms) jaasContexts.put(mechanism,JaasContext.loadServerContext(listenerName,mechanism,configs));\nif (listenerName != null && securityProtocol == SecurityProtocol.SASL_SSL) {\nString configuredClientAuth=(String)configs.get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\nString listenerClientAuth=(String)config.originalsWithPrefix(listenerName.configPrefix(),true).get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\nif (listenerClientAuth == null) {\nsslClientAuthOverride=SslClientAuth.NONE.name().toLowerCase(Locale.ROOT);\nif (configuredClientAuth != null && !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) {\nlog.warn(\"Broker configuration '{}' is applied only to SSL listeners. Listener-prefixed configuration can be used\" + \" to enable SSL client authentication for SASL_SSL listeners. In future releases, broker-wide option without\" + \" listener prefix may be applied to SASL_SSL listeners as well. All configuration options intended for specific\"+ \" listeners should be listener-prefixed.\",BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n}\n}\n}\n}\n else {\nJaasContext jaasContext=contextType == JaasContext.Type.CLIENT ? JaasContext.loadClientContext(configs) : JaasContext.loadServerContext(listenerName,clientSaslMechanism,configs);\njaasContexts=Collections.singletonMap(clientSaslMechanism,jaasContext);\n}\nchannelBuilder=new SaslChannelBuilder(mode,jaasContexts,securityProtocol,listenerName,isInterBrokerListener,clientSaslMechanism,saslHandshakeRequestEnable,credentialCache,tokenCache,sslClientAuthOverride,time,logContext,apiVersionSupplier);\nbreak;\ncase PLAINTEXT:channelBuilder=new PlaintextChannelBuilder(listenerName);\nbreak;\ndefault:throw new IllegalArgumentException(\"Unexpected securityProtocol \" + securityProtocol);\n}\nchannelBuilder.configure(configs);\nreturn channelBuilder;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5365,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static ChannelBuilder create(SecurityProtocol securityProtocol,Mode mode,JaasContext.Type contextType,AbstractConfig config,ListenerName listenerName,boolean isInterBrokerListener,String clientSaslMechanism,boolean saslHandshakeRequestEnable,CredentialCache credentialCache,DelegationTokenCache tokenCache,Time time,LogContext logContext,Supplier<ApiVersionsResponse> apiVersionSupplier){\n  Map<String,Object> configs=channelBuilderConfigs(config,listenerName);\n  ChannelBuilder channelBuilder;\nswitch (securityProtocol) {\ncase SSL:    requireNonNullMode(mode,securityProtocol);\n  channelBuilder=new SslChannelBuilder(mode,listenerName,isInterBrokerListener,logContext);\nbreak;\ncase SASL_SSL:case SASL_PLAINTEXT:requireNonNullMode(mode,securityProtocol);\nMap<String,JaasContext> jaasContexts;\nString sslClientAuthOverride=null;\nif (mode == Mode.SERVER) {\n@SuppressWarnings(\"unchecked\") List<String> enabledMechanisms=(List<String>)configs.get(BrokerSecurityConfigs.SASL_ENABLED_MECHANISMS_CONFIG);\njaasContexts=new HashMap<>(enabledMechanisms.size());\nfor (String mechanism : enabledMechanisms) jaasContexts.put(mechanism,JaasContext.loadServerContext(listenerName,mechanism,configs));\nif (listenerName != null && securityProtocol == SecurityProtocol.SASL_SSL) {\nString configuredClientAuth=(String)configs.get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\nString listenerClientAuth=(String)config.originalsWithPrefix(listenerName.configPrefix(),true).get(BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\nif (listenerClientAuth == null) {\nsslClientAuthOverride=SslClientAuth.NONE.name().toLowerCase(Locale.ROOT);\nif (configuredClientAuth != null && !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) {\nlog.warn(\"Broker configuration '{}' is applied only to SSL listeners. Listener-prefixed configuration can be used\" + \" to enable SSL client authentication for SASL_SSL listeners. In future releases, broker-wide option without\" + \" listener prefix may be applied to SASL_SSL listeners as well. All configuration options intended for specific\"+ \" listeners should be listener-prefixed.\",BrokerSecurityConfigs.SSL_CLIENT_AUTH_CONFIG);\n}\n}\n}\n}\n else {\nJaasContext jaasContext=contextType == JaasContext.Type.CLIENT ? JaasContext.loadClientContext(configs) : JaasContext.loadServerContext(listenerName,clientSaslMechanism,configs);\njaasContexts=Collections.singletonMap(clientSaslMechanism,jaasContext);\n}\nchannelBuilder=new SaslChannelBuilder(mode,jaasContexts,securityProtocol,listenerName,isInterBrokerListener,clientSaslMechanism,saslHandshakeRequestEnable,credentialCache,tokenCache,sslClientAuthOverride,time,logContext,apiVersionSupplier);\nbreak;\ncase PLAINTEXT:channelBuilder=new PlaintextChannelBuilder(listenerName);\nbreak;\ndefault:throw new IllegalArgumentException(\"Unexpected securityProtocol \" + securityProtocol);\n}\nchannelBuilder.configure(configs);\nreturn channelBuilder;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 350,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 157,
        "startColumnNumber" : 32,
        "endLineNumber" : 157,
        "endColumnNumber" : 129
      },
      "nodeContext" : "configuredClientAuth != null && !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 65,
    "startLineNumber" : 157,
    "startColumnNumber" : 64,
    "endLineNumber" : 157,
    "endColumnNumber" : 129
  } ],
  "layoutRelationDataList" : [ ]
}