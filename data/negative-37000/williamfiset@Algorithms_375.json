{
  "id" : 375,
  "expression" : "(x1 - x2) / (y2 - y1)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/geometry/Line.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(x1 - x2) / (y2 - y1)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 67,
      "startColumnNumber" : 23,
      "endLineNumber" : 67,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 67,
        "startColumnNumber" : 11,
        "endLineNumber" : 67,
        "endColumnNumber" : 44
      },
      "nodeContext" : "perpSlope=(x1 - x2) / (y2 - y1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 45
      },
      "nodeContext" : "double perpSlope=(x1 - x2) / (y2 - y1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 60,
        "startColumnNumber" : 81,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Point2D middle=new Point2D.Double((x1 + x2) / 2.0,(y1 + y2) / 2.0);\n  double perpSlope=(x1 - x2) / (y2 - y1);\n  if (abs(y2 - y1) < EPS)   perpSlope=Double.POSITIVE_INFINITY;\n else   if (abs(x1 - x2) < EPS)   perpSlope=0;\n  return slopePointToLine(perpSlope,middle);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 529,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Line getPerpBisector(double x1,double y1,double x2,double y2){\n  Point2D middle=new Point2D.Double((x1 + x2) / 2.0,(y1 + y2) / 2.0);\n  double perpSlope=(x1 - x2) / (y2 - y1);\n  if (abs(y2 - y1) < EPS)   perpSlope=Double.POSITIVE_INFINITY;\n else   if (abs(x1 - x2) < EPS)   perpSlope=0;\n  return slopePointToLine(perpSlope,middle);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 45
      },
      "nodeContext" : "double perpSlope=(x1 - x2) / (y2 - y1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 67,
    "startColumnNumber" : 23,
    "endLineNumber" : 67,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}