{
  "id" : 13,
  "expression" : "output",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/docker/DockerClientTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "output",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 86,
      "startColumnNumber" : 34,
      "endLineNumber" : 86,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Assert.assertEquals(\"output\",output)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assert.assertEquals(\"output\",output);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 65,
        "startColumnNumber" : 66,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DockerClient testDockerClient=new DockerClient(subcommand -> {\n    Assert.assertEquals(\"load\",subcommand.get(0));\n    return mockProcessBuilder;\n  }\n);\n  Mockito.when(mockProcess.waitFor()).thenReturn(0);\n  ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();\n  Mockito.when(mockProcess.getOutputStream()).thenReturn(byteArrayOutputStream);\n  Mockito.when(mockProcess.getInputStream()).thenReturn(new ByteArrayInputStream(\"output\".getBytes(StandardCharsets.UTF_8)));\n  String output=testDockerClient.load(Blobs.from(\"jib\"));\n  Assert.assertEquals(\"jib\",new String(byteArrayOutputStream.toByteArray(),StandardCharsets.UTF_8));\n  Assert.assertEquals(\"output\",output);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testLoad() throws IOException, InterruptedException {\n  DockerClient testDockerClient=new DockerClient(subcommand -> {\n    Assert.assertEquals(\"load\",subcommand.get(0));\n    return mockProcessBuilder;\n  }\n);\n  Mockito.when(mockProcess.waitFor()).thenReturn(0);\n  ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();\n  Mockito.when(mockProcess.getOutputStream()).thenReturn(byteArrayOutputStream);\n  Mockito.when(mockProcess.getInputStream()).thenReturn(new ByteArrayInputStream(\"output\".getBytes(StandardCharsets.UTF_8)));\n  String output=testDockerClient.load(Blobs.from(\"jib\"));\n  Assert.assertEquals(\"jib\",new String(byteArrayOutputStream.toByteArray(),StandardCharsets.UTF_8));\n  Assert.assertEquals(\"output\",output);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assert.assertEquals(\"output\",output);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 86,
    "startColumnNumber" : 34,
    "endLineNumber" : 86,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}