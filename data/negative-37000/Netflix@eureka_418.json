{
  "id" : 418,
  "expression" : "HEART_BEAT_INTERVAL * TOLERANCE",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-core/src/test/java/com/netflix/eureka2/transport/base/HeartBeatConnectionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "HEART_BEAT_INTERVAL * TOLERANCE",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 91,
      "startColumnNumber" : 32,
      "endLineNumber" : 91,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 87
      },
      "nodeContext" : "scheduler.advanceTimeBy(HEART_BEAT_INTERVAL * TOLERANCE,TimeUnit.MILLISECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 88
      },
      "nodeContext" : "scheduler.advanceTimeBy(HEART_BEAT_INTERVAL * TOLERANCE,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 85,
        "startColumnNumber" : 69,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mockedIncomingStream.onNext(Heartbeat.INSTANCE);\n  scheduler.advanceTimeBy(HEART_BEAT_INTERVAL,TimeUnit.MILLISECONDS);\n  scheduler.advanceTimeBy(HEART_BEAT_INTERVAL * TOLERANCE,TimeUnit.MILLISECONDS);\n  verify(delegate,times(0)).shutdown();\n  scheduler.advanceTimeBy(HEART_BEAT_INTERVAL,TimeUnit.MILLISECONDS);\n  verify(delegate,times(1)).shutdown();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 571,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testHeartbeatIsReceivedAndCounted() throws Exception {\n  mockedIncomingStream.onNext(Heartbeat.INSTANCE);\n  scheduler.advanceTimeBy(HEART_BEAT_INTERVAL,TimeUnit.MILLISECONDS);\n  scheduler.advanceTimeBy(HEART_BEAT_INTERVAL * TOLERANCE,TimeUnit.MILLISECONDS);\n  verify(delegate,times(0)).shutdown();\n  scheduler.advanceTimeBy(HEART_BEAT_INTERVAL,TimeUnit.MILLISECONDS);\n  verify(delegate,times(1)).shutdown();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 88
      },
      "nodeContext" : "scheduler.advanceTimeBy(HEART_BEAT_INTERVAL * TOLERANCE,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 91,
    "startColumnNumber" : 32,
    "endLineNumber" : 91,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}