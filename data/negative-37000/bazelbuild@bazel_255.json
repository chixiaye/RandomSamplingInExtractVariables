{
  "id" : 255,
  "expression" : "\"Invalid order: \"",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/collect/nestedset/Order.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Invalid order: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 168,
      "startColumnNumber" : 41,
      "endLineNumber" : 168,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 168,
        "startColumnNumber" : 41,
        "endLineNumber" : 168,
        "endColumnNumber" : 65
      },
      "nodeContext" : "\"Invalid order: \" + name",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 168,
        "startColumnNumber" : 12,
        "endLineNumber" : 168,
        "endColumnNumber" : 66
      },
      "nodeContext" : "new IllegalArgumentException(\"Invalid order: \" + name)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 168,
        "startColumnNumber" : 6,
        "endLineNumber" : 168,
        "endColumnNumber" : 67
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Invalid order: \" + name);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 167,
        "startColumnNumber" : 11,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Invalid order: \" + name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (VALUES.containsKey(name)) {\n  return VALUES.get(name);\n}\n else {\n  throw new IllegalArgumentException(\"Invalid order: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 164,
        "startColumnNumber" : 41,
        "endLineNumber" : 170,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (VALUES.containsKey(name)) {\n    return VALUES.get(name);\n  }\n else {\n    throw new IllegalArgumentException(\"Invalid order: \" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 157,
        "startColumnNumber" : 2,
        "endLineNumber" : 170,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Parses the given string as a nested set order\n * @param name unique name of the order\n * @return the appropriate order instance\n * @throws IllegalArgumentException if the name is not valid\n */\npublic static Order parse(String name){\n  if (VALUES.containsKey(name)) {\n    return VALUES.get(name);\n  }\n else {\n    throw new IllegalArgumentException(\"Invalid order: \" + name);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 31,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 168,
        "startColumnNumber" : 6,
        "endLineNumber" : 168,
        "endColumnNumber" : 67
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Invalid order: \" + name);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 168,
    "startColumnNumber" : 41,
    "endLineNumber" : 168,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}