{
  "id" : 274,
  "expression" : "ecLevel",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/qrcode/decoder/DataBlock.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ecLevel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 57,
      "startColumnNumber" : 60,
      "endLineNumber" : 57,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 57,
        "startColumnNumber" : 32,
        "endLineNumber" : 57,
        "endColumnNumber" : 68
      },
      "nodeContext" : "version.getECBlocksForLevel(ecLevel)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 57,
        "startColumnNumber" : 21,
        "endLineNumber" : 57,
        "endColumnNumber" : 68
      },
      "nodeContext" : "ecBlocks=version.getECBlocksForLevel(ecLevel)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Version.ECBlocks ecBlocks=version.getECBlocksForLevel(ecLevel);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 49,
        "startColumnNumber" : 65,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (rawCodewords.length != version.getTotalCodewords()) {\n    throw new IllegalArgumentException();\n  }\n  Version.ECBlocks ecBlocks=version.getECBlocksForLevel(ecLevel);\n  int totalBlocks=0;\n  Version.ECB[] ecBlockArray=ecBlocks.getECBlocks();\n  for (  Version.ECB ecBlock : ecBlockArray) {\n    totalBlocks+=ecBlock.getCount();\n  }\n  DataBlock[] result=new DataBlock[totalBlocks];\n  int numResultBlocks=0;\n  for (  Version.ECB ecBlock : ecBlockArray) {\n    for (int i=0; i < ecBlock.getCount(); i++) {\n      int numDataCodewords=ecBlock.getDataCodewords();\n      int numBlockCodewords=ecBlocks.getECCodewordsPerBlock() + numDataCodewords;\n      result[numResultBlocks++]=new DataBlock(numDataCodewords,new byte[numBlockCodewords]);\n    }\n  }\n  int shorterBlocksTotalCodewords=result[0].codewords.length;\n  int longerBlocksStartAt=result.length - 1;\n  while (longerBlocksStartAt >= 0) {\n    int numCodewords=result[longerBlocksStartAt].codewords.length;\n    if (numCodewords == shorterBlocksTotalCodewords) {\n      break;\n    }\n    longerBlocksStartAt--;\n  }\n  longerBlocksStartAt++;\n  int shorterBlocksNumDataCodewords=shorterBlocksTotalCodewords - ecBlocks.getECCodewordsPerBlock();\n  int rawCodewordsOffset=0;\n  for (int i=0; i < shorterBlocksNumDataCodewords; i++) {\n    for (int j=0; j < numResultBlocks; j++) {\n      result[j].codewords[i]=rawCodewords[rawCodewordsOffset++];\n    }\n  }\n  for (int j=longerBlocksStartAt; j < numResultBlocks; j++) {\n    result[j].codewords[shorterBlocksNumDataCodewords]=rawCodewords[rawCodewordsOffset++];\n  }\n  int max=result[0].codewords.length;\n  for (int i=shorterBlocksNumDataCodewords; i < max; i++) {\n    for (int j=0; j < numResultBlocks; j++) {\n      int iOffset=j < longerBlocksStartAt ? i : i + 1;\n      result[j].codewords[iOffset]=rawCodewords[rawCodewordsOffset++];\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3389,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p>When QR Codes use multiple data blocks, they are actually interleaved. That is, the first byte of data block 1 to n is written, then the second bytes, and so on. This method will separate the data into original blocks.</p>\n * @param rawCodewords bytes as read directly from the QR Code\n * @param version version of the QR Code\n * @param ecLevel error-correction level of the QR Code\n * @return DataBlocks containing original bytes, \"de-interleaved\" from representation in theQR Code\n */\nstatic DataBlock[] getDataBlocks(byte[] rawCodewords,Version version,ErrorCorrectionLevel ecLevel){\n  if (rawCodewords.length != version.getTotalCodewords()) {\n    throw new IllegalArgumentException();\n  }\n  Version.ECBlocks ecBlocks=version.getECBlocksForLevel(ecLevel);\n  int totalBlocks=0;\n  Version.ECB[] ecBlockArray=ecBlocks.getECBlocks();\n  for (  Version.ECB ecBlock : ecBlockArray) {\n    totalBlocks+=ecBlock.getCount();\n  }\n  DataBlock[] result=new DataBlock[totalBlocks];\n  int numResultBlocks=0;\n  for (  Version.ECB ecBlock : ecBlockArray) {\n    for (int i=0; i < ecBlock.getCount(); i++) {\n      int numDataCodewords=ecBlock.getDataCodewords();\n      int numBlockCodewords=ecBlocks.getECCodewordsPerBlock() + numDataCodewords;\n      result[numResultBlocks++]=new DataBlock(numDataCodewords,new byte[numBlockCodewords]);\n    }\n  }\n  int shorterBlocksTotalCodewords=result[0].codewords.length;\n  int longerBlocksStartAt=result.length - 1;\n  while (longerBlocksStartAt >= 0) {\n    int numCodewords=result[longerBlocksStartAt].codewords.length;\n    if (numCodewords == shorterBlocksTotalCodewords) {\n      break;\n    }\n    longerBlocksStartAt--;\n  }\n  longerBlocksStartAt++;\n  int shorterBlocksNumDataCodewords=shorterBlocksTotalCodewords - ecBlocks.getECCodewordsPerBlock();\n  int rawCodewordsOffset=0;\n  for (int i=0; i < shorterBlocksNumDataCodewords; i++) {\n    for (int j=0; j < numResultBlocks; j++) {\n      result[j].codewords[i]=rawCodewords[rawCodewordsOffset++];\n    }\n  }\n  for (int j=longerBlocksStartAt; j < numResultBlocks; j++) {\n    result[j].codewords[shorterBlocksNumDataCodewords]=rawCodewords[rawCodewordsOffset++];\n  }\n  int max=result[0].codewords.length;\n  for (int i=shorterBlocksNumDataCodewords; i < max; i++) {\n    for (int j=0; j < numResultBlocks; j++) {\n      int iOffset=j < longerBlocksStartAt ? i : i + 1;\n      result[j].codewords[iOffset]=rawCodewords[rawCodewordsOffset++];\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 336,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Version.ECBlocks ecBlocks=version.getECBlocksForLevel(ecLevel);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.qrcode.decoder.ErrorCorrectionLevel"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 57,
    "startColumnNumber" : 60,
    "endLineNumber" : 57,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}