{
  "id" : 428,
  "expression" : "HOST + \"/that/\"",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit/src/test/java/retrofit/client/ApacheClientTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "HOST + \"/that/\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 66,
      "startColumnNumber" : 42,
      "endLineNumber" : 66,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 66,
        "startColumnNumber" : 22,
        "endLineNumber" : 66,
        "endColumnNumber" : 70
      },
      "nodeContext" : "new Request(\"POST\",HOST + \"/that/\",null,body)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 70
      },
      "nodeContext" : "request=new Request(\"POST\",HOST + \"/that/\",null,body)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Request request=new Request(\"POST\",HOST + \"/that/\",null,body);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 61,
        "startColumnNumber" : 32,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,TypedOutput> bodyParams=new LinkedHashMap<String,TypedOutput>();\n  bodyParams.put(\"foo\",new TypedString(\"bar\"));\n  bodyParams.put(\"ping\",new TypedString(\"pong\"));\n  TypedOutput body=TestingUtils.createMultipart(bodyParams);\n  Request request=new Request(\"POST\",HOST + \"/that/\",null,body);\n  HttpUriRequest apacheRequest=ApacheClient.createRequest(request);\n  assertThat(apacheRequest.getMethod()).isEqualTo(\"POST\");\n  assertThat(apacheRequest.getURI().toString()).isEqualTo(HOST + \"/that/\");\n  assertThat(apacheRequest.getAllHeaders()).isEmpty();\n  assertThat(apacheRequest).isInstanceOf(HttpEntityEnclosingRequest.class);\n  HttpEntityEnclosingRequest entityRequest=(HttpEntityEnclosingRequest)apacheRequest;\n  TypedOutputEntity entity=(TypedOutputEntity)entityRequest.getEntity();\n  assertThat(entity.typedOutput).isInstanceOf(MultipartTypedOutput.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void multipart(){\n  Map<String,TypedOutput> bodyParams=new LinkedHashMap<String,TypedOutput>();\n  bodyParams.put(\"foo\",new TypedString(\"bar\"));\n  bodyParams.put(\"ping\",new TypedString(\"pong\"));\n  TypedOutput body=TestingUtils.createMultipart(bodyParams);\n  Request request=new Request(\"POST\",HOST + \"/that/\",null,body);\n  HttpUriRequest apacheRequest=ApacheClient.createRequest(request);\n  assertThat(apacheRequest.getMethod()).isEqualTo(\"POST\");\n  assertThat(apacheRequest.getURI().toString()).isEqualTo(HOST + \"/that/\");\n  assertThat(apacheRequest.getAllHeaders()).isEmpty();\n  assertThat(apacheRequest).isInstanceOf(HttpEntityEnclosingRequest.class);\n  HttpEntityEnclosingRequest entityRequest=(HttpEntityEnclosingRequest)apacheRequest;\n  TypedOutputEntity entity=(TypedOutputEntity)entityRequest.getEntity();\n  assertThat(entity.typedOutput).isInstanceOf(MultipartTypedOutput.class);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Request request=new Request(\"POST\",HOST + \"/that/\",null,body);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "HOST + \"/that/\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 70,
      "startColumnNumber" : 60,
      "endLineNumber" : 70,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertThat(apacheRequest.getURI().toString()).isEqualTo(HOST + \"/that/\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertThat(apacheRequest.getURI().toString()).isEqualTo(HOST + \"/that/\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 61,
        "startColumnNumber" : 32,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,TypedOutput> bodyParams=new LinkedHashMap<String,TypedOutput>();\n  bodyParams.put(\"foo\",new TypedString(\"bar\"));\n  bodyParams.put(\"ping\",new TypedString(\"pong\"));\n  TypedOutput body=TestingUtils.createMultipart(bodyParams);\n  Request request=new Request(\"POST\",HOST + \"/that/\",null,body);\n  HttpUriRequest apacheRequest=ApacheClient.createRequest(request);\n  assertThat(apacheRequest.getMethod()).isEqualTo(\"POST\");\n  assertThat(apacheRequest.getURI().toString()).isEqualTo(HOST + \"/that/\");\n  assertThat(apacheRequest.getAllHeaders()).isEmpty();\n  assertThat(apacheRequest).isInstanceOf(HttpEntityEnclosingRequest.class);\n  HttpEntityEnclosingRequest entityRequest=(HttpEntityEnclosingRequest)apacheRequest;\n  TypedOutputEntity entity=(TypedOutputEntity)entityRequest.getEntity();\n  assertThat(entity.typedOutput).isInstanceOf(MultipartTypedOutput.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void multipart(){\n  Map<String,TypedOutput> bodyParams=new LinkedHashMap<String,TypedOutput>();\n  bodyParams.put(\"foo\",new TypedString(\"bar\"));\n  bodyParams.put(\"ping\",new TypedString(\"pong\"));\n  TypedOutput body=TestingUtils.createMultipart(bodyParams);\n  Request request=new Request(\"POST\",HOST + \"/that/\",null,body);\n  HttpUriRequest apacheRequest=ApacheClient.createRequest(request);\n  assertThat(apacheRequest.getMethod()).isEqualTo(\"POST\");\n  assertThat(apacheRequest.getURI().toString()).isEqualTo(HOST + \"/that/\");\n  assertThat(apacheRequest.getAllHeaders()).isEmpty();\n  assertThat(apacheRequest).isInstanceOf(HttpEntityEnclosingRequest.class);\n  HttpEntityEnclosingRequest entityRequest=(HttpEntityEnclosingRequest)apacheRequest;\n  TypedOutputEntity entity=(TypedOutputEntity)entityRequest.getEntity();\n  assertThat(entity.typedOutput).isInstanceOf(MultipartTypedOutput.class);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertThat(apacheRequest.getURI().toString()).isEqualTo(HOST + \"/that/\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 66,
    "startColumnNumber" : 42,
    "endLineNumber" : 66,
    "endColumnNumber" : 57
  }, {
    "charLength" : 15,
    "startLineNumber" : 70,
    "startColumnNumber" : 60,
    "endLineNumber" : 70,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}