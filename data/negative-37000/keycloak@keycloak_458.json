{
  "id" : 458,
  "expression" : "testRealmLoginPage",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/adapter/servlet/UserStorageConsentTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "testRealmLoginPage",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 178,
      "startColumnNumber" : 8,
      "endLineNumber" : 178,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 33
      },
      "nodeContext" : "testRealmLoginPage.form()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 62
      },
      "nodeContext" : "testRealmLoginPage.form().login(\"memuser\",\"password\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 63
      },
      "nodeContext" : "testRealmLoginPage.form().login(\"memuser\",\"password\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2092,
        "startLineNumber" : 164,
        "startColumnNumber" : 59,
        "endLineNumber" : 208,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  testingClient.server().run(UserStorageConsentTest::setupConsent);\n  UserRepresentation memuser=new UserRepresentation();\n  memuser.setUsername(\"memuser\");\n  String uid=ApiUtil.createUserAndResetPasswordWithAdminClient(testRealmResource(),memuser,\"password\");\n  System.out.println(\"uid: \" + uid);\n  Assert.assertTrue(uid.startsWith(\"f:\"));\n  RoleRepresentation roleRep=adminClient.realm(\"demo\").roles().get(\"user\").toRepresentation();\n  List<RoleRepresentation> roleList=new ArrayList<>();\n  roleList.add(roleRep);\n  adminClient.realm(\"demo\").users().get(uid).roles().realmLevel().add(roleList);\n  productPortal.navigateTo();\n  assertCurrentUrlStartsWithLoginUrlOf(testRealmPage);\n  testRealmLoginPage.form().login(\"memuser\",\"password\");\n  Assert.assertTrue(consentPage.isCurrent());\n  consentPage.confirm();\n  assertCurrentUrlEquals(productPortal.toString());\n  Assert.assertTrue(driver.getPageSource().contains(\"iPhone\"));\n  String logoutUri=OIDCLoginProtocolService.logoutUrl(authServerPage.createUriBuilder()).build(\"demo\").toString();\n  driver.navigate().to(logoutUri);\n  waitForPageToLoad();\n  logoutConfirmPage.assertCurrent();\n  logoutConfirmPage.confirmLogout();\n  waitForPageToLoad();\n  infoPage.assertCurrent();\n  driver.navigate().to(productPortal.toString());\n  waitForPageToLoad();\n  assertCurrentUrlStartsWithLoginUrlOf(testRealmPage);\n  productPortal.navigateTo();\n  assertCurrentUrlStartsWithLoginUrlOf(testRealmPage);\n  testRealmLoginPage.form().login(\"memuser\",\"password\");\n  assertCurrentUrlEquals(productPortal.toString());\n  Assert.assertTrue(driver.getPageSource().contains(\"iPhone\"));\n  driver.navigate().to(logoutUri);\n  waitForPageToLoad();\n  logoutConfirmPage.assertCurrent();\n  logoutConfirmPage.confirmLogout();\n  adminClient.realm(\"demo\").users().delete(uid).close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 264,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2147,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 208,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void assertLogin() throws InterruptedException {\n  testingClient.server().run(UserStorageConsentTest::setupConsent);\n  UserRepresentation memuser=new UserRepresentation();\n  memuser.setUsername(\"memuser\");\n  String uid=ApiUtil.createUserAndResetPasswordWithAdminClient(testRealmResource(),memuser,\"password\");\n  System.out.println(\"uid: \" + uid);\n  Assert.assertTrue(uid.startsWith(\"f:\"));\n  RoleRepresentation roleRep=adminClient.realm(\"demo\").roles().get(\"user\").toRepresentation();\n  List<RoleRepresentation> roleList=new ArrayList<>();\n  roleList.add(roleRep);\n  adminClient.realm(\"demo\").users().get(uid).roles().realmLevel().add(roleList);\n  productPortal.navigateTo();\n  assertCurrentUrlStartsWithLoginUrlOf(testRealmPage);\n  testRealmLoginPage.form().login(\"memuser\",\"password\");\n  Assert.assertTrue(consentPage.isCurrent());\n  consentPage.confirm();\n  assertCurrentUrlEquals(productPortal.toString());\n  Assert.assertTrue(driver.getPageSource().contains(\"iPhone\"));\n  String logoutUri=OIDCLoginProtocolService.logoutUrl(authServerPage.createUriBuilder()).build(\"demo\").toString();\n  driver.navigate().to(logoutUri);\n  waitForPageToLoad();\n  logoutConfirmPage.assertCurrent();\n  logoutConfirmPage.confirmLogout();\n  waitForPageToLoad();\n  infoPage.assertCurrent();\n  driver.navigate().to(productPortal.toString());\n  waitForPageToLoad();\n  assertCurrentUrlStartsWithLoginUrlOf(testRealmPage);\n  productPortal.navigateTo();\n  assertCurrentUrlStartsWithLoginUrlOf(testRealmPage);\n  testRealmLoginPage.form().login(\"memuser\",\"password\");\n  assertCurrentUrlEquals(productPortal.toString());\n  Assert.assertTrue(driver.getPageSource().contains(\"iPhone\"));\n  driver.navigate().to(logoutUri);\n  waitForPageToLoad();\n  logoutConfirmPage.assertCurrent();\n  logoutConfirmPage.confirmLogout();\n  adminClient.realm(\"demo\").users().delete(uid).close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 63
      },
      "nodeContext" : "testRealmLoginPage.form().login(\"memuser\",\"password\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.testsuite.auth.page.login.OIDCLogin"
  }, {
    "nodeContext" : "testRealmLoginPage",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 199,
      "startColumnNumber" : 8,
      "endLineNumber" : 199,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 33
      },
      "nodeContext" : "testRealmLoginPage.form()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 62
      },
      "nodeContext" : "testRealmLoginPage.form().login(\"memuser\",\"password\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 63
      },
      "nodeContext" : "testRealmLoginPage.form().login(\"memuser\",\"password\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2092,
        "startLineNumber" : 164,
        "startColumnNumber" : 59,
        "endLineNumber" : 208,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  testingClient.server().run(UserStorageConsentTest::setupConsent);\n  UserRepresentation memuser=new UserRepresentation();\n  memuser.setUsername(\"memuser\");\n  String uid=ApiUtil.createUserAndResetPasswordWithAdminClient(testRealmResource(),memuser,\"password\");\n  System.out.println(\"uid: \" + uid);\n  Assert.assertTrue(uid.startsWith(\"f:\"));\n  RoleRepresentation roleRep=adminClient.realm(\"demo\").roles().get(\"user\").toRepresentation();\n  List<RoleRepresentation> roleList=new ArrayList<>();\n  roleList.add(roleRep);\n  adminClient.realm(\"demo\").users().get(uid).roles().realmLevel().add(roleList);\n  productPortal.navigateTo();\n  assertCurrentUrlStartsWithLoginUrlOf(testRealmPage);\n  testRealmLoginPage.form().login(\"memuser\",\"password\");\n  Assert.assertTrue(consentPage.isCurrent());\n  consentPage.confirm();\n  assertCurrentUrlEquals(productPortal.toString());\n  Assert.assertTrue(driver.getPageSource().contains(\"iPhone\"));\n  String logoutUri=OIDCLoginProtocolService.logoutUrl(authServerPage.createUriBuilder()).build(\"demo\").toString();\n  driver.navigate().to(logoutUri);\n  waitForPageToLoad();\n  logoutConfirmPage.assertCurrent();\n  logoutConfirmPage.confirmLogout();\n  waitForPageToLoad();\n  infoPage.assertCurrent();\n  driver.navigate().to(productPortal.toString());\n  waitForPageToLoad();\n  assertCurrentUrlStartsWithLoginUrlOf(testRealmPage);\n  productPortal.navigateTo();\n  assertCurrentUrlStartsWithLoginUrlOf(testRealmPage);\n  testRealmLoginPage.form().login(\"memuser\",\"password\");\n  assertCurrentUrlEquals(productPortal.toString());\n  Assert.assertTrue(driver.getPageSource().contains(\"iPhone\"));\n  driver.navigate().to(logoutUri);\n  waitForPageToLoad();\n  logoutConfirmPage.assertCurrent();\n  logoutConfirmPage.confirmLogout();\n  adminClient.realm(\"demo\").users().delete(uid).close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 264,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2147,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 208,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void assertLogin() throws InterruptedException {\n  testingClient.server().run(UserStorageConsentTest::setupConsent);\n  UserRepresentation memuser=new UserRepresentation();\n  memuser.setUsername(\"memuser\");\n  String uid=ApiUtil.createUserAndResetPasswordWithAdminClient(testRealmResource(),memuser,\"password\");\n  System.out.println(\"uid: \" + uid);\n  Assert.assertTrue(uid.startsWith(\"f:\"));\n  RoleRepresentation roleRep=adminClient.realm(\"demo\").roles().get(\"user\").toRepresentation();\n  List<RoleRepresentation> roleList=new ArrayList<>();\n  roleList.add(roleRep);\n  adminClient.realm(\"demo\").users().get(uid).roles().realmLevel().add(roleList);\n  productPortal.navigateTo();\n  assertCurrentUrlStartsWithLoginUrlOf(testRealmPage);\n  testRealmLoginPage.form().login(\"memuser\",\"password\");\n  Assert.assertTrue(consentPage.isCurrent());\n  consentPage.confirm();\n  assertCurrentUrlEquals(productPortal.toString());\n  Assert.assertTrue(driver.getPageSource().contains(\"iPhone\"));\n  String logoutUri=OIDCLoginProtocolService.logoutUrl(authServerPage.createUriBuilder()).build(\"demo\").toString();\n  driver.navigate().to(logoutUri);\n  waitForPageToLoad();\n  logoutConfirmPage.assertCurrent();\n  logoutConfirmPage.confirmLogout();\n  waitForPageToLoad();\n  infoPage.assertCurrent();\n  driver.navigate().to(productPortal.toString());\n  waitForPageToLoad();\n  assertCurrentUrlStartsWithLoginUrlOf(testRealmPage);\n  productPortal.navigateTo();\n  assertCurrentUrlStartsWithLoginUrlOf(testRealmPage);\n  testRealmLoginPage.form().login(\"memuser\",\"password\");\n  assertCurrentUrlEquals(productPortal.toString());\n  Assert.assertTrue(driver.getPageSource().contains(\"iPhone\"));\n  driver.navigate().to(logoutUri);\n  waitForPageToLoad();\n  logoutConfirmPage.assertCurrent();\n  logoutConfirmPage.confirmLogout();\n  adminClient.realm(\"demo\").users().delete(uid).close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 63
      },
      "nodeContext" : "testRealmLoginPage.form().login(\"memuser\",\"password\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.testsuite.auth.page.login.OIDCLogin"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 178,
    "startColumnNumber" : 8,
    "endLineNumber" : 178,
    "endColumnNumber" : 26
  }, {
    "charLength" : 18,
    "startLineNumber" : 199,
    "startColumnNumber" : 8,
    "endLineNumber" : 199,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}