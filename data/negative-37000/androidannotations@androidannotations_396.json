{
  "id" : 396,
  "expression" : "holder.init",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EnhancedProcessor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "holder.init",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 116,
      "startColumnNumber" : 74,
      "endLineNumber" : 116,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 116,
        "startColumnNumber" : 74,
        "endLineNumber" : 116,
        "endColumnNumber" : 92
      },
      "nodeContext" : "holder.init.body()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 116,
        "startColumnNumber" : 31,
        "endLineNumber" : 116,
        "endColumnNumber" : 93
      },
      "nodeContext" : "helper.ifContextInstanceOfActivity(holder,holder.init.body())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 116,
        "startColumnNumber" : 3,
        "endLineNumber" : 116,
        "endColumnNumber" : 93
      },
      "nodeContext" : "holder.initIfActivityBody=helper.ifContextInstanceOfActivity(holder,holder.init.body())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 116,
        "startColumnNumber" : 3,
        "endLineNumber" : 116,
        "endColumnNumber" : 94
      },
      "nodeContext" : "holder.initIfActivityBody=helper.ifContextInstanceOfActivity(holder,holder.init.body());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 118,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  APTCodeModelHelper helper=new APTCodeModelHelper();\n  holder.initIfActivityBody=helper.ifContextInstanceOfActivity(holder,holder.init.body());\n  holder.initActivityRef=helper.castContextToActivity(holder,holder.initIfActivityBody);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2709,
        "startLineNumber" : 57,
        "startColumnNumber" : 104,
        "endLineNumber" : 146,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=eBeansHolder.create(element);\n  TypeElement typeElement=(TypeElement)element;\n  String eBeanQualifiedName=typeElement.getQualifiedName().toString();\n  String generatedBeanQualifiedName=eBeanQualifiedName + GENERATION_SUFFIX;\n  holder.eBean=codeModel._class(PUBLIC | FINAL,generatedBeanQualifiedName,ClassType.CLASS);\n  JClass eBeanClass=codeModel.directClass(eBeanQualifiedName);\n  holder.eBean._extends(eBeanClass);\n  JClass contextClass=holder.refClass(\"android.content.Context\");\n  JClass activityClass=holder.refClass(\"android.app.Activity\");\n  JFieldVar contextField=holder.eBean.field(PRIVATE,contextClass,\"context_\");\n  holder.contextRef=contextField;\n{\n    holder.afterSetContentView=holder.eBean.method(PUBLIC,codeModel.VOID,\"afterSetContentView_\");\n    JBlock afterSetContentViewBody=holder.afterSetContentView.body();\n    afterSetContentViewBody._if(holder.contextRef._instanceof(activityClass).not())._then()._return();\n  }\n  JClass viewClass=holder.refClass(\"android.view.View\");\n{\n    JMethod findViewById=holder.eBean.method(PUBLIC,viewClass,\"findViewById\");\n    JVar idParam=findViewById.param(codeModel.INT,\"id\");\n    findViewById.javadoc().add(\"You should check that context is an activity before calling this method\");\n    JBlock findViewByIdBody=findViewById.body();\n    JVar activityVar=findViewByIdBody.decl(activityClass,\"activity\",cast(activityClass,holder.contextRef));\n    findViewByIdBody._return(activityVar.invoke(findViewById).arg(idParam));\n  }\n{\n    holder.init=holder.eBean.method(PRIVATE,codeModel.VOID,\"init_\");\n  }\n{\n    APTCodeModelHelper helper=new APTCodeModelHelper();\n    holder.initIfActivityBody=helper.ifContextInstanceOfActivity(holder,holder.init.body());\n    holder.initActivityRef=helper.castContextToActivity(holder,holder.initIfActivityBody);\n  }\n{\n    JMethod constructor=holder.eBean.constructor(PRIVATE);\n    JVar constructorContextParam=constructor.param(contextClass,\"context\");\n    JBlock constructorBody=constructor.body();\n    constructorBody.assign(contextField,constructorContextParam);\n    constructorBody.invoke(holder.init);\n  }\n{\n    JMethod factoryMethod=holder.eBean.method(STATIC | PUBLIC,holder.eBean,GET_INSTANCE_METHOD_NAME);\n    JVar factoryMethodContextParam=factoryMethod.param(contextClass,\"context\");\n    JBlock factoryMethodBody=factoryMethod.body();\n    factoryMethodBody._return(_new(holder.eBean).arg(factoryMethodContextParam));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 366,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2823,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 146,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder eBeansHolder) throws Exception {\n  EBeanHolder holder=eBeansHolder.create(element);\n  TypeElement typeElement=(TypeElement)element;\n  String eBeanQualifiedName=typeElement.getQualifiedName().toString();\n  String generatedBeanQualifiedName=eBeanQualifiedName + GENERATION_SUFFIX;\n  holder.eBean=codeModel._class(PUBLIC | FINAL,generatedBeanQualifiedName,ClassType.CLASS);\n  JClass eBeanClass=codeModel.directClass(eBeanQualifiedName);\n  holder.eBean._extends(eBeanClass);\n  JClass contextClass=holder.refClass(\"android.content.Context\");\n  JClass activityClass=holder.refClass(\"android.app.Activity\");\n  JFieldVar contextField=holder.eBean.field(PRIVATE,contextClass,\"context_\");\n  holder.contextRef=contextField;\n{\n    holder.afterSetContentView=holder.eBean.method(PUBLIC,codeModel.VOID,\"afterSetContentView_\");\n    JBlock afterSetContentViewBody=holder.afterSetContentView.body();\n    afterSetContentViewBody._if(holder.contextRef._instanceof(activityClass).not())._then()._return();\n  }\n  JClass viewClass=holder.refClass(\"android.view.View\");\n{\n    JMethod findViewById=holder.eBean.method(PUBLIC,viewClass,\"findViewById\");\n    JVar idParam=findViewById.param(codeModel.INT,\"id\");\n    findViewById.javadoc().add(\"You should check that context is an activity before calling this method\");\n    JBlock findViewByIdBody=findViewById.body();\n    JVar activityVar=findViewByIdBody.decl(activityClass,\"activity\",cast(activityClass,holder.contextRef));\n    findViewByIdBody._return(activityVar.invoke(findViewById).arg(idParam));\n  }\n{\n    holder.init=holder.eBean.method(PRIVATE,codeModel.VOID,\"init_\");\n  }\n{\n    APTCodeModelHelper helper=new APTCodeModelHelper();\n    holder.initIfActivityBody=helper.ifContextInstanceOfActivity(holder,holder.init.body());\n    holder.initActivityRef=helper.castContextToActivity(holder,holder.initIfActivityBody);\n  }\n{\n    JMethod constructor=holder.eBean.constructor(PRIVATE);\n    JVar constructorContextParam=constructor.param(contextClass,\"context\");\n    JBlock constructorBody=constructor.body();\n    constructorBody.assign(contextField,constructorContextParam);\n    constructorBody.invoke(holder.init);\n  }\n{\n    JMethod factoryMethod=holder.eBean.method(STATIC | PUBLIC,holder.eBean,GET_INSTANCE_METHOD_NAME);\n    JVar factoryMethodContextParam=factoryMethod.param(contextClass,\"context\");\n    JBlock factoryMethodBody=factoryMethod.body();\n    factoryMethodBody._return(_new(holder.eBean).arg(factoryMethodContextParam));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 386,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 116,
        "startColumnNumber" : 3,
        "endLineNumber" : 116,
        "endColumnNumber" : 94
      },
      "nodeContext" : "holder.initIfActivityBody=helper.ifContextInstanceOfActivity(holder,holder.init.body());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "com.googlecode.androidannotations.processing.JMethod"
  }, {
    "nodeContext" : "holder.init",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 131,
      "startColumnNumber" : 26,
      "endLineNumber" : 131,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 131,
        "startColumnNumber" : 3,
        "endLineNumber" : 131,
        "endColumnNumber" : 38
      },
      "nodeContext" : "constructorBody.invoke(holder.init)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 131,
        "startColumnNumber" : 3,
        "endLineNumber" : 131,
        "endColumnNumber" : 39
      },
      "nodeContext" : "constructorBody.invoke(holder.init);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 120,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  JMethod constructor=holder.eBean.constructor(PRIVATE);\n  JVar constructorContextParam=constructor.param(contextClass,\"context\");\n  JBlock constructorBody=constructor.body();\n  constructorBody.assign(contextField,constructorContextParam);\n  constructorBody.invoke(holder.init);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2709,
        "startLineNumber" : 57,
        "startColumnNumber" : 104,
        "endLineNumber" : 146,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=eBeansHolder.create(element);\n  TypeElement typeElement=(TypeElement)element;\n  String eBeanQualifiedName=typeElement.getQualifiedName().toString();\n  String generatedBeanQualifiedName=eBeanQualifiedName + GENERATION_SUFFIX;\n  holder.eBean=codeModel._class(PUBLIC | FINAL,generatedBeanQualifiedName,ClassType.CLASS);\n  JClass eBeanClass=codeModel.directClass(eBeanQualifiedName);\n  holder.eBean._extends(eBeanClass);\n  JClass contextClass=holder.refClass(\"android.content.Context\");\n  JClass activityClass=holder.refClass(\"android.app.Activity\");\n  JFieldVar contextField=holder.eBean.field(PRIVATE,contextClass,\"context_\");\n  holder.contextRef=contextField;\n{\n    holder.afterSetContentView=holder.eBean.method(PUBLIC,codeModel.VOID,\"afterSetContentView_\");\n    JBlock afterSetContentViewBody=holder.afterSetContentView.body();\n    afterSetContentViewBody._if(holder.contextRef._instanceof(activityClass).not())._then()._return();\n  }\n  JClass viewClass=holder.refClass(\"android.view.View\");\n{\n    JMethod findViewById=holder.eBean.method(PUBLIC,viewClass,\"findViewById\");\n    JVar idParam=findViewById.param(codeModel.INT,\"id\");\n    findViewById.javadoc().add(\"You should check that context is an activity before calling this method\");\n    JBlock findViewByIdBody=findViewById.body();\n    JVar activityVar=findViewByIdBody.decl(activityClass,\"activity\",cast(activityClass,holder.contextRef));\n    findViewByIdBody._return(activityVar.invoke(findViewById).arg(idParam));\n  }\n{\n    holder.init=holder.eBean.method(PRIVATE,codeModel.VOID,\"init_\");\n  }\n{\n    APTCodeModelHelper helper=new APTCodeModelHelper();\n    holder.initIfActivityBody=helper.ifContextInstanceOfActivity(holder,holder.init.body());\n    holder.initActivityRef=helper.castContextToActivity(holder,holder.initIfActivityBody);\n  }\n{\n    JMethod constructor=holder.eBean.constructor(PRIVATE);\n    JVar constructorContextParam=constructor.param(contextClass,\"context\");\n    JBlock constructorBody=constructor.body();\n    constructorBody.assign(contextField,constructorContextParam);\n    constructorBody.invoke(holder.init);\n  }\n{\n    JMethod factoryMethod=holder.eBean.method(STATIC | PUBLIC,holder.eBean,GET_INSTANCE_METHOD_NAME);\n    JVar factoryMethodContextParam=factoryMethod.param(contextClass,\"context\");\n    JBlock factoryMethodBody=factoryMethod.body();\n    factoryMethodBody._return(_new(holder.eBean).arg(factoryMethodContextParam));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 366,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2823,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 146,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder eBeansHolder) throws Exception {\n  EBeanHolder holder=eBeansHolder.create(element);\n  TypeElement typeElement=(TypeElement)element;\n  String eBeanQualifiedName=typeElement.getQualifiedName().toString();\n  String generatedBeanQualifiedName=eBeanQualifiedName + GENERATION_SUFFIX;\n  holder.eBean=codeModel._class(PUBLIC | FINAL,generatedBeanQualifiedName,ClassType.CLASS);\n  JClass eBeanClass=codeModel.directClass(eBeanQualifiedName);\n  holder.eBean._extends(eBeanClass);\n  JClass contextClass=holder.refClass(\"android.content.Context\");\n  JClass activityClass=holder.refClass(\"android.app.Activity\");\n  JFieldVar contextField=holder.eBean.field(PRIVATE,contextClass,\"context_\");\n  holder.contextRef=contextField;\n{\n    holder.afterSetContentView=holder.eBean.method(PUBLIC,codeModel.VOID,\"afterSetContentView_\");\n    JBlock afterSetContentViewBody=holder.afterSetContentView.body();\n    afterSetContentViewBody._if(holder.contextRef._instanceof(activityClass).not())._then()._return();\n  }\n  JClass viewClass=holder.refClass(\"android.view.View\");\n{\n    JMethod findViewById=holder.eBean.method(PUBLIC,viewClass,\"findViewById\");\n    JVar idParam=findViewById.param(codeModel.INT,\"id\");\n    findViewById.javadoc().add(\"You should check that context is an activity before calling this method\");\n    JBlock findViewByIdBody=findViewById.body();\n    JVar activityVar=findViewByIdBody.decl(activityClass,\"activity\",cast(activityClass,holder.contextRef));\n    findViewByIdBody._return(activityVar.invoke(findViewById).arg(idParam));\n  }\n{\n    holder.init=holder.eBean.method(PRIVATE,codeModel.VOID,\"init_\");\n  }\n{\n    APTCodeModelHelper helper=new APTCodeModelHelper();\n    holder.initIfActivityBody=helper.ifContextInstanceOfActivity(holder,holder.init.body());\n    holder.initActivityRef=helper.castContextToActivity(holder,holder.initIfActivityBody);\n  }\n{\n    JMethod constructor=holder.eBean.constructor(PRIVATE);\n    JVar constructorContextParam=constructor.param(contextClass,\"context\");\n    JBlock constructorBody=constructor.body();\n    constructorBody.assign(contextField,constructorContextParam);\n    constructorBody.invoke(holder.init);\n  }\n{\n    JMethod factoryMethod=holder.eBean.method(STATIC | PUBLIC,holder.eBean,GET_INSTANCE_METHOD_NAME);\n    JVar factoryMethodContextParam=factoryMethod.param(contextClass,\"context\");\n    JBlock factoryMethodBody=factoryMethod.body();\n    factoryMethodBody._return(_new(holder.eBean).arg(factoryMethodContextParam));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 386,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 131,
        "startColumnNumber" : 3,
        "endLineNumber" : 131,
        "endColumnNumber" : 39
      },
      "nodeContext" : "constructorBody.invoke(holder.init);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.googlecode.androidannotations.processing.JMethod"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 116,
    "startColumnNumber" : 74,
    "endLineNumber" : 116,
    "endColumnNumber" : 85
  }, {
    "charLength" : 11,
    "startLineNumber" : 131,
    "startColumnNumber" : 26,
    "endLineNumber" : 131,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}