{
  "id" : 66,
  "expression" : "Pattern.compile(\"line2\")",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-end-to-end-tests/flink-end-to-end-tests-common/src/test/java/org/apache/flink/tests/util/util/FileUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Pattern.compile(\"line2\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 72,
      "startColumnNumber" : 36,
      "endLineNumber" : 72,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 76
      },
      "nodeContext" : "FileUtils.replace(testFile,Pattern.compile(\"line2\"),matcher -> \"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 77
      },
      "nodeContext" : "FileUtils.replace(testFile,Pattern.compile(\"line2\"),matcher -> \"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 71,
        "startColumnNumber" : 58,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FileUtils.replace(testFile,Pattern.compile(\"line2\"),matcher -> \"\");\n  Assert.assertEquals(Arrays.asList(ORIGINAL_LINES.get(0),\"\",ORIGINAL_LINES.get(2)),Files.readAllLines(testFile));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void replaceWithEmptyLine() throws IOException {\n  FileUtils.replace(testFile,Pattern.compile(\"line2\"),matcher -> \"\");\n  Assert.assertEquals(Arrays.asList(ORIGINAL_LINES.get(0),\"\",ORIGINAL_LINES.get(2)),Files.readAllLines(testFile));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 77
      },
      "nodeContext" : "FileUtils.replace(testFile,Pattern.compile(\"line2\"),matcher -> \"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.util.regex.Pattern"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 72,
    "startColumnNumber" : 36,
    "endLineNumber" : 72,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}