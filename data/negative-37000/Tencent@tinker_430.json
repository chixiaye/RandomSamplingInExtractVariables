{
  "id" : 430,
  "expression" : "DexClassesComparator.COMPARE_MODE_REFERRER_AFFECTED_CHANGE_ONLY",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/dexpatcher/util/ChangedClassesDexClassInfoCollector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DexClassesComparator.COMPARE_MODE_REFERRER_AFFECTED_CHANGE_ONLY",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 63,
      "startLineNumber" : 103,
      "startColumnNumber" : 42,
      "endLineNumber" : 103,
      "endColumnNumber" : 105
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 106
      },
      "nodeContext" : "dexClassCmptor.setCompareMode(DexClassesComparator.COMPARE_MODE_REFERRER_AFFECTED_CHANGE_ONLY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 107
      },
      "nodeContext" : "dexClassCmptor.setCompareMode(DexClassesComparator.COMPARE_MODE_REFERRER_AFFECTED_CHANGE_ONLY);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1108,
        "startLineNumber" : 99,
        "startColumnNumber" : 52,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  dexClassCmptor.setCompareMode(DexClassesComparator.COMPARE_MODE_REFERRER_AFFECTED_CHANGE_ONLY);\n  dexClassCmptor.startCheck(oldDexGroup,newDexGroup);\n  Set<String> referrerAffectedChangedClassDescs=dexClassCmptor.getChangedClassDescToInfosMap().keySet();\n  Set<DexClassInfo> oldClassInfos=oldDexGroup.getClassInfosInDexesWithDuplicateCheck();\n  for (  DexClassInfo oldClassInfo : oldClassInfos) {\n    if (!classDescsInResult.contains(oldClassInfo.classDesc) && isClassReferToAnyClasses(oldClassInfo,referrerAffectedChangedClassDescs)) {\n      LOGGER.i(TAG,\"Add class %s in old dex to changed classes dex since it is affected by modified referee.\",oldClassInfo.classDesc);\n      result.add(oldClassInfo);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1152,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (includeRefererToRefererAffectedClasses) {\n  dexClassCmptor.setCompareMode(DexClassesComparator.COMPARE_MODE_REFERRER_AFFECTED_CHANGE_ONLY);\n  dexClassCmptor.startCheck(oldDexGroup,newDexGroup);\n  Set<String> referrerAffectedChangedClassDescs=dexClassCmptor.getChangedClassDescToInfosMap().keySet();\n  Set<DexClassInfo> oldClassInfos=oldDexGroup.getClassInfosInDexesWithDuplicateCheck();\n  for (  DexClassInfo oldClassInfo : oldClassInfos) {\n    if (!classDescsInResult.contains(oldClassInfo.classDesc) && isClassReferToAnyClasses(oldClassInfo,referrerAffectedChangedClassDescs)) {\n      LOGGER.i(TAG,\"Add class %s in old dex to changed classes dex since it is affected by modified referee.\",oldClassInfo.classDesc);\n      result.add(oldClassInfo);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2329,
        "startLineNumber" : 73,
        "startColumnNumber" : 83,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Set<String> classDescsInResult=new HashSet<>();\n  final Set<DexClassInfo> result=new HashSet<>();\n  DexClassesComparator dexClassCmptor=new DexClassesComparator(\"*\");\n  dexClassCmptor.setCompareMode(DexClassesComparator.COMPARE_MODE_NORMAL);\n  dexClassCmptor.setIgnoredRemovedClassDescPattern(excludedClassPatterns);\n  dexClassCmptor.setLogger(LOGGER.getLoggerImpl());\n  dexClassCmptor.startCheck(oldDexGroup,newDexGroup);\n  result.addAll(dexClassCmptor.getAddedClassInfos());\n  final Collection<DexClassInfo[]> changedClassInfos=dexClassCmptor.getChangedClassDescToInfosMap().values();\n  for (  DexClassInfo[] oldAndNewInfoPair : changedClassInfos) {\n    final DexClassInfo newClassInfo=oldAndNewInfoPair[1];\n    LOGGER.i(TAG,\"Add class %s to changed classes dex.\",newClassInfo.classDesc);\n    result.add(newClassInfo);\n  }\n  for (  DexClassInfo classInfo : result) {\n    classDescsInResult.add(classInfo.classDesc);\n  }\n  if (includeRefererToRefererAffectedClasses) {\n    dexClassCmptor.setCompareMode(DexClassesComparator.COMPARE_MODE_REFERRER_AFFECTED_CHANGE_ONLY);\n    dexClassCmptor.startCheck(oldDexGroup,newDexGroup);\n    Set<String> referrerAffectedChangedClassDescs=dexClassCmptor.getChangedClassDescToInfosMap().keySet();\n    Set<DexClassInfo> oldClassInfos=oldDexGroup.getClassInfosInDexesWithDuplicateCheck();\n    for (    DexClassInfo oldClassInfo : oldClassInfos) {\n      if (!classDescsInResult.contains(oldClassInfo.classDesc) && isClassReferToAnyClasses(oldClassInfo,referrerAffectedChangedClassDescs)) {\n        LOGGER.i(TAG,\"Add class %s in old dex to changed classes dex since it is affected by modified referee.\",oldClassInfo.classDesc);\n        result.add(oldClassInfo);\n      }\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2408,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Set<DexClassInfo> doCollect(DexGroup oldDexGroup,DexGroup newDexGroup){\n  final Set<String> classDescsInResult=new HashSet<>();\n  final Set<DexClassInfo> result=new HashSet<>();\n  DexClassesComparator dexClassCmptor=new DexClassesComparator(\"*\");\n  dexClassCmptor.setCompareMode(DexClassesComparator.COMPARE_MODE_NORMAL);\n  dexClassCmptor.setIgnoredRemovedClassDescPattern(excludedClassPatterns);\n  dexClassCmptor.setLogger(LOGGER.getLoggerImpl());\n  dexClassCmptor.startCheck(oldDexGroup,newDexGroup);\n  result.addAll(dexClassCmptor.getAddedClassInfos());\n  final Collection<DexClassInfo[]> changedClassInfos=dexClassCmptor.getChangedClassDescToInfosMap().values();\n  for (  DexClassInfo[] oldAndNewInfoPair : changedClassInfos) {\n    final DexClassInfo newClassInfo=oldAndNewInfoPair[1];\n    LOGGER.i(TAG,\"Add class %s to changed classes dex.\",newClassInfo.classDesc);\n    result.add(newClassInfo);\n  }\n  for (  DexClassInfo classInfo : result) {\n    classDescsInResult.add(classInfo.classDesc);\n  }\n  if (includeRefererToRefererAffectedClasses) {\n    dexClassCmptor.setCompareMode(DexClassesComparator.COMPARE_MODE_REFERRER_AFFECTED_CHANGE_ONLY);\n    dexClassCmptor.startCheck(oldDexGroup,newDexGroup);\n    Set<String> referrerAffectedChangedClassDescs=dexClassCmptor.getChangedClassDescToInfosMap().keySet();\n    Set<DexClassInfo> oldClassInfos=oldDexGroup.getClassInfosInDexesWithDuplicateCheck();\n    for (    DexClassInfo oldClassInfo : oldClassInfos) {\n      if (!classDescsInResult.contains(oldClassInfo.classDesc) && isClassReferToAnyClasses(oldClassInfo,referrerAffectedChangedClassDescs)) {\n        LOGGER.i(TAG,\"Add class %s in old dex to changed classes dex since it is affected by modified referee.\",oldClassInfo.classDesc);\n        result.add(oldClassInfo);\n      }\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 107
      },
      "nodeContext" : "dexClassCmptor.setCompareMode(DexClassesComparator.COMPARE_MODE_REFERRER_AFFECTED_CHANGE_ONLY);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 63,
    "startLineNumber" : 103,
    "startColumnNumber" : 42,
    "endLineNumber" : 103,
    "endColumnNumber" : 105
  } ],
  "layoutRelationDataList" : [ ]
}