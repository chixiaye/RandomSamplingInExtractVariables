{
  "id" : 221,
  "expression" : "values",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/guava-collections-map/src/test/java/com/baeldung/guava/multimap/GuavaMultiMapUnitTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "values",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 53,
      "startColumnNumber" : 11,
      "endLineNumber" : 53,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 53,
        "startColumnNumber" : 11,
        "endLineNumber" : 53,
        "endColumnNumber" : 25
      },
      "nodeContext" : "values == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (values == null) {\n  values=new LinkedList<>();\n  values.add(\"firstValue\");\n  values.add(\"secondValue\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 46,
        "startColumnNumber" : 94,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String key=\"a-key\";\n  Map<String,List<String>> map=new LinkedHashMap<>();\n  List<String> values=map.get(key);\n  if (values == null) {\n    values=new LinkedList<>();\n    values.add(\"firstValue\");\n    values.add(\"secondValue\");\n  }\n  map.put(key,values);\n  assertEquals(1,map.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 515,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenMapOfListValues_whenAddTwoValuesForSameKey_shouldHaveTwoElementsInList(){\n  String key=\"a-key\";\n  Map<String,List<String>> map=new LinkedHashMap<>();\n  List<String> values=map.get(key);\n  if (values == null) {\n    values=new LinkedList<>();\n    values.add(\"firstValue\");\n    values.add(\"secondValue\");\n  }\n  map.put(key,values);\n  assertEquals(1,map.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 53,
        "startColumnNumber" : 11,
        "endLineNumber" : 53,
        "endColumnNumber" : 25
      },
      "nodeContext" : "values == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "values",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 55,
      "startColumnNumber" : 12,
      "endLineNumber" : 55,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 36
      },
      "nodeContext" : "values.add(\"firstValue\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 37
      },
      "nodeContext" : "values.add(\"firstValue\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 53,
        "startColumnNumber" : 26,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  values=new LinkedList<>();\n  values.add(\"firstValue\");\n  values.add(\"secondValue\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (values == null) {\n  values=new LinkedList<>();\n  values.add(\"firstValue\");\n  values.add(\"secondValue\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 46,
        "startColumnNumber" : 94,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String key=\"a-key\";\n  Map<String,List<String>> map=new LinkedHashMap<>();\n  List<String> values=map.get(key);\n  if (values == null) {\n    values=new LinkedList<>();\n    values.add(\"firstValue\");\n    values.add(\"secondValue\");\n  }\n  map.put(key,values);\n  assertEquals(1,map.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 515,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenMapOfListValues_whenAddTwoValuesForSameKey_shouldHaveTwoElementsInList(){\n  String key=\"a-key\";\n  Map<String,List<String>> map=new LinkedHashMap<>();\n  List<String> values=map.get(key);\n  if (values == null) {\n    values=new LinkedList<>();\n    values.add(\"firstValue\");\n    values.add(\"secondValue\");\n  }\n  map.put(key,values);\n  assertEquals(1,map.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 37
      },
      "nodeContext" : "values.add(\"firstValue\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "values",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 12,
      "endLineNumber" : 56,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 37
      },
      "nodeContext" : "values.add(\"secondValue\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 38
      },
      "nodeContext" : "values.add(\"secondValue\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 53,
        "startColumnNumber" : 26,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  values=new LinkedList<>();\n  values.add(\"firstValue\");\n  values.add(\"secondValue\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (values == null) {\n  values=new LinkedList<>();\n  values.add(\"firstValue\");\n  values.add(\"secondValue\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 46,
        "startColumnNumber" : 94,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String key=\"a-key\";\n  Map<String,List<String>> map=new LinkedHashMap<>();\n  List<String> values=map.get(key);\n  if (values == null) {\n    values=new LinkedList<>();\n    values.add(\"firstValue\");\n    values.add(\"secondValue\");\n  }\n  map.put(key,values);\n  assertEquals(1,map.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 515,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenMapOfListValues_whenAddTwoValuesForSameKey_shouldHaveTwoElementsInList(){\n  String key=\"a-key\";\n  Map<String,List<String>> map=new LinkedHashMap<>();\n  List<String> values=map.get(key);\n  if (values == null) {\n    values=new LinkedList<>();\n    values.add(\"firstValue\");\n    values.add(\"secondValue\");\n  }\n  map.put(key,values);\n  assertEquals(1,map.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 38
      },
      "nodeContext" : "values.add(\"secondValue\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "values",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 58,
      "startColumnNumber" : 21,
      "endLineNumber" : 58,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 28
      },
      "nodeContext" : "map.put(key,values)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 29
      },
      "nodeContext" : "map.put(key,values);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 46,
        "startColumnNumber" : 94,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String key=\"a-key\";\n  Map<String,List<String>> map=new LinkedHashMap<>();\n  List<String> values=map.get(key);\n  if (values == null) {\n    values=new LinkedList<>();\n    values.add(\"firstValue\");\n    values.add(\"secondValue\");\n  }\n  map.put(key,values);\n  assertEquals(1,map.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 515,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenMapOfListValues_whenAddTwoValuesForSameKey_shouldHaveTwoElementsInList(){\n  String key=\"a-key\";\n  Map<String,List<String>> map=new LinkedHashMap<>();\n  List<String> values=map.get(key);\n  if (values == null) {\n    values=new LinkedList<>();\n    values.add(\"firstValue\");\n    values.add(\"secondValue\");\n  }\n  map.put(key,values);\n  assertEquals(1,map.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 29
      },
      "nodeContext" : "map.put(key,values);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 53,
    "startColumnNumber" : 11,
    "endLineNumber" : 53,
    "endColumnNumber" : 17
  }, {
    "charLength" : 6,
    "startLineNumber" : 55,
    "startColumnNumber" : 12,
    "endLineNumber" : 55,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 12,
    "endLineNumber" : 56,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 58,
    "startColumnNumber" : 21,
    "endLineNumber" : 58,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}