{
  "id" : 245,
  "expression" : "\"junc\"",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/windows/WindowsFileSystemTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"junc\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 70,
      "startColumnNumber" : 45,
      "endLineNumber" : 70,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 70,
        "startColumnNumber" : 29,
        "endLineNumber" : 70,
        "endColumnNumber" : 87
      },
      "nodeContext" : "ImmutableMap.of(\"junc\",\"dir\",\"junc_bad\",\"non_existent\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 88
      },
      "nodeContext" : "testUtil.createJunctions(ImmutableMap.of(\"junc\",\"dir\",\"junc_bad\",\"non_existent\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 89
      },
      "nodeContext" : "testUtil.createJunctions(ImmutableMap.of(\"junc\",\"dir\",\"junc_bad\",\"non_existent\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2002,
        "startLineNumber" : 67,
        "startColumnNumber" : 65,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  testUtil.scratchFile(\"dir\\\\hello.txt\",\"hello\");\n  testUtil.scratchDir(\"non_existent\");\n  testUtil.createJunctions(ImmutableMap.of(\"junc\",\"dir\",\"junc_bad\",\"non_existent\"));\n  Path juncPath=testUtil.createVfsPath(fs,\"junc\");\n  Path dirPath=testUtil.createVfsPath(fs,\"dir\");\n  Path juncBadPath=testUtil.createVfsPath(fs,\"junc_bad\");\n  Path nonExistentPath=testUtil.createVfsPath(fs,\"non_existent\");\n  assertThat(juncPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(dirPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(juncBadPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(nonExistentPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(juncPath.isSymbolicLink()).isTrue();\n  assertThat(juncPath.isDirectory(Symlinks.FOLLOW)).isTrue();\n  assertThat(juncPath.isDirectory(Symlinks.NOFOLLOW)).isFalse();\n  assertThat(juncPath.getDirectoryEntries()).containsExactly(testUtil.createVfsPath(fs,\"junc\\\\hello.txt\"));\n  assertThat(juncPath.delete()).isTrue();\n  assertThat(juncPath.exists(Symlinks.NOFOLLOW)).isFalse();\n  assertThat(nonExistentPath.delete()).isTrue();\n  assertThat(nonExistentPath.exists(Symlinks.NOFOLLOW)).isFalse();\n  assertThat(juncBadPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(fs.isDirectory(juncBadPath.asFragment(),true)).isFalse();\n  assertThat(fs.isDirectory(juncBadPath.asFragment(),false)).isFalse();\n  assertThat(juncBadPath.delete()).isTrue();\n  assertThat(juncBadPath.exists(Symlinks.NOFOLLOW)).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2073,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCanWorkWithJunctionSymlinks() throws Exception {\n  testUtil.scratchFile(\"dir\\\\hello.txt\",\"hello\");\n  testUtil.scratchDir(\"non_existent\");\n  testUtil.createJunctions(ImmutableMap.of(\"junc\",\"dir\",\"junc_bad\",\"non_existent\"));\n  Path juncPath=testUtil.createVfsPath(fs,\"junc\");\n  Path dirPath=testUtil.createVfsPath(fs,\"dir\");\n  Path juncBadPath=testUtil.createVfsPath(fs,\"junc_bad\");\n  Path nonExistentPath=testUtil.createVfsPath(fs,\"non_existent\");\n  assertThat(juncPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(dirPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(juncBadPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(nonExistentPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(juncPath.isSymbolicLink()).isTrue();\n  assertThat(juncPath.isDirectory(Symlinks.FOLLOW)).isTrue();\n  assertThat(juncPath.isDirectory(Symlinks.NOFOLLOW)).isFalse();\n  assertThat(juncPath.getDirectoryEntries()).containsExactly(testUtil.createVfsPath(fs,\"junc\\\\hello.txt\"));\n  assertThat(juncPath.delete()).isTrue();\n  assertThat(juncPath.exists(Symlinks.NOFOLLOW)).isFalse();\n  assertThat(nonExistentPath.delete()).isTrue();\n  assertThat(nonExistentPath.exists(Symlinks.NOFOLLOW)).isFalse();\n  assertThat(juncBadPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(fs.isDirectory(juncBadPath.asFragment(),true)).isFalse();\n  assertThat(fs.isDirectory(juncBadPath.asFragment(),false)).isFalse();\n  assertThat(juncBadPath.delete()).isTrue();\n  assertThat(juncBadPath.exists(Symlinks.NOFOLLOW)).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 89
      },
      "nodeContext" : "testUtil.createJunctions(ImmutableMap.of(\"junc\",\"dir\",\"junc_bad\",\"non_existent\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"junc\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 72,
      "startColumnNumber" : 47,
      "endLineNumber" : 72,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 72,
        "startColumnNumber" : 20,
        "endLineNumber" : 72,
        "endColumnNumber" : 54
      },
      "nodeContext" : "testUtil.createVfsPath(fs,\"junc\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 72,
        "startColumnNumber" : 9,
        "endLineNumber" : 72,
        "endColumnNumber" : 54
      },
      "nodeContext" : "juncPath=testUtil.createVfsPath(fs,\"junc\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Path juncPath=testUtil.createVfsPath(fs,\"junc\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2002,
        "startLineNumber" : 67,
        "startColumnNumber" : 65,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  testUtil.scratchFile(\"dir\\\\hello.txt\",\"hello\");\n  testUtil.scratchDir(\"non_existent\");\n  testUtil.createJunctions(ImmutableMap.of(\"junc\",\"dir\",\"junc_bad\",\"non_existent\"));\n  Path juncPath=testUtil.createVfsPath(fs,\"junc\");\n  Path dirPath=testUtil.createVfsPath(fs,\"dir\");\n  Path juncBadPath=testUtil.createVfsPath(fs,\"junc_bad\");\n  Path nonExistentPath=testUtil.createVfsPath(fs,\"non_existent\");\n  assertThat(juncPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(dirPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(juncBadPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(nonExistentPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(juncPath.isSymbolicLink()).isTrue();\n  assertThat(juncPath.isDirectory(Symlinks.FOLLOW)).isTrue();\n  assertThat(juncPath.isDirectory(Symlinks.NOFOLLOW)).isFalse();\n  assertThat(juncPath.getDirectoryEntries()).containsExactly(testUtil.createVfsPath(fs,\"junc\\\\hello.txt\"));\n  assertThat(juncPath.delete()).isTrue();\n  assertThat(juncPath.exists(Symlinks.NOFOLLOW)).isFalse();\n  assertThat(nonExistentPath.delete()).isTrue();\n  assertThat(nonExistentPath.exists(Symlinks.NOFOLLOW)).isFalse();\n  assertThat(juncBadPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(fs.isDirectory(juncBadPath.asFragment(),true)).isFalse();\n  assertThat(fs.isDirectory(juncBadPath.asFragment(),false)).isFalse();\n  assertThat(juncBadPath.delete()).isTrue();\n  assertThat(juncBadPath.exists(Symlinks.NOFOLLOW)).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2073,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCanWorkWithJunctionSymlinks() throws Exception {\n  testUtil.scratchFile(\"dir\\\\hello.txt\",\"hello\");\n  testUtil.scratchDir(\"non_existent\");\n  testUtil.createJunctions(ImmutableMap.of(\"junc\",\"dir\",\"junc_bad\",\"non_existent\"));\n  Path juncPath=testUtil.createVfsPath(fs,\"junc\");\n  Path dirPath=testUtil.createVfsPath(fs,\"dir\");\n  Path juncBadPath=testUtil.createVfsPath(fs,\"junc_bad\");\n  Path nonExistentPath=testUtil.createVfsPath(fs,\"non_existent\");\n  assertThat(juncPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(dirPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(juncBadPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(nonExistentPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(juncPath.isSymbolicLink()).isTrue();\n  assertThat(juncPath.isDirectory(Symlinks.FOLLOW)).isTrue();\n  assertThat(juncPath.isDirectory(Symlinks.NOFOLLOW)).isFalse();\n  assertThat(juncPath.getDirectoryEntries()).containsExactly(testUtil.createVfsPath(fs,\"junc\\\\hello.txt\"));\n  assertThat(juncPath.delete()).isTrue();\n  assertThat(juncPath.exists(Symlinks.NOFOLLOW)).isFalse();\n  assertThat(nonExistentPath.delete()).isTrue();\n  assertThat(nonExistentPath.exists(Symlinks.NOFOLLOW)).isFalse();\n  assertThat(juncBadPath.exists(Symlinks.NOFOLLOW)).isTrue();\n  assertThat(fs.isDirectory(juncBadPath.asFragment(),true)).isFalse();\n  assertThat(fs.isDirectory(juncBadPath.asFragment(),false)).isFalse();\n  assertThat(juncBadPath.delete()).isTrue();\n  assertThat(juncBadPath.exists(Symlinks.NOFOLLOW)).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Path juncPath=testUtil.createVfsPath(fs,\"junc\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 70,
    "startColumnNumber" : 45,
    "endLineNumber" : 70,
    "endColumnNumber" : 51
  }, {
    "charLength" : 6,
    "startLineNumber" : 72,
    "startColumnNumber" : 47,
    "endLineNumber" : 72,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}