{
  "id" : 307,
  "expression" : "observedDiff",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/algorithms-miscellaneous-2/src/main/java/com/baeldung/algorithms/slope_one/SlopeOne.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "observedDiff",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 52,
      "startColumnNumber" : 68,
      "endLineNumber" : 52,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 52,
        "startColumnNumber" : 58,
        "endLineNumber" : 52,
        "endColumnNumber" : 80
      },
      "nodeContext" : "oldDiff + observedDiff",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 52,
        "startColumnNumber" : 20,
        "endLineNumber" : 52,
        "endColumnNumber" : 81
      },
      "nodeContext" : "diff.get(e.getKey()).put(e2.getKey(),oldDiff + observedDiff)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 52,
        "startColumnNumber" : 20,
        "endLineNumber" : 52,
        "endColumnNumber" : 82
      },
      "nodeContext" : "diff.get(e.getKey()).put(e2.getKey(),oldDiff + observedDiff);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 41,
        "startColumnNumber" : 63,
        "endLineNumber" : 53,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int oldCount=0;\n  if (freq.get(e.getKey()).containsKey(e2.getKey())) {\n    oldCount=freq.get(e.getKey()).get(e2.getKey()).intValue();\n  }\n  double oldDiff=0.0;\n  if (diff.get(e.getKey()).containsKey(e2.getKey())) {\n    oldDiff=diff.get(e.getKey()).get(e2.getKey()).doubleValue();\n  }\n  double observedDiff=e.getValue() - e2.getValue();\n  freq.get(e.getKey()).put(e2.getKey(),oldCount + 1);\n  diff.get(e.getKey()).put(e2.getKey(),oldDiff + observedDiff);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 41,
        "startColumnNumber" : 16,
        "endLineNumber" : 53,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Entry<Item,Double> e2 : user.entrySet()) {\n  int oldCount=0;\n  if (freq.get(e.getKey()).containsKey(e2.getKey())) {\n    oldCount=freq.get(e.getKey()).get(e2.getKey()).intValue();\n  }\n  double oldDiff=0.0;\n  if (diff.get(e.getKey()).containsKey(e2.getKey())) {\n    oldDiff=diff.get(e.getKey()).get(e2.getKey()).doubleValue();\n  }\n  double observedDiff=e.getValue() - e2.getValue();\n  freq.get(e.getKey()).put(e2.getKey(),oldCount + 1);\n  diff.get(e.getKey()).put(e2.getKey(),oldDiff + observedDiff);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 123,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 982,
        "startLineNumber" : 36,
        "startColumnNumber" : 58,
        "endLineNumber" : 54,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!diff.containsKey(e.getKey())) {\n    diff.put(e.getKey(),new HashMap<Item,Double>());\n    freq.put(e.getKey(),new HashMap<Item,Integer>());\n  }\n  for (  Entry<Item,Double> e2 : user.entrySet()) {\n    int oldCount=0;\n    if (freq.get(e.getKey()).containsKey(e2.getKey())) {\n      oldCount=freq.get(e.getKey()).get(e2.getKey()).intValue();\n    }\n    double oldDiff=0.0;\n    if (diff.get(e.getKey()).containsKey(e2.getKey())) {\n      oldDiff=diff.get(e.getKey()).get(e2.getKey()).doubleValue();\n    }\n    double observedDiff=e.getValue() - e2.getValue();\n    freq.get(e.getKey()).put(e2.getKey(),oldCount + 1);\n    diff.get(e.getKey()).put(e2.getKey(),oldDiff + observedDiff);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1028,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Entry<Item,Double> e : user.entrySet()) {\n  if (!diff.containsKey(e.getKey())) {\n    diff.put(e.getKey(),new HashMap<Item,Double>());\n    freq.put(e.getKey(),new HashMap<Item,Integer>());\n  }\n  for (  Entry<Item,Double> e2 : user.entrySet()) {\n    int oldCount=0;\n    if (freq.get(e.getKey()).containsKey(e2.getKey())) {\n      oldCount=freq.get(e.getKey()).get(e2.getKey()).intValue();\n    }\n    double oldDiff=0.0;\n    if (diff.get(e.getKey()).containsKey(e2.getKey())) {\n      oldDiff=diff.get(e.getKey()).get(e2.getKey()).doubleValue();\n    }\n    double observedDiff=e.getValue() - e2.getValue();\n    freq.get(e.getKey()).put(e2.getKey(),oldCount + 1);\n    diff.get(e.getKey()).put(e2.getKey(),oldDiff + observedDiff);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 176,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 35,
        "startColumnNumber" : 57,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Entry<Item,Double> e : user.entrySet()) {\n    if (!diff.containsKey(e.getKey())) {\n      diff.put(e.getKey(),new HashMap<Item,Double>());\n      freq.put(e.getKey(),new HashMap<Item,Integer>());\n    }\n    for (    Entry<Item,Double> e2 : user.entrySet()) {\n      int oldCount=0;\n      if (freq.get(e.getKey()).containsKey(e2.getKey())) {\n        oldCount=freq.get(e.getKey()).get(e2.getKey()).intValue();\n      }\n      double oldDiff=0.0;\n      if (diff.get(e.getKey()).containsKey(e2.getKey())) {\n        oldDiff=diff.get(e.getKey()).get(e2.getKey()).doubleValue();\n      }\n      double observedDiff=e.getValue() - e2.getValue();\n      freq.get(e.getKey()).put(e2.getKey(),oldCount + 1);\n      diff.get(e.getKey()).put(e2.getKey(),oldDiff + observedDiff);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (HashMap<Item,Double> user : data.values()) {\n  for (  Entry<Item,Double> e : user.entrySet()) {\n    if (!diff.containsKey(e.getKey())) {\n      diff.put(e.getKey(),new HashMap<Item,Double>());\n      freq.put(e.getKey(),new HashMap<Item,Integer>());\n    }\n    for (    Entry<Item,Double> e2 : user.entrySet()) {\n      int oldCount=0;\n      if (freq.get(e.getKey()).containsKey(e2.getKey())) {\n        oldCount=freq.get(e.getKey()).get(e2.getKey()).intValue();\n      }\n      double oldDiff=0.0;\n      if (diff.get(e.getKey()).containsKey(e2.getKey())) {\n        oldDiff=diff.get(e.getKey()).get(e2.getKey()).doubleValue();\n      }\n      double observedDiff=e.getValue() - e2.getValue();\n      freq.get(e.getKey()).put(e2.getKey(),oldCount + 1);\n      diff.get(e.getKey()).put(e2.getKey(),oldDiff + observedDiff);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 190,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 34,
        "startColumnNumber" : 86,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  HashMap<Item,Double> user : data.values()) {\n    for (    Entry<Item,Double> e : user.entrySet()) {\n      if (!diff.containsKey(e.getKey())) {\n        diff.put(e.getKey(),new HashMap<Item,Double>());\n        freq.put(e.getKey(),new HashMap<Item,Integer>());\n      }\n      for (      Entry<Item,Double> e2 : user.entrySet()) {\n        int oldCount=0;\n        if (freq.get(e.getKey()).containsKey(e2.getKey())) {\n          oldCount=freq.get(e.getKey()).get(e2.getKey()).intValue();\n        }\n        double oldDiff=0.0;\n        if (diff.get(e.getKey()).containsKey(e2.getKey())) {\n          oldDiff=diff.get(e.getKey()).get(e2.getKey()).doubleValue();\n        }\n        double observedDiff=e.getValue() - e2.getValue();\n        freq.get(e.getKey()).put(e2.getKey(),oldCount + 1);\n        diff.get(e.getKey()).put(e2.getKey(),oldDiff + observedDiff);\n      }\n    }\n  }\n  for (  Item j : diff.keySet()) {\n    for (    Item i : diff.get(j).keySet()) {\n      double oldValue=diff.get(j).get(i).doubleValue();\n      int count=freq.get(j).get(i).intValue();\n      diff.get(j).put(i,oldValue / count);\n    }\n  }\n  printData(data);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 253,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1737,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Based on the available data, calculate the relationships between the items and number of occurences\n * @param data existing user data and their items' ratings\n */\nprivate static void buildDifferencesMatrix(Map<User,HashMap<Item,Double>> data){\n  for (  HashMap<Item,Double> user : data.values()) {\n    for (    Entry<Item,Double> e : user.entrySet()) {\n      if (!diff.containsKey(e.getKey())) {\n        diff.put(e.getKey(),new HashMap<Item,Double>());\n        freq.put(e.getKey(),new HashMap<Item,Integer>());\n      }\n      for (      Entry<Item,Double> e2 : user.entrySet()) {\n        int oldCount=0;\n        if (freq.get(e.getKey()).containsKey(e2.getKey())) {\n          oldCount=freq.get(e.getKey()).get(e2.getKey()).intValue();\n        }\n        double oldDiff=0.0;\n        if (diff.get(e.getKey()).containsKey(e2.getKey())) {\n          oldDiff=diff.get(e.getKey()).get(e2.getKey()).doubleValue();\n        }\n        double observedDiff=e.getValue() - e2.getValue();\n        freq.get(e.getKey()).put(e2.getKey(),oldCount + 1);\n        diff.get(e.getKey()).put(e2.getKey(),oldDiff + observedDiff);\n      }\n    }\n  }\n  for (  Item j : diff.keySet()) {\n    for (    Item i : diff.get(j).keySet()) {\n      double oldValue=diff.get(j).get(i).doubleValue();\n      int count=freq.get(j).get(i).intValue();\n      diff.get(j).put(i,oldValue / count);\n    }\n  }\n  printData(data);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 273,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 52,
        "startColumnNumber" : 20,
        "endLineNumber" : 52,
        "endColumnNumber" : 82
      },
      "nodeContext" : "diff.get(e.getKey()).put(e2.getKey(),oldDiff + observedDiff);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 52,
    "startColumnNumber" : 68,
    "endLineNumber" : 52,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}