{
  "id" : 374,
  "expression" : "Observable.range(1,5)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/observable/ObservableTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Observable.range(1,5)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 26,
      "startColumnNumber" : 29,
      "endLineNumber" : 26,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 26,
        "startColumnNumber" : 29,
        "endLineNumber" : 31,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Observable.range(1,5).flatMap(new Function<Integer,Observable<Integer>>(){\n  @Override public Observable<Integer> apply(  Integer v){\n    return Observable.range(v,2);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 26,
        "startColumnNumber" : 29,
        "endLineNumber" : 31,
        "endColumnNumber" : 20
      },
      "nodeContext" : "Observable.range(1,5).flatMap(new Function<Integer,Observable<Integer>>(){\n  @Override public Observable<Integer> apply(  Integer v){\n    return Observable.range(v,2);\n  }\n}\n).getList()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 26,
        "startColumnNumber" : 22,
        "endLineNumber" : 31,
        "endColumnNumber" : 20
      },
      "nodeContext" : "list=Observable.range(1,5).flatMap(new Function<Integer,Observable<Integer>>(){\n  @Override public Observable<Integer> apply(  Integer v){\n    return Observable.range(v,2);\n  }\n}\n).getList()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 44,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 21
      },
      "nodeContext" : "List<Integer> list=Observable.range(1,5).flatMap(new Function<Integer,Observable<Integer>>(){\n  @Override public Observable<Integer> apply(  Integer v){\n    return Observable.range(v,2);\n  }\n}\n).getList();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 50,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 375,
        "startLineNumber" : 25,
        "startColumnNumber" : 30,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Integer> list=Observable.range(1,5).flatMap(new Function<Integer,Observable<Integer>>(){\n    @Override public Observable<Integer> apply(    Integer v){\n      return Observable.range(v,2);\n    }\n  }\n).getList();\n  Assert.assertEquals(Arrays.asList(1,2,2,3,3,4,4,5,5,6),list);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFlatMap(){\n  List<Integer> list=Observable.range(1,5).flatMap(new Function<Integer,Observable<Integer>>(){\n    @Override public Observable<Integer> apply(    Integer v){\n      return Observable.range(v,2);\n    }\n  }\n).getList();\n  Assert.assertEquals(Arrays.asList(1,2,2,3,3,4,4,5,5,6),list);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 26,
        "startColumnNumber" : 29,
        "endLineNumber" : 31,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Observable.range(1,5).flatMap(new Function<Integer,Observable<Integer>>(){\n  @Override public Observable<Integer> apply(  Integer v){\n    return Observable.range(v,2);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 40,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "io.reactivex.Observable<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 26,
    "startColumnNumber" : 29,
    "endLineNumber" : 26,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}