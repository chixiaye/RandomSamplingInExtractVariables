{
  "id" : 8,
  "expression" : "sessionData.etag",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "/sonic-android/sdk/src/main/java/com/tencent/sonic/sdk/SonicCacheInterceptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sessionData.etag",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 78,
      "startColumnNumber" : 34,
      "endLineNumber" : 78,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 78,
        "endColumnNumber" : 51
      },
      "nodeContext" : "TextUtils.isEmpty(sessionData.etag)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 78,
        "endColumnNumber" : 94
      },
      "nodeContext" : "TextUtils.isEmpty(sessionData.etag) || TextUtils.isEmpty(sessionData.htmlSha1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2038,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (TextUtils.isEmpty(sessionData.etag) || TextUtils.isEmpty(sessionData.htmlSha1)) {\n  verifyError=true;\n  SonicUtils.log(TAG,Log.INFO,\"session(\" + session.sId + \") runSonicFlow : session data is empty.\");\n}\n else {\n  File htmlCacheFile=new File(SonicFileUtils.getSonicHtmlPath(session.id));\n  htmlString=SonicFileUtils.readFile(htmlCacheFile);\n  verifyError=TextUtils.isEmpty(htmlString);\n  if (verifyError) {\n    SonicUtils.log(TAG,Log.ERROR,\"session(\" + session.sId + \") runSonicFlow error:cache data is null.\");\n  }\n else {\n    if (SonicEngine.getInstance().getConfig().VERIFY_CACHE_FILE_WITH_SHA1) {\n      if (!SonicFileUtils.verifyData(htmlString,sessionData.htmlSha1)) {\n        verifyError=true;\n        htmlString=\"\";\n        SonicEngine.getInstance().getRuntime().notifyError(session.sessionClient,session.srcUrl,SonicConstants.ERROR_CODE_DATA_VERIFY_FAIL);\n        SonicUtils.log(TAG,Log.ERROR,\"session(\" + session.sId + \") runSonicFlow error:verify html cache with sha1 fail.\");\n      }\n else {\n        SonicUtils.log(TAG,Log.INFO,\"session(\" + session.sId + \") runSonicFlow verify html cache with sha1 success.\");\n      }\n    }\n else {\n      if (sessionData.htmlSize != htmlCacheFile.length()) {\n        verifyError=true;\n        htmlString=\"\";\n        SonicEngine.getInstance().getRuntime().notifyError(session.sessionClient,session.srcUrl,SonicConstants.ERROR_CODE_DATA_VERIFY_FAIL);\n        SonicUtils.log(TAG,Log.ERROR,\"session(\" + session.sId + \") runSonicFlow error:verify html cache with size fail.\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 202,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2883,
        "startLineNumber" : 68,
        "startColumnNumber" : 64,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (session == null) {\n    SonicUtils.log(TAG,Log.INFO,\"getCache is null\");\n    return null;\n  }\n  SonicDataHelper.SessionData sessionData=SonicDataHelper.getSessionData(session.id);\n  boolean verifyError;\n  String htmlString=\"\";\n  if (TextUtils.isEmpty(sessionData.etag) || TextUtils.isEmpty(sessionData.htmlSha1)) {\n    verifyError=true;\n    SonicUtils.log(TAG,Log.INFO,\"session(\" + session.sId + \") runSonicFlow : session data is empty.\");\n  }\n else {\n    File htmlCacheFile=new File(SonicFileUtils.getSonicHtmlPath(session.id));\n    htmlString=SonicFileUtils.readFile(htmlCacheFile);\n    verifyError=TextUtils.isEmpty(htmlString);\n    if (verifyError) {\n      SonicUtils.log(TAG,Log.ERROR,\"session(\" + session.sId + \") runSonicFlow error:cache data is null.\");\n    }\n else {\n      if (SonicEngine.getInstance().getConfig().VERIFY_CACHE_FILE_WITH_SHA1) {\n        if (!SonicFileUtils.verifyData(htmlString,sessionData.htmlSha1)) {\n          verifyError=true;\n          htmlString=\"\";\n          SonicEngine.getInstance().getRuntime().notifyError(session.sessionClient,session.srcUrl,SonicConstants.ERROR_CODE_DATA_VERIFY_FAIL);\n          SonicUtils.log(TAG,Log.ERROR,\"session(\" + session.sId + \") runSonicFlow error:verify html cache with sha1 fail.\");\n        }\n else {\n          SonicUtils.log(TAG,Log.INFO,\"session(\" + session.sId + \") runSonicFlow verify html cache with sha1 success.\");\n        }\n      }\n else {\n        if (sessionData.htmlSize != htmlCacheFile.length()) {\n          verifyError=true;\n          htmlString=\"\";\n          SonicEngine.getInstance().getRuntime().notifyError(session.sessionClient,session.srcUrl,SonicConstants.ERROR_CODE_DATA_VERIFY_FAIL);\n          SonicUtils.log(TAG,Log.ERROR,\"session(\" + session.sId + \") runSonicFlow error:verify html cache with size fail.\");\n        }\n      }\n    }\n  }\n  if (verifyError) {\n    long startTime=System.currentTimeMillis();\n    SonicUtils.removeSessionCache(session.id);\n    sessionData.reset();\n    SonicUtils.log(TAG,Log.INFO,\"session(\" + session.sId + \") runSonicFlow:verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n  }\n  return htmlString;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 287,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2939,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public static String getCacheData(SonicSession session){\n  if (session == null) {\n    SonicUtils.log(TAG,Log.INFO,\"getCache is null\");\n    return null;\n  }\n  SonicDataHelper.SessionData sessionData=SonicDataHelper.getSessionData(session.id);\n  boolean verifyError;\n  String htmlString=\"\";\n  if (TextUtils.isEmpty(sessionData.etag) || TextUtils.isEmpty(sessionData.htmlSha1)) {\n    verifyError=true;\n    SonicUtils.log(TAG,Log.INFO,\"session(\" + session.sId + \") runSonicFlow : session data is empty.\");\n  }\n else {\n    File htmlCacheFile=new File(SonicFileUtils.getSonicHtmlPath(session.id));\n    htmlString=SonicFileUtils.readFile(htmlCacheFile);\n    verifyError=TextUtils.isEmpty(htmlString);\n    if (verifyError) {\n      SonicUtils.log(TAG,Log.ERROR,\"session(\" + session.sId + \") runSonicFlow error:cache data is null.\");\n    }\n else {\n      if (SonicEngine.getInstance().getConfig().VERIFY_CACHE_FILE_WITH_SHA1) {\n        if (!SonicFileUtils.verifyData(htmlString,sessionData.htmlSha1)) {\n          verifyError=true;\n          htmlString=\"\";\n          SonicEngine.getInstance().getRuntime().notifyError(session.sessionClient,session.srcUrl,SonicConstants.ERROR_CODE_DATA_VERIFY_FAIL);\n          SonicUtils.log(TAG,Log.ERROR,\"session(\" + session.sId + \") runSonicFlow error:verify html cache with sha1 fail.\");\n        }\n else {\n          SonicUtils.log(TAG,Log.INFO,\"session(\" + session.sId + \") runSonicFlow verify html cache with sha1 success.\");\n        }\n      }\n else {\n        if (sessionData.htmlSize != htmlCacheFile.length()) {\n          verifyError=true;\n          htmlString=\"\";\n          SonicEngine.getInstance().getRuntime().notifyError(session.sessionClient,session.srcUrl,SonicConstants.ERROR_CODE_DATA_VERIFY_FAIL);\n          SonicUtils.log(TAG,Log.ERROR,\"session(\" + session.sId + \") runSonicFlow error:verify html cache with size fail.\");\n        }\n      }\n    }\n  }\n  if (verifyError) {\n    long startTime=System.currentTimeMillis();\n    SonicUtils.removeSessionCache(session.id);\n    sessionData.reset();\n    SonicUtils.log(TAG,Log.INFO,\"session(\" + session.sId + \") runSonicFlow:verify error so remove session cache, cost \"+ +(System.currentTimeMillis() - startTime)+ \"ms.\");\n  }\n  return htmlString;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 297,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 78,
        "endColumnNumber" : 94
      },
      "nodeContext" : "TextUtils.isEmpty(sessionData.etag) || TextUtils.isEmpty(sessionData.htmlSha1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 78,
    "startColumnNumber" : 34,
    "endLineNumber" : 78,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}