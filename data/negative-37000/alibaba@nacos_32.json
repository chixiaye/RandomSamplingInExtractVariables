{
  "id" : 32,
  "expression" : "e",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcRequestAcceptor.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 133,
      "startColumnNumber" : 111,
      "endLineNumber" : 133,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 132,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 113
      },
      "nodeContext" : "Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 132,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 114
      },
      "nodeContext" : "Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 131,
        "startColumnNumber" : 30,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 473,
        "startLineNumber" : 131,
        "startColumnNumber" : 10,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  parseObj=GrpcUtils.parse(grpcRequest);\n}\n catch (Exception e) {\n  Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5431,
        "startLineNumber" : 77,
        "startColumnNumber" : 87,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  traceIfNecessary(grpcRequest,true);\n  String type=grpcRequest.getMetadata().getType();\n  if (!ApplicationUtils.isStarted()) {\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.INVALID_SERVER_STATUS,\"Server is starting,please try later.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (ServerCheckRequest.class.getName().equals(type)) {\n    Payload serverCheckResponseP=GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));\n    traceIfNecessary(serverCheckResponseP,false);\n    responseObserver.onNext(serverCheckResponseP);\n    responseObserver.onCompleted();\n    return;\n  }\n  RequestHandler requestHandler=requestHandlerRegistry.getByRequestType(type);\n  if (requestHandler == null) {\n    Loggers.REMOTE_DIGEST.warn(String.format(\"[%s] No handler for request type : %s :\",\"grpc\",type));\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.NO_HANDLER,\"RequestHandler Not Found\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  String connectionId=CONTEXT_KEY_CONN_ID.get();\n  boolean requestValid=connectionManager.checkValid(connectionId);\n  if (!requestValid) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid connection Id ,connection [{}] is un registered ,\",\"grpc\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.UN_REGISTER,\"Connection is unregistered.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Object parseObj=null;\n  try {\n    parseObj=GrpcUtils.parse(grpcRequest);\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (parseObj == null) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n  if (!(parseObj instanceof Request)) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Request request=(Request)parseObj;\n  try {\n    Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n    RequestMeta requestMeta=new RequestMeta();\n    requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n    requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n    requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n    requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n    requestMeta.setLabels(connection.getMetaInfo().getLabels());\n    connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n    Response response=requestHandler.handleRequest(request,requestMeta);\n    Payload payloadResponse=GrpcUtils.convert(response);\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n catch (  Throwable e) {\n    Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 510,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5528,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void request(Payload grpcRequest,StreamObserver<Payload> responseObserver){\n  traceIfNecessary(grpcRequest,true);\n  String type=grpcRequest.getMetadata().getType();\n  if (!ApplicationUtils.isStarted()) {\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.INVALID_SERVER_STATUS,\"Server is starting,please try later.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (ServerCheckRequest.class.getName().equals(type)) {\n    Payload serverCheckResponseP=GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));\n    traceIfNecessary(serverCheckResponseP,false);\n    responseObserver.onNext(serverCheckResponseP);\n    responseObserver.onCompleted();\n    return;\n  }\n  RequestHandler requestHandler=requestHandlerRegistry.getByRequestType(type);\n  if (requestHandler == null) {\n    Loggers.REMOTE_DIGEST.warn(String.format(\"[%s] No handler for request type : %s :\",\"grpc\",type));\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.NO_HANDLER,\"RequestHandler Not Found\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  String connectionId=CONTEXT_KEY_CONN_ID.get();\n  boolean requestValid=connectionManager.checkValid(connectionId);\n  if (!requestValid) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid connection Id ,connection [{}] is un registered ,\",\"grpc\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.UN_REGISTER,\"Connection is unregistered.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Object parseObj=null;\n  try {\n    parseObj=GrpcUtils.parse(grpcRequest);\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (parseObj == null) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n  if (!(parseObj instanceof Request)) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Request request=(Request)parseObj;\n  try {\n    Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n    RequestMeta requestMeta=new RequestMeta();\n    requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n    requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n    requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n    requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n    requestMeta.setLabels(connection.getMetaInfo().getLabels());\n    connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n    Response response=requestHandler.handleRequest(request,requestMeta);\n    Payload payloadResponse=GrpcUtils.convert(response);\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n catch (  Throwable e) {\n    Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 527,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 132,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 113
      },
      "nodeContext" : "Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 134,
      "startColumnNumber" : 103,
      "endLineNumber" : 134,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 134,
        "startColumnNumber" : 103,
        "endLineNumber" : 134,
        "endColumnNumber" : 117
      },
      "nodeContext" : "e.getMessage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 134,
        "startColumnNumber" : 56,
        "endLineNumber" : 134,
        "endColumnNumber" : 118
      },
      "nodeContext" : "buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 134,
        "startColumnNumber" : 38,
        "endLineNumber" : 134,
        "endColumnNumber" : 119
      },
      "nodeContext" : "GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 134,
        "startColumnNumber" : 20,
        "endLineNumber" : 134,
        "endColumnNumber" : 119
      },
      "nodeContext" : "payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 120
      },
      "nodeContext" : "Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 131,
        "startColumnNumber" : 30,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 473,
        "startLineNumber" : 131,
        "startColumnNumber" : 10,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  parseObj=GrpcUtils.parse(grpcRequest);\n}\n catch (Exception e) {\n  Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5431,
        "startLineNumber" : 77,
        "startColumnNumber" : 87,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  traceIfNecessary(grpcRequest,true);\n  String type=grpcRequest.getMetadata().getType();\n  if (!ApplicationUtils.isStarted()) {\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.INVALID_SERVER_STATUS,\"Server is starting,please try later.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (ServerCheckRequest.class.getName().equals(type)) {\n    Payload serverCheckResponseP=GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));\n    traceIfNecessary(serverCheckResponseP,false);\n    responseObserver.onNext(serverCheckResponseP);\n    responseObserver.onCompleted();\n    return;\n  }\n  RequestHandler requestHandler=requestHandlerRegistry.getByRequestType(type);\n  if (requestHandler == null) {\n    Loggers.REMOTE_DIGEST.warn(String.format(\"[%s] No handler for request type : %s :\",\"grpc\",type));\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.NO_HANDLER,\"RequestHandler Not Found\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  String connectionId=CONTEXT_KEY_CONN_ID.get();\n  boolean requestValid=connectionManager.checkValid(connectionId);\n  if (!requestValid) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid connection Id ,connection [{}] is un registered ,\",\"grpc\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.UN_REGISTER,\"Connection is unregistered.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Object parseObj=null;\n  try {\n    parseObj=GrpcUtils.parse(grpcRequest);\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (parseObj == null) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n  if (!(parseObj instanceof Request)) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Request request=(Request)parseObj;\n  try {\n    Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n    RequestMeta requestMeta=new RequestMeta();\n    requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n    requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n    requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n    requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n    requestMeta.setLabels(connection.getMetaInfo().getLabels());\n    connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n    Response response=requestHandler.handleRequest(request,requestMeta);\n    Payload payloadResponse=GrpcUtils.convert(response);\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n catch (  Throwable e) {\n    Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 510,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5528,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void request(Payload grpcRequest,StreamObserver<Payload> responseObserver){\n  traceIfNecessary(grpcRequest,true);\n  String type=grpcRequest.getMetadata().getType();\n  if (!ApplicationUtils.isStarted()) {\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.INVALID_SERVER_STATUS,\"Server is starting,please try later.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (ServerCheckRequest.class.getName().equals(type)) {\n    Payload serverCheckResponseP=GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));\n    traceIfNecessary(serverCheckResponseP,false);\n    responseObserver.onNext(serverCheckResponseP);\n    responseObserver.onCompleted();\n    return;\n  }\n  RequestHandler requestHandler=requestHandlerRegistry.getByRequestType(type);\n  if (requestHandler == null) {\n    Loggers.REMOTE_DIGEST.warn(String.format(\"[%s] No handler for request type : %s :\",\"grpc\",type));\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.NO_HANDLER,\"RequestHandler Not Found\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  String connectionId=CONTEXT_KEY_CONN_ID.get();\n  boolean requestValid=connectionManager.checkValid(connectionId);\n  if (!requestValid) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid connection Id ,connection [{}] is un registered ,\",\"grpc\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.UN_REGISTER,\"Connection is unregistered.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Object parseObj=null;\n  try {\n    parseObj=GrpcUtils.parse(grpcRequest);\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (parseObj == null) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n  if (!(parseObj instanceof Request)) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Request request=(Request)parseObj;\n  try {\n    Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n    RequestMeta requestMeta=new RequestMeta();\n    requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n    requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n    requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n    requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n    requestMeta.setLabels(connection.getMetaInfo().getLabels());\n    connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n    Response response=requestHandler.handleRequest(request,requestMeta);\n    Payload payloadResponse=GrpcUtils.convert(response);\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n catch (  Throwable e) {\n    Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 527,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 120
      },
      "nodeContext" : "Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 180,
      "startColumnNumber" : 28,
      "endLineNumber" : 180,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 178,
        "startColumnNumber" : 12,
        "endLineNumber" : 180,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 178,
        "startColumnNumber" : 12,
        "endLineNumber" : 180,
        "endColumnNumber" : 31
      },
      "nodeContext" : "Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 177,
        "startColumnNumber" : 30,
        "endLineNumber" : 187,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 177,
        "startColumnNumber" : 10,
        "endLineNumber" : 187,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable e) {\n  Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1452,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 187,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n  RequestMeta requestMeta=new RequestMeta();\n  requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n  requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n  requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n  requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n  requestMeta.setLabels(connection.getMetaInfo().getLabels());\n  connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n  Response response=requestHandler.handleRequest(request,requestMeta);\n  Payload payloadResponse=GrpcUtils.convert(response);\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n}\n catch (Throwable e) {\n  Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 149,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5431,
        "startLineNumber" : 77,
        "startColumnNumber" : 87,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  traceIfNecessary(grpcRequest,true);\n  String type=grpcRequest.getMetadata().getType();\n  if (!ApplicationUtils.isStarted()) {\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.INVALID_SERVER_STATUS,\"Server is starting,please try later.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (ServerCheckRequest.class.getName().equals(type)) {\n    Payload serverCheckResponseP=GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));\n    traceIfNecessary(serverCheckResponseP,false);\n    responseObserver.onNext(serverCheckResponseP);\n    responseObserver.onCompleted();\n    return;\n  }\n  RequestHandler requestHandler=requestHandlerRegistry.getByRequestType(type);\n  if (requestHandler == null) {\n    Loggers.REMOTE_DIGEST.warn(String.format(\"[%s] No handler for request type : %s :\",\"grpc\",type));\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.NO_HANDLER,\"RequestHandler Not Found\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  String connectionId=CONTEXT_KEY_CONN_ID.get();\n  boolean requestValid=connectionManager.checkValid(connectionId);\n  if (!requestValid) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid connection Id ,connection [{}] is un registered ,\",\"grpc\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.UN_REGISTER,\"Connection is unregistered.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Object parseObj=null;\n  try {\n    parseObj=GrpcUtils.parse(grpcRequest);\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (parseObj == null) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n  if (!(parseObj instanceof Request)) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Request request=(Request)parseObj;\n  try {\n    Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n    RequestMeta requestMeta=new RequestMeta();\n    requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n    requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n    requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n    requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n    requestMeta.setLabels(connection.getMetaInfo().getLabels());\n    connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n    Response response=requestHandler.handleRequest(request,requestMeta);\n    Payload payloadResponse=GrpcUtils.convert(response);\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n catch (  Throwable e) {\n    Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 510,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5528,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void request(Payload grpcRequest,StreamObserver<Payload> responseObserver){\n  traceIfNecessary(grpcRequest,true);\n  String type=grpcRequest.getMetadata().getType();\n  if (!ApplicationUtils.isStarted()) {\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.INVALID_SERVER_STATUS,\"Server is starting,please try later.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (ServerCheckRequest.class.getName().equals(type)) {\n    Payload serverCheckResponseP=GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));\n    traceIfNecessary(serverCheckResponseP,false);\n    responseObserver.onNext(serverCheckResponseP);\n    responseObserver.onCompleted();\n    return;\n  }\n  RequestHandler requestHandler=requestHandlerRegistry.getByRequestType(type);\n  if (requestHandler == null) {\n    Loggers.REMOTE_DIGEST.warn(String.format(\"[%s] No handler for request type : %s :\",\"grpc\",type));\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.NO_HANDLER,\"RequestHandler Not Found\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  String connectionId=CONTEXT_KEY_CONN_ID.get();\n  boolean requestValid=connectionManager.checkValid(connectionId);\n  if (!requestValid) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid connection Id ,connection [{}] is un registered ,\",\"grpc\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.UN_REGISTER,\"Connection is unregistered.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Object parseObj=null;\n  try {\n    parseObj=GrpcUtils.parse(grpcRequest);\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (parseObj == null) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n  if (!(parseObj instanceof Request)) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Request request=(Request)parseObj;\n  try {\n    Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n    RequestMeta requestMeta=new RequestMeta();\n    requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n    requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n    requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n    requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n    requestMeta.setLabels(connection.getMetaInfo().getLabels());\n    connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n    Response response=requestHandler.handleRequest(request,requestMeta);\n    Payload payloadResponse=GrpcUtils.convert(response);\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n catch (  Throwable e) {\n    Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 527,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 178,
        "startColumnNumber" : 12,
        "endLineNumber" : 180,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  }, {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 182,
      "startColumnNumber" : 77,
      "endLineNumber" : 182,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 182,
        "startColumnNumber" : 77,
        "endLineNumber" : 182,
        "endColumnNumber" : 91
      },
      "nodeContext" : "e.getMessage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 182,
        "startColumnNumber" : 29,
        "endLineNumber" : 182,
        "endColumnNumber" : 92
      },
      "nodeContext" : "buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 181,
        "startColumnNumber" : 38,
        "endLineNumber" : 182,
        "endColumnNumber" : 93
      },
      "nodeContext" : "GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 181,
        "startColumnNumber" : 20,
        "endLineNumber" : 182,
        "endColumnNumber" : 93
      },
      "nodeContext" : "payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 181,
        "startColumnNumber" : 12,
        "endLineNumber" : 182,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 177,
        "startColumnNumber" : 30,
        "endLineNumber" : 187,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 177,
        "startColumnNumber" : 10,
        "endLineNumber" : 187,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable e) {\n  Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1452,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 187,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n  RequestMeta requestMeta=new RequestMeta();\n  requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n  requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n  requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n  requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n  requestMeta.setLabels(connection.getMetaInfo().getLabels());\n  connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n  Response response=requestHandler.handleRequest(request,requestMeta);\n  Payload payloadResponse=GrpcUtils.convert(response);\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n}\n catch (Throwable e) {\n  Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 149,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5431,
        "startLineNumber" : 77,
        "startColumnNumber" : 87,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  traceIfNecessary(grpcRequest,true);\n  String type=grpcRequest.getMetadata().getType();\n  if (!ApplicationUtils.isStarted()) {\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.INVALID_SERVER_STATUS,\"Server is starting,please try later.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (ServerCheckRequest.class.getName().equals(type)) {\n    Payload serverCheckResponseP=GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));\n    traceIfNecessary(serverCheckResponseP,false);\n    responseObserver.onNext(serverCheckResponseP);\n    responseObserver.onCompleted();\n    return;\n  }\n  RequestHandler requestHandler=requestHandlerRegistry.getByRequestType(type);\n  if (requestHandler == null) {\n    Loggers.REMOTE_DIGEST.warn(String.format(\"[%s] No handler for request type : %s :\",\"grpc\",type));\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.NO_HANDLER,\"RequestHandler Not Found\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  String connectionId=CONTEXT_KEY_CONN_ID.get();\n  boolean requestValid=connectionManager.checkValid(connectionId);\n  if (!requestValid) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid connection Id ,connection [{}] is un registered ,\",\"grpc\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.UN_REGISTER,\"Connection is unregistered.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Object parseObj=null;\n  try {\n    parseObj=GrpcUtils.parse(grpcRequest);\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (parseObj == null) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n  if (!(parseObj instanceof Request)) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Request request=(Request)parseObj;\n  try {\n    Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n    RequestMeta requestMeta=new RequestMeta();\n    requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n    requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n    requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n    requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n    requestMeta.setLabels(connection.getMetaInfo().getLabels());\n    connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n    Response response=requestHandler.handleRequest(request,requestMeta);\n    Payload payloadResponse=GrpcUtils.convert(response);\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n catch (  Throwable e) {\n    Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 510,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5528,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void request(Payload grpcRequest,StreamObserver<Payload> responseObserver){\n  traceIfNecessary(grpcRequest,true);\n  String type=grpcRequest.getMetadata().getType();\n  if (!ApplicationUtils.isStarted()) {\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.INVALID_SERVER_STATUS,\"Server is starting,please try later.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (ServerCheckRequest.class.getName().equals(type)) {\n    Payload serverCheckResponseP=GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));\n    traceIfNecessary(serverCheckResponseP,false);\n    responseObserver.onNext(serverCheckResponseP);\n    responseObserver.onCompleted();\n    return;\n  }\n  RequestHandler requestHandler=requestHandlerRegistry.getByRequestType(type);\n  if (requestHandler == null) {\n    Loggers.REMOTE_DIGEST.warn(String.format(\"[%s] No handler for request type : %s :\",\"grpc\",type));\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.NO_HANDLER,\"RequestHandler Not Found\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  String connectionId=CONTEXT_KEY_CONN_ID.get();\n  boolean requestValid=connectionManager.checkValid(connectionId);\n  if (!requestValid) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid connection Id ,connection [{}] is un registered ,\",\"grpc\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.UN_REGISTER,\"Connection is unregistered.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Object parseObj=null;\n  try {\n    parseObj=GrpcUtils.parse(grpcRequest);\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (parseObj == null) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n  if (!(parseObj instanceof Request)) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Request request=(Request)parseObj;\n  try {\n    Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n    RequestMeta requestMeta=new RequestMeta();\n    requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n    requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n    requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n    requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n    requestMeta.setLabels(connection.getMetaInfo().getLabels());\n    connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n    Response response=requestHandler.handleRequest(request,requestMeta);\n    Payload payloadResponse=GrpcUtils.convert(response);\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n catch (  Throwable e) {\n    Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 527,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 182,
        "startColumnNumber" : 29,
        "endLineNumber" : 182,
        "endColumnNumber" : 92
      },
      "nodeContext" : "buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 133,
    "startColumnNumber" : 111,
    "endLineNumber" : 133,
    "endColumnNumber" : 112
  }, {
    "charLength" : 1,
    "startLineNumber" : 134,
    "startColumnNumber" : 103,
    "endLineNumber" : 134,
    "endColumnNumber" : 104
  }, {
    "charLength" : 1,
    "startLineNumber" : 180,
    "startColumnNumber" : 28,
    "endLineNumber" : 180,
    "endColumnNumber" : 29
  }, {
    "charLength" : 1,
    "startLineNumber" : 182,
    "startColumnNumber" : 77,
    "endLineNumber" : 182,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  } ]
}