{
  "id" : 146,
  "expression" : "\"' isn't MySQL data type\"",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/modules/openapi-generator/src/test/java/org/openapitools/codegen/mysql/MysqlSchemaCodegenTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"' isn't MySQL data type\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 183,
      "startColumnNumber" : 84,
      "endLineNumber" : 183,
      "endColumnNumber" : 109
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 183,
        "startColumnNumber" : 66,
        "endLineNumber" : 183,
        "endColumnNumber" : 109
      },
      "nodeContext" : "\"'\" + trueValue + \"' isn't MySQL data type\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 183,
        "startColumnNumber" : 12,
        "endLineNumber" : 183,
        "endColumnNumber" : 110
      },
      "nodeContext" : "Assert.assertTrue(codegen.isMysqlDataType(trueValue),\"'\" + trueValue + \"' isn't MySQL data type\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 183,
        "startColumnNumber" : 12,
        "endLineNumber" : 183,
        "endColumnNumber" : 111
      },
      "nodeContext" : "Assert.assertTrue(codegen.isMysqlDataType(trueValue),\"'\" + trueValue + \"' isn't MySQL data type\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 182,
        "startColumnNumber" : 44,
        "endLineNumber" : 184,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertTrue(codegen.isMysqlDataType(trueValue),\"'\" + trueValue + \"' isn't MySQL data type\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 184,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String trueValue : trueFixture) {\n  Assert.assertTrue(codegen.isMysqlDataType(trueValue),\"'\" + trueValue + \"' isn't MySQL data type\");\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 174,
        "startColumnNumber" : 38,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final MysqlSchemaCodegen codegen=new MysqlSchemaCodegen();\n  ArrayList<String> trueFixture=new ArrayList<String>(Arrays.asList(\"INTEGER\",\"integer\",\"Integer\",\"DATETIME\",\"datetime\",\"DateTime\",\"VARCHAR\",\"varchar\",\"VarChar\",\"POINT\",\"Point\",\"point\",\"JSON\",\"json\",\"Json\"));\n  ArrayList<String> falseFixture=new ArrayList<String>(Arrays.asList(\"unknown\",\"HashMap\",\"HASHMAP\",\"hashmap\"));\n  for (  String trueValue : trueFixture) {\n    Assert.assertTrue(codegen.isMysqlDataType(trueValue),\"'\" + trueValue + \"' isn't MySQL data type\");\n  }\n  for (  String falseValue : falseFixture) {\n    Assert.assertFalse(codegen.isMysqlDataType(falseValue),\"'\" + falseValue + \"' is MySQL data type\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 856,
        "startLineNumber" : 173,
        "startColumnNumber" : 4,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testIsMysqlDataType(){\n  final MysqlSchemaCodegen codegen=new MysqlSchemaCodegen();\n  ArrayList<String> trueFixture=new ArrayList<String>(Arrays.asList(\"INTEGER\",\"integer\",\"Integer\",\"DATETIME\",\"datetime\",\"DateTime\",\"VARCHAR\",\"varchar\",\"VarChar\",\"POINT\",\"Point\",\"point\",\"JSON\",\"json\",\"Json\"));\n  ArrayList<String> falseFixture=new ArrayList<String>(Arrays.asList(\"unknown\",\"HashMap\",\"HASHMAP\",\"hashmap\"));\n  for (  String trueValue : trueFixture) {\n    Assert.assertTrue(codegen.isMysqlDataType(trueValue),\"'\" + trueValue + \"' isn't MySQL data type\");\n  }\n  for (  String falseValue : falseFixture) {\n    Assert.assertFalse(codegen.isMysqlDataType(falseValue),\"'\" + falseValue + \"' is MySQL data type\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 183,
        "startColumnNumber" : 12,
        "endLineNumber" : 183,
        "endColumnNumber" : 111
      },
      "nodeContext" : "Assert.assertTrue(codegen.isMysqlDataType(trueValue),\"'\" + trueValue + \"' isn't MySQL data type\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 183,
    "startColumnNumber" : 84,
    "endLineNumber" : 183,
    "endColumnNumber" : 109
  } ],
  "layoutRelationDataList" : [ ]
}