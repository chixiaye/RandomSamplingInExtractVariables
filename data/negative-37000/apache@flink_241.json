{
  "id" : 241,
  "expression" : "new Configuration()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-tests/src/test/java/org/apache/flink/test/checkpointing/ResumeCheckpointManuallyITCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Configuration()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 234,
      "startColumnNumber" : 37,
      "endLineNumber" : 234,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 234,
        "startColumnNumber" : 28,
        "endLineNumber" : 234,
        "endColumnNumber" : 56
      },
      "nodeContext" : "config=new Configuration()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 57
      },
      "nodeContext" : "final Configuration config=new Configuration();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2609,
        "startLineNumber" : 232,
        "startColumnNumber" : 29,
        "endLineNumber" : 287,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Configuration config=new Configuration();\n  final File savepointDir=temporaryFolder.newFolder();\n  config.setString(CheckpointingOptions.CHECKPOINTS_DIRECTORY,checkpointDir.toURI().toString());\n  config.setString(CheckpointingOptions.SAVEPOINT_DIRECTORY,savepointDir.toURI().toString());\n  config.setBoolean(CheckpointingOptions.LOCAL_RECOVERY,localRecovery);\n  FsStateChangelogStorageFactory.configure(config,temporaryFolder.newFolder());\n  if (zooKeeperQuorum != null) {\n    final File haDir=temporaryFolder.newFolder();\n    config.setString(HighAvailabilityOptions.HA_MODE,\"ZOOKEEPER\");\n    config.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM,zooKeeperQuorum);\n    config.setString(HighAvailabilityOptions.HA_STORAGE_PATH,haDir.toURI().toString());\n  }\n  MiniClusterWithClientResource cluster=new MiniClusterWithClientResource(new MiniClusterResourceConfiguration.Builder().setConfiguration(config).setNumberTaskManagers(NUM_TASK_MANAGERS).setNumberSlotsPerTaskManager(SLOTS_PER_TASK_MANAGER).build());\n  cluster.before();\n  ClusterClient<?> client=cluster.getClusterClient();\n  try {\n    String firstExternalCheckpoint=runJobAndGetExternalizedCheckpoint(backend,checkpointDir,null,client);\n    assertNotNull(firstExternalCheckpoint);\n    String secondExternalCheckpoint=runJobAndGetExternalizedCheckpoint(backend,checkpointDir,firstExternalCheckpoint,client);\n    assertNotNull(secondExternalCheckpoint);\n    String thirdExternalCheckpoint=runJobAndGetExternalizedCheckpoint(backend,checkpointDir,secondExternalCheckpoint,client);\n    assertNotNull(thirdExternalCheckpoint);\n  }\n  finally {\n    cluster.after();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2781,
        "startLineNumber" : 230,
        "startColumnNumber" : 4,
        "endLineNumber" : 287,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void testExternalizedCheckpoints(File checkpointDir,String zooKeeperQuorum,StateBackend backend,boolean localRecovery) throws Exception {\n  final Configuration config=new Configuration();\n  final File savepointDir=temporaryFolder.newFolder();\n  config.setString(CheckpointingOptions.CHECKPOINTS_DIRECTORY,checkpointDir.toURI().toString());\n  config.setString(CheckpointingOptions.SAVEPOINT_DIRECTORY,savepointDir.toURI().toString());\n  config.setBoolean(CheckpointingOptions.LOCAL_RECOVERY,localRecovery);\n  FsStateChangelogStorageFactory.configure(config,temporaryFolder.newFolder());\n  if (zooKeeperQuorum != null) {\n    final File haDir=temporaryFolder.newFolder();\n    config.setString(HighAvailabilityOptions.HA_MODE,\"ZOOKEEPER\");\n    config.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM,zooKeeperQuorum);\n    config.setString(HighAvailabilityOptions.HA_STORAGE_PATH,haDir.toURI().toString());\n  }\n  MiniClusterWithClientResource cluster=new MiniClusterWithClientResource(new MiniClusterResourceConfiguration.Builder().setConfiguration(config).setNumberTaskManagers(NUM_TASK_MANAGERS).setNumberSlotsPerTaskManager(SLOTS_PER_TASK_MANAGER).build());\n  cluster.before();\n  ClusterClient<?> client=cluster.getClusterClient();\n  try {\n    String firstExternalCheckpoint=runJobAndGetExternalizedCheckpoint(backend,checkpointDir,null,client);\n    assertNotNull(firstExternalCheckpoint);\n    String secondExternalCheckpoint=runJobAndGetExternalizedCheckpoint(backend,checkpointDir,firstExternalCheckpoint,client);\n    assertNotNull(secondExternalCheckpoint);\n    String thirdExternalCheckpoint=runJobAndGetExternalizedCheckpoint(backend,checkpointDir,secondExternalCheckpoint,client);\n    assertNotNull(thirdExternalCheckpoint);\n  }\n  finally {\n    cluster.after();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 212,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 57
      },
      "nodeContext" : "final Configuration config=new Configuration();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.configuration.Configuration"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 234,
    "startColumnNumber" : 37,
    "endLineNumber" : 234,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}