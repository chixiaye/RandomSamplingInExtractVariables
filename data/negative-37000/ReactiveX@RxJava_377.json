{
  "id" : 377,
  "expression" : "this.subscription != null",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/observers/SafeObserver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.subscription != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 44,
      "startColumnNumber" : 12,
      "endLineNumber" : 44,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (this.subscription != null) {\n  Throwable ise=new IllegalStateException(\"Disposable already set!\");\n  try {\n    s.dispose();\n  }\n catch (  Throwable e) {\n    ise=new CompositeException(e,ise);\n  }\n  onError(ise);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1015,
        "startLineNumber" : 40,
        "startColumnNumber" : 42,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (done) {\n    return;\n  }\n  if (this.subscription != null) {\n    Throwable ise=new IllegalStateException(\"Disposable already set!\");\n    try {\n      s.dispose();\n    }\n catch (    Throwable e) {\n      ise=new CompositeException(e,ise);\n    }\n    onError(ise);\n    return;\n  }\n  if (s == null) {\n    subscription=EmptyDisposable.INSTANCE;\n    onError(new NullPointerException(\"Subscription is null!\"));\n    return;\n  }\n  this.subscription=s;\n  try {\n    actual.onSubscribe(s);\n  }\n catch (  Throwable e) {\n    done=true;\n    try {\n      s.dispose();\n    }\n catch (    Throwable e1) {\n      RxJavaPlugins.onError(e1);\n    }\n    RxJavaPlugins.onError(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1068,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void onSubscribe(Disposable s){\n  if (done) {\n    return;\n  }\n  if (this.subscription != null) {\n    Throwable ise=new IllegalStateException(\"Disposable already set!\");\n    try {\n      s.dispose();\n    }\n catch (    Throwable e) {\n      ise=new CompositeException(e,ise);\n    }\n    onError(ise);\n    return;\n  }\n  if (s == null) {\n    subscription=EmptyDisposable.INSTANCE;\n    onError(new NullPointerException(\"Subscription is null!\"));\n    return;\n  }\n  this.subscription=s;\n  try {\n    actual.onSubscribe(s);\n  }\n catch (  Throwable e) {\n    done=true;\n    try {\n      s.dispose();\n    }\n catch (    Throwable e1) {\n      RxJavaPlugins.onError(e1);\n    }\n    RxJavaPlugins.onError(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (this.subscription != null) {\n  Throwable ise=new IllegalStateException(\"Disposable already set!\");\n  try {\n    s.dispose();\n  }\n catch (  Throwable e) {\n    ise=new CompositeException(e,ise);\n  }\n  onError(ise);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 10
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 44,
    "startColumnNumber" : 12,
    "endLineNumber" : 44,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}