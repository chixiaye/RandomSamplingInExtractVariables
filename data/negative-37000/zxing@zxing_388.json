{
  "id" : 388,
  "expression" : "date.charAt(i)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/client/result/CalendarParsedResult.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "date.charAt(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 134,
      "startColumnNumber" : 31,
      "endLineNumber" : 134,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 134,
        "startColumnNumber" : 13,
        "endLineNumber" : 134,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Character.isDigit(date.charAt(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 46
      },
      "nodeContext" : "!Character.isDigit(date.charAt(i))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!Character.isDigit(date.charAt(i))) {\n  throw new IllegalArgumentException();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 133,
        "startColumnNumber" : 34,
        "endLineNumber" : 137,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (!Character.isDigit(date.charAt(i))) {\n    throw new IllegalArgumentException();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 133,
        "startColumnNumber" : 6,
        "endLineNumber" : 137,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < 8; i++) {\n  if (!Character.isDigit(date.charAt(i))) {\n    throw new IllegalArgumentException();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 729,
        "startLineNumber" : 128,
        "startColumnNumber" : 22,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int length=date.length();\n  if (length != 8 && length != 15 && length != 16) {\n    throw new IllegalArgumentException();\n  }\n  for (int i=0; i < 8; i++) {\n    if (!Character.isDigit(date.charAt(i))) {\n      throw new IllegalArgumentException();\n    }\n  }\n  if (length > 8) {\n    if (date.charAt(8) != 'T') {\n      throw new IllegalArgumentException();\n    }\n    for (int i=9; i < 15; i++) {\n      if (!Character.isDigit(date.charAt(i))) {\n        throw new IllegalArgumentException();\n      }\n    }\n    if (length == 16 && date.charAt(15) != 'Z') {\n      throw new IllegalArgumentException();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 747,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (date != null) {\n  int length=date.length();\n  if (length != 8 && length != 15 && length != 16) {\n    throw new IllegalArgumentException();\n  }\n  for (int i=0; i < 8; i++) {\n    if (!Character.isDigit(date.charAt(i))) {\n      throw new IllegalArgumentException();\n    }\n  }\n  if (length > 8) {\n    if (date.charAt(8) != 'T') {\n      throw new IllegalArgumentException();\n    }\n    for (int i=9; i < 15; i++) {\n      if (!Character.isDigit(date.charAt(i))) {\n        throw new IllegalArgumentException();\n      }\n    }\n    if (length == 16 && date.charAt(15) != 'Z') {\n      throw new IllegalArgumentException();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 759,
        "startLineNumber" : 127,
        "startColumnNumber" : 54,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (date != null) {\n    int length=date.length();\n    if (length != 8 && length != 15 && length != 16) {\n      throw new IllegalArgumentException();\n    }\n    for (int i=0; i < 8; i++) {\n      if (!Character.isDigit(date.charAt(i))) {\n        throw new IllegalArgumentException();\n      }\n    }\n    if (length > 8) {\n      if (date.charAt(8) != 'T') {\n        throw new IllegalArgumentException();\n      }\n      for (int i=9; i < 15; i++) {\n        if (!Character.isDigit(date.charAt(i))) {\n          throw new IllegalArgumentException();\n        }\n      }\n      if (length == 16 && date.charAt(15) != 'Z') {\n        throw new IllegalArgumentException();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1041,
        "startLineNumber" : 121,
        "startColumnNumber" : 2,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * RFC 2445 allows the start and end fields to be of type DATE (e.g. 20081021) or DATE-TIME (e.g. 20081021T123000 for local time, or 20081021T123000Z for UTC).\n * @param date The string to validate\n */\nprivate static void validateDate(CharSequence date){\n  if (date != null) {\n    int length=date.length();\n    if (length != 8 && length != 15 && length != 16) {\n      throw new IllegalArgumentException();\n    }\n    for (int i=0; i < 8; i++) {\n      if (!Character.isDigit(date.charAt(i))) {\n        throw new IllegalArgumentException();\n      }\n    }\n    if (length > 8) {\n      if (date.charAt(8) != 'T') {\n        throw new IllegalArgumentException();\n      }\n      for (int i=9; i < 15; i++) {\n        if (!Character.isDigit(date.charAt(i))) {\n          throw new IllegalArgumentException();\n        }\n      }\n      if (length == 16 && date.charAt(15) != 'Z') {\n        throw new IllegalArgumentException();\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 46
      },
      "nodeContext" : "!Character.isDigit(date.charAt(i))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "char"
  }, {
    "nodeContext" : "date.charAt(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 143,
      "startColumnNumber" : 33,
      "endLineNumber" : 143,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 143,
        "startColumnNumber" : 15,
        "endLineNumber" : 143,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Character.isDigit(date.charAt(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 143,
        "startColumnNumber" : 14,
        "endLineNumber" : 143,
        "endColumnNumber" : 48
      },
      "nodeContext" : "!Character.isDigit(date.charAt(i))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 143,
        "startColumnNumber" : 10,
        "endLineNumber" : 145,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (!Character.isDigit(date.charAt(i))) {\n  throw new IllegalArgumentException();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 142,
        "startColumnNumber" : 37,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!Character.isDigit(date.charAt(i))) {\n    throw new IllegalArgumentException();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 142,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=9; i < 15; i++) {\n  if (!Character.isDigit(date.charAt(i))) {\n    throw new IllegalArgumentException();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 138,
        "startColumnNumber" : 22,
        "endLineNumber" : 150,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (date.charAt(8) != 'T') {\n    throw new IllegalArgumentException();\n  }\n  for (int i=9; i < 15; i++) {\n    if (!Character.isDigit(date.charAt(i))) {\n      throw new IllegalArgumentException();\n    }\n  }\n  if (length == 16 && date.charAt(15) != 'Z') {\n    throw new IllegalArgumentException();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 138,
        "startColumnNumber" : 6,
        "endLineNumber" : 150,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (length > 8) {\n  if (date.charAt(8) != 'T') {\n    throw new IllegalArgumentException();\n  }\n  for (int i=9; i < 15; i++) {\n    if (!Character.isDigit(date.charAt(i))) {\n      throw new IllegalArgumentException();\n    }\n  }\n  if (length == 16 && date.charAt(15) != 'Z') {\n    throw new IllegalArgumentException();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 729,
        "startLineNumber" : 128,
        "startColumnNumber" : 22,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int length=date.length();\n  if (length != 8 && length != 15 && length != 16) {\n    throw new IllegalArgumentException();\n  }\n  for (int i=0; i < 8; i++) {\n    if (!Character.isDigit(date.charAt(i))) {\n      throw new IllegalArgumentException();\n    }\n  }\n  if (length > 8) {\n    if (date.charAt(8) != 'T') {\n      throw new IllegalArgumentException();\n    }\n    for (int i=9; i < 15; i++) {\n      if (!Character.isDigit(date.charAt(i))) {\n        throw new IllegalArgumentException();\n      }\n    }\n    if (length == 16 && date.charAt(15) != 'Z') {\n      throw new IllegalArgumentException();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 747,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (date != null) {\n  int length=date.length();\n  if (length != 8 && length != 15 && length != 16) {\n    throw new IllegalArgumentException();\n  }\n  for (int i=0; i < 8; i++) {\n    if (!Character.isDigit(date.charAt(i))) {\n      throw new IllegalArgumentException();\n    }\n  }\n  if (length > 8) {\n    if (date.charAt(8) != 'T') {\n      throw new IllegalArgumentException();\n    }\n    for (int i=9; i < 15; i++) {\n      if (!Character.isDigit(date.charAt(i))) {\n        throw new IllegalArgumentException();\n      }\n    }\n    if (length == 16 && date.charAt(15) != 'Z') {\n      throw new IllegalArgumentException();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 759,
        "startLineNumber" : 127,
        "startColumnNumber" : 54,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (date != null) {\n    int length=date.length();\n    if (length != 8 && length != 15 && length != 16) {\n      throw new IllegalArgumentException();\n    }\n    for (int i=0; i < 8; i++) {\n      if (!Character.isDigit(date.charAt(i))) {\n        throw new IllegalArgumentException();\n      }\n    }\n    if (length > 8) {\n      if (date.charAt(8) != 'T') {\n        throw new IllegalArgumentException();\n      }\n      for (int i=9; i < 15; i++) {\n        if (!Character.isDigit(date.charAt(i))) {\n          throw new IllegalArgumentException();\n        }\n      }\n      if (length == 16 && date.charAt(15) != 'Z') {\n        throw new IllegalArgumentException();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1041,
        "startLineNumber" : 121,
        "startColumnNumber" : 2,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * RFC 2445 allows the start and end fields to be of type DATE (e.g. 20081021) or DATE-TIME (e.g. 20081021T123000 for local time, or 20081021T123000Z for UTC).\n * @param date The string to validate\n */\nprivate static void validateDate(CharSequence date){\n  if (date != null) {\n    int length=date.length();\n    if (length != 8 && length != 15 && length != 16) {\n      throw new IllegalArgumentException();\n    }\n    for (int i=0; i < 8; i++) {\n      if (!Character.isDigit(date.charAt(i))) {\n        throw new IllegalArgumentException();\n      }\n    }\n    if (length > 8) {\n      if (date.charAt(8) != 'T') {\n        throw new IllegalArgumentException();\n      }\n      for (int i=9; i < 15; i++) {\n        if (!Character.isDigit(date.charAt(i))) {\n          throw new IllegalArgumentException();\n        }\n      }\n      if (length == 16 && date.charAt(15) != 'Z') {\n        throw new IllegalArgumentException();\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 143,
        "startColumnNumber" : 14,
        "endLineNumber" : 143,
        "endColumnNumber" : 48
      },
      "nodeContext" : "!Character.isDigit(date.charAt(i))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 134,
    "startColumnNumber" : 31,
    "endLineNumber" : 134,
    "endColumnNumber" : 45
  }, {
    "charLength" : 14,
    "startLineNumber" : 143,
    "startColumnNumber" : 33,
    "endLineNumber" : 143,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  } ]
}