{
  "id" : 364,
  "expression" : "getWidth()",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/view/component/CustomLineNumbersPage.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getWidth()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 178,
      "startColumnNumber" : 22,
      "endLineNumber" : 178,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 178,
        "startColumnNumber" : 22,
        "endLineNumber" : 178,
        "endColumnNumber" : 51
      },
      "nodeContext" : "getWidth() - RHS_BORDER_WIDTH",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 178,
        "startColumnNumber" : 16,
        "endLineNumber" : 178,
        "endColumnNumber" : 51
      },
      "nodeContext" : "rhs=getWidth() - RHS_BORDER_WIDTH",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 178,
        "startColumnNumber" : 12,
        "endLineNumber" : 178,
        "endColumnNumber" : 52
      },
      "nodeContext" : "int rhs=getWidth() - RHS_BORDER_WIDTH;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4928,
        "startLineNumber" : 162,
        "startColumnNumber" : 50,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 480,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5103,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * @see org.fife.ui.rtextarea.LineNumberList#paintComponent(java.awt.Graphics)\n */\n@Override protected void paintComponent(Graphics g){\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 491,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 178,
        "startColumnNumber" : 12,
        "endLineNumber" : 178,
        "endColumnNumber" : 52
      },
      "nodeContext" : "int rhs=getWidth() - RHS_BORDER_WIDTH;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 178,
    "startColumnNumber" : 22,
    "endLineNumber" : 178,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}