{
  "id" : 385,
  "expression" : "i < sz",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-core/src/main/java/com/ctrip/framework/apollo/core/utils/StringUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < sz",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 319,
      "startColumnNumber" : 20,
      "endLineNumber" : 319,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 319,
        "startColumnNumber" : 4,
        "endLineNumber" : 323,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < sz; i++) {\n  if (Character.isDigit(str.charAt(i)) == false) {\n    return false;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 314,
        "startColumnNumber" : 46,
        "endLineNumber" : 325,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (str == null) {\n    return false;\n  }\n  int sz=str.length();\n  for (int i=0; i < sz; i++) {\n    if (Character.isDigit(str.charAt(i)) == false) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 291,
        "startColumnNumber" : 2,
        "endLineNumber" : 325,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p> Checks if the String contains only unicode digits. A decimal point is not a unicode digit and returns false. </p> <p> <code>null</code> will return <code>false</code>. An empty String (length()=0) will return <code>true</code>. </p> <pre> StringUtils.isNumeric(null)   = false StringUtils.isNumeric(\"\")     = true StringUtils.isNumeric(\"  \")   = false StringUtils.isNumeric(\"123\")  = true StringUtils.isNumeric(\"12 3\") = false StringUtils.isNumeric(\"ab2c\") = false StringUtils.isNumeric(\"12-3\") = false StringUtils.isNumeric(\"12.3\") = false </pre>\n * @param str the String to check, may be null\n * @return <code>true</code> if only contains digits, and is non-null\n */\npublic static boolean isNumeric(String str){\n  if (str == null) {\n    return false;\n  }\n  int sz=str.length();\n  for (int i=0; i < sz; i++) {\n    if (Character.isDigit(str.charAt(i)) == false) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 319,
        "startColumnNumber" : 4,
        "endLineNumber" : 323,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < sz; i++) {\n  if (Character.isDigit(str.charAt(i)) == false) {\n    return false;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 319,
    "startColumnNumber" : 20,
    "endLineNumber" : 319,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}