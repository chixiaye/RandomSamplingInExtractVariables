{
  "id" : 359,
  "expression" : "Collections",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/netty/common/LeastConnsEventLoopChooserFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collections",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 78,
      "startColumnNumber" : 12,
      "endLineNumber" : 78,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 78,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Collections.shuffle(executors,ThreadLocalRandom.current())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 78,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Collections.shuffle(executors,ThreadLocalRandom.current());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1169,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  EventExecutor leastExec=null;\n  int leastValue=Integer.MAX_VALUE;\n  Map<Thread,Integer> connsPer=groupMetrics.connectionsPerEventLoop();\n  Collections.shuffle(executors,ThreadLocalRandom.current());\n  for (  EventExecutor executor : executors) {\n    int value=connsPer.getOrDefault(executor,0);\n    if (value < leastValue) {\n      leastValue=value;\n      leastExec=executor;\n    }\n  }\n  if (leastExec == null) {\n    leastExec=executors.get(0);\n  }\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Chose eventloop: \" + String.valueOf(leastExec) + \", leastValue=\"+ leastValue+ \", connsPer=\"+ String.valueOf(connsPer));\n  }\n  return leastExec;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1222,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private EventExecutor chooseWithLeastConns(){\n  EventExecutor leastExec=null;\n  int leastValue=Integer.MAX_VALUE;\n  Map<Thread,Integer> connsPer=groupMetrics.connectionsPerEventLoop();\n  Collections.shuffle(executors,ThreadLocalRandom.current());\n  for (  EventExecutor executor : executors) {\n    int value=connsPer.getOrDefault(executor,0);\n    if (value < leastValue) {\n      leastValue=value;\n      leastExec=executor;\n    }\n  }\n  if (leastExec == null) {\n    leastExec=executors.get(0);\n  }\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Chose eventloop: \" + String.valueOf(leastExec) + \", leastValue=\"+ leastValue+ \", connsPer=\"+ String.valueOf(connsPer));\n  }\n  return leastExec;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 78,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Collections.shuffle(executors,ThreadLocalRandom.current());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Collections"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 78,
    "startColumnNumber" : 12,
    "endLineNumber" : 78,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}