{
  "id" : 111,
  "expression" : "revealInfoAnimator",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/circularreveal/CircularRevealCompat.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "revealInfoAnimator",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 74,
      "startColumnNumber" : 23,
      "endLineNumber" : 74,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 74,
        "endColumnNumber" : 66
      },
      "nodeContext" : "set.playTogether(revealInfoAnimator,circularRevealAnimator)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 74,
        "endColumnNumber" : 67
      },
      "nodeContext" : "set.playTogether(revealInfoAnimator,circularRevealAnimator);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 61,
        "startColumnNumber" : 51,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RevealInfo revealInfo=view.getRevealInfo();\n  if (revealInfo == null) {\n    throw new IllegalStateException(\"Caller must set a non-null RevealInfo before calling this.\");\n  }\n  float startRadius=revealInfo.radius;\n  Animator circularRevealAnimator=ViewAnimationUtils.createCircularReveal((View)view,(int)centerX,(int)centerY,startRadius,endRadius);\n  AnimatorSet set=new AnimatorSet();\n  set.playTogether(revealInfoAnimator,circularRevealAnimator);\n  return set;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {\n  RevealInfo revealInfo=view.getRevealInfo();\n  if (revealInfo == null) {\n    throw new IllegalStateException(\"Caller must set a non-null RevealInfo before calling this.\");\n  }\n  float startRadius=revealInfo.radius;\n  Animator circularRevealAnimator=ViewAnimationUtils.createCircularReveal((View)view,(int)centerX,(int)centerY,startRadius,endRadius);\n  AnimatorSet set=new AnimatorSet();\n  set.playTogether(revealInfoAnimator,circularRevealAnimator);\n  return set;\n}\n else {\n  return revealInfoAnimator;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1089,
        "startLineNumber" : 54,
        "startColumnNumber" : 80,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Animator revealInfoAnimator=ObjectAnimator.ofObject(view,CircularRevealProperty.CIRCULAR_REVEAL,CircularRevealEvaluator.CIRCULAR_REVEAL,new RevealInfo(centerX,centerY,endRadius));\n  if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {\n    RevealInfo revealInfo=view.getRevealInfo();\n    if (revealInfo == null) {\n      throw new IllegalStateException(\"Caller must set a non-null RevealInfo before calling this.\");\n    }\n    float startRadius=revealInfo.radius;\n    Animator circularRevealAnimator=ViewAnimationUtils.createCircularReveal((View)view,(int)centerX,(int)centerY,startRadius,endRadius);\n    AnimatorSet set=new AnimatorSet();\n    set.playTogether(revealInfoAnimator,circularRevealAnimator);\n    return set;\n  }\n else {\n    return revealInfoAnimator;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1886,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns an Animator to animate a clipping circle. The startRadius will be the current  {@link CircularRevealWidget#getRevealInfo()}'s  {@link RevealInfo#radius} at the start of theanimation. <p>This is meant to be used as a drop-in replacement for  {@link ViewAnimationUtils#createCircularReveal(View,int,int,float,float)}. In pre-L APIs, a backwards compatible version of the Animator will be returned. <p>You must also call  {@link CircularRevealCompat#createCircularRevealListener(CircularRevealWidget)} and add the returnedAnimatorListener to this Animator or preferably to the overall AnimatorSet.\n */\npublic static Animator createCircularReveal(CircularRevealWidget view,float centerX,float centerY,float endRadius){\n  Animator revealInfoAnimator=ObjectAnimator.ofObject(view,CircularRevealProperty.CIRCULAR_REVEAL,CircularRevealEvaluator.CIRCULAR_REVEAL,new RevealInfo(centerX,centerY,endRadius));\n  if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {\n    RevealInfo revealInfo=view.getRevealInfo();\n    if (revealInfo == null) {\n      throw new IllegalStateException(\"Caller must set a non-null RevealInfo before calling this.\");\n    }\n    float startRadius=revealInfo.radius;\n    Animator circularRevealAnimator=ViewAnimationUtils.createCircularReveal((View)view,(int)centerX,(int)centerY,startRadius,endRadius);\n    AnimatorSet set=new AnimatorSet();\n    set.playTogether(revealInfoAnimator,circularRevealAnimator);\n    return set;\n  }\n else {\n    return revealInfoAnimator;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 74,
        "endColumnNumber" : 67
      },
      "nodeContext" : "set.playTogether(revealInfoAnimator,circularRevealAnimator);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.circularreveal.Animator"
  }, {
    "nodeContext" : "revealInfoAnimator",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 77,
      "startColumnNumber" : 13,
      "endLineNumber" : 77,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 77,
        "startColumnNumber" : 6,
        "endLineNumber" : 77,
        "endColumnNumber" : 32
      },
      "nodeContext" : "return revealInfoAnimator;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 76,
        "startColumnNumber" : 11,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return revealInfoAnimator;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {\n  RevealInfo revealInfo=view.getRevealInfo();\n  if (revealInfo == null) {\n    throw new IllegalStateException(\"Caller must set a non-null RevealInfo before calling this.\");\n  }\n  float startRadius=revealInfo.radius;\n  Animator circularRevealAnimator=ViewAnimationUtils.createCircularReveal((View)view,(int)centerX,(int)centerY,startRadius,endRadius);\n  AnimatorSet set=new AnimatorSet();\n  set.playTogether(revealInfoAnimator,circularRevealAnimator);\n  return set;\n}\n else {\n  return revealInfoAnimator;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1089,
        "startLineNumber" : 54,
        "startColumnNumber" : 80,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Animator revealInfoAnimator=ObjectAnimator.ofObject(view,CircularRevealProperty.CIRCULAR_REVEAL,CircularRevealEvaluator.CIRCULAR_REVEAL,new RevealInfo(centerX,centerY,endRadius));\n  if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {\n    RevealInfo revealInfo=view.getRevealInfo();\n    if (revealInfo == null) {\n      throw new IllegalStateException(\"Caller must set a non-null RevealInfo before calling this.\");\n    }\n    float startRadius=revealInfo.radius;\n    Animator circularRevealAnimator=ViewAnimationUtils.createCircularReveal((View)view,(int)centerX,(int)centerY,startRadius,endRadius);\n    AnimatorSet set=new AnimatorSet();\n    set.playTogether(revealInfoAnimator,circularRevealAnimator);\n    return set;\n  }\n else {\n    return revealInfoAnimator;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1886,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns an Animator to animate a clipping circle. The startRadius will be the current  {@link CircularRevealWidget#getRevealInfo()}'s  {@link RevealInfo#radius} at the start of theanimation. <p>This is meant to be used as a drop-in replacement for  {@link ViewAnimationUtils#createCircularReveal(View,int,int,float,float)}. In pre-L APIs, a backwards compatible version of the Animator will be returned. <p>You must also call  {@link CircularRevealCompat#createCircularRevealListener(CircularRevealWidget)} and add the returnedAnimatorListener to this Animator or preferably to the overall AnimatorSet.\n */\npublic static Animator createCircularReveal(CircularRevealWidget view,float centerX,float centerY,float endRadius){\n  Animator revealInfoAnimator=ObjectAnimator.ofObject(view,CircularRevealProperty.CIRCULAR_REVEAL,CircularRevealEvaluator.CIRCULAR_REVEAL,new RevealInfo(centerX,centerY,endRadius));\n  if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {\n    RevealInfo revealInfo=view.getRevealInfo();\n    if (revealInfo == null) {\n      throw new IllegalStateException(\"Caller must set a non-null RevealInfo before calling this.\");\n    }\n    float startRadius=revealInfo.radius;\n    Animator circularRevealAnimator=ViewAnimationUtils.createCircularReveal((View)view,(int)centerX,(int)centerY,startRadius,endRadius);\n    AnimatorSet set=new AnimatorSet();\n    set.playTogether(revealInfoAnimator,circularRevealAnimator);\n    return set;\n  }\n else {\n    return revealInfoAnimator;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 77,
        "startColumnNumber" : 6,
        "endLineNumber" : 77,
        "endColumnNumber" : 32
      },
      "nodeContext" : "return revealInfoAnimator;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.circularreveal.Animator"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 74,
    "startColumnNumber" : 23,
    "endLineNumber" : 74,
    "endColumnNumber" : 41
  }, {
    "charLength" : 18,
    "startLineNumber" : 77,
    "startColumnNumber" : 13,
    "endLineNumber" : 77,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}