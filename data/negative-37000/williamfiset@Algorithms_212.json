{
  "id" : 212,
  "expression" : "dp[k][n][LEFT]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/dp/examples/narrowartgallery/NarrowArtGalleryRecursive.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dp[k][n][LEFT]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 51,
      "startColumnNumber" : 15,
      "endLineNumber" : 51,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 30
      },
      "nodeContext" : "return dp[k][n][LEFT];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (s) {\ncase LEFT:  return dp[k][n][LEFT];\ncase RIGHT:return dp[k][n][RIGHT];\ndefault:return dp[k][n][NEITHER];\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 780,
        "startLineNumber" : 30,
        "startColumnNumber" : 36,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (n < 0)   return INF;\n  if (k <= 0)   return 0;\n  if (dp[k][n][s] != null)   return dp[k][n][s];\n  dp[k][n][LEFT]=min(f(k - 1,n - 1,LEFT) + g(n - 2,LEFT),f(k,n - 1,LEFT));\n  dp[k][n][RIGHT]=min(f(k - 1,n - 1,RIGHT) + g(n - 2,RIGHT),f(k,n - 1,RIGHT));\n  dp[k][n][NEITHER]=min(f(k - 1,n - 1,LEFT),f(k - 1,n - 1,RIGHT),f(k - 1,n - 1,NEITHER));\nswitch (s) {\ncase LEFT:    return dp[k][n][LEFT];\ncase RIGHT:  return dp[k][n][RIGHT];\ndefault:return dp[k][n][NEITHER];\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 814,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static int f(int k,int n,int s){\n  if (n < 0)   return INF;\n  if (k <= 0)   return 0;\n  if (dp[k][n][s] != null)   return dp[k][n][s];\n  dp[k][n][LEFT]=min(f(k - 1,n - 1,LEFT) + g(n - 2,LEFT),f(k,n - 1,LEFT));\n  dp[k][n][RIGHT]=min(f(k - 1,n - 1,RIGHT) + g(n - 2,RIGHT),f(k,n - 1,RIGHT));\n  dp[k][n][NEITHER]=min(f(k - 1,n - 1,LEFT),f(k - 1,n - 1,RIGHT),f(k - 1,n - 1,NEITHER));\nswitch (s) {\ncase LEFT:    return dp[k][n][LEFT];\ncase RIGHT:  return dp[k][n][RIGHT];\ndefault:return dp[k][n][NEITHER];\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 30
      },
      "nodeContext" : "return dp[k][n][LEFT];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 51,
    "startColumnNumber" : 15,
    "endLineNumber" : 51,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}