{
  "id" : 332,
  "expression" : "H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,true))",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/webrtc/HardwareVideoEncoderFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,true))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 119,
      "startLineNumber" : 109,
      "startColumnNumber" : 30,
      "endLineNumber" : 110,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 11,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 109,
        "startColumnNumber" : 14,
        "endLineNumber" : 110,
        "endColumnNumber" : 90
      },
      "nodeContext" : "isHighProfile=H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,true))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 110,
        "endColumnNumber" : 91
      },
      "nodeContext" : "boolean isHighProfile=H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,true));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 487,
        "startLineNumber" : 108,
        "startColumnNumber" : 41,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean isHighProfile=H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,true));\n  boolean isBaselineProfile=H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,false));\n  if (!isHighProfile && !isBaselineProfile) {\n    return null;\n  }\n  if (isHighProfile && !isH264HighProfileSupported(info)) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 524,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (type == VideoCodecMimeType.H264) {\n  boolean isHighProfile=H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,true));\n  boolean isBaselineProfile=H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,false));\n  if (!isHighProfile && !isBaselineProfile) {\n    return null;\n  }\n  if (isHighProfile && !isH264HighProfileSupported(info)) {\n    return null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 88,
        "startColumnNumber" : 58,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {\n    return null;\n  }\n  VideoCodecMimeType type=VideoCodecMimeType.valueOf(input.name);\n  MediaCodecInfo info=findCodecForType(type);\n  if (info == null) {\n    return null;\n  }\n  String codecName=info.getName();\n  String mime=type.mimeType();\n  Integer surfaceColorFormat=MediaCodecUtils.selectColorFormat(MediaCodecUtils.TEXTURE_COLOR_FORMATS,info.getCapabilitiesForType(mime));\n  Integer yuvColorFormat=MediaCodecUtils.selectColorFormat(MediaCodecUtils.ENCODER_COLOR_FORMATS,info.getCapabilitiesForType(mime));\n  if (type == VideoCodecMimeType.H264) {\n    boolean isHighProfile=H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,true));\n    boolean isBaselineProfile=H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,false));\n    if (!isHighProfile && !isBaselineProfile) {\n      return null;\n    }\n    if (isHighProfile && !isH264HighProfileSupported(info)) {\n      return null;\n    }\n  }\n  return new HardwareVideoEncoder(new MediaCodecWrapperFactoryImpl(),codecName,type,surfaceColorFormat,yuvColorFormat,input.params,getKeyFrameIntervalSec(type),getForcedKeyFrameIntervalMs(type,codecName),createBitrateAdjuster(type,codecName),sharedContext);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1600,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public VideoEncoder createEncoder(VideoCodecInfo input){\n  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {\n    return null;\n  }\n  VideoCodecMimeType type=VideoCodecMimeType.valueOf(input.name);\n  MediaCodecInfo info=findCodecForType(type);\n  if (info == null) {\n    return null;\n  }\n  String codecName=info.getName();\n  String mime=type.mimeType();\n  Integer surfaceColorFormat=MediaCodecUtils.selectColorFormat(MediaCodecUtils.TEXTURE_COLOR_FORMATS,info.getCapabilitiesForType(mime));\n  Integer yuvColorFormat=MediaCodecUtils.selectColorFormat(MediaCodecUtils.ENCODER_COLOR_FORMATS,info.getCapabilitiesForType(mime));\n  if (type == VideoCodecMimeType.H264) {\n    boolean isHighProfile=H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,true));\n    boolean isBaselineProfile=H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,false));\n    if (!isHighProfile && !isBaselineProfile) {\n      return null;\n    }\n    if (isHighProfile && !isH264HighProfileSupported(info)) {\n      return null;\n    }\n  }\n  return new HardwareVideoEncoder(new MediaCodecWrapperFactoryImpl(),codecName,type,surfaceColorFormat,yuvColorFormat,input.params,getKeyFrameIntervalSec(type),getForcedKeyFrameIntervalMs(type,codecName),createBitrateAdjuster(type,codecName),sharedContext);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 110,
        "endColumnNumber" : 91
      },
      "nodeContext" : "boolean isHighProfile=H264Utils.isSameH264Profile(input.params,MediaCodecUtils.getCodecProperties(type,true));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 8,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 119,
    "startLineNumber" : 109,
    "startColumnNumber" : 30,
    "endLineNumber" : 110,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}