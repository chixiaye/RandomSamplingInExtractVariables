{
  "id" : 473,
  "expression" : "xDiff * xDiff + yDiff * yDiff",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/zxing/common/detector/MathUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "xDiff * xDiff + yDiff * yDiff",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 50,
      "startColumnNumber" : 29,
      "endLineNumber" : 50,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 50,
        "startColumnNumber" : 19,
        "endLineNumber" : 50,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Math.sqrt(xDiff * xDiff + yDiff * yDiff)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 50,
        "startColumnNumber" : 11,
        "endLineNumber" : 50,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(float)Math.sqrt(xDiff * xDiff + yDiff * yDiff)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 60
      },
      "nodeContext" : "return (float)Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 47,
        "startColumnNumber" : 71,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  double xDiff=aX - bX;\n  double yDiff=aY - bY;\n  return (float)Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param aX point A x coordinate\n * @param aY point A y coordinate\n * @param bX point B x coordinate\n * @param bY point B y coordinate\n * @return Euclidean distance between points A and B\n */\npublic static float distance(float aX,float aY,float bX,float bY){\n  double xDiff=aX - bX;\n  double yDiff=aY - bY;\n  return (float)Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 46,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 60
      },
      "nodeContext" : "return (float)Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 50,
    "startColumnNumber" : 29,
    "endLineNumber" : 50,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}