{
  "id" : 183,
  "expression" : "chunk",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/filter/ZuulFilterChainRunner.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "chunk",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 100,
      "startColumnNumber" : 84,
      "endLineNumber" : 100,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 100,
        "startColumnNumber" : 49,
        "endLineNumber" : 100,
        "endColumnNumber" : 90
      },
      "nodeContext" : "filter.processContentChunk(inMesg,chunk)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 100,
        "startColumnNumber" : 38,
        "endLineNumber" : 100,
        "endColumnNumber" : 90
      },
      "nodeContext" : "newChunk=filter.processContentChunk(inMesg,chunk)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 100,
        "endColumnNumber" : 91
      },
      "nodeContext" : "final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 99,
        "startColumnNumber" : 85,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n  if (newChunk == null) {\n    return;\n  }\n  if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n    chunk.release(chunk.refCnt());\n  }\n  chunk=newChunk;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 628,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n  final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n  if (newChunk == null) {\n    return;\n  }\n  if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n    chunk.release(chunk.refCnt());\n  }\n  chunk=newChunk;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 96,
        "startColumnNumber" : 44,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final ZuulFilter<T,T> filter=filters[i];\n  filterName=filter.filterName();\n  if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n    final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n    if (newChunk == null) {\n      return;\n    }\n    if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n      chunk.release(chunk.refCnt());\n    }\n    chunk=newChunk;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < limit; i++) {\n  final ZuulFilter<T,T> filter=filters[i];\n  filterName=filter.filterName();\n  if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n    final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n    if (newChunk == null) {\n      return;\n    }\n    if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n      chunk.release(chunk.refCnt());\n    }\n    chunk=newChunk;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2647,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2745,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n catch (Exception ex) {\n  handleException(inMesg,filterName,ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 233,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2794,
        "startLineNumber" : 89,
        "startColumnNumber" : 52,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2856,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void filter(T inMesg,HttpContent chunk){\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 100,
        "endColumnNumber" : 91
      },
      "nodeContext" : "final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.netty.filter.HttpContent"
  }, {
    "nodeContext" : "chunk",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 106,
      "startColumnNumber" : 37,
      "endLineNumber" : 106,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 106,
        "startColumnNumber" : 25,
        "endLineNumber" : 106,
        "endColumnNumber" : 42
      },
      "nodeContext" : "newChunk != chunk",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 106,
        "startColumnNumber" : 24,
        "endLineNumber" : 106,
        "endColumnNumber" : 43
      },
      "nodeContext" : "(newChunk != chunk)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 106,
        "startColumnNumber" : 24,
        "endLineNumber" : 106,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(newChunk != chunk) && (chunk.refCnt() > 0)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 106,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n  chunk.release(chunk.refCnt());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 99,
        "startColumnNumber" : 85,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n  if (newChunk == null) {\n    return;\n  }\n  if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n    chunk.release(chunk.refCnt());\n  }\n  chunk=newChunk;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 628,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n  final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n  if (newChunk == null) {\n    return;\n  }\n  if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n    chunk.release(chunk.refCnt());\n  }\n  chunk=newChunk;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 96,
        "startColumnNumber" : 44,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final ZuulFilter<T,T> filter=filters[i];\n  filterName=filter.filterName();\n  if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n    final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n    if (newChunk == null) {\n      return;\n    }\n    if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n      chunk.release(chunk.refCnt());\n    }\n    chunk=newChunk;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < limit; i++) {\n  final ZuulFilter<T,T> filter=filters[i];\n  filterName=filter.filterName();\n  if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n    final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n    if (newChunk == null) {\n      return;\n    }\n    if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n      chunk.release(chunk.refCnt());\n    }\n    chunk=newChunk;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2647,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2745,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n catch (Exception ex) {\n  handleException(inMesg,filterName,ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 233,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2794,
        "startLineNumber" : 89,
        "startColumnNumber" : 52,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2856,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void filter(T inMesg,HttpContent chunk){\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 106,
        "startColumnNumber" : 24,
        "endLineNumber" : 106,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(newChunk != chunk) && (chunk.refCnt() > 0)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.netty.filter.HttpContent"
  }, {
    "nodeContext" : "chunk",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 106,
      "startColumnNumber" : 48,
      "endLineNumber" : 106,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 106,
        "startColumnNumber" : 48,
        "endLineNumber" : 106,
        "endColumnNumber" : 62
      },
      "nodeContext" : "chunk.refCnt()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 106,
        "startColumnNumber" : 48,
        "endLineNumber" : 106,
        "endColumnNumber" : 66
      },
      "nodeContext" : "chunk.refCnt() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 106,
        "startColumnNumber" : 47,
        "endLineNumber" : 106,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(chunk.refCnt() > 0)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 106,
        "startColumnNumber" : 24,
        "endLineNumber" : 106,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(newChunk != chunk) && (chunk.refCnt() > 0)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 106,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n  chunk.release(chunk.refCnt());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 99,
        "startColumnNumber" : 85,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n  if (newChunk == null) {\n    return;\n  }\n  if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n    chunk.release(chunk.refCnt());\n  }\n  chunk=newChunk;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 628,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n  final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n  if (newChunk == null) {\n    return;\n  }\n  if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n    chunk.release(chunk.refCnt());\n  }\n  chunk=newChunk;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 96,
        "startColumnNumber" : 44,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final ZuulFilter<T,T> filter=filters[i];\n  filterName=filter.filterName();\n  if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n    final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n    if (newChunk == null) {\n      return;\n    }\n    if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n      chunk.release(chunk.refCnt());\n    }\n    chunk=newChunk;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < limit; i++) {\n  final ZuulFilter<T,T> filter=filters[i];\n  filterName=filter.filterName();\n  if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n    final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n    if (newChunk == null) {\n      return;\n    }\n    if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n      chunk.release(chunk.refCnt());\n    }\n    chunk=newChunk;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2647,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2745,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n catch (Exception ex) {\n  handleException(inMesg,filterName,ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 233,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2794,
        "startLineNumber" : 89,
        "startColumnNumber" : 52,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2856,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void filter(T inMesg,HttpContent chunk){\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 106,
        "startColumnNumber" : 24,
        "endLineNumber" : 106,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(newChunk != chunk) && (chunk.refCnt() > 0)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.netty.filter.HttpContent"
  }, {
    "nodeContext" : "chunk",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 107,
      "startColumnNumber" : 24,
      "endLineNumber" : 107,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 107,
        "startColumnNumber" : 24,
        "endLineNumber" : 107,
        "endColumnNumber" : 53
      },
      "nodeContext" : "chunk.release(chunk.refCnt())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 107,
        "startColumnNumber" : 24,
        "endLineNumber" : 107,
        "endColumnNumber" : 54
      },
      "nodeContext" : "chunk.release(chunk.refCnt());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 106,
        "startColumnNumber" : 69,
        "endLineNumber" : 108,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  chunk.release(chunk.refCnt());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 106,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n  chunk.release(chunk.refCnt());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 99,
        "startColumnNumber" : 85,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n  if (newChunk == null) {\n    return;\n  }\n  if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n    chunk.release(chunk.refCnt());\n  }\n  chunk=newChunk;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 628,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n  final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n  if (newChunk == null) {\n    return;\n  }\n  if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n    chunk.release(chunk.refCnt());\n  }\n  chunk=newChunk;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 96,
        "startColumnNumber" : 44,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final ZuulFilter<T,T> filter=filters[i];\n  filterName=filter.filterName();\n  if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n    final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n    if (newChunk == null) {\n      return;\n    }\n    if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n      chunk.release(chunk.refCnt());\n    }\n    chunk=newChunk;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < limit; i++) {\n  final ZuulFilter<T,T> filter=filters[i];\n  filterName=filter.filterName();\n  if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n    final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n    if (newChunk == null) {\n      return;\n    }\n    if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n      chunk.release(chunk.refCnt());\n    }\n    chunk=newChunk;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2647,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2745,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n catch (Exception ex) {\n  handleException(inMesg,filterName,ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 233,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2794,
        "startLineNumber" : 89,
        "startColumnNumber" : 52,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2856,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void filter(T inMesg,HttpContent chunk){\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 107,
        "startColumnNumber" : 24,
        "endLineNumber" : 107,
        "endColumnNumber" : 54
      },
      "nodeContext" : "chunk.release(chunk.refCnt());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.netty.filter.HttpContent"
  }, {
    "nodeContext" : "chunk",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 107,
      "startColumnNumber" : 38,
      "endLineNumber" : 107,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 107,
        "startColumnNumber" : 38,
        "endLineNumber" : 107,
        "endColumnNumber" : 52
      },
      "nodeContext" : "chunk.refCnt()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 107,
        "startColumnNumber" : 24,
        "endLineNumber" : 107,
        "endColumnNumber" : 53
      },
      "nodeContext" : "chunk.release(chunk.refCnt())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 107,
        "startColumnNumber" : 24,
        "endLineNumber" : 107,
        "endColumnNumber" : 54
      },
      "nodeContext" : "chunk.release(chunk.refCnt());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 106,
        "startColumnNumber" : 69,
        "endLineNumber" : 108,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  chunk.release(chunk.refCnt());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 106,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n  chunk.release(chunk.refCnt());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 99,
        "startColumnNumber" : 85,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n  if (newChunk == null) {\n    return;\n  }\n  if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n    chunk.release(chunk.refCnt());\n  }\n  chunk=newChunk;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 628,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n  final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n  if (newChunk == null) {\n    return;\n  }\n  if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n    chunk.release(chunk.refCnt());\n  }\n  chunk=newChunk;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 96,
        "startColumnNumber" : 44,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final ZuulFilter<T,T> filter=filters[i];\n  filterName=filter.filterName();\n  if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n    final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n    if (newChunk == null) {\n      return;\n    }\n    if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n      chunk.release(chunk.refCnt());\n    }\n    chunk=newChunk;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < limit; i++) {\n  final ZuulFilter<T,T> filter=filters[i];\n  filterName=filter.filterName();\n  if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n    final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n    if (newChunk == null) {\n      return;\n    }\n    if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n      chunk.release(chunk.refCnt());\n    }\n    chunk=newChunk;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2647,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2745,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n catch (Exception ex) {\n  handleException(inMesg,filterName,ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 233,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2794,
        "startLineNumber" : 89,
        "startColumnNumber" : 52,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2856,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void filter(T inMesg,HttpContent chunk){\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 107,
        "startColumnNumber" : 24,
        "endLineNumber" : 107,
        "endColumnNumber" : 54
      },
      "nodeContext" : "chunk.release(chunk.refCnt());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.netty.filter.HttpContent"
  }, {
    "nodeContext" : "chunk",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 115,
      "startColumnNumber" : 40,
      "endLineNumber" : 115,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 115,
        "startColumnNumber" : 16,
        "endLineNumber" : 115,
        "endColumnNumber" : 46
      },
      "nodeContext" : "invokeNextStage(inMesg,chunk)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 115,
        "startColumnNumber" : 16,
        "endLineNumber" : 115,
        "endColumnNumber" : 47
      },
      "nodeContext" : "invokeNextStage(inMesg,chunk);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 113,
        "startColumnNumber" : 41,
        "endLineNumber" : 116,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  invokeNextStage(inMesg,chunk);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1605,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (limit >= filters.length) {\n  invokeNextStage(inMesg,chunk);\n}\n else {\n  inMesg.bufferBodyContents(chunk);\n  boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n  if (isAwaitingBody) {\n    CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n    if (inMesg.hasCompleteBody()) {\n      if (inMesg instanceof HttpRequestMessage) {\n        passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n      }\n else       if (inMesg instanceof HttpResponseMessage) {\n        passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n      }\n    }\n else {\n      if (inMesg instanceof HttpRequestMessage) {\n        passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n      }\n else       if (inMesg instanceof HttpResponseMessage) {\n        passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n      }\n    }\n  }\n  if (isAwaitingBody && inMesg.hasCompleteBody()) {\n    runFilters(inMesg,runningFilterIdx);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 109,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2647,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2745,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n catch (Exception ex) {\n  handleException(inMesg,filterName,ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 233,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2794,
        "startLineNumber" : 89,
        "startColumnNumber" : 52,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2856,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void filter(T inMesg,HttpContent chunk){\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 115,
        "startColumnNumber" : 16,
        "endLineNumber" : 115,
        "endColumnNumber" : 47
      },
      "nodeContext" : "invokeNextStage(inMesg,chunk);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.netty.filter.HttpContent"
  }, {
    "nodeContext" : "chunk",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 117,
      "startColumnNumber" : 42,
      "endLineNumber" : 117,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 117,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 48
      },
      "nodeContext" : "inMesg.bufferBodyContents(chunk)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 117,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 49
      },
      "nodeContext" : "inMesg.bufferBodyContents(chunk);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1429,
        "startLineNumber" : 116,
        "startColumnNumber" : 19,
        "endLineNumber" : 144,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  inMesg.bufferBodyContents(chunk);\n  boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n  if (isAwaitingBody) {\n    CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n    if (inMesg.hasCompleteBody()) {\n      if (inMesg instanceof HttpRequestMessage) {\n        passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n      }\n else       if (inMesg instanceof HttpResponseMessage) {\n        passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n      }\n    }\n else {\n      if (inMesg instanceof HttpRequestMessage) {\n        passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n      }\n else       if (inMesg instanceof HttpResponseMessage) {\n        passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n      }\n    }\n  }\n  if (isAwaitingBody && inMesg.hasCompleteBody()) {\n    runFilters(inMesg,runningFilterIdx);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1605,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (limit >= filters.length) {\n  invokeNextStage(inMesg,chunk);\n}\n else {\n  inMesg.bufferBodyContents(chunk);\n  boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n  if (isAwaitingBody) {\n    CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n    if (inMesg.hasCompleteBody()) {\n      if (inMesg instanceof HttpRequestMessage) {\n        passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n      }\n else       if (inMesg instanceof HttpResponseMessage) {\n        passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n      }\n    }\n else {\n      if (inMesg instanceof HttpRequestMessage) {\n        passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n      }\n else       if (inMesg instanceof HttpResponseMessage) {\n        passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n      }\n    }\n  }\n  if (isAwaitingBody && inMesg.hasCompleteBody()) {\n    runFilters(inMesg,runningFilterIdx);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 109,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2647,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2745,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Preconditions.checkNotNull(inMesg,\"input message\");\n  final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n  final int limit=runningFilterIdx.get();\n  for (int i=0; i < limit; i++) {\n    final ZuulFilter<T,T> filter=filters[i];\n    filterName=filter.filterName();\n    if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n      final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n      if (newChunk == null) {\n        return;\n      }\n      if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n        chunk.release(chunk.refCnt());\n      }\n      chunk=newChunk;\n    }\n  }\n  if (limit >= filters.length) {\n    invokeNextStage(inMesg,chunk);\n  }\n else {\n    inMesg.bufferBodyContents(chunk);\n    boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n    if (isAwaitingBody) {\n      CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n      if (inMesg.hasCompleteBody()) {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n        }\n      }\n else {\n        if (inMesg instanceof HttpRequestMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n        }\n else         if (inMesg instanceof HttpResponseMessage) {\n          passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n        }\n      }\n    }\n    if (isAwaitingBody && inMesg.hasCompleteBody()) {\n      runFilters(inMesg,runningFilterIdx);\n    }\n  }\n}\n catch (Exception ex) {\n  handleException(inMesg,filterName,ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 233,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2794,
        "startLineNumber" : 89,
        "startColumnNumber" : 52,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2856,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void filter(T inMesg,HttpContent chunk){\n  String filterName=\"-\";\n  try {\n    Preconditions.checkNotNull(inMesg,\"input message\");\n    final AtomicInteger runningFilterIdx=getRunningFilterIndex(inMesg);\n    final int limit=runningFilterIdx.get();\n    for (int i=0; i < limit; i++) {\n      final ZuulFilter<T,T> filter=filters[i];\n      filterName=filter.filterName();\n      if ((!filter.isDisabled()) && (!shouldSkipFilter(inMesg,filter))) {\n        final HttpContent newChunk=filter.processContentChunk(inMesg,chunk);\n        if (newChunk == null) {\n          return;\n        }\n        if ((newChunk != chunk) && (chunk.refCnt() > 0)) {\n          chunk.release(chunk.refCnt());\n        }\n        chunk=newChunk;\n      }\n    }\n    if (limit >= filters.length) {\n      invokeNextStage(inMesg,chunk);\n    }\n else {\n      inMesg.bufferBodyContents(chunk);\n      boolean isAwaitingBody=isFilterAwaitingBody(inMesg);\n      if (isAwaitingBody) {\n        CurrentPassport passport=CurrentPassport.fromSessionContext(inMesg.getContext());\n        if (inMesg.hasCompleteBody()) {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_END);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_END);\n          }\n        }\n else {\n          if (inMesg instanceof HttpRequestMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_INBOUND_BUF_START);\n          }\n else           if (inMesg instanceof HttpResponseMessage) {\n            passport.addIfNotAlready(PassportState.FILTERS_OUTBOUND_BUF_START);\n          }\n        }\n      }\n      if (isAwaitingBody && inMesg.hasCompleteBody()) {\n        runFilters(inMesg,runningFilterIdx);\n      }\n    }\n  }\n catch (  Exception ex) {\n    handleException(inMesg,filterName,ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 117,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 49
      },
      "nodeContext" : "inMesg.bufferBodyContents(chunk);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.netty.filter.HttpContent"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 100,
    "startColumnNumber" : 84,
    "endLineNumber" : 100,
    "endColumnNumber" : 89
  }, {
    "charLength" : 5,
    "startLineNumber" : 106,
    "startColumnNumber" : 37,
    "endLineNumber" : 106,
    "endColumnNumber" : 42
  }, {
    "charLength" : 5,
    "startLineNumber" : 106,
    "startColumnNumber" : 48,
    "endLineNumber" : 106,
    "endColumnNumber" : 53
  }, {
    "charLength" : 5,
    "startLineNumber" : 107,
    "startColumnNumber" : 24,
    "endLineNumber" : 107,
    "endColumnNumber" : 29
  }, {
    "charLength" : 5,
    "startLineNumber" : 107,
    "startColumnNumber" : 38,
    "endLineNumber" : 107,
    "endColumnNumber" : 43
  }, {
    "charLength" : 5,
    "startLineNumber" : 115,
    "startColumnNumber" : 40,
    "endLineNumber" : 115,
    "endColumnNumber" : 45
  }, {
    "charLength" : 5,
    "startLineNumber" : 117,
    "startColumnNumber" : 42,
    "endLineNumber" : 117,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  } ]
}