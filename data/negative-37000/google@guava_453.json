{
  "id" : 453,
  "expression" : "input.charAt(i)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/hash/AbstractNonStreamingHashFunction.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "input.charAt(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 61,
      "startColumnNumber" : 21,
      "endLineNumber" : 61,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 37
      },
      "nodeContext" : "buffer.putChar(input.charAt(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 38
      },
      "nodeContext" : "buffer.putChar(input.charAt(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 60,
        "startColumnNumber" : 34,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  buffer.putChar(input.charAt(i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < len; i++) {\n  buffer.putChar(input.charAt(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 57,
        "startColumnNumber" : 57,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int len=input.length();\n  ByteBuffer buffer=ByteBuffer.allocate(len * 2).order(ByteOrder.LITTLE_ENDIAN);\n  for (int i=0; i < len; i++) {\n    buffer.putChar(input.charAt(i));\n  }\n  return hashBytes(buffer.array());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public HashCode hashUnencodedChars(CharSequence input){\n  int len=input.length();\n  ByteBuffer buffer=ByteBuffer.allocate(len * 2).order(ByteOrder.LITTLE_ENDIAN);\n  for (int i=0; i < len; i++) {\n    buffer.putChar(input.charAt(i));\n  }\n  return hashBytes(buffer.array());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 38
      },
      "nodeContext" : "buffer.putChar(input.charAt(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 61,
    "startColumnNumber" : 21,
    "endLineNumber" : 61,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}