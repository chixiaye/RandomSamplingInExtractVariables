{
  "id" : 427,
  "expression" : "asSet(SERVER_A,SERVER_B)",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-client/src/test/java/com/netflix/eureka2/client/resolver/StaticServerResolverTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "asSet(SERVER_A,SERVER_B)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 21,
      "startColumnNumber" : 31,
      "endLineNumber" : 21,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 21,
        "startColumnNumber" : 20,
        "endLineNumber" : 21,
        "endColumnNumber" : 56
      },
      "nodeContext" : "expected=asSet(SERVER_A,SERVER_B)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Set<Server> expected=asSet(SERVER_A,SERVER_B);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 18,
        "startColumnNumber" : 62,
        "endLineNumber" : 25,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ServerResolver resolver=ServerResolvers.from(SERVER_A,SERVER_B);\n  Set<Server> expected=asSet(SERVER_A,SERVER_B);\n  Set<Server> actual=asSet(takeNext(resolver),takeNext(resolver));\n  assertThat(expected,is(equalTo(actual)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testResolvesFromServerList() throws Exception {\n  ServerResolver resolver=ServerResolvers.from(SERVER_A,SERVER_B);\n  Set<Server> expected=asSet(SERVER_A,SERVER_B);\n  Set<Server> actual=asSet(takeNext(resolver),takeNext(resolver));\n  assertThat(expected,is(equalTo(actual)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Set<Server> expected=asSet(SERVER_A,SERVER_B);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.util.HashSet<com.netflix.eureka2.client.resolver.ServerResolver.Server>"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 21,
    "startColumnNumber" : 31,
    "endLineNumber" : 21,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}