{
  "id" : 167,
  "expression" : "1",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/OpFindNewest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 128,
      "startColumnNumber" : 30,
      "endLineNumber" : 128,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 128,
        "startColumnNumber" : 22,
        "endLineNumber" : 128,
        "endColumnNumber" : 31
      },
      "nodeContext" : "mid() - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 128,
        "startColumnNumber" : 16,
        "endLineNumber" : 128,
        "endColumnNumber" : 31
      },
      "nodeContext" : "max=mid() - 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 128,
        "startColumnNumber" : 16,
        "endLineNumber" : 128,
        "endColumnNumber" : 32
      },
      "nodeContext" : "max=mid() - 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 126,
        "startColumnNumber" : 19,
        "endLineNumber" : 129,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  max=mid() - 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (condition.apply(entry)) {\n  lastMatchedPosition=position;\n  min=mid();\n}\n else {\n  max=mid() - 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 137,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (state) {\ncase checkFirst:  if (!condition.apply(entry)) {\n    callback.findEntryComplete(null,OpFindNewest.this.ctx);\n    return;\n  }\n else {\n    lastMatchedPosition=position;\n    state=State.checkLast;\n    PositionImpl lastPosition=ledger.getLastPosition();\n    searchPosition=ledger.getPositionAfterN(searchPosition,max,PositionBound.startExcluded);\n    if (lastPosition.compareTo(searchPosition) < 0) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"first position {} matches, last should be {}, but moving to lastPos {}\",position,searchPosition,lastPosition);\n      }\n      searchPosition=lastPosition;\n    }\n    find();\n  }\nbreak;\ncase checkLast:if (condition.apply(entry)) {\ncallback.findEntryComplete(position,OpFindNewest.this.ctx);\nreturn;\n}\n else {\nstate=State.searching;\nsearchPosition=ledger.getPositionAfterN(startPosition,mid(),PositionBound.startExcluded);\nfind();\n}\nbreak;\ncase searching:if (condition.apply(entry)) {\nlastMatchedPosition=position;\nmin=mid();\n}\n else {\nmax=mid() - 1;\n}\nif (max <= min) {\ncallback.findEntryComplete(lastMatchedPosition,OpFindNewest.this.ctx);\nreturn;\n}\nsearchPosition=ledger.getPositionAfterN(startPosition,mid(),PositionBound.startExcluded);\nfind();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 176,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2272,
        "startLineNumber" : 85,
        "startColumnNumber" : 59,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Position position=entry.getPosition();\nswitch (state) {\ncase checkFirst:    if (!condition.apply(entry)) {\n      callback.findEntryComplete(null,OpFindNewest.this.ctx);\n      return;\n    }\n else {\n      lastMatchedPosition=position;\n      state=State.checkLast;\n      PositionImpl lastPosition=ledger.getLastPosition();\n      searchPosition=ledger.getPositionAfterN(searchPosition,max,PositionBound.startExcluded);\n      if (lastPosition.compareTo(searchPosition) < 0) {\n        if (log.isDebugEnabled()) {\n          log.debug(\"first position {} matches, last should be {}, but moving to lastPos {}\",position,searchPosition,lastPosition);\n        }\n        searchPosition=lastPosition;\n      }\n      find();\n    }\n  break;\ncase checkLast:if (condition.apply(entry)) {\n  callback.findEntryComplete(position,OpFindNewest.this.ctx);\n  return;\n}\n else {\n  state=State.searching;\n  searchPosition=ledger.getPositionAfterN(startPosition,mid(),PositionBound.startExcluded);\n  find();\n}\nbreak;\ncase searching:if (condition.apply(entry)) {\nlastMatchedPosition=position;\nmin=mid();\n}\n else {\nmax=mid() - 1;\n}\nif (max <= min) {\ncallback.findEntryComplete(lastMatchedPosition,OpFindNewest.this.ctx);\nreturn;\n}\nsearchPosition=ledger.getPositionAfterN(startPosition,mid(),PositionBound.startExcluded);\nfind();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2341,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void readEntryComplete(Entry entry,Object ctx){\n  final Position position=entry.getPosition();\nswitch (state) {\ncase checkFirst:    if (!condition.apply(entry)) {\n      callback.findEntryComplete(null,OpFindNewest.this.ctx);\n      return;\n    }\n else {\n      lastMatchedPosition=position;\n      state=State.checkLast;\n      PositionImpl lastPosition=ledger.getLastPosition();\n      searchPosition=ledger.getPositionAfterN(searchPosition,max,PositionBound.startExcluded);\n      if (lastPosition.compareTo(searchPosition) < 0) {\n        if (log.isDebugEnabled()) {\n          log.debug(\"first position {} matches, last should be {}, but moving to lastPos {}\",position,searchPosition,lastPosition);\n        }\n        searchPosition=lastPosition;\n      }\n      find();\n    }\n  break;\ncase checkLast:if (condition.apply(entry)) {\n  callback.findEntryComplete(position,OpFindNewest.this.ctx);\n  return;\n}\n else {\n  state=State.searching;\n  searchPosition=ledger.getPositionAfterN(startPosition,mid(),PositionBound.startExcluded);\n  find();\n}\nbreak;\ncase searching:if (condition.apply(entry)) {\nlastMatchedPosition=position;\nmin=mid();\n}\n else {\nmax=mid() - 1;\n}\nif (max <= min) {\ncallback.findEntryComplete(lastMatchedPosition,OpFindNewest.this.ctx);\nreturn;\n}\nsearchPosition=ledger.getPositionAfterN(startPosition,mid(),PositionBound.startExcluded);\nfind();\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 128,
        "startColumnNumber" : 16,
        "endLineNumber" : 128,
        "endColumnNumber" : 32
      },
      "nodeContext" : "max=mid() - 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 128,
    "startColumnNumber" : 30,
    "endLineNumber" : 128,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}