{
  "id" : 1,
  "expression" : "Assert",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/MapTest2.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 15,
      "startColumnNumber" : 0,
      "endLineNumber" : 15,
      "endColumnNumber" : 6
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 15,
        "startColumnNumber" : 0,
        "endLineNumber" : 15,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Assert.assertEquals(\"2\",map.get(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 15,
        "startColumnNumber" : 0,
        "endLineNumber" : 15,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Assert.assertEquals(\"2\",map.get(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 13,
        "startColumnNumber" : 45,
        "endLineNumber" : 18,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=JSON.parseObject(\"{1:\\\"2\\\",\\\"3\\\":4,'5':6}\",new TypeReference<Map<Object,Object>>(){\n  }\n);\n  Assert.assertEquals(\"2\",map.get(1));\n  Assert.assertEquals(4,map.get(\"3\"));\n  Assert.assertEquals(6,map.get(\"5\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_map() throws Exception {\n  Map<Object,Object> map=JSON.parseObject(\"{1:\\\"2\\\",\\\"3\\\":4,'5':6}\",new TypeReference<Map<Object,Object>>(){\n  }\n);\n  Assert.assertEquals(\"2\",map.get(1));\n  Assert.assertEquals(4,map.get(\"3\"));\n  Assert.assertEquals(6,map.get(\"5\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 15,
        "startColumnNumber" : 0,
        "endLineNumber" : 15,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Assert.assertEquals(\"2\",map.get(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 16,
      "startColumnNumber" : 0,
      "endLineNumber" : 16,
      "endColumnNumber" : 6
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 16,
        "startColumnNumber" : 0,
        "endLineNumber" : 16,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Assert.assertEquals(4,map.get(\"3\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 16,
        "startColumnNumber" : 0,
        "endLineNumber" : 16,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Assert.assertEquals(4,map.get(\"3\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 13,
        "startColumnNumber" : 45,
        "endLineNumber" : 18,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=JSON.parseObject(\"{1:\\\"2\\\",\\\"3\\\":4,'5':6}\",new TypeReference<Map<Object,Object>>(){\n  }\n);\n  Assert.assertEquals(\"2\",map.get(1));\n  Assert.assertEquals(4,map.get(\"3\"));\n  Assert.assertEquals(6,map.get(\"5\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_map() throws Exception {\n  Map<Object,Object> map=JSON.parseObject(\"{1:\\\"2\\\",\\\"3\\\":4,'5':6}\",new TypeReference<Map<Object,Object>>(){\n  }\n);\n  Assert.assertEquals(\"2\",map.get(1));\n  Assert.assertEquals(4,map.get(\"3\"));\n  Assert.assertEquals(6,map.get(\"5\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 16,
        "startColumnNumber" : 0,
        "endLineNumber" : 16,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Assert.assertEquals(4,map.get(\"3\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 17,
      "startColumnNumber" : 0,
      "endLineNumber" : 17,
      "endColumnNumber" : 6
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 17,
        "startColumnNumber" : 0,
        "endLineNumber" : 17,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Assert.assertEquals(6,map.get(\"5\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 17,
        "startColumnNumber" : 0,
        "endLineNumber" : 17,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Assert.assertEquals(6,map.get(\"5\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 13,
        "startColumnNumber" : 45,
        "endLineNumber" : 18,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=JSON.parseObject(\"{1:\\\"2\\\",\\\"3\\\":4,'5':6}\",new TypeReference<Map<Object,Object>>(){\n  }\n);\n  Assert.assertEquals(\"2\",map.get(1));\n  Assert.assertEquals(4,map.get(\"3\"));\n  Assert.assertEquals(6,map.get(\"5\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_map() throws Exception {\n  Map<Object,Object> map=JSON.parseObject(\"{1:\\\"2\\\",\\\"3\\\":4,'5':6}\",new TypeReference<Map<Object,Object>>(){\n  }\n);\n  Assert.assertEquals(\"2\",map.get(1));\n  Assert.assertEquals(4,map.get(\"3\"));\n  Assert.assertEquals(6,map.get(\"5\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 17,
        "startColumnNumber" : 0,
        "endLineNumber" : 17,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Assert.assertEquals(6,map.get(\"5\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 15,
    "startColumnNumber" : 0,
    "endLineNumber" : 15,
    "endColumnNumber" : 6
  }, {
    "charLength" : 6,
    "startLineNumber" : 16,
    "startColumnNumber" : 0,
    "endLineNumber" : 16,
    "endColumnNumber" : 6
  }, {
    "charLength" : 6,
    "startLineNumber" : 17,
    "startColumnNumber" : 0,
    "endLineNumber" : 17,
    "endColumnNumber" : 6
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}