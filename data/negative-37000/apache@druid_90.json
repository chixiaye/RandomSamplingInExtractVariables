{
  "id" : 90,
  "expression" : "Objects.equals(sha256OfSortedSegmentIds,that.sha256OfSortedSegmentIds)",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-service/src/main/java/org/apache/druid/indexing/common/task/CompactionIntervalSpec.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Objects.equals(sha256OfSortedSegmentIds,that.sha256OfSortedSegmentIds)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 71,
      "startLineNumber" : 108,
      "startColumnNumber" : 11,
      "endLineNumber" : 108,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 107,
        "startColumnNumber" : 11,
        "endLineNumber" : 108,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Objects.equals(interval,that.interval) && Objects.equals(sha256OfSortedSegmentIds,that.sha256OfSortedSegmentIds)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 83
      },
      "nodeContext" : "return Objects.equals(interval,that.interval) && Objects.equals(sha256OfSortedSegmentIds,that.sha256OfSortedSegmentIds);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 328,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (this == o) {\n    return true;\n  }\n  if (o == null || getClass() != o.getClass()) {\n    return false;\n  }\n  CompactionIntervalSpec that=(CompactionIntervalSpec)o;\n  return Objects.equals(interval,that.interval) && Objects.equals(sha256OfSortedSegmentIds,that.sha256OfSortedSegmentIds);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean equals(Object o){\n  if (this == o) {\n    return true;\n  }\n  if (o == null || getClass() != o.getClass()) {\n    return false;\n  }\n  CompactionIntervalSpec that=(CompactionIntervalSpec)o;\n  return Objects.equals(interval,that.interval) && Objects.equals(sha256OfSortedSegmentIds,that.sha256OfSortedSegmentIds);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 57,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 107,
        "startColumnNumber" : 11,
        "endLineNumber" : 108,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Objects.equals(interval,that.interval) && Objects.equals(sha256OfSortedSegmentIds,that.sha256OfSortedSegmentIds)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 71,
    "startLineNumber" : 108,
    "startColumnNumber" : 11,
    "endLineNumber" : 108,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}