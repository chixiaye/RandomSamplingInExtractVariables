{
  "id" : 417,
  "expression" : "\"filter\"",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/test/java/com/netflix/zuul/scriptManager/FilterVerifierTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"filter\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 146,
      "startColumnNumber" : 50,
      "endLineNumber" : 146,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertEquals(filterInfo1.getFilterName(),\"filter\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertEquals(filterInfo1.getFilterName(),\"filter\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 666,
        "startLineNumber" : 141,
        "startColumnNumber" : 46,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FilterInfo filterInfo1=FilterVerifier.INSTANCE.verifyFilter(sGoodGroovyScriptFilter);\n  assertNotNull(filterInfo1);\n  assertEquals(filterInfo1.getFilterID(),\"null:filter:in\");\n  assertEquals(filterInfo1.getFilterType(),FilterType.INBOUND);\n  assertEquals(filterInfo1.getFilterName(),\"filter\");\n  assertFalse(filterInfo1.isActive());\n  assertFalse(filterInfo1.isCanary());\n  assertThrows(InstantiationException.class,() -> FilterVerifier.INSTANCE.verifyFilter(sNotZuulFilterGroovy));\n  assertThrows(CompilationFailedException.class,() -> FilterVerifier.INSTANCE.verifyFilter(sCompileFailCode));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testVerify() throws Exception {\n  FilterInfo filterInfo1=FilterVerifier.INSTANCE.verifyFilter(sGoodGroovyScriptFilter);\n  assertNotNull(filterInfo1);\n  assertEquals(filterInfo1.getFilterID(),\"null:filter:in\");\n  assertEquals(filterInfo1.getFilterType(),FilterType.INBOUND);\n  assertEquals(filterInfo1.getFilterName(),\"filter\");\n  assertFalse(filterInfo1.isActive());\n  assertFalse(filterInfo1.isCanary());\n  assertThrows(InstantiationException.class,() -> FilterVerifier.INSTANCE.verifyFilter(sNotZuulFilterGroovy));\n  assertThrows(CompilationFailedException.class,() -> FilterVerifier.INSTANCE.verifyFilter(sCompileFailCode));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertEquals(filterInfo1.getFilterName(),\"filter\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 146,
    "startColumnNumber" : 50,
    "endLineNumber" : 146,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}