{
  "id" : 407,
  "expression" : "\"   VALUES 2 \"",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/sql/planner/TestOrderBy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"   VALUES 2 \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 89,
      "startColumnNumber" : 24,
      "endLineNumber" : 89,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 86,
        "startColumnNumber" : 19,
        "endLineNumber" : 91,
        "endColumnNumber" : 27
      },
      "nodeContext" : "\"SELECT * FROM (\" + \"   VALUES 1 \" + \"   UNION ALL \"+ \"   VALUES 2 \"+ \"   ORDER BY 1 \"+ \")\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertPlan(\"SELECT * FROM (\" + \"   VALUES 1 \" + \"   UNION ALL \"+ \"   VALUES 2 \"+ \"   ORDER BY 1 \"+ \")\",output(node(ExchangeNode.class,node(ValuesNode.class),node(ValuesNode.class))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertPlan(\"SELECT * FROM (\" + \"   VALUES 1 \" + \"   UNION ALL \"+ \"   VALUES 2 \"+ \"   ORDER BY 1 \"+ \")\",output(node(ExchangeNode.class,node(ValuesNode.class),node(ValuesNode.class))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 430,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertPlan(\"SELECT * FROM (\" + \"   VALUES 1 \" + \"   UNION ALL \"+ \"   VALUES 2 \"+ \"   ORDER BY 1 \"+ \")\",output(node(ExchangeNode.class,node(ValuesNode.class),node(ValuesNode.class))));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRedundantOrderByInUnion(){\n  assertPlan(\"SELECT * FROM (\" + \"   VALUES 1 \" + \"   UNION ALL \"+ \"   VALUES 2 \"+ \"   ORDER BY 1 \"+ \")\",output(node(ExchangeNode.class,node(ValuesNode.class),node(ValuesNode.class))));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 86,
        "startColumnNumber" : 19,
        "endLineNumber" : 91,
        "endColumnNumber" : 27
      },
      "nodeContext" : "\"SELECT * FROM (\" + \"   VALUES 1 \" + \"   UNION ALL \"+ \"   VALUES 2 \"+ \"   ORDER BY 1 \"+ \")\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 89,
    "startColumnNumber" : 24,
    "endLineNumber" : 89,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}