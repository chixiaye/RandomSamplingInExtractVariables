{
  "id" : 426,
  "expression" : "Character",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/common/src/main/java/com/alibaba/nacos/common/utils/NumberUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Character",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 37,
      "startColumnNumber" : 17,
      "endLineNumber" : 37,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 37,
        "startColumnNumber" : 17,
        "endLineNumber" : 37,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Character.isDigit(input.charAt(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 37,
        "startColumnNumber" : 16,
        "endLineNumber" : 37,
        "endColumnNumber" : 51
      },
      "nodeContext" : "!Character.isDigit(input.charAt(i))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!Character.isDigit(input.charAt(i))) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 36,
        "startColumnNumber" : 49,
        "endLineNumber" : 40,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!Character.isDigit(input.charAt(i))) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < input.length(); i++) {\n  if (!Character.isDigit(input.charAt(i))) {\n    return false;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 32,
        "startColumnNumber" : 49,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isEmpty(input)) {\n    return false;\n  }\n  for (int i=0; i < input.length(); i++) {\n    if (!Character.isDigit(input.charAt(i))) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Whether all chars of input string is digit.\n * @param input {@code String} checked\n * @return {@code true} if all chars is digit, otherwise false\n */\npublic static boolean isDigits(String input){\n  if (StringUtils.isEmpty(input)) {\n    return false;\n  }\n  for (int i=0; i < input.length(); i++) {\n    if (!Character.isDigit(input.charAt(i))) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 37,
        "startColumnNumber" : 16,
        "endLineNumber" : 37,
        "endColumnNumber" : 51
      },
      "nodeContext" : "!Character.isDigit(input.charAt(i))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Character"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 37,
    "startColumnNumber" : 17,
    "endLineNumber" : 37,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}