{
  "id" : 111,
  "expression" : "String",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-client/src/main/java/com/ctrip/framework/apollo/ds/ApolloDataSourceProvider.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 52,
      "startColumnNumber" : 26,
      "endLineNumber" : 52,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 52,
        "startColumnNumber" : 26,
        "endLineNumber" : 52,
        "endColumnNumber" : 112
      },
      "nodeContext" : "String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 113
      },
      "nodeContext" : "m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 114
      },
      "nodeContext" : "m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 49,
        "startColumnNumber" : 32,
        "endLineNumber" : 59,
        "endColumnNumber" : 10
      },
      "nodeContext" : "{\n  String content=file.getContent();\n  m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n  try {\n    m_def=DefaultSaxParser.parse(content);\n  }\n catch (  Exception e) {\n    throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 655,
        "startLineNumber" : 49,
        "startColumnNumber" : 9,
        "endLineNumber" : 62,
        "endColumnNumber" : 10
      },
      "nodeContext" : "if (file.hasContent()) {\n  String content=file.getContent();\n  m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n  try {\n    m_def=DefaultSaxParser.parse(content);\n  }\n catch (  Exception e) {\n    throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n  }\n}\n else {\n  m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n  m_def=new DataSourcesDef();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 44,
        "startColumnNumber" : 25,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n  String appId=Foundation.app().getAppId();\n  String envType=Foundation.server().getEnvType();\n  if (file.hasContent()) {\n    String content=file.getContent();\n    m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    try {\n      m_def=DefaultSaxParser.parse(content);\n    }\n catch (    Exception e) {\n      throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n    }\n  }\n else {\n    m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    m_def=new DataSourcesDef();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 44,
        "startColumnNumber" : 6,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (m_def == null) {\n  ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n  String appId=Foundation.app().getAppId();\n  String envType=Foundation.server().getEnvType();\n  if (file.hasContent()) {\n    String content=file.getContent();\n    m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    try {\n      m_def=DefaultSaxParser.parse(content);\n    }\n catch (    Exception e) {\n      throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n    }\n  }\n else {\n    m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    m_def=new DataSourcesDef();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 934,
        "startLineNumber" : 43,
        "startColumnNumber" : 45,
        "endLineNumber" : 66,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (m_def == null) {\n    ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n    String appId=Foundation.app().getAppId();\n    String envType=Foundation.server().getEnvType();\n    if (file.hasContent()) {\n      String content=file.getContent();\n      m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      try {\n        m_def=DefaultSaxParser.parse(content);\n      }\n catch (      Exception e) {\n        throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n      }\n    }\n else {\n      m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      m_def=new DataSourcesDef();\n    }\n  }\n  return m_def;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 42,
        "startColumnNumber" : 3,
        "endLineNumber" : 66,
        "endColumnNumber" : 4
      },
      "nodeContext" : "@Override public DataSourcesDef defineDatasources(){\n  if (m_def == null) {\n    ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n    String appId=Foundation.app().getAppId();\n    String envType=Foundation.server().getEnvType();\n    if (file.hasContent()) {\n      String content=file.getContent();\n      m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      try {\n        m_def=DefaultSaxParser.parse(content);\n      }\n catch (      Exception e) {\n        throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n      }\n    }\n else {\n      m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      m_def=new DataSourcesDef();\n    }\n  }\n  return m_def;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 114
      },
      "nodeContext" : "m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "String",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 57,
      "startColumnNumber" : 47,
      "endLineNumber" : 57,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 57,
        "startColumnNumber" : 47,
        "endLineNumber" : 57,
        "endColumnNumber" : 146
      },
      "nodeContext" : "String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 57,
        "startColumnNumber" : 21,
        "endLineNumber" : 57,
        "endColumnNumber" : 150
      },
      "nodeContext" : "new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 57,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 151
      },
      "nodeContext" : "throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 56,
        "startColumnNumber" : 34,
        "endLineNumber" : 58,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 56,
        "startColumnNumber" : 14,
        "endLineNumber" : 58,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (Exception e) {\n  throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  m_def=DefaultSaxParser.parse(content);\n}\n catch (Exception e) {\n  throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 49,
        "startColumnNumber" : 32,
        "endLineNumber" : 59,
        "endColumnNumber" : 10
      },
      "nodeContext" : "{\n  String content=file.getContent();\n  m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n  try {\n    m_def=DefaultSaxParser.parse(content);\n  }\n catch (  Exception e) {\n    throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 655,
        "startLineNumber" : 49,
        "startColumnNumber" : 9,
        "endLineNumber" : 62,
        "endColumnNumber" : 10
      },
      "nodeContext" : "if (file.hasContent()) {\n  String content=file.getContent();\n  m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n  try {\n    m_def=DefaultSaxParser.parse(content);\n  }\n catch (  Exception e) {\n    throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n  }\n}\n else {\n  m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n  m_def=new DataSourcesDef();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 44,
        "startColumnNumber" : 25,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n  String appId=Foundation.app().getAppId();\n  String envType=Foundation.server().getEnvType();\n  if (file.hasContent()) {\n    String content=file.getContent();\n    m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    try {\n      m_def=DefaultSaxParser.parse(content);\n    }\n catch (    Exception e) {\n      throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n    }\n  }\n else {\n    m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    m_def=new DataSourcesDef();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 44,
        "startColumnNumber" : 6,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (m_def == null) {\n  ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n  String appId=Foundation.app().getAppId();\n  String envType=Foundation.server().getEnvType();\n  if (file.hasContent()) {\n    String content=file.getContent();\n    m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    try {\n      m_def=DefaultSaxParser.parse(content);\n    }\n catch (    Exception e) {\n      throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n    }\n  }\n else {\n    m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    m_def=new DataSourcesDef();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 934,
        "startLineNumber" : 43,
        "startColumnNumber" : 45,
        "endLineNumber" : 66,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (m_def == null) {\n    ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n    String appId=Foundation.app().getAppId();\n    String envType=Foundation.server().getEnvType();\n    if (file.hasContent()) {\n      String content=file.getContent();\n      m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      try {\n        m_def=DefaultSaxParser.parse(content);\n      }\n catch (      Exception e) {\n        throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n      }\n    }\n else {\n      m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      m_def=new DataSourcesDef();\n    }\n  }\n  return m_def;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 42,
        "startColumnNumber" : 3,
        "endLineNumber" : 66,
        "endColumnNumber" : 4
      },
      "nodeContext" : "@Override public DataSourcesDef defineDatasources(){\n  if (m_def == null) {\n    ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n    String appId=Foundation.app().getAppId();\n    String envType=Foundation.server().getEnvType();\n    if (file.hasContent()) {\n      String content=file.getContent();\n      m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      try {\n        m_def=DefaultSaxParser.parse(content);\n      }\n catch (      Exception e) {\n        throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n      }\n    }\n else {\n      m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      m_def=new DataSourcesDef();\n    }\n  }\n  return m_def;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 57,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 151
      },
      "nodeContext" : "throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "String",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 60,
      "startColumnNumber" : 26,
      "endLineNumber" : 60,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 60,
        "startColumnNumber" : 26,
        "endLineNumber" : 60,
        "endColumnNumber" : 116
      },
      "nodeContext" : "String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 117
      },
      "nodeContext" : "m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 118
      },
      "nodeContext" : "m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 62,
        "endColumnNumber" : 10
      },
      "nodeContext" : "{\n  m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n  m_def=new DataSourcesDef();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 655,
        "startLineNumber" : 49,
        "startColumnNumber" : 9,
        "endLineNumber" : 62,
        "endColumnNumber" : 10
      },
      "nodeContext" : "if (file.hasContent()) {\n  String content=file.getContent();\n  m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n  try {\n    m_def=DefaultSaxParser.parse(content);\n  }\n catch (  Exception e) {\n    throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n  }\n}\n else {\n  m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n  m_def=new DataSourcesDef();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 44,
        "startColumnNumber" : 25,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n  String appId=Foundation.app().getAppId();\n  String envType=Foundation.server().getEnvType();\n  if (file.hasContent()) {\n    String content=file.getContent();\n    m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    try {\n      m_def=DefaultSaxParser.parse(content);\n    }\n catch (    Exception e) {\n      throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n    }\n  }\n else {\n    m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    m_def=new DataSourcesDef();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 44,
        "startColumnNumber" : 6,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (m_def == null) {\n  ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n  String appId=Foundation.app().getAppId();\n  String envType=Foundation.server().getEnvType();\n  if (file.hasContent()) {\n    String content=file.getContent();\n    m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    try {\n      m_def=DefaultSaxParser.parse(content);\n    }\n catch (    Exception e) {\n      throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n    }\n  }\n else {\n    m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    m_def=new DataSourcesDef();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 934,
        "startLineNumber" : 43,
        "startColumnNumber" : 45,
        "endLineNumber" : 66,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (m_def == null) {\n    ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n    String appId=Foundation.app().getAppId();\n    String envType=Foundation.server().getEnvType();\n    if (file.hasContent()) {\n      String content=file.getContent();\n      m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      try {\n        m_def=DefaultSaxParser.parse(content);\n      }\n catch (      Exception e) {\n        throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n      }\n    }\n else {\n      m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      m_def=new DataSourcesDef();\n    }\n  }\n  return m_def;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 42,
        "startColumnNumber" : 3,
        "endLineNumber" : 66,
        "endColumnNumber" : 4
      },
      "nodeContext" : "@Override public DataSourcesDef defineDatasources(){\n  if (m_def == null) {\n    ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n    String appId=Foundation.app().getAppId();\n    String envType=Foundation.server().getEnvType();\n    if (file.hasContent()) {\n      String content=file.getContent();\n      m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      try {\n        m_def=DefaultSaxParser.parse(content);\n      }\n catch (      Exception e) {\n        throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n      }\n    }\n else {\n      m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      m_def=new DataSourcesDef();\n    }\n  }\n  return m_def;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 118
      },
      "nodeContext" : "m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 52,
    "startColumnNumber" : 26,
    "endLineNumber" : 52,
    "endColumnNumber" : 32
  }, {
    "charLength" : 6,
    "startLineNumber" : 57,
    "startColumnNumber" : 47,
    "endLineNumber" : 57,
    "endColumnNumber" : 53
  }, {
    "charLength" : 6,
    "startLineNumber" : 60,
    "startColumnNumber" : 26,
    "endLineNumber" : 60,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}