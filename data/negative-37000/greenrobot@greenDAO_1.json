{
  "id" : 1,
  "expression" : "pkForQuery",
  "projectName" : "greenrobot@greenDAO",
  "commitID" : "bdaad7806db3e4db0ec5cc73835576e0aa9067a0",
  "filePath" : "/DaoBase/src/de/greenrobot/dao/test/AbstractDaoTestSinglePk.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pkForQuery",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 167,
      "startColumnNumber" : 32,
      "endLineNumber" : 167,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 167,
        "startColumnNumber" : 19,
        "endLineNumber" : 167,
        "endColumnNumber" : 43
      },
      "nodeContext" : "createEntity(pkForQuery)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 44
      },
      "nodeContext" : "dao.insert(createEntity(pkForQuery))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 45
      },
      "nodeContext" : "dao.insert(createEntity(pkForQuery));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 164,
        "startColumnNumber" : 28,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  dao.insert(createEntityWithRandomPk());\n  K pkForQuery=nextPk();\n  dao.insert(createEntity(pkForQuery));\n  dao.insert(createEntityWithRandomPk());\n  String where=\"WHERE \" + dao.getPkColumns()[0] + \"=?\";\n  List<T> list=dao.query(where,pkForQuery.toString());\n  assertEquals(1,list.size());\n  assertEquals(pkForQuery,daoAccess.getPrimaryKeyValue(list.get(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testQuery(){\n  dao.insert(createEntityWithRandomPk());\n  K pkForQuery=nextPk();\n  dao.insert(createEntity(pkForQuery));\n  dao.insert(createEntityWithRandomPk());\n  String where=\"WHERE \" + dao.getPkColumns()[0] + \"=?\";\n  List<T> list=dao.query(where,pkForQuery.toString());\n  assertEquals(1,list.size());\n  assertEquals(pkForQuery,daoAccess.getPrimaryKeyValue(list.get(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 45
      },
      "nodeContext" : "dao.insert(createEntity(pkForQuery));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "K"
  }, {
    "nodeContext" : "pkForQuery",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 171,
      "startColumnNumber" : 40,
      "endLineNumber" : 171,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 171,
        "startColumnNumber" : 40,
        "endLineNumber" : 171,
        "endColumnNumber" : 61
      },
      "nodeContext" : "pkForQuery.toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 171,
        "startColumnNumber" : 23,
        "endLineNumber" : 171,
        "endColumnNumber" : 62
      },
      "nodeContext" : "dao.query(where,pkForQuery.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 171,
        "startColumnNumber" : 16,
        "endLineNumber" : 171,
        "endColumnNumber" : 62
      },
      "nodeContext" : "list=dao.query(where,pkForQuery.toString())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 171,
        "startColumnNumber" : 8,
        "endLineNumber" : 171,
        "endColumnNumber" : 63
      },
      "nodeContext" : "List<T> list=dao.query(where,pkForQuery.toString());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 164,
        "startColumnNumber" : 28,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  dao.insert(createEntityWithRandomPk());\n  K pkForQuery=nextPk();\n  dao.insert(createEntity(pkForQuery));\n  dao.insert(createEntityWithRandomPk());\n  String where=\"WHERE \" + dao.getPkColumns()[0] + \"=?\";\n  List<T> list=dao.query(where,pkForQuery.toString());\n  assertEquals(1,list.size());\n  assertEquals(pkForQuery,daoAccess.getPrimaryKeyValue(list.get(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testQuery(){\n  dao.insert(createEntityWithRandomPk());\n  K pkForQuery=nextPk();\n  dao.insert(createEntity(pkForQuery));\n  dao.insert(createEntityWithRandomPk());\n  String where=\"WHERE \" + dao.getPkColumns()[0] + \"=?\";\n  List<T> list=dao.query(where,pkForQuery.toString());\n  assertEquals(1,list.size());\n  assertEquals(pkForQuery,daoAccess.getPrimaryKeyValue(list.get(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 171,
        "startColumnNumber" : 8,
        "endLineNumber" : 171,
        "endColumnNumber" : 63
      },
      "nodeContext" : "List<T> list=dao.query(where,pkForQuery.toString());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "K"
  }, {
    "nodeContext" : "pkForQuery",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 173,
      "startColumnNumber" : 21,
      "endLineNumber" : 173,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(pkForQuery,daoAccess.getPrimaryKeyValue(list.get(0)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(pkForQuery,daoAccess.getPrimaryKeyValue(list.get(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 164,
        "startColumnNumber" : 28,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  dao.insert(createEntityWithRandomPk());\n  K pkForQuery=nextPk();\n  dao.insert(createEntity(pkForQuery));\n  dao.insert(createEntityWithRandomPk());\n  String where=\"WHERE \" + dao.getPkColumns()[0] + \"=?\";\n  List<T> list=dao.query(where,pkForQuery.toString());\n  assertEquals(1,list.size());\n  assertEquals(pkForQuery,daoAccess.getPrimaryKeyValue(list.get(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testQuery(){\n  dao.insert(createEntityWithRandomPk());\n  K pkForQuery=nextPk();\n  dao.insert(createEntity(pkForQuery));\n  dao.insert(createEntityWithRandomPk());\n  String where=\"WHERE \" + dao.getPkColumns()[0] + \"=?\";\n  List<T> list=dao.query(where,pkForQuery.toString());\n  assertEquals(1,list.size());\n  assertEquals(pkForQuery,daoAccess.getPrimaryKeyValue(list.get(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(pkForQuery,daoAccess.getPrimaryKeyValue(list.get(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "K"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 167,
    "startColumnNumber" : 32,
    "endLineNumber" : 167,
    "endColumnNumber" : 42
  }, {
    "charLength" : 10,
    "startLineNumber" : 171,
    "startColumnNumber" : 40,
    "endLineNumber" : 171,
    "endColumnNumber" : 50
  }, {
    "charLength" : 10,
    "startLineNumber" : 173,
    "startColumnNumber" : 21,
    "endLineNumber" : 173,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}