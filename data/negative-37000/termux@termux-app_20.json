{
  "id" : 20,
  "expression" : "canonicalFile",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/app/TermuxService.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "canonicalFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 252,
      "startColumnNumber" : 24,
      "endLineNumber" : 252,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 252,
        "startColumnNumber" : 24,
        "endLineNumber" : 252,
        "endColumnNumber" : 46
      },
      "nodeContext" : "canonicalFile.isFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 252,
        "startColumnNumber" : 24,
        "endLineNumber" : 252,
        "endColumnNumber" : 76
      },
      "nodeContext" : "canonicalFile.isFile() && canonicalFile.canExecute()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 252,
        "startColumnNumber" : 20,
        "endLineNumber" : 256,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n  executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n}\n else {\n  Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 250,
        "startColumnNumber" : 20,
        "endLineNumber" : 257,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  File canonicalFile=shell.getCanonicalFile();\n  if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n    executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n  }\n else {\n    Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 259,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  File canonicalFile=shell.getCanonicalFile();\n  if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n    executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n  }\n else {\n    Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n  }\n}\n catch (IOException e) {\n  Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 249,
        "startColumnNumber" : 32,
        "endLineNumber" : 260,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try {\n    File canonicalFile=shell.getCanonicalFile();\n    if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n      executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n    }\n else {\n      Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n    }\n  }\n catch (  IOException e) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 260,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (shell.exists()) {\n  try {\n    File canonicalFile=shell.getCanonicalFile();\n    if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n      executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n    }\n else {\n      Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n    }\n  }\n catch (  IOException e) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1454,
        "startLineNumber" : 247,
        "startColumnNumber" : 36,
        "endLineNumber" : 278,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File shell=new File(HOME_PATH,\".termux/shell\");\n  if (shell.exists()) {\n    try {\n      File canonicalFile=shell.getCanonicalFile();\n      if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n        executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n      }\n else {\n        Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n      }\n    }\n catch (    IOException e) {\n      Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n    }\n  }\n  if (executablePath == null) {\n    for (    String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n      File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n      if (shellFile.canExecute()) {\n        executablePath=shellFile.getAbsolutePath();\n        break;\n      }\n    }\n  }\n  if (executablePath == null) {\n    executablePath=\"/system/bin/sh\";\n  }\n  isLoginShell=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1482,
        "startLineNumber" : 247,
        "startColumnNumber" : 8,
        "endLineNumber" : 278,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (executablePath == null) {\n  File shell=new File(HOME_PATH,\".termux/shell\");\n  if (shell.exists()) {\n    try {\n      File canonicalFile=shell.getCanonicalFile();\n      if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n        executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n      }\n else {\n        Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n      }\n    }\n catch (    IOException e) {\n      Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n    }\n  }\n  if (executablePath == null) {\n    for (    String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n      File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n      if (shellFile.canExecute()) {\n        executablePath=shellFile.getAbsolutePath();\n        break;\n      }\n    }\n  }\n  if (executablePath == null) {\n    executablePath=\"/system/bin/sh\";\n  }\n  isLoginShell=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2419,
        "startLineNumber" : 239,
        "startColumnNumber" : 111,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  new File(HOME_PATH).mkdirs();\n  if (cwd == null)   cwd=HOME_PATH;\n  String[] env=BackgroundJob.buildEnvironment(failSafe,cwd);\n  boolean isLoginShell=false;\n  if (executablePath == null) {\n    File shell=new File(HOME_PATH,\".termux/shell\");\n    if (shell.exists()) {\n      try {\n        File canonicalFile=shell.getCanonicalFile();\n        if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n          executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n        }\n else {\n          Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n        }\n      }\n catch (      IOException e) {\n        Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n      }\n    }\n    if (executablePath == null) {\n      for (      String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n        File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n        if (shellFile.canExecute()) {\n          executablePath=shellFile.getAbsolutePath();\n          break;\n        }\n      }\n    }\n    if (executablePath == null) {\n      executablePath=\"/system/bin/sh\";\n    }\n    isLoginShell=true;\n  }\n  String[] processArgs=BackgroundJob.setupProcessArgs(executablePath,arguments);\n  executablePath=processArgs[0];\n  int lastSlashIndex=executablePath.lastIndexOf('/');\n  String processName=(isLoginShell ? \"-\" : \"\") + (lastSlashIndex == -1 ? executablePath : executablePath.substring(lastSlashIndex + 1));\n  String[] args=new String[processArgs.length];\n  args[0]=processName;\n  if (processArgs.length > 1)   System.arraycopy(processArgs,1,args,1,processArgs.length - 1);\n  TerminalSession session=new TerminalSession(executablePath,cwd,args,env,this);\n  mTerminalSessions.add(session);\n  updateNotification();\n  return session;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 287,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2526,
        "startLineNumber" : 239,
        "startColumnNumber" : 4,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "TerminalSession createTermSession(String executablePath,String[] arguments,String cwd,boolean failSafe){\n  new File(HOME_PATH).mkdirs();\n  if (cwd == null)   cwd=HOME_PATH;\n  String[] env=BackgroundJob.buildEnvironment(failSafe,cwd);\n  boolean isLoginShell=false;\n  if (executablePath == null) {\n    File shell=new File(HOME_PATH,\".termux/shell\");\n    if (shell.exists()) {\n      try {\n        File canonicalFile=shell.getCanonicalFile();\n        if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n          executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n        }\n else {\n          Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n        }\n      }\n catch (      IOException e) {\n        Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n      }\n    }\n    if (executablePath == null) {\n      for (      String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n        File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n        if (shellFile.canExecute()) {\n          executablePath=shellFile.getAbsolutePath();\n          break;\n        }\n      }\n    }\n    if (executablePath == null) {\n      executablePath=\"/system/bin/sh\";\n    }\n    isLoginShell=true;\n  }\n  String[] processArgs=BackgroundJob.setupProcessArgs(executablePath,arguments);\n  executablePath=processArgs[0];\n  int lastSlashIndex=executablePath.lastIndexOf('/');\n  String processName=(isLoginShell ? \"-\" : \"\") + (lastSlashIndex == -1 ? executablePath : executablePath.substring(lastSlashIndex + 1));\n  String[] args=new String[processArgs.length];\n  args[0]=processName;\n  if (processArgs.length > 1)   System.arraycopy(processArgs,1,args,1,processArgs.length - 1);\n  TerminalSession session=new TerminalSession(executablePath,cwd,args,env,this);\n  mTerminalSessions.add(session);\n  updateNotification();\n  return session;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 308,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 252,
        "startColumnNumber" : 24,
        "endLineNumber" : 252,
        "endColumnNumber" : 76
      },
      "nodeContext" : "canonicalFile.isFile() && canonicalFile.canExecute()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "canonicalFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 252,
      "startColumnNumber" : 50,
      "endLineNumber" : 252,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 252,
        "startColumnNumber" : 50,
        "endLineNumber" : 252,
        "endColumnNumber" : 76
      },
      "nodeContext" : "canonicalFile.canExecute()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 252,
        "startColumnNumber" : 24,
        "endLineNumber" : 252,
        "endColumnNumber" : 76
      },
      "nodeContext" : "canonicalFile.isFile() && canonicalFile.canExecute()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 252,
        "startColumnNumber" : 20,
        "endLineNumber" : 256,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n  executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n}\n else {\n  Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 250,
        "startColumnNumber" : 20,
        "endLineNumber" : 257,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  File canonicalFile=shell.getCanonicalFile();\n  if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n    executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n  }\n else {\n    Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 259,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  File canonicalFile=shell.getCanonicalFile();\n  if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n    executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n  }\n else {\n    Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n  }\n}\n catch (IOException e) {\n  Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 249,
        "startColumnNumber" : 32,
        "endLineNumber" : 260,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try {\n    File canonicalFile=shell.getCanonicalFile();\n    if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n      executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n    }\n else {\n      Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n    }\n  }\n catch (  IOException e) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 260,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (shell.exists()) {\n  try {\n    File canonicalFile=shell.getCanonicalFile();\n    if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n      executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n    }\n else {\n      Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n    }\n  }\n catch (  IOException e) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1454,
        "startLineNumber" : 247,
        "startColumnNumber" : 36,
        "endLineNumber" : 278,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File shell=new File(HOME_PATH,\".termux/shell\");\n  if (shell.exists()) {\n    try {\n      File canonicalFile=shell.getCanonicalFile();\n      if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n        executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n      }\n else {\n        Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n      }\n    }\n catch (    IOException e) {\n      Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n    }\n  }\n  if (executablePath == null) {\n    for (    String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n      File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n      if (shellFile.canExecute()) {\n        executablePath=shellFile.getAbsolutePath();\n        break;\n      }\n    }\n  }\n  if (executablePath == null) {\n    executablePath=\"/system/bin/sh\";\n  }\n  isLoginShell=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1482,
        "startLineNumber" : 247,
        "startColumnNumber" : 8,
        "endLineNumber" : 278,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (executablePath == null) {\n  File shell=new File(HOME_PATH,\".termux/shell\");\n  if (shell.exists()) {\n    try {\n      File canonicalFile=shell.getCanonicalFile();\n      if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n        executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n      }\n else {\n        Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n      }\n    }\n catch (    IOException e) {\n      Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n    }\n  }\n  if (executablePath == null) {\n    for (    String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n      File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n      if (shellFile.canExecute()) {\n        executablePath=shellFile.getAbsolutePath();\n        break;\n      }\n    }\n  }\n  if (executablePath == null) {\n    executablePath=\"/system/bin/sh\";\n  }\n  isLoginShell=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2419,
        "startLineNumber" : 239,
        "startColumnNumber" : 111,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  new File(HOME_PATH).mkdirs();\n  if (cwd == null)   cwd=HOME_PATH;\n  String[] env=BackgroundJob.buildEnvironment(failSafe,cwd);\n  boolean isLoginShell=false;\n  if (executablePath == null) {\n    File shell=new File(HOME_PATH,\".termux/shell\");\n    if (shell.exists()) {\n      try {\n        File canonicalFile=shell.getCanonicalFile();\n        if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n          executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n        }\n else {\n          Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n        }\n      }\n catch (      IOException e) {\n        Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n      }\n    }\n    if (executablePath == null) {\n      for (      String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n        File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n        if (shellFile.canExecute()) {\n          executablePath=shellFile.getAbsolutePath();\n          break;\n        }\n      }\n    }\n    if (executablePath == null) {\n      executablePath=\"/system/bin/sh\";\n    }\n    isLoginShell=true;\n  }\n  String[] processArgs=BackgroundJob.setupProcessArgs(executablePath,arguments);\n  executablePath=processArgs[0];\n  int lastSlashIndex=executablePath.lastIndexOf('/');\n  String processName=(isLoginShell ? \"-\" : \"\") + (lastSlashIndex == -1 ? executablePath : executablePath.substring(lastSlashIndex + 1));\n  String[] args=new String[processArgs.length];\n  args[0]=processName;\n  if (processArgs.length > 1)   System.arraycopy(processArgs,1,args,1,processArgs.length - 1);\n  TerminalSession session=new TerminalSession(executablePath,cwd,args,env,this);\n  mTerminalSessions.add(session);\n  updateNotification();\n  return session;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 287,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2526,
        "startLineNumber" : 239,
        "startColumnNumber" : 4,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "TerminalSession createTermSession(String executablePath,String[] arguments,String cwd,boolean failSafe){\n  new File(HOME_PATH).mkdirs();\n  if (cwd == null)   cwd=HOME_PATH;\n  String[] env=BackgroundJob.buildEnvironment(failSafe,cwd);\n  boolean isLoginShell=false;\n  if (executablePath == null) {\n    File shell=new File(HOME_PATH,\".termux/shell\");\n    if (shell.exists()) {\n      try {\n        File canonicalFile=shell.getCanonicalFile();\n        if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n          executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n        }\n else {\n          Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n        }\n      }\n catch (      IOException e) {\n        Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n      }\n    }\n    if (executablePath == null) {\n      for (      String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n        File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n        if (shellFile.canExecute()) {\n          executablePath=shellFile.getAbsolutePath();\n          break;\n        }\n      }\n    }\n    if (executablePath == null) {\n      executablePath=\"/system/bin/sh\";\n    }\n    isLoginShell=true;\n  }\n  String[] processArgs=BackgroundJob.setupProcessArgs(executablePath,arguments);\n  executablePath=processArgs[0];\n  int lastSlashIndex=executablePath.lastIndexOf('/');\n  String processName=(isLoginShell ? \"-\" : \"\") + (lastSlashIndex == -1 ? executablePath : executablePath.substring(lastSlashIndex + 1));\n  String[] args=new String[processArgs.length];\n  args[0]=processName;\n  if (processArgs.length > 1)   System.arraycopy(processArgs,1,args,1,processArgs.length - 1);\n  TerminalSession session=new TerminalSession(executablePath,cwd,args,env,this);\n  mTerminalSessions.add(session);\n  updateNotification();\n  return session;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 308,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 252,
        "startColumnNumber" : 24,
        "endLineNumber" : 252,
        "endColumnNumber" : 76
      },
      "nodeContext" : "canonicalFile.isFile() && canonicalFile.canExecute()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "canonicalFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 253,
      "startColumnNumber" : 41,
      "endLineNumber" : 253,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 253,
        "startColumnNumber" : 41,
        "endLineNumber" : 253,
        "endColumnNumber" : 64
      },
      "nodeContext" : "canonicalFile.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 253,
        "startColumnNumber" : 41,
        "endLineNumber" : 253,
        "endColumnNumber" : 82
      },
      "nodeContext" : "canonicalFile.getName().equals(\"busybox\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 253,
        "startColumnNumber" : 41,
        "endLineNumber" : 253,
        "endColumnNumber" : 145
      },
      "nodeContext" : "canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 253,
        "startColumnNumber" : 24,
        "endLineNumber" : 253,
        "endColumnNumber" : 145
      },
      "nodeContext" : "executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 253,
        "startColumnNumber" : 24,
        "endLineNumber" : 253,
        "endColumnNumber" : 146
      },
      "nodeContext" : "executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 252,
        "startColumnNumber" : 78,
        "endLineNumber" : 254,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 252,
        "startColumnNumber" : 20,
        "endLineNumber" : 256,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n  executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n}\n else {\n  Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 250,
        "startColumnNumber" : 20,
        "endLineNumber" : 257,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  File canonicalFile=shell.getCanonicalFile();\n  if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n    executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n  }\n else {\n    Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 259,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  File canonicalFile=shell.getCanonicalFile();\n  if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n    executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n  }\n else {\n    Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n  }\n}\n catch (IOException e) {\n  Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 249,
        "startColumnNumber" : 32,
        "endLineNumber" : 260,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try {\n    File canonicalFile=shell.getCanonicalFile();\n    if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n      executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n    }\n else {\n      Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n    }\n  }\n catch (  IOException e) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 260,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (shell.exists()) {\n  try {\n    File canonicalFile=shell.getCanonicalFile();\n    if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n      executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n    }\n else {\n      Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n    }\n  }\n catch (  IOException e) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1454,
        "startLineNumber" : 247,
        "startColumnNumber" : 36,
        "endLineNumber" : 278,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File shell=new File(HOME_PATH,\".termux/shell\");\n  if (shell.exists()) {\n    try {\n      File canonicalFile=shell.getCanonicalFile();\n      if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n        executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n      }\n else {\n        Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n      }\n    }\n catch (    IOException e) {\n      Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n    }\n  }\n  if (executablePath == null) {\n    for (    String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n      File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n      if (shellFile.canExecute()) {\n        executablePath=shellFile.getAbsolutePath();\n        break;\n      }\n    }\n  }\n  if (executablePath == null) {\n    executablePath=\"/system/bin/sh\";\n  }\n  isLoginShell=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1482,
        "startLineNumber" : 247,
        "startColumnNumber" : 8,
        "endLineNumber" : 278,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (executablePath == null) {\n  File shell=new File(HOME_PATH,\".termux/shell\");\n  if (shell.exists()) {\n    try {\n      File canonicalFile=shell.getCanonicalFile();\n      if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n        executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n      }\n else {\n        Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n      }\n    }\n catch (    IOException e) {\n      Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n    }\n  }\n  if (executablePath == null) {\n    for (    String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n      File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n      if (shellFile.canExecute()) {\n        executablePath=shellFile.getAbsolutePath();\n        break;\n      }\n    }\n  }\n  if (executablePath == null) {\n    executablePath=\"/system/bin/sh\";\n  }\n  isLoginShell=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2419,
        "startLineNumber" : 239,
        "startColumnNumber" : 111,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  new File(HOME_PATH).mkdirs();\n  if (cwd == null)   cwd=HOME_PATH;\n  String[] env=BackgroundJob.buildEnvironment(failSafe,cwd);\n  boolean isLoginShell=false;\n  if (executablePath == null) {\n    File shell=new File(HOME_PATH,\".termux/shell\");\n    if (shell.exists()) {\n      try {\n        File canonicalFile=shell.getCanonicalFile();\n        if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n          executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n        }\n else {\n          Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n        }\n      }\n catch (      IOException e) {\n        Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n      }\n    }\n    if (executablePath == null) {\n      for (      String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n        File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n        if (shellFile.canExecute()) {\n          executablePath=shellFile.getAbsolutePath();\n          break;\n        }\n      }\n    }\n    if (executablePath == null) {\n      executablePath=\"/system/bin/sh\";\n    }\n    isLoginShell=true;\n  }\n  String[] processArgs=BackgroundJob.setupProcessArgs(executablePath,arguments);\n  executablePath=processArgs[0];\n  int lastSlashIndex=executablePath.lastIndexOf('/');\n  String processName=(isLoginShell ? \"-\" : \"\") + (lastSlashIndex == -1 ? executablePath : executablePath.substring(lastSlashIndex + 1));\n  String[] args=new String[processArgs.length];\n  args[0]=processName;\n  if (processArgs.length > 1)   System.arraycopy(processArgs,1,args,1,processArgs.length - 1);\n  TerminalSession session=new TerminalSession(executablePath,cwd,args,env,this);\n  mTerminalSessions.add(session);\n  updateNotification();\n  return session;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 287,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2526,
        "startLineNumber" : 239,
        "startColumnNumber" : 4,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "TerminalSession createTermSession(String executablePath,String[] arguments,String cwd,boolean failSafe){\n  new File(HOME_PATH).mkdirs();\n  if (cwd == null)   cwd=HOME_PATH;\n  String[] env=BackgroundJob.buildEnvironment(failSafe,cwd);\n  boolean isLoginShell=false;\n  if (executablePath == null) {\n    File shell=new File(HOME_PATH,\".termux/shell\");\n    if (shell.exists()) {\n      try {\n        File canonicalFile=shell.getCanonicalFile();\n        if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n          executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n        }\n else {\n          Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n        }\n      }\n catch (      IOException e) {\n        Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n      }\n    }\n    if (executablePath == null) {\n      for (      String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n        File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n        if (shellFile.canExecute()) {\n          executablePath=shellFile.getAbsolutePath();\n          break;\n        }\n      }\n    }\n    if (executablePath == null) {\n      executablePath=\"/system/bin/sh\";\n    }\n    isLoginShell=true;\n  }\n  String[] processArgs=BackgroundJob.setupProcessArgs(executablePath,arguments);\n  executablePath=processArgs[0];\n  int lastSlashIndex=executablePath.lastIndexOf('/');\n  String processName=(isLoginShell ? \"-\" : \"\") + (lastSlashIndex == -1 ? executablePath : executablePath.substring(lastSlashIndex + 1));\n  String[] args=new String[processArgs.length];\n  args[0]=processName;\n  if (processArgs.length > 1)   System.arraycopy(processArgs,1,args,1,processArgs.length - 1);\n  TerminalSession session=new TerminalSession(executablePath,cwd,args,env,this);\n  mTerminalSessions.add(session);\n  updateNotification();\n  return session;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 308,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 253,
        "startColumnNumber" : 24,
        "endLineNumber" : 253,
        "endColumnNumber" : 146
      },
      "nodeContext" : "executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "canonicalFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 253,
      "startColumnNumber" : 114,
      "endLineNumber" : 253,
      "endColumnNumber" : 127
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 253,
        "startColumnNumber" : 114,
        "endLineNumber" : 253,
        "endColumnNumber" : 145
      },
      "nodeContext" : "canonicalFile.getAbsolutePath()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 253,
        "startColumnNumber" : 41,
        "endLineNumber" : 253,
        "endColumnNumber" : 145
      },
      "nodeContext" : "canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 253,
        "startColumnNumber" : 24,
        "endLineNumber" : 253,
        "endColumnNumber" : 145
      },
      "nodeContext" : "executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 253,
        "startColumnNumber" : 24,
        "endLineNumber" : 253,
        "endColumnNumber" : 146
      },
      "nodeContext" : "executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 252,
        "startColumnNumber" : 78,
        "endLineNumber" : 254,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 252,
        "startColumnNumber" : 20,
        "endLineNumber" : 256,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n  executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n}\n else {\n  Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 250,
        "startColumnNumber" : 20,
        "endLineNumber" : 257,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  File canonicalFile=shell.getCanonicalFile();\n  if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n    executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n  }\n else {\n    Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 259,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  File canonicalFile=shell.getCanonicalFile();\n  if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n    executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n  }\n else {\n    Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n  }\n}\n catch (IOException e) {\n  Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 249,
        "startColumnNumber" : 32,
        "endLineNumber" : 260,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try {\n    File canonicalFile=shell.getCanonicalFile();\n    if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n      executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n    }\n else {\n      Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n    }\n  }\n catch (  IOException e) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 260,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (shell.exists()) {\n  try {\n    File canonicalFile=shell.getCanonicalFile();\n    if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n      executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n    }\n else {\n      Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n    }\n  }\n catch (  IOException e) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1454,
        "startLineNumber" : 247,
        "startColumnNumber" : 36,
        "endLineNumber" : 278,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File shell=new File(HOME_PATH,\".termux/shell\");\n  if (shell.exists()) {\n    try {\n      File canonicalFile=shell.getCanonicalFile();\n      if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n        executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n      }\n else {\n        Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n      }\n    }\n catch (    IOException e) {\n      Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n    }\n  }\n  if (executablePath == null) {\n    for (    String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n      File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n      if (shellFile.canExecute()) {\n        executablePath=shellFile.getAbsolutePath();\n        break;\n      }\n    }\n  }\n  if (executablePath == null) {\n    executablePath=\"/system/bin/sh\";\n  }\n  isLoginShell=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1482,
        "startLineNumber" : 247,
        "startColumnNumber" : 8,
        "endLineNumber" : 278,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (executablePath == null) {\n  File shell=new File(HOME_PATH,\".termux/shell\");\n  if (shell.exists()) {\n    try {\n      File canonicalFile=shell.getCanonicalFile();\n      if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n        executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n      }\n else {\n        Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n      }\n    }\n catch (    IOException e) {\n      Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n    }\n  }\n  if (executablePath == null) {\n    for (    String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n      File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n      if (shellFile.canExecute()) {\n        executablePath=shellFile.getAbsolutePath();\n        break;\n      }\n    }\n  }\n  if (executablePath == null) {\n    executablePath=\"/system/bin/sh\";\n  }\n  isLoginShell=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2419,
        "startLineNumber" : 239,
        "startColumnNumber" : 111,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  new File(HOME_PATH).mkdirs();\n  if (cwd == null)   cwd=HOME_PATH;\n  String[] env=BackgroundJob.buildEnvironment(failSafe,cwd);\n  boolean isLoginShell=false;\n  if (executablePath == null) {\n    File shell=new File(HOME_PATH,\".termux/shell\");\n    if (shell.exists()) {\n      try {\n        File canonicalFile=shell.getCanonicalFile();\n        if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n          executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n        }\n else {\n          Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n        }\n      }\n catch (      IOException e) {\n        Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n      }\n    }\n    if (executablePath == null) {\n      for (      String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n        File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n        if (shellFile.canExecute()) {\n          executablePath=shellFile.getAbsolutePath();\n          break;\n        }\n      }\n    }\n    if (executablePath == null) {\n      executablePath=\"/system/bin/sh\";\n    }\n    isLoginShell=true;\n  }\n  String[] processArgs=BackgroundJob.setupProcessArgs(executablePath,arguments);\n  executablePath=processArgs[0];\n  int lastSlashIndex=executablePath.lastIndexOf('/');\n  String processName=(isLoginShell ? \"-\" : \"\") + (lastSlashIndex == -1 ? executablePath : executablePath.substring(lastSlashIndex + 1));\n  String[] args=new String[processArgs.length];\n  args[0]=processName;\n  if (processArgs.length > 1)   System.arraycopy(processArgs,1,args,1,processArgs.length - 1);\n  TerminalSession session=new TerminalSession(executablePath,cwd,args,env,this);\n  mTerminalSessions.add(session);\n  updateNotification();\n  return session;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 287,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2526,
        "startLineNumber" : 239,
        "startColumnNumber" : 4,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "TerminalSession createTermSession(String executablePath,String[] arguments,String cwd,boolean failSafe){\n  new File(HOME_PATH).mkdirs();\n  if (cwd == null)   cwd=HOME_PATH;\n  String[] env=BackgroundJob.buildEnvironment(failSafe,cwd);\n  boolean isLoginShell=false;\n  if (executablePath == null) {\n    File shell=new File(HOME_PATH,\".termux/shell\");\n    if (shell.exists()) {\n      try {\n        File canonicalFile=shell.getCanonicalFile();\n        if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n          executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n        }\n else {\n          Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n        }\n      }\n catch (      IOException e) {\n        Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n      }\n    }\n    if (executablePath == null) {\n      for (      String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n        File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n        if (shellFile.canExecute()) {\n          executablePath=shellFile.getAbsolutePath();\n          break;\n        }\n      }\n    }\n    if (executablePath == null) {\n      executablePath=\"/system/bin/sh\";\n    }\n    isLoginShell=true;\n  }\n  String[] processArgs=BackgroundJob.setupProcessArgs(executablePath,arguments);\n  executablePath=processArgs[0];\n  int lastSlashIndex=executablePath.lastIndexOf('/');\n  String processName=(isLoginShell ? \"-\" : \"\") + (lastSlashIndex == -1 ? executablePath : executablePath.substring(lastSlashIndex + 1));\n  String[] args=new String[processArgs.length];\n  args[0]=processName;\n  if (processArgs.length > 1)   System.arraycopy(processArgs,1,args,1,processArgs.length - 1);\n  TerminalSession session=new TerminalSession(executablePath,cwd,args,env,this);\n  mTerminalSessions.add(session);\n  updateNotification();\n  return session;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 308,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 253,
        "startColumnNumber" : 24,
        "endLineNumber" : 253,
        "endColumnNumber" : 146
      },
      "nodeContext" : "executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "canonicalFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 255,
      "startColumnNumber" : 110,
      "endLineNumber" : 255,
      "endColumnNumber" : 123
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 255,
        "startColumnNumber" : 110,
        "endLineNumber" : 255,
        "endColumnNumber" : 141
      },
      "nodeContext" : "canonicalFile.getAbsolutePath()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 255,
        "startColumnNumber" : 53,
        "endLineNumber" : 255,
        "endColumnNumber" : 141
      },
      "nodeContext" : "\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 255,
        "startColumnNumber" : 24,
        "endLineNumber" : 255,
        "endColumnNumber" : 142
      },
      "nodeContext" : "Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 255,
        "startColumnNumber" : 24,
        "endLineNumber" : 255,
        "endColumnNumber" : 143
      },
      "nodeContext" : "Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 254,
        "startColumnNumber" : 27,
        "endLineNumber" : 256,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 252,
        "startColumnNumber" : 20,
        "endLineNumber" : 256,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n  executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n}\n else {\n  Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 250,
        "startColumnNumber" : 20,
        "endLineNumber" : 257,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  File canonicalFile=shell.getCanonicalFile();\n  if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n    executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n  }\n else {\n    Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 259,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  File canonicalFile=shell.getCanonicalFile();\n  if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n    executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n  }\n else {\n    Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n  }\n}\n catch (IOException e) {\n  Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 249,
        "startColumnNumber" : 32,
        "endLineNumber" : 260,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try {\n    File canonicalFile=shell.getCanonicalFile();\n    if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n      executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n    }\n else {\n      Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n    }\n  }\n catch (  IOException e) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 260,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (shell.exists()) {\n  try {\n    File canonicalFile=shell.getCanonicalFile();\n    if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n      executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n    }\n else {\n      Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n    }\n  }\n catch (  IOException e) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1454,
        "startLineNumber" : 247,
        "startColumnNumber" : 36,
        "endLineNumber" : 278,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File shell=new File(HOME_PATH,\".termux/shell\");\n  if (shell.exists()) {\n    try {\n      File canonicalFile=shell.getCanonicalFile();\n      if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n        executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n      }\n else {\n        Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n      }\n    }\n catch (    IOException e) {\n      Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n    }\n  }\n  if (executablePath == null) {\n    for (    String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n      File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n      if (shellFile.canExecute()) {\n        executablePath=shellFile.getAbsolutePath();\n        break;\n      }\n    }\n  }\n  if (executablePath == null) {\n    executablePath=\"/system/bin/sh\";\n  }\n  isLoginShell=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1482,
        "startLineNumber" : 247,
        "startColumnNumber" : 8,
        "endLineNumber" : 278,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (executablePath == null) {\n  File shell=new File(HOME_PATH,\".termux/shell\");\n  if (shell.exists()) {\n    try {\n      File canonicalFile=shell.getCanonicalFile();\n      if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n        executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n      }\n else {\n        Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n      }\n    }\n catch (    IOException e) {\n      Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n    }\n  }\n  if (executablePath == null) {\n    for (    String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n      File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n      if (shellFile.canExecute()) {\n        executablePath=shellFile.getAbsolutePath();\n        break;\n      }\n    }\n  }\n  if (executablePath == null) {\n    executablePath=\"/system/bin/sh\";\n  }\n  isLoginShell=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2419,
        "startLineNumber" : 239,
        "startColumnNumber" : 111,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  new File(HOME_PATH).mkdirs();\n  if (cwd == null)   cwd=HOME_PATH;\n  String[] env=BackgroundJob.buildEnvironment(failSafe,cwd);\n  boolean isLoginShell=false;\n  if (executablePath == null) {\n    File shell=new File(HOME_PATH,\".termux/shell\");\n    if (shell.exists()) {\n      try {\n        File canonicalFile=shell.getCanonicalFile();\n        if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n          executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n        }\n else {\n          Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n        }\n      }\n catch (      IOException e) {\n        Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n      }\n    }\n    if (executablePath == null) {\n      for (      String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n        File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n        if (shellFile.canExecute()) {\n          executablePath=shellFile.getAbsolutePath();\n          break;\n        }\n      }\n    }\n    if (executablePath == null) {\n      executablePath=\"/system/bin/sh\";\n    }\n    isLoginShell=true;\n  }\n  String[] processArgs=BackgroundJob.setupProcessArgs(executablePath,arguments);\n  executablePath=processArgs[0];\n  int lastSlashIndex=executablePath.lastIndexOf('/');\n  String processName=(isLoginShell ? \"-\" : \"\") + (lastSlashIndex == -1 ? executablePath : executablePath.substring(lastSlashIndex + 1));\n  String[] args=new String[processArgs.length];\n  args[0]=processName;\n  if (processArgs.length > 1)   System.arraycopy(processArgs,1,args,1,processArgs.length - 1);\n  TerminalSession session=new TerminalSession(executablePath,cwd,args,env,this);\n  mTerminalSessions.add(session);\n  updateNotification();\n  return session;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 287,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2526,
        "startLineNumber" : 239,
        "startColumnNumber" : 4,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "TerminalSession createTermSession(String executablePath,String[] arguments,String cwd,boolean failSafe){\n  new File(HOME_PATH).mkdirs();\n  if (cwd == null)   cwd=HOME_PATH;\n  String[] env=BackgroundJob.buildEnvironment(failSafe,cwd);\n  boolean isLoginShell=false;\n  if (executablePath == null) {\n    File shell=new File(HOME_PATH,\".termux/shell\");\n    if (shell.exists()) {\n      try {\n        File canonicalFile=shell.getCanonicalFile();\n        if (canonicalFile.isFile() && canonicalFile.canExecute()) {\n          executablePath=canonicalFile.getName().equals(\"busybox\") ? (PREFIX_PATH + \"/bin/ash\") : canonicalFile.getAbsolutePath();\n        }\n else {\n          Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n        }\n      }\n catch (      IOException e) {\n        Log.e(EmulatorDebug.LOG_TAG,\"Error checking $HOME/.termux/shell\",e);\n      }\n    }\n    if (executablePath == null) {\n      for (      String shellBinary : new String[]{\"bash\",\"zsh\",\"ash\"}) {\n        File shellFile=new File(PREFIX_PATH + \"/bin/\" + shellBinary);\n        if (shellFile.canExecute()) {\n          executablePath=shellFile.getAbsolutePath();\n          break;\n        }\n      }\n    }\n    if (executablePath == null) {\n      executablePath=\"/system/bin/sh\";\n    }\n    isLoginShell=true;\n  }\n  String[] processArgs=BackgroundJob.setupProcessArgs(executablePath,arguments);\n  executablePath=processArgs[0];\n  int lastSlashIndex=executablePath.lastIndexOf('/');\n  String processName=(isLoginShell ? \"-\" : \"\") + (lastSlashIndex == -1 ? executablePath : executablePath.substring(lastSlashIndex + 1));\n  String[] args=new String[processArgs.length];\n  args[0]=processName;\n  if (processArgs.length > 1)   System.arraycopy(processArgs,1,args,1,processArgs.length - 1);\n  TerminalSession session=new TerminalSession(executablePath,cwd,args,env,this);\n  mTerminalSessions.add(session);\n  updateNotification();\n  return session;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 308,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 255,
        "startColumnNumber" : 24,
        "endLineNumber" : 255,
        "endColumnNumber" : 143
      },
      "nodeContext" : "Log.w(EmulatorDebug.LOG_TAG,\"$HOME/.termux/shell points to non-executable shell: \" + canonicalFile.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 252,
    "startColumnNumber" : 24,
    "endLineNumber" : 252,
    "endColumnNumber" : 37
  }, {
    "charLength" : 13,
    "startLineNumber" : 252,
    "startColumnNumber" : 50,
    "endLineNumber" : 252,
    "endColumnNumber" : 63
  }, {
    "charLength" : 13,
    "startLineNumber" : 253,
    "startColumnNumber" : 41,
    "endLineNumber" : 253,
    "endColumnNumber" : 54
  }, {
    "charLength" : 13,
    "startLineNumber" : 253,
    "startColumnNumber" : 114,
    "endLineNumber" : 253,
    "endColumnNumber" : 127
  }, {
    "charLength" : 13,
    "startLineNumber" : 255,
    "startColumnNumber" : 110,
    "endLineNumber" : 255,
    "endColumnNumber" : 123
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  } ]
}