{
  "id" : 341,
  "expression" : "parser.parseExpression(\"#a < #b\")",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-expression/src/test/java/org/springframework/expression/spel/EvaluationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parser.parseExpression(\"#a < #b\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 466,
      "startColumnNumber" : 37,
      "endLineNumber" : 466,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 466,
        "startColumnNumber" : 21,
        "endLineNumber" : 466,
        "endColumnNumber" : 70
      },
      "nodeContext" : "(SpelExpression)parser.parseExpression(\"#a < #b\")",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 466,
        "startColumnNumber" : 17,
        "endLineNumber" : 466,
        "endColumnNumber" : 70
      },
      "nodeContext" : "e=(SpelExpression)parser.parseExpression(\"#a < #b\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 466,
        "startColumnNumber" : 2,
        "endLineNumber" : 466,
        "endColumnNumber" : 71
      },
      "nodeContext" : "SpelExpression e=(SpelExpression)parser.parseExpression(\"#a < #b\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1029,
        "startLineNumber" : 465,
        "startColumnNumber" : 32,
        "endLineNumber" : 491,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  SpelExpression e=(SpelExpression)parser.parseExpression(\"#a < #b\");\n  EvaluationContext ctx=new StandardEvaluationContext();\n  ctx.setVariable(\"a\",(short)3);\n  ctx.setVariable(\"b\",(short)6);\n  assertTrue(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"b\",(byte)6);\n  assertTrue(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"a\",(byte)9);\n  ctx.setVariable(\"b\",(byte)6);\n  assertFalse(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"a\",10L);\n  ctx.setVariable(\"b\",(short)30);\n  assertTrue(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"a\",(byte)3);\n  ctx.setVariable(\"b\",(short)30);\n  assertTrue(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"a\",(byte)3);\n  ctx.setVariable(\"b\",30L);\n  assertTrue(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"a\",(byte)3);\n  ctx.setVariable(\"b\",30f);\n  assertTrue(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"a\",new BigInteger(\"10\"));\n  ctx.setVariable(\"b\",new BigInteger(\"20\"));\n  assertTrue(e.getValue(ctx,Boolean.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 464,
        "startColumnNumber" : 1,
        "endLineNumber" : 491,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void operatorVariants(){\n  SpelExpression e=(SpelExpression)parser.parseExpression(\"#a < #b\");\n  EvaluationContext ctx=new StandardEvaluationContext();\n  ctx.setVariable(\"a\",(short)3);\n  ctx.setVariable(\"b\",(short)6);\n  assertTrue(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"b\",(byte)6);\n  assertTrue(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"a\",(byte)9);\n  ctx.setVariable(\"b\",(byte)6);\n  assertFalse(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"a\",10L);\n  ctx.setVariable(\"b\",(short)30);\n  assertTrue(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"a\",(byte)3);\n  ctx.setVariable(\"b\",(short)30);\n  assertTrue(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"a\",(byte)3);\n  ctx.setVariable(\"b\",30L);\n  assertTrue(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"a\",(byte)3);\n  ctx.setVariable(\"b\",30f);\n  assertTrue(e.getValue(ctx,Boolean.class));\n  ctx.setVariable(\"a\",new BigInteger(\"10\"));\n  ctx.setVariable(\"b\",new BigInteger(\"20\"));\n  assertTrue(e.getValue(ctx,Boolean.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 466,
        "startColumnNumber" : 2,
        "endLineNumber" : 466,
        "endColumnNumber" : 71
      },
      "nodeContext" : "SpelExpression e=(SpelExpression)parser.parseExpression(\"#a < #b\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "org.springframework.expression.Expression"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 466,
    "startColumnNumber" : 37,
    "endLineNumber" : 466,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}