{
  "id" : 42,
  "expression" : "Arrays",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-javanica/src/main/java/com/netflix/hystrix/contrib/javanica/utils/TypeHelper.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 92,
      "startColumnNumber" : 27,
      "endLineNumber" : 92,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 92,
        "startColumnNumber" : 27,
        "endLineNumber" : 92,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Arrays.asList(pType.getActualTypeArguments())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 92,
        "startColumnNumber" : 20,
        "endLineNumber" : 92,
        "endColumnNumber" : 73
      },
      "nodeContext" : "return Arrays.asList(pType.getActualTypeArguments());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 90,
        "startColumnNumber" : 55,
        "endLineNumber" : 93,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  ParameterizedType pType=(ParameterizedType)root;\n  return Arrays.asList(pType.getActualTypeArguments());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 96,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (root instanceof ParameterizedType) {\n  ParameterizedType pType=(ParameterizedType)root;\n  return Arrays.asList(pType.getActualTypeArguments());\n}\n else if (root instanceof TypeVariable) {\n  TypeVariable pType=(TypeVariable)root;\n  return Arrays.asList(pType.getBounds());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 89,
        "startColumnNumber" : 54,
        "endLineNumber" : 98,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (root instanceof ParameterizedType) {\n    ParameterizedType pType=(ParameterizedType)root;\n    return Arrays.asList(pType.getActualTypeArguments());\n  }\n else   if (root instanceof TypeVariable) {\n    TypeVariable pType=(TypeVariable)root;\n    return Arrays.asList(pType.getBounds());\n  }\n  return Collections.emptyList();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public Iterable<Type> children(Type root){\n  if (root instanceof ParameterizedType) {\n    ParameterizedType pType=(ParameterizedType)root;\n    return Arrays.asList(pType.getActualTypeArguments());\n  }\n else   if (root instanceof TypeVariable) {\n    TypeVariable pType=(TypeVariable)root;\n    return Arrays.asList(pType.getBounds());\n  }\n  return Collections.emptyList();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 92,
        "startColumnNumber" : 20,
        "endLineNumber" : 92,
        "endColumnNumber" : 73
      },
      "nodeContext" : "return Arrays.asList(pType.getActualTypeArguments());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Arrays"
  }, {
    "nodeContext" : "Arrays",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 95,
      "startColumnNumber" : 27,
      "endLineNumber" : 95,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 95,
        "startColumnNumber" : 27,
        "endLineNumber" : 95,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Arrays.asList(pType.getBounds())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 95,
        "startColumnNumber" : 20,
        "endLineNumber" : 95,
        "endColumnNumber" : 60
      },
      "nodeContext" : "return Arrays.asList(pType.getBounds());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 93,
        "startColumnNumber" : 57,
        "endLineNumber" : 96,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TypeVariable pType=(TypeVariable)root;\n  return Arrays.asList(pType.getBounds());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 93,
        "startColumnNumber" : 23,
        "endLineNumber" : 96,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (root instanceof TypeVariable) {\n  TypeVariable pType=(TypeVariable)root;\n  return Arrays.asList(pType.getBounds());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 90,
        "startColumnNumber" : 16,
        "endLineNumber" : 96,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (root instanceof ParameterizedType) {\n  ParameterizedType pType=(ParameterizedType)root;\n  return Arrays.asList(pType.getActualTypeArguments());\n}\n else if (root instanceof TypeVariable) {\n  TypeVariable pType=(TypeVariable)root;\n  return Arrays.asList(pType.getBounds());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 89,
        "startColumnNumber" : 54,
        "endLineNumber" : 98,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (root instanceof ParameterizedType) {\n    ParameterizedType pType=(ParameterizedType)root;\n    return Arrays.asList(pType.getActualTypeArguments());\n  }\n else   if (root instanceof TypeVariable) {\n    TypeVariable pType=(TypeVariable)root;\n    return Arrays.asList(pType.getBounds());\n  }\n  return Collections.emptyList();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public Iterable<Type> children(Type root){\n  if (root instanceof ParameterizedType) {\n    ParameterizedType pType=(ParameterizedType)root;\n    return Arrays.asList(pType.getActualTypeArguments());\n  }\n else   if (root instanceof TypeVariable) {\n    TypeVariable pType=(TypeVariable)root;\n    return Arrays.asList(pType.getBounds());\n  }\n  return Collections.emptyList();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 95,
        "startColumnNumber" : 20,
        "endLineNumber" : 95,
        "endColumnNumber" : 60
      },
      "nodeContext" : "return Arrays.asList(pType.getBounds());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Arrays"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 92,
    "startColumnNumber" : 27,
    "endLineNumber" : 92,
    "endColumnNumber" : 33
  }, {
    "charLength" : 6,
    "startLineNumber" : 95,
    "startColumnNumber" : 27,
    "endLineNumber" : 95,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}