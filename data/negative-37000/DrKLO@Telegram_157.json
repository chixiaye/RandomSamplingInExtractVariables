{
  "id" : 157,
  "expression" : "Theme.createSimpleSelectorRoundRectDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground))",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Theme.createSimpleSelectorRoundRectDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 181,
      "startLineNumber" : 694,
      "startColumnNumber" : 32,
      "endLineNumber" : 694,
      "endColumnNumber" : 213
    },
    "astNodeNumber" : 19,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 694,
        "startColumnNumber" : 21,
        "endLineNumber" : 694,
        "endColumnNumber" : 213
      },
      "nodeContext" : "drawable=Theme.createSimpleSelectorRoundRectDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 694,
        "startColumnNumber" : 12,
        "endLineNumber" : 694,
        "endColumnNumber" : 214
      },
      "nodeContext" : "Drawable drawable=Theme.createSimpleSelectorRoundRectDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2890,
        "startLineNumber" : 691,
        "startColumnNumber" : 123,
        "endLineNumber" : 728,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  searchAreaButton=new SearchButton(context);\n  searchAreaButton.setTranslationX(-AndroidUtilities.dp(80));\n  Drawable drawable=Theme.createSimpleSelectorRoundRectDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground));\n  if (Build.VERSION.SDK_INT < 21) {\n    Drawable shadowDrawable=context.getResources().getDrawable(R.drawable.places_btn).mutate();\n    shadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000,PorterDuff.Mode.MULTIPLY));\n    CombinedDrawable combinedDrawable=new CombinedDrawable(shadowDrawable,drawable,AndroidUtilities.dp(2),AndroidUtilities.dp(2));\n    combinedDrawable.setFullsize(true);\n    drawable=combinedDrawable;\n  }\n else {\n    StateListAnimator animator=new StateListAnimator();\n    animator.addState(new int[]{android.R.attr.state_pressed},ObjectAnimator.ofFloat(searchAreaButton,View.TRANSLATION_Z,AndroidUtilities.dp(2),AndroidUtilities.dp(4)).setDuration(200));\n    animator.addState(new int[]{},ObjectAnimator.ofFloat(searchAreaButton,View.TRANSLATION_Z,AndroidUtilities.dp(4),AndroidUtilities.dp(2)).setDuration(200));\n    searchAreaButton.setStateListAnimator(animator);\n    searchAreaButton.setOutlineProvider(new ViewOutlineProvider(){\n      @SuppressLint(\"NewApi\") @Override public void getOutline(      View view,      Outline outline){\n        outline.setRoundRect(0,0,view.getMeasuredWidth(),view.getMeasuredHeight(),view.getMeasuredHeight() / 2);\n      }\n    }\n);\n  }\n  searchAreaButton.setBackgroundDrawable(drawable);\n  searchAreaButton.setTextColor(Theme.getColor(Theme.key_location_actionActiveIcon));\n  searchAreaButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP,14);\n  searchAreaButton.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n  searchAreaButton.setText(LocaleController.getString(\"PlacesInThisArea\",R.string.PlacesInThisArea));\n  searchAreaButton.setGravity(Gravity.CENTER);\n  searchAreaButton.setPadding(AndroidUtilities.dp(20),0,AndroidUtilities.dp(20),0);\n  mapViewClip.addView(searchAreaButton,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,Build.VERSION.SDK_INT >= 21 ? 40 : 44,Gravity.CENTER_HORIZONTAL | Gravity.TOP,80,12,80,0));\n  searchAreaButton.setOnClickListener(v -> {\n    showSearchPlacesButton(false);\n    adapter.searchPlacesWithQuery(null,userLocation,true,true);\n    searchedForCustomLocations=true;\n    showResults();\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 349,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3005,
        "startLineNumber" : 691,
        "startColumnNumber" : 8,
        "endLineNumber" : 728,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (messageObject == null && (locationType == LOCATION_TYPE_SEND || locationType == LOCATION_TYPE_SEND_WITH_LIVE)) {\n  searchAreaButton=new SearchButton(context);\n  searchAreaButton.setTranslationX(-AndroidUtilities.dp(80));\n  Drawable drawable=Theme.createSimpleSelectorRoundRectDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground));\n  if (Build.VERSION.SDK_INT < 21) {\n    Drawable shadowDrawable=context.getResources().getDrawable(R.drawable.places_btn).mutate();\n    shadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000,PorterDuff.Mode.MULTIPLY));\n    CombinedDrawable combinedDrawable=new CombinedDrawable(shadowDrawable,drawable,AndroidUtilities.dp(2),AndroidUtilities.dp(2));\n    combinedDrawable.setFullsize(true);\n    drawable=combinedDrawable;\n  }\n else {\n    StateListAnimator animator=new StateListAnimator();\n    animator.addState(new int[]{android.R.attr.state_pressed},ObjectAnimator.ofFloat(searchAreaButton,View.TRANSLATION_Z,AndroidUtilities.dp(2),AndroidUtilities.dp(4)).setDuration(200));\n    animator.addState(new int[]{},ObjectAnimator.ofFloat(searchAreaButton,View.TRANSLATION_Z,AndroidUtilities.dp(4),AndroidUtilities.dp(2)).setDuration(200));\n    searchAreaButton.setStateListAnimator(animator);\n    searchAreaButton.setOutlineProvider(new ViewOutlineProvider(){\n      @SuppressLint(\"NewApi\") @Override public void getOutline(      View view,      Outline outline){\n        outline.setRoundRect(0,0,view.getMeasuredWidth(),view.getMeasuredHeight(),view.getMeasuredHeight() / 2);\n      }\n    }\n);\n  }\n  searchAreaButton.setBackgroundDrawable(drawable);\n  searchAreaButton.setTextColor(Theme.getColor(Theme.key_location_actionActiveIcon));\n  searchAreaButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP,14);\n  searchAreaButton.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n  searchAreaButton.setText(LocaleController.getString(\"PlacesInThisArea\",R.string.PlacesInThisArea));\n  searchAreaButton.setGravity(Gravity.CENTER);\n  searchAreaButton.setPadding(AndroidUtilities.dp(20),0,AndroidUtilities.dp(20),0);\n  mapViewClip.addView(searchAreaButton,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,Build.VERSION.SDK_INT >= 21 ? 40 : 44,Gravity.CENTER_HORIZONTAL | Gravity.TOP,80,12,80,0));\n  searchAreaButton.setOnClickListener(v -> {\n    showSearchPlacesButton(false);\n    adapter.searchPlacesWithQuery(null,userLocation,true,true);\n    searchedForCustomLocations=true;\n    showResults();\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 362,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 46918,
        "startLineNumber" : 509,
        "startColumnNumber" : 44,
        "endLineNumber" : 1323,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  searchWas=false;\n  searching=false;\n  searchInProgress=false;\n  if (adapter != null) {\n    adapter.destroy();\n  }\n  if (searchAdapter != null) {\n    searchAdapter.destroy();\n  }\n  if (chatLocation != null) {\n    userLocation=new Location(\"network\");\n    userLocation.setLatitude(chatLocation.geo_point.lat);\n    userLocation.setLongitude(chatLocation.geo_point._long);\n  }\n else   if (messageObject != null) {\n    userLocation=new Location(\"network\");\n    userLocation.setLatitude(messageObject.messageOwner.media.geo.lat);\n    userLocation.setLongitude(messageObject.messageOwner.media.geo._long);\n  }\n  actionBar.setBackgroundColor(Theme.getColor(Theme.key_dialogBackground));\n  actionBar.setTitleColor(Theme.getColor(Theme.key_dialogTextBlack));\n  actionBar.setItemsColor(Theme.getColor(Theme.key_dialogTextBlack),false);\n  actionBar.setItemsBackgroundColor(Theme.getColor(Theme.key_dialogButtonSelector),false);\n  actionBar.setBackButtonImage(R.drawable.ic_ab_back);\n  actionBar.setAllowOverlayTitle(true);\n  if (AndroidUtilities.isTablet()) {\n    actionBar.setOccupyStatusBar(false);\n  }\n  actionBar.setAddToContainer(false);\n  actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick(){\n    @Override public void onItemClick(    int id){\n      if (id == -1) {\n        finishFragment();\n      }\n else       if (id == open_in) {\n        try {\n          double lat=messageObject.messageOwner.media.geo.lat;\n          double lon=messageObject.messageOwner.media.geo._long;\n          getParentActivity().startActivity(new Intent(android.content.Intent.ACTION_VIEW,Uri.parse(\"geo:\" + lat + \",\"+ lon+ \"?q=\"+ lat+ \",\"+ lon)));\n        }\n catch (        Exception e) {\n          FileLog.e(e);\n        }\n      }\n else       if (id == share_live_location) {\n        openShareLiveLocation(0);\n      }\n    }\n  }\n);\n  ActionBarMenu menu=actionBar.createMenu();\n  if (chatLocation != null) {\n    actionBar.setTitle(LocaleController.getString(\"ChatLocation\",R.string.ChatLocation));\n  }\n else   if (messageObject != null) {\n    if (messageObject.isLiveLocation()) {\n      actionBar.setTitle(LocaleController.getString(\"AttachLiveLocation\",R.string.AttachLiveLocation));\n    }\n else {\n      if (messageObject.messageOwner.media.title != null && messageObject.messageOwner.media.title.length() > 0) {\n        actionBar.setTitle(LocaleController.getString(\"SharedPlace\",R.string.SharedPlace));\n      }\n else {\n        actionBar.setTitle(LocaleController.getString(\"ChatLocation\",R.string.ChatLocation));\n      }\n      otherItem=menu.addItem(0,R.drawable.ic_ab_other);\n      otherItem.addSubItem(open_in,R.drawable.msg_openin,LocaleController.getString(\"OpenInExternalApp\",R.string.OpenInExternalApp));\n      if (!getLocationController().isSharingLocation(dialogId)) {\n        otherItem.addSubItem(share_live_location,R.drawable.menu_location,LocaleController.getString(\"SendLiveLocationMenu\",R.string.SendLiveLocationMenu));\n      }\n      otherItem.setContentDescription(LocaleController.getString(\"AccDescrMoreOptions\",R.string.AccDescrMoreOptions));\n    }\n  }\n else {\n    actionBar.setTitle(LocaleController.getString(\"ShareLocation\",R.string.ShareLocation));\n    if (locationType != LOCATION_TYPE_GROUP) {\n      overlayView=new MapOverlayView(context);\n      searchItem=menu.addItem(0,R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener(){\n        @Override public void onSearchExpand(){\n          searching=true;\n        }\n        @Override public void onSearchCollapse(){\n          searching=false;\n          searchWas=false;\n          searchAdapter.searchDelayed(null,null);\n          updateEmptyView();\n        }\n        @Override public void onTextChanged(        EditText editText){\n          if (searchAdapter == null) {\n            return;\n          }\n          String text=editText.getText().toString();\n          if (text.length() != 0) {\n            searchWas=true;\n            searchItem.setShowSearchProgress(true);\n            if (otherItem != null) {\n              otherItem.setVisibility(View.GONE);\n            }\n            listView.setVisibility(View.GONE);\n            mapViewClip.setVisibility(View.GONE);\n            if (searchListView.getAdapter() != searchAdapter) {\n              searchListView.setAdapter(searchAdapter);\n            }\n            searchListView.setVisibility(View.VISIBLE);\n            searchInProgress=searchAdapter.getItemCount() == 0;\n          }\n else {\n            if (otherItem != null) {\n              otherItem.setVisibility(View.VISIBLE);\n            }\n            listView.setVisibility(View.VISIBLE);\n            mapViewClip.setVisibility(View.VISIBLE);\n            searchListView.setAdapter(null);\n            searchListView.setVisibility(View.GONE);\n          }\n          updateEmptyView();\n          searchAdapter.searchDelayed(text,userLocation);\n        }\n      }\n);\n      searchItem.setSearchFieldHint(LocaleController.getString(\"Search\",R.string.Search));\n      searchItem.setContentDescription(LocaleController.getString(\"Search\",R.string.Search));\n      EditTextBoldCursor editText=searchItem.getSearchField();\n      editText.setTextColor(Theme.getColor(Theme.key_dialogTextBlack));\n      editText.setCursorColor(Theme.getColor(Theme.key_dialogTextBlack));\n      editText.setHintTextColor(Theme.getColor(Theme.key_chat_messagePanelHint));\n    }\n  }\n  fragmentView=new FrameLayout(context){\n    private boolean first=true;\n    @Override protected void onLayout(    boolean changed,    int left,    int top,    int right,    int bottom){\n      super.onLayout(changed,left,top,right,bottom);\n      if (changed) {\n        fixLayoutInternal(first);\n        first=false;\n      }\n else {\n        updateClipView(true);\n      }\n    }\n    @Override protected boolean drawChild(    Canvas canvas,    View child,    long drawingTime){\n      boolean result=super.drawChild(canvas,child,drawingTime);\n      if (child == actionBar && parentLayout != null) {\n        parentLayout.drawHeaderShadow(canvas,actionBar.getMeasuredHeight());\n      }\n      return result;\n    }\n  }\n;\n  FrameLayout frameLayout=(FrameLayout)fragmentView;\n  fragmentView.setBackgroundColor(Theme.getColor(Theme.key_dialogBackground));\n  shadowDrawable=context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();\n  shadowDrawable.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_dialogBackground),PorterDuff.Mode.MULTIPLY));\n  Rect padding=new Rect();\n  shadowDrawable.getPadding(padding);\n  FrameLayout.LayoutParams layoutParams;\n  if (locationType == LOCATION_TYPE_SEND || locationType == LOCATION_TYPE_SEND_WITH_LIVE) {\n    layoutParams=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,AndroidUtilities.dp(21) + padding.top);\n  }\n else {\n    layoutParams=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,AndroidUtilities.dp(6) + padding.top);\n  }\n  layoutParams.gravity=Gravity.LEFT | Gravity.BOTTOM;\n  mapViewClip=new FrameLayout(context){\n    @Override protected void onMeasure(    int widthMeasureSpec,    int heightMeasureSpec){\n      super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n      if (overlayView != null) {\n        overlayView.updatePositions();\n      }\n    }\n  }\n;\n  mapViewClip.setBackgroundDrawable(new MapPlaceholderDrawable());\n  if (messageObject == null && (locationType == LOCATION_TYPE_SEND || locationType == LOCATION_TYPE_SEND_WITH_LIVE)) {\n    searchAreaButton=new SearchButton(context);\n    searchAreaButton.setTranslationX(-AndroidUtilities.dp(80));\n    Drawable drawable=Theme.createSimpleSelectorRoundRectDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground));\n    if (Build.VERSION.SDK_INT < 21) {\n      Drawable shadowDrawable=context.getResources().getDrawable(R.drawable.places_btn).mutate();\n      shadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000,PorterDuff.Mode.MULTIPLY));\n      CombinedDrawable combinedDrawable=new CombinedDrawable(shadowDrawable,drawable,AndroidUtilities.dp(2),AndroidUtilities.dp(2));\n      combinedDrawable.setFullsize(true);\n      drawable=combinedDrawable;\n    }\n else {\n      StateListAnimator animator=new StateListAnimator();\n      animator.addState(new int[]{android.R.attr.state_pressed},ObjectAnimator.ofFloat(searchAreaButton,View.TRANSLATION_Z,AndroidUtilities.dp(2),AndroidUtilities.dp(4)).setDuration(200));\n      animator.addState(new int[]{},ObjectAnimator.ofFloat(searchAreaButton,View.TRANSLATION_Z,AndroidUtilities.dp(4),AndroidUtilities.dp(2)).setDuration(200));\n      searchAreaButton.setStateListAnimator(animator);\n      searchAreaButton.setOutlineProvider(new ViewOutlineProvider(){\n        @SuppressLint(\"NewApi\") @Override public void getOutline(        View view,        Outline outline){\n          outline.setRoundRect(0,0,view.getMeasuredWidth(),view.getMeasuredHeight(),view.getMeasuredHeight() / 2);\n        }\n      }\n);\n    }\n    searchAreaButton.setBackgroundDrawable(drawable);\n    searchAreaButton.setTextColor(Theme.getColor(Theme.key_location_actionActiveIcon));\n    searchAreaButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP,14);\n    searchAreaButton.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n    searchAreaButton.setText(LocaleController.getString(\"PlacesInThisArea\",R.string.PlacesInThisArea));\n    searchAreaButton.setGravity(Gravity.CENTER);\n    searchAreaButton.setPadding(AndroidUtilities.dp(20),0,AndroidUtilities.dp(20),0);\n    mapViewClip.addView(searchAreaButton,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,Build.VERSION.SDK_INT >= 21 ? 40 : 44,Gravity.CENTER_HORIZONTAL | Gravity.TOP,80,12,80,0));\n    searchAreaButton.setOnClickListener(v -> {\n      showSearchPlacesButton(false);\n      adapter.searchPlacesWithQuery(null,userLocation,true,true);\n      searchedForCustomLocations=true;\n      showResults();\n    }\n);\n  }\n  mapTypeButton=new ActionBarMenuItem(context,null,0,Theme.getColor(Theme.key_location_actionIcon));\n  mapTypeButton.setClickable(true);\n  mapTypeButton.setSubMenuOpenSide(2);\n  mapTypeButton.setAdditionalXOffset(AndroidUtilities.dp(10));\n  mapTypeButton.setAdditionalYOffset(-AndroidUtilities.dp(10));\n  mapTypeButton.addSubItem(map_list_menu_map,R.drawable.msg_map,LocaleController.getString(\"Map\",R.string.Map));\n  mapTypeButton.addSubItem(map_list_menu_satellite,R.drawable.msg_satellite,LocaleController.getString(\"Satellite\",R.string.Satellite));\n  mapTypeButton.addSubItem(map_list_menu_hybrid,R.drawable.msg_hybrid,LocaleController.getString(\"Hybrid\",R.string.Hybrid));\n  mapTypeButton.setContentDescription(LocaleController.getString(\"AccDescrMoreOptions\",R.string.AccDescrMoreOptions));\n  Drawable drawable=Theme.createSimpleSelectorCircleDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground));\n  if (Build.VERSION.SDK_INT < 21) {\n    Drawable shadowDrawable=context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();\n    shadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000,PorterDuff.Mode.MULTIPLY));\n    CombinedDrawable combinedDrawable=new CombinedDrawable(shadowDrawable,drawable,0,0);\n    combinedDrawable.setIconSize(AndroidUtilities.dp(40),AndroidUtilities.dp(40));\n    drawable=combinedDrawable;\n  }\n else {\n    StateListAnimator animator=new StateListAnimator();\n    animator.addState(new int[]{android.R.attr.state_pressed},ObjectAnimator.ofFloat(mapTypeButton,View.TRANSLATION_Z,AndroidUtilities.dp(2),AndroidUtilities.dp(4)).setDuration(200));\n    animator.addState(new int[]{},ObjectAnimator.ofFloat(mapTypeButton,View.TRANSLATION_Z,AndroidUtilities.dp(4),AndroidUtilities.dp(2)).setDuration(200));\n    mapTypeButton.setStateListAnimator(animator);\n    mapTypeButton.setOutlineProvider(new ViewOutlineProvider(){\n      @SuppressLint(\"NewApi\") @Override public void getOutline(      View view,      Outline outline){\n        outline.setOval(0,0,AndroidUtilities.dp(40),AndroidUtilities.dp(40));\n      }\n    }\n);\n  }\n  mapTypeButton.setBackgroundDrawable(drawable);\n  mapTypeButton.setIcon(R.drawable.location_type);\n  mapViewClip.addView(mapTypeButton,LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 40 : 44,Build.VERSION.SDK_INT >= 21 ? 40 : 44,Gravity.RIGHT | Gravity.TOP,0,12,12,0));\n  mapTypeButton.setOnClickListener(v -> mapTypeButton.toggleSubMenu());\n  mapTypeButton.setDelegate(id -> {\n    if (googleMap == null) {\n      return;\n    }\n    if (id == map_list_menu_map) {\n      googleMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);\n    }\n else     if (id == map_list_menu_satellite) {\n      googleMap.setMapType(GoogleMap.MAP_TYPE_SATELLITE);\n    }\n else     if (id == map_list_menu_hybrid) {\n      googleMap.setMapType(GoogleMap.MAP_TYPE_HYBRID);\n    }\n  }\n);\n  locationButton=new ImageView(context);\n  drawable=Theme.createSimpleSelectorCircleDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground));\n  if (Build.VERSION.SDK_INT < 21) {\n    Drawable shadowDrawable=context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();\n    shadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000,PorterDuff.Mode.MULTIPLY));\n    CombinedDrawable combinedDrawable=new CombinedDrawable(shadowDrawable,drawable,0,0);\n    combinedDrawable.setIconSize(AndroidUtilities.dp(40),AndroidUtilities.dp(40));\n    drawable=combinedDrawable;\n  }\n else {\n    StateListAnimator animator=new StateListAnimator();\n    animator.addState(new int[]{android.R.attr.state_pressed},ObjectAnimator.ofFloat(locationButton,View.TRANSLATION_Z,AndroidUtilities.dp(2),AndroidUtilities.dp(4)).setDuration(200));\n    animator.addState(new int[]{},ObjectAnimator.ofFloat(locationButton,View.TRANSLATION_Z,AndroidUtilities.dp(4),AndroidUtilities.dp(2)).setDuration(200));\n    locationButton.setStateListAnimator(animator);\n    locationButton.setOutlineProvider(new ViewOutlineProvider(){\n      @SuppressLint(\"NewApi\") @Override public void getOutline(      View view,      Outline outline){\n        outline.setOval(0,0,AndroidUtilities.dp(40),AndroidUtilities.dp(40));\n      }\n    }\n);\n  }\n  locationButton.setBackgroundDrawable(drawable);\n  locationButton.setImageResource(R.drawable.location_current);\n  locationButton.setScaleType(ImageView.ScaleType.CENTER);\n  locationButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_location_actionActiveIcon),PorterDuff.Mode.MULTIPLY));\n  locationButton.setTag(Theme.key_location_actionActiveIcon);\n  locationButton.setContentDescription(LocaleController.getString(\"AccDescrMyLocation\",R.string.AccDescrMyLocation));\n  FrameLayout.LayoutParams layoutParams1=LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 40 : 44,Build.VERSION.SDK_INT >= 21 ? 40 : 44,Gravity.RIGHT | Gravity.BOTTOM,0,0,12,12);\n  layoutParams1.bottomMargin+=layoutParams.height - padding.top;\n  mapViewClip.addView(locationButton,layoutParams1);\n  locationButton.setOnClickListener(v -> {\n    if (Build.VERSION.SDK_INT >= 23) {\n      Activity activity=getParentActivity();\n      if (activity != null) {\n        if (activity.checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n          showPermissionAlert(false);\n          return;\n        }\n      }\n    }\n    if (!checkGpsEnabled()) {\n      return;\n    }\n    if (messageObject != null || chatLocation != null) {\n      if (myLocation != null && googleMap != null) {\n        googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(myLocation.getLatitude(),myLocation.getLongitude()),googleMap.getMaxZoomLevel() - 4));\n      }\n    }\n else {\n      if (myLocation != null && googleMap != null) {\n        locationButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_location_actionActiveIcon),PorterDuff.Mode.MULTIPLY));\n        locationButton.setTag(Theme.key_location_actionActiveIcon);\n        adapter.setCustomLocation(null);\n        userLocationMoved=false;\n        showSearchPlacesButton(false);\n        googleMap.animateCamera(CameraUpdateFactory.newLatLng(new LatLng(myLocation.getLatitude(),myLocation.getLongitude())));\n        if (searchedForCustomLocations) {\n          if (myLocation != null) {\n            adapter.searchPlacesWithQuery(null,myLocation,true,true);\n          }\n          searchedForCustomLocations=false;\n          showResults();\n        }\n      }\n    }\n    removeInfoView();\n  }\n);\n  proximityButton=new ImageView(context);\n  drawable=Theme.createSimpleSelectorCircleDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground));\n  if (Build.VERSION.SDK_INT < 21) {\n    Drawable shadowDrawable=context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();\n    shadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000,PorterDuff.Mode.MULTIPLY));\n    CombinedDrawable combinedDrawable=new CombinedDrawable(shadowDrawable,drawable,0,0);\n    combinedDrawable.setIconSize(AndroidUtilities.dp(40),AndroidUtilities.dp(40));\n    drawable=combinedDrawable;\n  }\n else {\n    StateListAnimator animator=new StateListAnimator();\n    animator.addState(new int[]{android.R.attr.state_pressed},ObjectAnimator.ofFloat(proximityButton,View.TRANSLATION_Z,AndroidUtilities.dp(2),AndroidUtilities.dp(4)).setDuration(200));\n    animator.addState(new int[]{},ObjectAnimator.ofFloat(proximityButton,View.TRANSLATION_Z,AndroidUtilities.dp(4),AndroidUtilities.dp(2)).setDuration(200));\n    proximityButton.setStateListAnimator(animator);\n    proximityButton.setOutlineProvider(new ViewOutlineProvider(){\n      @SuppressLint(\"NewApi\") @Override public void getOutline(      View view,      Outline outline){\n        outline.setOval(0,0,AndroidUtilities.dp(40),AndroidUtilities.dp(40));\n      }\n    }\n);\n  }\n  proximityButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_location_actionIcon),PorterDuff.Mode.MULTIPLY));\n  proximityButton.setBackgroundDrawable(drawable);\n  proximityButton.setScaleType(ImageView.ScaleType.CENTER);\n  proximityButton.setContentDescription(LocaleController.getString(\"AccDescrLocationNotify\",R.string.AccDescrLocationNotify));\n  mapViewClip.addView(proximityButton,LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 40 : 44,Build.VERSION.SDK_INT >= 21 ? 40 : 44,Gravity.RIGHT | Gravity.TOP,0,12 + 50,12,0));\n  proximityButton.setOnClickListener(v -> {\n    if (getParentActivity() == null || myLocation == null || !checkGpsEnabled() || googleMap == null) {\n      return;\n    }\n    if (hintView != null) {\n      hintView.hide();\n    }\n    SharedPreferences preferences=MessagesController.getGlobalMainSettings();\n    preferences.edit().putInt(\"proximityhint\",3).commit();\n    LocationController.SharingLocationInfo info=getLocationController().getSharingLocationInfo(dialogId);\n    if (canUndo) {\n      undoView[0].hide(true,1);\n    }\n    if (info != null && info.proximityMeters > 0) {\n      proximityButton.setImageResource(R.drawable.msg_location_alert);\n      if (proximityCircle != null) {\n        proximityCircle.remove();\n        proximityCircle=null;\n      }\n      canUndo=true;\n      getUndoView().showWithAction(0,UndoView.ACTION_PROXIMITY_REMOVED,0,null,() -> {\n        getLocationController().setProximityLocation(dialogId,0,true);\n        canUndo=false;\n      }\n,() -> {\n        proximityButton.setImageResource(R.drawable.msg_location_alert2);\n        createCircle(info.proximityMeters);\n        canUndo=false;\n      }\n);\n      return;\n    }\n    openProximityAlert();\n  }\n);\n  TLRPC.Chat chat=null;\n  if ((int)dialogId < 0) {\n    chat=getMessagesController().getChat(-(int)dialogId);\n  }\n  if (messageObject == null || !messageObject.isLiveLocation() || messageObject.isExpiredLiveLocation(getConnectionsManager().getCurrentTime()) || ChatObject.isChannel(chat) && !chat.megagroup) {\n    proximityButton.setVisibility(View.GONE);\n    proximityButton.setImageResource(R.drawable.msg_location_alert);\n  }\n else {\n    LocationController.SharingLocationInfo myInfo=getLocationController().getSharingLocationInfo(dialogId);\n    if (myInfo != null && myInfo.proximityMeters > 0) {\n      proximityButton.setImageResource(R.drawable.msg_location_alert2);\n    }\n else {\n      if ((int)dialogId > 0 && messageObject.getFromChatId() == getUserConfig().getClientUserId()) {\n        proximityButton.setVisibility(View.INVISIBLE);\n        proximityButton.setAlpha(0.0f);\n        proximityButton.setScaleX(0.4f);\n        proximityButton.setScaleY(0.4f);\n      }\n      proximityButton.setImageResource(R.drawable.msg_location_alert);\n    }\n  }\n  hintView=new HintView(context,6,true);\n  hintView.setVisibility(View.INVISIBLE);\n  hintView.setShowingDuration(4000);\n  mapViewClip.addView(hintView,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.LEFT | Gravity.TOP,10,0,10,0));\n  emptyView=new LinearLayout(context);\n  emptyView.setOrientation(LinearLayout.VERTICAL);\n  emptyView.setGravity(Gravity.CENTER_HORIZONTAL);\n  emptyView.setPadding(0,AndroidUtilities.dp(60 + 100),0,0);\n  emptyView.setVisibility(View.GONE);\n  frameLayout.addView(emptyView,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT));\n  emptyView.setOnTouchListener((v,event) -> true);\n  emptyImageView=new ImageView(context);\n  emptyImageView.setImageResource(R.drawable.location_empty);\n  emptyImageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_dialogEmptyImage),PorterDuff.Mode.MULTIPLY));\n  emptyView.addView(emptyImageView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT));\n  emptyTitleTextView=new TextView(context);\n  emptyTitleTextView.setTextColor(Theme.getColor(Theme.key_dialogEmptyText));\n  emptyTitleTextView.setGravity(Gravity.CENTER);\n  emptyTitleTextView.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n  emptyTitleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,17);\n  emptyTitleTextView.setText(LocaleController.getString(\"NoPlacesFound\",R.string.NoPlacesFound));\n  emptyView.addView(emptyTitleTextView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER,0,11,0,0));\n  emptySubtitleTextView=new TextView(context);\n  emptySubtitleTextView.setTextColor(Theme.getColor(Theme.key_dialogEmptyText));\n  emptySubtitleTextView.setGravity(Gravity.CENTER);\n  emptySubtitleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,15);\n  emptySubtitleTextView.setPadding(AndroidUtilities.dp(40),0,AndroidUtilities.dp(40),0);\n  emptyView.addView(emptySubtitleTextView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER,0,6,0,0));\n  listView=new RecyclerListView(context);\n  listView.setAdapter(adapter=new LocationActivityAdapter(context,locationType,dialogId,false){\n    @Override protected void onDirectionClick(){\n      if (Build.VERSION.SDK_INT >= 23) {\n        Activity activity=getParentActivity();\n        if (activity != null) {\n          if (activity.checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n            showPermissionAlert(true);\n            return;\n          }\n        }\n      }\n      if (myLocation != null) {\n        try {\n          Intent intent;\n          if (messageObject != null) {\n            intent=new Intent(Intent.ACTION_VIEW,Uri.parse(String.format(Locale.US,\"http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f\",myLocation.getLatitude(),myLocation.getLongitude(),messageObject.messageOwner.media.geo.lat,messageObject.messageOwner.media.geo._long)));\n          }\n else {\n            intent=new Intent(Intent.ACTION_VIEW,Uri.parse(String.format(Locale.US,\"http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f\",myLocation.getLatitude(),myLocation.getLongitude(),chatLocation.geo_point.lat,chatLocation.geo_point._long)));\n          }\n          getParentActivity().startActivity(intent);\n        }\n catch (        Exception e) {\n          FileLog.e(e);\n        }\n      }\n    }\n  }\n);\n  adapter.setUpdateRunnable(() -> updateClipView(false));\n  listView.setVerticalScrollBarEnabled(false);\n  listView.setLayoutManager(layoutManager=new LinearLayoutManager(context,LinearLayoutManager.VERTICAL,false));\n  frameLayout.addView(listView,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT,Gravity.LEFT | Gravity.TOP));\n  listView.setOnScrollListener(new RecyclerView.OnScrollListener(){\n    @Override public void onScrollStateChanged(    RecyclerView recyclerView,    int newState){\n      scrolling=newState != RecyclerView.SCROLL_STATE_IDLE;\n      if (!scrolling && forceUpdate != null) {\n        forceUpdate=null;\n      }\n    }\n    @Override public void onScrolled(    RecyclerView recyclerView,    int dx,    int dy){\n      updateClipView(false);\n      if (forceUpdate != null) {\n        yOffset+=dy;\n      }\n    }\n  }\n);\n  ((DefaultItemAnimator)listView.getItemAnimator()).setDelayAnimations(false);\n  listView.setOnItemClickListener((view,position) -> {\n    if (locationType == LOCATION_TYPE_GROUP) {\n      if (position == 1) {\n        TLRPC.TL_messageMediaVenue venue=(TLRPC.TL_messageMediaVenue)adapter.getItem(position);\n        if (venue == null) {\n          return;\n        }\n        if (dialogId == 0) {\n          delegate.didSelectLocation(venue,LOCATION_TYPE_GROUP,true,0);\n          finishFragment();\n        }\n else {\n          final AlertDialog[] progressDialog=new AlertDialog[]{new AlertDialog(getParentActivity(),3)};\n          TLRPC.TL_channels_editLocation req=new TLRPC.TL_channels_editLocation();\n          req.address=venue.address;\n          req.channel=getMessagesController().getInputChannel(-(int)dialogId);\n          req.geo_point=new TLRPC.TL_inputGeoPoint();\n          req.geo_point.lat=venue.geo.lat;\n          req.geo_point._long=venue.geo._long;\n          int requestId=getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n            try {\n              progressDialog[0].dismiss();\n            }\n catch (            Throwable ignore) {\n            }\n            progressDialog[0]=null;\n            delegate.didSelectLocation(venue,LOCATION_TYPE_GROUP,true,0);\n            finishFragment();\n          }\n));\n          progressDialog[0].setOnCancelListener(dialog -> getConnectionsManager().cancelRequest(requestId,true));\n          showDialog(progressDialog[0]);\n        }\n      }\n    }\n else     if (locationType == LOCATION_TYPE_GROUP_VIEW) {\n      if (googleMap != null) {\n        googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(chatLocation.geo_point.lat,chatLocation.geo_point._long),googleMap.getMaxZoomLevel() - 4));\n      }\n    }\n else     if (position == 1 && messageObject != null && (!messageObject.isLiveLocation() || locationType == LOCATION_TYPE_LIVE_VIEW)) {\n      if (googleMap != null) {\n        googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(messageObject.messageOwner.media.geo.lat,messageObject.messageOwner.media.geo._long),googleMap.getMaxZoomLevel() - 4));\n      }\n    }\n else     if (position == 1 && locationType != 2) {\n      if (delegate != null && userLocation != null) {\n        if (lastPressedMarkerView != null) {\n          lastPressedMarkerView.callOnClick();\n        }\n else {\n          TLRPC.TL_messageMediaGeo location=new TLRPC.TL_messageMediaGeo();\n          location.geo=new TLRPC.TL_geoPoint();\n          location.geo.lat=AndroidUtilities.fixLocationCoord(userLocation.getLatitude());\n          location.geo._long=AndroidUtilities.fixLocationCoord(userLocation.getLongitude());\n          if (parentFragment != null && parentFragment.isInScheduleMode()) {\n            AlertsCreator.createScheduleDatePickerDialog(getParentActivity(),parentFragment.getDialogId(),(notify,scheduleDate) -> {\n              delegate.didSelectLocation(location,locationType,notify,scheduleDate);\n              finishFragment();\n            }\n);\n          }\n else {\n            delegate.didSelectLocation(location,locationType,true,0);\n            finishFragment();\n          }\n        }\n      }\n    }\n else     if (position == 2 && locationType == 1 || position == 1 && locationType == 2 || position == 3 && locationType == 3) {\n      if (getLocationController().isSharingLocation(dialogId)) {\n        getLocationController().removeSharingLocation(dialogId);\n        finishFragment();\n      }\n else {\n        openShareLiveLocation(0);\n      }\n    }\n else {\n      Object object=adapter.getItem(position);\n      if (object instanceof TLRPC.TL_messageMediaVenue) {\n        if (parentFragment != null && parentFragment.isInScheduleMode()) {\n          AlertsCreator.createScheduleDatePickerDialog(getParentActivity(),parentFragment.getDialogId(),(notify,scheduleDate) -> {\n            delegate.didSelectLocation((TLRPC.TL_messageMediaVenue)object,locationType,notify,scheduleDate);\n            finishFragment();\n          }\n);\n        }\n else {\n          delegate.didSelectLocation((TLRPC.TL_messageMediaVenue)object,locationType,true,0);\n          finishFragment();\n        }\n      }\n else       if (object instanceof LiveLocation) {\n        LiveLocation liveLocation=(LiveLocation)object;\n        googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(liveLocation.marker.getPosition(),googleMap.getMaxZoomLevel() - 4));\n      }\n    }\n  }\n);\n  adapter.setDelegate(dialogId,this::updatePlacesMarkers);\n  adapter.setOverScrollHeight(overScrollHeight);\n  frameLayout.addView(mapViewClip,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT,Gravity.LEFT | Gravity.TOP));\n  mapView=new MapView(context){\n    @Override public boolean onTouchEvent(    MotionEvent event){\n      return super.onTouchEvent(event);\n    }\n    @Override public boolean dispatchTouchEvent(    MotionEvent ev){\n      MotionEvent eventToRecycle=null;\n      if (yOffset != 0) {\n        ev=eventToRecycle=MotionEvent.obtain(ev);\n        eventToRecycle.offsetLocation(0,-yOffset / 2);\n      }\n      boolean result=super.dispatchTouchEvent(ev);\n      if (eventToRecycle != null) {\n        eventToRecycle.recycle();\n      }\n      return result;\n    }\n    @Override public boolean onInterceptTouchEvent(    MotionEvent ev){\n      if (messageObject == null && chatLocation == null) {\n        if (ev.getAction() == MotionEvent.ACTION_DOWN) {\n          if (animatorSet != null) {\n            animatorSet.cancel();\n          }\n          animatorSet=new AnimatorSet();\n          animatorSet.setDuration(200);\n          animatorSet.playTogether(ObjectAnimator.ofFloat(markerImageView,View.TRANSLATION_Y,markerTop - AndroidUtilities.dp(10)));\n          animatorSet.start();\n        }\n else         if (ev.getAction() == MotionEvent.ACTION_UP) {\n          if (animatorSet != null) {\n            animatorSet.cancel();\n          }\n          yOffset=0;\n          animatorSet=new AnimatorSet();\n          animatorSet.setDuration(200);\n          animatorSet.playTogether(ObjectAnimator.ofFloat(markerImageView,View.TRANSLATION_Y,markerTop));\n          animatorSet.start();\n          adapter.fetchLocationAddress();\n        }\n        if (ev.getAction() == MotionEvent.ACTION_MOVE) {\n          if (!userLocationMoved) {\n            locationButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_location_actionIcon),PorterDuff.Mode.MULTIPLY));\n            locationButton.setTag(Theme.key_location_actionIcon);\n            userLocationMoved=true;\n          }\n          if (googleMap != null) {\n            if (userLocation != null) {\n              userLocation.setLatitude(googleMap.getCameraPosition().target.latitude);\n              userLocation.setLongitude(googleMap.getCameraPosition().target.longitude);\n            }\n          }\n          adapter.setCustomLocation(userLocation);\n        }\n      }\n      return super.onInterceptTouchEvent(ev);\n    }\n    @Override protected void onLayout(    boolean changed,    int left,    int top,    int right,    int bottom){\n      super.onLayout(changed,left,top,right,bottom);\n      AndroidUtilities.runOnUIThread(() -> {\n        if (moveToBounds != null) {\n          googleMap.moveCamera(moveToBounds);\n          moveToBounds=null;\n        }\n      }\n);\n    }\n  }\n;\n  final MapView map=mapView;\n  new Thread(() -> {\n    try {\n      map.onCreate(null);\n    }\n catch (    Exception e) {\n    }\n    AndroidUtilities.runOnUIThread(() -> {\n      if (mapView != null && getParentActivity() != null) {\n        try {\n          map.onCreate(null);\n          MapsInitializer.initialize(ApplicationLoader.applicationContext);\n          mapView.getMapAsync(map1 -> {\n            googleMap=map1;\n            if (isActiveThemeDark()) {\n              currentMapStyleDark=true;\n              MapStyleOptions style=MapStyleOptions.loadRawResourceStyle(ApplicationLoader.applicationContext,R.raw.mapstyle_night);\n              googleMap.setMapStyle(style);\n            }\n            googleMap.setPadding(AndroidUtilities.dp(70),0,AndroidUtilities.dp(70),AndroidUtilities.dp(10));\n            onMapInit();\n          }\n);\n          mapsInitialized=true;\n          if (onResumeCalled) {\n            mapView.onResume();\n          }\n        }\n catch (        Exception e) {\n          FileLog.e(e);\n        }\n      }\n    }\n);\n  }\n).start();\n  if (messageObject == null && chatLocation == null) {\n    if (chat != null && locationType == LOCATION_TYPE_GROUP && dialogId != 0) {\n      FrameLayout frameLayout1=new FrameLayout(context);\n      frameLayout1.setBackgroundResource(R.drawable.livepin);\n      mapViewClip.addView(frameLayout1,LayoutHelper.createFrame(62,76,Gravity.TOP | Gravity.CENTER_HORIZONTAL));\n      BackupImageView backupImageView=new BackupImageView(context);\n      backupImageView.setRoundRadius(AndroidUtilities.dp(26));\n      backupImageView.setImage(ImageLocation.getForChat(chat,false),\"50_50\",new AvatarDrawable(chat),chat);\n      frameLayout1.addView(backupImageView,LayoutHelper.createFrame(52,52,Gravity.LEFT | Gravity.TOP,5,5,0,0));\n      markerImageView=frameLayout1;\n      markerImageView.setTag(1);\n    }\n    if (markerImageView == null) {\n      ImageView imageView=new ImageView(context);\n      imageView.setImageResource(R.drawable.map_pin2);\n      mapViewClip.addView(imageView,LayoutHelper.createFrame(28,48,Gravity.TOP | Gravity.CENTER_HORIZONTAL));\n      markerImageView=imageView;\n    }\n    searchListView=new RecyclerListView(context);\n    searchListView.setVisibility(View.GONE);\n    searchListView.setLayoutManager(new LinearLayoutManager(context,LinearLayoutManager.VERTICAL,false));\n    searchAdapter=new LocationActivitySearchAdapter(context){\n      @Override public void notifyDataSetChanged(){\n        if (searchItem != null) {\n          searchItem.setShowSearchProgress(searchAdapter.isSearching());\n        }\n        if (emptySubtitleTextView != null) {\n          emptySubtitleTextView.setText(AndroidUtilities.replaceTags(LocaleController.formatString(\"NoPlacesFoundInfo\",R.string.NoPlacesFoundInfo,searchAdapter.getLastSearchString())));\n        }\n        super.notifyDataSetChanged();\n      }\n    }\n;\n    searchAdapter.setDelegate(0,places -> {\n      searchInProgress=false;\n      updateEmptyView();\n    }\n);\n    frameLayout.addView(searchListView,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT,Gravity.LEFT | Gravity.TOP));\n    searchListView.setOnScrollListener(new RecyclerView.OnScrollListener(){\n      @Override public void onScrollStateChanged(      RecyclerView recyclerView,      int newState){\n        if (newState == RecyclerView.SCROLL_STATE_DRAGGING && searching && searchWas) {\n          AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());\n        }\n      }\n    }\n);\n    searchListView.setOnItemClickListener((view,position) -> {\n      TLRPC.TL_messageMediaVenue object=searchAdapter.getItem(position);\n      if (object != null && delegate != null) {\n        if (parentFragment != null && parentFragment.isInScheduleMode()) {\n          AlertsCreator.createScheduleDatePickerDialog(getParentActivity(),parentFragment.getDialogId(),(notify,scheduleDate) -> {\n            delegate.didSelectLocation(object,locationType,notify,scheduleDate);\n            finishFragment();\n          }\n);\n        }\n else {\n          delegate.didSelectLocation(object,locationType,true,0);\n          finishFragment();\n        }\n      }\n    }\n);\n  }\n else   if (messageObject != null && !messageObject.isLiveLocation() || chatLocation != null) {\n    if (chatLocation != null) {\n      adapter.setChatLocation(chatLocation);\n    }\n else     if (messageObject != null) {\n      adapter.setMessageObject(messageObject);\n    }\n  }\n  if (messageObject != null && locationType == LOCATION_TYPE_LIVE_VIEW) {\n    adapter.setMessageObject(messageObject);\n  }\n  for (int a=0; a < 2; a++) {\n    undoView[a]=new UndoView(context);\n    undoView[a].setAdditionalTranslationY(AndroidUtilities.dp(10));\n    if (Build.VERSION.SDK_INT >= 21) {\n      undoView[a].setTranslationZ(AndroidUtilities.dp(5));\n    }\n    mapViewClip.addView(undoView[a],LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,Gravity.BOTTOM | Gravity.LEFT,8,0,8,8));\n  }\n  shadow=new View(context){\n    private RectF rect=new RectF();\n    @Override protected void onDraw(    Canvas canvas){\n      shadowDrawable.setBounds(-padding.left,0,getMeasuredWidth() + padding.right,getMeasuredHeight());\n      shadowDrawable.draw(canvas);\n      if (locationType == LOCATION_TYPE_SEND || locationType == LOCATION_TYPE_SEND_WITH_LIVE) {\n        int w=AndroidUtilities.dp(36);\n        int y=padding.top + AndroidUtilities.dp(10);\n        rect.set((getMeasuredWidth() - w) / 2,y,(getMeasuredWidth() + w) / 2,y + AndroidUtilities.dp(4));\n        int color=Theme.getColor(Theme.key_sheet_scrollUp);\n        int alpha=Color.alpha(color);\n        Theme.dialogs_onlineCirclePaint.setColor(color);\n        canvas.drawRoundRect(rect,AndroidUtilities.dp(2),AndroidUtilities.dp(2),Theme.dialogs_onlineCirclePaint);\n      }\n    }\n  }\n;\n  if (Build.VERSION.SDK_INT >= 21) {\n    shadow.setTranslationZ(AndroidUtilities.dp(6));\n  }\n  mapViewClip.addView(shadow,layoutParams);\n  if (messageObject == null && chatLocation == null && initialLocation != null) {\n    userLocationMoved=true;\n    locationButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_location_actionIcon),PorterDuff.Mode.MULTIPLY));\n    locationButton.setTag(Theme.key_location_actionIcon);\n  }\n  frameLayout.addView(actionBar);\n  updateEmptyView();\n  return fragmentView;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5401,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 46972,
        "startLineNumber" : 508,
        "startColumnNumber" : 4,
        "endLineNumber" : 1323,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public View createView(Context context){\n  searchWas=false;\n  searching=false;\n  searchInProgress=false;\n  if (adapter != null) {\n    adapter.destroy();\n  }\n  if (searchAdapter != null) {\n    searchAdapter.destroy();\n  }\n  if (chatLocation != null) {\n    userLocation=new Location(\"network\");\n    userLocation.setLatitude(chatLocation.geo_point.lat);\n    userLocation.setLongitude(chatLocation.geo_point._long);\n  }\n else   if (messageObject != null) {\n    userLocation=new Location(\"network\");\n    userLocation.setLatitude(messageObject.messageOwner.media.geo.lat);\n    userLocation.setLongitude(messageObject.messageOwner.media.geo._long);\n  }\n  actionBar.setBackgroundColor(Theme.getColor(Theme.key_dialogBackground));\n  actionBar.setTitleColor(Theme.getColor(Theme.key_dialogTextBlack));\n  actionBar.setItemsColor(Theme.getColor(Theme.key_dialogTextBlack),false);\n  actionBar.setItemsBackgroundColor(Theme.getColor(Theme.key_dialogButtonSelector),false);\n  actionBar.setBackButtonImage(R.drawable.ic_ab_back);\n  actionBar.setAllowOverlayTitle(true);\n  if (AndroidUtilities.isTablet()) {\n    actionBar.setOccupyStatusBar(false);\n  }\n  actionBar.setAddToContainer(false);\n  actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick(){\n    @Override public void onItemClick(    int id){\n      if (id == -1) {\n        finishFragment();\n      }\n else       if (id == open_in) {\n        try {\n          double lat=messageObject.messageOwner.media.geo.lat;\n          double lon=messageObject.messageOwner.media.geo._long;\n          getParentActivity().startActivity(new Intent(android.content.Intent.ACTION_VIEW,Uri.parse(\"geo:\" + lat + \",\"+ lon+ \"?q=\"+ lat+ \",\"+ lon)));\n        }\n catch (        Exception e) {\n          FileLog.e(e);\n        }\n      }\n else       if (id == share_live_location) {\n        openShareLiveLocation(0);\n      }\n    }\n  }\n);\n  ActionBarMenu menu=actionBar.createMenu();\n  if (chatLocation != null) {\n    actionBar.setTitle(LocaleController.getString(\"ChatLocation\",R.string.ChatLocation));\n  }\n else   if (messageObject != null) {\n    if (messageObject.isLiveLocation()) {\n      actionBar.setTitle(LocaleController.getString(\"AttachLiveLocation\",R.string.AttachLiveLocation));\n    }\n else {\n      if (messageObject.messageOwner.media.title != null && messageObject.messageOwner.media.title.length() > 0) {\n        actionBar.setTitle(LocaleController.getString(\"SharedPlace\",R.string.SharedPlace));\n      }\n else {\n        actionBar.setTitle(LocaleController.getString(\"ChatLocation\",R.string.ChatLocation));\n      }\n      otherItem=menu.addItem(0,R.drawable.ic_ab_other);\n      otherItem.addSubItem(open_in,R.drawable.msg_openin,LocaleController.getString(\"OpenInExternalApp\",R.string.OpenInExternalApp));\n      if (!getLocationController().isSharingLocation(dialogId)) {\n        otherItem.addSubItem(share_live_location,R.drawable.menu_location,LocaleController.getString(\"SendLiveLocationMenu\",R.string.SendLiveLocationMenu));\n      }\n      otherItem.setContentDescription(LocaleController.getString(\"AccDescrMoreOptions\",R.string.AccDescrMoreOptions));\n    }\n  }\n else {\n    actionBar.setTitle(LocaleController.getString(\"ShareLocation\",R.string.ShareLocation));\n    if (locationType != LOCATION_TYPE_GROUP) {\n      overlayView=new MapOverlayView(context);\n      searchItem=menu.addItem(0,R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener(){\n        @Override public void onSearchExpand(){\n          searching=true;\n        }\n        @Override public void onSearchCollapse(){\n          searching=false;\n          searchWas=false;\n          searchAdapter.searchDelayed(null,null);\n          updateEmptyView();\n        }\n        @Override public void onTextChanged(        EditText editText){\n          if (searchAdapter == null) {\n            return;\n          }\n          String text=editText.getText().toString();\n          if (text.length() != 0) {\n            searchWas=true;\n            searchItem.setShowSearchProgress(true);\n            if (otherItem != null) {\n              otherItem.setVisibility(View.GONE);\n            }\n            listView.setVisibility(View.GONE);\n            mapViewClip.setVisibility(View.GONE);\n            if (searchListView.getAdapter() != searchAdapter) {\n              searchListView.setAdapter(searchAdapter);\n            }\n            searchListView.setVisibility(View.VISIBLE);\n            searchInProgress=searchAdapter.getItemCount() == 0;\n          }\n else {\n            if (otherItem != null) {\n              otherItem.setVisibility(View.VISIBLE);\n            }\n            listView.setVisibility(View.VISIBLE);\n            mapViewClip.setVisibility(View.VISIBLE);\n            searchListView.setAdapter(null);\n            searchListView.setVisibility(View.GONE);\n          }\n          updateEmptyView();\n          searchAdapter.searchDelayed(text,userLocation);\n        }\n      }\n);\n      searchItem.setSearchFieldHint(LocaleController.getString(\"Search\",R.string.Search));\n      searchItem.setContentDescription(LocaleController.getString(\"Search\",R.string.Search));\n      EditTextBoldCursor editText=searchItem.getSearchField();\n      editText.setTextColor(Theme.getColor(Theme.key_dialogTextBlack));\n      editText.setCursorColor(Theme.getColor(Theme.key_dialogTextBlack));\n      editText.setHintTextColor(Theme.getColor(Theme.key_chat_messagePanelHint));\n    }\n  }\n  fragmentView=new FrameLayout(context){\n    private boolean first=true;\n    @Override protected void onLayout(    boolean changed,    int left,    int top,    int right,    int bottom){\n      super.onLayout(changed,left,top,right,bottom);\n      if (changed) {\n        fixLayoutInternal(first);\n        first=false;\n      }\n else {\n        updateClipView(true);\n      }\n    }\n    @Override protected boolean drawChild(    Canvas canvas,    View child,    long drawingTime){\n      boolean result=super.drawChild(canvas,child,drawingTime);\n      if (child == actionBar && parentLayout != null) {\n        parentLayout.drawHeaderShadow(canvas,actionBar.getMeasuredHeight());\n      }\n      return result;\n    }\n  }\n;\n  FrameLayout frameLayout=(FrameLayout)fragmentView;\n  fragmentView.setBackgroundColor(Theme.getColor(Theme.key_dialogBackground));\n  shadowDrawable=context.getResources().getDrawable(R.drawable.sheet_shadow_round).mutate();\n  shadowDrawable.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_dialogBackground),PorterDuff.Mode.MULTIPLY));\n  Rect padding=new Rect();\n  shadowDrawable.getPadding(padding);\n  FrameLayout.LayoutParams layoutParams;\n  if (locationType == LOCATION_TYPE_SEND || locationType == LOCATION_TYPE_SEND_WITH_LIVE) {\n    layoutParams=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,AndroidUtilities.dp(21) + padding.top);\n  }\n else {\n    layoutParams=new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,AndroidUtilities.dp(6) + padding.top);\n  }\n  layoutParams.gravity=Gravity.LEFT | Gravity.BOTTOM;\n  mapViewClip=new FrameLayout(context){\n    @Override protected void onMeasure(    int widthMeasureSpec,    int heightMeasureSpec){\n      super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n      if (overlayView != null) {\n        overlayView.updatePositions();\n      }\n    }\n  }\n;\n  mapViewClip.setBackgroundDrawable(new MapPlaceholderDrawable());\n  if (messageObject == null && (locationType == LOCATION_TYPE_SEND || locationType == LOCATION_TYPE_SEND_WITH_LIVE)) {\n    searchAreaButton=new SearchButton(context);\n    searchAreaButton.setTranslationX(-AndroidUtilities.dp(80));\n    Drawable drawable=Theme.createSimpleSelectorRoundRectDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground));\n    if (Build.VERSION.SDK_INT < 21) {\n      Drawable shadowDrawable=context.getResources().getDrawable(R.drawable.places_btn).mutate();\n      shadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000,PorterDuff.Mode.MULTIPLY));\n      CombinedDrawable combinedDrawable=new CombinedDrawable(shadowDrawable,drawable,AndroidUtilities.dp(2),AndroidUtilities.dp(2));\n      combinedDrawable.setFullsize(true);\n      drawable=combinedDrawable;\n    }\n else {\n      StateListAnimator animator=new StateListAnimator();\n      animator.addState(new int[]{android.R.attr.state_pressed},ObjectAnimator.ofFloat(searchAreaButton,View.TRANSLATION_Z,AndroidUtilities.dp(2),AndroidUtilities.dp(4)).setDuration(200));\n      animator.addState(new int[]{},ObjectAnimator.ofFloat(searchAreaButton,View.TRANSLATION_Z,AndroidUtilities.dp(4),AndroidUtilities.dp(2)).setDuration(200));\n      searchAreaButton.setStateListAnimator(animator);\n      searchAreaButton.setOutlineProvider(new ViewOutlineProvider(){\n        @SuppressLint(\"NewApi\") @Override public void getOutline(        View view,        Outline outline){\n          outline.setRoundRect(0,0,view.getMeasuredWidth(),view.getMeasuredHeight(),view.getMeasuredHeight() / 2);\n        }\n      }\n);\n    }\n    searchAreaButton.setBackgroundDrawable(drawable);\n    searchAreaButton.setTextColor(Theme.getColor(Theme.key_location_actionActiveIcon));\n    searchAreaButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP,14);\n    searchAreaButton.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n    searchAreaButton.setText(LocaleController.getString(\"PlacesInThisArea\",R.string.PlacesInThisArea));\n    searchAreaButton.setGravity(Gravity.CENTER);\n    searchAreaButton.setPadding(AndroidUtilities.dp(20),0,AndroidUtilities.dp(20),0);\n    mapViewClip.addView(searchAreaButton,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,Build.VERSION.SDK_INT >= 21 ? 40 : 44,Gravity.CENTER_HORIZONTAL | Gravity.TOP,80,12,80,0));\n    searchAreaButton.setOnClickListener(v -> {\n      showSearchPlacesButton(false);\n      adapter.searchPlacesWithQuery(null,userLocation,true,true);\n      searchedForCustomLocations=true;\n      showResults();\n    }\n);\n  }\n  mapTypeButton=new ActionBarMenuItem(context,null,0,Theme.getColor(Theme.key_location_actionIcon));\n  mapTypeButton.setClickable(true);\n  mapTypeButton.setSubMenuOpenSide(2);\n  mapTypeButton.setAdditionalXOffset(AndroidUtilities.dp(10));\n  mapTypeButton.setAdditionalYOffset(-AndroidUtilities.dp(10));\n  mapTypeButton.addSubItem(map_list_menu_map,R.drawable.msg_map,LocaleController.getString(\"Map\",R.string.Map));\n  mapTypeButton.addSubItem(map_list_menu_satellite,R.drawable.msg_satellite,LocaleController.getString(\"Satellite\",R.string.Satellite));\n  mapTypeButton.addSubItem(map_list_menu_hybrid,R.drawable.msg_hybrid,LocaleController.getString(\"Hybrid\",R.string.Hybrid));\n  mapTypeButton.setContentDescription(LocaleController.getString(\"AccDescrMoreOptions\",R.string.AccDescrMoreOptions));\n  Drawable drawable=Theme.createSimpleSelectorCircleDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground));\n  if (Build.VERSION.SDK_INT < 21) {\n    Drawable shadowDrawable=context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();\n    shadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000,PorterDuff.Mode.MULTIPLY));\n    CombinedDrawable combinedDrawable=new CombinedDrawable(shadowDrawable,drawable,0,0);\n    combinedDrawable.setIconSize(AndroidUtilities.dp(40),AndroidUtilities.dp(40));\n    drawable=combinedDrawable;\n  }\n else {\n    StateListAnimator animator=new StateListAnimator();\n    animator.addState(new int[]{android.R.attr.state_pressed},ObjectAnimator.ofFloat(mapTypeButton,View.TRANSLATION_Z,AndroidUtilities.dp(2),AndroidUtilities.dp(4)).setDuration(200));\n    animator.addState(new int[]{},ObjectAnimator.ofFloat(mapTypeButton,View.TRANSLATION_Z,AndroidUtilities.dp(4),AndroidUtilities.dp(2)).setDuration(200));\n    mapTypeButton.setStateListAnimator(animator);\n    mapTypeButton.setOutlineProvider(new ViewOutlineProvider(){\n      @SuppressLint(\"NewApi\") @Override public void getOutline(      View view,      Outline outline){\n        outline.setOval(0,0,AndroidUtilities.dp(40),AndroidUtilities.dp(40));\n      }\n    }\n);\n  }\n  mapTypeButton.setBackgroundDrawable(drawable);\n  mapTypeButton.setIcon(R.drawable.location_type);\n  mapViewClip.addView(mapTypeButton,LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 40 : 44,Build.VERSION.SDK_INT >= 21 ? 40 : 44,Gravity.RIGHT | Gravity.TOP,0,12,12,0));\n  mapTypeButton.setOnClickListener(v -> mapTypeButton.toggleSubMenu());\n  mapTypeButton.setDelegate(id -> {\n    if (googleMap == null) {\n      return;\n    }\n    if (id == map_list_menu_map) {\n      googleMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);\n    }\n else     if (id == map_list_menu_satellite) {\n      googleMap.setMapType(GoogleMap.MAP_TYPE_SATELLITE);\n    }\n else     if (id == map_list_menu_hybrid) {\n      googleMap.setMapType(GoogleMap.MAP_TYPE_HYBRID);\n    }\n  }\n);\n  locationButton=new ImageView(context);\n  drawable=Theme.createSimpleSelectorCircleDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground));\n  if (Build.VERSION.SDK_INT < 21) {\n    Drawable shadowDrawable=context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();\n    shadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000,PorterDuff.Mode.MULTIPLY));\n    CombinedDrawable combinedDrawable=new CombinedDrawable(shadowDrawable,drawable,0,0);\n    combinedDrawable.setIconSize(AndroidUtilities.dp(40),AndroidUtilities.dp(40));\n    drawable=combinedDrawable;\n  }\n else {\n    StateListAnimator animator=new StateListAnimator();\n    animator.addState(new int[]{android.R.attr.state_pressed},ObjectAnimator.ofFloat(locationButton,View.TRANSLATION_Z,AndroidUtilities.dp(2),AndroidUtilities.dp(4)).setDuration(200));\n    animator.addState(new int[]{},ObjectAnimator.ofFloat(locationButton,View.TRANSLATION_Z,AndroidUtilities.dp(4),AndroidUtilities.dp(2)).setDuration(200));\n    locationButton.setStateListAnimator(animator);\n    locationButton.setOutlineProvider(new ViewOutlineProvider(){\n      @SuppressLint(\"NewApi\") @Override public void getOutline(      View view,      Outline outline){\n        outline.setOval(0,0,AndroidUtilities.dp(40),AndroidUtilities.dp(40));\n      }\n    }\n);\n  }\n  locationButton.setBackgroundDrawable(drawable);\n  locationButton.setImageResource(R.drawable.location_current);\n  locationButton.setScaleType(ImageView.ScaleType.CENTER);\n  locationButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_location_actionActiveIcon),PorterDuff.Mode.MULTIPLY));\n  locationButton.setTag(Theme.key_location_actionActiveIcon);\n  locationButton.setContentDescription(LocaleController.getString(\"AccDescrMyLocation\",R.string.AccDescrMyLocation));\n  FrameLayout.LayoutParams layoutParams1=LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 40 : 44,Build.VERSION.SDK_INT >= 21 ? 40 : 44,Gravity.RIGHT | Gravity.BOTTOM,0,0,12,12);\n  layoutParams1.bottomMargin+=layoutParams.height - padding.top;\n  mapViewClip.addView(locationButton,layoutParams1);\n  locationButton.setOnClickListener(v -> {\n    if (Build.VERSION.SDK_INT >= 23) {\n      Activity activity=getParentActivity();\n      if (activity != null) {\n        if (activity.checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n          showPermissionAlert(false);\n          return;\n        }\n      }\n    }\n    if (!checkGpsEnabled()) {\n      return;\n    }\n    if (messageObject != null || chatLocation != null) {\n      if (myLocation != null && googleMap != null) {\n        googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(myLocation.getLatitude(),myLocation.getLongitude()),googleMap.getMaxZoomLevel() - 4));\n      }\n    }\n else {\n      if (myLocation != null && googleMap != null) {\n        locationButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_location_actionActiveIcon),PorterDuff.Mode.MULTIPLY));\n        locationButton.setTag(Theme.key_location_actionActiveIcon);\n        adapter.setCustomLocation(null);\n        userLocationMoved=false;\n        showSearchPlacesButton(false);\n        googleMap.animateCamera(CameraUpdateFactory.newLatLng(new LatLng(myLocation.getLatitude(),myLocation.getLongitude())));\n        if (searchedForCustomLocations) {\n          if (myLocation != null) {\n            adapter.searchPlacesWithQuery(null,myLocation,true,true);\n          }\n          searchedForCustomLocations=false;\n          showResults();\n        }\n      }\n    }\n    removeInfoView();\n  }\n);\n  proximityButton=new ImageView(context);\n  drawable=Theme.createSimpleSelectorCircleDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground));\n  if (Build.VERSION.SDK_INT < 21) {\n    Drawable shadowDrawable=context.getResources().getDrawable(R.drawable.floating_shadow_profile).mutate();\n    shadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000,PorterDuff.Mode.MULTIPLY));\n    CombinedDrawable combinedDrawable=new CombinedDrawable(shadowDrawable,drawable,0,0);\n    combinedDrawable.setIconSize(AndroidUtilities.dp(40),AndroidUtilities.dp(40));\n    drawable=combinedDrawable;\n  }\n else {\n    StateListAnimator animator=new StateListAnimator();\n    animator.addState(new int[]{android.R.attr.state_pressed},ObjectAnimator.ofFloat(proximityButton,View.TRANSLATION_Z,AndroidUtilities.dp(2),AndroidUtilities.dp(4)).setDuration(200));\n    animator.addState(new int[]{},ObjectAnimator.ofFloat(proximityButton,View.TRANSLATION_Z,AndroidUtilities.dp(4),AndroidUtilities.dp(2)).setDuration(200));\n    proximityButton.setStateListAnimator(animator);\n    proximityButton.setOutlineProvider(new ViewOutlineProvider(){\n      @SuppressLint(\"NewApi\") @Override public void getOutline(      View view,      Outline outline){\n        outline.setOval(0,0,AndroidUtilities.dp(40),AndroidUtilities.dp(40));\n      }\n    }\n);\n  }\n  proximityButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_location_actionIcon),PorterDuff.Mode.MULTIPLY));\n  proximityButton.setBackgroundDrawable(drawable);\n  proximityButton.setScaleType(ImageView.ScaleType.CENTER);\n  proximityButton.setContentDescription(LocaleController.getString(\"AccDescrLocationNotify\",R.string.AccDescrLocationNotify));\n  mapViewClip.addView(proximityButton,LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 40 : 44,Build.VERSION.SDK_INT >= 21 ? 40 : 44,Gravity.RIGHT | Gravity.TOP,0,12 + 50,12,0));\n  proximityButton.setOnClickListener(v -> {\n    if (getParentActivity() == null || myLocation == null || !checkGpsEnabled() || googleMap == null) {\n      return;\n    }\n    if (hintView != null) {\n      hintView.hide();\n    }\n    SharedPreferences preferences=MessagesController.getGlobalMainSettings();\n    preferences.edit().putInt(\"proximityhint\",3).commit();\n    LocationController.SharingLocationInfo info=getLocationController().getSharingLocationInfo(dialogId);\n    if (canUndo) {\n      undoView[0].hide(true,1);\n    }\n    if (info != null && info.proximityMeters > 0) {\n      proximityButton.setImageResource(R.drawable.msg_location_alert);\n      if (proximityCircle != null) {\n        proximityCircle.remove();\n        proximityCircle=null;\n      }\n      canUndo=true;\n      getUndoView().showWithAction(0,UndoView.ACTION_PROXIMITY_REMOVED,0,null,() -> {\n        getLocationController().setProximityLocation(dialogId,0,true);\n        canUndo=false;\n      }\n,() -> {\n        proximityButton.setImageResource(R.drawable.msg_location_alert2);\n        createCircle(info.proximityMeters);\n        canUndo=false;\n      }\n);\n      return;\n    }\n    openProximityAlert();\n  }\n);\n  TLRPC.Chat chat=null;\n  if ((int)dialogId < 0) {\n    chat=getMessagesController().getChat(-(int)dialogId);\n  }\n  if (messageObject == null || !messageObject.isLiveLocation() || messageObject.isExpiredLiveLocation(getConnectionsManager().getCurrentTime()) || ChatObject.isChannel(chat) && !chat.megagroup) {\n    proximityButton.setVisibility(View.GONE);\n    proximityButton.setImageResource(R.drawable.msg_location_alert);\n  }\n else {\n    LocationController.SharingLocationInfo myInfo=getLocationController().getSharingLocationInfo(dialogId);\n    if (myInfo != null && myInfo.proximityMeters > 0) {\n      proximityButton.setImageResource(R.drawable.msg_location_alert2);\n    }\n else {\n      if ((int)dialogId > 0 && messageObject.getFromChatId() == getUserConfig().getClientUserId()) {\n        proximityButton.setVisibility(View.INVISIBLE);\n        proximityButton.setAlpha(0.0f);\n        proximityButton.setScaleX(0.4f);\n        proximityButton.setScaleY(0.4f);\n      }\n      proximityButton.setImageResource(R.drawable.msg_location_alert);\n    }\n  }\n  hintView=new HintView(context,6,true);\n  hintView.setVisibility(View.INVISIBLE);\n  hintView.setShowingDuration(4000);\n  mapViewClip.addView(hintView,LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.LEFT | Gravity.TOP,10,0,10,0));\n  emptyView=new LinearLayout(context);\n  emptyView.setOrientation(LinearLayout.VERTICAL);\n  emptyView.setGravity(Gravity.CENTER_HORIZONTAL);\n  emptyView.setPadding(0,AndroidUtilities.dp(60 + 100),0,0);\n  emptyView.setVisibility(View.GONE);\n  frameLayout.addView(emptyView,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT));\n  emptyView.setOnTouchListener((v,event) -> true);\n  emptyImageView=new ImageView(context);\n  emptyImageView.setImageResource(R.drawable.location_empty);\n  emptyImageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_dialogEmptyImage),PorterDuff.Mode.MULTIPLY));\n  emptyView.addView(emptyImageView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT));\n  emptyTitleTextView=new TextView(context);\n  emptyTitleTextView.setTextColor(Theme.getColor(Theme.key_dialogEmptyText));\n  emptyTitleTextView.setGravity(Gravity.CENTER);\n  emptyTitleTextView.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n  emptyTitleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,17);\n  emptyTitleTextView.setText(LocaleController.getString(\"NoPlacesFound\",R.string.NoPlacesFound));\n  emptyView.addView(emptyTitleTextView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER,0,11,0,0));\n  emptySubtitleTextView=new TextView(context);\n  emptySubtitleTextView.setTextColor(Theme.getColor(Theme.key_dialogEmptyText));\n  emptySubtitleTextView.setGravity(Gravity.CENTER);\n  emptySubtitleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,15);\n  emptySubtitleTextView.setPadding(AndroidUtilities.dp(40),0,AndroidUtilities.dp(40),0);\n  emptyView.addView(emptySubtitleTextView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER,0,6,0,0));\n  listView=new RecyclerListView(context);\n  listView.setAdapter(adapter=new LocationActivityAdapter(context,locationType,dialogId,false){\n    @Override protected void onDirectionClick(){\n      if (Build.VERSION.SDK_INT >= 23) {\n        Activity activity=getParentActivity();\n        if (activity != null) {\n          if (activity.checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n            showPermissionAlert(true);\n            return;\n          }\n        }\n      }\n      if (myLocation != null) {\n        try {\n          Intent intent;\n          if (messageObject != null) {\n            intent=new Intent(Intent.ACTION_VIEW,Uri.parse(String.format(Locale.US,\"http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f\",myLocation.getLatitude(),myLocation.getLongitude(),messageObject.messageOwner.media.geo.lat,messageObject.messageOwner.media.geo._long)));\n          }\n else {\n            intent=new Intent(Intent.ACTION_VIEW,Uri.parse(String.format(Locale.US,\"http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f\",myLocation.getLatitude(),myLocation.getLongitude(),chatLocation.geo_point.lat,chatLocation.geo_point._long)));\n          }\n          getParentActivity().startActivity(intent);\n        }\n catch (        Exception e) {\n          FileLog.e(e);\n        }\n      }\n    }\n  }\n);\n  adapter.setUpdateRunnable(() -> updateClipView(false));\n  listView.setVerticalScrollBarEnabled(false);\n  listView.setLayoutManager(layoutManager=new LinearLayoutManager(context,LinearLayoutManager.VERTICAL,false));\n  frameLayout.addView(listView,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT,Gravity.LEFT | Gravity.TOP));\n  listView.setOnScrollListener(new RecyclerView.OnScrollListener(){\n    @Override public void onScrollStateChanged(    RecyclerView recyclerView,    int newState){\n      scrolling=newState != RecyclerView.SCROLL_STATE_IDLE;\n      if (!scrolling && forceUpdate != null) {\n        forceUpdate=null;\n      }\n    }\n    @Override public void onScrolled(    RecyclerView recyclerView,    int dx,    int dy){\n      updateClipView(false);\n      if (forceUpdate != null) {\n        yOffset+=dy;\n      }\n    }\n  }\n);\n  ((DefaultItemAnimator)listView.getItemAnimator()).setDelayAnimations(false);\n  listView.setOnItemClickListener((view,position) -> {\n    if (locationType == LOCATION_TYPE_GROUP) {\n      if (position == 1) {\n        TLRPC.TL_messageMediaVenue venue=(TLRPC.TL_messageMediaVenue)adapter.getItem(position);\n        if (venue == null) {\n          return;\n        }\n        if (dialogId == 0) {\n          delegate.didSelectLocation(venue,LOCATION_TYPE_GROUP,true,0);\n          finishFragment();\n        }\n else {\n          final AlertDialog[] progressDialog=new AlertDialog[]{new AlertDialog(getParentActivity(),3)};\n          TLRPC.TL_channels_editLocation req=new TLRPC.TL_channels_editLocation();\n          req.address=venue.address;\n          req.channel=getMessagesController().getInputChannel(-(int)dialogId);\n          req.geo_point=new TLRPC.TL_inputGeoPoint();\n          req.geo_point.lat=venue.geo.lat;\n          req.geo_point._long=venue.geo._long;\n          int requestId=getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n            try {\n              progressDialog[0].dismiss();\n            }\n catch (            Throwable ignore) {\n            }\n            progressDialog[0]=null;\n            delegate.didSelectLocation(venue,LOCATION_TYPE_GROUP,true,0);\n            finishFragment();\n          }\n));\n          progressDialog[0].setOnCancelListener(dialog -> getConnectionsManager().cancelRequest(requestId,true));\n          showDialog(progressDialog[0]);\n        }\n      }\n    }\n else     if (locationType == LOCATION_TYPE_GROUP_VIEW) {\n      if (googleMap != null) {\n        googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(chatLocation.geo_point.lat,chatLocation.geo_point._long),googleMap.getMaxZoomLevel() - 4));\n      }\n    }\n else     if (position == 1 && messageObject != null && (!messageObject.isLiveLocation() || locationType == LOCATION_TYPE_LIVE_VIEW)) {\n      if (googleMap != null) {\n        googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(messageObject.messageOwner.media.geo.lat,messageObject.messageOwner.media.geo._long),googleMap.getMaxZoomLevel() - 4));\n      }\n    }\n else     if (position == 1 && locationType != 2) {\n      if (delegate != null && userLocation != null) {\n        if (lastPressedMarkerView != null) {\n          lastPressedMarkerView.callOnClick();\n        }\n else {\n          TLRPC.TL_messageMediaGeo location=new TLRPC.TL_messageMediaGeo();\n          location.geo=new TLRPC.TL_geoPoint();\n          location.geo.lat=AndroidUtilities.fixLocationCoord(userLocation.getLatitude());\n          location.geo._long=AndroidUtilities.fixLocationCoord(userLocation.getLongitude());\n          if (parentFragment != null && parentFragment.isInScheduleMode()) {\n            AlertsCreator.createScheduleDatePickerDialog(getParentActivity(),parentFragment.getDialogId(),(notify,scheduleDate) -> {\n              delegate.didSelectLocation(location,locationType,notify,scheduleDate);\n              finishFragment();\n            }\n);\n          }\n else {\n            delegate.didSelectLocation(location,locationType,true,0);\n            finishFragment();\n          }\n        }\n      }\n    }\n else     if (position == 2 && locationType == 1 || position == 1 && locationType == 2 || position == 3 && locationType == 3) {\n      if (getLocationController().isSharingLocation(dialogId)) {\n        getLocationController().removeSharingLocation(dialogId);\n        finishFragment();\n      }\n else {\n        openShareLiveLocation(0);\n      }\n    }\n else {\n      Object object=adapter.getItem(position);\n      if (object instanceof TLRPC.TL_messageMediaVenue) {\n        if (parentFragment != null && parentFragment.isInScheduleMode()) {\n          AlertsCreator.createScheduleDatePickerDialog(getParentActivity(),parentFragment.getDialogId(),(notify,scheduleDate) -> {\n            delegate.didSelectLocation((TLRPC.TL_messageMediaVenue)object,locationType,notify,scheduleDate);\n            finishFragment();\n          }\n);\n        }\n else {\n          delegate.didSelectLocation((TLRPC.TL_messageMediaVenue)object,locationType,true,0);\n          finishFragment();\n        }\n      }\n else       if (object instanceof LiveLocation) {\n        LiveLocation liveLocation=(LiveLocation)object;\n        googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(liveLocation.marker.getPosition(),googleMap.getMaxZoomLevel() - 4));\n      }\n    }\n  }\n);\n  adapter.setDelegate(dialogId,this::updatePlacesMarkers);\n  adapter.setOverScrollHeight(overScrollHeight);\n  frameLayout.addView(mapViewClip,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT,Gravity.LEFT | Gravity.TOP));\n  mapView=new MapView(context){\n    @Override public boolean onTouchEvent(    MotionEvent event){\n      return super.onTouchEvent(event);\n    }\n    @Override public boolean dispatchTouchEvent(    MotionEvent ev){\n      MotionEvent eventToRecycle=null;\n      if (yOffset != 0) {\n        ev=eventToRecycle=MotionEvent.obtain(ev);\n        eventToRecycle.offsetLocation(0,-yOffset / 2);\n      }\n      boolean result=super.dispatchTouchEvent(ev);\n      if (eventToRecycle != null) {\n        eventToRecycle.recycle();\n      }\n      return result;\n    }\n    @Override public boolean onInterceptTouchEvent(    MotionEvent ev){\n      if (messageObject == null && chatLocation == null) {\n        if (ev.getAction() == MotionEvent.ACTION_DOWN) {\n          if (animatorSet != null) {\n            animatorSet.cancel();\n          }\n          animatorSet=new AnimatorSet();\n          animatorSet.setDuration(200);\n          animatorSet.playTogether(ObjectAnimator.ofFloat(markerImageView,View.TRANSLATION_Y,markerTop - AndroidUtilities.dp(10)));\n          animatorSet.start();\n        }\n else         if (ev.getAction() == MotionEvent.ACTION_UP) {\n          if (animatorSet != null) {\n            animatorSet.cancel();\n          }\n          yOffset=0;\n          animatorSet=new AnimatorSet();\n          animatorSet.setDuration(200);\n          animatorSet.playTogether(ObjectAnimator.ofFloat(markerImageView,View.TRANSLATION_Y,markerTop));\n          animatorSet.start();\n          adapter.fetchLocationAddress();\n        }\n        if (ev.getAction() == MotionEvent.ACTION_MOVE) {\n          if (!userLocationMoved) {\n            locationButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_location_actionIcon),PorterDuff.Mode.MULTIPLY));\n            locationButton.setTag(Theme.key_location_actionIcon);\n            userLocationMoved=true;\n          }\n          if (googleMap != null) {\n            if (userLocation != null) {\n              userLocation.setLatitude(googleMap.getCameraPosition().target.latitude);\n              userLocation.setLongitude(googleMap.getCameraPosition().target.longitude);\n            }\n          }\n          adapter.setCustomLocation(userLocation);\n        }\n      }\n      return super.onInterceptTouchEvent(ev);\n    }\n    @Override protected void onLayout(    boolean changed,    int left,    int top,    int right,    int bottom){\n      super.onLayout(changed,left,top,right,bottom);\n      AndroidUtilities.runOnUIThread(() -> {\n        if (moveToBounds != null) {\n          googleMap.moveCamera(moveToBounds);\n          moveToBounds=null;\n        }\n      }\n);\n    }\n  }\n;\n  final MapView map=mapView;\n  new Thread(() -> {\n    try {\n      map.onCreate(null);\n    }\n catch (    Exception e) {\n    }\n    AndroidUtilities.runOnUIThread(() -> {\n      if (mapView != null && getParentActivity() != null) {\n        try {\n          map.onCreate(null);\n          MapsInitializer.initialize(ApplicationLoader.applicationContext);\n          mapView.getMapAsync(map1 -> {\n            googleMap=map1;\n            if (isActiveThemeDark()) {\n              currentMapStyleDark=true;\n              MapStyleOptions style=MapStyleOptions.loadRawResourceStyle(ApplicationLoader.applicationContext,R.raw.mapstyle_night);\n              googleMap.setMapStyle(style);\n            }\n            googleMap.setPadding(AndroidUtilities.dp(70),0,AndroidUtilities.dp(70),AndroidUtilities.dp(10));\n            onMapInit();\n          }\n);\n          mapsInitialized=true;\n          if (onResumeCalled) {\n            mapView.onResume();\n          }\n        }\n catch (        Exception e) {\n          FileLog.e(e);\n        }\n      }\n    }\n);\n  }\n).start();\n  if (messageObject == null && chatLocation == null) {\n    if (chat != null && locationType == LOCATION_TYPE_GROUP && dialogId != 0) {\n      FrameLayout frameLayout1=new FrameLayout(context);\n      frameLayout1.setBackgroundResource(R.drawable.livepin);\n      mapViewClip.addView(frameLayout1,LayoutHelper.createFrame(62,76,Gravity.TOP | Gravity.CENTER_HORIZONTAL));\n      BackupImageView backupImageView=new BackupImageView(context);\n      backupImageView.setRoundRadius(AndroidUtilities.dp(26));\n      backupImageView.setImage(ImageLocation.getForChat(chat,false),\"50_50\",new AvatarDrawable(chat),chat);\n      frameLayout1.addView(backupImageView,LayoutHelper.createFrame(52,52,Gravity.LEFT | Gravity.TOP,5,5,0,0));\n      markerImageView=frameLayout1;\n      markerImageView.setTag(1);\n    }\n    if (markerImageView == null) {\n      ImageView imageView=new ImageView(context);\n      imageView.setImageResource(R.drawable.map_pin2);\n      mapViewClip.addView(imageView,LayoutHelper.createFrame(28,48,Gravity.TOP | Gravity.CENTER_HORIZONTAL));\n      markerImageView=imageView;\n    }\n    searchListView=new RecyclerListView(context);\n    searchListView.setVisibility(View.GONE);\n    searchListView.setLayoutManager(new LinearLayoutManager(context,LinearLayoutManager.VERTICAL,false));\n    searchAdapter=new LocationActivitySearchAdapter(context){\n      @Override public void notifyDataSetChanged(){\n        if (searchItem != null) {\n          searchItem.setShowSearchProgress(searchAdapter.isSearching());\n        }\n        if (emptySubtitleTextView != null) {\n          emptySubtitleTextView.setText(AndroidUtilities.replaceTags(LocaleController.formatString(\"NoPlacesFoundInfo\",R.string.NoPlacesFoundInfo,searchAdapter.getLastSearchString())));\n        }\n        super.notifyDataSetChanged();\n      }\n    }\n;\n    searchAdapter.setDelegate(0,places -> {\n      searchInProgress=false;\n      updateEmptyView();\n    }\n);\n    frameLayout.addView(searchListView,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT,Gravity.LEFT | Gravity.TOP));\n    searchListView.setOnScrollListener(new RecyclerView.OnScrollListener(){\n      @Override public void onScrollStateChanged(      RecyclerView recyclerView,      int newState){\n        if (newState == RecyclerView.SCROLL_STATE_DRAGGING && searching && searchWas) {\n          AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());\n        }\n      }\n    }\n);\n    searchListView.setOnItemClickListener((view,position) -> {\n      TLRPC.TL_messageMediaVenue object=searchAdapter.getItem(position);\n      if (object != null && delegate != null) {\n        if (parentFragment != null && parentFragment.isInScheduleMode()) {\n          AlertsCreator.createScheduleDatePickerDialog(getParentActivity(),parentFragment.getDialogId(),(notify,scheduleDate) -> {\n            delegate.didSelectLocation(object,locationType,notify,scheduleDate);\n            finishFragment();\n          }\n);\n        }\n else {\n          delegate.didSelectLocation(object,locationType,true,0);\n          finishFragment();\n        }\n      }\n    }\n);\n  }\n else   if (messageObject != null && !messageObject.isLiveLocation() || chatLocation != null) {\n    if (chatLocation != null) {\n      adapter.setChatLocation(chatLocation);\n    }\n else     if (messageObject != null) {\n      adapter.setMessageObject(messageObject);\n    }\n  }\n  if (messageObject != null && locationType == LOCATION_TYPE_LIVE_VIEW) {\n    adapter.setMessageObject(messageObject);\n  }\n  for (int a=0; a < 2; a++) {\n    undoView[a]=new UndoView(context);\n    undoView[a].setAdditionalTranslationY(AndroidUtilities.dp(10));\n    if (Build.VERSION.SDK_INT >= 21) {\n      undoView[a].setTranslationZ(AndroidUtilities.dp(5));\n    }\n    mapViewClip.addView(undoView[a],LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,Gravity.BOTTOM | Gravity.LEFT,8,0,8,8));\n  }\n  shadow=new View(context){\n    private RectF rect=new RectF();\n    @Override protected void onDraw(    Canvas canvas){\n      shadowDrawable.setBounds(-padding.left,0,getMeasuredWidth() + padding.right,getMeasuredHeight());\n      shadowDrawable.draw(canvas);\n      if (locationType == LOCATION_TYPE_SEND || locationType == LOCATION_TYPE_SEND_WITH_LIVE) {\n        int w=AndroidUtilities.dp(36);\n        int y=padding.top + AndroidUtilities.dp(10);\n        rect.set((getMeasuredWidth() - w) / 2,y,(getMeasuredWidth() + w) / 2,y + AndroidUtilities.dp(4));\n        int color=Theme.getColor(Theme.key_sheet_scrollUp);\n        int alpha=Color.alpha(color);\n        Theme.dialogs_onlineCirclePaint.setColor(color);\n        canvas.drawRoundRect(rect,AndroidUtilities.dp(2),AndroidUtilities.dp(2),Theme.dialogs_onlineCirclePaint);\n      }\n    }\n  }\n;\n  if (Build.VERSION.SDK_INT >= 21) {\n    shadow.setTranslationZ(AndroidUtilities.dp(6));\n  }\n  mapViewClip.addView(shadow,layoutParams);\n  if (messageObject == null && chatLocation == null && initialLocation != null) {\n    userLocationMoved=true;\n    locationButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_location_actionIcon),PorterDuff.Mode.MULTIPLY));\n    locationButton.setTag(Theme.key_location_actionIcon);\n  }\n  frameLayout.addView(actionBar);\n  updateEmptyView();\n  return fragmentView;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 5412,
      "astHeight" : 27
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 694,
        "startColumnNumber" : 12,
        "endLineNumber" : 694,
        "endColumnNumber" : 214
      },
      "nodeContext" : "Drawable drawable=Theme.createSimpleSelectorRoundRectDrawable(AndroidUtilities.dp(40),Theme.getColor(Theme.key_location_actionBackground),Theme.getColor(Theme.key_location_actionPressedBackground));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    },
    "tokenLength" : 17,
    "type" : "org.telegram.ui.ActionBar.Drawable"
  } ],
  "positionList" : [ {
    "charLength" : 181,
    "startLineNumber" : 694,
    "startColumnNumber" : 32,
    "endLineNumber" : 694,
    "endColumnNumber" : 213
  } ],
  "layoutRelationDataList" : [ ]
}