{
  "id" : 75,
  "expression" : "br",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Searches/LinearSearch.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "br",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 25,
      "startColumnNumber" : 32,
      "endLineNumber" : 25,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 25,
        "startColumnNumber" : 32,
        "endLineNumber" : 25,
        "endColumnNumber" : 45
      },
      "nodeContext" : "br.readLine()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 25,
        "startColumnNumber" : 15,
        "endLineNumber" : 25,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Integer.parseInt(br.readLine())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 46
      },
      "nodeContext" : "size=Integer.parseInt(br.readLine())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 47
      },
      "nodeContext" : "size=Integer.parseInt(br.readLine());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1640,
        "startLineNumber" : 15,
        "startColumnNumber" : 60,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n  Integer[] myArray;\n  int size=0;\n  System.out.print(\"Enter the array size: \");\n  size=Integer.parseInt(br.readLine());\n  myArray=new Integer[size];\n  for (int i=0; i < size; i++) {\n    System.out.print(\"For index \" + i + \", enter an integer: \");\n    myArray[i]=Integer.parseInt(br.readLine());\n  }\n  System.out.print(\"Enter integer to search for: \");\n  Integer key=Integer.parseInt(br.readLine());\n  System.out.printf(\"The integer %d is found in index %d\\n\",key,linearSearch(myArray,key));\n  String[] myArray1;\n  int size1=0;\n  System.out.print(\"Enter the array size: \");\n  size1=Integer.parseInt(br.readLine());\n  myArray1=new String[size];\n  for (int i=0; i < size1; i++) {\n    System.out.print(\"For index \" + i + \", enter a String: \");\n    myArray1[i]=br.readLine();\n  }\n  System.out.print(\"Enter String to search for: \");\n  String key1=br.readLine();\n  System.out.printf(\"The string %s is found in index %d\\n\",key1,linearSearch(myArray1,key1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1777,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * The main method\n * @param args Command line arguments\n */\npublic static void main(String[] args) throws Exception {\n  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n  Integer[] myArray;\n  int size=0;\n  System.out.print(\"Enter the array size: \");\n  size=Integer.parseInt(br.readLine());\n  myArray=new Integer[size];\n  for (int i=0; i < size; i++) {\n    System.out.print(\"For index \" + i + \", enter an integer: \");\n    myArray[i]=Integer.parseInt(br.readLine());\n  }\n  System.out.print(\"Enter integer to search for: \");\n  Integer key=Integer.parseInt(br.readLine());\n  System.out.printf(\"The integer %d is found in index %d\\n\",key,linearSearch(myArray,key));\n  String[] myArray1;\n  int size1=0;\n  System.out.print(\"Enter the array size: \");\n  size1=Integer.parseInt(br.readLine());\n  myArray1=new String[size];\n  for (int i=0; i < size1; i++) {\n    System.out.print(\"For index \" + i + \", enter a String: \");\n    myArray1[i]=br.readLine();\n  }\n  System.out.print(\"Enter String to search for: \");\n  String key1=br.readLine();\n  System.out.printf(\"The string %s is found in index %d\\n\",key1,linearSearch(myArray1,key1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 47
      },
      "nodeContext" : "size=Integer.parseInt(br.readLine());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "br",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 29,
      "startColumnNumber" : 42,
      "endLineNumber" : 29,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 29,
        "startColumnNumber" : 42,
        "endLineNumber" : 29,
        "endColumnNumber" : 55
      },
      "nodeContext" : "br.readLine()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 29,
        "startColumnNumber" : 25,
        "endLineNumber" : 29,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Integer.parseInt(br.readLine())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 29,
        "startColumnNumber" : 12,
        "endLineNumber" : 29,
        "endColumnNumber" : 56
      },
      "nodeContext" : "myArray[i]=Integer.parseInt(br.readLine())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 29,
        "startColumnNumber" : 12,
        "endLineNumber" : 29,
        "endColumnNumber" : 57
      },
      "nodeContext" : "myArray[i]=Integer.parseInt(br.readLine());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 27,
        "startColumnNumber" : 38,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.out.print(\"For index \" + i + \", enter an integer: \");\n  myArray[i]=Integer.parseInt(br.readLine());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  System.out.print(\"For index \" + i + \", enter an integer: \");\n  myArray[i]=Integer.parseInt(br.readLine());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1640,
        "startLineNumber" : 15,
        "startColumnNumber" : 60,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n  Integer[] myArray;\n  int size=0;\n  System.out.print(\"Enter the array size: \");\n  size=Integer.parseInt(br.readLine());\n  myArray=new Integer[size];\n  for (int i=0; i < size; i++) {\n    System.out.print(\"For index \" + i + \", enter an integer: \");\n    myArray[i]=Integer.parseInt(br.readLine());\n  }\n  System.out.print(\"Enter integer to search for: \");\n  Integer key=Integer.parseInt(br.readLine());\n  System.out.printf(\"The integer %d is found in index %d\\n\",key,linearSearch(myArray,key));\n  String[] myArray1;\n  int size1=0;\n  System.out.print(\"Enter the array size: \");\n  size1=Integer.parseInt(br.readLine());\n  myArray1=new String[size];\n  for (int i=0; i < size1; i++) {\n    System.out.print(\"For index \" + i + \", enter a String: \");\n    myArray1[i]=br.readLine();\n  }\n  System.out.print(\"Enter String to search for: \");\n  String key1=br.readLine();\n  System.out.printf(\"The string %s is found in index %d\\n\",key1,linearSearch(myArray1,key1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1777,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * The main method\n * @param args Command line arguments\n */\npublic static void main(String[] args) throws Exception {\n  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n  Integer[] myArray;\n  int size=0;\n  System.out.print(\"Enter the array size: \");\n  size=Integer.parseInt(br.readLine());\n  myArray=new Integer[size];\n  for (int i=0; i < size; i++) {\n    System.out.print(\"For index \" + i + \", enter an integer: \");\n    myArray[i]=Integer.parseInt(br.readLine());\n  }\n  System.out.print(\"Enter integer to search for: \");\n  Integer key=Integer.parseInt(br.readLine());\n  System.out.printf(\"The integer %d is found in index %d\\n\",key,linearSearch(myArray,key));\n  String[] myArray1;\n  int size1=0;\n  System.out.print(\"Enter the array size: \");\n  size1=Integer.parseInt(br.readLine());\n  myArray1=new String[size];\n  for (int i=0; i < size1; i++) {\n    System.out.print(\"For index \" + i + \", enter a String: \");\n    myArray1[i]=br.readLine();\n  }\n  System.out.print(\"Enter String to search for: \");\n  String key1=br.readLine();\n  System.out.printf(\"The string %s is found in index %d\\n\",key1,linearSearch(myArray1,key1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 29,
        "startColumnNumber" : 12,
        "endLineNumber" : 29,
        "endColumnNumber" : 57
      },
      "nodeContext" : "myArray[i]=Integer.parseInt(br.readLine());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "br",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 34,
      "startColumnNumber" : 39,
      "endLineNumber" : 34,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 34,
        "startColumnNumber" : 39,
        "endLineNumber" : 34,
        "endColumnNumber" : 52
      },
      "nodeContext" : "br.readLine()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 34,
        "startColumnNumber" : 22,
        "endLineNumber" : 34,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Integer.parseInt(br.readLine())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 34,
        "startColumnNumber" : 16,
        "endLineNumber" : 34,
        "endColumnNumber" : 53
      },
      "nodeContext" : "key=Integer.parseInt(br.readLine())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Integer key=Integer.parseInt(br.readLine());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1640,
        "startLineNumber" : 15,
        "startColumnNumber" : 60,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n  Integer[] myArray;\n  int size=0;\n  System.out.print(\"Enter the array size: \");\n  size=Integer.parseInt(br.readLine());\n  myArray=new Integer[size];\n  for (int i=0; i < size; i++) {\n    System.out.print(\"For index \" + i + \", enter an integer: \");\n    myArray[i]=Integer.parseInt(br.readLine());\n  }\n  System.out.print(\"Enter integer to search for: \");\n  Integer key=Integer.parseInt(br.readLine());\n  System.out.printf(\"The integer %d is found in index %d\\n\",key,linearSearch(myArray,key));\n  String[] myArray1;\n  int size1=0;\n  System.out.print(\"Enter the array size: \");\n  size1=Integer.parseInt(br.readLine());\n  myArray1=new String[size];\n  for (int i=0; i < size1; i++) {\n    System.out.print(\"For index \" + i + \", enter a String: \");\n    myArray1[i]=br.readLine();\n  }\n  System.out.print(\"Enter String to search for: \");\n  String key1=br.readLine();\n  System.out.printf(\"The string %s is found in index %d\\n\",key1,linearSearch(myArray1,key1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1777,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * The main method\n * @param args Command line arguments\n */\npublic static void main(String[] args) throws Exception {\n  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n  Integer[] myArray;\n  int size=0;\n  System.out.print(\"Enter the array size: \");\n  size=Integer.parseInt(br.readLine());\n  myArray=new Integer[size];\n  for (int i=0; i < size; i++) {\n    System.out.print(\"For index \" + i + \", enter an integer: \");\n    myArray[i]=Integer.parseInt(br.readLine());\n  }\n  System.out.print(\"Enter integer to search for: \");\n  Integer key=Integer.parseInt(br.readLine());\n  System.out.printf(\"The integer %d is found in index %d\\n\",key,linearSearch(myArray,key));\n  String[] myArray1;\n  int size1=0;\n  System.out.print(\"Enter the array size: \");\n  size1=Integer.parseInt(br.readLine());\n  myArray1=new String[size];\n  for (int i=0; i < size1; i++) {\n    System.out.print(\"For index \" + i + \", enter a String: \");\n    myArray1[i]=br.readLine();\n  }\n  System.out.print(\"Enter String to search for: \");\n  String key1=br.readLine();\n  System.out.printf(\"The string %s is found in index %d\\n\",key1,linearSearch(myArray1,key1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Integer key=Integer.parseInt(br.readLine());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "br",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 45,
      "startColumnNumber" : 33,
      "endLineNumber" : 45,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 45,
        "startColumnNumber" : 33,
        "endLineNumber" : 45,
        "endColumnNumber" : 46
      },
      "nodeContext" : "br.readLine()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Integer.parseInt(br.readLine())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 47
      },
      "nodeContext" : "size1=Integer.parseInt(br.readLine())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 48
      },
      "nodeContext" : "size1=Integer.parseInt(br.readLine());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1640,
        "startLineNumber" : 15,
        "startColumnNumber" : 60,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n  Integer[] myArray;\n  int size=0;\n  System.out.print(\"Enter the array size: \");\n  size=Integer.parseInt(br.readLine());\n  myArray=new Integer[size];\n  for (int i=0; i < size; i++) {\n    System.out.print(\"For index \" + i + \", enter an integer: \");\n    myArray[i]=Integer.parseInt(br.readLine());\n  }\n  System.out.print(\"Enter integer to search for: \");\n  Integer key=Integer.parseInt(br.readLine());\n  System.out.printf(\"The integer %d is found in index %d\\n\",key,linearSearch(myArray,key));\n  String[] myArray1;\n  int size1=0;\n  System.out.print(\"Enter the array size: \");\n  size1=Integer.parseInt(br.readLine());\n  myArray1=new String[size];\n  for (int i=0; i < size1; i++) {\n    System.out.print(\"For index \" + i + \", enter a String: \");\n    myArray1[i]=br.readLine();\n  }\n  System.out.print(\"Enter String to search for: \");\n  String key1=br.readLine();\n  System.out.printf(\"The string %s is found in index %d\\n\",key1,linearSearch(myArray1,key1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1777,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * The main method\n * @param args Command line arguments\n */\npublic static void main(String[] args) throws Exception {\n  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n  Integer[] myArray;\n  int size=0;\n  System.out.print(\"Enter the array size: \");\n  size=Integer.parseInt(br.readLine());\n  myArray=new Integer[size];\n  for (int i=0; i < size; i++) {\n    System.out.print(\"For index \" + i + \", enter an integer: \");\n    myArray[i]=Integer.parseInt(br.readLine());\n  }\n  System.out.print(\"Enter integer to search for: \");\n  Integer key=Integer.parseInt(br.readLine());\n  System.out.printf(\"The integer %d is found in index %d\\n\",key,linearSearch(myArray,key));\n  String[] myArray1;\n  int size1=0;\n  System.out.print(\"Enter the array size: \");\n  size1=Integer.parseInt(br.readLine());\n  myArray1=new String[size];\n  for (int i=0; i < size1; i++) {\n    System.out.print(\"For index \" + i + \", enter a String: \");\n    myArray1[i]=br.readLine();\n  }\n  System.out.print(\"Enter String to search for: \");\n  String key1=br.readLine();\n  System.out.printf(\"The string %s is found in index %d\\n\",key1,linearSearch(myArray1,key1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 48
      },
      "nodeContext" : "size1=Integer.parseInt(br.readLine());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "br",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 49,
      "startColumnNumber" : 26,
      "endLineNumber" : 49,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 49,
        "startColumnNumber" : 26,
        "endLineNumber" : 49,
        "endColumnNumber" : 39
      },
      "nodeContext" : "br.readLine()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 39
      },
      "nodeContext" : "myArray1[i]=br.readLine()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 40
      },
      "nodeContext" : "myArray1[i]=br.readLine();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 47,
        "startColumnNumber" : 39,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.out.print(\"For index \" + i + \", enter a String: \");\n  myArray1[i]=br.readLine();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < size1; i++) {\n  System.out.print(\"For index \" + i + \", enter a String: \");\n  myArray1[i]=br.readLine();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1640,
        "startLineNumber" : 15,
        "startColumnNumber" : 60,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n  Integer[] myArray;\n  int size=0;\n  System.out.print(\"Enter the array size: \");\n  size=Integer.parseInt(br.readLine());\n  myArray=new Integer[size];\n  for (int i=0; i < size; i++) {\n    System.out.print(\"For index \" + i + \", enter an integer: \");\n    myArray[i]=Integer.parseInt(br.readLine());\n  }\n  System.out.print(\"Enter integer to search for: \");\n  Integer key=Integer.parseInt(br.readLine());\n  System.out.printf(\"The integer %d is found in index %d\\n\",key,linearSearch(myArray,key));\n  String[] myArray1;\n  int size1=0;\n  System.out.print(\"Enter the array size: \");\n  size1=Integer.parseInt(br.readLine());\n  myArray1=new String[size];\n  for (int i=0; i < size1; i++) {\n    System.out.print(\"For index \" + i + \", enter a String: \");\n    myArray1[i]=br.readLine();\n  }\n  System.out.print(\"Enter String to search for: \");\n  String key1=br.readLine();\n  System.out.printf(\"The string %s is found in index %d\\n\",key1,linearSearch(myArray1,key1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1777,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * The main method\n * @param args Command line arguments\n */\npublic static void main(String[] args) throws Exception {\n  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n  Integer[] myArray;\n  int size=0;\n  System.out.print(\"Enter the array size: \");\n  size=Integer.parseInt(br.readLine());\n  myArray=new Integer[size];\n  for (int i=0; i < size; i++) {\n    System.out.print(\"For index \" + i + \", enter an integer: \");\n    myArray[i]=Integer.parseInt(br.readLine());\n  }\n  System.out.print(\"Enter integer to search for: \");\n  Integer key=Integer.parseInt(br.readLine());\n  System.out.printf(\"The integer %d is found in index %d\\n\",key,linearSearch(myArray,key));\n  String[] myArray1;\n  int size1=0;\n  System.out.print(\"Enter the array size: \");\n  size1=Integer.parseInt(br.readLine());\n  myArray1=new String[size];\n  for (int i=0; i < size1; i++) {\n    System.out.print(\"For index \" + i + \", enter a String: \");\n    myArray1[i]=br.readLine();\n  }\n  System.out.print(\"Enter String to search for: \");\n  String key1=br.readLine();\n  System.out.printf(\"The string %s is found in index %d\\n\",key1,linearSearch(myArray1,key1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 40
      },
      "nodeContext" : "myArray1[i]=br.readLine();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "br",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 54,
      "startColumnNumber" : 22,
      "endLineNumber" : 54,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 54,
        "startColumnNumber" : 22,
        "endLineNumber" : 54,
        "endColumnNumber" : 35
      },
      "nodeContext" : "br.readLine()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 54,
        "startColumnNumber" : 15,
        "endLineNumber" : 54,
        "endColumnNumber" : 35
      },
      "nodeContext" : "key1=br.readLine()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 36
      },
      "nodeContext" : "String key1=br.readLine();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1640,
        "startLineNumber" : 15,
        "startColumnNumber" : 60,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n  Integer[] myArray;\n  int size=0;\n  System.out.print(\"Enter the array size: \");\n  size=Integer.parseInt(br.readLine());\n  myArray=new Integer[size];\n  for (int i=0; i < size; i++) {\n    System.out.print(\"For index \" + i + \", enter an integer: \");\n    myArray[i]=Integer.parseInt(br.readLine());\n  }\n  System.out.print(\"Enter integer to search for: \");\n  Integer key=Integer.parseInt(br.readLine());\n  System.out.printf(\"The integer %d is found in index %d\\n\",key,linearSearch(myArray,key));\n  String[] myArray1;\n  int size1=0;\n  System.out.print(\"Enter the array size: \");\n  size1=Integer.parseInt(br.readLine());\n  myArray1=new String[size];\n  for (int i=0; i < size1; i++) {\n    System.out.print(\"For index \" + i + \", enter a String: \");\n    myArray1[i]=br.readLine();\n  }\n  System.out.print(\"Enter String to search for: \");\n  String key1=br.readLine();\n  System.out.printf(\"The string %s is found in index %d\\n\",key1,linearSearch(myArray1,key1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1777,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * The main method\n * @param args Command line arguments\n */\npublic static void main(String[] args) throws Exception {\n  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n  Integer[] myArray;\n  int size=0;\n  System.out.print(\"Enter the array size: \");\n  size=Integer.parseInt(br.readLine());\n  myArray=new Integer[size];\n  for (int i=0; i < size; i++) {\n    System.out.print(\"For index \" + i + \", enter an integer: \");\n    myArray[i]=Integer.parseInt(br.readLine());\n  }\n  System.out.print(\"Enter integer to search for: \");\n  Integer key=Integer.parseInt(br.readLine());\n  System.out.printf(\"The integer %d is found in index %d\\n\",key,linearSearch(myArray,key));\n  String[] myArray1;\n  int size1=0;\n  System.out.print(\"Enter the array size: \");\n  size1=Integer.parseInt(br.readLine());\n  myArray1=new String[size];\n  for (int i=0; i < size1; i++) {\n    System.out.print(\"For index \" + i + \", enter a String: \");\n    myArray1[i]=br.readLine();\n  }\n  System.out.print(\"Enter String to search for: \");\n  String key1=br.readLine();\n  System.out.printf(\"The string %s is found in index %d\\n\",key1,linearSearch(myArray1,key1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 36
      },
      "nodeContext" : "String key1=br.readLine();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 25,
    "startColumnNumber" : 32,
    "endLineNumber" : 25,
    "endColumnNumber" : 34
  }, {
    "charLength" : 2,
    "startLineNumber" : 29,
    "startColumnNumber" : 42,
    "endLineNumber" : 29,
    "endColumnNumber" : 44
  }, {
    "charLength" : 2,
    "startLineNumber" : 34,
    "startColumnNumber" : 39,
    "endLineNumber" : 34,
    "endColumnNumber" : 41
  }, {
    "charLength" : 2,
    "startLineNumber" : 45,
    "startColumnNumber" : 33,
    "endLineNumber" : 45,
    "endColumnNumber" : 35
  }, {
    "charLength" : 2,
    "startLineNumber" : 49,
    "startColumnNumber" : 26,
    "endLineNumber" : 49,
    "endColumnNumber" : 28
  }, {
    "charLength" : 2,
    "startLineNumber" : 54,
    "startColumnNumber" : 22,
    "endLineNumber" : 54,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}