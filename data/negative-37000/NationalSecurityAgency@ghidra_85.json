{
  "id" : 85,
  "expression" : "offers.stream().filter(o -> !o.isOverride())",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Debug/Debugger/src/main/java/ghidra/app/plugin/core/debug/mapping/DebuggerMappingOffer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "offers.stream().filter(o -> !o.isOverride())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 63,
      "startColumnNumber" : 3,
      "endLineNumber" : 63,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 12,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 63,
        "startColumnNumber" : 3,
        "endLineNumber" : 63,
        "endColumnNumber" : 76
      },
      "nodeContext" : "offers.stream().filter(o -> !o.isOverride()).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 62,
        "startColumnNumber" : 29,
        "endLineNumber" : 63,
        "endColumnNumber" : 76
      },
      "nodeContext" : "filt=offers.stream().filter(o -> !o.isOverride()).collect(Collectors.toList())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 77
      },
      "nodeContext" : "List<DebuggerMappingOffer> filt=offers.stream().filter(o -> !o.isOverride()).collect(Collectors.toList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 61,
        "startColumnNumber" : 77,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<DebuggerMappingOffer> filt=offers.stream().filter(o -> !o.isOverride()).collect(Collectors.toList());\n  if (filt.size() != 1) {\n    return null;\n  }\n  return filt.get(0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 55,
        "startColumnNumber" : 1,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Get the single offer from the collection that is not a manual override.\n * @param offers the collection of offers\n * @return the offer or {@code null} if more than one non-override offer is present\n */\nstatic DebuggerMappingOffer unique(Collection<DebuggerMappingOffer> offers){\n  List<DebuggerMappingOffer> filt=offers.stream().filter(o -> !o.isOverride()).collect(Collectors.toList());\n  if (filt.size() != 1) {\n    return null;\n  }\n  return filt.get(0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 63,
        "startColumnNumber" : 3,
        "endLineNumber" : 63,
        "endColumnNumber" : 76
      },
      "nodeContext" : "offers.stream().filter(o -> !o.isOverride()).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "java.util.stream.Stream<ghidra.app.plugin.core.debug.mapping.DebuggerMappingOffer>"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 63,
    "startColumnNumber" : 3,
    "endLineNumber" : 63,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}