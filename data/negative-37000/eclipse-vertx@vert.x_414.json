{
  "id" : 414,
  "expression" : "new RandomAccessFile(f,\"r\")",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/net/impl/NetSocketImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new RandomAccessFile(f,\"r\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 186,
      "startColumnNumber" : 12,
      "endLineNumber" : 186,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 186,
        "startColumnNumber" : 6,
        "endLineNumber" : 186,
        "endColumnNumber" : 40
      },
      "nodeContext" : "raf=new RandomAccessFile(f,\"r\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 186,
        "startColumnNumber" : 6,
        "endLineNumber" : 186,
        "endColumnNumber" : 41
      },
      "nodeContext" : "raf=new RandomAccessFile(f,\"r\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  raf=new RandomAccessFile(f,\"r\");\n  ChannelFuture future=super.sendFile(raf,Math.min(offset,f.length()),Math.min(length,f.length() - offset));\n  if (resultHandler != null) {\n    future.addListener(fut -> {\n      final AsyncResult<Void> res;\n      if (future.isSuccess()) {\n        res=Future.succeededFuture();\n      }\n else {\n        res=Future.failedFuture(future.cause());\n      }\n      vertx.runOnContext(v -> resultHandler.handle(res));\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 859,
        "startLineNumber" : 185,
        "startColumnNumber" : 4,
        "endLineNumber" : 211,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  raf=new RandomAccessFile(f,\"r\");\n  ChannelFuture future=super.sendFile(raf,Math.min(offset,f.length()),Math.min(length,f.length() - offset));\n  if (resultHandler != null) {\n    future.addListener(fut -> {\n      final AsyncResult<Void> res;\n      if (future.isSuccess()) {\n        res=Future.succeededFuture();\n      }\n else {\n        res=Future.failedFuture(future.cause());\n      }\n      vertx.runOnContext(v -> resultHandler.handle(res));\n    }\n);\n  }\n}\n catch (IOException e) {\n  try {\n    if (raf != null) {\n      raf.close();\n    }\n  }\n catch (  IOException ignore) {\n  }\n  if (resultHandler != null) {\n    vertx.runOnContext(v -> resultHandler.handle(Future.failedFuture(e)));\n  }\n else {\n    log.error(\"Failed to send file\",e);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 137,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1092,
        "startLineNumber" : 179,
        "startColumnNumber" : 119,
        "endLineNumber" : 213,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File f=vertx.resolveFile(filename);\n  if (f.isDirectory()) {\n    throw new IllegalArgumentException(\"filename must point to a file and not to a directory\");\n  }\n  RandomAccessFile raf=null;\n  try {\n    raf=new RandomAccessFile(f,\"r\");\n    ChannelFuture future=super.sendFile(raf,Math.min(offset,f.length()),Math.min(length,f.length() - offset));\n    if (resultHandler != null) {\n      future.addListener(fut -> {\n        final AsyncResult<Void> res;\n        if (future.isSuccess()) {\n          res=Future.succeededFuture();\n        }\n else {\n          res=Future.failedFuture(future.cause());\n        }\n        vertx.runOnContext(v -> resultHandler.handle(res));\n      }\n);\n    }\n  }\n catch (  IOException e) {\n    try {\n      if (raf != null) {\n        raf.close();\n      }\n    }\n catch (    IOException ignore) {\n    }\n    if (resultHandler != null) {\n      vertx.runOnContext(v -> resultHandler.handle(Future.failedFuture(e)));\n    }\n else {\n      log.error(\"Failed to send file\",e);\n    }\n  }\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1221,
        "startLineNumber" : 178,
        "startColumnNumber" : 2,
        "endLineNumber" : 213,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public NetSocket sendFile(String filename,long offset,long length,final Handler<AsyncResult<Void>> resultHandler){\n  File f=vertx.resolveFile(filename);\n  if (f.isDirectory()) {\n    throw new IllegalArgumentException(\"filename must point to a file and not to a directory\");\n  }\n  RandomAccessFile raf=null;\n  try {\n    raf=new RandomAccessFile(f,\"r\");\n    ChannelFuture future=super.sendFile(raf,Math.min(offset,f.length()),Math.min(length,f.length() - offset));\n    if (resultHandler != null) {\n      future.addListener(fut -> {\n        final AsyncResult<Void> res;\n        if (future.isSuccess()) {\n          res=Future.succeededFuture();\n        }\n else {\n          res=Future.failedFuture(future.cause());\n        }\n        vertx.runOnContext(v -> resultHandler.handle(res));\n      }\n);\n    }\n  }\n catch (  IOException e) {\n    try {\n      if (raf != null) {\n        raf.close();\n      }\n    }\n catch (    IOException ignore) {\n    }\n    if (resultHandler != null) {\n      vertx.runOnContext(v -> resultHandler.handle(Future.failedFuture(e)));\n    }\n else {\n      log.error(\"Failed to send file\",e);\n    }\n  }\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 193,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 186,
        "startColumnNumber" : 6,
        "endLineNumber" : 186,
        "endColumnNumber" : 41
      },
      "nodeContext" : "raf=new RandomAccessFile(f,\"r\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.io.RandomAccessFile"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 186,
    "startColumnNumber" : 12,
    "endLineNumber" : 186,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}