{
  "id" : 155,
  "expression" : "0",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/security/ACL.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 96,
      "startColumnNumber" : 34,
      "endLineNumber" : 96,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 35
      },
      "nodeContext" : "permissions.length == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (permissions.length == 0) {\n  throw new IllegalArgumentException(\"At least one permission must be provided\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 95,
        "startColumnNumber" : 77,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (permissions.length == 0) {\n    throw new IllegalArgumentException(\"At least one permission must be provided\");\n  }\n  boolean failed=!hasAnyPermission(permissions);\n  Authentication authentication=Jenkins.getAuthentication2();\n  if (failed) {\n    Set<Permission> enabledPermissions=new LinkedHashSet<>();\n    for (    Permission p : permissions) {\n      while (!p.enabled && p.impliedBy != null) {\n        p=p.impliedBy;\n      }\n      enabledPermissions.add(p);\n    }\n    String permissionsDisplayName=enabledPermissions.stream().map(p -> p.group.title + \"/\" + p.name).collect(Collectors.joining(\", \"));\n    String errorMessage;\n    if (enabledPermissions.size() == 1) {\n      errorMessage=Messages.AccessDeniedException2_MissingPermission(authentication.getName(),permissionsDisplayName);\n    }\n else {\n      errorMessage=Messages.AccessDeniedException_MissingPermissions(authentication.getName(),permissionsDisplayName);\n    }\n    throw new AccessDeniedException(errorMessage);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1756,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Checks if the current security principal has one of the supplied permissions. This is just a convenience function.\n * @throws AccessDeniedException if the user doesn't have the permission.\n * @throws IllegalArgumentException if no permissions are provided\n * @since 2.222\n */\npublic final void checkAnyPermission(@NonNull Permission... permissions){\n  if (permissions.length == 0) {\n    throw new IllegalArgumentException(\"At least one permission must be provided\");\n  }\n  boolean failed=!hasAnyPermission(permissions);\n  Authentication authentication=Jenkins.getAuthentication2();\n  if (failed) {\n    Set<Permission> enabledPermissions=new LinkedHashSet<>();\n    for (    Permission p : permissions) {\n      while (!p.enabled && p.impliedBy != null) {\n        p=p.impliedBy;\n      }\n      enabledPermissions.add(p);\n    }\n    String permissionsDisplayName=enabledPermissions.stream().map(p -> p.group.title + \"/\" + p.name).collect(Collectors.joining(\", \"));\n    String errorMessage;\n    if (enabledPermissions.size() == 1) {\n      errorMessage=Messages.AccessDeniedException2_MissingPermission(authentication.getName(),permissionsDisplayName);\n    }\n else {\n      errorMessage=Messages.AccessDeniedException_MissingPermissions(authentication.getName(),permissionsDisplayName);\n    }\n    throw new AccessDeniedException(errorMessage);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 35
      },
      "nodeContext" : "permissions.length == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 96,
    "startColumnNumber" : 34,
    "endLineNumber" : 96,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}