{
  "id" : 314,
  "expression" : "passwordTextField",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/tests/gdx-tests/src/com/badlogic/gdx/tests/UITest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "passwordTextField",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 140,
      "startColumnNumber" : 2,
      "endLineNumber" : 140,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 140,
        "endColumnNumber" : 46
      },
      "nodeContext" : "passwordTextField.setMessageText(\"password\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 140,
        "endColumnNumber" : 47
      },
      "nodeContext" : "passwordTextField.setMessageText(\"password\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5722,
        "startLineNumber" : 68,
        "startColumnNumber" : 23,
        "endLineNumber" : 208,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  texture1=new Texture(Gdx.files.internal(\"data/badlogicsmall.jpg\"));\n  texture2=new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n  TextureRegion image=new TextureRegion(texture1);\n  TextureRegion imageFlipped=new TextureRegion(image);\n  imageFlipped.flip(true,true);\n  TextureRegion image2=new TextureRegion(texture2);\n  stage=new Stage(new ScreenViewport());\n  Gdx.input.setInputProcessor(stage);\n  ImageButtonStyle style=new ImageButtonStyle(skin.get(ButtonStyle.class));\n  style.imageUp=new TextureRegionDrawable(image);\n  style.imageDown=new TextureRegionDrawable(imageFlipped);\n  ImageButton iconButton=new ImageButton(style);\n  Button buttonMulti=new TextButton(\"Multi\\nLine\\nToggle\",skin,\"toggle\");\n  Button imgButton=new Button(new Image(image),skin);\n  Button imgToggleButton=new Button(new Image(image),skin,\"toggle\");\n  Label myLabel=new Label(\"this is some text.\",skin);\n  myLabel.setWrap(true);\n  Table t=new Table();\n  t.row();\n  t.add(myLabel);\n  t.layout();\n  final CheckBox checkBox=new CheckBox(\" Continuous rendering\",skin);\n  checkBox.setChecked(true);\n  final Slider slider=new Slider(0,10,1,false,skin);\n  slider.setAnimateDuration(0.3f);\n  TextField textfield=new TextField(\"\",skin);\n  textfield.setMessageText(\"Click here!\");\n  textfield.setAlignment(Align.center);\n  final SelectBox selectBox=new SelectBox(skin);\n  selectBox.setAlignment(Align.right);\n  selectBox.getList().setAlignment(Align.right);\n  selectBox.getStyle().listStyle.selection.setRightWidth(10);\n  selectBox.getStyle().listStyle.selection.setLeftWidth(20);\n  selectBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      System.out.println(selectBox.getSelected());\n    }\n  }\n);\n  selectBox.setItems(\"Android1\",\"Windows1 long text in item\",\"Linux1\",\"OSX1\",\"Android2\",\"Windows2\",\"Linux2\",\"OSX2\",\"Android3\",\"Windows3\",\"Linux3\",\"OSX3\",\"Android4\",\"Windows4\",\"Linux4\",\"OSX4\",\"Android5\",\"Windows5\",\"Linux5\",\"OSX5\",\"Android6\",\"Windows6\",\"Linux6\",\"OSX6\",\"Android7\",\"Windows7\",\"Linux7\",\"OSX7\");\n  selectBox.setSelected(\"Linux6\");\n  Image imageActor=new Image(image2);\n  ScrollPane scrollPane=new ScrollPane(imageActor);\n  List list=new List(skin);\n  list.setItems(listEntries);\n  list.getSelection().setMultiple(true);\n  list.getSelection().setRequired(false);\n  ScrollPane scrollPane2=new ScrollPane(list,skin);\n  scrollPane2.setFlickScroll(false);\n  Label minSizeLabel=new Label(\"minWidth cell\",skin);\n  Table rightSideTable=new Table(skin);\n  rightSideTable.add(minSizeLabel).growX().row();\n  rightSideTable.add(scrollPane2).grow();\n  SplitPane splitPane=new SplitPane(scrollPane,rightSideTable,false,skin,\"default-horizontal\");\n  fpsLabel=new Label(\"fps:\",skin);\n  final Label passwordLabel=new Label(\"Textfield in password mode: \",skin);\n  final TextField passwordTextField=new TextField(\"\",skin);\n  passwordTextField.setMessageText(\"password\");\n  passwordTextField.setPasswordCharacter('*');\n  passwordTextField.setPasswordMode(true);\n  buttonMulti.addListener(new TextTooltip(\"This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip!\",skin));\n  Table tooltipTable=new Table(skin);\n  tooltipTable.pad(10).background(\"default-round\");\n  tooltipTable.add(new TextButton(\"Fancy tooltip!\",skin));\n  imgButton.addListener(new Tooltip(tooltipTable));\n  Window window=new Window(\"Dialog\",skin);\n  window.getTitleTable().add(new TextButton(\"X\",skin)).height(window.getPadTop());\n  window.setPosition(0,0);\n  window.defaults().spaceBottom(10);\n  window.row().fill().expandX();\n  window.add(iconButton);\n  window.add(buttonMulti);\n  window.add(imgButton);\n  window.add(imgToggleButton);\n  window.row();\n  window.add(checkBox);\n  window.add(slider).minWidth(100).fillX().colspan(3);\n  window.row();\n  window.add(selectBox).maxWidth(100);\n  window.add(textfield).minWidth(100).expandX().fillX().colspan(3);\n  window.row();\n  window.add(splitPane).fill().expand().colspan(4).maxHeight(200);\n  window.row();\n  window.add(passwordLabel).colspan(2);\n  window.add(passwordTextField).minWidth(100).expandX().fillX().colspan(2);\n  window.row();\n  window.add(fpsLabel).colspan(4);\n  window.pack();\n  stage.addActor(window);\n  textfield.setTextFieldListener(new TextFieldListener(){\n    public void keyTyped(    TextField textField,    char key){\n      if (key == '\\n')       textField.getOnscreenKeyboard().show(false);\n    }\n  }\n);\n  slider.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.app.log(\"UITest\",\"slider: \" + slider.getValue());\n    }\n  }\n);\n  iconButton.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      new Dialog(\"Some Dialog\",skin,\"dialog\"){\n        protected void result(        Object object){\n          System.out.println(\"Chosen: \" + object);\n        }\n      }\n.text(\"Are you enjoying this demo?\").button(\"Yes\",true).button(\"No\",false).key(Keys.ENTER,true).key(Keys.ESCAPE,false).show(stage);\n    }\n  }\n);\n  checkBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.graphics.setContinuousRendering(checkBox.isChecked());\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 920,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5755,
        "startLineNumber" : 67,
        "startColumnNumber" : 1,
        "endLineNumber" : 208,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  texture1=new Texture(Gdx.files.internal(\"data/badlogicsmall.jpg\"));\n  texture2=new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n  TextureRegion image=new TextureRegion(texture1);\n  TextureRegion imageFlipped=new TextureRegion(image);\n  imageFlipped.flip(true,true);\n  TextureRegion image2=new TextureRegion(texture2);\n  stage=new Stage(new ScreenViewport());\n  Gdx.input.setInputProcessor(stage);\n  ImageButtonStyle style=new ImageButtonStyle(skin.get(ButtonStyle.class));\n  style.imageUp=new TextureRegionDrawable(image);\n  style.imageDown=new TextureRegionDrawable(imageFlipped);\n  ImageButton iconButton=new ImageButton(style);\n  Button buttonMulti=new TextButton(\"Multi\\nLine\\nToggle\",skin,\"toggle\");\n  Button imgButton=new Button(new Image(image),skin);\n  Button imgToggleButton=new Button(new Image(image),skin,\"toggle\");\n  Label myLabel=new Label(\"this is some text.\",skin);\n  myLabel.setWrap(true);\n  Table t=new Table();\n  t.row();\n  t.add(myLabel);\n  t.layout();\n  final CheckBox checkBox=new CheckBox(\" Continuous rendering\",skin);\n  checkBox.setChecked(true);\n  final Slider slider=new Slider(0,10,1,false,skin);\n  slider.setAnimateDuration(0.3f);\n  TextField textfield=new TextField(\"\",skin);\n  textfield.setMessageText(\"Click here!\");\n  textfield.setAlignment(Align.center);\n  final SelectBox selectBox=new SelectBox(skin);\n  selectBox.setAlignment(Align.right);\n  selectBox.getList().setAlignment(Align.right);\n  selectBox.getStyle().listStyle.selection.setRightWidth(10);\n  selectBox.getStyle().listStyle.selection.setLeftWidth(20);\n  selectBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      System.out.println(selectBox.getSelected());\n    }\n  }\n);\n  selectBox.setItems(\"Android1\",\"Windows1 long text in item\",\"Linux1\",\"OSX1\",\"Android2\",\"Windows2\",\"Linux2\",\"OSX2\",\"Android3\",\"Windows3\",\"Linux3\",\"OSX3\",\"Android4\",\"Windows4\",\"Linux4\",\"OSX4\",\"Android5\",\"Windows5\",\"Linux5\",\"OSX5\",\"Android6\",\"Windows6\",\"Linux6\",\"OSX6\",\"Android7\",\"Windows7\",\"Linux7\",\"OSX7\");\n  selectBox.setSelected(\"Linux6\");\n  Image imageActor=new Image(image2);\n  ScrollPane scrollPane=new ScrollPane(imageActor);\n  List list=new List(skin);\n  list.setItems(listEntries);\n  list.getSelection().setMultiple(true);\n  list.getSelection().setRequired(false);\n  ScrollPane scrollPane2=new ScrollPane(list,skin);\n  scrollPane2.setFlickScroll(false);\n  Label minSizeLabel=new Label(\"minWidth cell\",skin);\n  Table rightSideTable=new Table(skin);\n  rightSideTable.add(minSizeLabel).growX().row();\n  rightSideTable.add(scrollPane2).grow();\n  SplitPane splitPane=new SplitPane(scrollPane,rightSideTable,false,skin,\"default-horizontal\");\n  fpsLabel=new Label(\"fps:\",skin);\n  final Label passwordLabel=new Label(\"Textfield in password mode: \",skin);\n  final TextField passwordTextField=new TextField(\"\",skin);\n  passwordTextField.setMessageText(\"password\");\n  passwordTextField.setPasswordCharacter('*');\n  passwordTextField.setPasswordMode(true);\n  buttonMulti.addListener(new TextTooltip(\"This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip!\",skin));\n  Table tooltipTable=new Table(skin);\n  tooltipTable.pad(10).background(\"default-round\");\n  tooltipTable.add(new TextButton(\"Fancy tooltip!\",skin));\n  imgButton.addListener(new Tooltip(tooltipTable));\n  Window window=new Window(\"Dialog\",skin);\n  window.getTitleTable().add(new TextButton(\"X\",skin)).height(window.getPadTop());\n  window.setPosition(0,0);\n  window.defaults().spaceBottom(10);\n  window.row().fill().expandX();\n  window.add(iconButton);\n  window.add(buttonMulti);\n  window.add(imgButton);\n  window.add(imgToggleButton);\n  window.row();\n  window.add(checkBox);\n  window.add(slider).minWidth(100).fillX().colspan(3);\n  window.row();\n  window.add(selectBox).maxWidth(100);\n  window.add(textfield).minWidth(100).expandX().fillX().colspan(3);\n  window.row();\n  window.add(splitPane).fill().expand().colspan(4).maxHeight(200);\n  window.row();\n  window.add(passwordLabel).colspan(2);\n  window.add(passwordTextField).minWidth(100).expandX().fillX().colspan(2);\n  window.row();\n  window.add(fpsLabel).colspan(4);\n  window.pack();\n  stage.addActor(window);\n  textfield.setTextFieldListener(new TextFieldListener(){\n    public void keyTyped(    TextField textField,    char key){\n      if (key == '\\n')       textField.getOnscreenKeyboard().show(false);\n    }\n  }\n);\n  slider.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.app.log(\"UITest\",\"slider: \" + slider.getValue());\n    }\n  }\n);\n  iconButton.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      new Dialog(\"Some Dialog\",skin,\"dialog\"){\n        protected void result(        Object object){\n          System.out.println(\"Chosen: \" + object);\n        }\n      }\n.text(\"Are you enjoying this demo?\").button(\"Yes\",true).button(\"No\",false).key(Keys.ENTER,true).key(Keys.ESCAPE,false).show(stage);\n    }\n  }\n);\n  checkBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.graphics.setContinuousRendering(checkBox.isChecked());\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 926,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 140,
        "endColumnNumber" : 47
      },
      "nodeContext" : "passwordTextField.setMessageText(\"password\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.scenes.scene2d.ui.TextField"
  }, {
    "nodeContext" : "passwordTextField",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 141,
      "startColumnNumber" : 2,
      "endLineNumber" : 141,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 45
      },
      "nodeContext" : "passwordTextField.setPasswordCharacter('*')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 46
      },
      "nodeContext" : "passwordTextField.setPasswordCharacter('*');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5722,
        "startLineNumber" : 68,
        "startColumnNumber" : 23,
        "endLineNumber" : 208,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  texture1=new Texture(Gdx.files.internal(\"data/badlogicsmall.jpg\"));\n  texture2=new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n  TextureRegion image=new TextureRegion(texture1);\n  TextureRegion imageFlipped=new TextureRegion(image);\n  imageFlipped.flip(true,true);\n  TextureRegion image2=new TextureRegion(texture2);\n  stage=new Stage(new ScreenViewport());\n  Gdx.input.setInputProcessor(stage);\n  ImageButtonStyle style=new ImageButtonStyle(skin.get(ButtonStyle.class));\n  style.imageUp=new TextureRegionDrawable(image);\n  style.imageDown=new TextureRegionDrawable(imageFlipped);\n  ImageButton iconButton=new ImageButton(style);\n  Button buttonMulti=new TextButton(\"Multi\\nLine\\nToggle\",skin,\"toggle\");\n  Button imgButton=new Button(new Image(image),skin);\n  Button imgToggleButton=new Button(new Image(image),skin,\"toggle\");\n  Label myLabel=new Label(\"this is some text.\",skin);\n  myLabel.setWrap(true);\n  Table t=new Table();\n  t.row();\n  t.add(myLabel);\n  t.layout();\n  final CheckBox checkBox=new CheckBox(\" Continuous rendering\",skin);\n  checkBox.setChecked(true);\n  final Slider slider=new Slider(0,10,1,false,skin);\n  slider.setAnimateDuration(0.3f);\n  TextField textfield=new TextField(\"\",skin);\n  textfield.setMessageText(\"Click here!\");\n  textfield.setAlignment(Align.center);\n  final SelectBox selectBox=new SelectBox(skin);\n  selectBox.setAlignment(Align.right);\n  selectBox.getList().setAlignment(Align.right);\n  selectBox.getStyle().listStyle.selection.setRightWidth(10);\n  selectBox.getStyle().listStyle.selection.setLeftWidth(20);\n  selectBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      System.out.println(selectBox.getSelected());\n    }\n  }\n);\n  selectBox.setItems(\"Android1\",\"Windows1 long text in item\",\"Linux1\",\"OSX1\",\"Android2\",\"Windows2\",\"Linux2\",\"OSX2\",\"Android3\",\"Windows3\",\"Linux3\",\"OSX3\",\"Android4\",\"Windows4\",\"Linux4\",\"OSX4\",\"Android5\",\"Windows5\",\"Linux5\",\"OSX5\",\"Android6\",\"Windows6\",\"Linux6\",\"OSX6\",\"Android7\",\"Windows7\",\"Linux7\",\"OSX7\");\n  selectBox.setSelected(\"Linux6\");\n  Image imageActor=new Image(image2);\n  ScrollPane scrollPane=new ScrollPane(imageActor);\n  List list=new List(skin);\n  list.setItems(listEntries);\n  list.getSelection().setMultiple(true);\n  list.getSelection().setRequired(false);\n  ScrollPane scrollPane2=new ScrollPane(list,skin);\n  scrollPane2.setFlickScroll(false);\n  Label minSizeLabel=new Label(\"minWidth cell\",skin);\n  Table rightSideTable=new Table(skin);\n  rightSideTable.add(minSizeLabel).growX().row();\n  rightSideTable.add(scrollPane2).grow();\n  SplitPane splitPane=new SplitPane(scrollPane,rightSideTable,false,skin,\"default-horizontal\");\n  fpsLabel=new Label(\"fps:\",skin);\n  final Label passwordLabel=new Label(\"Textfield in password mode: \",skin);\n  final TextField passwordTextField=new TextField(\"\",skin);\n  passwordTextField.setMessageText(\"password\");\n  passwordTextField.setPasswordCharacter('*');\n  passwordTextField.setPasswordMode(true);\n  buttonMulti.addListener(new TextTooltip(\"This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip!\",skin));\n  Table tooltipTable=new Table(skin);\n  tooltipTable.pad(10).background(\"default-round\");\n  tooltipTable.add(new TextButton(\"Fancy tooltip!\",skin));\n  imgButton.addListener(new Tooltip(tooltipTable));\n  Window window=new Window(\"Dialog\",skin);\n  window.getTitleTable().add(new TextButton(\"X\",skin)).height(window.getPadTop());\n  window.setPosition(0,0);\n  window.defaults().spaceBottom(10);\n  window.row().fill().expandX();\n  window.add(iconButton);\n  window.add(buttonMulti);\n  window.add(imgButton);\n  window.add(imgToggleButton);\n  window.row();\n  window.add(checkBox);\n  window.add(slider).minWidth(100).fillX().colspan(3);\n  window.row();\n  window.add(selectBox).maxWidth(100);\n  window.add(textfield).minWidth(100).expandX().fillX().colspan(3);\n  window.row();\n  window.add(splitPane).fill().expand().colspan(4).maxHeight(200);\n  window.row();\n  window.add(passwordLabel).colspan(2);\n  window.add(passwordTextField).minWidth(100).expandX().fillX().colspan(2);\n  window.row();\n  window.add(fpsLabel).colspan(4);\n  window.pack();\n  stage.addActor(window);\n  textfield.setTextFieldListener(new TextFieldListener(){\n    public void keyTyped(    TextField textField,    char key){\n      if (key == '\\n')       textField.getOnscreenKeyboard().show(false);\n    }\n  }\n);\n  slider.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.app.log(\"UITest\",\"slider: \" + slider.getValue());\n    }\n  }\n);\n  iconButton.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      new Dialog(\"Some Dialog\",skin,\"dialog\"){\n        protected void result(        Object object){\n          System.out.println(\"Chosen: \" + object);\n        }\n      }\n.text(\"Are you enjoying this demo?\").button(\"Yes\",true).button(\"No\",false).key(Keys.ENTER,true).key(Keys.ESCAPE,false).show(stage);\n    }\n  }\n);\n  checkBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.graphics.setContinuousRendering(checkBox.isChecked());\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 920,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5755,
        "startLineNumber" : 67,
        "startColumnNumber" : 1,
        "endLineNumber" : 208,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  texture1=new Texture(Gdx.files.internal(\"data/badlogicsmall.jpg\"));\n  texture2=new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n  TextureRegion image=new TextureRegion(texture1);\n  TextureRegion imageFlipped=new TextureRegion(image);\n  imageFlipped.flip(true,true);\n  TextureRegion image2=new TextureRegion(texture2);\n  stage=new Stage(new ScreenViewport());\n  Gdx.input.setInputProcessor(stage);\n  ImageButtonStyle style=new ImageButtonStyle(skin.get(ButtonStyle.class));\n  style.imageUp=new TextureRegionDrawable(image);\n  style.imageDown=new TextureRegionDrawable(imageFlipped);\n  ImageButton iconButton=new ImageButton(style);\n  Button buttonMulti=new TextButton(\"Multi\\nLine\\nToggle\",skin,\"toggle\");\n  Button imgButton=new Button(new Image(image),skin);\n  Button imgToggleButton=new Button(new Image(image),skin,\"toggle\");\n  Label myLabel=new Label(\"this is some text.\",skin);\n  myLabel.setWrap(true);\n  Table t=new Table();\n  t.row();\n  t.add(myLabel);\n  t.layout();\n  final CheckBox checkBox=new CheckBox(\" Continuous rendering\",skin);\n  checkBox.setChecked(true);\n  final Slider slider=new Slider(0,10,1,false,skin);\n  slider.setAnimateDuration(0.3f);\n  TextField textfield=new TextField(\"\",skin);\n  textfield.setMessageText(\"Click here!\");\n  textfield.setAlignment(Align.center);\n  final SelectBox selectBox=new SelectBox(skin);\n  selectBox.setAlignment(Align.right);\n  selectBox.getList().setAlignment(Align.right);\n  selectBox.getStyle().listStyle.selection.setRightWidth(10);\n  selectBox.getStyle().listStyle.selection.setLeftWidth(20);\n  selectBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      System.out.println(selectBox.getSelected());\n    }\n  }\n);\n  selectBox.setItems(\"Android1\",\"Windows1 long text in item\",\"Linux1\",\"OSX1\",\"Android2\",\"Windows2\",\"Linux2\",\"OSX2\",\"Android3\",\"Windows3\",\"Linux3\",\"OSX3\",\"Android4\",\"Windows4\",\"Linux4\",\"OSX4\",\"Android5\",\"Windows5\",\"Linux5\",\"OSX5\",\"Android6\",\"Windows6\",\"Linux6\",\"OSX6\",\"Android7\",\"Windows7\",\"Linux7\",\"OSX7\");\n  selectBox.setSelected(\"Linux6\");\n  Image imageActor=new Image(image2);\n  ScrollPane scrollPane=new ScrollPane(imageActor);\n  List list=new List(skin);\n  list.setItems(listEntries);\n  list.getSelection().setMultiple(true);\n  list.getSelection().setRequired(false);\n  ScrollPane scrollPane2=new ScrollPane(list,skin);\n  scrollPane2.setFlickScroll(false);\n  Label minSizeLabel=new Label(\"minWidth cell\",skin);\n  Table rightSideTable=new Table(skin);\n  rightSideTable.add(minSizeLabel).growX().row();\n  rightSideTable.add(scrollPane2).grow();\n  SplitPane splitPane=new SplitPane(scrollPane,rightSideTable,false,skin,\"default-horizontal\");\n  fpsLabel=new Label(\"fps:\",skin);\n  final Label passwordLabel=new Label(\"Textfield in password mode: \",skin);\n  final TextField passwordTextField=new TextField(\"\",skin);\n  passwordTextField.setMessageText(\"password\");\n  passwordTextField.setPasswordCharacter('*');\n  passwordTextField.setPasswordMode(true);\n  buttonMulti.addListener(new TextTooltip(\"This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip!\",skin));\n  Table tooltipTable=new Table(skin);\n  tooltipTable.pad(10).background(\"default-round\");\n  tooltipTable.add(new TextButton(\"Fancy tooltip!\",skin));\n  imgButton.addListener(new Tooltip(tooltipTable));\n  Window window=new Window(\"Dialog\",skin);\n  window.getTitleTable().add(new TextButton(\"X\",skin)).height(window.getPadTop());\n  window.setPosition(0,0);\n  window.defaults().spaceBottom(10);\n  window.row().fill().expandX();\n  window.add(iconButton);\n  window.add(buttonMulti);\n  window.add(imgButton);\n  window.add(imgToggleButton);\n  window.row();\n  window.add(checkBox);\n  window.add(slider).minWidth(100).fillX().colspan(3);\n  window.row();\n  window.add(selectBox).maxWidth(100);\n  window.add(textfield).minWidth(100).expandX().fillX().colspan(3);\n  window.row();\n  window.add(splitPane).fill().expand().colspan(4).maxHeight(200);\n  window.row();\n  window.add(passwordLabel).colspan(2);\n  window.add(passwordTextField).minWidth(100).expandX().fillX().colspan(2);\n  window.row();\n  window.add(fpsLabel).colspan(4);\n  window.pack();\n  stage.addActor(window);\n  textfield.setTextFieldListener(new TextFieldListener(){\n    public void keyTyped(    TextField textField,    char key){\n      if (key == '\\n')       textField.getOnscreenKeyboard().show(false);\n    }\n  }\n);\n  slider.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.app.log(\"UITest\",\"slider: \" + slider.getValue());\n    }\n  }\n);\n  iconButton.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      new Dialog(\"Some Dialog\",skin,\"dialog\"){\n        protected void result(        Object object){\n          System.out.println(\"Chosen: \" + object);\n        }\n      }\n.text(\"Are you enjoying this demo?\").button(\"Yes\",true).button(\"No\",false).key(Keys.ENTER,true).key(Keys.ESCAPE,false).show(stage);\n    }\n  }\n);\n  checkBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.graphics.setContinuousRendering(checkBox.isChecked());\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 926,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 46
      },
      "nodeContext" : "passwordTextField.setPasswordCharacter('*');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.scenes.scene2d.ui.TextField"
  }, {
    "nodeContext" : "passwordTextField",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 142,
      "startColumnNumber" : 2,
      "endLineNumber" : 142,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 142,
        "startColumnNumber" : 2,
        "endLineNumber" : 142,
        "endColumnNumber" : 41
      },
      "nodeContext" : "passwordTextField.setPasswordMode(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 142,
        "startColumnNumber" : 2,
        "endLineNumber" : 142,
        "endColumnNumber" : 42
      },
      "nodeContext" : "passwordTextField.setPasswordMode(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5722,
        "startLineNumber" : 68,
        "startColumnNumber" : 23,
        "endLineNumber" : 208,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  texture1=new Texture(Gdx.files.internal(\"data/badlogicsmall.jpg\"));\n  texture2=new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n  TextureRegion image=new TextureRegion(texture1);\n  TextureRegion imageFlipped=new TextureRegion(image);\n  imageFlipped.flip(true,true);\n  TextureRegion image2=new TextureRegion(texture2);\n  stage=new Stage(new ScreenViewport());\n  Gdx.input.setInputProcessor(stage);\n  ImageButtonStyle style=new ImageButtonStyle(skin.get(ButtonStyle.class));\n  style.imageUp=new TextureRegionDrawable(image);\n  style.imageDown=new TextureRegionDrawable(imageFlipped);\n  ImageButton iconButton=new ImageButton(style);\n  Button buttonMulti=new TextButton(\"Multi\\nLine\\nToggle\",skin,\"toggle\");\n  Button imgButton=new Button(new Image(image),skin);\n  Button imgToggleButton=new Button(new Image(image),skin,\"toggle\");\n  Label myLabel=new Label(\"this is some text.\",skin);\n  myLabel.setWrap(true);\n  Table t=new Table();\n  t.row();\n  t.add(myLabel);\n  t.layout();\n  final CheckBox checkBox=new CheckBox(\" Continuous rendering\",skin);\n  checkBox.setChecked(true);\n  final Slider slider=new Slider(0,10,1,false,skin);\n  slider.setAnimateDuration(0.3f);\n  TextField textfield=new TextField(\"\",skin);\n  textfield.setMessageText(\"Click here!\");\n  textfield.setAlignment(Align.center);\n  final SelectBox selectBox=new SelectBox(skin);\n  selectBox.setAlignment(Align.right);\n  selectBox.getList().setAlignment(Align.right);\n  selectBox.getStyle().listStyle.selection.setRightWidth(10);\n  selectBox.getStyle().listStyle.selection.setLeftWidth(20);\n  selectBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      System.out.println(selectBox.getSelected());\n    }\n  }\n);\n  selectBox.setItems(\"Android1\",\"Windows1 long text in item\",\"Linux1\",\"OSX1\",\"Android2\",\"Windows2\",\"Linux2\",\"OSX2\",\"Android3\",\"Windows3\",\"Linux3\",\"OSX3\",\"Android4\",\"Windows4\",\"Linux4\",\"OSX4\",\"Android5\",\"Windows5\",\"Linux5\",\"OSX5\",\"Android6\",\"Windows6\",\"Linux6\",\"OSX6\",\"Android7\",\"Windows7\",\"Linux7\",\"OSX7\");\n  selectBox.setSelected(\"Linux6\");\n  Image imageActor=new Image(image2);\n  ScrollPane scrollPane=new ScrollPane(imageActor);\n  List list=new List(skin);\n  list.setItems(listEntries);\n  list.getSelection().setMultiple(true);\n  list.getSelection().setRequired(false);\n  ScrollPane scrollPane2=new ScrollPane(list,skin);\n  scrollPane2.setFlickScroll(false);\n  Label minSizeLabel=new Label(\"minWidth cell\",skin);\n  Table rightSideTable=new Table(skin);\n  rightSideTable.add(minSizeLabel).growX().row();\n  rightSideTable.add(scrollPane2).grow();\n  SplitPane splitPane=new SplitPane(scrollPane,rightSideTable,false,skin,\"default-horizontal\");\n  fpsLabel=new Label(\"fps:\",skin);\n  final Label passwordLabel=new Label(\"Textfield in password mode: \",skin);\n  final TextField passwordTextField=new TextField(\"\",skin);\n  passwordTextField.setMessageText(\"password\");\n  passwordTextField.setPasswordCharacter('*');\n  passwordTextField.setPasswordMode(true);\n  buttonMulti.addListener(new TextTooltip(\"This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip!\",skin));\n  Table tooltipTable=new Table(skin);\n  tooltipTable.pad(10).background(\"default-round\");\n  tooltipTable.add(new TextButton(\"Fancy tooltip!\",skin));\n  imgButton.addListener(new Tooltip(tooltipTable));\n  Window window=new Window(\"Dialog\",skin);\n  window.getTitleTable().add(new TextButton(\"X\",skin)).height(window.getPadTop());\n  window.setPosition(0,0);\n  window.defaults().spaceBottom(10);\n  window.row().fill().expandX();\n  window.add(iconButton);\n  window.add(buttonMulti);\n  window.add(imgButton);\n  window.add(imgToggleButton);\n  window.row();\n  window.add(checkBox);\n  window.add(slider).minWidth(100).fillX().colspan(3);\n  window.row();\n  window.add(selectBox).maxWidth(100);\n  window.add(textfield).minWidth(100).expandX().fillX().colspan(3);\n  window.row();\n  window.add(splitPane).fill().expand().colspan(4).maxHeight(200);\n  window.row();\n  window.add(passwordLabel).colspan(2);\n  window.add(passwordTextField).minWidth(100).expandX().fillX().colspan(2);\n  window.row();\n  window.add(fpsLabel).colspan(4);\n  window.pack();\n  stage.addActor(window);\n  textfield.setTextFieldListener(new TextFieldListener(){\n    public void keyTyped(    TextField textField,    char key){\n      if (key == '\\n')       textField.getOnscreenKeyboard().show(false);\n    }\n  }\n);\n  slider.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.app.log(\"UITest\",\"slider: \" + slider.getValue());\n    }\n  }\n);\n  iconButton.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      new Dialog(\"Some Dialog\",skin,\"dialog\"){\n        protected void result(        Object object){\n          System.out.println(\"Chosen: \" + object);\n        }\n      }\n.text(\"Are you enjoying this demo?\").button(\"Yes\",true).button(\"No\",false).key(Keys.ENTER,true).key(Keys.ESCAPE,false).show(stage);\n    }\n  }\n);\n  checkBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.graphics.setContinuousRendering(checkBox.isChecked());\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 920,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5755,
        "startLineNumber" : 67,
        "startColumnNumber" : 1,
        "endLineNumber" : 208,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  texture1=new Texture(Gdx.files.internal(\"data/badlogicsmall.jpg\"));\n  texture2=new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n  TextureRegion image=new TextureRegion(texture1);\n  TextureRegion imageFlipped=new TextureRegion(image);\n  imageFlipped.flip(true,true);\n  TextureRegion image2=new TextureRegion(texture2);\n  stage=new Stage(new ScreenViewport());\n  Gdx.input.setInputProcessor(stage);\n  ImageButtonStyle style=new ImageButtonStyle(skin.get(ButtonStyle.class));\n  style.imageUp=new TextureRegionDrawable(image);\n  style.imageDown=new TextureRegionDrawable(imageFlipped);\n  ImageButton iconButton=new ImageButton(style);\n  Button buttonMulti=new TextButton(\"Multi\\nLine\\nToggle\",skin,\"toggle\");\n  Button imgButton=new Button(new Image(image),skin);\n  Button imgToggleButton=new Button(new Image(image),skin,\"toggle\");\n  Label myLabel=new Label(\"this is some text.\",skin);\n  myLabel.setWrap(true);\n  Table t=new Table();\n  t.row();\n  t.add(myLabel);\n  t.layout();\n  final CheckBox checkBox=new CheckBox(\" Continuous rendering\",skin);\n  checkBox.setChecked(true);\n  final Slider slider=new Slider(0,10,1,false,skin);\n  slider.setAnimateDuration(0.3f);\n  TextField textfield=new TextField(\"\",skin);\n  textfield.setMessageText(\"Click here!\");\n  textfield.setAlignment(Align.center);\n  final SelectBox selectBox=new SelectBox(skin);\n  selectBox.setAlignment(Align.right);\n  selectBox.getList().setAlignment(Align.right);\n  selectBox.getStyle().listStyle.selection.setRightWidth(10);\n  selectBox.getStyle().listStyle.selection.setLeftWidth(20);\n  selectBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      System.out.println(selectBox.getSelected());\n    }\n  }\n);\n  selectBox.setItems(\"Android1\",\"Windows1 long text in item\",\"Linux1\",\"OSX1\",\"Android2\",\"Windows2\",\"Linux2\",\"OSX2\",\"Android3\",\"Windows3\",\"Linux3\",\"OSX3\",\"Android4\",\"Windows4\",\"Linux4\",\"OSX4\",\"Android5\",\"Windows5\",\"Linux5\",\"OSX5\",\"Android6\",\"Windows6\",\"Linux6\",\"OSX6\",\"Android7\",\"Windows7\",\"Linux7\",\"OSX7\");\n  selectBox.setSelected(\"Linux6\");\n  Image imageActor=new Image(image2);\n  ScrollPane scrollPane=new ScrollPane(imageActor);\n  List list=new List(skin);\n  list.setItems(listEntries);\n  list.getSelection().setMultiple(true);\n  list.getSelection().setRequired(false);\n  ScrollPane scrollPane2=new ScrollPane(list,skin);\n  scrollPane2.setFlickScroll(false);\n  Label minSizeLabel=new Label(\"minWidth cell\",skin);\n  Table rightSideTable=new Table(skin);\n  rightSideTable.add(minSizeLabel).growX().row();\n  rightSideTable.add(scrollPane2).grow();\n  SplitPane splitPane=new SplitPane(scrollPane,rightSideTable,false,skin,\"default-horizontal\");\n  fpsLabel=new Label(\"fps:\",skin);\n  final Label passwordLabel=new Label(\"Textfield in password mode: \",skin);\n  final TextField passwordTextField=new TextField(\"\",skin);\n  passwordTextField.setMessageText(\"password\");\n  passwordTextField.setPasswordCharacter('*');\n  passwordTextField.setPasswordMode(true);\n  buttonMulti.addListener(new TextTooltip(\"This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip!\",skin));\n  Table tooltipTable=new Table(skin);\n  tooltipTable.pad(10).background(\"default-round\");\n  tooltipTable.add(new TextButton(\"Fancy tooltip!\",skin));\n  imgButton.addListener(new Tooltip(tooltipTable));\n  Window window=new Window(\"Dialog\",skin);\n  window.getTitleTable().add(new TextButton(\"X\",skin)).height(window.getPadTop());\n  window.setPosition(0,0);\n  window.defaults().spaceBottom(10);\n  window.row().fill().expandX();\n  window.add(iconButton);\n  window.add(buttonMulti);\n  window.add(imgButton);\n  window.add(imgToggleButton);\n  window.row();\n  window.add(checkBox);\n  window.add(slider).minWidth(100).fillX().colspan(3);\n  window.row();\n  window.add(selectBox).maxWidth(100);\n  window.add(textfield).minWidth(100).expandX().fillX().colspan(3);\n  window.row();\n  window.add(splitPane).fill().expand().colspan(4).maxHeight(200);\n  window.row();\n  window.add(passwordLabel).colspan(2);\n  window.add(passwordTextField).minWidth(100).expandX().fillX().colspan(2);\n  window.row();\n  window.add(fpsLabel).colspan(4);\n  window.pack();\n  stage.addActor(window);\n  textfield.setTextFieldListener(new TextFieldListener(){\n    public void keyTyped(    TextField textField,    char key){\n      if (key == '\\n')       textField.getOnscreenKeyboard().show(false);\n    }\n  }\n);\n  slider.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.app.log(\"UITest\",\"slider: \" + slider.getValue());\n    }\n  }\n);\n  iconButton.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      new Dialog(\"Some Dialog\",skin,\"dialog\"){\n        protected void result(        Object object){\n          System.out.println(\"Chosen: \" + object);\n        }\n      }\n.text(\"Are you enjoying this demo?\").button(\"Yes\",true).button(\"No\",false).key(Keys.ENTER,true).key(Keys.ESCAPE,false).show(stage);\n    }\n  }\n);\n  checkBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.graphics.setContinuousRendering(checkBox.isChecked());\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 926,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 142,
        "startColumnNumber" : 2,
        "endLineNumber" : 142,
        "endColumnNumber" : 42
      },
      "nodeContext" : "passwordTextField.setPasswordMode(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.scenes.scene2d.ui.TextField"
  }, {
    "nodeContext" : "passwordTextField",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 172,
      "startColumnNumber" : 13,
      "endLineNumber" : 172,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 172,
        "startColumnNumber" : 2,
        "endLineNumber" : 172,
        "endColumnNumber" : 31
      },
      "nodeContext" : "window.add(passwordTextField)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 172,
        "startColumnNumber" : 2,
        "endLineNumber" : 172,
        "endColumnNumber" : 45
      },
      "nodeContext" : "window.add(passwordTextField).minWidth(100)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 172,
        "startColumnNumber" : 2,
        "endLineNumber" : 172,
        "endColumnNumber" : 55
      },
      "nodeContext" : "window.add(passwordTextField).minWidth(100).expandX()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 172,
        "startColumnNumber" : 2,
        "endLineNumber" : 172,
        "endColumnNumber" : 63
      },
      "nodeContext" : "window.add(passwordTextField).minWidth(100).expandX().fillX()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 172,
        "startColumnNumber" : 2,
        "endLineNumber" : 172,
        "endColumnNumber" : 74
      },
      "nodeContext" : "window.add(passwordTextField).minWidth(100).expandX().fillX().colspan(2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 172,
        "startColumnNumber" : 2,
        "endLineNumber" : 172,
        "endColumnNumber" : 75
      },
      "nodeContext" : "window.add(passwordTextField).minWidth(100).expandX().fillX().colspan(2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5722,
        "startLineNumber" : 68,
        "startColumnNumber" : 23,
        "endLineNumber" : 208,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  texture1=new Texture(Gdx.files.internal(\"data/badlogicsmall.jpg\"));\n  texture2=new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n  TextureRegion image=new TextureRegion(texture1);\n  TextureRegion imageFlipped=new TextureRegion(image);\n  imageFlipped.flip(true,true);\n  TextureRegion image2=new TextureRegion(texture2);\n  stage=new Stage(new ScreenViewport());\n  Gdx.input.setInputProcessor(stage);\n  ImageButtonStyle style=new ImageButtonStyle(skin.get(ButtonStyle.class));\n  style.imageUp=new TextureRegionDrawable(image);\n  style.imageDown=new TextureRegionDrawable(imageFlipped);\n  ImageButton iconButton=new ImageButton(style);\n  Button buttonMulti=new TextButton(\"Multi\\nLine\\nToggle\",skin,\"toggle\");\n  Button imgButton=new Button(new Image(image),skin);\n  Button imgToggleButton=new Button(new Image(image),skin,\"toggle\");\n  Label myLabel=new Label(\"this is some text.\",skin);\n  myLabel.setWrap(true);\n  Table t=new Table();\n  t.row();\n  t.add(myLabel);\n  t.layout();\n  final CheckBox checkBox=new CheckBox(\" Continuous rendering\",skin);\n  checkBox.setChecked(true);\n  final Slider slider=new Slider(0,10,1,false,skin);\n  slider.setAnimateDuration(0.3f);\n  TextField textfield=new TextField(\"\",skin);\n  textfield.setMessageText(\"Click here!\");\n  textfield.setAlignment(Align.center);\n  final SelectBox selectBox=new SelectBox(skin);\n  selectBox.setAlignment(Align.right);\n  selectBox.getList().setAlignment(Align.right);\n  selectBox.getStyle().listStyle.selection.setRightWidth(10);\n  selectBox.getStyle().listStyle.selection.setLeftWidth(20);\n  selectBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      System.out.println(selectBox.getSelected());\n    }\n  }\n);\n  selectBox.setItems(\"Android1\",\"Windows1 long text in item\",\"Linux1\",\"OSX1\",\"Android2\",\"Windows2\",\"Linux2\",\"OSX2\",\"Android3\",\"Windows3\",\"Linux3\",\"OSX3\",\"Android4\",\"Windows4\",\"Linux4\",\"OSX4\",\"Android5\",\"Windows5\",\"Linux5\",\"OSX5\",\"Android6\",\"Windows6\",\"Linux6\",\"OSX6\",\"Android7\",\"Windows7\",\"Linux7\",\"OSX7\");\n  selectBox.setSelected(\"Linux6\");\n  Image imageActor=new Image(image2);\n  ScrollPane scrollPane=new ScrollPane(imageActor);\n  List list=new List(skin);\n  list.setItems(listEntries);\n  list.getSelection().setMultiple(true);\n  list.getSelection().setRequired(false);\n  ScrollPane scrollPane2=new ScrollPane(list,skin);\n  scrollPane2.setFlickScroll(false);\n  Label minSizeLabel=new Label(\"minWidth cell\",skin);\n  Table rightSideTable=new Table(skin);\n  rightSideTable.add(minSizeLabel).growX().row();\n  rightSideTable.add(scrollPane2).grow();\n  SplitPane splitPane=new SplitPane(scrollPane,rightSideTable,false,skin,\"default-horizontal\");\n  fpsLabel=new Label(\"fps:\",skin);\n  final Label passwordLabel=new Label(\"Textfield in password mode: \",skin);\n  final TextField passwordTextField=new TextField(\"\",skin);\n  passwordTextField.setMessageText(\"password\");\n  passwordTextField.setPasswordCharacter('*');\n  passwordTextField.setPasswordMode(true);\n  buttonMulti.addListener(new TextTooltip(\"This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip!\",skin));\n  Table tooltipTable=new Table(skin);\n  tooltipTable.pad(10).background(\"default-round\");\n  tooltipTable.add(new TextButton(\"Fancy tooltip!\",skin));\n  imgButton.addListener(new Tooltip(tooltipTable));\n  Window window=new Window(\"Dialog\",skin);\n  window.getTitleTable().add(new TextButton(\"X\",skin)).height(window.getPadTop());\n  window.setPosition(0,0);\n  window.defaults().spaceBottom(10);\n  window.row().fill().expandX();\n  window.add(iconButton);\n  window.add(buttonMulti);\n  window.add(imgButton);\n  window.add(imgToggleButton);\n  window.row();\n  window.add(checkBox);\n  window.add(slider).minWidth(100).fillX().colspan(3);\n  window.row();\n  window.add(selectBox).maxWidth(100);\n  window.add(textfield).minWidth(100).expandX().fillX().colspan(3);\n  window.row();\n  window.add(splitPane).fill().expand().colspan(4).maxHeight(200);\n  window.row();\n  window.add(passwordLabel).colspan(2);\n  window.add(passwordTextField).minWidth(100).expandX().fillX().colspan(2);\n  window.row();\n  window.add(fpsLabel).colspan(4);\n  window.pack();\n  stage.addActor(window);\n  textfield.setTextFieldListener(new TextFieldListener(){\n    public void keyTyped(    TextField textField,    char key){\n      if (key == '\\n')       textField.getOnscreenKeyboard().show(false);\n    }\n  }\n);\n  slider.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.app.log(\"UITest\",\"slider: \" + slider.getValue());\n    }\n  }\n);\n  iconButton.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      new Dialog(\"Some Dialog\",skin,\"dialog\"){\n        protected void result(        Object object){\n          System.out.println(\"Chosen: \" + object);\n        }\n      }\n.text(\"Are you enjoying this demo?\").button(\"Yes\",true).button(\"No\",false).key(Keys.ENTER,true).key(Keys.ESCAPE,false).show(stage);\n    }\n  }\n);\n  checkBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.graphics.setContinuousRendering(checkBox.isChecked());\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 920,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5755,
        "startLineNumber" : 67,
        "startColumnNumber" : 1,
        "endLineNumber" : 208,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  texture1=new Texture(Gdx.files.internal(\"data/badlogicsmall.jpg\"));\n  texture2=new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n  TextureRegion image=new TextureRegion(texture1);\n  TextureRegion imageFlipped=new TextureRegion(image);\n  imageFlipped.flip(true,true);\n  TextureRegion image2=new TextureRegion(texture2);\n  stage=new Stage(new ScreenViewport());\n  Gdx.input.setInputProcessor(stage);\n  ImageButtonStyle style=new ImageButtonStyle(skin.get(ButtonStyle.class));\n  style.imageUp=new TextureRegionDrawable(image);\n  style.imageDown=new TextureRegionDrawable(imageFlipped);\n  ImageButton iconButton=new ImageButton(style);\n  Button buttonMulti=new TextButton(\"Multi\\nLine\\nToggle\",skin,\"toggle\");\n  Button imgButton=new Button(new Image(image),skin);\n  Button imgToggleButton=new Button(new Image(image),skin,\"toggle\");\n  Label myLabel=new Label(\"this is some text.\",skin);\n  myLabel.setWrap(true);\n  Table t=new Table();\n  t.row();\n  t.add(myLabel);\n  t.layout();\n  final CheckBox checkBox=new CheckBox(\" Continuous rendering\",skin);\n  checkBox.setChecked(true);\n  final Slider slider=new Slider(0,10,1,false,skin);\n  slider.setAnimateDuration(0.3f);\n  TextField textfield=new TextField(\"\",skin);\n  textfield.setMessageText(\"Click here!\");\n  textfield.setAlignment(Align.center);\n  final SelectBox selectBox=new SelectBox(skin);\n  selectBox.setAlignment(Align.right);\n  selectBox.getList().setAlignment(Align.right);\n  selectBox.getStyle().listStyle.selection.setRightWidth(10);\n  selectBox.getStyle().listStyle.selection.setLeftWidth(20);\n  selectBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      System.out.println(selectBox.getSelected());\n    }\n  }\n);\n  selectBox.setItems(\"Android1\",\"Windows1 long text in item\",\"Linux1\",\"OSX1\",\"Android2\",\"Windows2\",\"Linux2\",\"OSX2\",\"Android3\",\"Windows3\",\"Linux3\",\"OSX3\",\"Android4\",\"Windows4\",\"Linux4\",\"OSX4\",\"Android5\",\"Windows5\",\"Linux5\",\"OSX5\",\"Android6\",\"Windows6\",\"Linux6\",\"OSX6\",\"Android7\",\"Windows7\",\"Linux7\",\"OSX7\");\n  selectBox.setSelected(\"Linux6\");\n  Image imageActor=new Image(image2);\n  ScrollPane scrollPane=new ScrollPane(imageActor);\n  List list=new List(skin);\n  list.setItems(listEntries);\n  list.getSelection().setMultiple(true);\n  list.getSelection().setRequired(false);\n  ScrollPane scrollPane2=new ScrollPane(list,skin);\n  scrollPane2.setFlickScroll(false);\n  Label minSizeLabel=new Label(\"minWidth cell\",skin);\n  Table rightSideTable=new Table(skin);\n  rightSideTable.add(minSizeLabel).growX().row();\n  rightSideTable.add(scrollPane2).grow();\n  SplitPane splitPane=new SplitPane(scrollPane,rightSideTable,false,skin,\"default-horizontal\");\n  fpsLabel=new Label(\"fps:\",skin);\n  final Label passwordLabel=new Label(\"Textfield in password mode: \",skin);\n  final TextField passwordTextField=new TextField(\"\",skin);\n  passwordTextField.setMessageText(\"password\");\n  passwordTextField.setPasswordCharacter('*');\n  passwordTextField.setPasswordMode(true);\n  buttonMulti.addListener(new TextTooltip(\"This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip! This is a tooltip!\",skin));\n  Table tooltipTable=new Table(skin);\n  tooltipTable.pad(10).background(\"default-round\");\n  tooltipTable.add(new TextButton(\"Fancy tooltip!\",skin));\n  imgButton.addListener(new Tooltip(tooltipTable));\n  Window window=new Window(\"Dialog\",skin);\n  window.getTitleTable().add(new TextButton(\"X\",skin)).height(window.getPadTop());\n  window.setPosition(0,0);\n  window.defaults().spaceBottom(10);\n  window.row().fill().expandX();\n  window.add(iconButton);\n  window.add(buttonMulti);\n  window.add(imgButton);\n  window.add(imgToggleButton);\n  window.row();\n  window.add(checkBox);\n  window.add(slider).minWidth(100).fillX().colspan(3);\n  window.row();\n  window.add(selectBox).maxWidth(100);\n  window.add(textfield).minWidth(100).expandX().fillX().colspan(3);\n  window.row();\n  window.add(splitPane).fill().expand().colspan(4).maxHeight(200);\n  window.row();\n  window.add(passwordLabel).colspan(2);\n  window.add(passwordTextField).minWidth(100).expandX().fillX().colspan(2);\n  window.row();\n  window.add(fpsLabel).colspan(4);\n  window.pack();\n  stage.addActor(window);\n  textfield.setTextFieldListener(new TextFieldListener(){\n    public void keyTyped(    TextField textField,    char key){\n      if (key == '\\n')       textField.getOnscreenKeyboard().show(false);\n    }\n  }\n);\n  slider.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.app.log(\"UITest\",\"slider: \" + slider.getValue());\n    }\n  }\n);\n  iconButton.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      new Dialog(\"Some Dialog\",skin,\"dialog\"){\n        protected void result(        Object object){\n          System.out.println(\"Chosen: \" + object);\n        }\n      }\n.text(\"Are you enjoying this demo?\").button(\"Yes\",true).button(\"No\",false).key(Keys.ENTER,true).key(Keys.ESCAPE,false).show(stage);\n    }\n  }\n);\n  checkBox.addListener(new ChangeListener(){\n    public void changed(    ChangeEvent event,    Actor actor){\n      Gdx.graphics.setContinuousRendering(checkBox.isChecked());\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 926,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 172,
        "startColumnNumber" : 2,
        "endLineNumber" : 172,
        "endColumnNumber" : 75
      },
      "nodeContext" : "window.add(passwordTextField).minWidth(100).expandX().fillX().colspan(2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.scenes.scene2d.ui.TextField"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 140,
    "startColumnNumber" : 2,
    "endLineNumber" : 140,
    "endColumnNumber" : 19
  }, {
    "charLength" : 17,
    "startLineNumber" : 141,
    "startColumnNumber" : 2,
    "endLineNumber" : 141,
    "endColumnNumber" : 19
  }, {
    "charLength" : 17,
    "startLineNumber" : 142,
    "startColumnNumber" : 2,
    "endLineNumber" : 142,
    "endColumnNumber" : 19
  }, {
    "charLength" : 17,
    "startLineNumber" : 172,
    "startColumnNumber" : 13,
    "endLineNumber" : 172,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  } ]
}