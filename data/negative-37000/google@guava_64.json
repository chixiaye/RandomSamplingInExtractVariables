{
  "id" : 64,
  "expression" : "expectedSubArray",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-testlib/src/com/google/common/collect/testing/testers/CollectionToArrayTester.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expectedSubArray",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 137,
      "startColumnNumber" : 60,
      "endLineNumber" : 137,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 137,
        "startColumnNumber" : 60,
        "endLineNumber" : 137,
        "endColumnNumber" : 79
      },
      "nodeContext" : "expectedSubArray[i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 137,
        "startColumnNumber" : 10,
        "endLineNumber" : 137,
        "endColumnNumber" : 79
      },
      "nodeContext" : "\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 136,
        "startColumnNumber" : 6,
        "endLineNumber" : 138,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertTrue(\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i],subArray.contains(expectedSubArray[i]))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 136,
        "startColumnNumber" : 6,
        "endLineNumber" : 138,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertTrue(\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i],subArray.contains(expectedSubArray[i]));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 135,
        "startColumnNumber" : 47,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i],subArray.contains(expectedSubArray[i]));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 135,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < getNumElements(); i++) {\n  assertTrue(\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i],subArray.contains(expectedSubArray[i]));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 830,
        "startLineNumber" : 126,
        "startColumnNumber" : 43,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  E[] array=getSubjectGenerator().createArray(getNumElements() + 2);\n  array[getNumElements()]=e3();\n  array[getNumElements() + 1]=e3();\n  assertSame(\"toArray(overSizedE[]) should return the given array\",array,collection.toArray(array));\n  List<E> subArray=Arrays.asList(array).subList(0,getNumElements());\n  E[] expectedSubArray=createSamplesArray();\n  for (int i=0; i < getNumElements(); i++) {\n    assertTrue(\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i],subArray.contains(expectedSubArray[i]));\n  }\n  assertNull(\"The array element immediately following the end of the collection should be nulled\",array[getNumElements()]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 871,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testToArray_oversizedArray(){\n  E[] array=getSubjectGenerator().createArray(getNumElements() + 2);\n  array[getNumElements()]=e3();\n  array[getNumElements() + 1]=e3();\n  assertSame(\"toArray(overSizedE[]) should return the given array\",array,collection.toArray(array));\n  List<E> subArray=Arrays.asList(array).subList(0,getNumElements());\n  E[] expectedSubArray=createSamplesArray();\n  for (int i=0; i < getNumElements(); i++) {\n    assertTrue(\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i],subArray.contains(expectedSubArray[i]));\n  }\n  assertNull(\"The array element immediately following the end of the collection should be nulled\",array[getNumElements()]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 137,
        "startColumnNumber" : 10,
        "endLineNumber" : 137,
        "endColumnNumber" : 79
      },
      "nodeContext" : "\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "E[]"
  }, {
    "nodeContext" : "expectedSubArray",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 138,
      "startColumnNumber" : 28,
      "endLineNumber" : 138,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 138,
        "startColumnNumber" : 28,
        "endLineNumber" : 138,
        "endColumnNumber" : 47
      },
      "nodeContext" : "expectedSubArray[i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 138,
        "startColumnNumber" : 10,
        "endLineNumber" : 138,
        "endColumnNumber" : 48
      },
      "nodeContext" : "subArray.contains(expectedSubArray[i])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 136,
        "startColumnNumber" : 6,
        "endLineNumber" : 138,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertTrue(\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i],subArray.contains(expectedSubArray[i]))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 136,
        "startColumnNumber" : 6,
        "endLineNumber" : 138,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertTrue(\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i],subArray.contains(expectedSubArray[i]));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 135,
        "startColumnNumber" : 47,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i],subArray.contains(expectedSubArray[i]));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 135,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < getNumElements(); i++) {\n  assertTrue(\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i],subArray.contains(expectedSubArray[i]));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 830,
        "startLineNumber" : 126,
        "startColumnNumber" : 43,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  E[] array=getSubjectGenerator().createArray(getNumElements() + 2);\n  array[getNumElements()]=e3();\n  array[getNumElements() + 1]=e3();\n  assertSame(\"toArray(overSizedE[]) should return the given array\",array,collection.toArray(array));\n  List<E> subArray=Arrays.asList(array).subList(0,getNumElements());\n  E[] expectedSubArray=createSamplesArray();\n  for (int i=0; i < getNumElements(); i++) {\n    assertTrue(\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i],subArray.contains(expectedSubArray[i]));\n  }\n  assertNull(\"The array element immediately following the end of the collection should be nulled\",array[getNumElements()]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 871,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testToArray_oversizedArray(){\n  E[] array=getSubjectGenerator().createArray(getNumElements() + 2);\n  array[getNumElements()]=e3();\n  array[getNumElements() + 1]=e3();\n  assertSame(\"toArray(overSizedE[]) should return the given array\",array,collection.toArray(array));\n  List<E> subArray=Arrays.asList(array).subList(0,getNumElements());\n  E[] expectedSubArray=createSamplesArray();\n  for (int i=0; i < getNumElements(); i++) {\n    assertTrue(\"toArray(overSizedE[]) should contain element \" + expectedSubArray[i],subArray.contains(expectedSubArray[i]));\n  }\n  assertNull(\"The array element immediately following the end of the collection should be nulled\",array[getNumElements()]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 138,
        "startColumnNumber" : 10,
        "endLineNumber" : 138,
        "endColumnNumber" : 48
      },
      "nodeContext" : "subArray.contains(expectedSubArray[i])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "E[]"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 137,
    "startColumnNumber" : 60,
    "endLineNumber" : 137,
    "endColumnNumber" : 76
  }, {
    "charLength" : 16,
    "startLineNumber" : 138,
    "startColumnNumber" : 28,
    "endLineNumber" : 138,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}