{
  "id" : 349,
  "expression" : "DbColumnType",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-generate/src/main/java/com/baomidou/mybatisplus/generator/config/converts/MySqlTypeConvert.java",
  "occurrences" : 14,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 35,
      "startColumnNumber" : 19,
      "endLineNumber" : 35,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 35,
        "startColumnNumber" : 19,
        "endLineNumber" : 35,
        "endColumnNumber" : 38
      },
      "nodeContext" : "DbColumnType.STRING",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return DbColumnType.STRING;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 34,
        "startColumnNumber" : 54,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return DbColumnType.STRING;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 37,
      "startColumnNumber" : 19,
      "endLineNumber" : 37,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 37,
        "startColumnNumber" : 19,
        "endLineNumber" : 37,
        "endColumnNumber" : 36
      },
      "nodeContext" : "DbColumnType.LONG",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return DbColumnType.LONG;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 36,
        "startColumnNumber" : 41,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.LONG;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return DbColumnType.LONG;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 39,
      "startColumnNumber" : 19,
      "endLineNumber" : 39,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 39,
        "startColumnNumber" : 19,
        "endLineNumber" : 39,
        "endColumnNumber" : 39
      },
      "nodeContext" : "DbColumnType.INTEGER",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return DbColumnType.INTEGER;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 38,
        "startColumnNumber" : 38,
        "endLineNumber" : 40,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.INTEGER;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return DbColumnType.INTEGER;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 41,
      "startColumnNumber" : 19,
      "endLineNumber" : 41,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 41,
        "startColumnNumber" : 19,
        "endLineNumber" : 41,
        "endColumnNumber" : 36
      },
      "nodeContext" : "DbColumnType.DATE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return DbColumnType.DATE;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 40,
        "startColumnNumber" : 83,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.DATE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return DbColumnType.DATE;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 43,
      "startColumnNumber" : 19,
      "endLineNumber" : 43,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 43,
        "startColumnNumber" : 19,
        "endLineNumber" : 43,
        "endColumnNumber" : 38
      },
      "nodeContext" : "DbColumnType.STRING",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return DbColumnType.STRING;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 42,
        "startColumnNumber" : 39,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return DbColumnType.STRING;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 45,
      "startColumnNumber" : 19,
      "endLineNumber" : 45,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 45,
        "startColumnNumber" : 19,
        "endLineNumber" : 45,
        "endColumnNumber" : 39
      },
      "nodeContext" : "DbColumnType.BOOLEAN",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return DbColumnType.BOOLEAN;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 44,
        "startColumnNumber" : 38,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return DbColumnType.BOOLEAN;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 47,
      "startColumnNumber" : 19,
      "endLineNumber" : 47,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 47,
        "startColumnNumber" : 19,
        "endLineNumber" : 47,
        "endColumnNumber" : 43
      },
      "nodeContext" : "DbColumnType.BIG_DECIMAL",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 44
      },
      "nodeContext" : "return DbColumnType.BIG_DECIMAL;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 46,
        "startColumnNumber" : 42,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.BIG_DECIMAL;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 44
      },
      "nodeContext" : "return DbColumnType.BIG_DECIMAL;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 49,
      "startColumnNumber" : 19,
      "endLineNumber" : 49,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 49,
        "startColumnNumber" : 19,
        "endLineNumber" : 49,
        "endColumnNumber" : 36
      },
      "nodeContext" : "DbColumnType.CLOB",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return DbColumnType.CLOB;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 48,
        "startColumnNumber" : 39,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.CLOB;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return DbColumnType.CLOB;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 51,
      "startColumnNumber" : 19,
      "endLineNumber" : 51,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 51,
        "startColumnNumber" : 19,
        "endLineNumber" : 51,
        "endColumnNumber" : 36
      },
      "nodeContext" : "DbColumnType.BLOB",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return DbColumnType.BLOB;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 50,
        "startColumnNumber" : 39,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.BLOB;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 50,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 37
      },
      "nodeContext" : "return DbColumnType.BLOB;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 53,
      "startColumnNumber" : 19,
      "endLineNumber" : 53,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 53,
        "startColumnNumber" : 19,
        "endLineNumber" : 53,
        "endColumnNumber" : 42
      },
      "nodeContext" : "DbColumnType.BYTE_ARRAY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 43
      },
      "nodeContext" : "return DbColumnType.BYTE_ARRAY;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 52,
        "startColumnNumber" : 41,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.BYTE_ARRAY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 52,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 50,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 43
      },
      "nodeContext" : "return DbColumnType.BYTE_ARRAY;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 55,
      "startColumnNumber" : 19,
      "endLineNumber" : 55,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 55,
        "startColumnNumber" : 19,
        "endLineNumber" : 55,
        "endColumnNumber" : 37
      },
      "nodeContext" : "DbColumnType.FLOAT",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 38
      },
      "nodeContext" : "return DbColumnType.FLOAT;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 54,
        "startColumnNumber" : 40,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.FLOAT;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 54,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 52,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 50,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 38
      },
      "nodeContext" : "return DbColumnType.FLOAT;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 57,
      "startColumnNumber" : 19,
      "endLineNumber" : 57,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 57,
        "startColumnNumber" : 19,
        "endLineNumber" : 57,
        "endColumnNumber" : 38
      },
      "nodeContext" : "DbColumnType.DOUBLE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return DbColumnType.DOUBLE;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 56,
        "startColumnNumber" : 41,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.DOUBLE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 54,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 52,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 50,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return DbColumnType.DOUBLE;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 59,
      "startColumnNumber" : 19,
      "endLineNumber" : 59,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 59,
        "startColumnNumber" : 19,
        "endLineNumber" : 59,
        "endColumnNumber" : 38
      },
      "nodeContext" : "DbColumnType.STRING",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return DbColumnType.STRING;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 58,
        "startColumnNumber" : 61,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 58,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 54,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 52,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 50,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1042,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BLOB;\n}\n else if (t.contains(\"binary\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return DbColumnType.STRING;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  }, {
    "nodeContext" : "DbColumnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 61,
      "startColumnNumber" : 15,
      "endLineNumber" : 61,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 61,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 34
      },
      "nodeContext" : "DbColumnType.STRING",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return DbColumnType.STRING;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BLOB;\n  }\n else   if (t.contains(\"binary\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return DbColumnType.STRING;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.rules.DbColumnType"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 35,
    "startColumnNumber" : 19,
    "endLineNumber" : 35,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 37,
    "startColumnNumber" : 19,
    "endLineNumber" : 37,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 39,
    "startColumnNumber" : 19,
    "endLineNumber" : 39,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 41,
    "startColumnNumber" : 19,
    "endLineNumber" : 41,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 43,
    "startColumnNumber" : 19,
    "endLineNumber" : 43,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 45,
    "startColumnNumber" : 19,
    "endLineNumber" : 45,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 47,
    "startColumnNumber" : 19,
    "endLineNumber" : 47,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 49,
    "startColumnNumber" : 19,
    "endLineNumber" : 49,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 51,
    "startColumnNumber" : 19,
    "endLineNumber" : 51,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 53,
    "startColumnNumber" : 19,
    "endLineNumber" : 53,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 55,
    "startColumnNumber" : 19,
    "endLineNumber" : 55,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 57,
    "startColumnNumber" : 19,
    "endLineNumber" : 57,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 59,
    "startColumnNumber" : 19,
    "endLineNumber" : 59,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 61,
    "startColumnNumber" : 15,
    "endLineNumber" : 61,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 9
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 11
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 11
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 13
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 13
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 12
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 11
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 10
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 14
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 14
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 13
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 12
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 11
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 10
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 15
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 15
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 14
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 13
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 12
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 11
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 16
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 2
  } ]
}