{
  "id" : 400,
  "expression" : "output",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/algorithms-miscellaneous-5/src/test/java/com/baeldung/algorithms/conversion/ByteArrayConverterUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "output",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 31,
      "startColumnNumber" : 19,
      "endLineNumber" : 31,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(output,IsEqualIgnoringCase.equalToIgnoringCase(hexString))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(output,IsEqualIgnoringCase.equalToIgnoringCase(hexString));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 24,
        "startColumnNumber" : 74,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] bytes=getSampleBytes();\n  String hexString=getSampleHexString();\n  if (hexString.charAt(0) == '0') {\n    hexString=hexString.substring(1);\n  }\n  String output=hexStringConverter.encodeUsingBigIntegerToString(bytes);\n  assertThat(output,IsEqualIgnoringCase.equalToIgnoringCase(hexString));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldEncodeByteArrayToHexStringUsingBigIntegerToString(){\n  byte[] bytes=getSampleBytes();\n  String hexString=getSampleHexString();\n  if (hexString.charAt(0) == '0') {\n    hexString=hexString.substring(1);\n  }\n  String output=hexStringConverter.encodeUsingBigIntegerToString(bytes);\n  assertThat(output,IsEqualIgnoringCase.equalToIgnoringCase(hexString));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(output,IsEqualIgnoringCase.equalToIgnoringCase(hexString));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 31,
    "startColumnNumber" : 19,
    "endLineNumber" : 31,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}