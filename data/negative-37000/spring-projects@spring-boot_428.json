{
  "id" : 428,
  "expression" : "\"Value must not be null\"",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/ConfigurationPropertyTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Value must not be null\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 53,
      "startColumnNumber" : 28,
      "endLineNumber" : 53,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.thrown.expectMessage(\"Value must not be null\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 54
      },
      "nodeContext" : "this.thrown.expectMessage(\"Value must not be null\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 51,
        "startColumnNumber" : 74,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this.thrown.expect(IllegalArgumentException.class);\n  this.thrown.expectMessage(\"Value must not be null\");\n  new ConfigurationProperty(NAME,null,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 50,
        "startColumnNumber" : 1,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void createWhenValueIsNullShouldThrowException() throws Exception {\n  this.thrown.expect(IllegalArgumentException.class);\n  this.thrown.expectMessage(\"Value must not be null\");\n  new ConfigurationProperty(NAME,null,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 32,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 54
      },
      "nodeContext" : "this.thrown.expectMessage(\"Value must not be null\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 53,
    "startColumnNumber" : 28,
    "endLineNumber" : 53,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}