{
  "id" : 218,
  "expression" : "getProject()",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/BuildTarMojo.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getProject()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 47,
      "startColumnNumber" : 21,
      "endLineNumber" : 47,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 47,
        "startColumnNumber" : 21,
        "endLineNumber" : 47,
        "endColumnNumber" : 48
      },
      "nodeContext" : "getProject().getPackaging()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 49
      },
      "nodeContext" : "\"pom\".equals(getProject().getPackaging())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (\"pom\".equals(getProject().getPackaging())) {\n  getLog().info(\"Skipping containerization because packaging is 'pom'...\");\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1583,
        "startLineNumber" : 46,
        "startColumnNumber" : 54,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (\"pom\".equals(getProject().getPackaging())) {\n    getLog().info(\"Skipping containerization because packaging is 'pom'...\");\n    return;\n  }\n  MavenJibLogger mavenJibLogger=new MavenJibLogger(getLog());\n  MavenProjectProperties mavenProjectProperties=MavenProjectProperties.getForProject(getProject(),mavenJibLogger,getExtraDirectory());\n  ImageReference targetImage=mavenProjectProperties.getGeneratedTargetDockerTag(getTargetImage(),mavenJibLogger);\n  PluginConfigurationProcessor pluginConfigurationProcessor=PluginConfigurationProcessor.processCommonConfiguration(mavenJibLogger,this,mavenProjectProperties);\n  BuildConfiguration buildConfiguration=pluginConfigurationProcessor.getBuildConfigurationBuilder().setBaseImageConfiguration(pluginConfigurationProcessor.getBaseImageConfigurationBuilder().build()).setTargetImageConfiguration(ImageConfiguration.builder(targetImage).build()).setContainerConfiguration(pluginConfigurationProcessor.getContainerConfigurationBuilder().build()).build();\n  try {\n    BuildStepsRunner.forBuildTar(Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\"),buildConfiguration).build(HELPFUL_SUGGESTIONS);\n    getLog().info(\"\");\n  }\n catch (  CacheDirectoryCreationException|BuildStepsExecutionException ex) {\n    throw new MojoExecutionException(ex.getMessage(),ex.getCause());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1647,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void execute() throws MojoExecutionException {\n  if (\"pom\".equals(getProject().getPackaging())) {\n    getLog().info(\"Skipping containerization because packaging is 'pom'...\");\n    return;\n  }\n  MavenJibLogger mavenJibLogger=new MavenJibLogger(getLog());\n  MavenProjectProperties mavenProjectProperties=MavenProjectProperties.getForProject(getProject(),mavenJibLogger,getExtraDirectory());\n  ImageReference targetImage=mavenProjectProperties.getGeneratedTargetDockerTag(getTargetImage(),mavenJibLogger);\n  PluginConfigurationProcessor pluginConfigurationProcessor=PluginConfigurationProcessor.processCommonConfiguration(mavenJibLogger,this,mavenProjectProperties);\n  BuildConfiguration buildConfiguration=pluginConfigurationProcessor.getBuildConfigurationBuilder().setBaseImageConfiguration(pluginConfigurationProcessor.getBaseImageConfigurationBuilder().build()).setTargetImageConfiguration(ImageConfiguration.builder(targetImage).build()).setContainerConfiguration(pluginConfigurationProcessor.getContainerConfigurationBuilder().build()).build();\n  try {\n    BuildStepsRunner.forBuildTar(Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\"),buildConfiguration).build(HELPFUL_SUGGESTIONS);\n    getLog().info(\"\");\n  }\n catch (  CacheDirectoryCreationException|BuildStepsExecutionException ex) {\n    throw new MojoExecutionException(ex.getMessage(),ex.getCause());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 49
      },
      "nodeContext" : "\"pom\".equals(getProject().getPackaging())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.maven.MavenProject"
  }, {
    "nodeContext" : "getProject()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 54,
      "startColumnNumber" : 45,
      "endLineNumber" : 54,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 95
      },
      "nodeContext" : "MavenProjectProperties.getForProject(getProject(),mavenJibLogger,getExtraDirectory())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 53,
        "startColumnNumber" : 27,
        "endLineNumber" : 54,
        "endColumnNumber" : 95
      },
      "nodeContext" : "mavenProjectProperties=MavenProjectProperties.getForProject(getProject(),mavenJibLogger,getExtraDirectory())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 96
      },
      "nodeContext" : "MavenProjectProperties mavenProjectProperties=MavenProjectProperties.getForProject(getProject(),mavenJibLogger,getExtraDirectory());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1583,
        "startLineNumber" : 46,
        "startColumnNumber" : 54,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (\"pom\".equals(getProject().getPackaging())) {\n    getLog().info(\"Skipping containerization because packaging is 'pom'...\");\n    return;\n  }\n  MavenJibLogger mavenJibLogger=new MavenJibLogger(getLog());\n  MavenProjectProperties mavenProjectProperties=MavenProjectProperties.getForProject(getProject(),mavenJibLogger,getExtraDirectory());\n  ImageReference targetImage=mavenProjectProperties.getGeneratedTargetDockerTag(getTargetImage(),mavenJibLogger);\n  PluginConfigurationProcessor pluginConfigurationProcessor=PluginConfigurationProcessor.processCommonConfiguration(mavenJibLogger,this,mavenProjectProperties);\n  BuildConfiguration buildConfiguration=pluginConfigurationProcessor.getBuildConfigurationBuilder().setBaseImageConfiguration(pluginConfigurationProcessor.getBaseImageConfigurationBuilder().build()).setTargetImageConfiguration(ImageConfiguration.builder(targetImage).build()).setContainerConfiguration(pluginConfigurationProcessor.getContainerConfigurationBuilder().build()).build();\n  try {\n    BuildStepsRunner.forBuildTar(Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\"),buildConfiguration).build(HELPFUL_SUGGESTIONS);\n    getLog().info(\"\");\n  }\n catch (  CacheDirectoryCreationException|BuildStepsExecutionException ex) {\n    throw new MojoExecutionException(ex.getMessage(),ex.getCause());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1647,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void execute() throws MojoExecutionException {\n  if (\"pom\".equals(getProject().getPackaging())) {\n    getLog().info(\"Skipping containerization because packaging is 'pom'...\");\n    return;\n  }\n  MavenJibLogger mavenJibLogger=new MavenJibLogger(getLog());\n  MavenProjectProperties mavenProjectProperties=MavenProjectProperties.getForProject(getProject(),mavenJibLogger,getExtraDirectory());\n  ImageReference targetImage=mavenProjectProperties.getGeneratedTargetDockerTag(getTargetImage(),mavenJibLogger);\n  PluginConfigurationProcessor pluginConfigurationProcessor=PluginConfigurationProcessor.processCommonConfiguration(mavenJibLogger,this,mavenProjectProperties);\n  BuildConfiguration buildConfiguration=pluginConfigurationProcessor.getBuildConfigurationBuilder().setBaseImageConfiguration(pluginConfigurationProcessor.getBaseImageConfigurationBuilder().build()).setTargetImageConfiguration(ImageConfiguration.builder(targetImage).build()).setContainerConfiguration(pluginConfigurationProcessor.getContainerConfigurationBuilder().build()).build();\n  try {\n    BuildStepsRunner.forBuildTar(Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\"),buildConfiguration).build(HELPFUL_SUGGESTIONS);\n    getLog().info(\"\");\n  }\n catch (  CacheDirectoryCreationException|BuildStepsExecutionException ex) {\n    throw new MojoExecutionException(ex.getMessage(),ex.getCause());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 95
      },
      "nodeContext" : "MavenProjectProperties.getForProject(getProject(),mavenJibLogger,getExtraDirectory())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.maven.MavenProject"
  }, {
    "nodeContext" : "getProject()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 75,
      "startColumnNumber" : 24,
      "endLineNumber" : 75,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 75,
        "startColumnNumber" : 24,
        "endLineNumber" : 75,
        "endColumnNumber" : 47
      },
      "nodeContext" : "getProject().getBuild()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 75,
        "startColumnNumber" : 24,
        "endLineNumber" : 75,
        "endColumnNumber" : 62
      },
      "nodeContext" : "getProject().getBuild().getDirectory()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 75,
        "startColumnNumber" : 14,
        "endLineNumber" : 75,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Paths.get(getProject().getBuild().getDirectory())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 75,
        "startColumnNumber" : 14,
        "endLineNumber" : 75,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 76,
        "endColumnNumber" : 33
      },
      "nodeContext" : "BuildStepsRunner.forBuildTar(Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\"),buildConfiguration)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 77,
        "endColumnNumber" : 37
      },
      "nodeContext" : "BuildStepsRunner.forBuildTar(Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\"),buildConfiguration).build(HELPFUL_SUGGESTIONS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 77,
        "endColumnNumber" : 38
      },
      "nodeContext" : "BuildStepsRunner.forBuildTar(Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\"),buildConfiguration).build(HELPFUL_SUGGESTIONS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BuildStepsRunner.forBuildTar(Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\"),buildConfiguration).build(HELPFUL_SUGGESTIONS);\n  getLog().info(\"\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  BuildStepsRunner.forBuildTar(Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\"),buildConfiguration).build(HELPFUL_SUGGESTIONS);\n  getLog().info(\"\");\n}\n catch (CacheDirectoryCreationException|BuildStepsExecutionException ex) {\n  throw new MojoExecutionException(ex.getMessage(),ex.getCause());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 47,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1583,
        "startLineNumber" : 46,
        "startColumnNumber" : 54,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (\"pom\".equals(getProject().getPackaging())) {\n    getLog().info(\"Skipping containerization because packaging is 'pom'...\");\n    return;\n  }\n  MavenJibLogger mavenJibLogger=new MavenJibLogger(getLog());\n  MavenProjectProperties mavenProjectProperties=MavenProjectProperties.getForProject(getProject(),mavenJibLogger,getExtraDirectory());\n  ImageReference targetImage=mavenProjectProperties.getGeneratedTargetDockerTag(getTargetImage(),mavenJibLogger);\n  PluginConfigurationProcessor pluginConfigurationProcessor=PluginConfigurationProcessor.processCommonConfiguration(mavenJibLogger,this,mavenProjectProperties);\n  BuildConfiguration buildConfiguration=pluginConfigurationProcessor.getBuildConfigurationBuilder().setBaseImageConfiguration(pluginConfigurationProcessor.getBaseImageConfigurationBuilder().build()).setTargetImageConfiguration(ImageConfiguration.builder(targetImage).build()).setContainerConfiguration(pluginConfigurationProcessor.getContainerConfigurationBuilder().build()).build();\n  try {\n    BuildStepsRunner.forBuildTar(Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\"),buildConfiguration).build(HELPFUL_SUGGESTIONS);\n    getLog().info(\"\");\n  }\n catch (  CacheDirectoryCreationException|BuildStepsExecutionException ex) {\n    throw new MojoExecutionException(ex.getMessage(),ex.getCause());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1647,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void execute() throws MojoExecutionException {\n  if (\"pom\".equals(getProject().getPackaging())) {\n    getLog().info(\"Skipping containerization because packaging is 'pom'...\");\n    return;\n  }\n  MavenJibLogger mavenJibLogger=new MavenJibLogger(getLog());\n  MavenProjectProperties mavenProjectProperties=MavenProjectProperties.getForProject(getProject(),mavenJibLogger,getExtraDirectory());\n  ImageReference targetImage=mavenProjectProperties.getGeneratedTargetDockerTag(getTargetImage(),mavenJibLogger);\n  PluginConfigurationProcessor pluginConfigurationProcessor=PluginConfigurationProcessor.processCommonConfiguration(mavenJibLogger,this,mavenProjectProperties);\n  BuildConfiguration buildConfiguration=pluginConfigurationProcessor.getBuildConfigurationBuilder().setBaseImageConfiguration(pluginConfigurationProcessor.getBaseImageConfigurationBuilder().build()).setTargetImageConfiguration(ImageConfiguration.builder(targetImage).build()).setContainerConfiguration(pluginConfigurationProcessor.getContainerConfigurationBuilder().build()).build();\n  try {\n    BuildStepsRunner.forBuildTar(Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\"),buildConfiguration).build(HELPFUL_SUGGESTIONS);\n    getLog().info(\"\");\n  }\n catch (  CacheDirectoryCreationException|BuildStepsExecutionException ex) {\n    throw new MojoExecutionException(ex.getMessage(),ex.getCause());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 75,
        "startColumnNumber" : 14,
        "endLineNumber" : 75,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Paths.get(getProject().getBuild().getDirectory()).resolve(\"jib-image.tar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.maven.MavenProject"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 47,
    "startColumnNumber" : 21,
    "endLineNumber" : 47,
    "endColumnNumber" : 33
  }, {
    "charLength" : 12,
    "startLineNumber" : 54,
    "startColumnNumber" : 45,
    "endLineNumber" : 54,
    "endColumnNumber" : 57
  }, {
    "charLength" : 12,
    "startLineNumber" : 75,
    "startColumnNumber" : 24,
    "endLineNumber" : 75,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 9
  } ]
}