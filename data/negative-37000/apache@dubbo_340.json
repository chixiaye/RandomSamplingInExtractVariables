{
  "id" : 340,
  "expression" : "\"\"",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/main/java/org/apache/dubbo/common/url/component/param/DynamicParamTable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 78,
      "startColumnNumber" : 17,
      "endLineNumber" : 78,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 20
      },
      "nodeContext" : "keys.add(\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 21
      },
      "nodeContext" : "keys.add(\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 74,
        "startColumnNumber" : 30,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> keys=new LinkedList<>();\n  List<ParamValue> values=new LinkedList<>();\n  Map<String,Integer> key2Index=new HashMap<>(64);\n  keys.add(\"\");\n  values.add(new DynamicValues(null));\n  keys.add(\"version\");\n  values.add(new DynamicValues(null));\n  keys.add(\"side\");\n  values.add(new FixedParamValue(\"consumer\",\"provider\"));\n  KEYS.addAll(keys);\n  VALUES.addAll(values);\n  ExtensionLoader.getExtensionLoader(DynamicParamSource.class).getSupportedExtensionInstances().forEach(source -> source.init(KEYS,VALUES));\n  for (int i=0; i < KEYS.size(); i++) {\n    if (!KEYS.get(i).isEmpty()) {\n      key2Index.put(KEYS.get(i),i);\n    }\n  }\n  KEY2INDEX.putAll(key2Index);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 891,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void init(){\n  List<String> keys=new LinkedList<>();\n  List<ParamValue> values=new LinkedList<>();\n  Map<String,Integer> key2Index=new HashMap<>(64);\n  keys.add(\"\");\n  values.add(new DynamicValues(null));\n  keys.add(\"version\");\n  values.add(new DynamicValues(null));\n  keys.add(\"side\");\n  values.add(new FixedParamValue(\"consumer\",\"provider\"));\n  KEYS.addAll(keys);\n  VALUES.addAll(values);\n  ExtensionLoader.getExtensionLoader(DynamicParamSource.class).getSupportedExtensionInstances().forEach(source -> source.init(KEYS,VALUES));\n  for (int i=0; i < KEYS.size(); i++) {\n    if (!KEYS.get(i).isEmpty()) {\n      key2Index.put(KEYS.get(i),i);\n    }\n  }\n  KEY2INDEX.putAll(key2Index);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 21
      },
      "nodeContext" : "keys.add(\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 78,
    "startColumnNumber" : 17,
    "endLineNumber" : 78,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}