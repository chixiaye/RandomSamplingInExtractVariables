{
  "id" : 123,
  "expression" : "new StringBuilder()",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/AbstractDependencyFilterMojo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new StringBuilder()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 129,
      "startColumnNumber" : 26,
      "endLineNumber" : 129,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 129,
        "endColumnNumber" : 45
      },
      "nodeContext" : "cleaned=new StringBuilder()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 129,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 46
      },
      "nodeContext" : "StringBuilder cleaned=new StringBuilder();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 125,
        "startColumnNumber" : 50,
        "endLineNumber" : 138,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (content == null || content.trim().isEmpty()) {\n    return \"\";\n  }\n  StringBuilder cleaned=new StringBuilder();\n  StringTokenizer tokenizer=new StringTokenizer(content,\",\");\n  while (tokenizer.hasMoreElements()) {\n    cleaned.append(tokenizer.nextToken().trim());\n    if (tokenizer.hasMoreElements()) {\n      cleaned.append(\",\");\n    }\n  }\n  return cleaned.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 125,
        "startColumnNumber" : 1,
        "endLineNumber" : 138,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private String cleanFilterConfig(String content){\n  if (content == null || content.trim().isEmpty()) {\n    return \"\";\n  }\n  StringBuilder cleaned=new StringBuilder();\n  StringTokenizer tokenizer=new StringTokenizer(content,\",\");\n  while (tokenizer.hasMoreElements()) {\n    cleaned.append(tokenizer.nextToken().trim());\n    if (tokenizer.hasMoreElements()) {\n      cleaned.append(\",\");\n    }\n  }\n  return cleaned.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 129,
        "startColumnNumber" : 2,
        "endLineNumber" : 129,
        "endColumnNumber" : 46
      },
      "nodeContext" : "StringBuilder cleaned=new StringBuilder();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 129,
    "startColumnNumber" : 26,
    "endLineNumber" : 129,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}