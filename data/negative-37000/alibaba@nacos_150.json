{
  "id" : 150,
  "expression" : "event.getContent()",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpConfigHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "event.getContent()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 46,
      "startColumnNumber" : 31,
      "endLineNumber" : 46,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 46,
        "startColumnNumber" : 21,
        "endLineNumber" : 46,
        "endColumnNumber" : 49
      },
      "nodeContext" : "content=event.getContent()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 50
      },
      "nodeContext" : "final String content=event.getContent();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3818,
        "startLineNumber" : 42,
        "startColumnNumber" : 60,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String dataId=event.getDataId();\n  final String group=event.getGroup();\n  final String namespaceId=event.getNamespaceId();\n  final String content=event.getContent();\n  final String type=event.getType();\n  final long lastModified=event.getLastModifiedTs();\n  if (event.isBeta()) {\n    boolean result=false;\n    if (event.isRemove()) {\n      result=ConfigCacheService.removeBeta(dataId,group,namespaceId);\n      if (result) {\n        ConfigTraceService.logDumpEvent(dataId,group,namespaceId,null,lastModified,event.getHandleIp(),ConfigTraceService.DUMP_EVENT_REMOVE_OK,System.currentTimeMillis() - lastModified,0);\n      }\n      return result;\n    }\n else {\n      result=ConfigCacheService.dumpBeta(dataId,group,namespaceId,content,lastModified,event.getBetaIps());\n      if (result) {\n        ConfigTraceService.logDumpEvent(dataId,group,namespaceId,null,lastModified,event.getHandleIp(),ConfigTraceService.DUMP_EVENT_OK,System.currentTimeMillis() - lastModified,content.length());\n      }\n    }\n    return result;\n  }\n  if (StringUtils.isBlank(event.getTag())) {\n    if (dataId.equals(AggrWhitelist.AGGRIDS_METADATA)) {\n      AggrWhitelist.load(content);\n    }\n    if (dataId.equals(ClientIpWhiteList.CLIENT_IP_WHITELIST_METADATA)) {\n      ClientIpWhiteList.load(content);\n    }\n    if (dataId.equals(SwitchService.SWITCH_META_DATAID)) {\n      SwitchService.load(content);\n    }\n    boolean result;\n    if (!event.isRemove()) {\n      result=ConfigCacheService.dump(dataId,group,namespaceId,content,lastModified,type);\n      if (result) {\n        ConfigTraceService.logDumpEvent(dataId,group,namespaceId,null,lastModified,event.getHandleIp(),ConfigTraceService.DUMP_EVENT_OK,System.currentTimeMillis() - lastModified,content.length());\n      }\n    }\n else {\n      result=ConfigCacheService.remove(dataId,group,namespaceId);\n      if (result) {\n        ConfigTraceService.logDumpEvent(dataId,group,namespaceId,null,lastModified,event.getHandleIp(),ConfigTraceService.DUMP_EVENT_REMOVE_OK,System.currentTimeMillis() - lastModified,0);\n      }\n    }\n    return result;\n  }\n else {\n    boolean result;\n    if (!event.isRemove()) {\n      result=ConfigCacheService.dumpTag(dataId,group,namespaceId,event.getTag(),content,lastModified);\n      if (result) {\n        ConfigTraceService.logDumpEvent(dataId,group,namespaceId,null,lastModified,event.getHandleIp(),ConfigTraceService.DUMP_EVENT_OK,System.currentTimeMillis() - lastModified,content.length());\n      }\n    }\n else {\n      result=ConfigCacheService.removeTag(dataId,group,namespaceId,event.getTag());\n      if (result) {\n        ConfigTraceService.logDumpEvent(dataId,group,namespaceId,null,lastModified,event.getHandleIp(),ConfigTraceService.DUMP_EVENT_REMOVE_OK,System.currentTimeMillis() - lastModified,0);\n      }\n    }\n    return result;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 368,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4056,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * trigger config dump event.\n * @param event {@link ConfigDumpEvent}\n * @return {@code true} if the config dump task success , else {@code false}\n */\npublic static boolean configDump(ConfigDumpEvent event){\n  final String dataId=event.getDataId();\n  final String group=event.getGroup();\n  final String namespaceId=event.getNamespaceId();\n  final String content=event.getContent();\n  final String type=event.getType();\n  final long lastModified=event.getLastModifiedTs();\n  if (event.isBeta()) {\n    boolean result=false;\n    if (event.isRemove()) {\n      result=ConfigCacheService.removeBeta(dataId,group,namespaceId);\n      if (result) {\n        ConfigTraceService.logDumpEvent(dataId,group,namespaceId,null,lastModified,event.getHandleIp(),ConfigTraceService.DUMP_EVENT_REMOVE_OK,System.currentTimeMillis() - lastModified,0);\n      }\n      return result;\n    }\n else {\n      result=ConfigCacheService.dumpBeta(dataId,group,namespaceId,content,lastModified,event.getBetaIps());\n      if (result) {\n        ConfigTraceService.logDumpEvent(dataId,group,namespaceId,null,lastModified,event.getHandleIp(),ConfigTraceService.DUMP_EVENT_OK,System.currentTimeMillis() - lastModified,content.length());\n      }\n    }\n    return result;\n  }\n  if (StringUtils.isBlank(event.getTag())) {\n    if (dataId.equals(AggrWhitelist.AGGRIDS_METADATA)) {\n      AggrWhitelist.load(content);\n    }\n    if (dataId.equals(ClientIpWhiteList.CLIENT_IP_WHITELIST_METADATA)) {\n      ClientIpWhiteList.load(content);\n    }\n    if (dataId.equals(SwitchService.SWITCH_META_DATAID)) {\n      SwitchService.load(content);\n    }\n    boolean result;\n    if (!event.isRemove()) {\n      result=ConfigCacheService.dump(dataId,group,namespaceId,content,lastModified,type);\n      if (result) {\n        ConfigTraceService.logDumpEvent(dataId,group,namespaceId,null,lastModified,event.getHandleIp(),ConfigTraceService.DUMP_EVENT_OK,System.currentTimeMillis() - lastModified,content.length());\n      }\n    }\n else {\n      result=ConfigCacheService.remove(dataId,group,namespaceId);\n      if (result) {\n        ConfigTraceService.logDumpEvent(dataId,group,namespaceId,null,lastModified,event.getHandleIp(),ConfigTraceService.DUMP_EVENT_REMOVE_OK,System.currentTimeMillis() - lastModified,0);\n      }\n    }\n    return result;\n  }\n else {\n    boolean result;\n    if (!event.isRemove()) {\n      result=ConfigCacheService.dumpTag(dataId,group,namespaceId,event.getTag(),content,lastModified);\n      if (result) {\n        ConfigTraceService.logDumpEvent(dataId,group,namespaceId,null,lastModified,event.getHandleIp(),ConfigTraceService.DUMP_EVENT_OK,System.currentTimeMillis() - lastModified,content.length());\n      }\n    }\n else {\n      result=ConfigCacheService.removeTag(dataId,group,namespaceId,event.getTag());\n      if (result) {\n        ConfigTraceService.logDumpEvent(dataId,group,namespaceId,null,lastModified,event.getHandleIp(),ConfigTraceService.DUMP_EVENT_REMOVE_OK,System.currentTimeMillis() - lastModified,0);\n      }\n    }\n    return result;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 378,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 50
      },
      "nodeContext" : "final String content=event.getContent();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 46,
    "startColumnNumber" : 31,
    "endLineNumber" : 46,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}