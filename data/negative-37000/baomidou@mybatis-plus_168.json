{
  "id" : 168,
  "expression" : "configuration",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/MybatisDefaultParameterHandler.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "configuration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 261,
      "startColumnNumber" : 48,
      "endLineNumber" : 261,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 261,
        "startColumnNumber" : 48,
        "endLineNumber" : 261,
        "endColumnNumber" : 92
      },
      "nodeContext" : "configuration.newMetaObject(parameterObject)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 261,
        "startColumnNumber" : 35,
        "endLineNumber" : 261,
        "endColumnNumber" : 92
      },
      "nodeContext" : "metaObject=configuration.newMetaObject(parameterObject)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 261,
        "startColumnNumber" : 24,
        "endLineNumber" : 261,
        "endColumnNumber" : 93
      },
      "nodeContext" : "MetaObject metaObject=configuration.newMetaObject(parameterObject);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 260,
        "startColumnNumber" : 27,
        "endLineNumber" : 267,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  MetaObject metaObject=configuration.newMetaObject(parameterObject);\n  value=metaObject.getValue(propertyName);\n  if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n    value=additionalParameters.get(propertyName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 258,
        "startColumnNumber" : 27,
        "endLineNumber" : 267,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n  value=parameterObject;\n}\n else {\n  MetaObject metaObject=configuration.newMetaObject(parameterObject);\n  value=metaObject.getValue(propertyName);\n  if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n    value=additionalParameters.get(propertyName);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 660,
        "startLineNumber" : 256,
        "startColumnNumber" : 27,
        "endLineNumber" : 267,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (parameterObject == null) {\n  value=null;\n}\n else if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n  value=parameterObject;\n}\n else {\n  MetaObject metaObject=configuration.newMetaObject(parameterObject);\n  value=metaObject.getValue(propertyName);\n  if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n    value=additionalParameters.get(propertyName);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 862,
        "startLineNumber" : 254,
        "startColumnNumber" : 20,
        "endLineNumber" : 267,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (boundSql.hasAdditionalParameter(propertyName)) {\n  value=boundSql.getAdditionalParameter(propertyName);\n}\n else if (parameterObject == null) {\n  value=null;\n}\n else if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n  value=parameterObject;\n}\n else {\n  MetaObject metaObject=configuration.newMetaObject(parameterObject);\n  value=metaObject.getValue(propertyName);\n  if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n    value=additionalParameters.get(propertyName);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 251,
        "startColumnNumber" : 69,
        "endLineNumber" : 278,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Object value;\n  String propertyName=parameterMapping.getProperty();\n  if (boundSql.hasAdditionalParameter(propertyName)) {\n    value=boundSql.getAdditionalParameter(propertyName);\n  }\n else   if (parameterObject == null) {\n    value=null;\n  }\n else   if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n    value=parameterObject;\n  }\n else {\n    MetaObject metaObject=configuration.newMetaObject(parameterObject);\n    value=metaObject.getValue(propertyName);\n    if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n      value=additionalParameters.get(propertyName);\n    }\n  }\n  TypeHandler typeHandler=parameterMapping.getTypeHandler();\n  JdbcType jdbcType=parameterMapping.getJdbcType();\n  if (value == null && jdbcType == null) {\n    jdbcType=configuration.getJdbcTypeForNull();\n  }\n  try {\n    typeHandler.setParameter(ps,i + 1,value,jdbcType);\n  }\n catch (  TypeException|SQLException e) {\n    throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1690,
        "startLineNumber" : 251,
        "startColumnNumber" : 16,
        "endLineNumber" : 278,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (parameterMapping.getMode() != ParameterMode.OUT) {\n  Object value;\n  String propertyName=parameterMapping.getProperty();\n  if (boundSql.hasAdditionalParameter(propertyName)) {\n    value=boundSql.getAdditionalParameter(propertyName);\n  }\n else   if (parameterObject == null) {\n    value=null;\n  }\n else   if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n    value=parameterObject;\n  }\n else {\n    MetaObject metaObject=configuration.newMetaObject(parameterObject);\n    value=metaObject.getValue(propertyName);\n    if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n      value=additionalParameters.get(propertyName);\n    }\n  }\n  TypeHandler typeHandler=parameterMapping.getTypeHandler();\n  JdbcType jdbcType=parameterMapping.getJdbcType();\n  if (value == null && jdbcType == null) {\n    jdbcType=configuration.getJdbcTypeForNull();\n  }\n  try {\n    typeHandler.setParameter(ps,i + 1,value,jdbcType);\n  }\n catch (  TypeException|SQLException e) {\n    throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 152,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1800,
        "startLineNumber" : 249,
        "startColumnNumber" : 63,
        "endLineNumber" : 279,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ParameterMapping parameterMapping=parameterMappings.get(i);\n  if (parameterMapping.getMode() != ParameterMode.OUT) {\n    Object value;\n    String propertyName=parameterMapping.getProperty();\n    if (boundSql.hasAdditionalParameter(propertyName)) {\n      value=boundSql.getAdditionalParameter(propertyName);\n    }\n else     if (parameterObject == null) {\n      value=null;\n    }\n else     if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n      value=parameterObject;\n    }\n else {\n      MetaObject metaObject=configuration.newMetaObject(parameterObject);\n      value=metaObject.getValue(propertyName);\n      if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n        value=additionalParameters.get(propertyName);\n      }\n    }\n    TypeHandler typeHandler=parameterMapping.getTypeHandler();\n    JdbcType jdbcType=parameterMapping.getJdbcType();\n    if (value == null && jdbcType == null) {\n      jdbcType=configuration.getJdbcTypeForNull();\n    }\n    try {\n      typeHandler.setParameter(ps,i + 1,value,jdbcType);\n    }\n catch (    TypeException|SQLException e) {\n      throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1851,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 279,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < parameterMappings.size(); i++) {\n  ParameterMapping parameterMapping=parameterMappings.get(i);\n  if (parameterMapping.getMode() != ParameterMode.OUT) {\n    Object value;\n    String propertyName=parameterMapping.getProperty();\n    if (boundSql.hasAdditionalParameter(propertyName)) {\n      value=boundSql.getAdditionalParameter(propertyName);\n    }\n else     if (parameterObject == null) {\n      value=null;\n    }\n else     if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n      value=parameterObject;\n    }\n else {\n      MetaObject metaObject=configuration.newMetaObject(parameterObject);\n      value=metaObject.getValue(propertyName);\n      if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n        value=additionalParameters.get(propertyName);\n      }\n    }\n    TypeHandler typeHandler=parameterMapping.getTypeHandler();\n    JdbcType jdbcType=parameterMapping.getJdbcType();\n    if (value == null && jdbcType == null) {\n      jdbcType=configuration.getJdbcTypeForNull();\n    }\n    try {\n      typeHandler.setParameter(ps,i + 1,value,jdbcType);\n    }\n catch (    TypeException|SQLException e) {\n      throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 175,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1875,
        "startLineNumber" : 248,
        "startColumnNumber" : 39,
        "endLineNumber" : 280,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < parameterMappings.size(); i++) {\n    ParameterMapping parameterMapping=parameterMappings.get(i);\n    if (parameterMapping.getMode() != ParameterMode.OUT) {\n      Object value;\n      String propertyName=parameterMapping.getProperty();\n      if (boundSql.hasAdditionalParameter(propertyName)) {\n        value=boundSql.getAdditionalParameter(propertyName);\n      }\n else       if (parameterObject == null) {\n        value=null;\n      }\n else       if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n        value=parameterObject;\n      }\n else {\n        MetaObject metaObject=configuration.newMetaObject(parameterObject);\n        value=metaObject.getValue(propertyName);\n        if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n          value=additionalParameters.get(propertyName);\n        }\n      }\n      TypeHandler typeHandler=parameterMapping.getTypeHandler();\n      JdbcType jdbcType=parameterMapping.getJdbcType();\n      if (value == null && jdbcType == null) {\n        jdbcType=configuration.getJdbcTypeForNull();\n      }\n      try {\n        typeHandler.setParameter(ps,i + 1,value,jdbcType);\n      }\n catch (      TypeException|SQLException e) {\n        throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1906,
        "startLineNumber" : 248,
        "startColumnNumber" : 8,
        "endLineNumber" : 280,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (parameterMappings != null) {\n  for (int i=0; i < parameterMappings.size(); i++) {\n    ParameterMapping parameterMapping=parameterMappings.get(i);\n    if (parameterMapping.getMode() != ParameterMode.OUT) {\n      Object value;\n      String propertyName=parameterMapping.getProperty();\n      if (boundSql.hasAdditionalParameter(propertyName)) {\n        value=boundSql.getAdditionalParameter(propertyName);\n      }\n else       if (parameterObject == null) {\n        value=null;\n      }\n else       if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n        value=parameterObject;\n      }\n else {\n        MetaObject metaObject=configuration.newMetaObject(parameterObject);\n        value=metaObject.getValue(propertyName);\n        if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n          value=additionalParameters.get(propertyName);\n        }\n      }\n      TypeHandler typeHandler=parameterMapping.getTypeHandler();\n      JdbcType jdbcType=parameterMapping.getJdbcType();\n      if (value == null && jdbcType == null) {\n        jdbcType=configuration.getJdbcTypeForNull();\n      }\n      try {\n        typeHandler.setParameter(ps,i + 1,value,jdbcType);\n      }\n catch (      TypeException|SQLException e) {\n        throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 180,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2418,
        "startLineNumber" : 238,
        "startColumnNumber" : 52,
        "endLineNumber" : 281,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Object> additionalParameters=null;\n  try {\n    additionalParameters=(Map<String,Object>)additionalParametersField.get(boundSql);\n  }\n catch (  IllegalAccessException e) {\n  }\n  ErrorContext.instance().activity(\"setting parameters\").object(mappedStatement.getParameterMap().getId());\n  List<ParameterMapping> parameterMappings=boundSql.getParameterMappings();\n  if (parameterMappings != null) {\n    for (int i=0; i < parameterMappings.size(); i++) {\n      ParameterMapping parameterMapping=parameterMappings.get(i);\n      if (parameterMapping.getMode() != ParameterMode.OUT) {\n        Object value;\n        String propertyName=parameterMapping.getProperty();\n        if (boundSql.hasAdditionalParameter(propertyName)) {\n          value=boundSql.getAdditionalParameter(propertyName);\n        }\n else         if (parameterObject == null) {\n          value=null;\n        }\n else         if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n          value=parameterObject;\n        }\n else {\n          MetaObject metaObject=configuration.newMetaObject(parameterObject);\n          value=metaObject.getValue(propertyName);\n          if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n            value=additionalParameters.get(propertyName);\n          }\n        }\n        TypeHandler typeHandler=parameterMapping.getTypeHandler();\n        JdbcType jdbcType=parameterMapping.getJdbcType();\n        if (value == null && jdbcType == null) {\n          jdbcType=configuration.getJdbcTypeForNull();\n        }\n        try {\n          typeHandler.setParameter(ps,i + 1,value,jdbcType);\n        }\n catch (        TypeException|SQLException e) {\n          throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2529,
        "startLineNumber" : 236,
        "startColumnNumber" : 4,
        "endLineNumber" : 281,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings({\"rawtypes\",\"unchecked\"}) @Override public void setParameters(PreparedStatement ps){\n  Map<String,Object> additionalParameters=null;\n  try {\n    additionalParameters=(Map<String,Object>)additionalParametersField.get(boundSql);\n  }\n catch (  IllegalAccessException e) {\n  }\n  ErrorContext.instance().activity(\"setting parameters\").object(mappedStatement.getParameterMap().getId());\n  List<ParameterMapping> parameterMappings=boundSql.getParameterMappings();\n  if (parameterMappings != null) {\n    for (int i=0; i < parameterMappings.size(); i++) {\n      ParameterMapping parameterMapping=parameterMappings.get(i);\n      if (parameterMapping.getMode() != ParameterMode.OUT) {\n        Object value;\n        String propertyName=parameterMapping.getProperty();\n        if (boundSql.hasAdditionalParameter(propertyName)) {\n          value=boundSql.getAdditionalParameter(propertyName);\n        }\n else         if (parameterObject == null) {\n          value=null;\n        }\n else         if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n          value=parameterObject;\n        }\n else {\n          MetaObject metaObject=configuration.newMetaObject(parameterObject);\n          value=metaObject.getValue(propertyName);\n          if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n            value=additionalParameters.get(propertyName);\n          }\n        }\n        TypeHandler typeHandler=parameterMapping.getTypeHandler();\n        JdbcType jdbcType=parameterMapping.getJdbcType();\n        if (value == null && jdbcType == null) {\n          jdbcType=configuration.getJdbcTypeForNull();\n        }\n        try {\n          typeHandler.setParameter(ps,i + 1,value,jdbcType);\n        }\n catch (        TypeException|SQLException e) {\n          throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 255,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 261,
        "startColumnNumber" : 24,
        "endLineNumber" : 261,
        "endColumnNumber" : 93
      },
      "nodeContext" : "MetaObject metaObject=configuration.newMetaObject(parameterObject);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.Configuration"
  }, {
    "nodeContext" : "configuration",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 271,
      "startColumnNumber" : 35,
      "endLineNumber" : 271,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 271,
        "startColumnNumber" : 35,
        "endLineNumber" : 271,
        "endColumnNumber" : 69
      },
      "nodeContext" : "configuration.getJdbcTypeForNull()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 271,
        "startColumnNumber" : 24,
        "endLineNumber" : 271,
        "endColumnNumber" : 69
      },
      "nodeContext" : "jdbcType=configuration.getJdbcTypeForNull()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 271,
        "startColumnNumber" : 24,
        "endLineNumber" : 271,
        "endColumnNumber" : 70
      },
      "nodeContext" : "jdbcType=configuration.getJdbcTypeForNull();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 270,
        "startColumnNumber" : 59,
        "endLineNumber" : 272,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  jdbcType=configuration.getJdbcTypeForNull();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 270,
        "startColumnNumber" : 20,
        "endLineNumber" : 272,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (value == null && jdbcType == null) {\n  jdbcType=configuration.getJdbcTypeForNull();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 251,
        "startColumnNumber" : 69,
        "endLineNumber" : 278,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Object value;\n  String propertyName=parameterMapping.getProperty();\n  if (boundSql.hasAdditionalParameter(propertyName)) {\n    value=boundSql.getAdditionalParameter(propertyName);\n  }\n else   if (parameterObject == null) {\n    value=null;\n  }\n else   if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n    value=parameterObject;\n  }\n else {\n    MetaObject metaObject=configuration.newMetaObject(parameterObject);\n    value=metaObject.getValue(propertyName);\n    if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n      value=additionalParameters.get(propertyName);\n    }\n  }\n  TypeHandler typeHandler=parameterMapping.getTypeHandler();\n  JdbcType jdbcType=parameterMapping.getJdbcType();\n  if (value == null && jdbcType == null) {\n    jdbcType=configuration.getJdbcTypeForNull();\n  }\n  try {\n    typeHandler.setParameter(ps,i + 1,value,jdbcType);\n  }\n catch (  TypeException|SQLException e) {\n    throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1690,
        "startLineNumber" : 251,
        "startColumnNumber" : 16,
        "endLineNumber" : 278,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (parameterMapping.getMode() != ParameterMode.OUT) {\n  Object value;\n  String propertyName=parameterMapping.getProperty();\n  if (boundSql.hasAdditionalParameter(propertyName)) {\n    value=boundSql.getAdditionalParameter(propertyName);\n  }\n else   if (parameterObject == null) {\n    value=null;\n  }\n else   if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n    value=parameterObject;\n  }\n else {\n    MetaObject metaObject=configuration.newMetaObject(parameterObject);\n    value=metaObject.getValue(propertyName);\n    if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n      value=additionalParameters.get(propertyName);\n    }\n  }\n  TypeHandler typeHandler=parameterMapping.getTypeHandler();\n  JdbcType jdbcType=parameterMapping.getJdbcType();\n  if (value == null && jdbcType == null) {\n    jdbcType=configuration.getJdbcTypeForNull();\n  }\n  try {\n    typeHandler.setParameter(ps,i + 1,value,jdbcType);\n  }\n catch (  TypeException|SQLException e) {\n    throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 152,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1800,
        "startLineNumber" : 249,
        "startColumnNumber" : 63,
        "endLineNumber" : 279,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ParameterMapping parameterMapping=parameterMappings.get(i);\n  if (parameterMapping.getMode() != ParameterMode.OUT) {\n    Object value;\n    String propertyName=parameterMapping.getProperty();\n    if (boundSql.hasAdditionalParameter(propertyName)) {\n      value=boundSql.getAdditionalParameter(propertyName);\n    }\n else     if (parameterObject == null) {\n      value=null;\n    }\n else     if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n      value=parameterObject;\n    }\n else {\n      MetaObject metaObject=configuration.newMetaObject(parameterObject);\n      value=metaObject.getValue(propertyName);\n      if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n        value=additionalParameters.get(propertyName);\n      }\n    }\n    TypeHandler typeHandler=parameterMapping.getTypeHandler();\n    JdbcType jdbcType=parameterMapping.getJdbcType();\n    if (value == null && jdbcType == null) {\n      jdbcType=configuration.getJdbcTypeForNull();\n    }\n    try {\n      typeHandler.setParameter(ps,i + 1,value,jdbcType);\n    }\n catch (    TypeException|SQLException e) {\n      throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1851,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 279,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < parameterMappings.size(); i++) {\n  ParameterMapping parameterMapping=parameterMappings.get(i);\n  if (parameterMapping.getMode() != ParameterMode.OUT) {\n    Object value;\n    String propertyName=parameterMapping.getProperty();\n    if (boundSql.hasAdditionalParameter(propertyName)) {\n      value=boundSql.getAdditionalParameter(propertyName);\n    }\n else     if (parameterObject == null) {\n      value=null;\n    }\n else     if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n      value=parameterObject;\n    }\n else {\n      MetaObject metaObject=configuration.newMetaObject(parameterObject);\n      value=metaObject.getValue(propertyName);\n      if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n        value=additionalParameters.get(propertyName);\n      }\n    }\n    TypeHandler typeHandler=parameterMapping.getTypeHandler();\n    JdbcType jdbcType=parameterMapping.getJdbcType();\n    if (value == null && jdbcType == null) {\n      jdbcType=configuration.getJdbcTypeForNull();\n    }\n    try {\n      typeHandler.setParameter(ps,i + 1,value,jdbcType);\n    }\n catch (    TypeException|SQLException e) {\n      throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 175,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1875,
        "startLineNumber" : 248,
        "startColumnNumber" : 39,
        "endLineNumber" : 280,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < parameterMappings.size(); i++) {\n    ParameterMapping parameterMapping=parameterMappings.get(i);\n    if (parameterMapping.getMode() != ParameterMode.OUT) {\n      Object value;\n      String propertyName=parameterMapping.getProperty();\n      if (boundSql.hasAdditionalParameter(propertyName)) {\n        value=boundSql.getAdditionalParameter(propertyName);\n      }\n else       if (parameterObject == null) {\n        value=null;\n      }\n else       if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n        value=parameterObject;\n      }\n else {\n        MetaObject metaObject=configuration.newMetaObject(parameterObject);\n        value=metaObject.getValue(propertyName);\n        if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n          value=additionalParameters.get(propertyName);\n        }\n      }\n      TypeHandler typeHandler=parameterMapping.getTypeHandler();\n      JdbcType jdbcType=parameterMapping.getJdbcType();\n      if (value == null && jdbcType == null) {\n        jdbcType=configuration.getJdbcTypeForNull();\n      }\n      try {\n        typeHandler.setParameter(ps,i + 1,value,jdbcType);\n      }\n catch (      TypeException|SQLException e) {\n        throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1906,
        "startLineNumber" : 248,
        "startColumnNumber" : 8,
        "endLineNumber" : 280,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (parameterMappings != null) {\n  for (int i=0; i < parameterMappings.size(); i++) {\n    ParameterMapping parameterMapping=parameterMappings.get(i);\n    if (parameterMapping.getMode() != ParameterMode.OUT) {\n      Object value;\n      String propertyName=parameterMapping.getProperty();\n      if (boundSql.hasAdditionalParameter(propertyName)) {\n        value=boundSql.getAdditionalParameter(propertyName);\n      }\n else       if (parameterObject == null) {\n        value=null;\n      }\n else       if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n        value=parameterObject;\n      }\n else {\n        MetaObject metaObject=configuration.newMetaObject(parameterObject);\n        value=metaObject.getValue(propertyName);\n        if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n          value=additionalParameters.get(propertyName);\n        }\n      }\n      TypeHandler typeHandler=parameterMapping.getTypeHandler();\n      JdbcType jdbcType=parameterMapping.getJdbcType();\n      if (value == null && jdbcType == null) {\n        jdbcType=configuration.getJdbcTypeForNull();\n      }\n      try {\n        typeHandler.setParameter(ps,i + 1,value,jdbcType);\n      }\n catch (      TypeException|SQLException e) {\n        throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 180,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2418,
        "startLineNumber" : 238,
        "startColumnNumber" : 52,
        "endLineNumber" : 281,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Object> additionalParameters=null;\n  try {\n    additionalParameters=(Map<String,Object>)additionalParametersField.get(boundSql);\n  }\n catch (  IllegalAccessException e) {\n  }\n  ErrorContext.instance().activity(\"setting parameters\").object(mappedStatement.getParameterMap().getId());\n  List<ParameterMapping> parameterMappings=boundSql.getParameterMappings();\n  if (parameterMappings != null) {\n    for (int i=0; i < parameterMappings.size(); i++) {\n      ParameterMapping parameterMapping=parameterMappings.get(i);\n      if (parameterMapping.getMode() != ParameterMode.OUT) {\n        Object value;\n        String propertyName=parameterMapping.getProperty();\n        if (boundSql.hasAdditionalParameter(propertyName)) {\n          value=boundSql.getAdditionalParameter(propertyName);\n        }\n else         if (parameterObject == null) {\n          value=null;\n        }\n else         if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n          value=parameterObject;\n        }\n else {\n          MetaObject metaObject=configuration.newMetaObject(parameterObject);\n          value=metaObject.getValue(propertyName);\n          if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n            value=additionalParameters.get(propertyName);\n          }\n        }\n        TypeHandler typeHandler=parameterMapping.getTypeHandler();\n        JdbcType jdbcType=parameterMapping.getJdbcType();\n        if (value == null && jdbcType == null) {\n          jdbcType=configuration.getJdbcTypeForNull();\n        }\n        try {\n          typeHandler.setParameter(ps,i + 1,value,jdbcType);\n        }\n catch (        TypeException|SQLException e) {\n          throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2529,
        "startLineNumber" : 236,
        "startColumnNumber" : 4,
        "endLineNumber" : 281,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings({\"rawtypes\",\"unchecked\"}) @Override public void setParameters(PreparedStatement ps){\n  Map<String,Object> additionalParameters=null;\n  try {\n    additionalParameters=(Map<String,Object>)additionalParametersField.get(boundSql);\n  }\n catch (  IllegalAccessException e) {\n  }\n  ErrorContext.instance().activity(\"setting parameters\").object(mappedStatement.getParameterMap().getId());\n  List<ParameterMapping> parameterMappings=boundSql.getParameterMappings();\n  if (parameterMappings != null) {\n    for (int i=0; i < parameterMappings.size(); i++) {\n      ParameterMapping parameterMapping=parameterMappings.get(i);\n      if (parameterMapping.getMode() != ParameterMode.OUT) {\n        Object value;\n        String propertyName=parameterMapping.getProperty();\n        if (boundSql.hasAdditionalParameter(propertyName)) {\n          value=boundSql.getAdditionalParameter(propertyName);\n        }\n else         if (parameterObject == null) {\n          value=null;\n        }\n else         if (typeHandlerRegistry.hasTypeHandler(parameterObject.getClass())) {\n          value=parameterObject;\n        }\n else {\n          MetaObject metaObject=configuration.newMetaObject(parameterObject);\n          value=metaObject.getValue(propertyName);\n          if (value == null && MapUtils.isNotEmpty(additionalParameters)) {\n            value=additionalParameters.get(propertyName);\n          }\n        }\n        TypeHandler typeHandler=parameterMapping.getTypeHandler();\n        JdbcType jdbcType=parameterMapping.getJdbcType();\n        if (value == null && jdbcType == null) {\n          jdbcType=configuration.getJdbcTypeForNull();\n        }\n        try {\n          typeHandler.setParameter(ps,i + 1,value,jdbcType);\n        }\n catch (        TypeException|SQLException e) {\n          throw new TypeException(\"Could not set parameters for mapping: \" + parameterMapping + \". Cause: \"+ e,e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 255,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 271,
        "startColumnNumber" : 24,
        "endLineNumber" : 271,
        "endColumnNumber" : 70
      },
      "nodeContext" : "jdbcType=configuration.getJdbcTypeForNull();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.Configuration"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 261,
    "startColumnNumber" : 48,
    "endLineNumber" : 261,
    "endColumnNumber" : 61
  }, {
    "charLength" : 13,
    "startLineNumber" : 271,
    "startColumnNumber" : 35,
    "endLineNumber" : 271,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}