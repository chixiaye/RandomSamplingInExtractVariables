{
  "id" : 12,
  "expression" : "viewer",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/gui/resourceviewer/ResourceViewProcessing.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "viewer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 76,
      "startColumnNumber" : 5,
      "endLineNumber" : 76,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 76,
        "startColumnNumber" : 5,
        "endLineNumber" : 76,
        "endColumnNumber" : 14
      },
      "nodeContext" : "viewer.cn",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 76,
        "startColumnNumber" : 5,
        "endLineNumber" : 76,
        "endColumnNumber" : 25
      },
      "nodeContext" : "viewer.cn.accept(cw)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 76,
        "startColumnNumber" : 5,
        "endLineNumber" : 76,
        "endColumnNumber" : 26
      },
      "nodeContext" : "viewer.cn.accept(cw);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ClassWriter cw=new ClassWriter(0);\n  viewer.cn.accept(cw);\n  SwingUtilities.invokeLater(() -> {\n    final JHexEditor hex=new JHexEditor(cw.toByteArray());\n    hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n    resourceViewPanel.panel.add(hex);\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2367,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n  final ClassWriter cw=new ClassWriter(0);\n  viewer.cn.accept(cw);\n  SwingUtilities.invokeLater(() -> {\n    final JHexEditor hex=new JHexEditor(cw.toByteArray());\n    hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n    resourceViewPanel.panel.add(hex);\n  }\n);\n}\n else {\n  final Decompiler decompiler=resourceViewPanel.decompiler;\n  final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n  SwingUtilities.invokeLater(() -> {\n    updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n    Configuration.rstaTheme.apply(updateUpdaterTextArea);\n    resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n    resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n    resourceViewPanel.textArea=updateUpdaterTextArea;\n    resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n    resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n    resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n    resourceViewPanel.textArea.setText(decompiledSource);\n    resourceViewPanel.textArea.setCaretPosition(0);\n    resourceViewPanel.textArea.setEditable(isPanelEditable);\n    if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)     resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else     if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)     resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n    String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n    resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n    resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n    waitingFor=false;\n  }\n);\n  while (waitingFor) {\n    try {\n      Thread.sleep(1);\n    }\n catch (    Exception e) {\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 288,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2395,
        "startLineNumber" : 71,
        "startColumnNumber" : 3,
        "endLineNumber" : 130,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n    final ClassWriter cw=new ClassWriter(0);\n    viewer.cn.accept(cw);\n    SwingUtilities.invokeLater(() -> {\n      final JHexEditor hex=new JHexEditor(cw.toByteArray());\n      hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n      resourceViewPanel.panel.add(hex);\n    }\n);\n  }\n else {\n    final Decompiler decompiler=resourceViewPanel.decompiler;\n    final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n    SwingUtilities.invokeLater(() -> {\n      updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n      Configuration.rstaTheme.apply(updateUpdaterTextArea);\n      resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n      resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n      resourceViewPanel.textArea=updateUpdaterTextArea;\n      resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n      resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n      resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n      resourceViewPanel.textArea.setText(decompiledSource);\n      resourceViewPanel.textArea.setCaretPosition(0);\n      resourceViewPanel.textArea.setEditable(isPanelEditable);\n      if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)       resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else       if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)       resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n      String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n      resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n      resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n      waitingFor=false;\n    }\n);\n    while (waitingFor) {\n      try {\n        Thread.sleep(1);\n      }\n catch (      Exception e) {\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2451,
        "startLineNumber" : 70,
        "startColumnNumber" : 3,
        "endLineNumber" : 130,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (resourceViewPanel.decompiler != Decompiler.NONE) {\n  if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n    final ClassWriter cw=new ClassWriter(0);\n    viewer.cn.accept(cw);\n    SwingUtilities.invokeLater(() -> {\n      final JHexEditor hex=new JHexEditor(cw.toByteArray());\n      hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n      resourceViewPanel.panel.add(hex);\n    }\n);\n  }\n else {\n    final Decompiler decompiler=resourceViewPanel.decompiler;\n    final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n    SwingUtilities.invokeLater(() -> {\n      updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n      Configuration.rstaTheme.apply(updateUpdaterTextArea);\n      resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n      resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n      resourceViewPanel.textArea=updateUpdaterTextArea;\n      resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n      resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n      resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n      resourceViewPanel.textArea.setText(decompiledSource);\n      resourceViewPanel.textArea.setCaretPosition(0);\n      resourceViewPanel.textArea.setEditable(isPanelEditable);\n      if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)       resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else       if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)       resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n      String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n      resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n      resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n      waitingFor=false;\n    }\n);\n    while (waitingFor) {\n      try {\n        Thread.sleep(1);\n      }\n catch (      Exception e) {\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 297,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2506,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BytecodeViewer.updateBusyStatus(true);\n  if (resourceViewPanel.decompiler != Decompiler.NONE) {\n    if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n      final ClassWriter cw=new ClassWriter(0);\n      viewer.cn.accept(cw);\n      SwingUtilities.invokeLater(() -> {\n        final JHexEditor hex=new JHexEditor(cw.toByteArray());\n        hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n        resourceViewPanel.panel.add(hex);\n      }\n);\n    }\n else {\n      final Decompiler decompiler=resourceViewPanel.decompiler;\n      final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n      SwingUtilities.invokeLater(() -> {\n        updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n        Configuration.rstaTheme.apply(updateUpdaterTextArea);\n        resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n        resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n        resourceViewPanel.textArea=updateUpdaterTextArea;\n        resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n        resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n        resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n        resourceViewPanel.textArea.setText(decompiledSource);\n        resourceViewPanel.textArea.setCaretPosition(0);\n        resourceViewPanel.textArea.setEditable(isPanelEditable);\n        if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)         resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else         if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)         resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n        String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n        resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n        resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n        waitingFor=false;\n      }\n);\n      while (waitingFor) {\n        try {\n          Thread.sleep(1);\n        }\n catch (        Exception e) {\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 303,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2850,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  BytecodeViewer.updateBusyStatus(true);\n  if (resourceViewPanel.decompiler != Decompiler.NONE) {\n    if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n      final ClassWriter cw=new ClassWriter(0);\n      viewer.cn.accept(cw);\n      SwingUtilities.invokeLater(() -> {\n        final JHexEditor hex=new JHexEditor(cw.toByteArray());\n        hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n        resourceViewPanel.panel.add(hex);\n      }\n);\n    }\n else {\n      final Decompiler decompiler=resourceViewPanel.decompiler;\n      final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n      SwingUtilities.invokeLater(() -> {\n        updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n        Configuration.rstaTheme.apply(updateUpdaterTextArea);\n        resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n        resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n        resourceViewPanel.textArea=updateUpdaterTextArea;\n        resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n        resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n        resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n        resourceViewPanel.textArea.setText(decompiledSource);\n        resourceViewPanel.textArea.setCaretPosition(0);\n        resourceViewPanel.textArea.setEditable(isPanelEditable);\n        if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)         resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else         if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)         resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n        String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n        resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n        resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n        waitingFor=false;\n      }\n);\n      while (waitingFor) {\n        try {\n          Thread.sleep(1);\n        }\n catch (        Exception e) {\n        }\n      }\n    }\n  }\n}\n catch (IndexOutOfBoundsException|NullPointerException e) {\n}\ncatch (Exception e) {\n  BytecodeViewer.handleException(e);\n}\n finally {\n  viewer.resetDivider();\n  BytecodeViewer.updateBusyStatus(false);\n  SwingUtilities.invokeLater(() -> {\n    if (button != null)     button.setEnabled(true);\n  }\n);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 349,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2857,
        "startLineNumber" : 65,
        "startColumnNumber" : 1,
        "endLineNumber" : 150,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    BytecodeViewer.updateBusyStatus(true);\n    if (resourceViewPanel.decompiler != Decompiler.NONE) {\n      if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n        final ClassWriter cw=new ClassWriter(0);\n        viewer.cn.accept(cw);\n        SwingUtilities.invokeLater(() -> {\n          final JHexEditor hex=new JHexEditor(cw.toByteArray());\n          hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n          resourceViewPanel.panel.add(hex);\n        }\n);\n      }\n else {\n        final Decompiler decompiler=resourceViewPanel.decompiler;\n        final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n        SwingUtilities.invokeLater(() -> {\n          updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n          Configuration.rstaTheme.apply(updateUpdaterTextArea);\n          resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n          resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n          resourceViewPanel.textArea=updateUpdaterTextArea;\n          resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n          resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n          resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n          resourceViewPanel.textArea.setText(decompiledSource);\n          resourceViewPanel.textArea.setCaretPosition(0);\n          resourceViewPanel.textArea.setEditable(isPanelEditable);\n          if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)           resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else           if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)           resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n          String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n          resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n          resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n          waitingFor=false;\n        }\n);\n        while (waitingFor) {\n          try {\n            Thread.sleep(1);\n          }\n catch (          Exception e) {\n          }\n        }\n      }\n    }\n  }\n catch (  IndexOutOfBoundsException|NullPointerException e) {\n  }\ncatch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n finally {\n    viewer.resetDivider();\n    BytecodeViewer.updateBusyStatus(false);\n    SwingUtilities.invokeLater(() -> {\n      if (button != null)       button.setEnabled(true);\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2898,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 150,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void processDisplay(){\n  try {\n    BytecodeViewer.updateBusyStatus(true);\n    if (resourceViewPanel.decompiler != Decompiler.NONE) {\n      if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n        final ClassWriter cw=new ClassWriter(0);\n        viewer.cn.accept(cw);\n        SwingUtilities.invokeLater(() -> {\n          final JHexEditor hex=new JHexEditor(cw.toByteArray());\n          hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n          resourceViewPanel.panel.add(hex);\n        }\n);\n      }\n else {\n        final Decompiler decompiler=resourceViewPanel.decompiler;\n        final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n        SwingUtilities.invokeLater(() -> {\n          updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n          Configuration.rstaTheme.apply(updateUpdaterTextArea);\n          resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n          resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n          resourceViewPanel.textArea=updateUpdaterTextArea;\n          resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n          resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n          resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n          resourceViewPanel.textArea.setText(decompiledSource);\n          resourceViewPanel.textArea.setCaretPosition(0);\n          resourceViewPanel.textArea.setEditable(isPanelEditable);\n          if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)           resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else           if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)           resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n          String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n          resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n          resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n          waitingFor=false;\n        }\n);\n        while (waitingFor) {\n          try {\n            Thread.sleep(1);\n          }\n catch (          Exception e) {\n          }\n        }\n      }\n    }\n  }\n catch (  IndexOutOfBoundsException|NullPointerException e) {\n  }\ncatch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n finally {\n    viewer.resetDivider();\n    BytecodeViewer.updateBusyStatus(false);\n    SwingUtilities.invokeLater(() -> {\n      if (button != null)       button.setEnabled(true);\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 356,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 76,
        "startColumnNumber" : 5,
        "endLineNumber" : 76,
        "endColumnNumber" : 26
      },
      "nodeContext" : "viewer.cn.accept(cw);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "the.bytecode.club.bytecodeviewer.gui.resourceviewer.viewer.ResourceViewer"
  }, {
    "nodeContext" : "viewer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 91,
      "startColumnNumber" : 83,
      "endLineNumber" : 91,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 91,
        "startColumnNumber" : 83,
        "endLineNumber" : 91,
        "endColumnNumber" : 92
      },
      "nodeContext" : "viewer.cn",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 91,
        "startColumnNumber" : 37,
        "endLineNumber" : 91,
        "endColumnNumber" : 96
      },
      "nodeContext" : "decompiler.getDecompiler().decompileClassNode(viewer.cn,b)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 91,
        "startColumnNumber" : 18,
        "endLineNumber" : 91,
        "endColumnNumber" : 96
      },
      "nodeContext" : "decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 91,
        "startColumnNumber" : 5,
        "endLineNumber" : 91,
        "endColumnNumber" : 97
      },
      "nodeContext" : "final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1924,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Decompiler decompiler=resourceViewPanel.decompiler;\n  final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n  SwingUtilities.invokeLater(() -> {\n    updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n    Configuration.rstaTheme.apply(updateUpdaterTextArea);\n    resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n    resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n    resourceViewPanel.textArea=updateUpdaterTextArea;\n    resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n    resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n    resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n    resourceViewPanel.textArea.setText(decompiledSource);\n    resourceViewPanel.textArea.setCaretPosition(0);\n    resourceViewPanel.textArea.setEditable(isPanelEditable);\n    if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)     resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else     if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)     resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n    String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n    resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n    resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n    waitingFor=false;\n  }\n);\n  while (waitingFor) {\n    try {\n      Thread.sleep(1);\n    }\n catch (    Exception e) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2367,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n  final ClassWriter cw=new ClassWriter(0);\n  viewer.cn.accept(cw);\n  SwingUtilities.invokeLater(() -> {\n    final JHexEditor hex=new JHexEditor(cw.toByteArray());\n    hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n    resourceViewPanel.panel.add(hex);\n  }\n);\n}\n else {\n  final Decompiler decompiler=resourceViewPanel.decompiler;\n  final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n  SwingUtilities.invokeLater(() -> {\n    updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n    Configuration.rstaTheme.apply(updateUpdaterTextArea);\n    resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n    resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n    resourceViewPanel.textArea=updateUpdaterTextArea;\n    resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n    resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n    resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n    resourceViewPanel.textArea.setText(decompiledSource);\n    resourceViewPanel.textArea.setCaretPosition(0);\n    resourceViewPanel.textArea.setEditable(isPanelEditable);\n    if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)     resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else     if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)     resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n    String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n    resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n    resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n    waitingFor=false;\n  }\n);\n  while (waitingFor) {\n    try {\n      Thread.sleep(1);\n    }\n catch (    Exception e) {\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 288,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2395,
        "startLineNumber" : 71,
        "startColumnNumber" : 3,
        "endLineNumber" : 130,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n    final ClassWriter cw=new ClassWriter(0);\n    viewer.cn.accept(cw);\n    SwingUtilities.invokeLater(() -> {\n      final JHexEditor hex=new JHexEditor(cw.toByteArray());\n      hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n      resourceViewPanel.panel.add(hex);\n    }\n);\n  }\n else {\n    final Decompiler decompiler=resourceViewPanel.decompiler;\n    final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n    SwingUtilities.invokeLater(() -> {\n      updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n      Configuration.rstaTheme.apply(updateUpdaterTextArea);\n      resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n      resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n      resourceViewPanel.textArea=updateUpdaterTextArea;\n      resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n      resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n      resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n      resourceViewPanel.textArea.setText(decompiledSource);\n      resourceViewPanel.textArea.setCaretPosition(0);\n      resourceViewPanel.textArea.setEditable(isPanelEditable);\n      if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)       resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else       if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)       resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n      String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n      resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n      resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n      waitingFor=false;\n    }\n);\n    while (waitingFor) {\n      try {\n        Thread.sleep(1);\n      }\n catch (      Exception e) {\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2451,
        "startLineNumber" : 70,
        "startColumnNumber" : 3,
        "endLineNumber" : 130,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (resourceViewPanel.decompiler != Decompiler.NONE) {\n  if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n    final ClassWriter cw=new ClassWriter(0);\n    viewer.cn.accept(cw);\n    SwingUtilities.invokeLater(() -> {\n      final JHexEditor hex=new JHexEditor(cw.toByteArray());\n      hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n      resourceViewPanel.panel.add(hex);\n    }\n);\n  }\n else {\n    final Decompiler decompiler=resourceViewPanel.decompiler;\n    final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n    SwingUtilities.invokeLater(() -> {\n      updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n      Configuration.rstaTheme.apply(updateUpdaterTextArea);\n      resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n      resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n      resourceViewPanel.textArea=updateUpdaterTextArea;\n      resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n      resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n      resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n      resourceViewPanel.textArea.setText(decompiledSource);\n      resourceViewPanel.textArea.setCaretPosition(0);\n      resourceViewPanel.textArea.setEditable(isPanelEditable);\n      if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)       resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else       if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)       resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n      String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n      resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n      resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n      waitingFor=false;\n    }\n);\n    while (waitingFor) {\n      try {\n        Thread.sleep(1);\n      }\n catch (      Exception e) {\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 297,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2506,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BytecodeViewer.updateBusyStatus(true);\n  if (resourceViewPanel.decompiler != Decompiler.NONE) {\n    if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n      final ClassWriter cw=new ClassWriter(0);\n      viewer.cn.accept(cw);\n      SwingUtilities.invokeLater(() -> {\n        final JHexEditor hex=new JHexEditor(cw.toByteArray());\n        hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n        resourceViewPanel.panel.add(hex);\n      }\n);\n    }\n else {\n      final Decompiler decompiler=resourceViewPanel.decompiler;\n      final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n      SwingUtilities.invokeLater(() -> {\n        updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n        Configuration.rstaTheme.apply(updateUpdaterTextArea);\n        resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n        resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n        resourceViewPanel.textArea=updateUpdaterTextArea;\n        resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n        resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n        resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n        resourceViewPanel.textArea.setText(decompiledSource);\n        resourceViewPanel.textArea.setCaretPosition(0);\n        resourceViewPanel.textArea.setEditable(isPanelEditable);\n        if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)         resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else         if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)         resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n        String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n        resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n        resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n        waitingFor=false;\n      }\n);\n      while (waitingFor) {\n        try {\n          Thread.sleep(1);\n        }\n catch (        Exception e) {\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 303,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2850,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  BytecodeViewer.updateBusyStatus(true);\n  if (resourceViewPanel.decompiler != Decompiler.NONE) {\n    if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n      final ClassWriter cw=new ClassWriter(0);\n      viewer.cn.accept(cw);\n      SwingUtilities.invokeLater(() -> {\n        final JHexEditor hex=new JHexEditor(cw.toByteArray());\n        hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n        resourceViewPanel.panel.add(hex);\n      }\n);\n    }\n else {\n      final Decompiler decompiler=resourceViewPanel.decompiler;\n      final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n      SwingUtilities.invokeLater(() -> {\n        updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n        Configuration.rstaTheme.apply(updateUpdaterTextArea);\n        resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n        resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n        resourceViewPanel.textArea=updateUpdaterTextArea;\n        resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n        resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n        resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n        resourceViewPanel.textArea.setText(decompiledSource);\n        resourceViewPanel.textArea.setCaretPosition(0);\n        resourceViewPanel.textArea.setEditable(isPanelEditable);\n        if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)         resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else         if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)         resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n        String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n        resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n        resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n        waitingFor=false;\n      }\n);\n      while (waitingFor) {\n        try {\n          Thread.sleep(1);\n        }\n catch (        Exception e) {\n        }\n      }\n    }\n  }\n}\n catch (IndexOutOfBoundsException|NullPointerException e) {\n}\ncatch (Exception e) {\n  BytecodeViewer.handleException(e);\n}\n finally {\n  viewer.resetDivider();\n  BytecodeViewer.updateBusyStatus(false);\n  SwingUtilities.invokeLater(() -> {\n    if (button != null)     button.setEnabled(true);\n  }\n);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 349,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2857,
        "startLineNumber" : 65,
        "startColumnNumber" : 1,
        "endLineNumber" : 150,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    BytecodeViewer.updateBusyStatus(true);\n    if (resourceViewPanel.decompiler != Decompiler.NONE) {\n      if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n        final ClassWriter cw=new ClassWriter(0);\n        viewer.cn.accept(cw);\n        SwingUtilities.invokeLater(() -> {\n          final JHexEditor hex=new JHexEditor(cw.toByteArray());\n          hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n          resourceViewPanel.panel.add(hex);\n        }\n);\n      }\n else {\n        final Decompiler decompiler=resourceViewPanel.decompiler;\n        final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n        SwingUtilities.invokeLater(() -> {\n          updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n          Configuration.rstaTheme.apply(updateUpdaterTextArea);\n          resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n          resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n          resourceViewPanel.textArea=updateUpdaterTextArea;\n          resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n          resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n          resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n          resourceViewPanel.textArea.setText(decompiledSource);\n          resourceViewPanel.textArea.setCaretPosition(0);\n          resourceViewPanel.textArea.setEditable(isPanelEditable);\n          if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)           resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else           if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)           resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n          String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n          resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n          resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n          waitingFor=false;\n        }\n);\n        while (waitingFor) {\n          try {\n            Thread.sleep(1);\n          }\n catch (          Exception e) {\n          }\n        }\n      }\n    }\n  }\n catch (  IndexOutOfBoundsException|NullPointerException e) {\n  }\ncatch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n finally {\n    viewer.resetDivider();\n    BytecodeViewer.updateBusyStatus(false);\n    SwingUtilities.invokeLater(() -> {\n      if (button != null)       button.setEnabled(true);\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2898,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 150,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void processDisplay(){\n  try {\n    BytecodeViewer.updateBusyStatus(true);\n    if (resourceViewPanel.decompiler != Decompiler.NONE) {\n      if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n        final ClassWriter cw=new ClassWriter(0);\n        viewer.cn.accept(cw);\n        SwingUtilities.invokeLater(() -> {\n          final JHexEditor hex=new JHexEditor(cw.toByteArray());\n          hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n          resourceViewPanel.panel.add(hex);\n        }\n);\n      }\n else {\n        final Decompiler decompiler=resourceViewPanel.decompiler;\n        final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n        SwingUtilities.invokeLater(() -> {\n          updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n          Configuration.rstaTheme.apply(updateUpdaterTextArea);\n          resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n          resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n          resourceViewPanel.textArea=updateUpdaterTextArea;\n          resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n          resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n          resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n          resourceViewPanel.textArea.setText(decompiledSource);\n          resourceViewPanel.textArea.setCaretPosition(0);\n          resourceViewPanel.textArea.setEditable(isPanelEditable);\n          if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)           resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else           if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)           resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n          String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n          resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n          resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n          waitingFor=false;\n        }\n);\n        while (waitingFor) {\n          try {\n            Thread.sleep(1);\n          }\n catch (          Exception e) {\n          }\n        }\n      }\n    }\n  }\n catch (  IndexOutOfBoundsException|NullPointerException e) {\n  }\ncatch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n finally {\n    viewer.resetDivider();\n    BytecodeViewer.updateBusyStatus(false);\n    SwingUtilities.invokeLater(() -> {\n      if (button != null)       button.setEnabled(true);\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 356,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 91,
        "startColumnNumber" : 5,
        "endLineNumber" : 91,
        "endColumnNumber" : 97
      },
      "nodeContext" : "final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "the.bytecode.club.bytecodeviewer.gui.resourceviewer.viewer.ResourceViewer"
  }, {
    "nodeContext" : "viewer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 142,
      "startColumnNumber" : 3,
      "endLineNumber" : 142,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 142,
        "startColumnNumber" : 3,
        "endLineNumber" : 142,
        "endColumnNumber" : 24
      },
      "nodeContext" : "viewer.resetDivider()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 142,
        "startColumnNumber" : 3,
        "endLineNumber" : 142,
        "endColumnNumber" : 25
      },
      "nodeContext" : "viewer.resetDivider();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  viewer.resetDivider();\n  BytecodeViewer.updateBusyStatus(false);\n  SwingUtilities.invokeLater(() -> {\n    if (button != null)     button.setEnabled(true);\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2850,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  BytecodeViewer.updateBusyStatus(true);\n  if (resourceViewPanel.decompiler != Decompiler.NONE) {\n    if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n      final ClassWriter cw=new ClassWriter(0);\n      viewer.cn.accept(cw);\n      SwingUtilities.invokeLater(() -> {\n        final JHexEditor hex=new JHexEditor(cw.toByteArray());\n        hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n        resourceViewPanel.panel.add(hex);\n      }\n);\n    }\n else {\n      final Decompiler decompiler=resourceViewPanel.decompiler;\n      final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n      SwingUtilities.invokeLater(() -> {\n        updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n        Configuration.rstaTheme.apply(updateUpdaterTextArea);\n        resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n        resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n        resourceViewPanel.textArea=updateUpdaterTextArea;\n        resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n        resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n        resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n        resourceViewPanel.textArea.setText(decompiledSource);\n        resourceViewPanel.textArea.setCaretPosition(0);\n        resourceViewPanel.textArea.setEditable(isPanelEditable);\n        if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)         resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else         if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)         resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n        String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n        resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n        resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n        waitingFor=false;\n      }\n);\n      while (waitingFor) {\n        try {\n          Thread.sleep(1);\n        }\n catch (        Exception e) {\n        }\n      }\n    }\n  }\n}\n catch (IndexOutOfBoundsException|NullPointerException e) {\n}\ncatch (Exception e) {\n  BytecodeViewer.handleException(e);\n}\n finally {\n  viewer.resetDivider();\n  BytecodeViewer.updateBusyStatus(false);\n  SwingUtilities.invokeLater(() -> {\n    if (button != null)     button.setEnabled(true);\n  }\n);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 349,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2857,
        "startLineNumber" : 65,
        "startColumnNumber" : 1,
        "endLineNumber" : 150,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    BytecodeViewer.updateBusyStatus(true);\n    if (resourceViewPanel.decompiler != Decompiler.NONE) {\n      if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n        final ClassWriter cw=new ClassWriter(0);\n        viewer.cn.accept(cw);\n        SwingUtilities.invokeLater(() -> {\n          final JHexEditor hex=new JHexEditor(cw.toByteArray());\n          hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n          resourceViewPanel.panel.add(hex);\n        }\n);\n      }\n else {\n        final Decompiler decompiler=resourceViewPanel.decompiler;\n        final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n        SwingUtilities.invokeLater(() -> {\n          updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n          Configuration.rstaTheme.apply(updateUpdaterTextArea);\n          resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n          resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n          resourceViewPanel.textArea=updateUpdaterTextArea;\n          resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n          resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n          resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n          resourceViewPanel.textArea.setText(decompiledSource);\n          resourceViewPanel.textArea.setCaretPosition(0);\n          resourceViewPanel.textArea.setEditable(isPanelEditable);\n          if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)           resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else           if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)           resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n          String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n          resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n          resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n          waitingFor=false;\n        }\n);\n        while (waitingFor) {\n          try {\n            Thread.sleep(1);\n          }\n catch (          Exception e) {\n          }\n        }\n      }\n    }\n  }\n catch (  IndexOutOfBoundsException|NullPointerException e) {\n  }\ncatch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n finally {\n    viewer.resetDivider();\n    BytecodeViewer.updateBusyStatus(false);\n    SwingUtilities.invokeLater(() -> {\n      if (button != null)       button.setEnabled(true);\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2898,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 150,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void processDisplay(){\n  try {\n    BytecodeViewer.updateBusyStatus(true);\n    if (resourceViewPanel.decompiler != Decompiler.NONE) {\n      if (resourceViewPanel.decompiler == Decompiler.HEXCODE_VIEWER) {\n        final ClassWriter cw=new ClassWriter(0);\n        viewer.cn.accept(cw);\n        SwingUtilities.invokeLater(() -> {\n          final JHexEditor hex=new JHexEditor(cw.toByteArray());\n          hex.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n          resourceViewPanel.panel.add(hex);\n        }\n);\n      }\n else {\n        final Decompiler decompiler=resourceViewPanel.decompiler;\n        final String decompiledSource=decompiler.getDecompiler().decompileClassNode(viewer.cn,b);\n        SwingUtilities.invokeLater(() -> {\n          updateUpdaterTextArea=new SearchableRSyntaxTextArea();\n          Configuration.rstaTheme.apply(updateUpdaterTextArea);\n          resourceViewPanel.panel.add(updateUpdaterTextArea.getScrollPane());\n          resourceViewPanel.panel.add(updateUpdaterTextArea.getTitleHeader(),BorderLayout.NORTH);\n          resourceViewPanel.textArea=updateUpdaterTextArea;\n          resourceViewPanel.textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);\n          resourceViewPanel.textArea.setCodeFoldingEnabled(true);\n          resourceViewPanel.textArea.setAntiAliasingEnabled(true);\n          resourceViewPanel.textArea.setText(decompiledSource);\n          resourceViewPanel.textArea.setCaretPosition(0);\n          resourceViewPanel.textArea.setEditable(isPanelEditable);\n          if (isPanelEditable && decompiler == Decompiler.SMALI_DISASSEMBLER)           resourceViewPanel.compileMode=Compiler.SMALI_ASSEMBLER;\n else           if (isPanelEditable && decompiler == Decompiler.KRAKATAU_DISASSEMBLER)           resourceViewPanel.compileMode=Compiler.KRAKATAU_ASSEMBLER;\n          String editable=isPanelEditable ? \" - \" + EDITABLE : \"\";\n          resourceViewPanel.textArea.getTitleHeader().setText(decompiler.getDecompilerName() + editable);\n          resourceViewPanel.textArea.setFont(new Font(Font.MONOSPACED,Font.PLAIN,(int)BytecodeViewer.viewer.fontSpinner.getValue()));\n          waitingFor=false;\n        }\n);\n        while (waitingFor) {\n          try {\n            Thread.sleep(1);\n          }\n catch (          Exception e) {\n          }\n        }\n      }\n    }\n  }\n catch (  IndexOutOfBoundsException|NullPointerException e) {\n  }\ncatch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n finally {\n    viewer.resetDivider();\n    BytecodeViewer.updateBusyStatus(false);\n    SwingUtilities.invokeLater(() -> {\n      if (button != null)       button.setEnabled(true);\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 356,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 142,
        "startColumnNumber" : 3,
        "endLineNumber" : 142,
        "endColumnNumber" : 25
      },
      "nodeContext" : "viewer.resetDivider();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "the.bytecode.club.bytecodeviewer.gui.resourceviewer.viewer.ClassViewer"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 76,
    "startColumnNumber" : 5,
    "endLineNumber" : 76,
    "endColumnNumber" : 11
  }, {
    "charLength" : 6,
    "startLineNumber" : 91,
    "startColumnNumber" : 83,
    "endLineNumber" : 91,
    "endColumnNumber" : 89
  }, {
    "charLength" : 6,
    "startLineNumber" : 142,
    "startColumnNumber" : 3,
    "endLineNumber" : 142,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}