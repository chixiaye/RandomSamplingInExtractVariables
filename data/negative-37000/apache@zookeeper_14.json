{
  "id" : 14,
  "expression" : "\"Create new connection to server: \"",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Create new connection to server: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 240,
      "startColumnNumber" : 25,
      "endLineNumber" : 240,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 240,
        "startColumnNumber" : 25,
        "endLineNumber" : 240,
        "endColumnNumber" : 66
      },
      "nodeContext" : "\"Create new connection to server: \" + sid",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 240,
        "startColumnNumber" : 16,
        "endLineNumber" : 240,
        "endColumnNumber" : 67
      },
      "nodeContext" : "LOG.info(\"Create new connection to server: \" + sid)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 240,
        "startColumnNumber" : 16,
        "endLineNumber" : 240,
        "endColumnNumber" : 68
      },
      "nodeContext" : "LOG.info(\"Create new connection to server: \" + sid);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 489,
        "startLineNumber" : 237,
        "startColumnNumber" : 16,
        "endLineNumber" : 249,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  SendWorker sw=senderWorkerMap.get(sid);\n  LOG.info(\"Create new connection to server: \" + sid);\n  s.socket().close();\n  if (sw != null)   sw.finish();\n  SocketChannel channel=SocketChannel.open(self.quorumPeers.get(sid).electionAddr);\n  if (channel.isConnected()) {\n    initiateConnection(channel,sid);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 666,
        "startLineNumber" : 237,
        "startColumnNumber" : 12,
        "endLineNumber" : 252,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  SendWorker sw=senderWorkerMap.get(sid);\n  LOG.info(\"Create new connection to server: \" + sid);\n  s.socket().close();\n  if (sw != null)   sw.finish();\n  SocketChannel channel=SocketChannel.open(self.quorumPeers.get(sid).electionAddr);\n  if (channel.isConnected()) {\n    initiateConnection(channel,sid);\n  }\n}\n catch (IOException e) {\n  LOG.info(\"Error when closing socket or trying to reopen connection: \" + e.toString());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 236,
        "startColumnNumber" : 32,
        "endLineNumber" : 254,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    SendWorker sw=senderWorkerMap.get(sid);\n    LOG.info(\"Create new connection to server: \" + sid);\n    s.socket().close();\n    if (sw != null)     sw.finish();\n    SocketChannel channel=SocketChannel.open(self.quorumPeers.get(sid).electionAddr);\n    if (channel.isConnected()) {\n      initiateConnection(channel,sid);\n    }\n  }\n catch (  IOException e) {\n    LOG.info(\"Error when closing socket or trying to reopen connection: \" + e.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1658,
        "startLineNumber" : 236,
        "startColumnNumber" : 8,
        "endLineNumber" : 279,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (sid < self.getId()) {\n  try {\n    SendWorker sw=senderWorkerMap.get(sid);\n    LOG.info(\"Create new connection to server: \" + sid);\n    s.socket().close();\n    if (sw != null)     sw.finish();\n    SocketChannel channel=SocketChannel.open(self.quorumPeers.get(sid).electionAddr);\n    if (channel.isConnected()) {\n      initiateConnection(channel,sid);\n    }\n  }\n catch (  IOException e) {\n    LOG.info(\"Error when closing socket or trying to reopen connection: \" + e.toString());\n  }\n}\n else {\n  if (s != null) {\n    SendWorker sw=new SendWorker(s,sid);\n    RecvWorker rw=new RecvWorker(s,sid);\n    sw.setRecv(rw);\n    if (senderWorkerMap.containsKey(sid)) {\n      senderWorkerMap.get(sid).finish();\n    }\n    senderWorkerMap.put(sid,sw);\n    if (!queueSendMap.containsKey(sid)) {\n      queueSendMap.put(sid,new ArrayBlockingQueue<ByteBuffer>(CAPACITY));\n    }\n    sw.start();\n    rw.start();\n    return true;\n  }\n else {\n    LOG.warn(\"Channel null\");\n    return false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 167,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2317,
        "startLineNumber" : 216,
        "startColumnNumber" : 47,
        "endLineNumber" : 281,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Long sid=null;\n  try {\n    byte[] msgBytes=new byte[8];\n    ByteBuffer msgBuffer=ByteBuffer.wrap(msgBytes);\n    s.read(msgBuffer);\n    msgBuffer.position(0);\n    sid=Long.valueOf(msgBuffer.getLong());\n  }\n catch (  IOException e) {\n    LOG.info(\"Exception reading or writing challenge: \" + e.toString());\n    return false;\n  }\n  if (sid < self.getId()) {\n    try {\n      SendWorker sw=senderWorkerMap.get(sid);\n      LOG.info(\"Create new connection to server: \" + sid);\n      s.socket().close();\n      if (sw != null)       sw.finish();\n      SocketChannel channel=SocketChannel.open(self.quorumPeers.get(sid).electionAddr);\n      if (channel.isConnected()) {\n        initiateConnection(channel,sid);\n      }\n    }\n catch (    IOException e) {\n      LOG.info(\"Error when closing socket or trying to reopen connection: \" + e.toString());\n    }\n  }\n else {\n    if (s != null) {\n      SendWorker sw=new SendWorker(s,sid);\n      RecvWorker rw=new RecvWorker(s,sid);\n      sw.setRecv(rw);\n      if (senderWorkerMap.containsKey(sid)) {\n        senderWorkerMap.get(sid).finish();\n      }\n      senderWorkerMap.put(sid,sw);\n      if (!queueSendMap.containsKey(sid)) {\n        queueSendMap.put(sid,new ArrayBlockingQueue<ByteBuffer>(CAPACITY));\n      }\n      sw.start();\n      rw.start();\n      return true;\n    }\n else {\n      LOG.warn(\"Channel null\");\n      return false;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2672,
        "startLineNumber" : 209,
        "startColumnNumber" : 4,
        "endLineNumber" : 281,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * If this server receives a connection request, then it gives up on the new connection if it wins. Notice that it checks whether it has a connection to this server already or not. If it does, then it sends the smallest possible long value to lose the challenge.\n */\nboolean receiveConnection(SocketChannel s){\n  Long sid=null;\n  try {\n    byte[] msgBytes=new byte[8];\n    ByteBuffer msgBuffer=ByteBuffer.wrap(msgBytes);\n    s.read(msgBuffer);\n    msgBuffer.position(0);\n    sid=Long.valueOf(msgBuffer.getLong());\n  }\n catch (  IOException e) {\n    LOG.info(\"Exception reading or writing challenge: \" + e.toString());\n    return false;\n  }\n  if (sid < self.getId()) {\n    try {\n      SendWorker sw=senderWorkerMap.get(sid);\n      LOG.info(\"Create new connection to server: \" + sid);\n      s.socket().close();\n      if (sw != null)       sw.finish();\n      SocketChannel channel=SocketChannel.open(self.quorumPeers.get(sid).electionAddr);\n      if (channel.isConnected()) {\n        initiateConnection(channel,sid);\n      }\n    }\n catch (    IOException e) {\n      LOG.info(\"Error when closing socket or trying to reopen connection: \" + e.toString());\n    }\n  }\n else {\n    if (s != null) {\n      SendWorker sw=new SendWorker(s,sid);\n      RecvWorker rw=new RecvWorker(s,sid);\n      sw.setRecv(rw);\n      if (senderWorkerMap.containsKey(sid)) {\n        senderWorkerMap.get(sid).finish();\n      }\n      senderWorkerMap.put(sid,sw);\n      if (!queueSendMap.containsKey(sid)) {\n        queueSendMap.put(sid,new ArrayBlockingQueue<ByteBuffer>(CAPACITY));\n      }\n      sw.start();\n      rw.start();\n      return true;\n    }\n else {\n      LOG.warn(\"Channel null\");\n      return false;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 242,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 240,
        "startColumnNumber" : 16,
        "endLineNumber" : 240,
        "endColumnNumber" : 68
      },
      "nodeContext" : "LOG.info(\"Create new connection to server: \" + sid);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 240,
    "startColumnNumber" : 25,
    "endLineNumber" : 240,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}