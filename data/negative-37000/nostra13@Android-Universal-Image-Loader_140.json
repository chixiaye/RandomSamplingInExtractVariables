{
  "id" : 140,
  "expression" : "keyBegin",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/library/src/com/nostra13/universalimageloader/cache/disc/impl/ext/DiskLruCache.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "keyBegin",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 272,
      "startColumnNumber" : 38,
      "endLineNumber" : 272,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 272,
        "startColumnNumber" : 20,
        "endLineNumber" : 272,
        "endColumnNumber" : 47
      },
      "nodeContext" : "line.indexOf(' ',keyBegin)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 272,
        "startColumnNumber" : 6,
        "endLineNumber" : 272,
        "endColumnNumber" : 47
      },
      "nodeContext" : "secondSpace=line.indexOf(' ',keyBegin)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 272,
        "startColumnNumber" : 2,
        "endLineNumber" : 272,
        "endColumnNumber" : 48
      },
      "nodeContext" : "int secondSpace=line.indexOf(' ',keyBegin);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1197,
        "startLineNumber" : 265,
        "startColumnNumber" : 62,
        "endLineNumber" : 302,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int firstSpace=line.indexOf(' ');\n  if (firstSpace == -1) {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n  int keyBegin=firstSpace + 1;\n  int secondSpace=line.indexOf(' ',keyBegin);\n  final String key;\n  if (secondSpace == -1) {\n    key=line.substring(keyBegin);\n    if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n      lruEntries.remove(key);\n      return;\n    }\n  }\n else {\n    key=line.substring(keyBegin,secondSpace);\n  }\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    entry=new Entry(key);\n    lruEntries.put(key,entry);\n  }\n  if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n    String[] parts=line.substring(secondSpace + 1).split(\" \");\n    entry.readable=true;\n    entry.currentEditor=null;\n    entry.setLengths(parts);\n  }\n else   if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n    entry.currentEditor=new Editor(entry);\n  }\n else   if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n  }\n else {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 265,
        "startColumnNumber" : 1,
        "endLineNumber" : 302,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void readJournalLine(String line) throws IOException {\n  int firstSpace=line.indexOf(' ');\n  if (firstSpace == -1) {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n  int keyBegin=firstSpace + 1;\n  int secondSpace=line.indexOf(' ',keyBegin);\n  final String key;\n  if (secondSpace == -1) {\n    key=line.substring(keyBegin);\n    if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n      lruEntries.remove(key);\n      return;\n    }\n  }\n else {\n    key=line.substring(keyBegin,secondSpace);\n  }\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    entry=new Entry(key);\n    lruEntries.put(key,entry);\n  }\n  if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n    String[] parts=line.substring(secondSpace + 1).split(\" \");\n    entry.readable=true;\n    entry.currentEditor=null;\n    entry.setLengths(parts);\n  }\n else   if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n    entry.currentEditor=new Editor(entry);\n  }\n else   if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n  }\n else {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 272,
        "startColumnNumber" : 2,
        "endLineNumber" : 272,
        "endColumnNumber" : 48
      },
      "nodeContext" : "int secondSpace=line.indexOf(' ',keyBegin);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "keyBegin",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 275,
      "startColumnNumber" : 24,
      "endLineNumber" : 275,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 275,
        "startColumnNumber" : 9,
        "endLineNumber" : 275,
        "endColumnNumber" : 33
      },
      "nodeContext" : "line.substring(keyBegin)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 275,
        "startColumnNumber" : 3,
        "endLineNumber" : 275,
        "endColumnNumber" : 33
      },
      "nodeContext" : "key=line.substring(keyBegin)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 275,
        "startColumnNumber" : 3,
        "endLineNumber" : 275,
        "endColumnNumber" : 34
      },
      "nodeContext" : "key=line.substring(keyBegin);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 274,
        "startColumnNumber" : 25,
        "endLineNumber" : 280,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  key=line.substring(keyBegin);\n  if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n    lruEntries.remove(key);\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 274,
        "startColumnNumber" : 2,
        "endLineNumber" : 282,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (secondSpace == -1) {\n  key=line.substring(keyBegin);\n  if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n    lruEntries.remove(key);\n    return;\n  }\n}\n else {\n  key=line.substring(keyBegin,secondSpace);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1197,
        "startLineNumber" : 265,
        "startColumnNumber" : 62,
        "endLineNumber" : 302,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int firstSpace=line.indexOf(' ');\n  if (firstSpace == -1) {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n  int keyBegin=firstSpace + 1;\n  int secondSpace=line.indexOf(' ',keyBegin);\n  final String key;\n  if (secondSpace == -1) {\n    key=line.substring(keyBegin);\n    if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n      lruEntries.remove(key);\n      return;\n    }\n  }\n else {\n    key=line.substring(keyBegin,secondSpace);\n  }\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    entry=new Entry(key);\n    lruEntries.put(key,entry);\n  }\n  if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n    String[] parts=line.substring(secondSpace + 1).split(\" \");\n    entry.readable=true;\n    entry.currentEditor=null;\n    entry.setLengths(parts);\n  }\n else   if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n    entry.currentEditor=new Editor(entry);\n  }\n else   if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n  }\n else {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 265,
        "startColumnNumber" : 1,
        "endLineNumber" : 302,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void readJournalLine(String line) throws IOException {\n  int firstSpace=line.indexOf(' ');\n  if (firstSpace == -1) {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n  int keyBegin=firstSpace + 1;\n  int secondSpace=line.indexOf(' ',keyBegin);\n  final String key;\n  if (secondSpace == -1) {\n    key=line.substring(keyBegin);\n    if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n      lruEntries.remove(key);\n      return;\n    }\n  }\n else {\n    key=line.substring(keyBegin,secondSpace);\n  }\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    entry=new Entry(key);\n    lruEntries.put(key,entry);\n  }\n  if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n    String[] parts=line.substring(secondSpace + 1).split(\" \");\n    entry.readable=true;\n    entry.currentEditor=null;\n    entry.setLengths(parts);\n  }\n else   if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n    entry.currentEditor=new Editor(entry);\n  }\n else   if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n  }\n else {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 275,
        "startColumnNumber" : 3,
        "endLineNumber" : 275,
        "endColumnNumber" : 34
      },
      "nodeContext" : "key=line.substring(keyBegin);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "keyBegin",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 281,
      "startColumnNumber" : 24,
      "endLineNumber" : 281,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 281,
        "startColumnNumber" : 9,
        "endLineNumber" : 281,
        "endColumnNumber" : 46
      },
      "nodeContext" : "line.substring(keyBegin,secondSpace)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 281,
        "startColumnNumber" : 3,
        "endLineNumber" : 281,
        "endColumnNumber" : 46
      },
      "nodeContext" : "key=line.substring(keyBegin,secondSpace)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 281,
        "startColumnNumber" : 3,
        "endLineNumber" : 281,
        "endColumnNumber" : 47
      },
      "nodeContext" : "key=line.substring(keyBegin,secondSpace);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 280,
        "startColumnNumber" : 9,
        "endLineNumber" : 282,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  key=line.substring(keyBegin,secondSpace);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 274,
        "startColumnNumber" : 2,
        "endLineNumber" : 282,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (secondSpace == -1) {\n  key=line.substring(keyBegin);\n  if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n    lruEntries.remove(key);\n    return;\n  }\n}\n else {\n  key=line.substring(keyBegin,secondSpace);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1197,
        "startLineNumber" : 265,
        "startColumnNumber" : 62,
        "endLineNumber" : 302,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int firstSpace=line.indexOf(' ');\n  if (firstSpace == -1) {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n  int keyBegin=firstSpace + 1;\n  int secondSpace=line.indexOf(' ',keyBegin);\n  final String key;\n  if (secondSpace == -1) {\n    key=line.substring(keyBegin);\n    if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n      lruEntries.remove(key);\n      return;\n    }\n  }\n else {\n    key=line.substring(keyBegin,secondSpace);\n  }\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    entry=new Entry(key);\n    lruEntries.put(key,entry);\n  }\n  if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n    String[] parts=line.substring(secondSpace + 1).split(\" \");\n    entry.readable=true;\n    entry.currentEditor=null;\n    entry.setLengths(parts);\n  }\n else   if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n    entry.currentEditor=new Editor(entry);\n  }\n else   if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n  }\n else {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 265,
        "startColumnNumber" : 1,
        "endLineNumber" : 302,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void readJournalLine(String line) throws IOException {\n  int firstSpace=line.indexOf(' ');\n  if (firstSpace == -1) {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n  int keyBegin=firstSpace + 1;\n  int secondSpace=line.indexOf(' ',keyBegin);\n  final String key;\n  if (secondSpace == -1) {\n    key=line.substring(keyBegin);\n    if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n      lruEntries.remove(key);\n      return;\n    }\n  }\n else {\n    key=line.substring(keyBegin,secondSpace);\n  }\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    entry=new Entry(key);\n    lruEntries.put(key,entry);\n  }\n  if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n    String[] parts=line.substring(secondSpace + 1).split(\" \");\n    entry.readable=true;\n    entry.currentEditor=null;\n    entry.setLengths(parts);\n  }\n else   if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n    entry.currentEditor=new Editor(entry);\n  }\n else   if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n  }\n else {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 281,
        "startColumnNumber" : 3,
        "endLineNumber" : 281,
        "endColumnNumber" : 47
      },
      "nodeContext" : "key=line.substring(keyBegin,secondSpace);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 272,
    "startColumnNumber" : 38,
    "endLineNumber" : 272,
    "endColumnNumber" : 46
  }, {
    "charLength" : 8,
    "startLineNumber" : 275,
    "startColumnNumber" : 24,
    "endLineNumber" : 275,
    "endColumnNumber" : 32
  }, {
    "charLength" : 8,
    "startLineNumber" : 281,
    "startColumnNumber" : 24,
    "endLineNumber" : 281,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}