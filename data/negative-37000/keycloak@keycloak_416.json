{
  "id" : 416,
  "expression" : "getAuthServerSamlEndpoint(REALM_NAME)",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/saml/SamlRedirectBindingTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getAuthServerSamlEndpoint(REALM_NAME)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 48,
      "startColumnNumber" : 145,
      "endLineNumber" : 48,
      "endColumnNumber" : 182
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 48,
        "startColumnNumber" : 40,
        "endLineNumber" : 48,
        "endColumnNumber" : 183
      },
      "nodeContext" : "SamlClient.createLoginRequestDocument(SAML_CLIENT_ID_SALES_POST,SAML_ASSERTION_CONSUMER_URL_SALES_POST,getAuthServerSamlEndpoint(REALM_NAME))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 48,
        "startColumnNumber" : 25,
        "endLineNumber" : 48,
        "endColumnNumber" : 183
      },
      "nodeContext" : "authnRequest=SamlClient.createLoginRequestDocument(SAML_CLIENT_ID_SALES_POST,SAML_ASSERTION_CONSUMER_URL_SALES_POST,getAuthServerSamlEndpoint(REALM_NAME))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 184
      },
      "nodeContext" : "AuthnRequestType authnRequest=SamlClient.createLoginRequestDocument(SAML_CLIENT_ID_SALES_POST,SAML_ASSERTION_CONSUMER_URL_SALES_POST,getAuthServerSamlEndpoint(REALM_NAME));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 47,
        "startColumnNumber" : 66,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AuthnRequestType authnRequest=SamlClient.createLoginRequestDocument(SAML_CLIENT_ID_SALES_POST,SAML_ASSERTION_CONSUMER_URL_SALES_POST,getAuthServerSamlEndpoint(REALM_NAME));\n  HttpUriRequest req=SamlClient.Binding.REDIRECT.createSamlUnsignedRequest(getAuthServerSamlEndpoint(REALM_NAME),null,SAML2Request.convert(authnRequest));\n  String url=req.getURI().getQuery();\n  assertThat(url,not(containsString(\" \")));\n  assertThat(url,not(containsString(\"\\n\")));\n  assertThat(url,not(containsString(\"\\r\")));\n  assertThat(url,not(containsString(\"\\t\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoWhitespaceInLoginRequest() throws Exception {\n  AuthnRequestType authnRequest=SamlClient.createLoginRequestDocument(SAML_CLIENT_ID_SALES_POST,SAML_ASSERTION_CONSUMER_URL_SALES_POST,getAuthServerSamlEndpoint(REALM_NAME));\n  HttpUriRequest req=SamlClient.Binding.REDIRECT.createSamlUnsignedRequest(getAuthServerSamlEndpoint(REALM_NAME),null,SAML2Request.convert(authnRequest));\n  String url=req.getURI().getQuery();\n  assertThat(url,not(containsString(\" \")));\n  assertThat(url,not(containsString(\"\\n\")));\n  assertThat(url,not(containsString(\"\\r\")));\n  assertThat(url,not(containsString(\"\\t\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 184
      },
      "nodeContext" : "AuthnRequestType authnRequest=SamlClient.createLoginRequestDocument(SAML_CLIENT_ID_SALES_POST,SAML_ASSERTION_CONSUMER_URL_SALES_POST,getAuthServerSamlEndpoint(REALM_NAME));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.net.URI"
  }, {
    "nodeContext" : "getAuthServerSamlEndpoint(REALM_NAME)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 49,
      "startColumnNumber" : 83,
      "endLineNumber" : 49,
      "endColumnNumber" : 120
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 49,
        "startColumnNumber" : 29,
        "endLineNumber" : 49,
        "endColumnNumber" : 163
      },
      "nodeContext" : "SamlClient.Binding.REDIRECT.createSamlUnsignedRequest(getAuthServerSamlEndpoint(REALM_NAME),null,SAML2Request.convert(authnRequest))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 49,
        "startColumnNumber" : 23,
        "endLineNumber" : 49,
        "endColumnNumber" : 163
      },
      "nodeContext" : "req=SamlClient.Binding.REDIRECT.createSamlUnsignedRequest(getAuthServerSamlEndpoint(REALM_NAME),null,SAML2Request.convert(authnRequest))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 164
      },
      "nodeContext" : "HttpUriRequest req=SamlClient.Binding.REDIRECT.createSamlUnsignedRequest(getAuthServerSamlEndpoint(REALM_NAME),null,SAML2Request.convert(authnRequest));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 47,
        "startColumnNumber" : 66,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AuthnRequestType authnRequest=SamlClient.createLoginRequestDocument(SAML_CLIENT_ID_SALES_POST,SAML_ASSERTION_CONSUMER_URL_SALES_POST,getAuthServerSamlEndpoint(REALM_NAME));\n  HttpUriRequest req=SamlClient.Binding.REDIRECT.createSamlUnsignedRequest(getAuthServerSamlEndpoint(REALM_NAME),null,SAML2Request.convert(authnRequest));\n  String url=req.getURI().getQuery();\n  assertThat(url,not(containsString(\" \")));\n  assertThat(url,not(containsString(\"\\n\")));\n  assertThat(url,not(containsString(\"\\r\")));\n  assertThat(url,not(containsString(\"\\t\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoWhitespaceInLoginRequest() throws Exception {\n  AuthnRequestType authnRequest=SamlClient.createLoginRequestDocument(SAML_CLIENT_ID_SALES_POST,SAML_ASSERTION_CONSUMER_URL_SALES_POST,getAuthServerSamlEndpoint(REALM_NAME));\n  HttpUriRequest req=SamlClient.Binding.REDIRECT.createSamlUnsignedRequest(getAuthServerSamlEndpoint(REALM_NAME),null,SAML2Request.convert(authnRequest));\n  String url=req.getURI().getQuery();\n  assertThat(url,not(containsString(\" \")));\n  assertThat(url,not(containsString(\"\\n\")));\n  assertThat(url,not(containsString(\"\\r\")));\n  assertThat(url,not(containsString(\"\\t\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 164
      },
      "nodeContext" : "HttpUriRequest req=SamlClient.Binding.REDIRECT.createSamlUnsignedRequest(getAuthServerSamlEndpoint(REALM_NAME),null,SAML2Request.convert(authnRequest));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.net.URI"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 48,
    "startColumnNumber" : 145,
    "endLineNumber" : 48,
    "endColumnNumber" : 182
  }, {
    "charLength" : 37,
    "startLineNumber" : 49,
    "startColumnNumber" : 83,
    "endLineNumber" : 49,
    "endColumnNumber" : 120
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}