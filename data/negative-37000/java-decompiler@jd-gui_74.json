{
  "id" : 74,
  "expression" : "l.y",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/app/src/main/java/org/jd/gui/service/configuration/ConfigurationXmlPersisterProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "l.y",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 195,
      "startColumnNumber" : 66,
      "endLineNumber" : 195,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 195,
        "startColumnNumber" : 51,
        "endLineNumber" : 195,
        "endColumnNumber" : 70
      },
      "nodeContext" : "String.valueOf(l.y)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 195,
        "startColumnNumber" : 24,
        "endLineNumber" : 195,
        "endColumnNumber" : 71
      },
      "nodeContext" : "writer.writeAttribute(\"y\",String.valueOf(l.y))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 195,
        "startColumnNumber" : 24,
        "endLineNumber" : 195,
        "endColumnNumber" : 72
      },
      "nodeContext" : "writer.writeAttribute(\"y\",String.valueOf(l.y));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3663,
        "startLineNumber" : 180,
        "startColumnNumber" : 64,
        "endLineNumber" : 258,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  XMLStreamWriter writer=XMLOutputFactory.newInstance().createXMLStreamWriter(fos);\n  writer.writeStartDocument();\n  writer.writeCharacters(\"\\n\");\n  writer.writeStartElement(\"configuration\");\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeStartElement(\"gui\");\n  writer.writeCharacters(\"\\n\\t\\t\");\n  writer.writeStartElement(\"mainWindow\");\n  writer.writeCharacters(\"\\n\\t\\t\\t\");\n  writer.writeStartElement(\"location\");\n  writer.writeAttribute(\"x\",String.valueOf(l.x));\n  writer.writeAttribute(\"y\",String.valueOf(l.y));\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\\t\\t\");\n  writer.writeStartElement(\"size\");\n  writer.writeAttribute(\"w\",String.valueOf(s.width));\n  writer.writeAttribute(\"h\",String.valueOf(s.height));\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\\t\\t\");\n  writer.writeStartElement(\"maximize\");\n  writer.writeCharacters(String.valueOf(configuration.isMainWindowMaximize()));\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\\t\");\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\\t\");\n  writer.writeStartElement(\"lookAndFeel\");\n  writer.writeCharacters(configuration.getLookAndFeel());\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeStartElement(\"recentFilePaths\");\n  for (  File recentFile : configuration.getRecentFiles()) {\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeStartElement(\"filePath\");\n    writer.writeCharacters(recentFile.getAbsolutePath());\n    writer.writeEndElement();\n  }\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeStartElement(\"recentDirectories\");\n  writer.writeCharacters(\"\\n\\t\\t\");\n  writer.writeStartElement(\"loadPath\");\n  writer.writeCharacters(configuration.getRecentLoadDirectory().getAbsolutePath());\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\\t\");\n  writer.writeStartElement(\"savePath\");\n  writer.writeCharacters(configuration.getRecentSaveDirectory().getAbsolutePath());\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeStartElement(\"preferences\");\n  for (  Map.Entry<String,String> preference : configuration.getPreferences().entrySet()) {\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeStartElement(preference.getKey());\n    writer.writeCharacters(preference.getValue());\n    writer.writeEndElement();\n  }\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\");\n  writer.writeEndElement();\n  writer.writeEndDocument();\n  writer.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 372,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3806,
        "startLineNumber" : 180,
        "startColumnNumber" : 8,
        "endLineNumber" : 260,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (FileOutputStream fos=new FileOutputStream(FILE)){\n  XMLStreamWriter writer=XMLOutputFactory.newInstance().createXMLStreamWriter(fos);\n  writer.writeStartDocument();\n  writer.writeCharacters(\"\\n\");\n  writer.writeStartElement(\"configuration\");\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeStartElement(\"gui\");\n  writer.writeCharacters(\"\\n\\t\\t\");\n  writer.writeStartElement(\"mainWindow\");\n  writer.writeCharacters(\"\\n\\t\\t\\t\");\n  writer.writeStartElement(\"location\");\n  writer.writeAttribute(\"x\",String.valueOf(l.x));\n  writer.writeAttribute(\"y\",String.valueOf(l.y));\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\\t\\t\");\n  writer.writeStartElement(\"size\");\n  writer.writeAttribute(\"w\",String.valueOf(s.width));\n  writer.writeAttribute(\"h\",String.valueOf(s.height));\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\\t\\t\");\n  writer.writeStartElement(\"maximize\");\n  writer.writeCharacters(String.valueOf(configuration.isMainWindowMaximize()));\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\\t\");\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\\t\");\n  writer.writeStartElement(\"lookAndFeel\");\n  writer.writeCharacters(configuration.getLookAndFeel());\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeStartElement(\"recentFilePaths\");\n  for (  File recentFile : configuration.getRecentFiles()) {\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeStartElement(\"filePath\");\n    writer.writeCharacters(recentFile.getAbsolutePath());\n    writer.writeEndElement();\n  }\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeStartElement(\"recentDirectories\");\n  writer.writeCharacters(\"\\n\\t\\t\");\n  writer.writeStartElement(\"loadPath\");\n  writer.writeCharacters(configuration.getRecentLoadDirectory().getAbsolutePath());\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\\t\");\n  writer.writeStartElement(\"savePath\");\n  writer.writeCharacters(configuration.getRecentSaveDirectory().getAbsolutePath());\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeStartElement(\"preferences\");\n  for (  Map.Entry<String,String> preference : configuration.getPreferences().entrySet()) {\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeStartElement(preference.getKey());\n    writer.writeCharacters(preference.getValue());\n    writer.writeEndElement();\n  }\n  writer.writeCharacters(\"\\n\\t\");\n  writer.writeEndElement();\n  writer.writeCharacters(\"\\n\");\n  writer.writeEndElement();\n  writer.writeEndDocument();\n  writer.close();\n}\n catch (Exception e) {\n  assert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 393,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3942,
        "startLineNumber" : 176,
        "startColumnNumber" : 50,
        "endLineNumber" : 261,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Point l=configuration.getMainWindowLocation();\n  Dimension s=configuration.getMainWindowSize();\n  try (FileOutputStream fos=new FileOutputStream(FILE)){\n    XMLStreamWriter writer=XMLOutputFactory.newInstance().createXMLStreamWriter(fos);\n    writer.writeStartDocument();\n    writer.writeCharacters(\"\\n\");\n    writer.writeStartElement(\"configuration\");\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeStartElement(\"gui\");\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeStartElement(\"mainWindow\");\n    writer.writeCharacters(\"\\n\\t\\t\\t\");\n    writer.writeStartElement(\"location\");\n    writer.writeAttribute(\"x\",String.valueOf(l.x));\n    writer.writeAttribute(\"y\",String.valueOf(l.y));\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\\t\\t\");\n    writer.writeStartElement(\"size\");\n    writer.writeAttribute(\"w\",String.valueOf(s.width));\n    writer.writeAttribute(\"h\",String.valueOf(s.height));\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\\t\\t\");\n    writer.writeStartElement(\"maximize\");\n    writer.writeCharacters(String.valueOf(configuration.isMainWindowMaximize()));\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeStartElement(\"lookAndFeel\");\n    writer.writeCharacters(configuration.getLookAndFeel());\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeStartElement(\"recentFilePaths\");\n    for (    File recentFile : configuration.getRecentFiles()) {\n      writer.writeCharacters(\"\\n\\t\\t\");\n      writer.writeStartElement(\"filePath\");\n      writer.writeCharacters(recentFile.getAbsolutePath());\n      writer.writeEndElement();\n    }\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeStartElement(\"recentDirectories\");\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeStartElement(\"loadPath\");\n    writer.writeCharacters(configuration.getRecentLoadDirectory().getAbsolutePath());\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeStartElement(\"savePath\");\n    writer.writeCharacters(configuration.getRecentSaveDirectory().getAbsolutePath());\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeStartElement(\"preferences\");\n    for (    Map.Entry<String,String> preference : configuration.getPreferences().entrySet()) {\n      writer.writeCharacters(\"\\n\\t\\t\");\n      writer.writeStartElement(preference.getKey());\n      writer.writeCharacters(preference.getValue());\n      writer.writeEndElement();\n    }\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\");\n    writer.writeEndElement();\n    writer.writeEndDocument();\n    writer.close();\n  }\n catch (  Exception e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 410,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3988,
        "startLineNumber" : 176,
        "startColumnNumber" : 4,
        "endLineNumber" : 261,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void save(Configuration configuration){\n  Point l=configuration.getMainWindowLocation();\n  Dimension s=configuration.getMainWindowSize();\n  try (FileOutputStream fos=new FileOutputStream(FILE)){\n    XMLStreamWriter writer=XMLOutputFactory.newInstance().createXMLStreamWriter(fos);\n    writer.writeStartDocument();\n    writer.writeCharacters(\"\\n\");\n    writer.writeStartElement(\"configuration\");\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeStartElement(\"gui\");\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeStartElement(\"mainWindow\");\n    writer.writeCharacters(\"\\n\\t\\t\\t\");\n    writer.writeStartElement(\"location\");\n    writer.writeAttribute(\"x\",String.valueOf(l.x));\n    writer.writeAttribute(\"y\",String.valueOf(l.y));\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\\t\\t\");\n    writer.writeStartElement(\"size\");\n    writer.writeAttribute(\"w\",String.valueOf(s.width));\n    writer.writeAttribute(\"h\",String.valueOf(s.height));\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\\t\\t\");\n    writer.writeStartElement(\"maximize\");\n    writer.writeCharacters(String.valueOf(configuration.isMainWindowMaximize()));\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeStartElement(\"lookAndFeel\");\n    writer.writeCharacters(configuration.getLookAndFeel());\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeStartElement(\"recentFilePaths\");\n    for (    File recentFile : configuration.getRecentFiles()) {\n      writer.writeCharacters(\"\\n\\t\\t\");\n      writer.writeStartElement(\"filePath\");\n      writer.writeCharacters(recentFile.getAbsolutePath());\n      writer.writeEndElement();\n    }\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeStartElement(\"recentDirectories\");\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeStartElement(\"loadPath\");\n    writer.writeCharacters(configuration.getRecentLoadDirectory().getAbsolutePath());\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\\t\");\n    writer.writeStartElement(\"savePath\");\n    writer.writeCharacters(configuration.getRecentSaveDirectory().getAbsolutePath());\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeStartElement(\"preferences\");\n    for (    Map.Entry<String,String> preference : configuration.getPreferences().entrySet()) {\n      writer.writeCharacters(\"\\n\\t\\t\");\n      writer.writeStartElement(preference.getKey());\n      writer.writeCharacters(preference.getValue());\n      writer.writeEndElement();\n    }\n    writer.writeCharacters(\"\\n\\t\");\n    writer.writeEndElement();\n    writer.writeCharacters(\"\\n\");\n    writer.writeEndElement();\n    writer.writeEndDocument();\n    writer.close();\n  }\n catch (  Exception e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 418,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 195,
        "startColumnNumber" : 24,
        "endLineNumber" : 195,
        "endColumnNumber" : 72
      },
      "nodeContext" : "writer.writeAttribute(\"y\",String.valueOf(l.y));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 195,
    "startColumnNumber" : 66,
    "endLineNumber" : 195,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}