{
  "id" : 61,
  "expression" : "sc.close()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketObjectEchoTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sc.close()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 137,
      "startColumnNumber" : 8,
      "endLineNumber" : 137,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 137,
        "startColumnNumber" : 8,
        "endLineNumber" : 137,
        "endColumnNumber" : 25
      },
      "nodeContext" : "sc.close().sync()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 137,
        "startColumnNumber" : 8,
        "endLineNumber" : 137,
        "endColumnNumber" : 26
      },
      "nodeContext" : "sc.close().sync();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2558,
        "startLineNumber" : 72,
        "startColumnNumber" : 108,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  sb.childOption(ChannelOption.AUTO_READ,autoRead);\n  cb.option(ChannelOption.AUTO_READ,autoRead);\n  final EchoHandler sh=new EchoHandler(autoRead);\n  final EchoHandler ch=new EchoHandler(autoRead);\n  sb.childHandler(new ChannelInitializer<Channel>(){\n    @Override public void initChannel(    Channel sch) throws Exception {\n      sch.pipeline().addLast(new ObjectDecoder(ClassResolvers.cacheDisabled(getClass().getClassLoader())),new ObjectEncoder(),sh);\n    }\n  }\n);\n  cb.handler(new ChannelInitializer<Channel>(){\n    @Override public void initChannel(    Channel sch) throws Exception {\n      sch.pipeline().addLast(new ObjectDecoder(ClassResolvers.cacheDisabled(getClass().getClassLoader())),new ObjectEncoder(),ch);\n    }\n  }\n);\n  Channel sc=sb.bind().get();\n  Channel cc=cb.connect(sc.localAddress()).get();\n  for (  String element : data) {\n    cc.writeAndFlush(element);\n  }\n  while (ch.counter < data.length) {\n    if (sh.exception.get() != null) {\n      break;\n    }\n    if (ch.exception.get() != null) {\n      break;\n    }\n    try {\n      Thread.sleep(50);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  while (sh.counter < data.length) {\n    if (sh.exception.get() != null) {\n      break;\n    }\n    if (ch.exception.get() != null) {\n      break;\n    }\n    try {\n      Thread.sleep(50);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  sh.channel.close().sync();\n  ch.channel.close().sync();\n  sc.close().sync();\n  if (sh.exception.get() != null && !(sh.exception.get() instanceof IOException)) {\n    throw sh.exception.get();\n  }\n  if (ch.exception.get() != null && !(ch.exception.get() instanceof IOException)) {\n    throw ch.exception.get();\n  }\n  if (sh.exception.get() != null) {\n    throw sh.exception.get();\n  }\n  if (ch.exception.get() != null) {\n    throw ch.exception.get();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 348,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2662,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void testObjectEcho(ServerBootstrap sb,Bootstrap cb,boolean autoRead) throws Throwable {\n  sb.childOption(ChannelOption.AUTO_READ,autoRead);\n  cb.option(ChannelOption.AUTO_READ,autoRead);\n  final EchoHandler sh=new EchoHandler(autoRead);\n  final EchoHandler ch=new EchoHandler(autoRead);\n  sb.childHandler(new ChannelInitializer<Channel>(){\n    @Override public void initChannel(    Channel sch) throws Exception {\n      sch.pipeline().addLast(new ObjectDecoder(ClassResolvers.cacheDisabled(getClass().getClassLoader())),new ObjectEncoder(),sh);\n    }\n  }\n);\n  cb.handler(new ChannelInitializer<Channel>(){\n    @Override public void initChannel(    Channel sch) throws Exception {\n      sch.pipeline().addLast(new ObjectDecoder(ClassResolvers.cacheDisabled(getClass().getClassLoader())),new ObjectEncoder(),ch);\n    }\n  }\n);\n  Channel sc=sb.bind().get();\n  Channel cc=cb.connect(sc.localAddress()).get();\n  for (  String element : data) {\n    cc.writeAndFlush(element);\n  }\n  while (ch.counter < data.length) {\n    if (sh.exception.get() != null) {\n      break;\n    }\n    if (ch.exception.get() != null) {\n      break;\n    }\n    try {\n      Thread.sleep(50);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  while (sh.counter < data.length) {\n    if (sh.exception.get() != null) {\n      break;\n    }\n    if (ch.exception.get() != null) {\n      break;\n    }\n    try {\n      Thread.sleep(50);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  sh.channel.close().sync();\n  ch.channel.close().sync();\n  sc.close().sync();\n  if (sh.exception.get() != null && !(sh.exception.get() instanceof IOException)) {\n    throw sh.exception.get();\n  }\n  if (ch.exception.get() != null && !(ch.exception.get() instanceof IOException)) {\n    throw ch.exception.get();\n  }\n  if (sh.exception.get() != null) {\n    throw sh.exception.get();\n  }\n  if (ch.exception.get() != null) {\n    throw ch.exception.get();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 366,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 137,
        "startColumnNumber" : 8,
        "endLineNumber" : 137,
        "endColumnNumber" : 26
      },
      "nodeContext" : "sc.close().sync();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.util.concurrent.Future<java.lang.Void>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 137,
    "startColumnNumber" : 8,
    "endLineNumber" : 137,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}