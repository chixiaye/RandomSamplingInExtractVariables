{
  "id" : 49,
  "expression" : "AbstractPartitionAssignor",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/clients/consumer/RoundRobinAssignor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "AbstractPartitionAssignor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 135,
      "startColumnNumber" : 37,
      "endLineNumber" : 135,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 135,
        "startColumnNumber" : 37,
        "endLineNumber" : 135,
        "endColumnNumber" : 103
      },
      "nodeContext" : "AbstractPartitionAssignor.partitions(topic,numPartitionsForTopic)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 135,
        "startColumnNumber" : 16,
        "endLineNumber" : 135,
        "endColumnNumber" : 104
      },
      "nodeContext" : "allPartitions.addAll(AbstractPartitionAssignor.partitions(topic,numPartitionsForTopic))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 135,
        "startColumnNumber" : 16,
        "endLineNumber" : 135,
        "endColumnNumber" : 105
      },
      "nodeContext" : "allPartitions.addAll(AbstractPartitionAssignor.partitions(topic,numPartitionsForTopic));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 135,
        "endColumnNumber" : 105
      },
      "nodeContext" : "if (numPartitionsForTopic != null) allPartitions.addAll(AbstractPartitionAssignor.partitions(topic,numPartitionsForTopic));\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 132,
        "startColumnNumber" : 36,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Integer numPartitionsForTopic=partitionsPerTopic.get(topic);\n  if (numPartitionsForTopic != null)   allPartitions.addAll(AbstractPartitionAssignor.partitions(topic,numPartitionsForTopic));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String topic : topics) {\n  Integer numPartitionsForTopic=partitionsPerTopic.get(topic);\n  if (numPartitionsForTopic != null)   allPartitions.addAll(AbstractPartitionAssignor.partitions(topic,numPartitionsForTopic));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 545,
        "startLineNumber" : 126,
        "startColumnNumber" : 94,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SortedSet<String> topics=new TreeSet<>();\n  for (  Subscription subscription : subscriptions.values())   topics.addAll(subscription.topics());\n  List<TopicPartition> allPartitions=new ArrayList<>();\n  for (  String topic : topics) {\n    Integer numPartitionsForTopic=partitionsPerTopic.get(topic);\n    if (numPartitionsForTopic != null)     allPartitions.addAll(AbstractPartitionAssignor.partitions(topic,numPartitionsForTopic));\n  }\n  return allPartitions;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 729,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private List<TopicPartition> allPartitionsSorted(Map<String,Integer> partitionsPerTopic,Map<String,Subscription> subscriptions){\n  SortedSet<String> topics=new TreeSet<>();\n  for (  Subscription subscription : subscriptions.values())   topics.addAll(subscription.topics());\n  List<TopicPartition> allPartitions=new ArrayList<>();\n  for (  String topic : topics) {\n    Integer numPartitionsForTopic=partitionsPerTopic.get(topic);\n    if (numPartitionsForTopic != null)     allPartitions.addAll(AbstractPartitionAssignor.partitions(topic,numPartitionsForTopic));\n  }\n  return allPartitions;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 135,
        "startColumnNumber" : 16,
        "endLineNumber" : 135,
        "endColumnNumber" : 105
      },
      "nodeContext" : "allPartitions.addAll(AbstractPartitionAssignor.partitions(topic,numPartitionsForTopic));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.clients.consumer.internals.AbstractPartitionAssignor"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 135,
    "startColumnNumber" : 37,
    "endLineNumber" : 135,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}