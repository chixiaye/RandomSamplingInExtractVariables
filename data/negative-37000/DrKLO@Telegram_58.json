{
  "id" : 58,
  "expression" : "captureTimeNs",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/webrtc/Camera1Session.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "captureTimeNs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 316,
      "startColumnNumber" : 84,
      "endLineNumber" : 316,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 316,
        "startColumnNumber" : 33,
        "endLineNumber" : 316,
        "endColumnNumber" : 98
      },
      "nodeContext" : "new VideoFrame(frameBuffer,getFrameOrientation(),captureTimeNs)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 316,
        "startColumnNumber" : 25,
        "endLineNumber" : 316,
        "endColumnNumber" : 98
      },
      "nodeContext" : "frame=new VideoFrame(frameBuffer,getFrameOrientation(),captureTimeNs)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 316,
        "startColumnNumber" : 8,
        "endLineNumber" : 316,
        "endColumnNumber" : 99
      },
      "nodeContext" : "final VideoFrame frame=new VideoFrame(frameBuffer,getFrameOrientation(),captureTimeNs);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1204,
        "startLineNumber" : 288,
        "startColumnNumber" : 92,
        "endLineNumber" : 319,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  checkIsOnCameraThread();\n  if (callbackCamera != camera) {\n    Logging.e(TAG,\"Callback from a different camera. This should never happen.\");\n    return;\n  }\n  if (state != SessionState.RUNNING) {\n    Logging.d(TAG,\"Bytebuffer frame captured but camera is no longer running.\");\n    return;\n  }\n  final long captureTimeNs=TimeUnit.MILLISECONDS.toNanos(SystemClock.elapsedRealtime());\n  if (!firstFrameReported) {\n    final int startTimeMs=(int)TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - constructionTimeNs);\n    camera1StartTimeMsHistogram.addSample(startTimeMs);\n    firstFrameReported=true;\n  }\n  VideoFrame.Buffer frameBuffer=new NV21Buffer(data,captureFormat.width,captureFormat.height,() -> cameraThreadHandler.post(() -> {\n    if (state == SessionState.RUNNING) {\n      camera.addCallbackBuffer(data);\n    }\n  }\n));\n  final VideoFrame frame=new VideoFrame(frameBuffer,getFrameOrientation(),captureTimeNs);\n  events.onFrameCaptured(Camera1Session.this,frame);\n  frame.release();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1306,
        "startLineNumber" : 287,
        "startColumnNumber" : 6,
        "endLineNumber" : 319,
        "endColumnNumber" : 7
      },
      "nodeContext" : "@Override public void onPreviewFrame(final byte[] data,android.hardware.Camera callbackCamera){\n  checkIsOnCameraThread();\n  if (callbackCamera != camera) {\n    Logging.e(TAG,\"Callback from a different camera. This should never happen.\");\n    return;\n  }\n  if (state != SessionState.RUNNING) {\n    Logging.d(TAG,\"Bytebuffer frame captured but camera is no longer running.\");\n    return;\n  }\n  final long captureTimeNs=TimeUnit.MILLISECONDS.toNanos(SystemClock.elapsedRealtime());\n  if (!firstFrameReported) {\n    final int startTimeMs=(int)TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - constructionTimeNs);\n    camera1StartTimeMsHistogram.addSample(startTimeMs);\n    firstFrameReported=true;\n  }\n  VideoFrame.Buffer frameBuffer=new NV21Buffer(data,captureFormat.width,captureFormat.height,() -> cameraThreadHandler.post(() -> {\n    if (state == SessionState.RUNNING) {\n      camera.addCallbackBuffer(data);\n    }\n  }\n));\n  final VideoFrame frame=new VideoFrame(frameBuffer,getFrameOrientation(),captureTimeNs);\n  events.onFrameCaptured(Camera1Session.this,frame);\n  frame.release();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 316,
        "startColumnNumber" : 8,
        "endLineNumber" : 316,
        "endColumnNumber" : 99
      },
      "nodeContext" : "final VideoFrame frame=new VideoFrame(frameBuffer,getFrameOrientation(),captureTimeNs);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 316,
    "startColumnNumber" : 84,
    "endLineNumber" : 316,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}