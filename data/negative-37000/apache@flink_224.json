{
  "id" : 224,
  "expression" : "new IntermediateSampleData<T>(random.nextDouble(),element)",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-java/src/main/java/org/apache/flink/api/java/sampling/ReservoirSamplerWithoutReplacement.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IntermediateSampleData<T>(random.nextDouble(),element)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 59,
      "startLineNumber" : 97,
      "startColumnNumber" : 26,
      "endLineNumber" : 97,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 86
      },
      "nodeContext" : "queue.add(new IntermediateSampleData<T>(random.nextDouble(),element))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 87
      },
      "nodeContext" : "queue.add(new IntermediateSampleData<T>(random.nextDouble(),element));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 95,
        "startColumnNumber" : 36,
        "endLineNumber" : 99,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  queue.add(new IntermediateSampleData<T>(random.nextDouble(),element));\n  smallest=queue.peek();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (index < numSamples) {\n  queue.add(new IntermediateSampleData<T>(random.nextDouble(),element));\n  smallest=queue.peek();\n}\n else {\n  double rand=random.nextDouble();\n  if (rand > smallest.getWeight()) {\n    queue.remove();\n    queue.add(new IntermediateSampleData<T>(rand,element));\n    smallest=queue.peek();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 93,
        "startColumnNumber" : 32,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  T element=input.next();\n  if (index < numSamples) {\n    queue.add(new IntermediateSampleData<T>(random.nextDouble(),element));\n    smallest=queue.peek();\n  }\n else {\n    double rand=random.nextDouble();\n    if (rand > smallest.getWeight()) {\n      queue.remove();\n      queue.add(new IntermediateSampleData<T>(rand,element));\n      smallest=queue.peek();\n    }\n  }\n  index++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 768,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (input.hasNext()) {\n  T element=input.next();\n  if (index < numSamples) {\n    queue.add(new IntermediateSampleData<T>(random.nextDouble(),element));\n    smallest=queue.peek();\n  }\n else {\n    double rand=random.nextDouble();\n    if (rand > smallest.getWeight()) {\n      queue.remove();\n      queue.add(new IntermediateSampleData<T>(rand,element));\n      smallest=queue.peek();\n    }\n  }\n  index++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 78,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1205,
        "startLineNumber" : 83,
        "startColumnNumber" : 84,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (numSamples == 0) {\n    return emptyIntermediateIterable;\n  }\n  PriorityQueue<IntermediateSampleData<T>> queue=new PriorityQueue<IntermediateSampleData<T>>(numSamples);\n  int index=0;\n  IntermediateSampleData<T> smallest=null;\n  while (input.hasNext()) {\n    T element=input.next();\n    if (index < numSamples) {\n      queue.add(new IntermediateSampleData<T>(random.nextDouble(),element));\n      smallest=queue.peek();\n    }\n else {\n      double rand=random.nextDouble();\n      if (rand > smallest.getWeight()) {\n        queue.remove();\n        queue.add(new IntermediateSampleData<T>(rand,element));\n        smallest=queue.peek();\n      }\n    }\n    index++;\n  }\n  return queue.iterator();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1299,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Iterator<IntermediateSampleData<T>> sampleInPartition(Iterator<T> input){\n  if (numSamples == 0) {\n    return emptyIntermediateIterable;\n  }\n  PriorityQueue<IntermediateSampleData<T>> queue=new PriorityQueue<IntermediateSampleData<T>>(numSamples);\n  int index=0;\n  IntermediateSampleData<T> smallest=null;\n  while (input.hasNext()) {\n    T element=input.next();\n    if (index < numSamples) {\n      queue.add(new IntermediateSampleData<T>(random.nextDouble(),element));\n      smallest=queue.peek();\n    }\n else {\n      double rand=random.nextDouble();\n      if (rand > smallest.getWeight()) {\n        queue.remove();\n        queue.add(new IntermediateSampleData<T>(rand,element));\n        smallest=queue.peek();\n      }\n    }\n    index++;\n  }\n  return queue.iterator();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 87
      },
      "nodeContext" : "queue.add(new IntermediateSampleData<T>(random.nextDouble(),element));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "org.apache.flink.api.java.sampling.IntermediateSampleData<T>"
  } ],
  "positionList" : [ {
    "charLength" : 59,
    "startLineNumber" : 97,
    "startColumnNumber" : 26,
    "endLineNumber" : 97,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}