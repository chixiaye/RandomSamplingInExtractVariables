{
  "id" : 178,
  "expression" : "expected.dataType()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-memcache/src/test/java/io/netty/handler/codec/memcache/binary/DefaultFullBinaryMemcacheResponseTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expected.dataType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 93,
      "startColumnNumber" : 21,
      "endLineNumber" : 93,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertEquals(expected.dataType(),actual.dataType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(expected.dataType(),actual.dataType());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 787,
        "startLineNumber" : 81,
        "startColumnNumber" : 73,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNotSame(expected,actual);\n  assertEquals(expected.key(),actual.key());\n  assertEquals(expected.extras(),actual.extras());\n  assertEquals(expectedContent,actual.content());\n  assertEquals(expected.status(),actual.status());\n  assertEquals(expected.magic(),actual.magic());\n  assertEquals(expected.opcode(),actual.opcode());\n  assertEquals(expected.keyLength(),actual.keyLength());\n  assertEquals(expected.extrasLength(),actual.extrasLength());\n  assertEquals(expected.dataType(),actual.dataType());\n  assertEquals(expected.totalBodyLength(),actual.totalBodyLength());\n  assertEquals(expected.opaque(),actual.opaque());\n  assertEquals(expected.cas(),actual.cas());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 957,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void assertResponseEquals(FullBinaryMemcacheResponse expected,ByteBuf expectedContent,FullBinaryMemcacheResponse actual){\n  assertNotSame(expected,actual);\n  assertEquals(expected.key(),actual.key());\n  assertEquals(expected.extras(),actual.extras());\n  assertEquals(expectedContent,actual.content());\n  assertEquals(expected.status(),actual.status());\n  assertEquals(expected.magic(),actual.magic());\n  assertEquals(expected.opcode(),actual.opcode());\n  assertEquals(expected.keyLength(),actual.keyLength());\n  assertEquals(expected.extrasLength(),actual.extrasLength());\n  assertEquals(expected.dataType(),actual.dataType());\n  assertEquals(expected.totalBodyLength(),actual.totalBodyLength());\n  assertEquals(expected.opaque(),actual.opaque());\n  assertEquals(expected.cas(),actual.cas());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(expected.dataType(),actual.dataType());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "byte"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 93,
    "startColumnNumber" : 21,
    "endLineNumber" : 93,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}