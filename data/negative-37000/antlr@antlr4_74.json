{
  "id" : 74,
  "expression" : "\"</ST:\" + name + \">\"",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool-testsuite/test/org/antlr/v4/test/tool/TestCodeGeneration.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"</ST:\" + name + \">\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 94,
      "startColumnNumber" : 16,
      "endLineNumber" : 94,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 37
      },
      "nodeContext" : "out.write(\"</ST:\" + name + \">\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 38
      },
      "nodeContext" : "out.write(\"</ST:\" + name + \">\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 90,
        "startColumnNumber" : 9,
        "endLineNumber" : 97,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  out.write(\"<ST:\" + name + \">\");\n  evals.add(\"<ST:\" + name + \">\");\n  int r=super.writeObject(out,scope,o,options);\n  out.write(\"</ST:\" + name + \">\");\n  evals.add(\"</ST:\" + name + \">\");\n  return r;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 90,
        "startColumnNumber" : 5,
        "endLineNumber" : 99,
        "endColumnNumber" : 6
      },
      "nodeContext" : "try {\n  out.write(\"<ST:\" + name + \">\");\n  evals.add(\"<ST:\" + name + \">\");\n  int r=super.writeObject(out,scope,o,options);\n  out.write(\"</ST:\" + name + \">\");\n  evals.add(\"</ST:\" + name + \">\");\n  return r;\n}\n catch (IOException ioe) {\n  myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 63,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 89,
        "startColumnNumber" : 36,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    out.write(\"<ST:\" + name + \">\");\n    evals.add(\"<ST:\" + name + \">\");\n    int r=super.writeObject(out,scope,o,options);\n    out.write(\"</ST:\" + name + \">\");\n    evals.add(\"</ST:\" + name + \">\");\n    return r;\n  }\n catch (  IOException ioe) {\n    myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 397,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!name.startsWith(\"_sub\")) {\n  try {\n    out.write(\"<ST:\" + name + \">\");\n    evals.add(\"<ST:\" + name + \">\");\n    int r=super.writeObject(out,scope,o,options);\n    out.write(\"</ST:\" + name + \">\");\n    evals.add(\"</ST:\" + name + \">\");\n    return r;\n  }\n catch (  IOException ioe) {\n    myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 479,
        "startLineNumber" : 86,
        "startColumnNumber" : 26,
        "endLineNumber" : 101,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  String name=((ST)o).getName();\n  name=name.substring(1);\n  if (!name.startsWith(\"_sub\")) {\n    try {\n      out.write(\"<ST:\" + name + \">\");\n      evals.add(\"<ST:\" + name + \">\");\n      int r=super.writeObject(out,scope,o,options);\n      out.write(\"</ST:\" + name + \">\");\n      evals.add(\"</ST:\" + name + \">\");\n      return r;\n    }\n catch (    IOException ioe) {\n      myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 86,
        "startColumnNumber" : 3,
        "endLineNumber" : 101,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (o instanceof ST) {\n  String name=((ST)o).getName();\n  name=name.substring(1);\n  if (!name.startsWith(\"_sub\")) {\n    try {\n      out.write(\"<ST:\" + name + \">\");\n      evals.add(\"<ST:\" + name + \">\");\n      int r=super.writeObject(out,scope,o,options);\n      out.write(\"</ST:\" + name + \">\");\n      evals.add(\"</ST:\" + name + \">\");\n      return r;\n    }\n catch (    IOException ioe) {\n      myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 85,
        "startColumnNumber" : 91,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (o instanceof ST) {\n    String name=((ST)o).getName();\n    name=name.substring(1);\n    if (!name.startsWith(\"_sub\")) {\n      try {\n        out.write(\"<ST:\" + name + \">\");\n        evals.add(\"<ST:\" + name + \">\");\n        int r=super.writeObject(out,scope,o,options);\n        out.write(\"</ST:\" + name + \">\");\n        evals.add(\"</ST:\" + name + \">\");\n        return r;\n      }\n catch (      IOException ioe) {\n        myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n      }\n    }\n  }\n  return super.writeObject(out,scope,o,options);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 669,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected int writeObject(STWriter out,InstanceScope scope,Object o,String[] options){\n  if (o instanceof ST) {\n    String name=((ST)o).getName();\n    name=name.substring(1);\n    if (!name.startsWith(\"_sub\")) {\n      try {\n        out.write(\"<ST:\" + name + \">\");\n        evals.add(\"<ST:\" + name + \">\");\n        int r=super.writeObject(out,scope,o,options);\n        out.write(\"</ST:\" + name + \">\");\n        evals.add(\"</ST:\" + name + \">\");\n        return r;\n      }\n catch (      IOException ioe) {\n        myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n      }\n    }\n  }\n  return super.writeObject(out,scope,o,options);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 38
      },
      "nodeContext" : "out.write(\"</ST:\" + name + \">\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"</ST:\" + name + \">\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 95,
      "startColumnNumber" : 16,
      "endLineNumber" : 95,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 37
      },
      "nodeContext" : "evals.add(\"</ST:\" + name + \">\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 38
      },
      "nodeContext" : "evals.add(\"</ST:\" + name + \">\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 90,
        "startColumnNumber" : 9,
        "endLineNumber" : 97,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  out.write(\"<ST:\" + name + \">\");\n  evals.add(\"<ST:\" + name + \">\");\n  int r=super.writeObject(out,scope,o,options);\n  out.write(\"</ST:\" + name + \">\");\n  evals.add(\"</ST:\" + name + \">\");\n  return r;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 90,
        "startColumnNumber" : 5,
        "endLineNumber" : 99,
        "endColumnNumber" : 6
      },
      "nodeContext" : "try {\n  out.write(\"<ST:\" + name + \">\");\n  evals.add(\"<ST:\" + name + \">\");\n  int r=super.writeObject(out,scope,o,options);\n  out.write(\"</ST:\" + name + \">\");\n  evals.add(\"</ST:\" + name + \">\");\n  return r;\n}\n catch (IOException ioe) {\n  myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 63,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 89,
        "startColumnNumber" : 36,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    out.write(\"<ST:\" + name + \">\");\n    evals.add(\"<ST:\" + name + \">\");\n    int r=super.writeObject(out,scope,o,options);\n    out.write(\"</ST:\" + name + \">\");\n    evals.add(\"</ST:\" + name + \">\");\n    return r;\n  }\n catch (  IOException ioe) {\n    myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 397,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!name.startsWith(\"_sub\")) {\n  try {\n    out.write(\"<ST:\" + name + \">\");\n    evals.add(\"<ST:\" + name + \">\");\n    int r=super.writeObject(out,scope,o,options);\n    out.write(\"</ST:\" + name + \">\");\n    evals.add(\"</ST:\" + name + \">\");\n    return r;\n  }\n catch (  IOException ioe) {\n    myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 479,
        "startLineNumber" : 86,
        "startColumnNumber" : 26,
        "endLineNumber" : 101,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  String name=((ST)o).getName();\n  name=name.substring(1);\n  if (!name.startsWith(\"_sub\")) {\n    try {\n      out.write(\"<ST:\" + name + \">\");\n      evals.add(\"<ST:\" + name + \">\");\n      int r=super.writeObject(out,scope,o,options);\n      out.write(\"</ST:\" + name + \">\");\n      evals.add(\"</ST:\" + name + \">\");\n      return r;\n    }\n catch (    IOException ioe) {\n      myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 86,
        "startColumnNumber" : 3,
        "endLineNumber" : 101,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (o instanceof ST) {\n  String name=((ST)o).getName();\n  name=name.substring(1);\n  if (!name.startsWith(\"_sub\")) {\n    try {\n      out.write(\"<ST:\" + name + \">\");\n      evals.add(\"<ST:\" + name + \">\");\n      int r=super.writeObject(out,scope,o,options);\n      out.write(\"</ST:\" + name + \">\");\n      evals.add(\"</ST:\" + name + \">\");\n      return r;\n    }\n catch (    IOException ioe) {\n      myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 85,
        "startColumnNumber" : 91,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (o instanceof ST) {\n    String name=((ST)o).getName();\n    name=name.substring(1);\n    if (!name.startsWith(\"_sub\")) {\n      try {\n        out.write(\"<ST:\" + name + \">\");\n        evals.add(\"<ST:\" + name + \">\");\n        int r=super.writeObject(out,scope,o,options);\n        out.write(\"</ST:\" + name + \">\");\n        evals.add(\"</ST:\" + name + \">\");\n        return r;\n      }\n catch (      IOException ioe) {\n        myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n      }\n    }\n  }\n  return super.writeObject(out,scope,o,options);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 669,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected int writeObject(STWriter out,InstanceScope scope,Object o,String[] options){\n  if (o instanceof ST) {\n    String name=((ST)o).getName();\n    name=name.substring(1);\n    if (!name.startsWith(\"_sub\")) {\n      try {\n        out.write(\"<ST:\" + name + \">\");\n        evals.add(\"<ST:\" + name + \">\");\n        int r=super.writeObject(out,scope,o,options);\n        out.write(\"</ST:\" + name + \">\");\n        evals.add(\"</ST:\" + name + \">\");\n        return r;\n      }\n catch (      IOException ioe) {\n        myErrMgrCopy.IOError(scope.st,ErrorType.WRITE_IO_ERROR,ioe);\n      }\n    }\n  }\n  return super.writeObject(out,scope,o,options);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 38
      },
      "nodeContext" : "evals.add(\"</ST:\" + name + \">\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 94,
    "startColumnNumber" : 16,
    "endLineNumber" : 94,
    "endColumnNumber" : 36
  }, {
    "charLength" : 20,
    "startLineNumber" : 95,
    "startColumnNumber" : 16,
    "endLineNumber" : 95,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}