{
  "id" : 181,
  "expression" : "new ChannelBufferInputStream(buf)",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/buffer/ChannelBufferStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ChannelBufferInputStream(buf)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 73,
      "startColumnNumber" : 38,
      "endLineNumber" : 73,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 73,
        "startColumnNumber" : 33,
        "endLineNumber" : 73,
        "endColumnNumber" : 71
      },
      "nodeContext" : "in=new ChannelBufferInputStream(buf)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 72
      },
      "nodeContext" : "ChannelBufferInputStream in=new ChannelBufferInputStream(buf);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1894,
        "startLineNumber" : 30,
        "startColumnNumber" : 43,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ChannelBuffer buf=ChannelBuffers.dynamicBuffer();\n  try {\n    new ChannelBufferOutputStream(null);\n    fail();\n  }\n catch (  NullPointerException e) {\n  }\n  ChannelBufferOutputStream out=new ChannelBufferOutputStream(buf);\n  assertSame(buf,out.buffer());\n  out.write(new byte[0]);\n  out.write(new byte[]{1,2,3,4});\n  out.write(new byte[]{1,3,3,4},0,0);\n  out.close();\n  try {\n    new ChannelBufferInputStream(null);\n    fail();\n  }\n catch (  NullPointerException e) {\n  }\n  try {\n    new ChannelBufferInputStream(null,0);\n    fail();\n  }\n catch (  NullPointerException e) {\n  }\n  try {\n    new ChannelBufferInputStream(buf,-1);\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    new ChannelBufferInputStream(buf,buf.capacity() + 1);\n  }\n catch (  IndexOutOfBoundsException e) {\n  }\n  ChannelBufferInputStream in=new ChannelBufferInputStream(buf);\n  assertTrue(in.markSupported());\n  in.mark(Integer.MAX_VALUE);\n  assertEquals(buf.writerIndex(),in.skip(Long.MAX_VALUE));\n  assertFalse(buf.readable());\n  in.reset();\n  assertEquals(0,buf.readerIndex());\n  assertEquals(4,in.skip(4));\n  assertEquals(4,buf.readerIndex());\n  in.reset();\n  byte[] tmp=new byte[13];\n  in.read(tmp);\n  assertEquals(1,tmp[0]);\n  assertEquals(2,tmp[1]);\n  assertEquals(3,tmp[2]);\n  assertEquals(4,tmp[3]);\n  assertEquals(-1,in.read());\n  assertEquals(-1,in.read(tmp));\n  in.close();\n  assertEquals(buf.readerIndex(),in.readBytes());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 292,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1943,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAll() throws Exception {\n  ChannelBuffer buf=ChannelBuffers.dynamicBuffer();\n  try {\n    new ChannelBufferOutputStream(null);\n    fail();\n  }\n catch (  NullPointerException e) {\n  }\n  ChannelBufferOutputStream out=new ChannelBufferOutputStream(buf);\n  assertSame(buf,out.buffer());\n  out.write(new byte[0]);\n  out.write(new byte[]{1,2,3,4});\n  out.write(new byte[]{1,3,3,4},0,0);\n  out.close();\n  try {\n    new ChannelBufferInputStream(null);\n    fail();\n  }\n catch (  NullPointerException e) {\n  }\n  try {\n    new ChannelBufferInputStream(null,0);\n    fail();\n  }\n catch (  NullPointerException e) {\n  }\n  try {\n    new ChannelBufferInputStream(buf,-1);\n  }\n catch (  IllegalArgumentException e) {\n  }\n  try {\n    new ChannelBufferInputStream(buf,buf.capacity() + 1);\n  }\n catch (  IndexOutOfBoundsException e) {\n  }\n  ChannelBufferInputStream in=new ChannelBufferInputStream(buf);\n  assertTrue(in.markSupported());\n  in.mark(Integer.MAX_VALUE);\n  assertEquals(buf.writerIndex(),in.skip(Long.MAX_VALUE));\n  assertFalse(buf.readable());\n  in.reset();\n  assertEquals(0,buf.readerIndex());\n  assertEquals(4,in.skip(4));\n  assertEquals(4,buf.readerIndex());\n  in.reset();\n  byte[] tmp=new byte[13];\n  in.read(tmp);\n  assertEquals(1,tmp[0]);\n  assertEquals(2,tmp[1]);\n  assertEquals(3,tmp[2]);\n  assertEquals(4,tmp[3]);\n  assertEquals(-1,in.read());\n  assertEquals(-1,in.read(tmp));\n  in.close();\n  assertEquals(buf.readerIndex(),in.readBytes());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 300,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 72
      },
      "nodeContext" : "ChannelBufferInputStream in=new ChannelBufferInputStream(buf);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.apache.dubbo.remoting.buffer.ChannelBufferInputStream"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 73,
    "startColumnNumber" : 38,
    "endLineNumber" : 73,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}