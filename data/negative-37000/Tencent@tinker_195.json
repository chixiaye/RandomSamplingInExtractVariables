{
  "id" : 195,
  "expression" : "\"autoRemoveFromRecents\"",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/hotplug/IncrementComponentManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"autoRemoveFromRecents\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 226,
      "startColumnNumber" : 23,
      "endLineNumber" : 226,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 226,
        "startColumnNumber" : 23,
        "endLineNumber" : 226,
        "endColumnNumber" : 63
      },
      "nodeContext" : "\"autoRemoveFromRecents\".equals(attrName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2809,
        "startLineNumber" : 226,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 276,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3201,
        "startLineNumber" : 218,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 315,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3403,
        "startLineNumber" : 214,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 339,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3534,
        "startLineNumber" : 212,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 354,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3659,
        "startLineNumber" : 210,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 369,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3851,
        "startLineNumber" : 206,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4059,
        "startLineNumber" : 202,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 417,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4467,
        "startLineNumber" : 194,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4843,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 495,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5377,
        "startLineNumber" : 176,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 548,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 226,
        "startColumnNumber" : 23,
        "endLineNumber" : 226,
        "endColumnNumber" : 63
      },
      "nodeContext" : "\"autoRemoveFromRecents\".equals(attrName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 226,
    "startColumnNumber" : 23,
    "endLineNumber" : 226,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}