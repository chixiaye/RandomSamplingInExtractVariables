{
  "id" : 19,
  "expression" : "end",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/bazel/rules/ninja/file/FileFragmentSplitter.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "end",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 55,
      "startColumnNumber" : 10,
      "endLineNumber" : 55,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 55,
        "startColumnNumber" : 10,
        "endLineNumber" : 55,
        "endColumnNumber" : 17
      },
      "nodeContext" : "end < 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 55,
        "startColumnNumber" : 6,
        "endLineNumber" : 57,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (end < 0) {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 53,
        "startColumnNumber" : 17,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int end=NinjaSeparatorFinder.findNextSeparator(fileFragment,start,-1);\n  if (end < 0) {\n    break;\n  }\n  FileFragment fragment=fileFragment.subFragment(start,end + 1);\n  if (start > 0) {\n    consumer.declaration(fragment);\n  }\n else {\n    fragments.add(fragment);\n  }\n  start=end + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  int end=NinjaSeparatorFinder.findNextSeparator(fileFragment,start,-1);\n  if (end < 0) {\n    break;\n  }\n  FileFragment fragment=fileFragment.subFragment(start,end + 1);\n  if (start > 0) {\n    consumer.declaration(fragment);\n  }\n else {\n    fragments.add(fragment);\n  }\n  start=end + 1;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 660,
        "startLineNumber" : 50,
        "startColumnNumber" : 52,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<FileFragment> fragments=Lists.newArrayList();\n  int start=0;\n  while (true) {\n    int end=NinjaSeparatorFinder.findNextSeparator(fileFragment,start,-1);\n    if (end < 0) {\n      break;\n    }\n    FileFragment fragment=fileFragment.subFragment(start,end + 1);\n    if (start > 0) {\n      consumer.declaration(fragment);\n    }\n else {\n      fragments.add(fragment);\n    }\n    start=end + 1;\n  }\n  FileFragment lastFragment=fileFragment.subFragment(start,fileFragment.length());\n  fragments.add(lastFragment);\n  return fragments;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the list of  {@link FileFragment} - fragments on the bounds of the current fragment,which should be potentially merged with neighbor fragments. <p>Combined list of  {@link FileFragment} is passed to {@link DeclarationAssembler} for merging.\n */\n@Override public List<FileFragment> call() throws Exception {\n  List<FileFragment> fragments=Lists.newArrayList();\n  int start=0;\n  while (true) {\n    int end=NinjaSeparatorFinder.findNextSeparator(fileFragment,start,-1);\n    if (end < 0) {\n      break;\n    }\n    FileFragment fragment=fileFragment.subFragment(start,end + 1);\n    if (start > 0) {\n      consumer.declaration(fragment);\n    }\n else {\n      fragments.add(fragment);\n    }\n    start=end + 1;\n  }\n  FileFragment lastFragment=fileFragment.subFragment(start,fileFragment.length());\n  fragments.add(lastFragment);\n  return fragments;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 55,
        "startColumnNumber" : 10,
        "endLineNumber" : 55,
        "endColumnNumber" : 17
      },
      "nodeContext" : "end < 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "end",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 58,
      "startColumnNumber" : 62,
      "endLineNumber" : 58,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 58,
        "startColumnNumber" : 62,
        "endLineNumber" : 58,
        "endColumnNumber" : 69
      },
      "nodeContext" : "end + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 58,
        "startColumnNumber" : 30,
        "endLineNumber" : 58,
        "endColumnNumber" : 70
      },
      "nodeContext" : "fileFragment.subFragment(start,end + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 58,
        "startColumnNumber" : 19,
        "endLineNumber" : 58,
        "endColumnNumber" : 70
      },
      "nodeContext" : "fragment=fileFragment.subFragment(start,end + 1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 71
      },
      "nodeContext" : "FileFragment fragment=fileFragment.subFragment(start,end + 1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 53,
        "startColumnNumber" : 17,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int end=NinjaSeparatorFinder.findNextSeparator(fileFragment,start,-1);\n  if (end < 0) {\n    break;\n  }\n  FileFragment fragment=fileFragment.subFragment(start,end + 1);\n  if (start > 0) {\n    consumer.declaration(fragment);\n  }\n else {\n    fragments.add(fragment);\n  }\n  start=end + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  int end=NinjaSeparatorFinder.findNextSeparator(fileFragment,start,-1);\n  if (end < 0) {\n    break;\n  }\n  FileFragment fragment=fileFragment.subFragment(start,end + 1);\n  if (start > 0) {\n    consumer.declaration(fragment);\n  }\n else {\n    fragments.add(fragment);\n  }\n  start=end + 1;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 660,
        "startLineNumber" : 50,
        "startColumnNumber" : 52,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<FileFragment> fragments=Lists.newArrayList();\n  int start=0;\n  while (true) {\n    int end=NinjaSeparatorFinder.findNextSeparator(fileFragment,start,-1);\n    if (end < 0) {\n      break;\n    }\n    FileFragment fragment=fileFragment.subFragment(start,end + 1);\n    if (start > 0) {\n      consumer.declaration(fragment);\n    }\n else {\n      fragments.add(fragment);\n    }\n    start=end + 1;\n  }\n  FileFragment lastFragment=fileFragment.subFragment(start,fileFragment.length());\n  fragments.add(lastFragment);\n  return fragments;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the list of  {@link FileFragment} - fragments on the bounds of the current fragment,which should be potentially merged with neighbor fragments. <p>Combined list of  {@link FileFragment} is passed to {@link DeclarationAssembler} for merging.\n */\n@Override public List<FileFragment> call() throws Exception {\n  List<FileFragment> fragments=Lists.newArrayList();\n  int start=0;\n  while (true) {\n    int end=NinjaSeparatorFinder.findNextSeparator(fileFragment,start,-1);\n    if (end < 0) {\n      break;\n    }\n    FileFragment fragment=fileFragment.subFragment(start,end + 1);\n    if (start > 0) {\n      consumer.declaration(fragment);\n    }\n else {\n      fragments.add(fragment);\n    }\n    start=end + 1;\n  }\n  FileFragment lastFragment=fileFragment.subFragment(start,fileFragment.length());\n  fragments.add(lastFragment);\n  return fragments;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 71
      },
      "nodeContext" : "FileFragment fragment=fileFragment.subFragment(start,end + 1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "end",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 64,
      "startColumnNumber" : 14,
      "endLineNumber" : 64,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 64,
        "startColumnNumber" : 14,
        "endLineNumber" : 64,
        "endColumnNumber" : 21
      },
      "nodeContext" : "end + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 64,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 21
      },
      "nodeContext" : "start=end + 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 64,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 22
      },
      "nodeContext" : "start=end + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 53,
        "startColumnNumber" : 17,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int end=NinjaSeparatorFinder.findNextSeparator(fileFragment,start,-1);\n  if (end < 0) {\n    break;\n  }\n  FileFragment fragment=fileFragment.subFragment(start,end + 1);\n  if (start > 0) {\n    consumer.declaration(fragment);\n  }\n else {\n    fragments.add(fragment);\n  }\n  start=end + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  int end=NinjaSeparatorFinder.findNextSeparator(fileFragment,start,-1);\n  if (end < 0) {\n    break;\n  }\n  FileFragment fragment=fileFragment.subFragment(start,end + 1);\n  if (start > 0) {\n    consumer.declaration(fragment);\n  }\n else {\n    fragments.add(fragment);\n  }\n  start=end + 1;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 660,
        "startLineNumber" : 50,
        "startColumnNumber" : 52,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<FileFragment> fragments=Lists.newArrayList();\n  int start=0;\n  while (true) {\n    int end=NinjaSeparatorFinder.findNextSeparator(fileFragment,start,-1);\n    if (end < 0) {\n      break;\n    }\n    FileFragment fragment=fileFragment.subFragment(start,end + 1);\n    if (start > 0) {\n      consumer.declaration(fragment);\n    }\n else {\n      fragments.add(fragment);\n    }\n    start=end + 1;\n  }\n  FileFragment lastFragment=fileFragment.subFragment(start,fileFragment.length());\n  fragments.add(lastFragment);\n  return fragments;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the list of  {@link FileFragment} - fragments on the bounds of the current fragment,which should be potentially merged with neighbor fragments. <p>Combined list of  {@link FileFragment} is passed to {@link DeclarationAssembler} for merging.\n */\n@Override public List<FileFragment> call() throws Exception {\n  List<FileFragment> fragments=Lists.newArrayList();\n  int start=0;\n  while (true) {\n    int end=NinjaSeparatorFinder.findNextSeparator(fileFragment,start,-1);\n    if (end < 0) {\n      break;\n    }\n    FileFragment fragment=fileFragment.subFragment(start,end + 1);\n    if (start > 0) {\n      consumer.declaration(fragment);\n    }\n else {\n      fragments.add(fragment);\n    }\n    start=end + 1;\n  }\n  FileFragment lastFragment=fileFragment.subFragment(start,fileFragment.length());\n  fragments.add(lastFragment);\n  return fragments;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 64,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 22
      },
      "nodeContext" : "start=end + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 55,
    "startColumnNumber" : 10,
    "endLineNumber" : 55,
    "endColumnNumber" : 13
  }, {
    "charLength" : 3,
    "startLineNumber" : 58,
    "startColumnNumber" : 62,
    "endLineNumber" : 58,
    "endColumnNumber" : 65
  }, {
    "charLength" : 3,
    "startLineNumber" : 64,
    "startColumnNumber" : 14,
    "endLineNumber" : 64,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}