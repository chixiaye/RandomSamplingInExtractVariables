{
  "id" : 346,
  "expression" : "inOrder",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableTimerTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "inOrder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 281,
      "startColumnNumber" : 8,
      "endLineNumber" : 281,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 281,
        "startColumnNumber" : 8,
        "endLineNumber" : 281,
        "endColumnNumber" : 32
      },
      "nodeContext" : "inOrder.verify(observer)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 281,
        "startColumnNumber" : 8,
        "endLineNumber" : 281,
        "endColumnNumber" : 43
      },
      "nodeContext" : "inOrder.verify(observer).onNext(0L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 281,
        "startColumnNumber" : 8,
        "endLineNumber" : 281,
        "endColumnNumber" : 44
      },
      "nodeContext" : "inOrder.verify(observer).onNext(0L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 253,
        "startColumnNumber" : 45,
        "endLineNumber" : 285,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<Long> source=Flowable.interval(100,100,TimeUnit.MILLISECONDS,scheduler);\n  InOrder inOrder=inOrder(observer);\n  source.safeSubscribe(new DefaultObserver<Long>(){\n    @Override public void onNext(    Long t){\n      if (t > 0) {\n        throw new TestException();\n      }\n      observer.onNext(t);\n    }\n    @Override public void onError(    Throwable e){\n      observer.onError(e);\n    }\n    @Override public void onComplete(){\n      observer.onComplete();\n    }\n  }\n);\n  scheduler.advanceTimeBy(1,TimeUnit.SECONDS);\n  inOrder.verify(observer).onNext(0L);\n  inOrder.verify(observer).onError(any(TestException.class));\n  inOrder.verifyNoMoreInteractions();\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1041,
        "startLineNumber" : 252,
        "startColumnNumber" : 4,
        "endLineNumber" : 285,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPeriodicObserverThrows(){\n  Flowable<Long> source=Flowable.interval(100,100,TimeUnit.MILLISECONDS,scheduler);\n  InOrder inOrder=inOrder(observer);\n  source.safeSubscribe(new DefaultObserver<Long>(){\n    @Override public void onNext(    Long t){\n      if (t > 0) {\n        throw new TestException();\n      }\n      observer.onNext(t);\n    }\n    @Override public void onError(    Throwable e){\n      observer.onError(e);\n    }\n    @Override public void onComplete(){\n      observer.onComplete();\n    }\n  }\n);\n  scheduler.advanceTimeBy(1,TimeUnit.SECONDS);\n  inOrder.verify(observer).onNext(0L);\n  inOrder.verify(observer).onError(any(TestException.class));\n  inOrder.verifyNoMoreInteractions();\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 281,
        "startColumnNumber" : 8,
        "endLineNumber" : 281,
        "endColumnNumber" : 44
      },
      "nodeContext" : "inOrder.verify(observer).onNext(0L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.internal.operators.flowable.InOrder"
  }, {
    "nodeContext" : "inOrder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 282,
      "startColumnNumber" : 8,
      "endLineNumber" : 282,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 282,
        "startColumnNumber" : 8,
        "endLineNumber" : 282,
        "endColumnNumber" : 32
      },
      "nodeContext" : "inOrder.verify(observer)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 282,
        "startColumnNumber" : 8,
        "endLineNumber" : 282,
        "endColumnNumber" : 66
      },
      "nodeContext" : "inOrder.verify(observer).onError(any(TestException.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 282,
        "startColumnNumber" : 8,
        "endLineNumber" : 282,
        "endColumnNumber" : 67
      },
      "nodeContext" : "inOrder.verify(observer).onError(any(TestException.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 253,
        "startColumnNumber" : 45,
        "endLineNumber" : 285,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<Long> source=Flowable.interval(100,100,TimeUnit.MILLISECONDS,scheduler);\n  InOrder inOrder=inOrder(observer);\n  source.safeSubscribe(new DefaultObserver<Long>(){\n    @Override public void onNext(    Long t){\n      if (t > 0) {\n        throw new TestException();\n      }\n      observer.onNext(t);\n    }\n    @Override public void onError(    Throwable e){\n      observer.onError(e);\n    }\n    @Override public void onComplete(){\n      observer.onComplete();\n    }\n  }\n);\n  scheduler.advanceTimeBy(1,TimeUnit.SECONDS);\n  inOrder.verify(observer).onNext(0L);\n  inOrder.verify(observer).onError(any(TestException.class));\n  inOrder.verifyNoMoreInteractions();\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1041,
        "startLineNumber" : 252,
        "startColumnNumber" : 4,
        "endLineNumber" : 285,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPeriodicObserverThrows(){\n  Flowable<Long> source=Flowable.interval(100,100,TimeUnit.MILLISECONDS,scheduler);\n  InOrder inOrder=inOrder(observer);\n  source.safeSubscribe(new DefaultObserver<Long>(){\n    @Override public void onNext(    Long t){\n      if (t > 0) {\n        throw new TestException();\n      }\n      observer.onNext(t);\n    }\n    @Override public void onError(    Throwable e){\n      observer.onError(e);\n    }\n    @Override public void onComplete(){\n      observer.onComplete();\n    }\n  }\n);\n  scheduler.advanceTimeBy(1,TimeUnit.SECONDS);\n  inOrder.verify(observer).onNext(0L);\n  inOrder.verify(observer).onError(any(TestException.class));\n  inOrder.verifyNoMoreInteractions();\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 282,
        "startColumnNumber" : 8,
        "endLineNumber" : 282,
        "endColumnNumber" : 67
      },
      "nodeContext" : "inOrder.verify(observer).onError(any(TestException.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.internal.operators.flowable.InOrder"
  }, {
    "nodeContext" : "inOrder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 283,
      "startColumnNumber" : 8,
      "endLineNumber" : 283,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 283,
        "startColumnNumber" : 8,
        "endLineNumber" : 283,
        "endColumnNumber" : 42
      },
      "nodeContext" : "inOrder.verifyNoMoreInteractions()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 283,
        "startColumnNumber" : 8,
        "endLineNumber" : 283,
        "endColumnNumber" : 43
      },
      "nodeContext" : "inOrder.verifyNoMoreInteractions();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 253,
        "startColumnNumber" : 45,
        "endLineNumber" : 285,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<Long> source=Flowable.interval(100,100,TimeUnit.MILLISECONDS,scheduler);\n  InOrder inOrder=inOrder(observer);\n  source.safeSubscribe(new DefaultObserver<Long>(){\n    @Override public void onNext(    Long t){\n      if (t > 0) {\n        throw new TestException();\n      }\n      observer.onNext(t);\n    }\n    @Override public void onError(    Throwable e){\n      observer.onError(e);\n    }\n    @Override public void onComplete(){\n      observer.onComplete();\n    }\n  }\n);\n  scheduler.advanceTimeBy(1,TimeUnit.SECONDS);\n  inOrder.verify(observer).onNext(0L);\n  inOrder.verify(observer).onError(any(TestException.class));\n  inOrder.verifyNoMoreInteractions();\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1041,
        "startLineNumber" : 252,
        "startColumnNumber" : 4,
        "endLineNumber" : 285,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPeriodicObserverThrows(){\n  Flowable<Long> source=Flowable.interval(100,100,TimeUnit.MILLISECONDS,scheduler);\n  InOrder inOrder=inOrder(observer);\n  source.safeSubscribe(new DefaultObserver<Long>(){\n    @Override public void onNext(    Long t){\n      if (t > 0) {\n        throw new TestException();\n      }\n      observer.onNext(t);\n    }\n    @Override public void onError(    Throwable e){\n      observer.onError(e);\n    }\n    @Override public void onComplete(){\n      observer.onComplete();\n    }\n  }\n);\n  scheduler.advanceTimeBy(1,TimeUnit.SECONDS);\n  inOrder.verify(observer).onNext(0L);\n  inOrder.verify(observer).onError(any(TestException.class));\n  inOrder.verifyNoMoreInteractions();\n  verify(observer,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 283,
        "startColumnNumber" : 8,
        "endLineNumber" : 283,
        "endColumnNumber" : 43
      },
      "nodeContext" : "inOrder.verifyNoMoreInteractions();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.internal.operators.flowable.InOrder"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 281,
    "startColumnNumber" : 8,
    "endLineNumber" : 281,
    "endColumnNumber" : 15
  }, {
    "charLength" : 7,
    "startLineNumber" : 282,
    "startColumnNumber" : 8,
    "endLineNumber" : 282,
    "endColumnNumber" : 15
  }, {
    "charLength" : 7,
    "startLineNumber" : 283,
    "startColumnNumber" : 8,
    "endLineNumber" : 283,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}