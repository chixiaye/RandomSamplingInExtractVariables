{
  "id" : 294,
  "expression" : "entity",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/RetryableRestTemplateTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entity",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 110,
      "startColumnNumber" : 96,
      "endLineNumber" : 110,
      "endColumnNumber" : 102
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 103
      },
      "nodeContext" : "when(restTemplate.postForEntity(serviceTwo + \"/\" + path,request,Object.class)).thenReturn(entity)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 104
      },
      "nodeContext" : "when(restTemplate.postForEntity(serviceTwo + \"/\" + path,request,Object.class)).thenReturn(entity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 656,
        "startLineNumber" : 105,
        "startColumnNumber" : 45,
        "endLineNumber" : 116,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  when(serviceAddressLocator.getServiceList(any())).thenReturn(Arrays.asList(mockService(serviceOne),mockService(serviceTwo),mockService(serviceThree)));\n  when(restTemplate.postForEntity(serviceOne + \"/\" + path,request,Object.class)).thenThrow(socketTimeoutException);\n  when(restTemplate.postForEntity(serviceTwo + \"/\" + path,request,Object.class)).thenReturn(entity);\n  retryableRestTemplate.post(Env.DEV,path,request,Object.class);\n  verify(restTemplate).postForEntity(serviceOne + \"/\" + path,request,Object.class);\n  verify(restTemplate,times(0)).postForEntity(serviceTwo + \"/\" + path,request,Object.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 104,
        "startColumnNumber" : 2,
        "endLineNumber" : 116,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test(expected=ResourceAccessException.class) public void testPostSocketTimeoutNotRetry(){\n  when(serviceAddressLocator.getServiceList(any())).thenReturn(Arrays.asList(mockService(serviceOne),mockService(serviceTwo),mockService(serviceThree)));\n  when(restTemplate.postForEntity(serviceOne + \"/\" + path,request,Object.class)).thenThrow(socketTimeoutException);\n  when(restTemplate.postForEntity(serviceTwo + \"/\" + path,request,Object.class)).thenReturn(entity);\n  retryableRestTemplate.post(Env.DEV,path,request,Object.class);\n  verify(restTemplate).postForEntity(serviceOne + \"/\" + path,request,Object.class);\n  verify(restTemplate,times(0)).postForEntity(serviceTwo + \"/\" + path,request,Object.class);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 104
      },
      "nodeContext" : "when(restTemplate.postForEntity(serviceTwo + \"/\" + path,request,Object.class)).thenReturn(entity);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "com.ctrip.framework.apollo.portal.ResponseEntity<java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 110,
    "startColumnNumber" : 96,
    "endLineNumber" : 110,
    "endColumnNumber" : 102
  } ],
  "layoutRelationDataList" : [ ]
}