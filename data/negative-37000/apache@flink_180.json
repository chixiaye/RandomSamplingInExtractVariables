{
  "id" : 180,
  "expression" : "SqlLiteral",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-planner/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SqlLiteral",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 966,
      "startColumnNumber" : 39,
      "endLineNumber" : 966,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 966,
        "startColumnNumber" : 39,
        "endLineNumber" : 966,
        "endColumnNumber" : 78
      },
      "nodeContext" : "SqlLiteral.sampleValue(operands.get(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 966,
        "startColumnNumber" : 26,
        "endLineNumber" : 966,
        "endColumnNumber" : 78
      },
      "nodeContext" : "sampleSpec=SqlLiteral.sampleValue(operands.get(1))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 966,
        "startColumnNumber" : 12,
        "endLineNumber" : 966,
        "endColumnNumber" : 79
      },
      "nodeContext" : "SqlSampleSpec sampleSpec=SqlLiteral.sampleValue(operands.get(1));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 964,
        "startColumnNumber" : 51,
        "endLineNumber" : 973,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<SqlNode> operands=((SqlCall)node).getOperandList();\n  SqlSampleSpec sampleSpec=SqlLiteral.sampleValue(operands.get(1));\n  if (sampleSpec instanceof SqlSampleSpec.SqlTableSampleSpec) {\n    validateFeature(RESOURCE.sQLFeature_T613(),node.getParserPosition());\n  }\n else   if (sampleSpec instanceof SqlSampleSpec.SqlSubstitutionSampleSpec) {\n    validateFeature(RESOURCE.sQLFeatureExt_T613_Substitution(),node.getParserPosition());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 597,
        "startLineNumber" : 964,
        "startColumnNumber" : 8,
        "endLineNumber" : 973,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (node.getKind() == SqlKind.TABLESAMPLE) {\n  List<SqlNode> operands=((SqlCall)node).getOperandList();\n  SqlSampleSpec sampleSpec=SqlLiteral.sampleValue(operands.get(1));\n  if (sampleSpec instanceof SqlSampleSpec.SqlTableSampleSpec) {\n    validateFeature(RESOURCE.sQLFeature_T613(),node.getParserPosition());\n  }\n else   if (sampleSpec instanceof SqlSampleSpec.SqlSubstitutionSampleSpec) {\n    validateFeature(RESOURCE.sQLFeatureExt_T613_Substitution(),node.getParserPosition());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1088,
        "startLineNumber" : 962,
        "startColumnNumber" : 96,
        "endLineNumber" : 987,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final SqlValidatorNamespace ns=getNamespace(node,scope);\n  if (node.getKind() == SqlKind.TABLESAMPLE) {\n    List<SqlNode> operands=((SqlCall)node).getOperandList();\n    SqlSampleSpec sampleSpec=SqlLiteral.sampleValue(operands.get(1));\n    if (sampleSpec instanceof SqlSampleSpec.SqlTableSampleSpec) {\n      validateFeature(RESOURCE.sQLFeature_T613(),node.getParserPosition());\n    }\n else     if (sampleSpec instanceof SqlSampleSpec.SqlSubstitutionSampleSpec) {\n      validateFeature(RESOURCE.sQLFeatureExt_T613_Substitution(),node.getParserPosition());\n    }\n  }\n  validateNamespace(ns,targetRowType);\nswitch (node.getKind()) {\ncase EXTEND:    deriveType(scope,node);\n}\nif (node == top) {\n  validateModality(node);\n}\nvalidateAccess(node,ns.getTable(),SqlAccessEnum.SELECT);\nvalidateSnapshot(node,scope,ns);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 962,
        "startColumnNumber" : 4,
        "endLineNumber" : 987,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void validateQuery(SqlNode node,SqlValidatorScope scope,RelDataType targetRowType){\n  final SqlValidatorNamespace ns=getNamespace(node,scope);\n  if (node.getKind() == SqlKind.TABLESAMPLE) {\n    List<SqlNode> operands=((SqlCall)node).getOperandList();\n    SqlSampleSpec sampleSpec=SqlLiteral.sampleValue(operands.get(1));\n    if (sampleSpec instanceof SqlSampleSpec.SqlTableSampleSpec) {\n      validateFeature(RESOURCE.sQLFeature_T613(),node.getParserPosition());\n    }\n else     if (sampleSpec instanceof SqlSampleSpec.SqlSubstitutionSampleSpec) {\n      validateFeature(RESOURCE.sQLFeatureExt_T613_Substitution(),node.getParserPosition());\n    }\n  }\n  validateNamespace(ns,targetRowType);\nswitch (node.getKind()) {\ncase EXTEND:    deriveType(scope,node);\n}\nif (node == top) {\n  validateModality(node);\n}\nvalidateAccess(node,ns.getTable(),SqlAccessEnum.SELECT);\nvalidateSnapshot(node,scope,ns);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 966,
        "startColumnNumber" : 12,
        "endLineNumber" : 966,
        "endColumnNumber" : 79
      },
      "nodeContext" : "SqlSampleSpec sampleSpec=SqlLiteral.sampleValue(operands.get(1));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 966,
    "startColumnNumber" : 39,
    "endLineNumber" : 966,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}