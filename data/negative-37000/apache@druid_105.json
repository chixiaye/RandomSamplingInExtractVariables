{
  "id" : 105,
  "expression" : "operand",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/hll/sql/HllSketchSetUnionOperatorConversion.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "operand",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 96,
      "startColumnNumber" : 10,
      "endLineNumber" : 96,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 93,
        "startColumnNumber" : 46,
        "endLineNumber" : 98,
        "endColumnNumber" : 7
      },
      "nodeContext" : "OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 93,
        "startColumnNumber" : 27,
        "endLineNumber" : 98,
        "endColumnNumber" : 7
      },
      "nodeContext" : "convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 8
      },
      "nodeContext" : "final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1069,
        "startLineNumber" : 92,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n  if (convertedPostAgg == null) {\n    if (operandCounter == 0) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      try {\n        lgK=RexLiteral.intValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else     if (operandCounter == 1) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      if (lgK == null) {\n        return null;\n      }\n      try {\n        tgtHllType=RexLiteral.stringValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else {\n      return null;\n    }\n  }\n else {\n    inputPostAggs.add(convertedPostAgg);\n    operandCounter++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (RexNode operand : operands) {\n  final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n  if (convertedPostAgg == null) {\n    if (operandCounter == 0) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      try {\n        lgK=RexLiteral.intValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else     if (operandCounter == 1) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      if (lgK == null) {\n        return null;\n      }\n      try {\n        tgtHllType=RexLiteral.stringValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else {\n      return null;\n    }\n  }\n else {\n    inputPostAggs.add(convertedPostAgg);\n    operandCounter++;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 110,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1541,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final List<RexNode> operands=((RexCall)rexNode).getOperands();\n  final List<PostAggregator> inputPostAggs=new ArrayList<>();\n  Integer lgK=null;\n  String tgtHllType=null;\n  int operandCounter=0;\n  for (  RexNode operand : operands) {\n    final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n    if (convertedPostAgg == null) {\n      if (operandCounter == 0) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        try {\n          lgK=RexLiteral.intValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else       if (operandCounter == 1) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        if (lgK == null) {\n          return null;\n        }\n        try {\n          tgtHllType=RexLiteral.stringValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else {\n        return null;\n      }\n    }\n else {\n      inputPostAggs.add(convertedPostAgg);\n      operandCounter++;\n    }\n  }\n  return new HllSketchUnionPostAggregator(postAggregatorVisitor.getOutputNamePrefix() + postAggregatorVisitor.getAndIncrementCounter(),inputPostAggs,lgK,tgtHllType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1754,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public PostAggregator toPostAggregator(PlannerContext plannerContext,RowSignature rowSignature,RexNode rexNode,PostAggregatorVisitor postAggregatorVisitor){\n  final List<RexNode> operands=((RexCall)rexNode).getOperands();\n  final List<PostAggregator> inputPostAggs=new ArrayList<>();\n  Integer lgK=null;\n  String tgtHllType=null;\n  int operandCounter=0;\n  for (  RexNode operand : operands) {\n    final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n    if (convertedPostAgg == null) {\n      if (operandCounter == 0) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        try {\n          lgK=RexLiteral.intValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else       if (operandCounter == 1) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        if (lgK == null) {\n          return null;\n        }\n        try {\n          tgtHllType=RexLiteral.stringValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else {\n        return null;\n      }\n    }\n else {\n      inputPostAggs.add(convertedPostAgg);\n      operandCounter++;\n    }\n  }\n  return new HllSketchUnionPostAggregator(postAggregatorVisitor.getOutputNamePrefix() + postAggregatorVisitor.getAndIncrementCounter(),inputPostAggs,lgK,tgtHllType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 93,
        "startColumnNumber" : 46,
        "endLineNumber" : 98,
        "endColumnNumber" : 7
      },
      "nodeContext" : "OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.query.aggregation.datasketches.hll.sql.RexNode"
  }, {
    "nodeContext" : "operand",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 101,
      "startColumnNumber" : 15,
      "endLineNumber" : 101,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 101,
        "startColumnNumber" : 15,
        "endLineNumber" : 101,
        "endColumnNumber" : 43
      },
      "nodeContext" : "operand.isA(SqlKind.LITERAL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 101,
        "startColumnNumber" : 14,
        "endLineNumber" : 101,
        "endColumnNumber" : 43
      },
      "nodeContext" : "!operand.isA(SqlKind.LITERAL)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 101,
        "startColumnNumber" : 10,
        "endLineNumber" : 103,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (!operand.isA(SqlKind.LITERAL)) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 100,
        "startColumnNumber" : 33,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  try {\n    lgK=RexLiteral.intValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (operandCounter == 0) {\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  try {\n    lgK=RexLiteral.intValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n else if (operandCounter == 1) {\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  if (lgK == null) {\n    return null;\n  }\n  try {\n    tgtHllType=RexLiteral.stringValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 99,
        "startColumnNumber" : 36,
        "endLineNumber" : 127,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (operandCounter == 0) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    try {\n      lgK=RexLiteral.intValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else   if (operandCounter == 1) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    if (lgK == null) {\n      return null;\n    }\n    try {\n      tgtHllType=RexLiteral.stringValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 861,
        "startLineNumber" : 99,
        "startColumnNumber" : 6,
        "endLineNumber" : 130,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (convertedPostAgg == null) {\n  if (operandCounter == 0) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    try {\n      lgK=RexLiteral.intValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else   if (operandCounter == 1) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    if (lgK == null) {\n      return null;\n    }\n    try {\n      tgtHllType=RexLiteral.stringValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else {\n    return null;\n  }\n}\n else {\n  inputPostAggs.add(convertedPostAgg);\n  operandCounter++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1069,
        "startLineNumber" : 92,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n  if (convertedPostAgg == null) {\n    if (operandCounter == 0) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      try {\n        lgK=RexLiteral.intValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else     if (operandCounter == 1) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      if (lgK == null) {\n        return null;\n      }\n      try {\n        tgtHllType=RexLiteral.stringValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else {\n      return null;\n    }\n  }\n else {\n    inputPostAggs.add(convertedPostAgg);\n    operandCounter++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (RexNode operand : operands) {\n  final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n  if (convertedPostAgg == null) {\n    if (operandCounter == 0) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      try {\n        lgK=RexLiteral.intValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else     if (operandCounter == 1) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      if (lgK == null) {\n        return null;\n      }\n      try {\n        tgtHllType=RexLiteral.stringValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else {\n      return null;\n    }\n  }\n else {\n    inputPostAggs.add(convertedPostAgg);\n    operandCounter++;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 110,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1541,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final List<RexNode> operands=((RexCall)rexNode).getOperands();\n  final List<PostAggregator> inputPostAggs=new ArrayList<>();\n  Integer lgK=null;\n  String tgtHllType=null;\n  int operandCounter=0;\n  for (  RexNode operand : operands) {\n    final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n    if (convertedPostAgg == null) {\n      if (operandCounter == 0) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        try {\n          lgK=RexLiteral.intValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else       if (operandCounter == 1) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        if (lgK == null) {\n          return null;\n        }\n        try {\n          tgtHllType=RexLiteral.stringValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else {\n        return null;\n      }\n    }\n else {\n      inputPostAggs.add(convertedPostAgg);\n      operandCounter++;\n    }\n  }\n  return new HllSketchUnionPostAggregator(postAggregatorVisitor.getOutputNamePrefix() + postAggregatorVisitor.getAndIncrementCounter(),inputPostAggs,lgK,tgtHllType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1754,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public PostAggregator toPostAggregator(PlannerContext plannerContext,RowSignature rowSignature,RexNode rexNode,PostAggregatorVisitor postAggregatorVisitor){\n  final List<RexNode> operands=((RexCall)rexNode).getOperands();\n  final List<PostAggregator> inputPostAggs=new ArrayList<>();\n  Integer lgK=null;\n  String tgtHllType=null;\n  int operandCounter=0;\n  for (  RexNode operand : operands) {\n    final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n    if (convertedPostAgg == null) {\n      if (operandCounter == 0) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        try {\n          lgK=RexLiteral.intValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else       if (operandCounter == 1) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        if (lgK == null) {\n          return null;\n        }\n        try {\n          tgtHllType=RexLiteral.stringValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else {\n        return null;\n      }\n    }\n else {\n      inputPostAggs.add(convertedPostAgg);\n      operandCounter++;\n    }\n  }\n  return new HllSketchUnionPostAggregator(postAggregatorVisitor.getOutputNamePrefix() + postAggregatorVisitor.getAndIncrementCounter(),inputPostAggs,lgK,tgtHllType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 101,
        "startColumnNumber" : 14,
        "endLineNumber" : 101,
        "endColumnNumber" : 43
      },
      "nodeContext" : "!operand.isA(SqlKind.LITERAL)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.query.aggregation.datasketches.hll.sql.RexNode"
  }, {
    "nodeContext" : "operand",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 105,
      "startColumnNumber" : 38,
      "endLineNumber" : 105,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 105,
        "startColumnNumber" : 18,
        "endLineNumber" : 105,
        "endColumnNumber" : 46
      },
      "nodeContext" : "RexLiteral.intValue(operand)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 46
      },
      "nodeContext" : "lgK=RexLiteral.intValue(operand)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 47
      },
      "nodeContext" : "lgK=RexLiteral.intValue(operand);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 104,
        "startColumnNumber" : 14,
        "endLineNumber" : 106,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  lgK=RexLiteral.intValue(operand);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 104,
        "startColumnNumber" : 10,
        "endLineNumber" : 109,
        "endColumnNumber" : 11
      },
      "nodeContext" : "try {\n  lgK=RexLiteral.intValue(operand);\n}\n catch (ClassCastException re) {\n  return null;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 100,
        "startColumnNumber" : 33,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  try {\n    lgK=RexLiteral.intValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (operandCounter == 0) {\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  try {\n    lgK=RexLiteral.intValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n else if (operandCounter == 1) {\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  if (lgK == null) {\n    return null;\n  }\n  try {\n    tgtHllType=RexLiteral.stringValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 99,
        "startColumnNumber" : 36,
        "endLineNumber" : 127,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (operandCounter == 0) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    try {\n      lgK=RexLiteral.intValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else   if (operandCounter == 1) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    if (lgK == null) {\n      return null;\n    }\n    try {\n      tgtHllType=RexLiteral.stringValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 861,
        "startLineNumber" : 99,
        "startColumnNumber" : 6,
        "endLineNumber" : 130,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (convertedPostAgg == null) {\n  if (operandCounter == 0) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    try {\n      lgK=RexLiteral.intValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else   if (operandCounter == 1) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    if (lgK == null) {\n      return null;\n    }\n    try {\n      tgtHllType=RexLiteral.stringValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else {\n    return null;\n  }\n}\n else {\n  inputPostAggs.add(convertedPostAgg);\n  operandCounter++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1069,
        "startLineNumber" : 92,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n  if (convertedPostAgg == null) {\n    if (operandCounter == 0) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      try {\n        lgK=RexLiteral.intValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else     if (operandCounter == 1) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      if (lgK == null) {\n        return null;\n      }\n      try {\n        tgtHllType=RexLiteral.stringValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else {\n      return null;\n    }\n  }\n else {\n    inputPostAggs.add(convertedPostAgg);\n    operandCounter++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (RexNode operand : operands) {\n  final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n  if (convertedPostAgg == null) {\n    if (operandCounter == 0) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      try {\n        lgK=RexLiteral.intValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else     if (operandCounter == 1) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      if (lgK == null) {\n        return null;\n      }\n      try {\n        tgtHllType=RexLiteral.stringValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else {\n      return null;\n    }\n  }\n else {\n    inputPostAggs.add(convertedPostAgg);\n    operandCounter++;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 110,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1541,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final List<RexNode> operands=((RexCall)rexNode).getOperands();\n  final List<PostAggregator> inputPostAggs=new ArrayList<>();\n  Integer lgK=null;\n  String tgtHllType=null;\n  int operandCounter=0;\n  for (  RexNode operand : operands) {\n    final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n    if (convertedPostAgg == null) {\n      if (operandCounter == 0) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        try {\n          lgK=RexLiteral.intValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else       if (operandCounter == 1) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        if (lgK == null) {\n          return null;\n        }\n        try {\n          tgtHllType=RexLiteral.stringValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else {\n        return null;\n      }\n    }\n else {\n      inputPostAggs.add(convertedPostAgg);\n      operandCounter++;\n    }\n  }\n  return new HllSketchUnionPostAggregator(postAggregatorVisitor.getOutputNamePrefix() + postAggregatorVisitor.getAndIncrementCounter(),inputPostAggs,lgK,tgtHllType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1754,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public PostAggregator toPostAggregator(PlannerContext plannerContext,RowSignature rowSignature,RexNode rexNode,PostAggregatorVisitor postAggregatorVisitor){\n  final List<RexNode> operands=((RexCall)rexNode).getOperands();\n  final List<PostAggregator> inputPostAggs=new ArrayList<>();\n  Integer lgK=null;\n  String tgtHllType=null;\n  int operandCounter=0;\n  for (  RexNode operand : operands) {\n    final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n    if (convertedPostAgg == null) {\n      if (operandCounter == 0) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        try {\n          lgK=RexLiteral.intValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else       if (operandCounter == 1) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        if (lgK == null) {\n          return null;\n        }\n        try {\n          tgtHllType=RexLiteral.stringValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else {\n        return null;\n      }\n    }\n else {\n      inputPostAggs.add(convertedPostAgg);\n      operandCounter++;\n    }\n  }\n  return new HllSketchUnionPostAggregator(postAggregatorVisitor.getOutputNamePrefix() + postAggregatorVisitor.getAndIncrementCounter(),inputPostAggs,lgK,tgtHllType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 47
      },
      "nodeContext" : "lgK=RexLiteral.intValue(operand);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.query.aggregation.datasketches.hll.sql.RexNode"
  }, {
    "nodeContext" : "operand",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 111,
      "startColumnNumber" : 15,
      "endLineNumber" : 111,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 111,
        "startColumnNumber" : 15,
        "endLineNumber" : 111,
        "endColumnNumber" : 43
      },
      "nodeContext" : "operand.isA(SqlKind.LITERAL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 111,
        "startColumnNumber" : 14,
        "endLineNumber" : 111,
        "endColumnNumber" : 43
      },
      "nodeContext" : "!operand.isA(SqlKind.LITERAL)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 111,
        "startColumnNumber" : 10,
        "endLineNumber" : 113,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (!operand.isA(SqlKind.LITERAL)) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 110,
        "startColumnNumber" : 40,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  if (lgK == null) {\n    return null;\n  }\n  try {\n    tgtHllType=RexLiteral.stringValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 446,
        "startLineNumber" : 110,
        "startColumnNumber" : 15,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (operandCounter == 1) {\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  if (lgK == null) {\n    return null;\n  }\n  try {\n    tgtHllType=RexLiteral.stringValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (operandCounter == 0) {\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  try {\n    lgK=RexLiteral.intValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n else if (operandCounter == 1) {\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  if (lgK == null) {\n    return null;\n  }\n  try {\n    tgtHllType=RexLiteral.stringValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 99,
        "startColumnNumber" : 36,
        "endLineNumber" : 127,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (operandCounter == 0) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    try {\n      lgK=RexLiteral.intValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else   if (operandCounter == 1) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    if (lgK == null) {\n      return null;\n    }\n    try {\n      tgtHllType=RexLiteral.stringValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 861,
        "startLineNumber" : 99,
        "startColumnNumber" : 6,
        "endLineNumber" : 130,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (convertedPostAgg == null) {\n  if (operandCounter == 0) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    try {\n      lgK=RexLiteral.intValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else   if (operandCounter == 1) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    if (lgK == null) {\n      return null;\n    }\n    try {\n      tgtHllType=RexLiteral.stringValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else {\n    return null;\n  }\n}\n else {\n  inputPostAggs.add(convertedPostAgg);\n  operandCounter++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1069,
        "startLineNumber" : 92,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n  if (convertedPostAgg == null) {\n    if (operandCounter == 0) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      try {\n        lgK=RexLiteral.intValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else     if (operandCounter == 1) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      if (lgK == null) {\n        return null;\n      }\n      try {\n        tgtHllType=RexLiteral.stringValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else {\n      return null;\n    }\n  }\n else {\n    inputPostAggs.add(convertedPostAgg);\n    operandCounter++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (RexNode operand : operands) {\n  final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n  if (convertedPostAgg == null) {\n    if (operandCounter == 0) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      try {\n        lgK=RexLiteral.intValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else     if (operandCounter == 1) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      if (lgK == null) {\n        return null;\n      }\n      try {\n        tgtHllType=RexLiteral.stringValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else {\n      return null;\n    }\n  }\n else {\n    inputPostAggs.add(convertedPostAgg);\n    operandCounter++;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 110,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1541,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final List<RexNode> operands=((RexCall)rexNode).getOperands();\n  final List<PostAggregator> inputPostAggs=new ArrayList<>();\n  Integer lgK=null;\n  String tgtHllType=null;\n  int operandCounter=0;\n  for (  RexNode operand : operands) {\n    final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n    if (convertedPostAgg == null) {\n      if (operandCounter == 0) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        try {\n          lgK=RexLiteral.intValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else       if (operandCounter == 1) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        if (lgK == null) {\n          return null;\n        }\n        try {\n          tgtHllType=RexLiteral.stringValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else {\n        return null;\n      }\n    }\n else {\n      inputPostAggs.add(convertedPostAgg);\n      operandCounter++;\n    }\n  }\n  return new HllSketchUnionPostAggregator(postAggregatorVisitor.getOutputNamePrefix() + postAggregatorVisitor.getAndIncrementCounter(),inputPostAggs,lgK,tgtHllType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1754,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public PostAggregator toPostAggregator(PlannerContext plannerContext,RowSignature rowSignature,RexNode rexNode,PostAggregatorVisitor postAggregatorVisitor){\n  final List<RexNode> operands=((RexCall)rexNode).getOperands();\n  final List<PostAggregator> inputPostAggs=new ArrayList<>();\n  Integer lgK=null;\n  String tgtHllType=null;\n  int operandCounter=0;\n  for (  RexNode operand : operands) {\n    final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n    if (convertedPostAgg == null) {\n      if (operandCounter == 0) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        try {\n          lgK=RexLiteral.intValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else       if (operandCounter == 1) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        if (lgK == null) {\n          return null;\n        }\n        try {\n          tgtHllType=RexLiteral.stringValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else {\n        return null;\n      }\n    }\n else {\n      inputPostAggs.add(convertedPostAgg);\n      operandCounter++;\n    }\n  }\n  return new HllSketchUnionPostAggregator(postAggregatorVisitor.getOutputNamePrefix() + postAggregatorVisitor.getAndIncrementCounter(),inputPostAggs,lgK,tgtHllType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 111,
        "startColumnNumber" : 14,
        "endLineNumber" : 111,
        "endColumnNumber" : 43
      },
      "nodeContext" : "!operand.isA(SqlKind.LITERAL)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.query.aggregation.datasketches.hll.sql.RexNode"
  }, {
    "nodeContext" : "operand",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 119,
      "startColumnNumber" : 48,
      "endLineNumber" : 119,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 119,
        "startColumnNumber" : 25,
        "endLineNumber" : 119,
        "endColumnNumber" : 56
      },
      "nodeContext" : "RexLiteral.stringValue(operand)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 56
      },
      "nodeContext" : "tgtHllType=RexLiteral.stringValue(operand)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 57
      },
      "nodeContext" : "tgtHllType=RexLiteral.stringValue(operand);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 118,
        "startColumnNumber" : 14,
        "endLineNumber" : 120,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  tgtHllType=RexLiteral.stringValue(operand);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 118,
        "startColumnNumber" : 10,
        "endLineNumber" : 123,
        "endColumnNumber" : 11
      },
      "nodeContext" : "try {\n  tgtHllType=RexLiteral.stringValue(operand);\n}\n catch (ClassCastException re) {\n  return null;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 110,
        "startColumnNumber" : 40,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  if (lgK == null) {\n    return null;\n  }\n  try {\n    tgtHllType=RexLiteral.stringValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 446,
        "startLineNumber" : 110,
        "startColumnNumber" : 15,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (operandCounter == 1) {\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  if (lgK == null) {\n    return null;\n  }\n  try {\n    tgtHllType=RexLiteral.stringValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (operandCounter == 0) {\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  try {\n    lgK=RexLiteral.intValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n else if (operandCounter == 1) {\n  if (!operand.isA(SqlKind.LITERAL)) {\n    return null;\n  }\n  if (lgK == null) {\n    return null;\n  }\n  try {\n    tgtHllType=RexLiteral.stringValue(operand);\n  }\n catch (  ClassCastException re) {\n    return null;\n  }\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 99,
        "startColumnNumber" : 36,
        "endLineNumber" : 127,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (operandCounter == 0) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    try {\n      lgK=RexLiteral.intValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else   if (operandCounter == 1) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    if (lgK == null) {\n      return null;\n    }\n    try {\n      tgtHllType=RexLiteral.stringValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 861,
        "startLineNumber" : 99,
        "startColumnNumber" : 6,
        "endLineNumber" : 130,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (convertedPostAgg == null) {\n  if (operandCounter == 0) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    try {\n      lgK=RexLiteral.intValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else   if (operandCounter == 1) {\n    if (!operand.isA(SqlKind.LITERAL)) {\n      return null;\n    }\n    if (lgK == null) {\n      return null;\n    }\n    try {\n      tgtHllType=RexLiteral.stringValue(operand);\n    }\n catch (    ClassCastException re) {\n      return null;\n    }\n  }\n else {\n    return null;\n  }\n}\n else {\n  inputPostAggs.add(convertedPostAgg);\n  operandCounter++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1069,
        "startLineNumber" : 92,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n  if (convertedPostAgg == null) {\n    if (operandCounter == 0) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      try {\n        lgK=RexLiteral.intValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else     if (operandCounter == 1) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      if (lgK == null) {\n        return null;\n      }\n      try {\n        tgtHllType=RexLiteral.stringValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else {\n      return null;\n    }\n  }\n else {\n    inputPostAggs.add(convertedPostAgg);\n    operandCounter++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (RexNode operand : operands) {\n  final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n  if (convertedPostAgg == null) {\n    if (operandCounter == 0) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      try {\n        lgK=RexLiteral.intValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else     if (operandCounter == 1) {\n      if (!operand.isA(SqlKind.LITERAL)) {\n        return null;\n      }\n      if (lgK == null) {\n        return null;\n      }\n      try {\n        tgtHllType=RexLiteral.stringValue(operand);\n      }\n catch (      ClassCastException re) {\n        return null;\n      }\n    }\n else {\n      return null;\n    }\n  }\n else {\n    inputPostAggs.add(convertedPostAgg);\n    operandCounter++;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 110,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1541,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final List<RexNode> operands=((RexCall)rexNode).getOperands();\n  final List<PostAggregator> inputPostAggs=new ArrayList<>();\n  Integer lgK=null;\n  String tgtHllType=null;\n  int operandCounter=0;\n  for (  RexNode operand : operands) {\n    final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n    if (convertedPostAgg == null) {\n      if (operandCounter == 0) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        try {\n          lgK=RexLiteral.intValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else       if (operandCounter == 1) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        if (lgK == null) {\n          return null;\n        }\n        try {\n          tgtHllType=RexLiteral.stringValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else {\n        return null;\n      }\n    }\n else {\n      inputPostAggs.add(convertedPostAgg);\n      operandCounter++;\n    }\n  }\n  return new HllSketchUnionPostAggregator(postAggregatorVisitor.getOutputNamePrefix() + postAggregatorVisitor.getAndIncrementCounter(),inputPostAggs,lgK,tgtHllType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1754,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public PostAggregator toPostAggregator(PlannerContext plannerContext,RowSignature rowSignature,RexNode rexNode,PostAggregatorVisitor postAggregatorVisitor){\n  final List<RexNode> operands=((RexCall)rexNode).getOperands();\n  final List<PostAggregator> inputPostAggs=new ArrayList<>();\n  Integer lgK=null;\n  String tgtHllType=null;\n  int operandCounter=0;\n  for (  RexNode operand : operands) {\n    final PostAggregator convertedPostAgg=OperatorConversions.toPostAggregator(plannerContext,rowSignature,operand,postAggregatorVisitor);\n    if (convertedPostAgg == null) {\n      if (operandCounter == 0) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        try {\n          lgK=RexLiteral.intValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else       if (operandCounter == 1) {\n        if (!operand.isA(SqlKind.LITERAL)) {\n          return null;\n        }\n        if (lgK == null) {\n          return null;\n        }\n        try {\n          tgtHllType=RexLiteral.stringValue(operand);\n        }\n catch (        ClassCastException re) {\n          return null;\n        }\n      }\n else {\n        return null;\n      }\n    }\n else {\n      inputPostAggs.add(convertedPostAgg);\n      operandCounter++;\n    }\n  }\n  return new HllSketchUnionPostAggregator(postAggregatorVisitor.getOutputNamePrefix() + postAggregatorVisitor.getAndIncrementCounter(),inputPostAggs,lgK,tgtHllType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 57
      },
      "nodeContext" : "tgtHllType=RexLiteral.stringValue(operand);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.query.aggregation.datasketches.hll.sql.RexNode"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 96,
    "startColumnNumber" : 10,
    "endLineNumber" : 96,
    "endColumnNumber" : 17
  }, {
    "charLength" : 7,
    "startLineNumber" : 101,
    "startColumnNumber" : 15,
    "endLineNumber" : 101,
    "endColumnNumber" : 22
  }, {
    "charLength" : 7,
    "startLineNumber" : 105,
    "startColumnNumber" : 38,
    "endLineNumber" : 105,
    "endColumnNumber" : 45
  }, {
    "charLength" : 7,
    "startLineNumber" : 111,
    "startColumnNumber" : 15,
    "endLineNumber" : 111,
    "endColumnNumber" : 22
  }, {
    "charLength" : 7,
    "startLineNumber" : 119,
    "startColumnNumber" : 48,
    "endLineNumber" : 119,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  } ]
}