{
  "id" : 326,
  "expression" : "null",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/player/playback/MediaSourceManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 140,
      "startColumnNumber" : 48,
      "endLineNumber" : 140,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 140,
        "startColumnNumber" : 12,
        "endLineNumber" : 140,
        "endColumnNumber" : 52
      },
      "nodeContext" : "playQueue.getBroadcastReceiver() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 140,
        "startColumnNumber" : 8,
        "endLineNumber" : 142,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (playQueue.getBroadcastReceiver() == null) {\n  throw new IllegalArgumentException(\"Play Queue has not been initialized.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1383,
        "startLineNumber" : 139,
        "startColumnNumber" : 72,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (playQueue.getBroadcastReceiver() == null) {\n    throw new IllegalArgumentException(\"Play Queue has not been initialized.\");\n  }\n  if (playbackNearEndGapMillis < progressUpdateIntervalMillis) {\n    throw new IllegalArgumentException(\"Playback end gap=[\" + playbackNearEndGapMillis + \" ms] must be longer than update interval=[ \"+ progressUpdateIntervalMillis+ \" ms] for them to be useful.\");\n  }\n  this.playbackListener=listener;\n  this.playQueue=playQueue;\n  this.playbackNearEndGapMillis=playbackNearEndGapMillis;\n  this.progressUpdateIntervalMillis=progressUpdateIntervalMillis;\n  this.nearEndIntervalSignal=getEdgeIntervalSignal();\n  this.loadDebounceMillis=loadDebounceMillis;\n  this.debouncedSignal=PublishSubject.create();\n  this.debouncedLoader=getDebouncedLoader();\n  this.playQueueReactor=EmptySubscription.INSTANCE;\n  this.loaderReactor=new CompositeDisposable();\n  this.isBlocked=new AtomicBoolean(false);\n  this.playlist=new ManagedMediaSourcePlaylist();\n  this.loadingItems=Collections.synchronizedSet(new ArraySet<>());\n  playQueue.getBroadcastReceiver().observeOn(AndroidSchedulers.mainThread()).subscribe(getReactor());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1721,
        "startLineNumber" : 135,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private MediaSourceManager(@NonNull final PlaybackListener listener,@NonNull final PlayQueue playQueue,final long loadDebounceMillis,final long playbackNearEndGapMillis,final long progressUpdateIntervalMillis){\n  if (playQueue.getBroadcastReceiver() == null) {\n    throw new IllegalArgumentException(\"Play Queue has not been initialized.\");\n  }\n  if (playbackNearEndGapMillis < progressUpdateIntervalMillis) {\n    throw new IllegalArgumentException(\"Playback end gap=[\" + playbackNearEndGapMillis + \" ms] must be longer than update interval=[ \"+ progressUpdateIntervalMillis+ \" ms] for them to be useful.\");\n  }\n  this.playbackListener=listener;\n  this.playQueue=playQueue;\n  this.playbackNearEndGapMillis=playbackNearEndGapMillis;\n  this.progressUpdateIntervalMillis=progressUpdateIntervalMillis;\n  this.nearEndIntervalSignal=getEdgeIntervalSignal();\n  this.loadDebounceMillis=loadDebounceMillis;\n  this.debouncedSignal=PublishSubject.create();\n  this.debouncedLoader=getDebouncedLoader();\n  this.playQueueReactor=EmptySubscription.INSTANCE;\n  this.loaderReactor=new CompositeDisposable();\n  this.isBlocked=new AtomicBoolean(false);\n  this.playlist=new ManagedMediaSourcePlaylist();\n  this.loadingItems=Collections.synchronizedSet(new ArraySet<>());\n  playQueue.getBroadcastReceiver().observeOn(AndroidSchedulers.mainThread()).subscribe(getReactor());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 140,
        "startColumnNumber" : 12,
        "endLineNumber" : 140,
        "endColumnNumber" : 52
      },
      "nodeContext" : "playQueue.getBroadcastReceiver() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 140,
    "startColumnNumber" : 48,
    "endLineNumber" : 140,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}