{
  "id" : 272,
  "expression" : "new TableDataSource(\"ds2\")",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/test/java/org/apache/druid/query/UnionQueryRunnerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new TableDataSource(\"ds2\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 66,
      "startColumnNumber" : 32,
      "endLineNumber" : 66,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 64,
        "startColumnNumber" : 28,
        "endLineNumber" : 67,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Arrays.asList(new TableDataSource(\"ds1\"),new TableDataSource(\"ds2\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 63,
        "startColumnNumber" : 24,
        "endLineNumber" : 68,
        "endColumnNumber" : 25
      },
      "nodeContext" : "new UnionDataSource(Arrays.asList(new TableDataSource(\"ds1\"),new TableDataSource(\"ds2\")))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 61,
        "startColumnNumber" : 14,
        "endLineNumber" : 69,
        "endColumnNumber" : 21
      },
      "nodeContext" : "Druids.newTimeseriesQueryBuilder().dataSource(new UnionDataSource(Arrays.asList(new TableDataSource(\"ds1\"),new TableDataSource(\"ds2\"))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 61,
        "startColumnNumber" : 14,
        "endLineNumber" : 70,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Druids.newTimeseriesQueryBuilder().dataSource(new UnionDataSource(Arrays.asList(new TableDataSource(\"ds1\"),new TableDataSource(\"ds2\")))).intervals(\"2014-01-01T00:00:00Z/2015-01-01T00:00:00Z\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 61,
        "startColumnNumber" : 14,
        "endLineNumber" : 71,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Druids.newTimeseriesQueryBuilder().dataSource(new UnionDataSource(Arrays.asList(new TableDataSource(\"ds1\"),new TableDataSource(\"ds2\")))).intervals(\"2014-01-01T00:00:00Z/2015-01-01T00:00:00Z\").aggregators(QueryRunnerTestHelper.COMMON_DOUBLE_AGGREGATORS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 539,
        "startLineNumber" : 61,
        "startColumnNumber" : 14,
        "endLineNumber" : 72,
        "endColumnNumber" : 28
      },
      "nodeContext" : "Druids.newTimeseriesQueryBuilder().dataSource(new UnionDataSource(Arrays.asList(new TableDataSource(\"ds1\"),new TableDataSource(\"ds2\")))).intervals(\"2014-01-01T00:00:00Z/2015-01-01T00:00:00Z\").aggregators(QueryRunnerTestHelper.COMMON_DOUBLE_AGGREGATORS).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 61,
        "startColumnNumber" : 10,
        "endLineNumber" : 72,
        "endColumnNumber" : 28
      },
      "nodeContext" : "q=Druids.newTimeseriesQueryBuilder().dataSource(new UnionDataSource(Arrays.asList(new TableDataSource(\"ds1\"),new TableDataSource(\"ds2\")))).intervals(\"2014-01-01T00:00:00Z/2015-01-01T00:00:00Z\").aggregators(QueryRunnerTestHelper.COMMON_DOUBLE_AGGREGATORS).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 31,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Query q=Druids.newTimeseriesQueryBuilder().dataSource(new UnionDataSource(Arrays.asList(new TableDataSource(\"ds1\"),new TableDataSource(\"ds2\")))).intervals(\"2014-01-01T00:00:00Z/2015-01-01T00:00:00Z\").aggregators(QueryRunnerTestHelper.COMMON_DOUBLE_AGGREGATORS).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 34,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1899,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  AtomicBoolean ds1=new AtomicBoolean(false);\n  AtomicBoolean ds2=new AtomicBoolean(false);\n  QueryRunner baseRunner=new QueryRunner(){\n    @Override public Sequence run(    QueryPlus queryPlus,    ResponseContext responseContext){\n      Assert.assertTrue(queryPlus.getQuery().getDataSource() instanceof TableDataSource);\n      String dsName=Iterables.getOnlyElement(queryPlus.getQuery().getDataSource().getTableNames());\n      if (\"ds1\".equals(dsName)) {\n        ds1.compareAndSet(false,true);\n        return Sequences.simple(Arrays.asList(1,2,3));\n      }\n else       if (\"ds2\".equals(dsName)) {\n        ds2.compareAndSet(false,true);\n        return Sequences.simple(Arrays.asList(4,5,6));\n      }\n else {\n        throw new AssertionError(\"Unexpected DataSource\");\n      }\n    }\n  }\n;\n  UnionQueryRunner runner=new UnionQueryRunner(baseRunner);\n  Query q=Druids.newTimeseriesQueryBuilder().dataSource(new UnionDataSource(Arrays.asList(new TableDataSource(\"ds1\"),new TableDataSource(\"ds2\")))).intervals(\"2014-01-01T00:00:00Z/2015-01-01T00:00:00Z\").aggregators(QueryRunnerTestHelper.COMMON_DOUBLE_AGGREGATORS).build();\n  ResponseContext responseContext=ResponseContext.createEmpty();\n  Sequence<?> result=runner.run(QueryPlus.wrap(q),responseContext);\n  List res=result.toList();\n  Assert.assertEquals(Arrays.asList(1,2,3,4,5,6),res);\n  Assert.assertEquals(true,ds1.get());\n  Assert.assertEquals(true,ds2.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1944,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testUnionQueryRunner(){\n  AtomicBoolean ds1=new AtomicBoolean(false);\n  AtomicBoolean ds2=new AtomicBoolean(false);\n  QueryRunner baseRunner=new QueryRunner(){\n    @Override public Sequence run(    QueryPlus queryPlus,    ResponseContext responseContext){\n      Assert.assertTrue(queryPlus.getQuery().getDataSource() instanceof TableDataSource);\n      String dsName=Iterables.getOnlyElement(queryPlus.getQuery().getDataSource().getTableNames());\n      if (\"ds1\".equals(dsName)) {\n        ds1.compareAndSet(false,true);\n        return Sequences.simple(Arrays.asList(1,2,3));\n      }\n else       if (\"ds2\".equals(dsName)) {\n        ds2.compareAndSet(false,true);\n        return Sequences.simple(Arrays.asList(4,5,6));\n      }\n else {\n        throw new AssertionError(\"Unexpected DataSource\");\n      }\n    }\n  }\n;\n  UnionQueryRunner runner=new UnionQueryRunner(baseRunner);\n  Query q=Druids.newTimeseriesQueryBuilder().dataSource(new UnionDataSource(Arrays.asList(new TableDataSource(\"ds1\"),new TableDataSource(\"ds2\")))).intervals(\"2014-01-01T00:00:00Z/2015-01-01T00:00:00Z\").aggregators(QueryRunnerTestHelper.COMMON_DOUBLE_AGGREGATORS).build();\n  ResponseContext responseContext=ResponseContext.createEmpty();\n  Sequence<?> result=runner.run(QueryPlus.wrap(q),responseContext);\n  List res=result.toList();\n  Assert.assertEquals(Arrays.asList(1,2,3,4,5,6),res);\n  Assert.assertEquals(true,ds1.get());\n  Assert.assertEquals(true,ds2.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 64,
        "startColumnNumber" : 28,
        "endLineNumber" : 67,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Arrays.asList(new TableDataSource(\"ds1\"),new TableDataSource(\"ds2\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.apache.druid.query.TableDataSource"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 66,
    "startColumnNumber" : 32,
    "endLineNumber" : 66,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}