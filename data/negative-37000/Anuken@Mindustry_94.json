{
  "id" : 94,
  "expression" : "returned",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/editor/MapEditorDialog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "returned",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 304,
      "startColumnNumber" : 15,
      "endLineNumber" : 304,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 304,
        "startColumnNumber" : 8,
        "endLineNumber" : 304,
        "endColumnNumber" : 24
      },
      "nodeContext" : "return returned;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 901,
        "startLineNumber" : 276,
        "startColumnNumber" : 31,
        "endLineNumber" : 305,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean isEditor=state.rules.editor;\n  state.rules.editor=false;\n  String name=editor.tags.get(\"name\",\"\").trim();\n  editor.tags.put(\"rules\",JsonIO.write(state.rules));\n  editor.tags.remove(\"width\");\n  editor.tags.remove(\"height\");\n  player.clearUnit();\n  Map returned=null;\n  if (name.isEmpty()) {\n    infoDialog.show();\n    Core.app.post(() -> ui.showErrorMessage(\"@editor.save.noname\"));\n  }\n else {\n    Map map=maps.all().find(m -> m.name().equals(name));\n    if (map != null && !map.custom) {\n      handleSaveBuiltin(map);\n    }\n else {\n      returned=maps.saveMap(editor.tags);\n      ui.showInfoFade(\"@editor.saved\");\n    }\n  }\n  menu.hide();\n  saved=true;\n  state.rules.editor=isEditor;\n  return returned;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 276,
        "startColumnNumber" : 4,
        "endLineNumber" : 305,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public @Nullable Map save(){\n  boolean isEditor=state.rules.editor;\n  state.rules.editor=false;\n  String name=editor.tags.get(\"name\",\"\").trim();\n  editor.tags.put(\"rules\",JsonIO.write(state.rules));\n  editor.tags.remove(\"width\");\n  editor.tags.remove(\"height\");\n  player.clearUnit();\n  Map returned=null;\n  if (name.isEmpty()) {\n    infoDialog.show();\n    Core.app.post(() -> ui.showErrorMessage(\"@editor.save.noname\"));\n  }\n else {\n    Map map=maps.all().find(m -> m.name().equals(name));\n    if (map != null && !map.custom) {\n      handleSaveBuiltin(map);\n    }\n else {\n      returned=maps.saveMap(editor.tags);\n      ui.showInfoFade(\"@editor.saved\");\n    }\n  }\n  menu.hide();\n  saved=true;\n  state.rules.editor=isEditor;\n  return returned;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 304,
        "startColumnNumber" : 8,
        "endLineNumber" : 304,
        "endColumnNumber" : 24
      },
      "nodeContext" : "return returned;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "mindustry.maps.Map"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 304,
    "startColumnNumber" : 15,
    "endLineNumber" : 304,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}