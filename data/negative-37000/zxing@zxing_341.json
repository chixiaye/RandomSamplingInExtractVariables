{
  "id" : 341,
  "expression" : "end",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/rss/RSS14Reader.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "end",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 351,
      "startColumnNumber" : 32,
      "endLineNumber" : 351,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 351,
        "startColumnNumber" : 12,
        "endLineNumber" : 351,
        "endColumnNumber" : 35
      },
      "nodeContext" : "row.getSize() - 1 - end",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 351,
        "startColumnNumber" : 6,
        "endLineNumber" : 351,
        "endColumnNumber" : 35
      },
      "nodeContext" : "end=row.getSize() - 1 - end",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 351,
        "startColumnNumber" : 6,
        "endLineNumber" : 351,
        "endColumnNumber" : 36
      },
      "nodeContext" : "end=row.getSize() - 1 - end;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 348,
        "startColumnNumber" : 15,
        "endLineNumber" : 352,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  start=row.getSize() - 1 - start;\n  end=row.getSize() - 1 - end;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 348,
        "startColumnNumber" : 4,
        "endLineNumber" : 352,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (right) {\n  start=row.getSize() - 1 - start;\n  end=row.getSize() - 1 - end;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 923,
        "startLineNumber" : 331,
        "startColumnNumber" : 31,
        "endLineNumber" : 354,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean firstIsBlack=row.get(startEnd[0]);\n  int firstElementStart=startEnd[0] - 1;\n  while (firstElementStart >= 0 && firstIsBlack ^ row.get(firstElementStart)) {\n    firstElementStart--;\n  }\n  firstElementStart++;\n  int firstCounter=startEnd[0] - firstElementStart;\n  int[] counters=getDecodeFinderCounters();\n  System.arraycopy(counters,0,counters,1,counters.length - 1);\n  counters[0]=firstCounter;\n  int value=parseFinderValue(counters,FINDER_PATTERNS);\n  int start=firstElementStart;\n  int end=startEnd[1];\n  if (right) {\n    start=row.getSize() - 1 - start;\n    end=row.getSize() - 1 - end;\n  }\n  return new FinderPattern(value,new int[]{firstElementStart,startEnd[1]},start,end,rowNumber);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1061,
        "startLineNumber" : 330,
        "startColumnNumber" : 2,
        "endLineNumber" : 354,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private FinderPattern parseFoundFinderPattern(BitArray row,int rowNumber,boolean right,int[] startEnd) throws NotFoundException {\n  boolean firstIsBlack=row.get(startEnd[0]);\n  int firstElementStart=startEnd[0] - 1;\n  while (firstElementStart >= 0 && firstIsBlack ^ row.get(firstElementStart)) {\n    firstElementStart--;\n  }\n  firstElementStart++;\n  int firstCounter=startEnd[0] - firstElementStart;\n  int[] counters=getDecodeFinderCounters();\n  System.arraycopy(counters,0,counters,1,counters.length - 1);\n  counters[0]=firstCounter;\n  int value=parseFinderValue(counters,FINDER_PATTERNS);\n  int start=firstElementStart;\n  int end=startEnd[1];\n  if (right) {\n    start=row.getSize() - 1 - start;\n    end=row.getSize() - 1 - end;\n  }\n  return new FinderPattern(value,new int[]{firstElementStart,startEnd[1]},start,end,rowNumber);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 351,
        "startColumnNumber" : 6,
        "endLineNumber" : 351,
        "endColumnNumber" : 36
      },
      "nodeContext" : "end=row.getSize() - 1 - end;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "end",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 353,
      "startColumnNumber" : 87,
      "endLineNumber" : 353,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 353,
        "startColumnNumber" : 11,
        "endLineNumber" : 353,
        "endColumnNumber" : 102
      },
      "nodeContext" : "new FinderPattern(value,new int[]{firstElementStart,startEnd[1]},start,end,rowNumber)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 353,
        "startColumnNumber" : 4,
        "endLineNumber" : 353,
        "endColumnNumber" : 103
      },
      "nodeContext" : "return new FinderPattern(value,new int[]{firstElementStart,startEnd[1]},start,end,rowNumber);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 923,
        "startLineNumber" : 331,
        "startColumnNumber" : 31,
        "endLineNumber" : 354,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean firstIsBlack=row.get(startEnd[0]);\n  int firstElementStart=startEnd[0] - 1;\n  while (firstElementStart >= 0 && firstIsBlack ^ row.get(firstElementStart)) {\n    firstElementStart--;\n  }\n  firstElementStart++;\n  int firstCounter=startEnd[0] - firstElementStart;\n  int[] counters=getDecodeFinderCounters();\n  System.arraycopy(counters,0,counters,1,counters.length - 1);\n  counters[0]=firstCounter;\n  int value=parseFinderValue(counters,FINDER_PATTERNS);\n  int start=firstElementStart;\n  int end=startEnd[1];\n  if (right) {\n    start=row.getSize() - 1 - start;\n    end=row.getSize() - 1 - end;\n  }\n  return new FinderPattern(value,new int[]{firstElementStart,startEnd[1]},start,end,rowNumber);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1061,
        "startLineNumber" : 330,
        "startColumnNumber" : 2,
        "endLineNumber" : 354,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private FinderPattern parseFoundFinderPattern(BitArray row,int rowNumber,boolean right,int[] startEnd) throws NotFoundException {\n  boolean firstIsBlack=row.get(startEnd[0]);\n  int firstElementStart=startEnd[0] - 1;\n  while (firstElementStart >= 0 && firstIsBlack ^ row.get(firstElementStart)) {\n    firstElementStart--;\n  }\n  firstElementStart++;\n  int firstCounter=startEnd[0] - firstElementStart;\n  int[] counters=getDecodeFinderCounters();\n  System.arraycopy(counters,0,counters,1,counters.length - 1);\n  counters[0]=firstCounter;\n  int value=parseFinderValue(counters,FINDER_PATTERNS);\n  int start=firstElementStart;\n  int end=startEnd[1];\n  if (right) {\n    start=row.getSize() - 1 - start;\n    end=row.getSize() - 1 - end;\n  }\n  return new FinderPattern(value,new int[]{firstElementStart,startEnd[1]},start,end,rowNumber);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 353,
        "startColumnNumber" : 4,
        "endLineNumber" : 353,
        "endColumnNumber" : 103
      },
      "nodeContext" : "return new FinderPattern(value,new int[]{firstElementStart,startEnd[1]},start,end,rowNumber);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 351,
    "startColumnNumber" : 32,
    "endLineNumber" : 351,
    "endColumnNumber" : 35
  }, {
    "charLength" : 3,
    "startLineNumber" : 353,
    "startColumnNumber" : 87,
    "endLineNumber" : 353,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}