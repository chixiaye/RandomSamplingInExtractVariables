{
  "id" : 296,
  "expression" : "\"Keys must not be empty!\"",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveHyperLogLogCommands.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Keys must not be empty!\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 71,
      "startColumnNumber" : 47,
      "endLineNumber" : 71,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Assert.notEmpty(command.getKeys(),\"Keys must not be empty!\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.notEmpty(command.getKeys(),\"Keys must not be empty!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 69,
        "startColumnNumber" : 44,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.notEmpty(command.getKeys(),\"Keys must not be empty!\");\n  Object[] args=command.getKeys().stream().map(v -> toByteArray(v)).toArray();\n  Mono<Long> m=write((byte[])args[0],StringCodec.INSTANCE,RedisCommands.PFCOUNT,args);\n  return m.map(v -> new NumericResponse<>(command,v));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 69,
        "startColumnNumber" : 33,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "command -> {\n  Assert.notEmpty(command.getKeys(),\"Keys must not be empty!\");\n  Object[] args=command.getKeys().stream().map(v -> toByteArray(v)).toArray();\n  Mono<Long> m=write((byte[])args[0],StringCodec.INSTANCE,RedisCommands.PFCOUNT,args);\n  return m.map(v -> new NumericResponse<>(command,v));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 71,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.notEmpty(command.getKeys(),\"Keys must not be empty!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 71,
    "startColumnNumber" : 47,
    "endLineNumber" : 71,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}