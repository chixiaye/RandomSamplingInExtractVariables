{
  "id" : 459,
  "expression" : "ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML)",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-client/src/main/java/com/ctrip/framework/apollo/ds/ApolloDataSourceProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 64,
      "startLineNumber" : 45,
      "startColumnNumber" : 27,
      "endLineNumber" : 45,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 45,
        "startColumnNumber" : 20,
        "endLineNumber" : 45,
        "endColumnNumber" : 91
      },
      "nodeContext" : "file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 45,
        "startColumnNumber" : 9,
        "endLineNumber" : 45,
        "endColumnNumber" : 92
      },
      "nodeContext" : "ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 44,
        "startColumnNumber" : 25,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n  String appId=Foundation.app().getAppId();\n  String envType=Foundation.server().getEnvType();\n  if (file.hasContent()) {\n    String content=file.getContent();\n    m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    try {\n      m_def=DefaultSaxParser.parse(content);\n    }\n catch (    Exception e) {\n      throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n    }\n  }\n else {\n    m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    m_def=new DataSourcesDef();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 44,
        "startColumnNumber" : 6,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (m_def == null) {\n  ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n  String appId=Foundation.app().getAppId();\n  String envType=Foundation.server().getEnvType();\n  if (file.hasContent()) {\n    String content=file.getContent();\n    m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    try {\n      m_def=DefaultSaxParser.parse(content);\n    }\n catch (    Exception e) {\n      throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n    }\n  }\n else {\n    m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n    m_def=new DataSourcesDef();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 934,
        "startLineNumber" : 43,
        "startColumnNumber" : 45,
        "endLineNumber" : 66,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (m_def == null) {\n    ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n    String appId=Foundation.app().getAppId();\n    String envType=Foundation.server().getEnvType();\n    if (file.hasContent()) {\n      String content=file.getContent();\n      m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      try {\n        m_def=DefaultSaxParser.parse(content);\n      }\n catch (      Exception e) {\n        throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n      }\n    }\n else {\n      m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      m_def=new DataSourcesDef();\n    }\n  }\n  return m_def;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 42,
        "startColumnNumber" : 3,
        "endLineNumber" : 66,
        "endColumnNumber" : 4
      },
      "nodeContext" : "@Override public DataSourcesDef defineDatasources(){\n  if (m_def == null) {\n    ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n    String appId=Foundation.app().getAppId();\n    String envType=Foundation.server().getEnvType();\n    if (file.hasContent()) {\n      String content=file.getContent();\n      m_logger.info(String.format(\"Found datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      try {\n        m_def=DefaultSaxParser.parse(content);\n      }\n catch (      Exception e) {\n        throw new IllegalStateException(String.format(\"Error when parsing datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId),e);\n      }\n    }\n else {\n      m_logger.warn(String.format(\"Can't get datasources.xml from Apollo(env=%s, app.id=%s)!\",envType,appId));\n      m_def=new DataSourcesDef();\n    }\n  }\n  return m_def;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 45,
        "startColumnNumber" : 9,
        "endLineNumber" : 45,
        "endColumnNumber" : 92
      },
      "nodeContext" : "ConfigFile file=ConfigService.getConfigFile(\"datasources\",ConfigFileFormat.XML);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "com.ctrip.framework.apollo.ConfigFile"
  } ],
  "positionList" : [ {
    "charLength" : 64,
    "startLineNumber" : 45,
    "startColumnNumber" : 27,
    "endLineNumber" : 45,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}