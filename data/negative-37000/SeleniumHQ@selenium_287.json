{
  "id" : 287,
  "expression" : "Matcher",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/org/openqa/selenium/remote/http/UrlTemplate.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Matcher",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 57,
      "startColumnNumber" : 48,
      "endLineNumber" : 57,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 57,
        "startColumnNumber" : 48,
        "endLineNumber" : 57,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Matcher.quoteReplacement(toCompile)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 57,
        "startColumnNumber" : 32,
        "endLineNumber" : 57,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Pattern.compile(Matcher.quoteReplacement(toCompile))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 57,
        "startColumnNumber" : 20,
        "endLineNumber" : 57,
        "endColumnNumber" : 100
      },
      "nodeContext" : "new Matches(Pattern.compile(Matcher.quoteReplacement(toCompile)),names.build())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 57,
        "endColumnNumber" : 101
      },
      "nodeContext" : "fragments.add(new Matches(Pattern.compile(Matcher.quoteReplacement(toCompile)),names.build()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 57,
        "endColumnNumber" : 102
      },
      "nodeContext" : "fragments.add(new Matches(Pattern.compile(Matcher.quoteReplacement(toCompile)),names.build()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 42,
        "startColumnNumber" : 48,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Matcher matcher=Pattern.compile(\"\\\\{(\\\\p{Alnum}+?)\\\\}\").matcher(fragment);\n  String toCompile=matcher.replaceAll(\"(?<$1>[^/]+)\");\n  Matcher groupNameMatcher=GROUP_NAME.matcher(toCompile);\n  ImmutableList.Builder<String> names=ImmutableList.builder();\n  while (groupNameMatcher.find()) {\n    names.add(groupNameMatcher.group(1));\n  }\n  fragments.add(new Matches(Pattern.compile(Matcher.quoteReplacement(toCompile)),names.build()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (String fragment : template.split(\"/\")) {\n  Matcher matcher=Pattern.compile(\"\\\\{(\\\\p{Alnum}+?)\\\\}\").matcher(fragment);\n  String toCompile=matcher.replaceAll(\"(?<$1>[^/]+)\");\n  Matcher groupNameMatcher=GROUP_NAME.matcher(toCompile);\n  ImmutableList.Builder<String> names=ImmutableList.builder();\n  while (groupNameMatcher.find()) {\n    names.add(groupNameMatcher.group(1));\n  }\n  fragments.add(new Matches(Pattern.compile(Matcher.quoteReplacement(toCompile)),names.build()));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 83,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1118,
        "startLineNumber" : 36,
        "startColumnNumber" : 38,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (template == null || template.isEmpty()) {\n    throw new IllegalArgumentException(\"Template must not be 0 length\");\n  }\n  ImmutableList.Builder<Matches> fragments=ImmutableList.builder();\n  for (  String fragment : template.split(\"/\")) {\n    Matcher matcher=Pattern.compile(\"\\\\{(\\\\p{Alnum}+?)\\\\}\").matcher(fragment);\n    String toCompile=matcher.replaceAll(\"(?<$1>[^/]+)\");\n    Matcher groupNameMatcher=GROUP_NAME.matcher(toCompile);\n    ImmutableList.Builder<String> names=ImmutableList.builder();\n    while (groupNameMatcher.find()) {\n      names.add(groupNameMatcher.group(1));\n    }\n    fragments.add(new Matches(Pattern.compile(Matcher.quoteReplacement(toCompile)),names.build()));\n  }\n  this.template=fragments.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public UrlTemplate(String template){\n  if (template == null || template.isEmpty()) {\n    throw new IllegalArgumentException(\"Template must not be 0 length\");\n  }\n  ImmutableList.Builder<Matches> fragments=ImmutableList.builder();\n  for (  String fragment : template.split(\"/\")) {\n    Matcher matcher=Pattern.compile(\"\\\\{(\\\\p{Alnum}+?)\\\\}\").matcher(fragment);\n    String toCompile=matcher.replaceAll(\"(?<$1>[^/]+)\");\n    Matcher groupNameMatcher=GROUP_NAME.matcher(toCompile);\n    ImmutableList.Builder<String> names=ImmutableList.builder();\n    while (groupNameMatcher.find()) {\n      names.add(groupNameMatcher.group(1));\n    }\n    fragments.add(new Matches(Pattern.compile(Matcher.quoteReplacement(toCompile)),names.build()));\n  }\n  this.template=fragments.build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 57,
        "endColumnNumber" : 102
      },
      "nodeContext" : "fragments.add(new Matches(Pattern.compile(Matcher.quoteReplacement(toCompile)),names.build()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.regex.Matcher"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 57,
    "startColumnNumber" : 48,
    "endLineNumber" : 57,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}