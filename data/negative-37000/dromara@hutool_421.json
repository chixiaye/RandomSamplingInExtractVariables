{
  "id" : 421,
  "expression" : "StrUtil.format(format,arguments)",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-log/src/main/java/cn/hutool/log/dialect/log4j/Log4jLog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StrUtil.format(format,arguments)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 117,
      "startColumnNumber" : 32,
      "endLineNumber" : 117,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 117,
        "startColumnNumber" : 3,
        "endLineNumber" : 117,
        "endColumnNumber" : 69
      },
      "nodeContext" : "logger.log(fqcn,log4jLevel,StrUtil.format(format,arguments),t)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 117,
        "startColumnNumber" : 3,
        "endLineNumber" : 117,
        "endColumnNumber" : 70
      },
      "nodeContext" : "logger.log(fqcn,log4jLevel,StrUtil.format(format,arguments),t);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 116,
        "startColumnNumber" : 38,
        "endLineNumber" : 118,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  logger.log(fqcn,log4jLevel,StrUtil.format(format,arguments),t);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 116,
        "startColumnNumber" : 2,
        "endLineNumber" : 118,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (logger.isEnabledFor(log4jLevel)) {\n  logger.log(fqcn,log4jLevel,StrUtil.format(format,arguments),t);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 94,
        "startColumnNumber" : 112,
        "endLineNumber" : 119,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Level log4jLevel;\nswitch (level) {\ncase TRACE:    log4jLevel=Level.TRACE;\n  break;\ncase DEBUG:log4jLevel=Level.DEBUG;\nbreak;\ncase INFO:log4jLevel=Level.INFO;\nbreak;\ncase WARN:log4jLevel=Level.WARN;\nbreak;\ncase ERROR:log4jLevel=Level.ERROR;\nbreak;\ndefault:throw new Error(StrUtil.format(\"Can not identify level: {}\",level));\n}\nif (logger.isEnabledFor(log4jLevel)) {\nlogger.log(fqcn,log4jLevel,StrUtil.format(format,arguments),t);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 675,
        "startLineNumber" : 93,
        "startColumnNumber" : 1,
        "endLineNumber" : 119,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void log(String fqcn,cn.hutool.log.level.Level level,Throwable t,String format,Object... arguments){\n  Level log4jLevel;\nswitch (level) {\ncase TRACE:    log4jLevel=Level.TRACE;\n  break;\ncase DEBUG:log4jLevel=Level.DEBUG;\nbreak;\ncase INFO:log4jLevel=Level.INFO;\nbreak;\ncase WARN:log4jLevel=Level.WARN;\nbreak;\ncase ERROR:log4jLevel=Level.ERROR;\nbreak;\ndefault:throw new Error(StrUtil.format(\"Can not identify level: {}\",level));\n}\nif (logger.isEnabledFor(log4jLevel)) {\nlogger.log(fqcn,log4jLevel,StrUtil.format(format,arguments),t);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 117,
        "startColumnNumber" : 3,
        "endLineNumber" : 117,
        "endColumnNumber" : 70
      },
      "nodeContext" : "logger.log(fqcn,log4jLevel,StrUtil.format(format,arguments),t);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 117,
    "startColumnNumber" : 32,
    "endLineNumber" : 117,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}