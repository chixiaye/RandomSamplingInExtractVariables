{
  "id" : 181,
  "expression" : "\"No header values\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-test/src/main/java/org/springframework/test/web/client/match/MockRestRequestMatchers.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"No header values\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 166,
      "startColumnNumber" : 38,
      "endLineNumber" : 166,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 166,
        "startColumnNumber" : 3,
        "endLineNumber" : 166,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Assert.state(headerValues != null,\"No header values\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 166,
        "startColumnNumber" : 3,
        "endLineNumber" : 166,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Assert.state(headerValues != null,\"No header values\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 163,
        "startColumnNumber" : 20,
        "endLineNumber" : 170,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertValueCount(\"header\",name,request.getHeaders(),matchers.length);\n  List<String> headerValues=request.getHeaders().get(name);\n  Assert.state(headerValues != null,\"No header values\");\n  for (int i=0; i < matchers.length; i++) {\n    assertThat(\"Request header [\" + name + \"]\",headerValues.get(i),matchers[i]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 163,
        "startColumnNumber" : 9,
        "endLineNumber" : 170,
        "endColumnNumber" : 3
      },
      "nodeContext" : "request -> {\n  assertValueCount(\"header\",name,request.getHeaders(),matchers.length);\n  List<String> headerValues=request.getHeaders().get(name);\n  Assert.state(headerValues != null,\"No header values\");\n  for (int i=0; i < matchers.length; i++) {\n    assertThat(\"Request header [\" + name + \"]\",headerValues.get(i),matchers[i]);\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 65,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 166,
        "startColumnNumber" : 3,
        "endLineNumber" : 166,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Assert.state(headerValues != null,\"No header values\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 166,
    "startColumnNumber" : 38,
    "endLineNumber" : 166,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}