{
  "id" : 141,
  "expression" : "m2[k][j]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/linearalgebra/LinearRecurrenceSolver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "m2[k][j]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 37,
      "startColumnNumber" : 57,
      "endLineNumber" : 37,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 37,
        "startColumnNumber" : 46,
        "endLineNumber" : 37,
        "endColumnNumber" : 65
      },
      "nodeContext" : "m1[i][k] * m2[k][j]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 37,
        "startColumnNumber" : 28,
        "endLineNumber" : 37,
        "endColumnNumber" : 65
      },
      "nodeContext" : "newMatrix[i][j] + m1[i][k] * m2[k][j]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 37,
        "startColumnNumber" : 10,
        "endLineNumber" : 37,
        "endColumnNumber" : 65
      },
      "nodeContext" : "newMatrix[i][j]=newMatrix[i][j] + m1[i][k] * m2[k][j]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 37,
        "startColumnNumber" : 10,
        "endLineNumber" : 37,
        "endColumnNumber" : 66
      },
      "nodeContext" : "newMatrix[i][j]=newMatrix[i][j] + m1[i][k] * m2[k][j];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 66
      },
      "nodeContext" : "for (int k=0; k < N; k++) newMatrix[i][j]=newMatrix[i][j] + m1[i][k] * m2[k][j];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 34,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 66
      },
      "nodeContext" : "for (int j=0; j < N; j++) for (int k=0; k < N; k++) newMatrix[i][j]=newMatrix[i][j] + m1[i][k] * m2[k][j];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 66
      },
      "nodeContext" : "for (int i=0; i < N; i++) for (int j=0; j < N; j++) for (int k=0; k < N; k++) newMatrix[i][j]=newMatrix[i][j] + m1[i][k] * m2[k][j];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 57,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 319,
        "startLineNumber" : 28,
        "startColumnNumber" : 61,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int N=m1.length;\n  long[][] newMatrix=new long[N][N];\n  for (int i=0; i < N; i++)   for (int j=0; j < N; j++)   for (int k=0; k < N; k++)   newMatrix[i][j]=newMatrix[i][j] + m1[i][k] * m2[k][j];\n  return newMatrix;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static long[][] squareMatrixMult(long[][] m1,long[][] m2){\n  final int N=m1.length;\n  long[][] newMatrix=new long[N][N];\n  for (int i=0; i < N; i++)   for (int j=0; j < N; j++)   for (int k=0; k < N; k++)   newMatrix[i][j]=newMatrix[i][j] + m1[i][k] * m2[k][j];\n  return newMatrix;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 37,
        "startColumnNumber" : 10,
        "endLineNumber" : 37,
        "endColumnNumber" : 66
      },
      "nodeContext" : "newMatrix[i][j]=newMatrix[i][j] + m1[i][k] * m2[k][j];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 37,
    "startColumnNumber" : 57,
    "endLineNumber" : 37,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}