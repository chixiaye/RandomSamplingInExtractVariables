{
  "id" : 242,
  "expression" : "(ColumnOrderByItemSegment)each.getSegment()",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-infra/shardingsphere-infra-binder/src/main/java/org/apache/shardingsphere/infra/binder/statement/dml/SelectStatementContext.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(ColumnOrderByItemSegment)each.getSegment()",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 205,
      "startColumnNumber" : 74,
      "endLineNumber" : 205,
      "endColumnNumber" : 118
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 205,
        "startColumnNumber" : 73,
        "endLineNumber" : 205,
        "endColumnNumber" : 119
      },
      "nodeContext" : "((ColumnOrderByItemSegment)each.getSegment())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 205,
        "startColumnNumber" : 73,
        "endLineNumber" : 205,
        "endColumnNumber" : 131
      },
      "nodeContext" : "((ColumnOrderByItemSegment)each.getSegment()).getColumn()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 205,
        "startColumnNumber" : 73,
        "endLineNumber" : 205,
        "endColumnNumber" : 142
      },
      "nodeContext" : "((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 205,
        "startColumnNumber" : 73,
        "endLineNumber" : 205,
        "endColumnNumber" : 154
      },
      "nodeContext" : "((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 205,
        "endColumnNumber" : 154
      },
      "nodeContext" : "each.getSegment() instanceof ColumnOrderByItemSegment && ((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (each.getSegment() instanceof ColumnOrderByItemSegment && ((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()) {\n  Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n  if (itemIndex.isPresent()) {\n    each.setIndex(itemIndex.get());\n    continue;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 200,
        "startColumnNumber" : 46,
        "endLineNumber" : 217,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (each.getSegment() instanceof IndexOrderByItemSegment) {\n    each.setIndex(((IndexOrderByItemSegment)each.getSegment()).getColumnIndex());\n    continue;\n  }\n  if (each.getSegment() instanceof ColumnOrderByItemSegment && ((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()) {\n    Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n    if (itemIndex.isPresent()) {\n      each.setIndex(itemIndex.get());\n      continue;\n    }\n  }\n  String columnLabel=getAlias(each.getSegment()).orElseGet(() -> getOrderItemText((TextOrderByItemSegment)each.getSegment()));\n  Preconditions.checkState(columnLabelIndexMap.containsKey(columnLabel),\"Can't find index: %s\",each);\n  if (columnLabelIndexMap.containsKey(columnLabel)) {\n    each.setIndex(columnLabelIndexMap.get(columnLabel));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1118,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 217,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (OrderByItem each : orderByItems) {\n  if (each.getSegment() instanceof IndexOrderByItemSegment) {\n    each.setIndex(((IndexOrderByItemSegment)each.getSegment()).getColumnIndex());\n    continue;\n  }\n  if (each.getSegment() instanceof ColumnOrderByItemSegment && ((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()) {\n    Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n    if (itemIndex.isPresent()) {\n      each.setIndex(itemIndex.get());\n      continue;\n    }\n  }\n  String columnLabel=getAlias(each.getSegment()).orElseGet(() -> getOrderItemText((TextOrderByItemSegment)each.getSegment()));\n  Preconditions.checkState(columnLabelIndexMap.containsKey(columnLabel),\"Can't find index: %s\",each);\n  if (columnLabelIndexMap.containsKey(columnLabel)) {\n    each.setIndex(columnLabelIndexMap.get(columnLabel));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 129,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 199,
        "startColumnNumber" : 130,
        "endLineNumber" : 218,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  OrderByItem each : orderByItems) {\n    if (each.getSegment() instanceof IndexOrderByItemSegment) {\n      each.setIndex(((IndexOrderByItemSegment)each.getSegment()).getColumnIndex());\n      continue;\n    }\n    if (each.getSegment() instanceof ColumnOrderByItemSegment && ((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()) {\n      Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n      if (itemIndex.isPresent()) {\n        each.setIndex(itemIndex.get());\n        continue;\n      }\n    }\n    String columnLabel=getAlias(each.getSegment()).orElseGet(() -> getOrderItemText((TextOrderByItemSegment)each.getSegment()));\n    Preconditions.checkState(columnLabelIndexMap.containsKey(columnLabel),\"Can't find index: %s\",each);\n    if (columnLabelIndexMap.containsKey(columnLabel)) {\n      each.setIndex(columnLabelIndexMap.get(columnLabel));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1260,
        "startLineNumber" : 199,
        "startColumnNumber" : 4,
        "endLineNumber" : 218,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void setIndexForOrderItem(final Map<String,Integer> columnLabelIndexMap,final Collection<OrderByItem> orderByItems){\n  for (  OrderByItem each : orderByItems) {\n    if (each.getSegment() instanceof IndexOrderByItemSegment) {\n      each.setIndex(((IndexOrderByItemSegment)each.getSegment()).getColumnIndex());\n      continue;\n    }\n    if (each.getSegment() instanceof ColumnOrderByItemSegment && ((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()) {\n      Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n      if (itemIndex.isPresent()) {\n        each.setIndex(itemIndex.get());\n        continue;\n      }\n    }\n    String columnLabel=getAlias(each.getSegment()).orElseGet(() -> getOrderItemText((TextOrderByItemSegment)each.getSegment()));\n    Preconditions.checkState(columnLabelIndexMap.containsKey(columnLabel),\"Can't find index: %s\",each);\n    if (columnLabelIndexMap.containsKey(columnLabel)) {\n      each.setIndex(columnLabelIndexMap.get(columnLabel));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 205,
        "endColumnNumber" : 154
      },
      "nodeContext" : "each.getSegment() instanceof ColumnOrderByItemSegment && ((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "org.apache.shardingsphere.sql.parser.sql.common.segment.dml.order.item.ColumnOrderByItemSegment"
  }, {
    "nodeContext" : "(ColumnOrderByItemSegment)each.getSegment()",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 206,
      "startColumnNumber" : 86,
      "endLineNumber" : 206,
      "endColumnNumber" : 130
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 206,
        "startColumnNumber" : 85,
        "endLineNumber" : 206,
        "endColumnNumber" : 131
      },
      "nodeContext" : "((ColumnOrderByItemSegment)each.getSegment())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 206,
        "startColumnNumber" : 85,
        "endLineNumber" : 206,
        "endColumnNumber" : 141
      },
      "nodeContext" : "((ColumnOrderByItemSegment)each.getSegment()).getText()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 206,
        "startColumnNumber" : 46,
        "endLineNumber" : 206,
        "endColumnNumber" : 142
      },
      "nodeContext" : "projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 206,
        "startColumnNumber" : 34,
        "endLineNumber" : 206,
        "endColumnNumber" : 142
      },
      "nodeContext" : "itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 206,
        "startColumnNumber" : 16,
        "endLineNumber" : 206,
        "endColumnNumber" : 143
      },
      "nodeContext" : "Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 205,
        "startColumnNumber" : 156,
        "endLineNumber" : 211,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n  if (itemIndex.isPresent()) {\n    each.setIndex(itemIndex.get());\n    continue;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (each.getSegment() instanceof ColumnOrderByItemSegment && ((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()) {\n  Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n  if (itemIndex.isPresent()) {\n    each.setIndex(itemIndex.get());\n    continue;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 200,
        "startColumnNumber" : 46,
        "endLineNumber" : 217,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (each.getSegment() instanceof IndexOrderByItemSegment) {\n    each.setIndex(((IndexOrderByItemSegment)each.getSegment()).getColumnIndex());\n    continue;\n  }\n  if (each.getSegment() instanceof ColumnOrderByItemSegment && ((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()) {\n    Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n    if (itemIndex.isPresent()) {\n      each.setIndex(itemIndex.get());\n      continue;\n    }\n  }\n  String columnLabel=getAlias(each.getSegment()).orElseGet(() -> getOrderItemText((TextOrderByItemSegment)each.getSegment()));\n  Preconditions.checkState(columnLabelIndexMap.containsKey(columnLabel),\"Can't find index: %s\",each);\n  if (columnLabelIndexMap.containsKey(columnLabel)) {\n    each.setIndex(columnLabelIndexMap.get(columnLabel));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1118,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 217,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (OrderByItem each : orderByItems) {\n  if (each.getSegment() instanceof IndexOrderByItemSegment) {\n    each.setIndex(((IndexOrderByItemSegment)each.getSegment()).getColumnIndex());\n    continue;\n  }\n  if (each.getSegment() instanceof ColumnOrderByItemSegment && ((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()) {\n    Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n    if (itemIndex.isPresent()) {\n      each.setIndex(itemIndex.get());\n      continue;\n    }\n  }\n  String columnLabel=getAlias(each.getSegment()).orElseGet(() -> getOrderItemText((TextOrderByItemSegment)each.getSegment()));\n  Preconditions.checkState(columnLabelIndexMap.containsKey(columnLabel),\"Can't find index: %s\",each);\n  if (columnLabelIndexMap.containsKey(columnLabel)) {\n    each.setIndex(columnLabelIndexMap.get(columnLabel));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 129,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 199,
        "startColumnNumber" : 130,
        "endLineNumber" : 218,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  OrderByItem each : orderByItems) {\n    if (each.getSegment() instanceof IndexOrderByItemSegment) {\n      each.setIndex(((IndexOrderByItemSegment)each.getSegment()).getColumnIndex());\n      continue;\n    }\n    if (each.getSegment() instanceof ColumnOrderByItemSegment && ((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()) {\n      Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n      if (itemIndex.isPresent()) {\n        each.setIndex(itemIndex.get());\n        continue;\n      }\n    }\n    String columnLabel=getAlias(each.getSegment()).orElseGet(() -> getOrderItemText((TextOrderByItemSegment)each.getSegment()));\n    Preconditions.checkState(columnLabelIndexMap.containsKey(columnLabel),\"Can't find index: %s\",each);\n    if (columnLabelIndexMap.containsKey(columnLabel)) {\n      each.setIndex(columnLabelIndexMap.get(columnLabel));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1260,
        "startLineNumber" : 199,
        "startColumnNumber" : 4,
        "endLineNumber" : 218,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void setIndexForOrderItem(final Map<String,Integer> columnLabelIndexMap,final Collection<OrderByItem> orderByItems){\n  for (  OrderByItem each : orderByItems) {\n    if (each.getSegment() instanceof IndexOrderByItemSegment) {\n      each.setIndex(((IndexOrderByItemSegment)each.getSegment()).getColumnIndex());\n      continue;\n    }\n    if (each.getSegment() instanceof ColumnOrderByItemSegment && ((ColumnOrderByItemSegment)each.getSegment()).getColumn().getOwner().isPresent()) {\n      Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n      if (itemIndex.isPresent()) {\n        each.setIndex(itemIndex.get());\n        continue;\n      }\n    }\n    String columnLabel=getAlias(each.getSegment()).orElseGet(() -> getOrderItemText((TextOrderByItemSegment)each.getSegment()));\n    Preconditions.checkState(columnLabelIndexMap.containsKey(columnLabel),\"Can't find index: %s\",each);\n    if (columnLabelIndexMap.containsKey(columnLabel)) {\n      each.setIndex(columnLabelIndexMap.get(columnLabel));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 206,
        "startColumnNumber" : 16,
        "endLineNumber" : 206,
        "endColumnNumber" : 143
      },
      "nodeContext" : "Optional<Integer> itemIndex=projectionsContext.findProjectionIndex(((ColumnOrderByItemSegment)each.getSegment()).getText());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "org.apache.shardingsphere.sql.parser.sql.common.segment.dml.order.item.ColumnOrderByItemSegment"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 205,
    "startColumnNumber" : 74,
    "endLineNumber" : 205,
    "endColumnNumber" : 118
  }, {
    "charLength" : 44,
    "startLineNumber" : 206,
    "startColumnNumber" : 86,
    "endLineNumber" : 206,
    "endColumnNumber" : 130
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}