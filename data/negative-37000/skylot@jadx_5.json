{
  "id" : 5,
  "expression" : "varName == null",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInference.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "varName == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 105,
      "startColumnNumber" : 8,
      "endLineNumber" : 105,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (varName == null) {\n  varName=new VarName();\n  resArg.getSVar().setVarName(varName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 97,
        "startColumnNumber" : 45,
        "endLineNumber" : 113,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  RegisterArg resArg=phiInsn.getResult();\n  int argsCount=phiInsn.getArgsCount();\n  for (int i=0; i < argsCount; i++) {\n    RegisterArg arg=phiInsn.getArg(i);\n    arg.mergeName(resArg);\n  }\n  VarName varName=resArg.getSVar().getVarName();\n  if (varName == null) {\n    varName=new VarName();\n    resArg.getSVar().setVarName(varName);\n  }\n  for (int i=0; i < argsCount; i++) {\n    RegisterArg arg=phiInsn.getArg(i);\n    arg.getSVar().setVarName(varName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 545,
        "startLineNumber" : 97,
        "startColumnNumber" : 3,
        "endLineNumber" : 113,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (PhiInsn phiInsn : phiList.getList()) {\n  RegisterArg resArg=phiInsn.getResult();\n  int argsCount=phiInsn.getArgsCount();\n  for (int i=0; i < argsCount; i++) {\n    RegisterArg arg=phiInsn.getArg(i);\n    arg.mergeName(resArg);\n  }\n  VarName varName=resArg.getSVar().getVarName();\n  if (varName == null) {\n    varName=new VarName();\n    resArg.getSVar().setVarName(varName);\n  }\n  for (int i=0; i < argsCount; i++) {\n    RegisterArg arg=phiInsn.getArg(i);\n    arg.getSVar().setVarName(varName);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 106,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 651,
        "startLineNumber" : 92,
        "startColumnNumber" : 47,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  PhiListAttr phiList=block.get(AType.PHI_LIST);\n  if (phiList == null) {\n    continue;\n  }\n  for (  PhiInsn phiInsn : phiList.getList()) {\n    RegisterArg resArg=phiInsn.getResult();\n    int argsCount=phiInsn.getArgsCount();\n    for (int i=0; i < argsCount; i++) {\n      RegisterArg arg=phiInsn.getArg(i);\n      arg.mergeName(resArg);\n    }\n    VarName varName=resArg.getSVar().getVarName();\n    if (varName == null) {\n      varName=new VarName();\n      resArg.getSVar().setVarName(varName);\n    }\n    for (int i=0; i < argsCount; i++) {\n      RegisterArg arg=phiInsn.getArg(i);\n      arg.getSVar().setVarName(varName);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 92,
        "startColumnNumber" : 2,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (BlockNode block : mth.getBasicBlocks()) {\n  PhiListAttr phiList=block.get(AType.PHI_LIST);\n  if (phiList == null) {\n    continue;\n  }\n  for (  PhiInsn phiInsn : phiList.getList()) {\n    RegisterArg resArg=phiInsn.getResult();\n    int argsCount=phiInsn.getArgsCount();\n    for (int i=0; i < argsCount; i++) {\n      RegisterArg arg=phiInsn.getArg(i);\n      arg.mergeName(resArg);\n    }\n    VarName varName=resArg.getSVar().getVarName();\n    if (varName == null) {\n      varName=new VarName();\n      resArg.getSVar().setVarName(varName);\n    }\n    for (int i=0; i < argsCount; i++) {\n      RegisterArg arg=phiInsn.getArg(i);\n      arg.getSVar().setVarName(varName);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 132,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 91,
        "startColumnNumber" : 52,
        "endLineNumber" : 115,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  for (  BlockNode block : mth.getBasicBlocks()) {\n    PhiListAttr phiList=block.get(AType.PHI_LIST);\n    if (phiList == null) {\n      continue;\n    }\n    for (    PhiInsn phiInsn : phiList.getList()) {\n      RegisterArg resArg=phiInsn.getResult();\n      int argsCount=phiInsn.getArgsCount();\n      for (int i=0; i < argsCount; i++) {\n        RegisterArg arg=phiInsn.getArg(i);\n        arg.mergeName(resArg);\n      }\n      VarName varName=resArg.getSVar().getVarName();\n      if (varName == null) {\n        varName=new VarName();\n        resArg.getSVar().setVarName(varName);\n      }\n      for (int i=0; i < argsCount; i++) {\n        RegisterArg arg=phiInsn.getArg(i);\n        arg.getSVar().setVarName(varName);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 91,
        "startColumnNumber" : 1,
        "endLineNumber" : 115,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void fixPhiVarNames(MethodNode mth){\n  for (  BlockNode block : mth.getBasicBlocks()) {\n    PhiListAttr phiList=block.get(AType.PHI_LIST);\n    if (phiList == null) {\n      continue;\n    }\n    for (    PhiInsn phiInsn : phiList.getList()) {\n      RegisterArg resArg=phiInsn.getResult();\n      int argsCount=phiInsn.getArgsCount();\n      for (int i=0; i < argsCount; i++) {\n        RegisterArg arg=phiInsn.getArg(i);\n        arg.mergeName(resArg);\n      }\n      VarName varName=resArg.getSVar().getVarName();\n      if (varName == null) {\n        varName=new VarName();\n        resArg.getSVar().setVarName(varName);\n      }\n      for (int i=0; i < argsCount; i++) {\n        RegisterArg arg=phiInsn.getArg(i);\n        arg.getSVar().setVarName(varName);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (varName == null) {\n  varName=new VarName();\n  resArg.getSVar().setVarName(varName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 105,
    "startColumnNumber" : 8,
    "endLineNumber" : 105,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}