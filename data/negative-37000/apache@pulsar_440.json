{
  "id" : 440,
  "expression" : "secretEnv",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-functions/secrets/src/main/java/org/apache/pulsar/functions/secretsproviderconfigurator/KubernetesSecretsProviderConfigurator.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "secretEnv",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 89,
      "startColumnNumber" : 16,
      "endLineNumber" : 89,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 89,
        "startColumnNumber" : 16,
        "endLineNumber" : 89,
        "endColumnNumber" : 46
      },
      "nodeContext" : "secretEnv.name(entry.getKey())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 89,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 63
      },
      "nodeContext" : "secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 89,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 64
      },
      "nodeContext" : "secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 86,
        "startColumnNumber" : 74,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final V1EnvVar secretEnv=new V1EnvVar();\n  Map<String,String> kv=(Map<String,String>)entry.getValue();\n  secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n  container.addEnvItem(secretEnv);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Map.Entry<String,Object> entry : secretsMap.entrySet()) {\n  final V1EnvVar secretEnv=new V1EnvVar();\n  Map<String,String> kv=(Map<String,String>)entry.getValue();\n  secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n  container.addEnvItem(secretEnv);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 82,
        "startColumnNumber" : 67,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Type type=new TypeToken<Map<String,Object>>(){\n  }\n.getType();\n  Map<String,Object> secretsMap=new Gson().fromJson(functionDetails.getSecretsMap(),type);\n  for (  Map.Entry<String,Object> entry : secretsMap.entrySet()) {\n    final V1EnvVar secretEnv=new V1EnvVar();\n    Map<String,String> kv=(Map<String,String>)entry.getValue();\n    secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n    container.addEnvItem(secretEnv);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!StringUtils.isEmpty(functionDetails.getSecretsMap())) {\n  Type type=new TypeToken<Map<String,Object>>(){\n  }\n.getType();\n  Map<String,Object> secretsMap=new Gson().fromJson(functionDetails.getSecretsMap(),type);\n  for (  Map.Entry<String,Object> entry : secretsMap.entrySet()) {\n    final V1EnvVar secretEnv=new V1EnvVar();\n    Map<String,String> kv=(Map<String,String>)entry.getValue();\n    secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n    container.addEnvItem(secretEnv);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 127,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1237,
        "startLineNumber" : 71,
        "startColumnNumber" : 150,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  V1Container container=null;\n  for (  V1Container v1Container : podSpec.getContainers()) {\n    if (v1Container.getName().equals(functionsContainerName)) {\n      container=v1Container;\n      break;\n    }\n  }\n  if (container == null) {\n    throw new RuntimeException(\"No FunctionContainer found\");\n  }\n  if (!StringUtils.isEmpty(functionDetails.getSecretsMap())) {\n    Type type=new TypeToken<Map<String,Object>>(){\n    }\n.getType();\n    Map<String,Object> secretsMap=new Gson().fromJson(functionDetails.getSecretsMap(),type);\n    for (    Map.Entry<String,Object> entry : secretsMap.entrySet()) {\n      final V1EnvVar secretEnv=new V1EnvVar();\n      Map<String,String> kv=(Map<String,String>)entry.getValue();\n      secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n      container.addEnvItem(secretEnv);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1397,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void configureKubernetesRuntimeSecretsProvider(V1PodSpec podSpec,String functionsContainerName,Function.FunctionDetails functionDetails){\n  V1Container container=null;\n  for (  V1Container v1Container : podSpec.getContainers()) {\n    if (v1Container.getName().equals(functionsContainerName)) {\n      container=v1Container;\n      break;\n    }\n  }\n  if (container == null) {\n    throw new RuntimeException(\"No FunctionContainer found\");\n  }\n  if (!StringUtils.isEmpty(functionDetails.getSecretsMap())) {\n    Type type=new TypeToken<Map<String,Object>>(){\n    }\n.getType();\n    Map<String,Object> secretsMap=new Gson().fromJson(functionDetails.getSecretsMap(),type);\n    for (    Map.Entry<String,Object> entry : secretsMap.entrySet()) {\n      final V1EnvVar secretEnv=new V1EnvVar();\n      Map<String,String> kv=(Map<String,String>)entry.getValue();\n      secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n      container.addEnvItem(secretEnv);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 89,
        "startColumnNumber" : 16,
        "endLineNumber" : 89,
        "endColumnNumber" : 46
      },
      "nodeContext" : "secretEnv.name(entry.getKey())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.functions.secretsproviderconfigurator.V1EnvVar"
  }, {
    "nodeContext" : "secretEnv",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 94,
      "startColumnNumber" : 37,
      "endLineNumber" : 94,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 47
      },
      "nodeContext" : "container.addEnvItem(secretEnv)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 48
      },
      "nodeContext" : "container.addEnvItem(secretEnv);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 86,
        "startColumnNumber" : 74,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final V1EnvVar secretEnv=new V1EnvVar();\n  Map<String,String> kv=(Map<String,String>)entry.getValue();\n  secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n  container.addEnvItem(secretEnv);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Map.Entry<String,Object> entry : secretsMap.entrySet()) {\n  final V1EnvVar secretEnv=new V1EnvVar();\n  Map<String,String> kv=(Map<String,String>)entry.getValue();\n  secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n  container.addEnvItem(secretEnv);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 82,
        "startColumnNumber" : 67,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Type type=new TypeToken<Map<String,Object>>(){\n  }\n.getType();\n  Map<String,Object> secretsMap=new Gson().fromJson(functionDetails.getSecretsMap(),type);\n  for (  Map.Entry<String,Object> entry : secretsMap.entrySet()) {\n    final V1EnvVar secretEnv=new V1EnvVar();\n    Map<String,String> kv=(Map<String,String>)entry.getValue();\n    secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n    container.addEnvItem(secretEnv);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!StringUtils.isEmpty(functionDetails.getSecretsMap())) {\n  Type type=new TypeToken<Map<String,Object>>(){\n  }\n.getType();\n  Map<String,Object> secretsMap=new Gson().fromJson(functionDetails.getSecretsMap(),type);\n  for (  Map.Entry<String,Object> entry : secretsMap.entrySet()) {\n    final V1EnvVar secretEnv=new V1EnvVar();\n    Map<String,String> kv=(Map<String,String>)entry.getValue();\n    secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n    container.addEnvItem(secretEnv);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 127,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1237,
        "startLineNumber" : 71,
        "startColumnNumber" : 150,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  V1Container container=null;\n  for (  V1Container v1Container : podSpec.getContainers()) {\n    if (v1Container.getName().equals(functionsContainerName)) {\n      container=v1Container;\n      break;\n    }\n  }\n  if (container == null) {\n    throw new RuntimeException(\"No FunctionContainer found\");\n  }\n  if (!StringUtils.isEmpty(functionDetails.getSecretsMap())) {\n    Type type=new TypeToken<Map<String,Object>>(){\n    }\n.getType();\n    Map<String,Object> secretsMap=new Gson().fromJson(functionDetails.getSecretsMap(),type);\n    for (    Map.Entry<String,Object> entry : secretsMap.entrySet()) {\n      final V1EnvVar secretEnv=new V1EnvVar();\n      Map<String,String> kv=(Map<String,String>)entry.getValue();\n      secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n      container.addEnvItem(secretEnv);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1397,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void configureKubernetesRuntimeSecretsProvider(V1PodSpec podSpec,String functionsContainerName,Function.FunctionDetails functionDetails){\n  V1Container container=null;\n  for (  V1Container v1Container : podSpec.getContainers()) {\n    if (v1Container.getName().equals(functionsContainerName)) {\n      container=v1Container;\n      break;\n    }\n  }\n  if (container == null) {\n    throw new RuntimeException(\"No FunctionContainer found\");\n  }\n  if (!StringUtils.isEmpty(functionDetails.getSecretsMap())) {\n    Type type=new TypeToken<Map<String,Object>>(){\n    }\n.getType();\n    Map<String,Object> secretsMap=new Gson().fromJson(functionDetails.getSecretsMap(),type);\n    for (    Map.Entry<String,Object> entry : secretsMap.entrySet()) {\n      final V1EnvVar secretEnv=new V1EnvVar();\n      Map<String,String> kv=(Map<String,String>)entry.getValue();\n      secretEnv.name(entry.getKey()).valueFrom(new V1EnvVarSource().secretKeyRef(new V1SecretKeySelector().name(kv.get(ID_KEY)).key(kv.get(KEY_KEY))));\n      container.addEnvItem(secretEnv);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 48
      },
      "nodeContext" : "container.addEnvItem(secretEnv);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.functions.secretsproviderconfigurator.V1EnvVar"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 89,
    "startColumnNumber" : 16,
    "endLineNumber" : 89,
    "endColumnNumber" : 25
  }, {
    "charLength" : 9,
    "startLineNumber" : 94,
    "startColumnNumber" : 37,
    "endLineNumber" : 94,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}