{
  "id" : 398,
  "expression" : "(request.fileName != null ? contentDispositionValue(request.fileName) : null)",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-cli/src/test/java/org/springframework/boot/cli/command/init/AbstractHttpClientMockTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(request.fileName != null ? contentDispositionValue(request.fileName) : null)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 81,
      "startLineNumber" : 91,
      "startColumnNumber" : 18,
      "endLineNumber" : 92,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 13,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 91,
        "startColumnNumber" : 9,
        "endLineNumber" : 92,
        "endColumnNumber" : 55
      },
      "nodeContext" : "header=(request.fileName != null ? contentDispositionValue(request.fileName) : null)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 91,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 56
      },
      "nodeContext" : "String header=(request.fileName != null ? contentDispositionValue(request.fileName) : null);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 511,
        "startLineNumber" : 85,
        "startColumnNumber" : 64,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  mockSuccessfulMetadataGet(false);\n  CloseableHttpResponse response=mock(CloseableHttpResponse.class);\n  mockHttpEntity(response,request.content,request.contentType);\n  mockStatus(response,200);\n  String header=(request.fileName != null ? contentDispositionValue(request.fileName) : null);\n  mockHttpHeader(response,\"Content-Disposition\",header);\n  given(this.http.execute(argThat(getForNonMetadata()))).willReturn(response);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 623,
        "startLineNumber" : 84,
        "startColumnNumber" : 1,
        "endLineNumber" : 95,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected void mockSuccessfulProjectGeneration(MockHttpProjectGenerationRequest request) throws IOException {\n  mockSuccessfulMetadataGet(false);\n  CloseableHttpResponse response=mock(CloseableHttpResponse.class);\n  mockHttpEntity(response,request.content,request.contentType);\n  mockStatus(response,200);\n  String header=(request.fileName != null ? contentDispositionValue(request.fileName) : null);\n  mockHttpHeader(response,\"Content-Disposition\",header);\n  given(this.http.execute(argThat(getForNonMetadata()))).willReturn(response);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 91,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 56
      },
      "nodeContext" : "String header=(request.fileName != null ? contentDispositionValue(request.fileName) : null);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 81,
    "startLineNumber" : 91,
    "startColumnNumber" : 18,
    "endLineNumber" : 92,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}