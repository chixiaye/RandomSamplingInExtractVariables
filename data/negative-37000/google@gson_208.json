{
  "id" : 208,
  "expression" : "(Iterator<?>)o",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/main/java/com/google/gson/internal/bind/JsonTreeReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(Iterator<?>)o",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 94,
      "startColumnNumber" : 29,
      "endLineNumber" : 94,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 94,
        "startColumnNumber" : 18,
        "endLineNumber" : 94,
        "endColumnNumber" : 44
      },
      "nodeContext" : "iterator=(Iterator<?>)o",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Iterator<?> iterator=(Iterator<?>)o;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 92,
        "startColumnNumber" : 31,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean isObject=stack.get(stack.size() - 2) instanceof JsonObject;\n  Iterator<?> iterator=(Iterator<?>)o;\n  if (iterator.hasNext()) {\n    if (isObject) {\n      return JsonToken.NAME;\n    }\n else {\n      stack.add(iterator.next());\n      return peek();\n    }\n  }\n else {\n    return isObject ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1174,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (o instanceof Iterator) {\n  boolean isObject=stack.get(stack.size() - 2) instanceof JsonObject;\n  Iterator<?> iterator=(Iterator<?>)o;\n  if (iterator.hasNext()) {\n    if (isObject) {\n      return JsonToken.NAME;\n    }\n else {\n      stack.add(iterator.next());\n      return peek();\n    }\n  }\n else {\n    return isObject ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;\n  }\n}\n else if (o instanceof JsonObject) {\n  return JsonToken.BEGIN_OBJECT;\n}\n else if (o instanceof JsonArray) {\n  return JsonToken.BEGIN_ARRAY;\n}\n else if (o instanceof JsonPrimitive) {\n  JsonPrimitive primitive=(JsonPrimitive)o;\n  if (primitive.isString()) {\n    return JsonToken.STRING;\n  }\n else   if (primitive.isBoolean()) {\n    return JsonToken.BOOLEAN;\n  }\n else   if (primitive.isNumber()) {\n    return JsonToken.NUMBER;\n  }\n else {\n    throw new AssertionError();\n  }\n}\n else if (o instanceof JsonNull) {\n  return JsonToken.NULL;\n}\n else if (o == SENTINEL_CLOSED) {\n  throw new IllegalStateException(\"JsonReader is closed\");\n}\n else {\n  throw new AssertionError();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 159,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1283,
        "startLineNumber" : 86,
        "startColumnNumber" : 55,
        "endLineNumber" : 127,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (stack.isEmpty()) {\n    return JsonToken.END_DOCUMENT;\n  }\n  Object o=peekStack();\n  if (o instanceof Iterator) {\n    boolean isObject=stack.get(stack.size() - 2) instanceof JsonObject;\n    Iterator<?> iterator=(Iterator<?>)o;\n    if (iterator.hasNext()) {\n      if (isObject) {\n        return JsonToken.NAME;\n      }\n else {\n        stack.add(iterator.next());\n        return peek();\n      }\n    }\n else {\n      return isObject ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;\n    }\n  }\n else   if (o instanceof JsonObject) {\n    return JsonToken.BEGIN_OBJECT;\n  }\n else   if (o instanceof JsonArray) {\n    return JsonToken.BEGIN_ARRAY;\n  }\n else   if (o instanceof JsonPrimitive) {\n    JsonPrimitive primitive=(JsonPrimitive)o;\n    if (primitive.isString()) {\n      return JsonToken.STRING;\n    }\n else     if (primitive.isBoolean()) {\n      return JsonToken.BOOLEAN;\n    }\n else     if (primitive.isNumber()) {\n      return JsonToken.NUMBER;\n    }\n else {\n      throw new AssertionError();\n    }\n  }\n else   if (o instanceof JsonNull) {\n    return JsonToken.NULL;\n  }\n else   if (o == SENTINEL_CLOSED) {\n    throw new IllegalStateException(\"JsonReader is closed\");\n  }\n else {\n    throw new AssertionError();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1336,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 127,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public JsonToken peek() throws IOException {\n  if (stack.isEmpty()) {\n    return JsonToken.END_DOCUMENT;\n  }\n  Object o=peekStack();\n  if (o instanceof Iterator) {\n    boolean isObject=stack.get(stack.size() - 2) instanceof JsonObject;\n    Iterator<?> iterator=(Iterator<?>)o;\n    if (iterator.hasNext()) {\n      if (isObject) {\n        return JsonToken.NAME;\n      }\n else {\n        stack.add(iterator.next());\n        return peek();\n      }\n    }\n else {\n      return isObject ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;\n    }\n  }\n else   if (o instanceof JsonObject) {\n    return JsonToken.BEGIN_OBJECT;\n  }\n else   if (o instanceof JsonArray) {\n    return JsonToken.BEGIN_ARRAY;\n  }\n else   if (o instanceof JsonPrimitive) {\n    JsonPrimitive primitive=(JsonPrimitive)o;\n    if (primitive.isString()) {\n      return JsonToken.STRING;\n    }\n else     if (primitive.isBoolean()) {\n      return JsonToken.BOOLEAN;\n    }\n else     if (primitive.isNumber()) {\n      return JsonToken.NUMBER;\n    }\n else {\n      throw new AssertionError();\n    }\n  }\n else   if (o instanceof JsonNull) {\n    return JsonToken.NULL;\n  }\n else   if (o == SENTINEL_CLOSED) {\n    throw new IllegalStateException(\"JsonReader is closed\");\n  }\n else {\n    throw new AssertionError();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Iterator<?> iterator=(Iterator<?>)o;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.util.Iterator<>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 94,
    "startColumnNumber" : 29,
    "endLineNumber" : 94,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}