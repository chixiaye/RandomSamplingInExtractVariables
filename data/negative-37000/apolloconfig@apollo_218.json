{
  "id" : 218,
  "expression" : "namespaceVO.getBaseInfo().getAppId()",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/NamespaceServiceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "namespaceVO.getBaseInfo().getAppId()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 95,
      "startColumnNumber" : 24,
      "endLineNumber" : 95,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(appId,namespaceVO.getBaseInfo().getAppId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2470,
        "startLineNumber" : 49,
        "startColumnNumber" : 34,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String appId=\"6666\";\n  String clusterName=\"default\";\n  String namespaceName=\"application\";\n  AppNamespace applicationAppNamespace=mock(AppNamespace.class);\n  AppNamespace hermesAppNamespace=mock(AppNamespace.class);\n  NamespaceDTO application=new NamespaceDTO();\n  application.setId(1);\n  application.setClusterName(clusterName);\n  application.setAppId(appId);\n  application.setNamespaceName(namespaceName);\n  NamespaceDTO hermes=new NamespaceDTO();\n  hermes.setId(2);\n  hermes.setClusterName(\"default\");\n  hermes.setAppId(appId);\n  hermes.setNamespaceName(\"hermes\");\n  List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n  ReleaseDTO someRelease=new ReleaseDTO();\n  someRelease.setConfigurations(\"{\\\"a\\\":\\\"123\\\",\\\"b\\\":\\\"123\\\"}\");\n  ItemDTO i1=new ItemDTO(\"a\",\"123\",\"\",1);\n  ItemDTO i2=new ItemDTO(\"b\",\"1\",\"\",2);\n  ItemDTO i3=new ItemDTO(\"\",\"\",\"#dddd\",3);\n  ItemDTO i4=new ItemDTO(\"c\",\"1\",\"\",4);\n  List<ItemDTO> someItems=Arrays.asList(i1,i2,i3,i4);\n  when(applicationAppNamespace.getFormat()).thenReturn(ConfigFileFormat.Properties.getValue());\n  when(hermesAppNamespace.getFormat()).thenReturn(ConfigFileFormat.XML.getValue());\n  when(appNamespaceService.findByAppIdAndName(appId,namespaceName)).thenReturn(applicationAppNamespace);\n  when(appNamespaceService.findPublicAppNamespace(\"hermes\")).thenReturn(hermesAppNamespace);\n  when(namespaceAPI.findNamespaceByCluster(appId,Env.DEV,clusterName)).thenReturn(namespaces);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someRelease);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,\"hermes\")).thenReturn(someRelease);\n  when(itemService.findItems(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someItems);\n  List<NamespaceVO> namespaceVOs=namespaceService.findNamespaces(appId,Env.DEV,clusterName);\n  assertEquals(2,namespaceVOs.size());\n  NamespaceVO namespaceVO=namespaceVOs.get(0);\n  assertEquals(4,namespaceVO.getItems().size());\n  assertEquals(\"a\",namespaceVO.getItems().get(0).getItem().getKey());\n  assertEquals(2,namespaceVO.getItemModifiedCnt());\n  assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n  assertEquals(clusterName,namespaceVO.getBaseInfo().getClusterName());\n  assertEquals(namespaceName,namespaceVO.getBaseInfo().getNamespaceName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 379,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2510,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFindNamespace(){\n  String appId=\"6666\";\n  String clusterName=\"default\";\n  String namespaceName=\"application\";\n  AppNamespace applicationAppNamespace=mock(AppNamespace.class);\n  AppNamespace hermesAppNamespace=mock(AppNamespace.class);\n  NamespaceDTO application=new NamespaceDTO();\n  application.setId(1);\n  application.setClusterName(clusterName);\n  application.setAppId(appId);\n  application.setNamespaceName(namespaceName);\n  NamespaceDTO hermes=new NamespaceDTO();\n  hermes.setId(2);\n  hermes.setClusterName(\"default\");\n  hermes.setAppId(appId);\n  hermes.setNamespaceName(\"hermes\");\n  List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n  ReleaseDTO someRelease=new ReleaseDTO();\n  someRelease.setConfigurations(\"{\\\"a\\\":\\\"123\\\",\\\"b\\\":\\\"123\\\"}\");\n  ItemDTO i1=new ItemDTO(\"a\",\"123\",\"\",1);\n  ItemDTO i2=new ItemDTO(\"b\",\"1\",\"\",2);\n  ItemDTO i3=new ItemDTO(\"\",\"\",\"#dddd\",3);\n  ItemDTO i4=new ItemDTO(\"c\",\"1\",\"\",4);\n  List<ItemDTO> someItems=Arrays.asList(i1,i2,i3,i4);\n  when(applicationAppNamespace.getFormat()).thenReturn(ConfigFileFormat.Properties.getValue());\n  when(hermesAppNamespace.getFormat()).thenReturn(ConfigFileFormat.XML.getValue());\n  when(appNamespaceService.findByAppIdAndName(appId,namespaceName)).thenReturn(applicationAppNamespace);\n  when(appNamespaceService.findPublicAppNamespace(\"hermes\")).thenReturn(hermesAppNamespace);\n  when(namespaceAPI.findNamespaceByCluster(appId,Env.DEV,clusterName)).thenReturn(namespaces);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someRelease);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,\"hermes\")).thenReturn(someRelease);\n  when(itemService.findItems(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someItems);\n  List<NamespaceVO> namespaceVOs=namespaceService.findNamespaces(appId,Env.DEV,clusterName);\n  assertEquals(2,namespaceVOs.size());\n  NamespaceVO namespaceVO=namespaceVOs.get(0);\n  assertEquals(4,namespaceVO.getItems().size());\n  assertEquals(\"a\",namespaceVO.getItems().get(0).getItem().getKey());\n  assertEquals(2,namespaceVO.getItemModifiedCnt());\n  assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n  assertEquals(clusterName,namespaceVO.getBaseInfo().getClusterName());\n  assertEquals(namespaceName,namespaceVO.getBaseInfo().getNamespaceName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 385,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 95,
    "startColumnNumber" : 24,
    "endLineNumber" : 95,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}