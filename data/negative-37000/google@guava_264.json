{
  "id" : 264,
  "expression" : "pos",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/io/LineBuffer.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pos",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 54,
      "startColumnNumber" : 26,
      "endLineNumber" : 54,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 54,
        "startColumnNumber" : 21,
        "endLineNumber" : 54,
        "endColumnNumber" : 30
      },
      "nodeContext" : "cbuf[pos]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 54,
        "startColumnNumber" : 21,
        "endLineNumber" : 54,
        "endColumnNumber" : 38
      },
      "nodeContext" : "cbuf[pos] == '\\n'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 54,
        "startColumnNumber" : 10,
        "endLineNumber" : 54,
        "endColumnNumber" : 39
      },
      "nodeContext" : "finishLine(cbuf[pos] == '\\n')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (finishLine(cbuf[pos] == '\\n')) {\n  pos++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 52,
        "startColumnNumber" : 30,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (finishLine(cbuf[pos] == '\\n')) {\n    pos++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (sawReturn && len > 0) {\n  if (finishLine(cbuf[pos] == '\\n')) {\n    pos++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 50,
        "startColumnNumber" : 71,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1353,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Process additional characters from the stream. When a line separator is found the contents of the line and the line separator itself are passed to the abstract  {@link #handleLine} method.\n * @param cbuf the character buffer to process\n * @param off the offset into the buffer\n * @param len the number of characters to process\n * @throws IOException if an I/O error occurs\n * @see #finish\n */\nprotected void add(char[] cbuf,int off,int len) throws IOException {\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 54,
        "startColumnNumber" : 10,
        "endLineNumber" : 54,
        "endColumnNumber" : 39
      },
      "nodeContext" : "finishLine(cbuf[pos] == '\\n')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "pos",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 59,
      "startColumnNumber" : 16,
      "endLineNumber" : 59,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 19
      },
      "nodeContext" : "start=pos",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 20
      },
      "nodeContext" : "int start=pos;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 50,
        "startColumnNumber" : 71,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1353,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Process additional characters from the stream. When a line separator is found the contents of the line and the line separator itself are passed to the abstract  {@link #handleLine} method.\n * @param cbuf the character buffer to process\n * @param off the offset into the buffer\n * @param len the number of characters to process\n * @throws IOException if an I/O error occurs\n * @see #finish\n */\nprotected void add(char[] cbuf,int off,int len) throws IOException {\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 20
      },
      "nodeContext" : "int start=pos;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "pos",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 60,
      "startColumnNumber" : 30,
      "endLineNumber" : 60,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 60,
        "startColumnNumber" : 30,
        "endLineNumber" : 60,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pos < end",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 50,
        "startColumnNumber" : 71,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1353,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Process additional characters from the stream. When a line separator is found the contents of the line and the line separator itself are passed to the abstract  {@link #handleLine} method.\n * @param cbuf the character buffer to process\n * @param off the offset into the buffer\n * @param len the number of characters to process\n * @throws IOException if an I/O error occurs\n * @see #finish\n */\nprotected void add(char[] cbuf,int off,int len) throws IOException {\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 60,
        "startColumnNumber" : 30,
        "endLineNumber" : 60,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pos < end",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "pos",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 61,
      "startColumnNumber" : 19,
      "endLineNumber" : 61,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SwitchStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 61,
        "startColumnNumber" : 14,
        "endLineNumber" : 61,
        "endColumnNumber" : 23
      },
      "nodeContext" : "cbuf[pos]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (cbuf[pos]) {\ncase '\\r':  line.append(cbuf,start,pos - start);\nsawReturn=true;\nif (pos + 1 < end) {\nif (finishLine(cbuf[pos + 1] == '\\n')) {\n  pos++;\n}\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 60,
        "startColumnNumber" : 48,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 50,
        "startColumnNumber" : 71,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1353,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Process additional characters from the stream. When a line separator is found the contents of the line and the line separator itself are passed to the abstract  {@link #handleLine} method.\n * @param cbuf the character buffer to process\n * @param off the offset into the buffer\n * @param len the number of characters to process\n * @throws IOException if an I/O error occurs\n * @see #finish\n */\nprotected void add(char[] cbuf,int off,int len) throws IOException {\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SwitchStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 61,
        "startColumnNumber" : 14,
        "endLineNumber" : 61,
        "endColumnNumber" : 23
      },
      "nodeContext" : "cbuf[pos]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "pos",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 63,
      "startColumnNumber" : 35,
      "endLineNumber" : 63,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 63,
        "startColumnNumber" : 35,
        "endLineNumber" : 63,
        "endColumnNumber" : 46
      },
      "nodeContext" : "pos - start",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 63,
        "startColumnNumber" : 10,
        "endLineNumber" : 63,
        "endColumnNumber" : 47
      },
      "nodeContext" : "line.append(cbuf,start,pos - start)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 63,
        "startColumnNumber" : 10,
        "endLineNumber" : 63,
        "endColumnNumber" : 48
      },
      "nodeContext" : "line.append(cbuf,start,pos - start);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (cbuf[pos]) {\ncase '\\r':  line.append(cbuf,start,pos - start);\nsawReturn=true;\nif (pos + 1 < end) {\nif (finishLine(cbuf[pos + 1] == '\\n')) {\n  pos++;\n}\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 60,
        "startColumnNumber" : 48,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 50,
        "startColumnNumber" : 71,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1353,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Process additional characters from the stream. When a line separator is found the contents of the line and the line separator itself are passed to the abstract  {@link #handleLine} method.\n * @param cbuf the character buffer to process\n * @param off the offset into the buffer\n * @param len the number of characters to process\n * @throws IOException if an I/O error occurs\n * @see #finish\n */\nprotected void add(char[] cbuf,int off,int len) throws IOException {\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 63,
        "startColumnNumber" : 10,
        "endLineNumber" : 63,
        "endColumnNumber" : 48
      },
      "nodeContext" : "line.append(cbuf,start,pos - start);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "pos",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 65,
      "startColumnNumber" : 14,
      "endLineNumber" : 65,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 65,
        "startColumnNumber" : 14,
        "endLineNumber" : 65,
        "endColumnNumber" : 21
      },
      "nodeContext" : "pos + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 65,
        "startColumnNumber" : 14,
        "endLineNumber" : 65,
        "endColumnNumber" : 27
      },
      "nodeContext" : "pos + 1 < end",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 65,
        "startColumnNumber" : 10,
        "endLineNumber" : 69,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (cbuf[pos]) {\ncase '\\r':  line.append(cbuf,start,pos - start);\nsawReturn=true;\nif (pos + 1 < end) {\nif (finishLine(cbuf[pos + 1] == '\\n')) {\n  pos++;\n}\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 60,
        "startColumnNumber" : 48,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 50,
        "startColumnNumber" : 71,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1353,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Process additional characters from the stream. When a line separator is found the contents of the line and the line separator itself are passed to the abstract  {@link #handleLine} method.\n * @param cbuf the character buffer to process\n * @param off the offset into the buffer\n * @param len the number of characters to process\n * @throws IOException if an I/O error occurs\n * @see #finish\n */\nprotected void add(char[] cbuf,int off,int len) throws IOException {\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 65,
        "startColumnNumber" : 14,
        "endLineNumber" : 65,
        "endColumnNumber" : 27
      },
      "nodeContext" : "pos + 1 < end",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "pos",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 66,
      "startColumnNumber" : 32,
      "endLineNumber" : 66,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 66,
        "startColumnNumber" : 32,
        "endLineNumber" : 66,
        "endColumnNumber" : 39
      },
      "nodeContext" : "pos + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 66,
        "startColumnNumber" : 27,
        "endLineNumber" : 66,
        "endColumnNumber" : 40
      },
      "nodeContext" : "cbuf[pos + 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 66,
        "startColumnNumber" : 27,
        "endLineNumber" : 66,
        "endColumnNumber" : 48
      },
      "nodeContext" : "cbuf[pos + 1] == '\\n'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 49
      },
      "nodeContext" : "finishLine(cbuf[pos + 1] == '\\n')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (finishLine(cbuf[pos + 1] == '\\n')) {\n  pos++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 65,
        "startColumnNumber" : 29,
        "endLineNumber" : 69,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 65,
        "startColumnNumber" : 10,
        "endLineNumber" : 69,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (cbuf[pos]) {\ncase '\\r':  line.append(cbuf,start,pos - start);\nsawReturn=true;\nif (pos + 1 < end) {\nif (finishLine(cbuf[pos + 1] == '\\n')) {\n  pos++;\n}\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 60,
        "startColumnNumber" : 48,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 50,
        "startColumnNumber" : 71,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1353,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Process additional characters from the stream. When a line separator is found the contents of the line and the line separator itself are passed to the abstract  {@link #handleLine} method.\n * @param cbuf the character buffer to process\n * @param off the offset into the buffer\n * @param len the number of characters to process\n * @throws IOException if an I/O error occurs\n * @see #finish\n */\nprotected void add(char[] cbuf,int off,int len) throws IOException {\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 49
      },
      "nodeContext" : "finishLine(cbuf[pos + 1] == '\\n')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "pos",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 70,
      "startColumnNumber" : 18,
      "endLineNumber" : 70,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 70,
        "startColumnNumber" : 18,
        "endLineNumber" : 70,
        "endColumnNumber" : 25
      },
      "nodeContext" : "pos + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 70,
        "startColumnNumber" : 10,
        "endLineNumber" : 70,
        "endColumnNumber" : 25
      },
      "nodeContext" : "start=pos + 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 70,
        "startColumnNumber" : 10,
        "endLineNumber" : 70,
        "endColumnNumber" : 26
      },
      "nodeContext" : "start=pos + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (cbuf[pos]) {\ncase '\\r':  line.append(cbuf,start,pos - start);\nsawReturn=true;\nif (pos + 1 < end) {\nif (finishLine(cbuf[pos + 1] == '\\n')) {\n  pos++;\n}\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 60,
        "startColumnNumber" : 48,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 50,
        "startColumnNumber" : 71,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1353,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Process additional characters from the stream. When a line separator is found the contents of the line and the line separator itself are passed to the abstract  {@link #handleLine} method.\n * @param cbuf the character buffer to process\n * @param off the offset into the buffer\n * @param len the number of characters to process\n * @throws IOException if an I/O error occurs\n * @see #finish\n */\nprotected void add(char[] cbuf,int off,int len) throws IOException {\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 70,
        "startColumnNumber" : 10,
        "endLineNumber" : 70,
        "endColumnNumber" : 26
      },
      "nodeContext" : "start=pos + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "pos",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 74,
      "startColumnNumber" : 35,
      "endLineNumber" : 74,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 74,
        "startColumnNumber" : 35,
        "endLineNumber" : 74,
        "endColumnNumber" : 46
      },
      "nodeContext" : "pos - start",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 74,
        "startColumnNumber" : 10,
        "endLineNumber" : 74,
        "endColumnNumber" : 47
      },
      "nodeContext" : "line.append(cbuf,start,pos - start)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 74,
        "startColumnNumber" : 10,
        "endLineNumber" : 74,
        "endColumnNumber" : 48
      },
      "nodeContext" : "line.append(cbuf,start,pos - start);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (cbuf[pos]) {\ncase '\\r':  line.append(cbuf,start,pos - start);\nsawReturn=true;\nif (pos + 1 < end) {\nif (finishLine(cbuf[pos + 1] == '\\n')) {\n  pos++;\n}\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 60,
        "startColumnNumber" : 48,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 50,
        "startColumnNumber" : 71,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1353,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Process additional characters from the stream. When a line separator is found the contents of the line and the line separator itself are passed to the abstract  {@link #handleLine} method.\n * @param cbuf the character buffer to process\n * @param off the offset into the buffer\n * @param len the number of characters to process\n * @throws IOException if an I/O error occurs\n * @see #finish\n */\nprotected void add(char[] cbuf,int off,int len) throws IOException {\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 74,
        "startColumnNumber" : 10,
        "endLineNumber" : 74,
        "endColumnNumber" : 48
      },
      "nodeContext" : "line.append(cbuf,start,pos - start);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "pos",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 76,
      "startColumnNumber" : 18,
      "endLineNumber" : 76,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 76,
        "startColumnNumber" : 18,
        "endLineNumber" : 76,
        "endColumnNumber" : 25
      },
      "nodeContext" : "pos + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 76,
        "startColumnNumber" : 10,
        "endLineNumber" : 76,
        "endColumnNumber" : 25
      },
      "nodeContext" : "start=pos + 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 76,
        "startColumnNumber" : 10,
        "endLineNumber" : 76,
        "endColumnNumber" : 26
      },
      "nodeContext" : "start=pos + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (cbuf[pos]) {\ncase '\\r':  line.append(cbuf,start,pos - start);\nsawReturn=true;\nif (pos + 1 < end) {\nif (finishLine(cbuf[pos + 1] == '\\n')) {\n  pos++;\n}\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 60,
        "startColumnNumber" : 48,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':    line.append(cbuf,start,pos - start);\n  sawReturn=true;\nif (pos + 1 < end) {\n  if (finishLine(cbuf[pos + 1] == '\\n')) {\n    pos++;\n  }\n}\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 50,
        "startColumnNumber" : 71,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1353,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Process additional characters from the stream. When a line separator is found the contents of the line and the line separator itself are passed to the abstract  {@link #handleLine} method.\n * @param cbuf the character buffer to process\n * @param off the offset into the buffer\n * @param len the number of characters to process\n * @throws IOException if an I/O error occurs\n * @see #finish\n */\nprotected void add(char[] cbuf,int off,int len) throws IOException {\n  int pos=off;\n  if (sawReturn && len > 0) {\n    if (finishLine(cbuf[pos] == '\\n')) {\n      pos++;\n    }\n  }\n  int start=pos;\n  for (int end=off + len; pos < end; pos++) {\nswitch (cbuf[pos]) {\ncase '\\r':      line.append(cbuf,start,pos - start);\n    sawReturn=true;\n  if (pos + 1 < end) {\n    if (finishLine(cbuf[pos + 1] == '\\n')) {\n      pos++;\n    }\n  }\nstart=pos + 1;\nbreak;\ncase '\\n':line.append(cbuf,start,pos - start);\nfinishLine(true);\nstart=pos + 1;\nbreak;\ndefault:}\n}\nline.append(cbuf,start,off + len - start);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 76,
        "startColumnNumber" : 10,
        "endLineNumber" : 76,
        "endColumnNumber" : 26
      },
      "nodeContext" : "start=pos + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 54,
    "startColumnNumber" : 26,
    "endLineNumber" : 54,
    "endColumnNumber" : 29
  }, {
    "charLength" : 3,
    "startLineNumber" : 59,
    "startColumnNumber" : 16,
    "endLineNumber" : 59,
    "endColumnNumber" : 19
  }, {
    "charLength" : 3,
    "startLineNumber" : 60,
    "startColumnNumber" : 30,
    "endLineNumber" : 60,
    "endColumnNumber" : 33
  }, {
    "charLength" : 3,
    "startLineNumber" : 61,
    "startColumnNumber" : 19,
    "endLineNumber" : 61,
    "endColumnNumber" : 22
  }, {
    "charLength" : 3,
    "startLineNumber" : 63,
    "startColumnNumber" : 35,
    "endLineNumber" : 63,
    "endColumnNumber" : 38
  }, {
    "charLength" : 3,
    "startLineNumber" : 65,
    "startColumnNumber" : 14,
    "endLineNumber" : 65,
    "endColumnNumber" : 17
  }, {
    "charLength" : 3,
    "startLineNumber" : 66,
    "startColumnNumber" : 32,
    "endLineNumber" : 66,
    "endColumnNumber" : 35
  }, {
    "charLength" : 3,
    "startLineNumber" : 70,
    "startColumnNumber" : 18,
    "endLineNumber" : 70,
    "endColumnNumber" : 21
  }, {
    "charLength" : 3,
    "startLineNumber" : 74,
    "startColumnNumber" : 35,
    "endLineNumber" : 74,
    "endColumnNumber" : 38
  }, {
    "charLength" : 3,
    "startLineNumber" : 76,
    "startColumnNumber" : 18,
    "endLineNumber" : 76,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  } ]
}