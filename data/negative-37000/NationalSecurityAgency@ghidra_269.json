{
  "id" : 269,
  "expression" : "\"Invalid symbol type: \"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/WithSymbolApplier.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Invalid symbol type: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 45,
      "startColumnNumber" : 4,
      "endLineNumber" : 45,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 71
      },
      "nodeContext" : "\"Invalid symbol type: \" + abstractSymbol.getClass().getSimpleName()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 44,
        "startColumnNumber" : 9,
        "endLineNumber" : 45,
        "endColumnNumber" : 72
      },
      "nodeContext" : "new AssertException(\"Invalid symbol type: \" + abstractSymbol.getClass().getSimpleName())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 44,
        "startColumnNumber" : 3,
        "endLineNumber" : 45,
        "endColumnNumber" : 73
      },
      "nodeContext" : "throw new AssertException(\"Invalid symbol type: \" + abstractSymbol.getClass().getSimpleName());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 43,
        "startColumnNumber" : 57,
        "endLineNumber" : 46,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  throw new AssertException(\"Invalid symbol type: \" + abstractSymbol.getClass().getSimpleName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 46,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!(abstractSymbol instanceof AbstractWithMsSymbol)) {\n  throw new AssertException(\"Invalid symbol type: \" + abstractSymbol.getClass().getSimpleName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 40,
        "startColumnNumber" : 83,
        "endLineNumber" : 48,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super(applicator,iter);\n  AbstractMsSymbol abstractSymbol=iter.next();\n  if (!(abstractSymbol instanceof AbstractWithMsSymbol)) {\n    throw new AssertException(\"Invalid symbol type: \" + abstractSymbol.getClass().getSimpleName());\n  }\n  symbol=(AbstractWithMsSymbol)abstractSymbol;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 35,
        "startColumnNumber" : 1,
        "endLineNumber" : 48,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Constructor\n * @param applicator the {@link PdbApplicator} for which we are working.\n * @param iter the Iterator containing the symbol sequence being processed\n */\npublic WithSymbolApplier(PdbApplicator applicator,AbstractMsSymbolIterator iter){\n  super(applicator,iter);\n  AbstractMsSymbol abstractSymbol=iter.next();\n  if (!(abstractSymbol instanceof AbstractWithMsSymbol)) {\n    throw new AssertException(\"Invalid symbol type: \" + abstractSymbol.getClass().getSimpleName());\n  }\n  symbol=(AbstractWithMsSymbol)abstractSymbol;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 71
      },
      "nodeContext" : "\"Invalid symbol type: \" + abstractSymbol.getClass().getSimpleName()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 45,
    "startColumnNumber" : 4,
    "endLineNumber" : 45,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}