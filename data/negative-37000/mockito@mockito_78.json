{
  "id" : 78,
  "expression" : "null",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/util/MockUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 42,
      "startColumnNumber" : 29,
      "endLineNumber" : 42,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 33
      },
      "nodeContext" : "spiedInstance != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 639,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (spiedInstance != null) {\n  mock=mockMaker.createSpy(settings,mockHandler,(T)spiedInstance).orElseGet(() -> {\n    T instance=mockMaker.createMock(settings,mockHandler);\n    new LenientCopyTool().copyToMock(spiedInstance,instance);\n    return instance;\n  }\n);\n}\n else {\n  mock=mockMaker.createMock(settings,mockHandler);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 827,
        "startLineNumber" : 36,
        "startColumnNumber" : 69,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockHandler mockHandler=createMockHandler(settings);\n  Object spiedInstance=settings.getSpiedInstance();\n  T mock;\n  if (spiedInstance != null) {\n    mock=mockMaker.createSpy(settings,mockHandler,(T)spiedInstance).orElseGet(() -> {\n      T instance=mockMaker.createMock(settings,mockHandler);\n      new LenientCopyTool().copyToMock(spiedInstance,instance);\n      return instance;\n    }\n);\n  }\n else {\n    mock=mockMaker.createMock(settings,mockHandler);\n  }\n  return mock;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static <T>T createMock(MockCreationSettings<T> settings){\n  MockHandler mockHandler=createMockHandler(settings);\n  Object spiedInstance=settings.getSpiedInstance();\n  T mock;\n  if (spiedInstance != null) {\n    mock=mockMaker.createSpy(settings,mockHandler,(T)spiedInstance).orElseGet(() -> {\n      T instance=mockMaker.createMock(settings,mockHandler);\n      new LenientCopyTool().copyToMock(spiedInstance,instance);\n      return instance;\n    }\n);\n  }\n else {\n    mock=mockMaker.createMock(settings,mockHandler);\n  }\n  return mock;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 33
      },
      "nodeContext" : "spiedInstance != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 42,
    "startColumnNumber" : 29,
    "endLineNumber" : 42,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}