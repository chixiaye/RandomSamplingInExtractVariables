{
  "id" : 156,
  "expression" : "3",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/distribution/StackConveyor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 86,
      "startColumnNumber" : 21,
      "endLineNumber" : 86,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 86,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 23
      },
      "nodeContext" : "bits[3]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 86,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 34
      },
      "nodeContext" : "bits[3] & (1 << i)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 86,
        "startColumnNumber" : 15,
        "endLineNumber" : 86,
        "endColumnNumber" : 35
      },
      "nodeContext" : "(bits[3] & (1 << i))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 86,
        "startColumnNumber" : 15,
        "endLineNumber" : 86,
        "endColumnNumber" : 40
      },
      "nodeContext" : "(bits[3] & (1 << i)) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((bits[3] & (1 << i)) == 0) {\n  Draw.rect(edgeRegion,req.drawx(),req.drawy(),(req.rotation - i) * 90);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 85,
        "startColumnNumber" : 34,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if ((bits[3] & (1 << i)) == 0) {\n    Draw.rect(edgeRegion,req.drawx(),req.drawy(),(req.rotation - i) * 90);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 4; i++) {\n  if ((bits[3] & (1 << i)) == 0) {\n    Draw.rect(edgeRegion,req.drawx(),req.drawy(),(req.rotation - i) * 90);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 44,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 394,
        "startLineNumber" : 77,
        "startColumnNumber" : 74,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int[] bits=getTiling(req,list);\n  if (bits == null)   return;\n  TextureRegion region=regions[0];\n  Draw.rect(region,req.drawx(),req.drawy(),req.rotation * 90);\n  for (int i=0; i < 4; i++) {\n    if ((bits[3] & (1 << i)) == 0) {\n      Draw.rect(edgeRegion,req.drawx(),req.drawy(),(req.rotation - i) * 90);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void drawRequestRegion(BuildPlan req,Eachable<BuildPlan> list){\n  int[] bits=getTiling(req,list);\n  if (bits == null)   return;\n  TextureRegion region=regions[0];\n  Draw.rect(region,req.drawx(),req.drawy(),req.rotation * 90);\n  for (int i=0; i < 4; i++) {\n    if ((bits[3] & (1 << i)) == 0) {\n      Draw.rect(edgeRegion,req.drawx(),req.drawy(),(req.rotation - i) * 90);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 86,
        "startColumnNumber" : 15,
        "endLineNumber" : 86,
        "endColumnNumber" : 40
      },
      "nodeContext" : "(bits[3] & (1 << i)) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 86,
    "startColumnNumber" : 21,
    "endLineNumber" : 86,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}