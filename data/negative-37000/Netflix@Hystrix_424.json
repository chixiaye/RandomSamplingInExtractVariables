{
  "id" : 424,
  "expression" : "cp",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-network-auditor-agent/src/main/java/com/netflix/hystrix/contrib/networkauditor/NetworkClassTransform.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 86,
      "startColumnNumber" : 26,
      "endLineNumber" : 86,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 86,
        "startColumnNumber" : 26,
        "endLineNumber" : 86,
        "endColumnNumber" : 43
      },
      "nodeContext" : "cp.get(className)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 86,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 43
      },
      "nodeContext" : "ctClazz=cp.get(className)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 44
      },
      "nodeContext" : "CtClass ctClazz=cp.get(className);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 84,
        "startColumnNumber" : 158,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ClassPool cp=ClassPool.getDefault();\n  CtClass ctClazz=cp.get(className);\n  if (wrapConstructors) {\n    CtConstructor[] constructors=ctClazz.getConstructors();\n    for (    CtConstructor constructor : constructors) {\n      try {\n        constructor.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.notifyOfNetworkEvent(); }\");\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed trying to wrap constructor of class: \" + className,e);\n      }\n    }\n  }\n  CtMethod[] methods=ctClazz.getDeclaredMethods();\n  for (  CtMethod method : methods) {\n    try {\n      for (      String methodName : methodNames) {\n        if (method.getName().equals(methodName)) {\n          method.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.handleNetworkEvent(); }\");\n        }\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed trying to wrap method [\" + method.getName() + \"] of class: \"+ className,e);\n    }\n  }\n  return ctClazz.toBytecode();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Wrap all signatures of a given method name.\n * @param className\n * @param methodName\n * @throws NotFoundException\n * @throws CannotCompileException\n * @throws IOException\n */\nprivate byte[] wrapClass(String className,boolean wrapConstructors,String... methodNames) throws NotFoundException, IOException, CannotCompileException {\n  ClassPool cp=ClassPool.getDefault();\n  CtClass ctClazz=cp.get(className);\n  if (wrapConstructors) {\n    CtConstructor[] constructors=ctClazz.getConstructors();\n    for (    CtConstructor constructor : constructors) {\n      try {\n        constructor.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.notifyOfNetworkEvent(); }\");\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed trying to wrap constructor of class: \" + className,e);\n      }\n    }\n  }\n  CtMethod[] methods=ctClazz.getDeclaredMethods();\n  for (  CtMethod method : methods) {\n    try {\n      for (      String methodName : methodNames) {\n        if (method.getName().equals(methodName)) {\n          method.insertBefore(\"{ com.netflix.hystrix.contrib.networkauditor.HystrixNetworkAuditorAgent.handleNetworkEvent(); }\");\n        }\n      }\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"Failed trying to wrap method [\" + method.getName() + \"] of class: \"+ className,e);\n    }\n  }\n  return ctClazz.toBytecode();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 44
      },
      "nodeContext" : "CtClass ctClazz=cp.get(className);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.contrib.networkauditor.ClassPool"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 86,
    "startColumnNumber" : 26,
    "endLineNumber" : 86,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}