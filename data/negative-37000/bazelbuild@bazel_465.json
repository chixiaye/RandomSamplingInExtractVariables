{
  "id" : 465,
  "expression" : "gcnoFile != null",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/rules/cpp/CompileBuildVariables.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "gcnoFile != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 360,
      "startColumnNumber" : 8,
      "endLineNumber" : 360,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 360,
        "startColumnNumber" : 4,
        "endLineNumber" : 362,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (gcnoFile != null) {\n  buildVariables.addStringVariable(GCOV_GCNO_FILE.getVariableName(),gcnoFile);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1936,
        "startLineNumber" : 343,
        "startColumnNumber" : 52,
        "endLineNumber" : 399,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  buildVariables.addStringSequenceVariable(USER_COMPILE_FLAGS.getVariableName(),userCompileFlags);\n  if (sourceFile != null) {\n    buildVariables.addStringVariable(SOURCE_FILE.getVariableName(),sourceFile);\n  }\n  if (outputFile != null) {\n    buildVariables.addStringVariable(OUTPUT_FILE.getVariableName(),outputFile);\n  }\n  if (dotdFileExecPath != null) {\n    buildVariables.addStringVariable(DEPENDENCY_FILE.getVariableName(),dotdFileExecPath);\n  }\n  if (gcnoFile != null) {\n    buildVariables.addStringVariable(GCOV_GCNO_FILE.getVariableName(),gcnoFile);\n  }\n  if (dwoFile != null) {\n    buildVariables.addStringVariable(PER_OBJECT_DEBUG_INFO_FILE.getVariableName(),dwoFile);\n  }\n  if (isUsingFission) {\n    buildVariables.addStringVariable(IS_USING_FISSION.getVariableName(),\"\");\n  }\n  if (ltoIndexingFile != null) {\n    buildVariables.addStringVariable(LTO_INDEXING_BITCODE_FILE.getVariableName(),ltoIndexingFile);\n  }\n  if (thinLtoIndex != null) {\n    buildVariables.addStringVariable(THINLTO_INDEX.getVariableName(),thinLtoIndex);\n  }\n  if (thinLtoInputBitcodeFile != null) {\n    buildVariables.addStringVariable(THINLTO_INPUT_BITCODE_FILE.getVariableName(),thinLtoInputBitcodeFile);\n  }\n  if (thinLtoOutputObjectFile != null) {\n    buildVariables.addStringVariable(THINLTO_OUTPUT_OBJECT_FILE.getVariableName(),thinLtoOutputObjectFile);\n  }\n  if (usePic) {\n    buildVariables.addStringVariable(PIC.getVariableName(),\"\");\n  }\n  if (!externalIncludeDirs.isEmpty()) {\n    buildVariables.addStringSequenceVariable(EXTERNAL_INCLUDE_PATHS.getVariableName(),Iterables.transform(externalIncludeDirs,PathFragment::getSafePathString));\n  }\n  buildVariables.addAllStringVariables(additionalBuildVariables);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2489,
        "startLineNumber" : 328,
        "startColumnNumber" : 2,
        "endLineNumber" : 399,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void setupSpecificVariables(CcToolchainVariables.Builder buildVariables,String sourceFile,String outputFile,String gcnoFile,String dwoFile,boolean isUsingFission,String ltoIndexingFile,String thinLtoIndex,String thinLtoInputBitcodeFile,String thinLtoOutputObjectFile,Iterable<String> userCompileFlags,String dotdFileExecPath,boolean usePic,ImmutableList<PathFragment> externalIncludeDirs,Map<String,String> additionalBuildVariables){\n  buildVariables.addStringSequenceVariable(USER_COMPILE_FLAGS.getVariableName(),userCompileFlags);\n  if (sourceFile != null) {\n    buildVariables.addStringVariable(SOURCE_FILE.getVariableName(),sourceFile);\n  }\n  if (outputFile != null) {\n    buildVariables.addStringVariable(OUTPUT_FILE.getVariableName(),outputFile);\n  }\n  if (dotdFileExecPath != null) {\n    buildVariables.addStringVariable(DEPENDENCY_FILE.getVariableName(),dotdFileExecPath);\n  }\n  if (gcnoFile != null) {\n    buildVariables.addStringVariable(GCOV_GCNO_FILE.getVariableName(),gcnoFile);\n  }\n  if (dwoFile != null) {\n    buildVariables.addStringVariable(PER_OBJECT_DEBUG_INFO_FILE.getVariableName(),dwoFile);\n  }\n  if (isUsingFission) {\n    buildVariables.addStringVariable(IS_USING_FISSION.getVariableName(),\"\");\n  }\n  if (ltoIndexingFile != null) {\n    buildVariables.addStringVariable(LTO_INDEXING_BITCODE_FILE.getVariableName(),ltoIndexingFile);\n  }\n  if (thinLtoIndex != null) {\n    buildVariables.addStringVariable(THINLTO_INDEX.getVariableName(),thinLtoIndex);\n  }\n  if (thinLtoInputBitcodeFile != null) {\n    buildVariables.addStringVariable(THINLTO_INPUT_BITCODE_FILE.getVariableName(),thinLtoInputBitcodeFile);\n  }\n  if (thinLtoOutputObjectFile != null) {\n    buildVariables.addStringVariable(THINLTO_OUTPUT_OBJECT_FILE.getVariableName(),thinLtoOutputObjectFile);\n  }\n  if (usePic) {\n    buildVariables.addStringVariable(PIC.getVariableName(),\"\");\n  }\n  if (!externalIncludeDirs.isEmpty()) {\n    buildVariables.addStringSequenceVariable(EXTERNAL_INCLUDE_PATHS.getVariableName(),Iterables.transform(externalIncludeDirs,PathFragment::getSafePathString));\n  }\n  buildVariables.addAllStringVariables(additionalBuildVariables);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 249,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 360,
        "startColumnNumber" : 4,
        "endLineNumber" : 362,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (gcnoFile != null) {\n  buildVariables.addStringVariable(GCOV_GCNO_FILE.getVariableName(),gcnoFile);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 360,
    "startColumnNumber" : 8,
    "endLineNumber" : 360,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}