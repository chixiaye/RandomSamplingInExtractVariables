{
  "id" : 19,
  "expression" : "Math",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Conversions/DecimalToBinary.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 33,
      "startColumnNumber" : 30,
      "endLineNumber" : 33,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 33,
        "startColumnNumber" : 30,
        "endLineNumber" : 33,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Math.pow(10,c++)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 33,
        "startColumnNumber" : 24,
        "endLineNumber" : 33,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(int)Math.pow(10,c++)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 33,
        "startColumnNumber" : 20,
        "endLineNumber" : 33,
        "endColumnNumber" : 47
      },
      "nodeContext" : "d * (int)Math.pow(10,c++)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 33,
        "startColumnNumber" : 16,
        "endLineNumber" : 33,
        "endColumnNumber" : 47
      },
      "nodeContext" : "b + d * (int)Math.pow(10,c++)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 33,
        "startColumnNumber" : 12,
        "endLineNumber" : 33,
        "endColumnNumber" : 47
      },
      "nodeContext" : "b=b + d * (int)Math.pow(10,c++)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 33,
        "startColumnNumber" : 12,
        "endLineNumber" : 33,
        "endColumnNumber" : 48
      },
      "nodeContext" : "b=b + d * (int)Math.pow(10,c++);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 31,
        "startColumnNumber" : 23,
        "endLineNumber" : 35,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  d=n % 2;\n  b=b + d * (int)Math.pow(10,c++);\n  n/=2;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (n != 0) {\n  d=n % 2;\n  b=b + d * (int)Math.pow(10,c++);\n  n/=2;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 26,
        "startColumnNumber" : 48,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int n, b=0, c=0, d;\n  Scanner input=new Scanner(System.in);\n  System.out.printf(\"Conventional conversion.\\n\\tEnter the decimal number: \");\n  n=input.nextInt();\n  while (n != 0) {\n    d=n % 2;\n    b=b + d * (int)Math.pow(10,c++);\n    n/=2;\n  }\n  System.out.println(\"\\tBinary number: \" + b);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method converts a decimal number  to a binary number using a conventional algorithm.\n */\npublic static void conventionalConversion(){\n  int n, b=0, c=0, d;\n  Scanner input=new Scanner(System.in);\n  System.out.printf(\"Conventional conversion.\\n\\tEnter the decimal number: \");\n  n=input.nextInt();\n  while (n != 0) {\n    d=n % 2;\n    b=b + d * (int)Math.pow(10,c++);\n    n/=2;\n  }\n  System.out.println(\"\\tBinary number: \" + b);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 33,
        "startColumnNumber" : 12,
        "endLineNumber" : 33,
        "endColumnNumber" : 48
      },
      "nodeContext" : "b=b + d * (int)Math.pow(10,c++);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 33,
    "startColumnNumber" : 30,
    "endLineNumber" : 33,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}