{
  "id" : 186,
  "expression" : "e",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/reader-writer-lock/src/test/java/com/iluwatar/reader/writer/lock/WriterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 78,
      "startColumnNumber" : 65,
      "endLineNumber" : 78,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 67
      },
      "nodeContext" : "LOGGER.error(\"Error waiting for ExecutorService shutdown\",e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 68
      },
      "nodeContext" : "LOGGER.error(\"Error waiting for ExecutorService shutdown\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 77,
        "startColumnNumber" : 37,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOGGER.error(\"Error waiting for ExecutorService shutdown\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 77,
        "startColumnNumber" : 6,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (InterruptedException e) {\n  LOGGER.error(\"Error waiting for ExecutorService shutdown\",e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  executeService.awaitTermination(10,TimeUnit.SECONDS);\n}\n catch (InterruptedException e) {\n  LOGGER.error(\"Error waiting for ExecutorService shutdown\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1017,
        "startLineNumber" : 61,
        "startColumnNumber" : 43,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  var executeService=Executors.newFixedThreadPool(2);\n  var lock=new ReaderWriterLock();\n  var writer1=spy(new Writer(\"Writer 1\",lock.writeLock()));\n  var writer2=spy(new Writer(\"Writer 2\",lock.writeLock()));\n  executeService.submit(writer1);\n  Thread.sleep(150);\n  executeService.submit(writer2);\n  executeService.shutdown();\n  try {\n    executeService.awaitTermination(10,TimeUnit.SECONDS);\n  }\n catch (  InterruptedException e) {\n    LOGGER.error(\"Error waiting for ExecutorService shutdown\",e);\n  }\n  assertTrue(appender.logContains(\"Writer 1 begin\"));\n  assertTrue(appender.logContains(\"Writer 1 finish\"));\n  assertTrue(appender.logContains(\"Writer 2 begin\"));\n  assertTrue(appender.logContains(\"Writer 2 finish\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1140,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verify that multiple writers will get the lock in order.\n */\n@Test public void testWrite() throws Exception {\n  var executeService=Executors.newFixedThreadPool(2);\n  var lock=new ReaderWriterLock();\n  var writer1=spy(new Writer(\"Writer 1\",lock.writeLock()));\n  var writer2=spy(new Writer(\"Writer 2\",lock.writeLock()));\n  executeService.submit(writer1);\n  Thread.sleep(150);\n  executeService.submit(writer2);\n  executeService.shutdown();\n  try {\n    executeService.awaitTermination(10,TimeUnit.SECONDS);\n  }\n catch (  InterruptedException e) {\n    LOGGER.error(\"Error waiting for ExecutorService shutdown\",e);\n  }\n  assertTrue(appender.logContains(\"Writer 1 begin\"));\n  assertTrue(appender.logContains(\"Writer 1 finish\"));\n  assertTrue(appender.logContains(\"Writer 2 begin\"));\n  assertTrue(appender.logContains(\"Writer 2 finish\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 78,
        "startColumnNumber" : 6,
        "endLineNumber" : 78,
        "endColumnNumber" : 68
      },
      "nodeContext" : "LOGGER.error(\"Error waiting for ExecutorService shutdown\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.InterruptedException"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 78,
    "startColumnNumber" : 65,
    "endLineNumber" : 78,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}