{
  "id" : 297,
  "expression" : "level[at] + 1",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/examples/DinicsExample.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "level[at] + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 205,
      "startColumnNumber" : 41,
      "endLineNumber" : 205,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 205,
        "startColumnNumber" : 23,
        "endLineNumber" : 205,
        "endColumnNumber" : 54
      },
      "nodeContext" : "level[edge.to] == level[at] + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 205,
        "endColumnNumber" : 54
      },
      "nodeContext" : "cap > 0 && level[edge.to] == level[at] + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cap > 0 && level[edge.to] == level[at] + 1) {\n  long bottleNeck=dfs(edge.to,next,min(flow,cap));\n  if (bottleNeck > 0) {\n    edge.augment(bottleNeck);\n    return bottleNeck;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 202,
        "startColumnNumber" : 46,
        "endLineNumber" : 213,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Edge edge=graph[at].get(next[at]);\n  long cap=edge.remainingCapacity();\n  if (cap > 0 && level[edge.to] == level[at] + 1) {\n    long bottleNeck=dfs(edge.to,next,min(flow,cap));\n    if (bottleNeck > 0) {\n      edge.augment(bottleNeck);\n      return bottleNeck;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 202,
        "startColumnNumber" : 6,
        "endLineNumber" : 213,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (; next[at] < numEdges; next[at]++) {\n  Edge edge=graph[at].get(next[at]);\n  long cap=edge.remainingCapacity();\n  if (cap > 0 && level[edge.to] == level[at] + 1) {\n    long bottleNeck=dfs(edge.to,next,min(flow,cap));\n    if (bottleNeck > 0) {\n      edge.augment(bottleNeck);\n      return bottleNeck;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 198,
        "startColumnNumber" : 52,
        "endLineNumber" : 215,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (at == t)   return flow;\n  final int numEdges=graph[at].size();\n  for (; next[at] < numEdges; next[at]++) {\n    Edge edge=graph[at].get(next[at]);\n    long cap=edge.remainingCapacity();\n    if (cap > 0 && level[edge.to] == level[at] + 1) {\n      long bottleNeck=dfs(edge.to,next,min(flow,cap));\n      if (bottleNeck > 0) {\n        edge.augment(bottleNeck);\n        return bottleNeck;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 541,
        "startLineNumber" : 198,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private long dfs(int at,int[] next,long flow){\n  if (at == t)   return flow;\n  final int numEdges=graph[at].size();\n  for (; next[at] < numEdges; next[at]++) {\n    Edge edge=graph[at].get(next[at]);\n    long cap=edge.remainingCapacity();\n    if (cap > 0 && level[edge.to] == level[at] + 1) {\n      long bottleNeck=dfs(edge.to,next,min(flow,cap));\n      if (bottleNeck > 0) {\n        edge.augment(bottleNeck);\n        return bottleNeck;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 205,
        "endColumnNumber" : 54
      },
      "nodeContext" : "cap > 0 && level[edge.to] == level[at] + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 205,
    "startColumnNumber" : 41,
    "endLineNumber" : 205,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}