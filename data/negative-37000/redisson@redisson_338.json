{
  "id" : 338,
  "expression" : "Flux",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/main/java/org/redisson/reactive/CommandReactiveService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Flux",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 40,
      "startColumnNumber" : 15,
      "endLineNumber" : 40,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Flux.<R>create(emitter -> {\n  emitter.onRequest(n -> {\n    RFuture<R> future;\n    try {\n      future=supplier.call();\n    }\n catch (    Exception e) {\n      emitter.error(e);\n      return;\n    }\n    emitter.onDispose(() -> {\n      future.cancel(true);\n    }\n);\n    future.onComplete((v,e) -> {\n      if (e != null) {\n        emitter.error(e);\n        return;\n      }\n      if (v != null) {\n        emitter.next(v);\n      }\n      emitter.complete();\n    }\n);\n  }\n);\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 91,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 17
      },
      "nodeContext" : "Flux.<R>create(emitter -> {\n  emitter.onRequest(n -> {\n    RFuture<R> future;\n    try {\n      future=supplier.call();\n    }\n catch (    Exception e) {\n      emitter.error(e);\n      return;\n    }\n    emitter.onDispose(() -> {\n      future.cancel(true);\n    }\n);\n    future.onComplete((v,e) -> {\n      if (e != null) {\n        emitter.error(e);\n        return;\n      }\n      if (v != null) {\n        emitter.next(v);\n      }\n      emitter.complete();\n    }\n);\n  }\n);\n}\n).next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 93,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 794,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return Flux.<R>create(emitter -> {\n  emitter.onRequest(n -> {\n    RFuture<R> future;\n    try {\n      future=supplier.call();\n    }\n catch (    Exception e) {\n      emitter.error(e);\n      return;\n    }\n    emitter.onDispose(() -> {\n      future.cancel(true);\n    }\n);\n    future.onComplete((v,e) -> {\n      if (e != null) {\n        emitter.error(e);\n        return;\n      }\n      if (v != null) {\n        emitter.next(v);\n      }\n      emitter.complete();\n    }\n);\n  }\n);\n}\n).next();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 94,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 810,
        "startLineNumber" : 39,
        "startColumnNumber" : 63,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return Flux.<R>create(emitter -> {\n    emitter.onRequest(n -> {\n      RFuture<R> future;\n      try {\n        future=supplier.call();\n      }\n catch (      Exception e) {\n        emitter.error(e);\n        return;\n      }\n      emitter.onDispose(() -> {\n        future.cancel(true);\n      }\n);\n      future.onComplete((v,e) -> {\n        if (e != null) {\n          emitter.error(e);\n          return;\n        }\n        if (v != null) {\n          emitter.next(v);\n        }\n        emitter.complete();\n      }\n);\n    }\n);\n  }\n).next();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public <R>Mono<R> reactive(Callable<RFuture<R>> supplier){\n  return Flux.<R>create(emitter -> {\n    emitter.onRequest(n -> {\n      RFuture<R> future;\n      try {\n        future=supplier.call();\n      }\n catch (      Exception e) {\n        emitter.error(e);\n        return;\n      }\n      emitter.onDispose(() -> {\n        future.cancel(true);\n      }\n);\n      future.onComplete((v,e) -> {\n        if (e != null) {\n          emitter.error(e);\n          return;\n        }\n        if (v != null) {\n          emitter.next(v);\n        }\n        emitter.complete();\n      }\n);\n    }\n);\n  }\n).next();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Flux.<R>create(emitter -> {\n  emitter.onRequest(n -> {\n    RFuture<R> future;\n    try {\n      future=supplier.call();\n    }\n catch (    Exception e) {\n      emitter.error(e);\n      return;\n    }\n    emitter.onDispose(() -> {\n      future.cancel(true);\n    }\n);\n    future.onComplete((v,e) -> {\n      if (e != null) {\n        emitter.error(e);\n        return;\n      }\n      if (v != null) {\n        emitter.next(v);\n      }\n      emitter.complete();\n    }\n);\n  }\n);\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 91,
      "astHeight" : 16
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 40,
    "startColumnNumber" : 15,
    "endLineNumber" : 40,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}