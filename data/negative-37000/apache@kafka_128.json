{
  "id" : 128,
  "expression" : "STATE_STORE_LEVEL_GROUP",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorderGaugesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "STATE_STORE_LEVEL_GROUP",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 259,
      "startColumnNumber" : 12,
      "endLineNumber" : 259,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 257,
        "startColumnNumber" : 61,
        "endLineNumber" : 262,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new MetricName(propertyName,STATE_STORE_LEVEL_GROUP,\"description is ignored\",tagMap)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 257,
        "startColumnNumber" : 49,
        "endLineNumber" : 262,
        "endColumnNumber" : 10
      },
      "nodeContext" : "metrics.get(new MetricName(propertyName,STATE_STORE_LEVEL_GROUP,\"description is ignored\",tagMap))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 257,
        "startColumnNumber" : 35,
        "endLineNumber" : 262,
        "endColumnNumber" : 10
      },
      "nodeContext" : "(KafkaMetric)metrics.get(new MetricName(propertyName,STATE_STORE_LEVEL_GROUP,\"description is ignored\",tagMap))",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 257,
        "startColumnNumber" : 26,
        "endLineNumber" : 262,
        "endColumnNumber" : 10
      },
      "nodeContext" : "metric=(KafkaMetric)metrics.get(new MetricName(propertyName,STATE_STORE_LEVEL_GROUP,\"description is ignored\",tagMap))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 257,
        "startColumnNumber" : 8,
        "endLineNumber" : 262,
        "endColumnNumber" : 11
      },
      "nodeContext" : "final KafkaMetric metric=(KafkaMetric)metrics.get(new MetricName(propertyName,STATE_STORE_LEVEL_GROUP,\"description is ignored\",tagMap));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 249,
        "startColumnNumber" : 57,
        "endLineNumber" : 266,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<MetricName,? extends Metric> metrics=streamsMetrics.metrics();\n  final Map<String,String> tagMap=mkMap(mkEntry(THREAD_ID_TAG,Thread.currentThread().getName()),mkEntry(TASK_ID_TAG,TASK_ID.toString()),mkEntry(METRICS_SCOPE + \"-\" + STORE_ID_TAG,STORE_NAME));\n  final KafkaMetric metric=(KafkaMetric)metrics.get(new MetricName(propertyName,STATE_STORE_LEVEL_GROUP,\"description is ignored\",tagMap));\n  assertThat(metric,notNullValue());\n  assertThat(metric.metricValue(),is(BigInteger.valueOf(expectedValue)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 863,
        "startLineNumber" : 247,
        "startColumnNumber" : 4,
        "endLineNumber" : 266,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void verifyMetrics(final StreamsMetricsImpl streamsMetrics,final String propertyName,final long expectedValue){\n  final Map<MetricName,? extends Metric> metrics=streamsMetrics.metrics();\n  final Map<String,String> tagMap=mkMap(mkEntry(THREAD_ID_TAG,Thread.currentThread().getName()),mkEntry(TASK_ID_TAG,TASK_ID.toString()),mkEntry(METRICS_SCOPE + \"-\" + STORE_ID_TAG,STORE_NAME));\n  final KafkaMetric metric=(KafkaMetric)metrics.get(new MetricName(propertyName,STATE_STORE_LEVEL_GROUP,\"description is ignored\",tagMap));\n  assertThat(metric,notNullValue());\n  assertThat(metric.metricValue(),is(BigInteger.valueOf(expectedValue)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 257,
        "startColumnNumber" : 61,
        "endLineNumber" : 262,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new MetricName(propertyName,STATE_STORE_LEVEL_GROUP,\"description is ignored\",tagMap)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 259,
    "startColumnNumber" : 12,
    "endLineNumber" : 259,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}