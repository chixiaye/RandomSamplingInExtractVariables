{
  "id" : 99,
  "expression" : "viewBehind != -1",
  "projectName" : "jfeinstein10@SlidingMenu",
  "commitID" : "2e55ca5b4ff0f935f915d81b9a3f21eeb4647a26",
  "filePath" : "/library/src/com/slidingmenu/lib/SlidingMenu.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "viewBehind != -1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 230,
      "startColumnNumber" : 6,
      "endLineNumber" : 230,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 230,
        "startColumnNumber" : 2,
        "endLineNumber" : 234,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (viewBehind != -1) {\n  setMenu(viewBehind,DEFAULT_SIDE);\n}\n else {\n  setMenu(new FrameLayout(context),DEFAULT_SIDE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3426,
        "startLineNumber" : 190,
        "startColumnNumber" : 71,
        "endLineNumber" : 268,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super(context,attrs,defStyle);\n  LayoutParams behindParams=new LayoutParams(LayoutParams.MATCH_PARENT,LayoutParams.MATCH_PARENT);\n  mViewBehind=new CustomViewBehind(context);\n  addView(mViewBehind,behindParams);\n  LayoutParams aboveParams=new LayoutParams(LayoutParams.MATCH_PARENT,LayoutParams.MATCH_PARENT);\n  mViewAbove=new CustomViewAbove(context);\n  addView(mViewAbove,aboveParams);\n  mViewAbove.setCustomViewBehind(mViewBehind);\n  mViewBehind.setCustomViewAbove(mViewAbove);\n  mViewAbove.setOnPageChangeListener(new OnPageChangeListener(){\n    public static final int POSITION_OPEN=0;\n    public static final int POSITION_CLOSE=1;\n    public void onPageScrolled(    int position,    float positionOffset,    int positionOffsetPixels){\n    }\n    public void onPageSelected(    int position){\n      if (position == POSITION_OPEN && mOpenListener != null) {\n        mOpenListener.onOpen();\n      }\n else       if (position == POSITION_CLOSE && mCloseListener != null) {\n        mCloseListener.onClose();\n      }\n    }\n  }\n);\n  TypedArray ta=context.obtainStyledAttributes(attrs,R.styleable.SlidingMenu);\n  int mode=ta.getInt(R.styleable.SlidingMenu_mode,DEFAULT_SIDE);\n  setMode(mode);\n  int viewAbove=ta.getResourceId(R.styleable.SlidingMenu_viewAbove,-1);\n  if (viewAbove != -1) {\n    setContent(viewAbove);\n  }\n else {\n    setContent(new FrameLayout(context));\n  }\n  int viewBehind=ta.getResourceId(R.styleable.SlidingMenu_viewBehind,-1);\n  if (viewBehind != -1) {\n    setMenu(viewBehind,DEFAULT_SIDE);\n  }\n else {\n    setMenu(new FrameLayout(context),DEFAULT_SIDE);\n  }\n  int touchModeAbove=ta.getInt(R.styleable.SlidingMenu_touchModeAbove,TOUCHMODE_MARGIN);\n  setTouchModeAbove(touchModeAbove);\n  int touchModeBehind=ta.getInt(R.styleable.SlidingMenu_touchModeBehind,TOUCHMODE_MARGIN);\n  setTouchModeBehind(touchModeBehind);\n  int offsetBehind=(int)ta.getDimension(R.styleable.SlidingMenu_behindOffset,-1);\n  int widthBehind=(int)ta.getDimension(R.styleable.SlidingMenu_behindWidth,-1);\n  if (offsetBehind != -1 && widthBehind != -1)   throw new IllegalStateException(\"Cannot set both behindOffset and behindWidth for a SlidingMenu\");\n else   if (offsetBehind != -1)   setBehindOffset(offsetBehind,DEFAULT_SIDE);\n else   if (widthBehind != -1)   setBehindWidth(widthBehind,DEFAULT_SIDE);\n else   setBehindOffset(0,DEFAULT_SIDE);\n  float scrollOffsetBehind=ta.getFloat(R.styleable.SlidingMenu_behindScrollScale,0.33f);\n  setBehindScrollScale(scrollOffsetBehind,DEFAULT_SIDE);\n  int shadowRes=ta.getResourceId(R.styleable.SlidingMenu_shadowDrawable,-1);\n  if (shadowRes != -1) {\n    setShadowDrawable(shadowRes,DEFAULT_SIDE);\n  }\n  int shadowWidth=(int)ta.getDimension(R.styleable.SlidingMenu_shadowWidth,0);\n  setShadowWidth(shadowWidth);\n  boolean fadeEnabled=ta.getBoolean(R.styleable.SlidingMenu_fadeEnabled,true);\n  setFadeEnabled(fadeEnabled);\n  float fadeDeg=ta.getFloat(R.styleable.SlidingMenu_fadeDegree,0.33f);\n  setFadeDegree(fadeDeg);\n  boolean selectorEnabled=ta.getBoolean(R.styleable.SlidingMenu_selectorEnabled,false);\n  setSelectorEnabled(selectorEnabled);\n  int selectorRes=ta.getResourceId(R.styleable.SlidingMenu_selectorDrawable,-1);\n  if (selectorRes != -1)   setSelectorDrawable(selectorRes);\n  ta.recycle();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 482,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3649,
        "startLineNumber" : 183,
        "startColumnNumber" : 1,
        "endLineNumber" : 268,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Instantiates a new SlidingMenu.\n * @param context the associated Context\n * @param attrs the attrs\n * @param defStyle the def style\n */\npublic SlidingMenu(Context context,AttributeSet attrs,int defStyle){\n  super(context,attrs,defStyle);\n  LayoutParams behindParams=new LayoutParams(LayoutParams.MATCH_PARENT,LayoutParams.MATCH_PARENT);\n  mViewBehind=new CustomViewBehind(context);\n  addView(mViewBehind,behindParams);\n  LayoutParams aboveParams=new LayoutParams(LayoutParams.MATCH_PARENT,LayoutParams.MATCH_PARENT);\n  mViewAbove=new CustomViewAbove(context);\n  addView(mViewAbove,aboveParams);\n  mViewAbove.setCustomViewBehind(mViewBehind);\n  mViewBehind.setCustomViewAbove(mViewAbove);\n  mViewAbove.setOnPageChangeListener(new OnPageChangeListener(){\n    public static final int POSITION_OPEN=0;\n    public static final int POSITION_CLOSE=1;\n    public void onPageScrolled(    int position,    float positionOffset,    int positionOffsetPixels){\n    }\n    public void onPageSelected(    int position){\n      if (position == POSITION_OPEN && mOpenListener != null) {\n        mOpenListener.onOpen();\n      }\n else       if (position == POSITION_CLOSE && mCloseListener != null) {\n        mCloseListener.onClose();\n      }\n    }\n  }\n);\n  TypedArray ta=context.obtainStyledAttributes(attrs,R.styleable.SlidingMenu);\n  int mode=ta.getInt(R.styleable.SlidingMenu_mode,DEFAULT_SIDE);\n  setMode(mode);\n  int viewAbove=ta.getResourceId(R.styleable.SlidingMenu_viewAbove,-1);\n  if (viewAbove != -1) {\n    setContent(viewAbove);\n  }\n else {\n    setContent(new FrameLayout(context));\n  }\n  int viewBehind=ta.getResourceId(R.styleable.SlidingMenu_viewBehind,-1);\n  if (viewBehind != -1) {\n    setMenu(viewBehind,DEFAULT_SIDE);\n  }\n else {\n    setMenu(new FrameLayout(context),DEFAULT_SIDE);\n  }\n  int touchModeAbove=ta.getInt(R.styleable.SlidingMenu_touchModeAbove,TOUCHMODE_MARGIN);\n  setTouchModeAbove(touchModeAbove);\n  int touchModeBehind=ta.getInt(R.styleable.SlidingMenu_touchModeBehind,TOUCHMODE_MARGIN);\n  setTouchModeBehind(touchModeBehind);\n  int offsetBehind=(int)ta.getDimension(R.styleable.SlidingMenu_behindOffset,-1);\n  int widthBehind=(int)ta.getDimension(R.styleable.SlidingMenu_behindWidth,-1);\n  if (offsetBehind != -1 && widthBehind != -1)   throw new IllegalStateException(\"Cannot set both behindOffset and behindWidth for a SlidingMenu\");\n else   if (offsetBehind != -1)   setBehindOffset(offsetBehind,DEFAULT_SIDE);\n else   if (widthBehind != -1)   setBehindWidth(widthBehind,DEFAULT_SIDE);\n else   setBehindOffset(0,DEFAULT_SIDE);\n  float scrollOffsetBehind=ta.getFloat(R.styleable.SlidingMenu_behindScrollScale,0.33f);\n  setBehindScrollScale(scrollOffsetBehind,DEFAULT_SIDE);\n  int shadowRes=ta.getResourceId(R.styleable.SlidingMenu_shadowDrawable,-1);\n  if (shadowRes != -1) {\n    setShadowDrawable(shadowRes,DEFAULT_SIDE);\n  }\n  int shadowWidth=(int)ta.getDimension(R.styleable.SlidingMenu_shadowWidth,0);\n  setShadowWidth(shadowWidth);\n  boolean fadeEnabled=ta.getBoolean(R.styleable.SlidingMenu_fadeEnabled,true);\n  setFadeEnabled(fadeEnabled);\n  float fadeDeg=ta.getFloat(R.styleable.SlidingMenu_fadeDegree,0.33f);\n  setFadeDegree(fadeDeg);\n  boolean selectorEnabled=ta.getBoolean(R.styleable.SlidingMenu_selectorEnabled,false);\n  setSelectorEnabled(selectorEnabled);\n  int selectorRes=ta.getResourceId(R.styleable.SlidingMenu_selectorDrawable,-1);\n  if (selectorRes != -1)   setSelectorDrawable(selectorRes);\n  ta.recycle();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 497,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 230,
        "startColumnNumber" : 2,
        "endLineNumber" : 234,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (viewBehind != -1) {\n  setMenu(viewBehind,DEFAULT_SIDE);\n}\n else {\n  setMenu(new FrameLayout(context),DEFAULT_SIDE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 230,
    "startColumnNumber" : 6,
    "endLineNumber" : 230,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}