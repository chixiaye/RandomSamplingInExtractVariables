{
  "id" : 80,
  "expression" : "\"Haven't received all confirmations\"",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/test/org/apache/zookeeper/test/SyncCallTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Haven't received all confirmations\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 65,
      "startColumnNumber" : 21,
      "endLineNumber" : 65,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 65,
        "startColumnNumber" : 21,
        "endLineNumber" : 65,
        "endColumnNumber" : 79
      },
      "nodeContext" : "\"Haven't received all confirmations\" + opsCount.getCount()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 80
      },
      "nodeContext" : "fail(\"Haven't received all confirmations\" + opsCount.getCount())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 81
      },
      "nodeContext" : "fail(\"Haven't received all confirmations\" + opsCount.getCount());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 81
      },
      "nodeContext" : "if (!opsCount.await(10000,TimeUnit.MILLISECONDS)) fail(\"Haven't received all confirmations\" + opsCount.getCount());\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.info(\"Starting ZK:\" + (new Date()).toString());\n  opsCount=new CountDownLatch(limit);\n  ZooKeeper zk=createClient();\n  LOG.info(\"Beginning test:\" + (new Date()).toString());\n  for (int i=0; i < 100; i++)   zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.sync(\"/test\",this,results);\n  for (int i=0; i < 100; i++)   zk.delete(\"/test\" + i,0,this,results);\n  for (int i=0; i < 100; i++)   zk.getChildren(\"/\",new NullWatcher(),this,results);\n  LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n  if (!opsCount.await(10000,TimeUnit.MILLISECONDS))   fail(\"Haven't received all confirmations\" + opsCount.getCount());\n  for (int i=0; i < limit; i++) {\n    assertEquals(0,(int)results.get(i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  LOG.info(\"Starting ZK:\" + (new Date()).toString());\n  opsCount=new CountDownLatch(limit);\n  ZooKeeper zk=createClient();\n  LOG.info(\"Beginning test:\" + (new Date()).toString());\n  for (int i=0; i < 100; i++)   zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.sync(\"/test\",this,results);\n  for (int i=0; i < 100; i++)   zk.delete(\"/test\" + i,0,this,results);\n  for (int i=0; i < 100; i++)   zk.getChildren(\"/\",new NullWatcher(),this,results);\n  LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n  if (!opsCount.await(10000,TimeUnit.MILLISECONDS))   fail(\"Haven't received all confirmations\" + opsCount.getCount());\n  for (int i=0; i < limit; i++) {\n    assertEquals(0,(int)results.get(i));\n  }\n}\n catch (IOException e) {\n  System.out.println(e.toString());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 186,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 46,
        "startColumnNumber" : 44,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    LOG.info(\"Starting ZK:\" + (new Date()).toString());\n    opsCount=new CountDownLatch(limit);\n    ZooKeeper zk=createClient();\n    LOG.info(\"Beginning test:\" + (new Date()).toString());\n    for (int i=0; i < 100; i++)     zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.sync(\"/test\",this,results);\n    for (int i=0; i < 100; i++)     zk.delete(\"/test\" + i,0,this,results);\n    for (int i=0; i < 100; i++)     zk.getChildren(\"/\",new NullWatcher(),this,results);\n    LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n    if (!opsCount.await(10000,TimeUnit.MILLISECONDS))     fail(\"Haven't received all confirmations\" + opsCount.getCount());\n    for (int i=0; i < limit; i++) {\n      assertEquals(0,(int)results.get(i));\n    }\n  }\n catch (  IOException e) {\n    System.out.println(e.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSync() throws Exception {\n  try {\n    LOG.info(\"Starting ZK:\" + (new Date()).toString());\n    opsCount=new CountDownLatch(limit);\n    ZooKeeper zk=createClient();\n    LOG.info(\"Beginning test:\" + (new Date()).toString());\n    for (int i=0; i < 100; i++)     zk.create(\"/test\" + i,new byte[0],Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.sync(\"/test\",this,results);\n    for (int i=0; i < 100; i++)     zk.delete(\"/test\" + i,0,this,results);\n    for (int i=0; i < 100; i++)     zk.getChildren(\"/\",new NullWatcher(),this,results);\n    LOG.info(\"Submitted all operations:\" + (new Date()).toString());\n    if (!opsCount.await(10000,TimeUnit.MILLISECONDS))     fail(\"Haven't received all confirmations\" + opsCount.getCount());\n    for (int i=0; i < limit; i++) {\n      assertEquals(0,(int)results.get(i));\n    }\n  }\n catch (  IOException e) {\n    System.out.println(e.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 81
      },
      "nodeContext" : "fail(\"Haven't received all confirmations\" + opsCount.getCount());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 65,
    "startColumnNumber" : 21,
    "endLineNumber" : 65,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}