{
  "id" : 156,
  "expression" : "Object.class",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alibaba-sentinel-datasource/src/test/java/com/alibaba/cloud/sentinel/datasource/RuleTypeTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Object.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 72,
      "startColumnNumber" : 24,
      "endLineNumber" : 72,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 37
      },
      "nodeContext" : "RuleType.getByClass(Object.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 49
      },
      "nodeContext" : "RuleType.getByClass(Object.class).isPresent()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertFalse(\"Object.class type type was not null\",RuleType.getByClass(Object.class).isPresent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertFalse(\"Object.class type type was not null\",RuleType.getByClass(Object.class).isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 776,
        "startLineNumber" : 70,
        "startColumnNumber" : 30,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  assertFalse(\"Object.class type type was not null\",RuleType.getByClass(Object.class).isPresent());\n  assertFalse(\"AbstractRule.class rule type was not null\",RuleType.getByClass(AbstractRule.class).isPresent());\n  assertTrue(\"FlowRule.class rule type was null\",RuleType.getByClass(FlowRule.class).isPresent());\n  assertTrue(\"DegradeRule.class rule type was null\",RuleType.getByClass(DegradeRule.class).isPresent());\n  assertTrue(\"ParamFlowRule.class rule type was null\",RuleType.getByClass(ParamFlowRule.class).isPresent());\n  assertTrue(\"SystemRule.class rule type was null\",RuleType.getByClass(SystemRule.class).isPresent());\n  assertTrue(\"AuthorityRule.class rule type was null\",RuleType.getByClass(AuthorityRule.class).isPresent());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 69,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testGetByClass(){\n  assertFalse(\"Object.class type type was not null\",RuleType.getByClass(Object.class).isPresent());\n  assertFalse(\"AbstractRule.class rule type was not null\",RuleType.getByClass(AbstractRule.class).isPresent());\n  assertTrue(\"FlowRule.class rule type was null\",RuleType.getByClass(FlowRule.class).isPresent());\n  assertTrue(\"DegradeRule.class rule type was null\",RuleType.getByClass(DegradeRule.class).isPresent());\n  assertTrue(\"ParamFlowRule.class rule type was null\",RuleType.getByClass(ParamFlowRule.class).isPresent());\n  assertTrue(\"SystemRule.class rule type was null\",RuleType.getByClass(SystemRule.class).isPresent());\n  assertTrue(\"AuthorityRule.class rule type was null\",RuleType.getByClass(AuthorityRule.class).isPresent());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 49
      },
      "nodeContext" : "RuleType.getByClass(Object.class).isPresent()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 72,
    "startColumnNumber" : 24,
    "endLineNumber" : 72,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}