{
  "id" : 85,
  "expression" : "itemThumbnailView",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/local/holder/LocalPlaylistStreamItemHolder.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "itemThumbnailView",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 90,
      "startColumnNumber" : 75,
      "endLineNumber" : 90,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 64
      },
      "nodeContext" : "itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 65
      },
      "nodeContext" : "itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2437,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2645,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateFromItem(final LocalItem localItem,final HistoryRecordManager historyRecordManager,final DateFormat dateFormat){\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 64
      },
      "nodeContext" : "itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.schabi.newpipe.local.holder.ImageView"
  }, {
    "nodeContext" : "itemThumbnailView",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 107,
      "startColumnNumber" : 8,
      "endLineNumber" : 107,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 70
      },
      "nodeContext" : "itemThumbnailView.setOnTouchListener(getOnTouchListener(item))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 71
      },
      "nodeContext" : "itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2437,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2645,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateFromItem(final LocalItem localItem,final HistoryRecordManager historyRecordManager,final DateFormat dateFormat){\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 71
      },
      "nodeContext" : "itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.schabi.newpipe.local.holder.ImageView"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 90,
    "startColumnNumber" : 75,
    "endLineNumber" : 90,
    "endColumnNumber" : 92
  }, {
    "charLength" : 17,
    "startLineNumber" : 107,
    "startColumnNumber" : 8,
    "endLineNumber" : 107,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}