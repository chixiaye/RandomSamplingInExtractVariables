{
  "id" : 459,
  "expression" : "ImmutableSet.of(key2)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/cache/CacheReferencesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ImmutableSet.of(key2)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 117,
      "startColumnNumber" : 19,
      "endLineNumber" : 117,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 117,
        "startColumnNumber" : 6,
        "endLineNumber" : 117,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertEquals(ImmutableSet.of(key2),cache.asMap().keySet())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 117,
        "startColumnNumber" : 6,
        "endLineNumber" : 117,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertEquals(ImmutableSet.of(key2),cache.asMap().keySet());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 106,
        "startColumnNumber" : 53,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Key key1=new Key(1);\n  String value1=key1.toString();\n  Key key2=new Key(2);\n  String value2=key2.toString();\n  assertSame(value1,cache.getUnchecked(key1));\n  assertSame(value2,cache.getUnchecked(key2));\n  cache.invalidate(key1);\n  assertFalse(cache.asMap().containsKey(key1));\n  assertTrue(cache.asMap().containsKey(key2));\n  assertEquals(1,cache.size());\n  assertEquals(ImmutableSet.of(key2),cache.asMap().keySet());\n  assertThat(cache.asMap().values()).contains(value2);\n  assertEquals(ImmutableSet.of(immutableEntry(key2,value2)),cache.asMap().entrySet());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 699,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (LoadingCache<Key,String> cache : caches()) {\n  Key key1=new Key(1);\n  String value1=key1.toString();\n  Key key2=new Key(2);\n  String value2=key2.toString();\n  assertSame(value1,cache.getUnchecked(key1));\n  assertSame(value2,cache.getUnchecked(key2));\n  cache.invalidate(key1);\n  assertFalse(cache.asMap().containsKey(key1));\n  assertTrue(cache.asMap().containsKey(key2));\n  assertEquals(1,cache.size());\n  assertEquals(ImmutableSet.of(key2),cache.asMap().keySet());\n  assertThat(cache.asMap().values()).contains(value2);\n  assertEquals(ImmutableSet.of(immutableEntry(key2,value2)),cache.asMap().entrySet());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 131,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 105,
        "startColumnNumber" : 31,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  LoadingCache<Key,String> cache : caches()) {\n    Key key1=new Key(1);\n    String value1=key1.toString();\n    Key key2=new Key(2);\n    String value2=key2.toString();\n    assertSame(value1,cache.getUnchecked(key1));\n    assertSame(value2,cache.getUnchecked(key2));\n    cache.invalidate(key1);\n    assertFalse(cache.asMap().containsKey(key1));\n    assertTrue(cache.asMap().containsKey(key2));\n    assertEquals(1,cache.size());\n    assertEquals(ImmutableSet.of(key2),cache.asMap().keySet());\n    assertThat(cache.asMap().values()).contains(value2);\n    assertEquals(ImmutableSet.of(immutableEntry(key2,value2)),cache.asMap().entrySet());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testInvalidate(){\n  for (  LoadingCache<Key,String> cache : caches()) {\n    Key key1=new Key(1);\n    String value1=key1.toString();\n    Key key2=new Key(2);\n    String value2=key2.toString();\n    assertSame(value1,cache.getUnchecked(key1));\n    assertSame(value2,cache.getUnchecked(key2));\n    cache.invalidate(key1);\n    assertFalse(cache.asMap().containsKey(key1));\n    assertTrue(cache.asMap().containsKey(key2));\n    assertEquals(1,cache.size());\n    assertEquals(ImmutableSet.of(key2),cache.asMap().keySet());\n    assertThat(cache.asMap().values()).contains(value2);\n    assertEquals(ImmutableSet.of(immutableEntry(key2,value2)),cache.asMap().entrySet());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 117,
        "startColumnNumber" : 6,
        "endLineNumber" : 117,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertEquals(ImmutableSet.of(key2),cache.asMap().keySet());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "com.google.common.collect.ImmutableSet<com.google.common.cache.CacheReferencesTest.Key>"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 117,
    "startColumnNumber" : 19,
    "endLineNumber" : 117,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}