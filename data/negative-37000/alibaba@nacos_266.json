{
  "id" : 266,
  "expression" : "\"1.1.1.1\"",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/test/src/test/java/com/alibaba/nacos/test/core/InetUtils_ITCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"1.1.1.1\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 47,
      "startColumnNumber" : 18,
      "endLineNumber" : 47,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 47,
        "startColumnNumber" : 9,
        "endLineNumber" : 47,
        "endColumnNumber" : 27
      },
      "nodeContext" : "testIp=\"1.1.1.1\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 28
      },
      "nodeContext" : "String testIp=\"1.1.1.1\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 867,
        "startLineNumber" : 46,
        "startColumnNumber" : 60,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String testIp=\"1.1.1.1\";\n  System.setProperty(NACOS_SERVER_IP,testIp);\n  CountDownLatch latch=new CountDownLatch(1);\n  AtomicReference<String> reference=new AtomicReference<>(null);\n  Subscriber<InetUtils.IPChangeEvent> subscribe=new Subscriber<InetUtils.IPChangeEvent>(){\n    @Override public void onEvent(    InetUtils.IPChangeEvent event){\n      if (Objects.nonNull(event.getOldIP())) {\n        try {\n          System.out.println(event);\n          reference.set(event.getNewIP());\n        }\n  finally {\n          latch.countDown();\n        }\n      }\n    }\n    @Override public Class<? extends Event> subscribeType(){\n      return InetUtils.IPChangeEvent.class;\n    }\n  }\n;\n  NotifyCenter.registerSubscriber(subscribe);\n  latch.await(10_000L,TimeUnit.MILLISECONDS);\n  Assert.assertEquals(testIp,reference.get());\n  Assert.assertEquals(testIp,InetUtils.getSelfIP());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 45,
        "startColumnNumber" : 1,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void test_InternetAddress_Change() throws Exception {\n  String testIp=\"1.1.1.1\";\n  System.setProperty(NACOS_SERVER_IP,testIp);\n  CountDownLatch latch=new CountDownLatch(1);\n  AtomicReference<String> reference=new AtomicReference<>(null);\n  Subscriber<InetUtils.IPChangeEvent> subscribe=new Subscriber<InetUtils.IPChangeEvent>(){\n    @Override public void onEvent(    InetUtils.IPChangeEvent event){\n      if (Objects.nonNull(event.getOldIP())) {\n        try {\n          System.out.println(event);\n          reference.set(event.getNewIP());\n        }\n  finally {\n          latch.countDown();\n        }\n      }\n    }\n    @Override public Class<? extends Event> subscribeType(){\n      return InetUtils.IPChangeEvent.class;\n    }\n  }\n;\n  NotifyCenter.registerSubscriber(subscribe);\n  latch.await(10_000L,TimeUnit.MILLISECONDS);\n  Assert.assertEquals(testIp,reference.get());\n  Assert.assertEquals(testIp,InetUtils.getSelfIP());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 28
      },
      "nodeContext" : "String testIp=\"1.1.1.1\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 47,
    "startColumnNumber" : 18,
    "endLineNumber" : 47,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}