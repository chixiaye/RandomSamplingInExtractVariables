{
  "id" : 364,
  "expression" : "UriUtil",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/rtsp/src/main/java/com/google/android/exoplayer2/source/rtsp/RtspTrackTiming.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "UriUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 143,
      "startColumnNumber" : 10,
      "endLineNumber" : 143,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 143,
        "startColumnNumber" : 10,
        "endLineNumber" : 143,
        "endColumnNumber" : 59
      },
      "nodeContext" : "UriUtil.resolveToUri(sessionUriString,urlString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 142,
        "startColumnNumber" : 11,
        "endLineNumber" : 144,
        "endColumnNumber" : 65
      },
      "nodeContext" : "sessionUriString.endsWith(\"/\") ? UriUtil.resolveToUri(sessionUriString,urlString) : UriUtil.resolveToUri(sessionUriString + \"/\",urlString)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 66
      },
      "nodeContext" : "return sessionUriString.endsWith(\"/\") ? UriUtil.resolveToUri(sessionUriString,urlString) : UriUtil.resolveToUri(sessionUriString + \"/\",urlString);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 124,
        "startColumnNumber" : 72,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkArgument(checkNotNull(sessionUri.getScheme()).equals(\"rtsp\"));\n  Uri uri=Uri.parse(urlString);\n  if (uri.isAbsolute()) {\n    return uri;\n  }\n  uri=Uri.parse(\"rtsp://\" + urlString);\n  String sessionUriString=sessionUri.toString();\n  String host=checkNotNull(uri.getHost());\n  if (host.equals(sessionUri.getHost())) {\n    return uri;\n  }\n  return sessionUriString.endsWith(\"/\") ? UriUtil.resolveToUri(sessionUriString,urlString) : UriUtil.resolveToUri(sessionUriString + \"/\",urlString);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1632,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Resolves the input string to always be an absolute URL with RTP-Info headers <p>Handles some servers do not send absolute URL in RTP-Info headers. This method takes in RTP-Info header's url string, and returns the correctly formatted  {@link Uri url} for thistrack. The input url string could be <ul> <li>A correctly formatted URL, like \" {@code rtsp://foo.bar/video}\". <li>A correct URI that is missing the scheme, like \" {@code foo.bar/video}\". <li>A path to the resource, like \" {@code video}\" or \" {@code /video}\". </ul>\n * @param urlString The URL included in the RTP-Info header, without the {@code url=} identifier.\n * @param sessionUri The session URI, must include an {@code rtsp} scheme, or {@link IllegalArgumentException} is thrown.\n * @return The formatted URL.\n */\n@VisibleForTesting static Uri resolveUri(String urlString,Uri sessionUri){\n  checkArgument(checkNotNull(sessionUri.getScheme()).equals(\"rtsp\"));\n  Uri uri=Uri.parse(urlString);\n  if (uri.isAbsolute()) {\n    return uri;\n  }\n  uri=Uri.parse(\"rtsp://\" + urlString);\n  String sessionUriString=sessionUri.toString();\n  String host=checkNotNull(uri.getHost());\n  if (host.equals(sessionUri.getHost())) {\n    return uri;\n  }\n  return sessionUriString.endsWith(\"/\") ? UriUtil.resolveToUri(sessionUriString,urlString) : UriUtil.resolveToUri(sessionUriString + \"/\",urlString);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 143,
        "startColumnNumber" : 10,
        "endLineNumber" : 143,
        "endColumnNumber" : 59
      },
      "nodeContext" : "UriUtil.resolveToUri(sessionUriString,urlString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.util.UriUtil"
  }, {
    "nodeContext" : "UriUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 144,
      "startColumnNumber" : 10,
      "endLineNumber" : 144,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 144,
        "startColumnNumber" : 10,
        "endLineNumber" : 144,
        "endColumnNumber" : 65
      },
      "nodeContext" : "UriUtil.resolveToUri(sessionUriString + \"/\",urlString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 142,
        "startColumnNumber" : 11,
        "endLineNumber" : 144,
        "endColumnNumber" : 65
      },
      "nodeContext" : "sessionUriString.endsWith(\"/\") ? UriUtil.resolveToUri(sessionUriString,urlString) : UriUtil.resolveToUri(sessionUriString + \"/\",urlString)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 66
      },
      "nodeContext" : "return sessionUriString.endsWith(\"/\") ? UriUtil.resolveToUri(sessionUriString,urlString) : UriUtil.resolveToUri(sessionUriString + \"/\",urlString);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 124,
        "startColumnNumber" : 72,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkArgument(checkNotNull(sessionUri.getScheme()).equals(\"rtsp\"));\n  Uri uri=Uri.parse(urlString);\n  if (uri.isAbsolute()) {\n    return uri;\n  }\n  uri=Uri.parse(\"rtsp://\" + urlString);\n  String sessionUriString=sessionUri.toString();\n  String host=checkNotNull(uri.getHost());\n  if (host.equals(sessionUri.getHost())) {\n    return uri;\n  }\n  return sessionUriString.endsWith(\"/\") ? UriUtil.resolveToUri(sessionUriString,urlString) : UriUtil.resolveToUri(sessionUriString + \"/\",urlString);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1632,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Resolves the input string to always be an absolute URL with RTP-Info headers <p>Handles some servers do not send absolute URL in RTP-Info headers. This method takes in RTP-Info header's url string, and returns the correctly formatted  {@link Uri url} for thistrack. The input url string could be <ul> <li>A correctly formatted URL, like \" {@code rtsp://foo.bar/video}\". <li>A correct URI that is missing the scheme, like \" {@code foo.bar/video}\". <li>A path to the resource, like \" {@code video}\" or \" {@code /video}\". </ul>\n * @param urlString The URL included in the RTP-Info header, without the {@code url=} identifier.\n * @param sessionUri The session URI, must include an {@code rtsp} scheme, or {@link IllegalArgumentException} is thrown.\n * @return The formatted URL.\n */\n@VisibleForTesting static Uri resolveUri(String urlString,Uri sessionUri){\n  checkArgument(checkNotNull(sessionUri.getScheme()).equals(\"rtsp\"));\n  Uri uri=Uri.parse(urlString);\n  if (uri.isAbsolute()) {\n    return uri;\n  }\n  uri=Uri.parse(\"rtsp://\" + urlString);\n  String sessionUriString=sessionUri.toString();\n  String host=checkNotNull(uri.getHost());\n  if (host.equals(sessionUri.getHost())) {\n    return uri;\n  }\n  return sessionUriString.endsWith(\"/\") ? UriUtil.resolveToUri(sessionUriString,urlString) : UriUtil.resolveToUri(sessionUriString + \"/\",urlString);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 144,
        "startColumnNumber" : 10,
        "endLineNumber" : 144,
        "endColumnNumber" : 65
      },
      "nodeContext" : "UriUtil.resolveToUri(sessionUriString + \"/\",urlString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.util.UriUtil"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 143,
    "startColumnNumber" : 10,
    "endLineNumber" : 143,
    "endColumnNumber" : 17
  }, {
    "charLength" : 7,
    "startLineNumber" : 144,
    "startColumnNumber" : 10,
    "endLineNumber" : 144,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}