{
  "id" : 425,
  "expression" : "\"Value is of a type not supported: \" + value.getClass()",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/main/java/io/realm/RealmResults.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Value is of a type not supported: \" + value.getClass()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 55,
      "startLineNumber" : 254,
      "startColumnNumber" : 47,
      "endLineNumber" : 254,
      "endColumnNumber" : 102
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 254,
        "startColumnNumber" : 18,
        "endLineNumber" : 254,
        "endColumnNumber" : 103
      },
      "nodeContext" : "new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 254,
        "startColumnNumber" : 12,
        "endLineNumber" : 254,
        "endColumnNumber" : 104
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 253,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 250,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 248,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 458,
        "startLineNumber" : 246,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 244,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value instanceof UUID) {\n  setUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 242,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value instanceof ObjectId) {\n  setObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\n  setUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 93,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 758,
        "startLineNumber" : 240,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value instanceof Decimal128) {\n  setDecimal128(fieldName,(Decimal128)value);\n}\n else if (value instanceof ObjectId) {\n  setObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\n  setUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 107,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 848,
        "startLineNumber" : 238,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value instanceof Date) {\n  setDate(fieldName,(Date)value);\n}\n else if (value instanceof Decimal128) {\n  setDecimal128(fieldName,(Decimal128)value);\n}\n else if (value instanceof ObjectId) {\n  setObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\n  setUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 121,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 235,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (valueClass == String.class) {\n  setString(fieldName,(String)value);\n}\n else if (value instanceof Date) {\n  setDate(fieldName,(Date)value);\n}\n else if (value instanceof Decimal128) {\n  setDecimal128(fieldName,(Decimal128)value);\n}\n else if (value instanceof ObjectId) {\n  setObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\n  setUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1092,
        "startLineNumber" : 233,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (valueClass == Double.class) {\n  setDouble(fieldName,(Double)value);\n}\n else if (valueClass == String.class) {\n  setString(fieldName,(String)value);\n}\n else if (value instanceof Date) {\n  setDate(fieldName,(Date)value);\n}\n else if (value instanceof Decimal128) {\n  setDecimal128(fieldName,(Decimal128)value);\n}\n else if (value instanceof ObjectId) {\n  setObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\n  setUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 151,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1188,
        "startLineNumber" : 231,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (valueClass == Float.class) {\n  setFloat(fieldName,(Float)value);\n}\n else if (valueClass == Double.class) {\n  setDouble(fieldName,(Double)value);\n}\n else if (valueClass == String.class) {\n  setString(fieldName,(String)value);\n}\n else if (value instanceof Date) {\n  setDate(fieldName,(Date)value);\n}\n else if (value instanceof Decimal128) {\n  setDecimal128(fieldName,(Decimal128)value);\n}\n else if (value instanceof ObjectId) {\n  setObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\n  setUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 166,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1281,
        "startLineNumber" : 229,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (valueClass == Byte.class) {\n  setByte(fieldName,(Byte)value);\n}\n else if (valueClass == Float.class) {\n  setFloat(fieldName,(Float)value);\n}\n else if (valueClass == Double.class) {\n  setDouble(fieldName,(Double)value);\n}\n else if (valueClass == String.class) {\n  setString(fieldName,(String)value);\n}\n else if (value instanceof Date) {\n  setDate(fieldName,(Date)value);\n}\n else if (value instanceof Decimal128) {\n  setDecimal128(fieldName,(Decimal128)value);\n}\n else if (value instanceof ObjectId) {\n  setObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\n  setUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 181,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1374,
        "startLineNumber" : 227,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (valueClass == Long.class) {\n  setLong(fieldName,(Long)value);\n}\n else if (valueClass == Byte.class) {\n  setByte(fieldName,(Byte)value);\n}\n else if (valueClass == Float.class) {\n  setFloat(fieldName,(Float)value);\n}\n else if (valueClass == Double.class) {\n  setDouble(fieldName,(Double)value);\n}\n else if (valueClass == String.class) {\n  setString(fieldName,(String)value);\n}\n else if (value instanceof Date) {\n  setDate(fieldName,(Date)value);\n}\n else if (value instanceof Decimal128) {\n  setDecimal128(fieldName,(Decimal128)value);\n}\n else if (value instanceof ObjectId) {\n  setObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\n  setUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 196,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1472,
        "startLineNumber" : 225,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (valueClass == Integer.class) {\n  setInt(fieldName,(Integer)value);\n}\n else if (valueClass == Long.class) {\n  setLong(fieldName,(Long)value);\n}\n else if (valueClass == Byte.class) {\n  setByte(fieldName,(Byte)value);\n}\n else if (valueClass == Float.class) {\n  setFloat(fieldName,(Float)value);\n}\n else if (valueClass == Double.class) {\n  setDouble(fieldName,(Double)value);\n}\n else if (valueClass == String.class) {\n  setString(fieldName,(String)value);\n}\n else if (value instanceof Date) {\n  setDate(fieldName,(Date)value);\n}\n else if (value instanceof Decimal128) {\n  setDecimal128(fieldName,(Decimal128)value);\n}\n else if (value instanceof ObjectId) {\n  setObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\n  setUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 211,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1568,
        "startLineNumber" : 223,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (valueClass == Short.class) {\n  setShort(fieldName,(Short)value);\n}\n else if (valueClass == Integer.class) {\n  setInt(fieldName,(Integer)value);\n}\n else if (valueClass == Long.class) {\n  setLong(fieldName,(Long)value);\n}\n else if (valueClass == Byte.class) {\n  setByte(fieldName,(Byte)value);\n}\n else if (valueClass == Float.class) {\n  setFloat(fieldName,(Float)value);\n}\n else if (valueClass == Double.class) {\n  setDouble(fieldName,(Double)value);\n}\n else if (valueClass == String.class) {\n  setString(fieldName,(String)value);\n}\n else if (value instanceof Date) {\n  setDate(fieldName,(Date)value);\n}\n else if (value instanceof Decimal128) {\n  setDecimal128(fieldName,(Decimal128)value);\n}\n else if (value instanceof ObjectId) {\n  setObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\n  setUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 226,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1670,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 255,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (valueClass == Boolean.class) {\n  setBoolean(fieldName,(Boolean)value);\n}\n else if (valueClass == Short.class) {\n  setShort(fieldName,(Short)value);\n}\n else if (valueClass == Integer.class) {\n  setInt(fieldName,(Integer)value);\n}\n else if (valueClass == Long.class) {\n  setLong(fieldName,(Long)value);\n}\n else if (valueClass == Byte.class) {\n  setByte(fieldName,(Byte)value);\n}\n else if (valueClass == Float.class) {\n  setFloat(fieldName,(Float)value);\n}\n else if (valueClass == Double.class) {\n  setDouble(fieldName,(Double)value);\n}\n else if (valueClass == String.class) {\n  setString(fieldName,(String)value);\n}\n else if (value instanceof Date) {\n  setDate(fieldName,(Date)value);\n}\n else if (value instanceof Decimal128) {\n  setDecimal128(fieldName,(Decimal128)value);\n}\n else if (value instanceof ObjectId) {\n  setObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\n  setUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\n  setBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\n  setObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\n  RealmList<?> list=(RealmList<?>)value;\n  setList(fieldName,list);\n}\n else {\n  throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 241,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3987,
        "startLineNumber" : 164,
        "startColumnNumber" : 67,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkNonEmptyFieldName(fieldName);\n  baseRealm.checkIfValidAndInTransaction();\n  fieldName=mapFieldNameToInternalName(fieldName);\n  boolean isString=(value instanceof String);\n  String strValue=isString ? (String)value : null;\n  String className=osResults.getTable().getClassName();\n  RealmObjectSchema schema=getRealm().getSchema().get(className);\n  if (!schema.hasField(fieldName)) {\n    throw new IllegalArgumentException(String.format(\"Field '%s' could not be found in class '%s'\",fieldName,className));\n  }\n  if (value == null) {\n    osResults.setNull(fieldName);\n    return;\n  }\n  RealmFieldType type=schema.getFieldType(fieldName);\n  if (isString && type != RealmFieldType.STRING) {\nswitch (type) {\ncase BOOLEAN:      value=Boolean.parseBoolean(strValue);\n    break;\ncase INTEGER:  value=Long.parseLong(strValue);\nbreak;\ncase FLOAT:value=Float.parseFloat(strValue);\nbreak;\ncase DOUBLE:value=Double.parseDouble(strValue);\nbreak;\ncase DATE:value=JsonUtils.stringToDate(strValue);\nbreak;\ncase DECIMAL128:value=Decimal128.parse(strValue);\nbreak;\ncase OBJECT_ID:value=new ObjectId(strValue);\nbreak;\ncase UUID:value=UUID.fromString(strValue);\nbreak;\ndefault:throw new IllegalArgumentException(String.format(Locale.US,\"Field %s is not a String field, \" + \"and the provide value could not be automatically converted: %s. Use a typed\" + \"setter instead\",fieldName,value));\n}\n}\nClass<?> valueClass=value.getClass();\nif (valueClass == Boolean.class) {\nsetBoolean(fieldName,(Boolean)value);\n}\n else if (valueClass == Short.class) {\nsetShort(fieldName,(Short)value);\n}\n else if (valueClass == Integer.class) {\nsetInt(fieldName,(Integer)value);\n}\n else if (valueClass == Long.class) {\nsetLong(fieldName,(Long)value);\n}\n else if (valueClass == Byte.class) {\nsetByte(fieldName,(Byte)value);\n}\n else if (valueClass == Float.class) {\nsetFloat(fieldName,(Float)value);\n}\n else if (valueClass == Double.class) {\nsetDouble(fieldName,(Double)value);\n}\n else if (valueClass == String.class) {\nsetString(fieldName,(String)value);\n}\n else if (value instanceof Date) {\nsetDate(fieldName,(Date)value);\n}\n else if (value instanceof Decimal128) {\nsetDecimal128(fieldName,(Decimal128)value);\n}\n else if (value instanceof ObjectId) {\nsetObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\nsetUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\nsetBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\nsetObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\nRealmList<?> list=(RealmList<?>)value;\nsetList(fieldName,list);\n}\n else {\nthrow new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 454,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4852,
        "startLineNumber" : 148,
        "startColumnNumber" : 4,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Updates the field given by  {@code fieldName} in all objects inside the query result.<p> This method will automatically try to convert numbers and booleans that are given as {@code String} to their appropriate type. For example {@code \"10\"} will be converted to{@code 10} if the field type is {@link RealmFieldType#INTEGER}. <p> Using the typed setters like  {@link #setInt(String,int)} will be faster than usingthis method.\n * @param fieldName field to update\n * @param value value to update with.\n * @throws IllegalArgumentException if the field could not be found, could not be updated orthe argument didn't match the field type or could not be converted to match the underlying field type.\n */\npublic void setValue(String fieldName,@Nullable Object value){\n  checkNonEmptyFieldName(fieldName);\n  baseRealm.checkIfValidAndInTransaction();\n  fieldName=mapFieldNameToInternalName(fieldName);\n  boolean isString=(value instanceof String);\n  String strValue=isString ? (String)value : null;\n  String className=osResults.getTable().getClassName();\n  RealmObjectSchema schema=getRealm().getSchema().get(className);\n  if (!schema.hasField(fieldName)) {\n    throw new IllegalArgumentException(String.format(\"Field '%s' could not be found in class '%s'\",fieldName,className));\n  }\n  if (value == null) {\n    osResults.setNull(fieldName);\n    return;\n  }\n  RealmFieldType type=schema.getFieldType(fieldName);\n  if (isString && type != RealmFieldType.STRING) {\nswitch (type) {\ncase BOOLEAN:      value=Boolean.parseBoolean(strValue);\n    break;\ncase INTEGER:  value=Long.parseLong(strValue);\nbreak;\ncase FLOAT:value=Float.parseFloat(strValue);\nbreak;\ncase DOUBLE:value=Double.parseDouble(strValue);\nbreak;\ncase DATE:value=JsonUtils.stringToDate(strValue);\nbreak;\ncase DECIMAL128:value=Decimal128.parse(strValue);\nbreak;\ncase OBJECT_ID:value=new ObjectId(strValue);\nbreak;\ncase UUID:value=UUID.fromString(strValue);\nbreak;\ndefault:throw new IllegalArgumentException(String.format(Locale.US,\"Field %s is not a String field, \" + \"and the provide value could not be automatically converted: %s. Use a typed\" + \"setter instead\",fieldName,value));\n}\n}\nClass<?> valueClass=value.getClass();\nif (valueClass == Boolean.class) {\nsetBoolean(fieldName,(Boolean)value);\n}\n else if (valueClass == Short.class) {\nsetShort(fieldName,(Short)value);\n}\n else if (valueClass == Integer.class) {\nsetInt(fieldName,(Integer)value);\n}\n else if (valueClass == Long.class) {\nsetLong(fieldName,(Long)value);\n}\n else if (valueClass == Byte.class) {\nsetByte(fieldName,(Byte)value);\n}\n else if (valueClass == Float.class) {\nsetFloat(fieldName,(Float)value);\n}\n else if (valueClass == Double.class) {\nsetDouble(fieldName,(Double)value);\n}\n else if (valueClass == String.class) {\nsetString(fieldName,(String)value);\n}\n else if (value instanceof Date) {\nsetDate(fieldName,(Date)value);\n}\n else if (value instanceof Decimal128) {\nsetDecimal128(fieldName,(Decimal128)value);\n}\n else if (value instanceof ObjectId) {\nsetObjectId(fieldName,(ObjectId)value);\n}\n else if (value instanceof UUID) {\nsetUUID(fieldName,(UUID)value);\n}\n else if (value instanceof byte[]) {\nsetBlob(fieldName,(byte[])value);\n}\n else if (value instanceof RealmModel) {\nsetObject(fieldName,(RealmModel)value);\n}\n else if (valueClass == RealmList.class) {\nRealmList<?> list=(RealmList<?>)value;\nsetList(fieldName,list);\n}\n else {\nthrow new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 469,
      "astHeight" : 24
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 254,
        "startColumnNumber" : 12,
        "endLineNumber" : 254,
        "endColumnNumber" : 104
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Value is of a type not supported: \" + value.getClass());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 10,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 55,
    "startLineNumber" : 254,
    "startColumnNumber" : 47,
    "endLineNumber" : 254,
    "endColumnNumber" : 102
  } ],
  "layoutRelationDataList" : [ ]
}