{
  "id" : 50,
  "expression" : "Arrays.asList(\"jvmFlag1\",\"jvmFlag2\")",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-maven-plugin/src/test/java/com/google/cloud/tools/jib/maven/JibPluginConfigurationTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays.asList(\"jvmFlag1\",\"jvmFlag2\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 68,
      "startColumnNumber" : 40,
      "endLineNumber" : 68,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 78
      },
      "nodeContext" : "testPluginConfiguration.setJvmFlags(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 79
      },
      "nodeContext" : "testPluginConfiguration.setJvmFlags(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1453,
        "startLineNumber" : 64,
        "startColumnNumber" : 47,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  testPluginConfiguration.handleDeprecatedParameters(mockLogger);\n  Mockito.verify(mockLogger,Mockito.never()).warn(Mockito.any());\n  testPluginConfiguration.setJvmFlags(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"));\n  testPluginConfiguration.setMainClass(\"mainClass\");\n  testPluginConfiguration.setArgs(Arrays.asList(\"arg1\",\"arg2\",\"arg3\"));\n  testPluginConfiguration.setFormat(\"OCI\");\n  testPluginConfiguration.setExtraDirectory(\"some/path\");\n  testPluginConfiguration.handleDeprecatedParameters(mockLogger);\n  String expectedOutput=\"There are deprecated parameters used in the build configuration. Please make the \" + \"following changes to your pom.xml to avoid issues in the future:\\n\" + \"  <jvmFlags> -> <container><jvmFlags>\\n\"+ \"  <mainClass> -> <container><mainClass>\\n\"+ \"  <args> -> <container><args>\\n\"+ \"  <format> -> <container><format>\\n\";\n  Mockito.verify(mockLogger).warn(expectedOutput);\n  Assert.assertEquals(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"),testPluginConfiguration.getJvmFlags());\n  Assert.assertEquals(\"mainClass\",testPluginConfiguration.getMainClass());\n  Assert.assertEquals(Arrays.asList(\"arg1\",\"arg2\",\"arg3\"),testPluginConfiguration.getArgs());\n  Assert.assertEquals(\"OCI\",testPluginConfiguration.getFormat());\n  Assert.assertEquals(Paths.get(\"some/path\"),testPluginConfiguration.getExtraDirectory());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1506,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHandleDeprecatedParameters(){\n  testPluginConfiguration.handleDeprecatedParameters(mockLogger);\n  Mockito.verify(mockLogger,Mockito.never()).warn(Mockito.any());\n  testPluginConfiguration.setJvmFlags(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"));\n  testPluginConfiguration.setMainClass(\"mainClass\");\n  testPluginConfiguration.setArgs(Arrays.asList(\"arg1\",\"arg2\",\"arg3\"));\n  testPluginConfiguration.setFormat(\"OCI\");\n  testPluginConfiguration.setExtraDirectory(\"some/path\");\n  testPluginConfiguration.handleDeprecatedParameters(mockLogger);\n  String expectedOutput=\"There are deprecated parameters used in the build configuration. Please make the \" + \"following changes to your pom.xml to avoid issues in the future:\\n\" + \"  <jvmFlags> -> <container><jvmFlags>\\n\"+ \"  <mainClass> -> <container><mainClass>\\n\"+ \"  <args> -> <container><args>\\n\"+ \"  <format> -> <container><format>\\n\";\n  Mockito.verify(mockLogger).warn(expectedOutput);\n  Assert.assertEquals(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"),testPluginConfiguration.getJvmFlags());\n  Assert.assertEquals(\"mainClass\",testPluginConfiguration.getMainClass());\n  Assert.assertEquals(Arrays.asList(\"arg1\",\"arg2\",\"arg3\"),testPluginConfiguration.getArgs());\n  Assert.assertEquals(\"OCI\",testPluginConfiguration.getFormat());\n  Assert.assertEquals(Paths.get(\"some/path\"),testPluginConfiguration.getExtraDirectory());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 79
      },
      "nodeContext" : "testPluginConfiguration.setJvmFlags(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "Arrays.asList(\"jvmFlag1\",\"jvmFlag2\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 85,
      "startColumnNumber" : 8,
      "endLineNumber" : 85,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Assert.assertEquals(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"),testPluginConfiguration.getJvmFlags())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assert.assertEquals(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"),testPluginConfiguration.getJvmFlags());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1453,
        "startLineNumber" : 64,
        "startColumnNumber" : 47,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  testPluginConfiguration.handleDeprecatedParameters(mockLogger);\n  Mockito.verify(mockLogger,Mockito.never()).warn(Mockito.any());\n  testPluginConfiguration.setJvmFlags(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"));\n  testPluginConfiguration.setMainClass(\"mainClass\");\n  testPluginConfiguration.setArgs(Arrays.asList(\"arg1\",\"arg2\",\"arg3\"));\n  testPluginConfiguration.setFormat(\"OCI\");\n  testPluginConfiguration.setExtraDirectory(\"some/path\");\n  testPluginConfiguration.handleDeprecatedParameters(mockLogger);\n  String expectedOutput=\"There are deprecated parameters used in the build configuration. Please make the \" + \"following changes to your pom.xml to avoid issues in the future:\\n\" + \"  <jvmFlags> -> <container><jvmFlags>\\n\"+ \"  <mainClass> -> <container><mainClass>\\n\"+ \"  <args> -> <container><args>\\n\"+ \"  <format> -> <container><format>\\n\";\n  Mockito.verify(mockLogger).warn(expectedOutput);\n  Assert.assertEquals(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"),testPluginConfiguration.getJvmFlags());\n  Assert.assertEquals(\"mainClass\",testPluginConfiguration.getMainClass());\n  Assert.assertEquals(Arrays.asList(\"arg1\",\"arg2\",\"arg3\"),testPluginConfiguration.getArgs());\n  Assert.assertEquals(\"OCI\",testPluginConfiguration.getFormat());\n  Assert.assertEquals(Paths.get(\"some/path\"),testPluginConfiguration.getExtraDirectory());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1506,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHandleDeprecatedParameters(){\n  testPluginConfiguration.handleDeprecatedParameters(mockLogger);\n  Mockito.verify(mockLogger,Mockito.never()).warn(Mockito.any());\n  testPluginConfiguration.setJvmFlags(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"));\n  testPluginConfiguration.setMainClass(\"mainClass\");\n  testPluginConfiguration.setArgs(Arrays.asList(\"arg1\",\"arg2\",\"arg3\"));\n  testPluginConfiguration.setFormat(\"OCI\");\n  testPluginConfiguration.setExtraDirectory(\"some/path\");\n  testPluginConfiguration.handleDeprecatedParameters(mockLogger);\n  String expectedOutput=\"There are deprecated parameters used in the build configuration. Please make the \" + \"following changes to your pom.xml to avoid issues in the future:\\n\" + \"  <jvmFlags> -> <container><jvmFlags>\\n\"+ \"  <mainClass> -> <container><mainClass>\\n\"+ \"  <args> -> <container><args>\\n\"+ \"  <format> -> <container><format>\\n\";\n  Mockito.verify(mockLogger).warn(expectedOutput);\n  Assert.assertEquals(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"),testPluginConfiguration.getJvmFlags());\n  Assert.assertEquals(\"mainClass\",testPluginConfiguration.getMainClass());\n  Assert.assertEquals(Arrays.asList(\"arg1\",\"arg2\",\"arg3\"),testPluginConfiguration.getArgs());\n  Assert.assertEquals(\"OCI\",testPluginConfiguration.getFormat());\n  Assert.assertEquals(Paths.get(\"some/path\"),testPluginConfiguration.getExtraDirectory());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Assert.assertEquals(Arrays.asList(\"jvmFlag1\",\"jvmFlag2\"),testPluginConfiguration.getJvmFlags())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 68,
    "startColumnNumber" : 40,
    "endLineNumber" : 68,
    "endColumnNumber" : 77
  }, {
    "charLength" : 37,
    "startLineNumber" : 85,
    "startColumnNumber" : 8,
    "endLineNumber" : 85,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}