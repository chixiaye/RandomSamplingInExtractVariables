{
  "id" : 100,
  "expression" : "\"key2\".getBytes()",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/test/java/redis/clients/jedis/tests/commands/ScriptingCommandsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"key2\".getBytes()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 46,
      "startColumnNumber" : 13,
      "endLineNumber" : 46,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 31
      },
      "nodeContext" : "keys.add(\"key2\".getBytes())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 32
      },
      "nodeContext" : "keys.add(\"key2\".getBytes());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 42,
        "startColumnNumber" : 45,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String script=\"return {KEYS[1],KEYS[2],ARGV[1],ARGV[2],ARGV[3]}\";\n  List<byte[]> keys=new ArrayList<byte[]>();\n  keys.add(\"key1\".getBytes());\n  keys.add(\"key2\".getBytes());\n  List<byte[]> args=new ArrayList<byte[]>();\n  args.add(\"first\".getBytes());\n  args.add(\"second\".getBytes());\n  args.add(\"third\".getBytes());\n  BinaryJedis binaryJedis=new BinaryJedis(hnp.getHost(),hnp.getPort(),500);\n  binaryJedis.connect();\n  binaryJedis.auth(\"foobared\");\n  List<byte[]> responses=(List<byte[]>)binaryJedis.eval(script.getBytes(),keys,args);\n  assertEquals(5,responses.size());\n  assertEquals(\"key1\",new String(responses.get(0)));\n  assertEquals(\"key2\",new String(responses.get(1)));\n  assertEquals(\"first\",new String(responses.get(2)));\n  assertEquals(\"second\",new String(responses.get(3)));\n  assertEquals(\"third\",new String(responses.get(4)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void evalMultiBulkWithBinaryJedis(){\n  String script=\"return {KEYS[1],KEYS[2],ARGV[1],ARGV[2],ARGV[3]}\";\n  List<byte[]> keys=new ArrayList<byte[]>();\n  keys.add(\"key1\".getBytes());\n  keys.add(\"key2\".getBytes());\n  List<byte[]> args=new ArrayList<byte[]>();\n  args.add(\"first\".getBytes());\n  args.add(\"second\".getBytes());\n  args.add(\"third\".getBytes());\n  BinaryJedis binaryJedis=new BinaryJedis(hnp.getHost(),hnp.getPort(),500);\n  binaryJedis.connect();\n  binaryJedis.auth(\"foobared\");\n  List<byte[]> responses=(List<byte[]>)binaryJedis.eval(script.getBytes(),keys,args);\n  assertEquals(5,responses.size());\n  assertEquals(\"key1\",new String(responses.get(0)));\n  assertEquals(\"key2\",new String(responses.get(1)));\n  assertEquals(\"first\",new String(responses.get(2)));\n  assertEquals(\"second\",new String(responses.get(3)));\n  assertEquals(\"third\",new String(responses.get(4)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 193,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 32
      },
      "nodeContext" : "keys.add(\"key2\".getBytes());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 46,
    "startColumnNumber" : 13,
    "endLineNumber" : 46,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}