{
  "id" : 21,
  "expression" : "continuation.isDone()",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/actions/Action.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "continuation.isDone()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 134,
      "startColumnNumber" : 12,
      "endLineNumber" : 134,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 134,
        "startColumnNumber" : 11,
        "endLineNumber" : 134,
        "endColumnNumber" : 33
      },
      "nodeContext" : "!continuation.isDone()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!continuation.isDone()) {\n  continuation=continuation.execute();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 132,
        "startColumnNumber" : 60,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ActionContinuationOrResult continuation=beginExecution(actionExecutionContext);\n  while (!continuation.isDone()) {\n    continuation=continuation.execute();\n  }\n  return continuation.get();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2125,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Executes this action. This method <i>unconditionally does the work of the Action</i>, although it may delegate some of that work to  {@link ActionContext} instances obtained from the {@link ActionExecutionContext}, which may in turn perform caching at smaller granularity than an entire action. <p>This method may not be invoked if an equivalent action (as determined by the hashes of the input files, the list of output files, and the action cache key) has been previously executed, possibly on another machine. <p>The framework guarantees that: <ul> <li>all declared inputs have already been successfully created, <li>the output directory for each file in <code>getOutputs()</code> has already been created, <li>this method is only called by at most one thread at a time, but subsequent calls may be made from different threads, <li>for shared actions, at most one instance is executed per build. </ul> <p>Multiple instances of the same action implementation may be called in parallel. Implementations must therefore be thread-compatible. Also see the class documentation for additional invariants. <p>Implementations should attempt to detect interrupts, and exit quickly with an  {@link InterruptedException}.\n * @param actionExecutionContext services in the scope of the action, like the output and errorstreams to use for messages arising during action execution\n * @return returns an ActionResult containing action execution metadata\n * @throws ActionExecutionException if execution fails for any reason\n * @throws InterruptedException if the execution is interrupted\n */\n@ConditionallyThreadCompatible default ActionResult execute(ActionExecutionContext actionExecutionContext) throws ActionExecutionException, InterruptedException {\n  ActionContinuationOrResult continuation=beginExecution(actionExecutionContext);\n  while (!continuation.isDone()) {\n    continuation=continuation.execute();\n  }\n  return continuation.get();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 41,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 134,
        "startColumnNumber" : 11,
        "endLineNumber" : 134,
        "endColumnNumber" : 33
      },
      "nodeContext" : "!continuation.isDone()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 134,
    "startColumnNumber" : 12,
    "endLineNumber" : 134,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}