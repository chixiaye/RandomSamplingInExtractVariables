{
  "id" : 260,
  "expression" : "action.getClass()",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/server/notification/NotificationFixer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "action.getClass()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 139,
      "startColumnNumber" : 24,
      "endLineNumber" : 139,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 139,
        "startColumnNumber" : 24,
        "endLineNumber" : 139,
        "endColumnNumber" : 57
      },
      "nodeContext" : "action.getClass().getSimpleName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 139,
        "startColumnNumber" : 24,
        "endLineNumber" : 139,
        "endColumnNumber" : 92
      },
      "nodeContext" : "action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 139,
        "startColumnNumber" : 20,
        "endLineNumber" : 142,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n  mActions.remove(action);\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3287,
        "startLineNumber" : 131,
        "startColumnNumber" : 53,
        "endLineNumber" : 190,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Object action=mActions.get(i);\n  if (action == null) {\n    continue;\n  }\n  if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n    mActions.remove(action);\n    continue;\n  }\n  if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n    int viewId=Reflect.on(action).get(\"viewId\");\n    String methodName=Reflect.on(action).get(\"methodName\");\n    int type=Reflect.on(action).get(\"type\");\n    Object value=Reflect.on(action).get(\"value\");\n    if (!hasIcon) {\n      hasIcon=viewId == systemIconViewId;\n      if (hasIcon) {\n        if (type == ReflectionActionCompat.INT && (int)value == 0) {\n          hasIcon=false;\n        }\n        if (hasIcon) {\n          VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n        }\n      }\n    }\n    if (methodName.equals(\"setImageResource\")) {\n      mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n      mActions.remove(action);\n    }\n else     if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n      Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n      Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n    }\n else     if (methodName.equals(\"setLabelFor\")) {\n      mActions.remove(action);\n    }\n else     if (methodName.equals(\"setBackgroundResource\")) {\n      mActions.remove(action);\n    }\n else     if (methodName.equals(\"setImageURI\")) {\n      Uri uri=(Uri)value;\n      if (!uri.getScheme().startsWith(\"http\")) {\n        mActions.remove(action);\n      }\n    }\n else {\n      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n        if (value instanceof Icon) {\n          Icon icon=(Icon)value;\n          fixIcon(icon,appContext,installed);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 294,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3324,
        "startLineNumber" : 131,
        "startColumnNumber" : 16,
        "endLineNumber" : 190,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=count - 1; i >= 0; i--) {\n  Object action=mActions.get(i);\n  if (action == null) {\n    continue;\n  }\n  if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n    mActions.remove(action);\n    continue;\n  }\n  if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n    int viewId=Reflect.on(action).get(\"viewId\");\n    String methodName=Reflect.on(action).get(\"methodName\");\n    int type=Reflect.on(action).get(\"type\");\n    Object value=Reflect.on(action).get(\"value\");\n    if (!hasIcon) {\n      hasIcon=viewId == systemIconViewId;\n      if (hasIcon) {\n        if (type == ReflectionActionCompat.INT && (int)value == 0) {\n          hasIcon=false;\n        }\n        if (hasIcon) {\n          VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n        }\n      }\n    }\n    if (methodName.equals(\"setImageResource\")) {\n      mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n      mActions.remove(action);\n    }\n else     if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n      Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n      Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n    }\n else     if (methodName.equals(\"setLabelFor\")) {\n      mActions.remove(action);\n    }\n else     if (methodName.equals(\"setBackgroundResource\")) {\n      mActions.remove(action);\n    }\n else     if (methodName.equals(\"setImageURI\")) {\n      Uri uri=(Uri)value;\n      if (!uri.getScheme().startsWith(\"http\")) {\n        mActions.remove(action);\n      }\n    }\n else {\n      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n        if (value instanceof Icon) {\n          Icon icon=(Icon)value;\n          fixIcon(icon,appContext,installed);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 307,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3572,
        "startLineNumber" : 129,
        "startColumnNumber" : 34,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int count=mActions.size();\n  for (int i=count - 1; i >= 0; i--) {\n    Object action=mActions.get(i);\n    if (action == null) {\n      continue;\n    }\n    if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n      mActions.remove(action);\n      continue;\n    }\n    if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n      int viewId=Reflect.on(action).get(\"viewId\");\n      String methodName=Reflect.on(action).get(\"methodName\");\n      int type=Reflect.on(action).get(\"type\");\n      Object value=Reflect.on(action).get(\"value\");\n      if (!hasIcon) {\n        hasIcon=viewId == systemIconViewId;\n        if (hasIcon) {\n          if (type == ReflectionActionCompat.INT && (int)value == 0) {\n            hasIcon=false;\n          }\n          if (hasIcon) {\n            VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n          }\n        }\n      }\n      if (methodName.equals(\"setImageResource\")) {\n        mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n        mActions.remove(action);\n      }\n else       if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n        Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n        Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n      }\n else       if (methodName.equals(\"setLabelFor\")) {\n        mActions.remove(action);\n      }\n else       if (methodName.equals(\"setBackgroundResource\")) {\n        mActions.remove(action);\n      }\n else       if (methodName.equals(\"setImageURI\")) {\n        Uri uri=(Uri)value;\n        if (!uri.getScheme().startsWith(\"http\")) {\n          mActions.remove(action);\n        }\n      }\n else {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n          if (value instanceof Icon) {\n            Icon icon=(Icon)value;\n            fixIcon(icon,appContext,installed);\n          }\n        }\n      }\n    }\n  }\n  for (  BitmapReflectionAction action : mNew) {\n    remoteViews.setBitmap(action.viewId,action.methodName,action.bitmap);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 335,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3594,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mActions != null) {\n  int count=mActions.size();\n  for (int i=count - 1; i >= 0; i--) {\n    Object action=mActions.get(i);\n    if (action == null) {\n      continue;\n    }\n    if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n      mActions.remove(action);\n      continue;\n    }\n    if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n      int viewId=Reflect.on(action).get(\"viewId\");\n      String methodName=Reflect.on(action).get(\"methodName\");\n      int type=Reflect.on(action).get(\"type\");\n      Object value=Reflect.on(action).get(\"value\");\n      if (!hasIcon) {\n        hasIcon=viewId == systemIconViewId;\n        if (hasIcon) {\n          if (type == ReflectionActionCompat.INT && (int)value == 0) {\n            hasIcon=false;\n          }\n          if (hasIcon) {\n            VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n          }\n        }\n      }\n      if (methodName.equals(\"setImageResource\")) {\n        mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n        mActions.remove(action);\n      }\n else       if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n        Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n        Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n      }\n else       if (methodName.equals(\"setLabelFor\")) {\n        mActions.remove(action);\n      }\n else       if (methodName.equals(\"setBackgroundResource\")) {\n        mActions.remove(action);\n      }\n else       if (methodName.equals(\"setImageURI\")) {\n        Uri uri=(Uri)value;\n        if (!uri.getScheme().startsWith(\"http\")) {\n          mActions.remove(action);\n        }\n      }\n else {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n          if (value instanceof Icon) {\n            Icon icon=(Icon)value;\n            fixIcon(icon,appContext,installed);\n          }\n        }\n      }\n    }\n  }\n  for (  BitmapReflectionAction action : mNew) {\n    remoteViews.setBitmap(action.viewId,action.methodName,action.bitmap);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 339,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 4019,
        "startLineNumber" : 125,
        "startColumnNumber" : 33,
        "endLineNumber" : 198,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int systemIconViewId=R_Hide.id.icon.get();\n  List<BitmapReflectionAction> mNew=new ArrayList<>();\n  ArrayList<Object> mActions=Reflect.on(remoteViews).get(\"mActions\");\n  if (mActions != null) {\n    int count=mActions.size();\n    for (int i=count - 1; i >= 0; i--) {\n      Object action=mActions.get(i);\n      if (action == null) {\n        continue;\n      }\n      if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n        mActions.remove(action);\n        continue;\n      }\n      if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n        int viewId=Reflect.on(action).get(\"viewId\");\n        String methodName=Reflect.on(action).get(\"methodName\");\n        int type=Reflect.on(action).get(\"type\");\n        Object value=Reflect.on(action).get(\"value\");\n        if (!hasIcon) {\n          hasIcon=viewId == systemIconViewId;\n          if (hasIcon) {\n            if (type == ReflectionActionCompat.INT && (int)value == 0) {\n              hasIcon=false;\n            }\n            if (hasIcon) {\n              VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n            }\n          }\n        }\n        if (methodName.equals(\"setImageResource\")) {\n          mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n          mActions.remove(action);\n        }\n else         if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n          Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n          Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n        }\n else         if (methodName.equals(\"setLabelFor\")) {\n          mActions.remove(action);\n        }\n else         if (methodName.equals(\"setBackgroundResource\")) {\n          mActions.remove(action);\n        }\n else         if (methodName.equals(\"setImageURI\")) {\n          Uri uri=(Uri)value;\n          if (!uri.getScheme().startsWith(\"http\")) {\n            mActions.remove(action);\n          }\n        }\n else {\n          if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            if (value instanceof Icon) {\n              Icon icon=(Icon)value;\n              fixIcon(icon,appContext,installed);\n            }\n          }\n        }\n      }\n    }\n    for (    BitmapReflectionAction action : mNew) {\n      remoteViews.setBitmap(action.viewId,action.methodName,action.bitmap);\n    }\n  }\n  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\n    mirror.android.widget.RemoteViews.mPackage.set(remoteViews,VirtualCore.get().getHostPkg());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 409,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4044,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remoteViews != null) {\n  int systemIconViewId=R_Hide.id.icon.get();\n  List<BitmapReflectionAction> mNew=new ArrayList<>();\n  ArrayList<Object> mActions=Reflect.on(remoteViews).get(\"mActions\");\n  if (mActions != null) {\n    int count=mActions.size();\n    for (int i=count - 1; i >= 0; i--) {\n      Object action=mActions.get(i);\n      if (action == null) {\n        continue;\n      }\n      if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n        mActions.remove(action);\n        continue;\n      }\n      if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n        int viewId=Reflect.on(action).get(\"viewId\");\n        String methodName=Reflect.on(action).get(\"methodName\");\n        int type=Reflect.on(action).get(\"type\");\n        Object value=Reflect.on(action).get(\"value\");\n        if (!hasIcon) {\n          hasIcon=viewId == systemIconViewId;\n          if (hasIcon) {\n            if (type == ReflectionActionCompat.INT && (int)value == 0) {\n              hasIcon=false;\n            }\n            if (hasIcon) {\n              VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n            }\n          }\n        }\n        if (methodName.equals(\"setImageResource\")) {\n          mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n          mActions.remove(action);\n        }\n else         if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n          Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n          Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n        }\n else         if (methodName.equals(\"setLabelFor\")) {\n          mActions.remove(action);\n        }\n else         if (methodName.equals(\"setBackgroundResource\")) {\n          mActions.remove(action);\n        }\n else         if (methodName.equals(\"setImageURI\")) {\n          Uri uri=(Uri)value;\n          if (!uri.getScheme().startsWith(\"http\")) {\n            mActions.remove(action);\n          }\n        }\n else {\n          if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            if (value instanceof Icon) {\n              Icon icon=(Icon)value;\n              fixIcon(icon,appContext,installed);\n            }\n          }\n        }\n      }\n    }\n    for (    BitmapReflectionAction action : mNew) {\n      remoteViews.setBitmap(action.viewId,action.methodName,action.bitmap);\n    }\n  }\n  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\n    mirror.android.widget.RemoteViews.mPackage.set(remoteViews,VirtualCore.get().getHostPkg());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 413,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4117,
        "startLineNumber" : 123,
        "startColumnNumber" : 103,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean hasIcon=false;\n  if (remoteViews != null) {\n    int systemIconViewId=R_Hide.id.icon.get();\n    List<BitmapReflectionAction> mNew=new ArrayList<>();\n    ArrayList<Object> mActions=Reflect.on(remoteViews).get(\"mActions\");\n    if (mActions != null) {\n      int count=mActions.size();\n      for (int i=count - 1; i >= 0; i--) {\n        Object action=mActions.get(i);\n        if (action == null) {\n          continue;\n        }\n        if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n          mActions.remove(action);\n          continue;\n        }\n        if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n          int viewId=Reflect.on(action).get(\"viewId\");\n          String methodName=Reflect.on(action).get(\"methodName\");\n          int type=Reflect.on(action).get(\"type\");\n          Object value=Reflect.on(action).get(\"value\");\n          if (!hasIcon) {\n            hasIcon=viewId == systemIconViewId;\n            if (hasIcon) {\n              if (type == ReflectionActionCompat.INT && (int)value == 0) {\n                hasIcon=false;\n              }\n              if (hasIcon) {\n                VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n              }\n            }\n          }\n          if (methodName.equals(\"setImageResource\")) {\n            mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n            mActions.remove(action);\n          }\n else           if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n            Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n            Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n          }\n else           if (methodName.equals(\"setLabelFor\")) {\n            mActions.remove(action);\n          }\n else           if (methodName.equals(\"setBackgroundResource\")) {\n            mActions.remove(action);\n          }\n else           if (methodName.equals(\"setImageURI\")) {\n            Uri uri=(Uri)value;\n            if (!uri.getScheme().startsWith(\"http\")) {\n              mActions.remove(action);\n            }\n          }\n else {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n              if (value instanceof Icon) {\n                Icon icon=(Icon)value;\n                fixIcon(icon,appContext,installed);\n              }\n            }\n          }\n        }\n      }\n      for (      BitmapReflectionAction action : mNew) {\n        remoteViews.setBitmap(action.viewId,action.methodName,action.bitmap);\n      }\n    }\n    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\n      mirror.android.widget.RemoteViews.mPackage.set(remoteViews,VirtualCore.get().getHostPkg());\n    }\n  }\n  return hasIcon;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 421,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4216,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "boolean fixRemoteViewActions(Context appContext,boolean installed,final RemoteViews remoteViews){\n  boolean hasIcon=false;\n  if (remoteViews != null) {\n    int systemIconViewId=R_Hide.id.icon.get();\n    List<BitmapReflectionAction> mNew=new ArrayList<>();\n    ArrayList<Object> mActions=Reflect.on(remoteViews).get(\"mActions\");\n    if (mActions != null) {\n      int count=mActions.size();\n      for (int i=count - 1; i >= 0; i--) {\n        Object action=mActions.get(i);\n        if (action == null) {\n          continue;\n        }\n        if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n          mActions.remove(action);\n          continue;\n        }\n        if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n          int viewId=Reflect.on(action).get(\"viewId\");\n          String methodName=Reflect.on(action).get(\"methodName\");\n          int type=Reflect.on(action).get(\"type\");\n          Object value=Reflect.on(action).get(\"value\");\n          if (!hasIcon) {\n            hasIcon=viewId == systemIconViewId;\n            if (hasIcon) {\n              if (type == ReflectionActionCompat.INT && (int)value == 0) {\n                hasIcon=false;\n              }\n              if (hasIcon) {\n                VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n              }\n            }\n          }\n          if (methodName.equals(\"setImageResource\")) {\n            mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n            mActions.remove(action);\n          }\n else           if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n            Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n            Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n          }\n else           if (methodName.equals(\"setLabelFor\")) {\n            mActions.remove(action);\n          }\n else           if (methodName.equals(\"setBackgroundResource\")) {\n            mActions.remove(action);\n          }\n else           if (methodName.equals(\"setImageURI\")) {\n            Uri uri=(Uri)value;\n            if (!uri.getScheme().startsWith(\"http\")) {\n              mActions.remove(action);\n            }\n          }\n else {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n              if (value instanceof Icon) {\n                Icon icon=(Icon)value;\n                fixIcon(icon,appContext,installed);\n              }\n            }\n          }\n        }\n      }\n      for (      BitmapReflectionAction action : mNew) {\n        remoteViews.setBitmap(action.viewId,action.methodName,action.bitmap);\n      }\n    }\n    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\n      mirror.android.widget.RemoteViews.mPackage.set(remoteViews,VirtualCore.get().getHostPkg());\n    }\n  }\n  return hasIcon;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 436,
      "astHeight" : 25
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 139,
        "startColumnNumber" : 24,
        "endLineNumber" : 139,
        "endColumnNumber" : 92
      },
      "nodeContext" : "action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.Class<>"
  }, {
    "nodeContext" : "action.getClass()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 144,
      "startColumnNumber" : 32,
      "endLineNumber" : 144,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 144,
        "startColumnNumber" : 32,
        "endLineNumber" : 144,
        "endColumnNumber" : 65
      },
      "nodeContext" : "action.getClass().getSimpleName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 144,
        "startColumnNumber" : 32,
        "endLineNumber" : 144,
        "endColumnNumber" : 94
      },
      "nodeContext" : "action.getClass().getSimpleName().endsWith(\"ReflectionAction\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 144,
        "startColumnNumber" : 31,
        "endLineNumber" : 144,
        "endColumnNumber" : 95
      },
      "nodeContext" : "(action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 143,
        "startColumnNumber" : 24,
        "endLineNumber" : 144,
        "endColumnNumber" : 95
      },
      "nodeContext" : "ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2782,
        "startLineNumber" : 143,
        "startColumnNumber" : 20,
        "endLineNumber" : 189,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n  int viewId=Reflect.on(action).get(\"viewId\");\n  String methodName=Reflect.on(action).get(\"methodName\");\n  int type=Reflect.on(action).get(\"type\");\n  Object value=Reflect.on(action).get(\"value\");\n  if (!hasIcon) {\n    hasIcon=viewId == systemIconViewId;\n    if (hasIcon) {\n      if (type == ReflectionActionCompat.INT && (int)value == 0) {\n        hasIcon=false;\n      }\n      if (hasIcon) {\n        VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n      }\n    }\n  }\n  if (methodName.equals(\"setImageResource\")) {\n    mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n    mActions.remove(action);\n  }\n else   if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n    Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n    Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n  }\n else   if (methodName.equals(\"setLabelFor\")) {\n    mActions.remove(action);\n  }\n else   if (methodName.equals(\"setBackgroundResource\")) {\n    mActions.remove(action);\n  }\n else   if (methodName.equals(\"setImageURI\")) {\n    Uri uri=(Uri)value;\n    if (!uri.getScheme().startsWith(\"http\")) {\n      mActions.remove(action);\n    }\n  }\n else {\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n      if (value instanceof Icon) {\n        Icon icon=(Icon)value;\n        fixIcon(icon,appContext,installed);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 262,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3287,
        "startLineNumber" : 131,
        "startColumnNumber" : 53,
        "endLineNumber" : 190,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Object action=mActions.get(i);\n  if (action == null) {\n    continue;\n  }\n  if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n    mActions.remove(action);\n    continue;\n  }\n  if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n    int viewId=Reflect.on(action).get(\"viewId\");\n    String methodName=Reflect.on(action).get(\"methodName\");\n    int type=Reflect.on(action).get(\"type\");\n    Object value=Reflect.on(action).get(\"value\");\n    if (!hasIcon) {\n      hasIcon=viewId == systemIconViewId;\n      if (hasIcon) {\n        if (type == ReflectionActionCompat.INT && (int)value == 0) {\n          hasIcon=false;\n        }\n        if (hasIcon) {\n          VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n        }\n      }\n    }\n    if (methodName.equals(\"setImageResource\")) {\n      mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n      mActions.remove(action);\n    }\n else     if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n      Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n      Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n    }\n else     if (methodName.equals(\"setLabelFor\")) {\n      mActions.remove(action);\n    }\n else     if (methodName.equals(\"setBackgroundResource\")) {\n      mActions.remove(action);\n    }\n else     if (methodName.equals(\"setImageURI\")) {\n      Uri uri=(Uri)value;\n      if (!uri.getScheme().startsWith(\"http\")) {\n        mActions.remove(action);\n      }\n    }\n else {\n      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n        if (value instanceof Icon) {\n          Icon icon=(Icon)value;\n          fixIcon(icon,appContext,installed);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 294,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3324,
        "startLineNumber" : 131,
        "startColumnNumber" : 16,
        "endLineNumber" : 190,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=count - 1; i >= 0; i--) {\n  Object action=mActions.get(i);\n  if (action == null) {\n    continue;\n  }\n  if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n    mActions.remove(action);\n    continue;\n  }\n  if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n    int viewId=Reflect.on(action).get(\"viewId\");\n    String methodName=Reflect.on(action).get(\"methodName\");\n    int type=Reflect.on(action).get(\"type\");\n    Object value=Reflect.on(action).get(\"value\");\n    if (!hasIcon) {\n      hasIcon=viewId == systemIconViewId;\n      if (hasIcon) {\n        if (type == ReflectionActionCompat.INT && (int)value == 0) {\n          hasIcon=false;\n        }\n        if (hasIcon) {\n          VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n        }\n      }\n    }\n    if (methodName.equals(\"setImageResource\")) {\n      mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n      mActions.remove(action);\n    }\n else     if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n      Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n      Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n    }\n else     if (methodName.equals(\"setLabelFor\")) {\n      mActions.remove(action);\n    }\n else     if (methodName.equals(\"setBackgroundResource\")) {\n      mActions.remove(action);\n    }\n else     if (methodName.equals(\"setImageURI\")) {\n      Uri uri=(Uri)value;\n      if (!uri.getScheme().startsWith(\"http\")) {\n        mActions.remove(action);\n      }\n    }\n else {\n      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n        if (value instanceof Icon) {\n          Icon icon=(Icon)value;\n          fixIcon(icon,appContext,installed);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 307,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3572,
        "startLineNumber" : 129,
        "startColumnNumber" : 34,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int count=mActions.size();\n  for (int i=count - 1; i >= 0; i--) {\n    Object action=mActions.get(i);\n    if (action == null) {\n      continue;\n    }\n    if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n      mActions.remove(action);\n      continue;\n    }\n    if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n      int viewId=Reflect.on(action).get(\"viewId\");\n      String methodName=Reflect.on(action).get(\"methodName\");\n      int type=Reflect.on(action).get(\"type\");\n      Object value=Reflect.on(action).get(\"value\");\n      if (!hasIcon) {\n        hasIcon=viewId == systemIconViewId;\n        if (hasIcon) {\n          if (type == ReflectionActionCompat.INT && (int)value == 0) {\n            hasIcon=false;\n          }\n          if (hasIcon) {\n            VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n          }\n        }\n      }\n      if (methodName.equals(\"setImageResource\")) {\n        mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n        mActions.remove(action);\n      }\n else       if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n        Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n        Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n      }\n else       if (methodName.equals(\"setLabelFor\")) {\n        mActions.remove(action);\n      }\n else       if (methodName.equals(\"setBackgroundResource\")) {\n        mActions.remove(action);\n      }\n else       if (methodName.equals(\"setImageURI\")) {\n        Uri uri=(Uri)value;\n        if (!uri.getScheme().startsWith(\"http\")) {\n          mActions.remove(action);\n        }\n      }\n else {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n          if (value instanceof Icon) {\n            Icon icon=(Icon)value;\n            fixIcon(icon,appContext,installed);\n          }\n        }\n      }\n    }\n  }\n  for (  BitmapReflectionAction action : mNew) {\n    remoteViews.setBitmap(action.viewId,action.methodName,action.bitmap);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 335,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3594,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mActions != null) {\n  int count=mActions.size();\n  for (int i=count - 1; i >= 0; i--) {\n    Object action=mActions.get(i);\n    if (action == null) {\n      continue;\n    }\n    if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n      mActions.remove(action);\n      continue;\n    }\n    if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n      int viewId=Reflect.on(action).get(\"viewId\");\n      String methodName=Reflect.on(action).get(\"methodName\");\n      int type=Reflect.on(action).get(\"type\");\n      Object value=Reflect.on(action).get(\"value\");\n      if (!hasIcon) {\n        hasIcon=viewId == systemIconViewId;\n        if (hasIcon) {\n          if (type == ReflectionActionCompat.INT && (int)value == 0) {\n            hasIcon=false;\n          }\n          if (hasIcon) {\n            VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n          }\n        }\n      }\n      if (methodName.equals(\"setImageResource\")) {\n        mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n        mActions.remove(action);\n      }\n else       if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n        Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n        Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n      }\n else       if (methodName.equals(\"setLabelFor\")) {\n        mActions.remove(action);\n      }\n else       if (methodName.equals(\"setBackgroundResource\")) {\n        mActions.remove(action);\n      }\n else       if (methodName.equals(\"setImageURI\")) {\n        Uri uri=(Uri)value;\n        if (!uri.getScheme().startsWith(\"http\")) {\n          mActions.remove(action);\n        }\n      }\n else {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n          if (value instanceof Icon) {\n            Icon icon=(Icon)value;\n            fixIcon(icon,appContext,installed);\n          }\n        }\n      }\n    }\n  }\n  for (  BitmapReflectionAction action : mNew) {\n    remoteViews.setBitmap(action.viewId,action.methodName,action.bitmap);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 339,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 4019,
        "startLineNumber" : 125,
        "startColumnNumber" : 33,
        "endLineNumber" : 198,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int systemIconViewId=R_Hide.id.icon.get();\n  List<BitmapReflectionAction> mNew=new ArrayList<>();\n  ArrayList<Object> mActions=Reflect.on(remoteViews).get(\"mActions\");\n  if (mActions != null) {\n    int count=mActions.size();\n    for (int i=count - 1; i >= 0; i--) {\n      Object action=mActions.get(i);\n      if (action == null) {\n        continue;\n      }\n      if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n        mActions.remove(action);\n        continue;\n      }\n      if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n        int viewId=Reflect.on(action).get(\"viewId\");\n        String methodName=Reflect.on(action).get(\"methodName\");\n        int type=Reflect.on(action).get(\"type\");\n        Object value=Reflect.on(action).get(\"value\");\n        if (!hasIcon) {\n          hasIcon=viewId == systemIconViewId;\n          if (hasIcon) {\n            if (type == ReflectionActionCompat.INT && (int)value == 0) {\n              hasIcon=false;\n            }\n            if (hasIcon) {\n              VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n            }\n          }\n        }\n        if (methodName.equals(\"setImageResource\")) {\n          mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n          mActions.remove(action);\n        }\n else         if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n          Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n          Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n        }\n else         if (methodName.equals(\"setLabelFor\")) {\n          mActions.remove(action);\n        }\n else         if (methodName.equals(\"setBackgroundResource\")) {\n          mActions.remove(action);\n        }\n else         if (methodName.equals(\"setImageURI\")) {\n          Uri uri=(Uri)value;\n          if (!uri.getScheme().startsWith(\"http\")) {\n            mActions.remove(action);\n          }\n        }\n else {\n          if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            if (value instanceof Icon) {\n              Icon icon=(Icon)value;\n              fixIcon(icon,appContext,installed);\n            }\n          }\n        }\n      }\n    }\n    for (    BitmapReflectionAction action : mNew) {\n      remoteViews.setBitmap(action.viewId,action.methodName,action.bitmap);\n    }\n  }\n  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\n    mirror.android.widget.RemoteViews.mPackage.set(remoteViews,VirtualCore.get().getHostPkg());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 409,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4044,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remoteViews != null) {\n  int systemIconViewId=R_Hide.id.icon.get();\n  List<BitmapReflectionAction> mNew=new ArrayList<>();\n  ArrayList<Object> mActions=Reflect.on(remoteViews).get(\"mActions\");\n  if (mActions != null) {\n    int count=mActions.size();\n    for (int i=count - 1; i >= 0; i--) {\n      Object action=mActions.get(i);\n      if (action == null) {\n        continue;\n      }\n      if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n        mActions.remove(action);\n        continue;\n      }\n      if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n        int viewId=Reflect.on(action).get(\"viewId\");\n        String methodName=Reflect.on(action).get(\"methodName\");\n        int type=Reflect.on(action).get(\"type\");\n        Object value=Reflect.on(action).get(\"value\");\n        if (!hasIcon) {\n          hasIcon=viewId == systemIconViewId;\n          if (hasIcon) {\n            if (type == ReflectionActionCompat.INT && (int)value == 0) {\n              hasIcon=false;\n            }\n            if (hasIcon) {\n              VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n            }\n          }\n        }\n        if (methodName.equals(\"setImageResource\")) {\n          mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n          mActions.remove(action);\n        }\n else         if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n          Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n          Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n        }\n else         if (methodName.equals(\"setLabelFor\")) {\n          mActions.remove(action);\n        }\n else         if (methodName.equals(\"setBackgroundResource\")) {\n          mActions.remove(action);\n        }\n else         if (methodName.equals(\"setImageURI\")) {\n          Uri uri=(Uri)value;\n          if (!uri.getScheme().startsWith(\"http\")) {\n            mActions.remove(action);\n          }\n        }\n else {\n          if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            if (value instanceof Icon) {\n              Icon icon=(Icon)value;\n              fixIcon(icon,appContext,installed);\n            }\n          }\n        }\n      }\n    }\n    for (    BitmapReflectionAction action : mNew) {\n      remoteViews.setBitmap(action.viewId,action.methodName,action.bitmap);\n    }\n  }\n  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\n    mirror.android.widget.RemoteViews.mPackage.set(remoteViews,VirtualCore.get().getHostPkg());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 413,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4117,
        "startLineNumber" : 123,
        "startColumnNumber" : 103,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean hasIcon=false;\n  if (remoteViews != null) {\n    int systemIconViewId=R_Hide.id.icon.get();\n    List<BitmapReflectionAction> mNew=new ArrayList<>();\n    ArrayList<Object> mActions=Reflect.on(remoteViews).get(\"mActions\");\n    if (mActions != null) {\n      int count=mActions.size();\n      for (int i=count - 1; i >= 0; i--) {\n        Object action=mActions.get(i);\n        if (action == null) {\n          continue;\n        }\n        if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n          mActions.remove(action);\n          continue;\n        }\n        if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n          int viewId=Reflect.on(action).get(\"viewId\");\n          String methodName=Reflect.on(action).get(\"methodName\");\n          int type=Reflect.on(action).get(\"type\");\n          Object value=Reflect.on(action).get(\"value\");\n          if (!hasIcon) {\n            hasIcon=viewId == systemIconViewId;\n            if (hasIcon) {\n              if (type == ReflectionActionCompat.INT && (int)value == 0) {\n                hasIcon=false;\n              }\n              if (hasIcon) {\n                VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n              }\n            }\n          }\n          if (methodName.equals(\"setImageResource\")) {\n            mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n            mActions.remove(action);\n          }\n else           if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n            Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n            Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n          }\n else           if (methodName.equals(\"setLabelFor\")) {\n            mActions.remove(action);\n          }\n else           if (methodName.equals(\"setBackgroundResource\")) {\n            mActions.remove(action);\n          }\n else           if (methodName.equals(\"setImageURI\")) {\n            Uri uri=(Uri)value;\n            if (!uri.getScheme().startsWith(\"http\")) {\n              mActions.remove(action);\n            }\n          }\n else {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n              if (value instanceof Icon) {\n                Icon icon=(Icon)value;\n                fixIcon(icon,appContext,installed);\n              }\n            }\n          }\n        }\n      }\n      for (      BitmapReflectionAction action : mNew) {\n        remoteViews.setBitmap(action.viewId,action.methodName,action.bitmap);\n      }\n    }\n    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\n      mirror.android.widget.RemoteViews.mPackage.set(remoteViews,VirtualCore.get().getHostPkg());\n    }\n  }\n  return hasIcon;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 421,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4216,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "boolean fixRemoteViewActions(Context appContext,boolean installed,final RemoteViews remoteViews){\n  boolean hasIcon=false;\n  if (remoteViews != null) {\n    int systemIconViewId=R_Hide.id.icon.get();\n    List<BitmapReflectionAction> mNew=new ArrayList<>();\n    ArrayList<Object> mActions=Reflect.on(remoteViews).get(\"mActions\");\n    if (mActions != null) {\n      int count=mActions.size();\n      for (int i=count - 1; i >= 0; i--) {\n        Object action=mActions.get(i);\n        if (action == null) {\n          continue;\n        }\n        if (action.getClass().getSimpleName().endsWith(\"TextViewDrawableAction\")) {\n          mActions.remove(action);\n          continue;\n        }\n        if (ReflectionActionCompat.isInstance(action) || (action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))) {\n          int viewId=Reflect.on(action).get(\"viewId\");\n          String methodName=Reflect.on(action).get(\"methodName\");\n          int type=Reflect.on(action).get(\"type\");\n          Object value=Reflect.on(action).get(\"value\");\n          if (!hasIcon) {\n            hasIcon=viewId == systemIconViewId;\n            if (hasIcon) {\n              if (type == ReflectionActionCompat.INT && (int)value == 0) {\n                hasIcon=false;\n              }\n              if (hasIcon) {\n                VLog.v(TAG,\"find icon \" + methodName + \" type=\"+ type+ \", value=\"+ value);\n              }\n            }\n          }\n          if (methodName.equals(\"setImageResource\")) {\n            mNew.add(new BitmapReflectionAction(viewId,\"setImageBitmap\",drawableToBitMap(appContext.getResources().getDrawable((int)value))));\n            mActions.remove(action);\n          }\n else           if (methodName.equals(\"setText\") && type == ReflectionActionCompat.INT) {\n            Reflect.on(action).set(\"type\",ReflectionActionCompat.STRING);\n            Reflect.on(action).set(\"value\",appContext.getResources().getString((int)value));\n          }\n else           if (methodName.equals(\"setLabelFor\")) {\n            mActions.remove(action);\n          }\n else           if (methodName.equals(\"setBackgroundResource\")) {\n            mActions.remove(action);\n          }\n else           if (methodName.equals(\"setImageURI\")) {\n            Uri uri=(Uri)value;\n            if (!uri.getScheme().startsWith(\"http\")) {\n              mActions.remove(action);\n            }\n          }\n else {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n              if (value instanceof Icon) {\n                Icon icon=(Icon)value;\n                fixIcon(icon,appContext,installed);\n              }\n            }\n          }\n        }\n      }\n      for (      BitmapReflectionAction action : mNew) {\n        remoteViews.setBitmap(action.viewId,action.methodName,action.bitmap);\n      }\n    }\n    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\n      mirror.android.widget.RemoteViews.mPackage.set(remoteViews,VirtualCore.get().getHostPkg());\n    }\n  }\n  return hasIcon;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 436,
      "astHeight" : 25
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 144,
        "startColumnNumber" : 31,
        "endLineNumber" : 144,
        "endColumnNumber" : 95
      },
      "nodeContext" : "(action.getClass().getSimpleName().endsWith(\"ReflectionAction\"))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 139,
    "startColumnNumber" : 24,
    "endLineNumber" : 139,
    "endColumnNumber" : 41
  }, {
    "charLength" : 17,
    "startLineNumber" : 144,
    "startColumnNumber" : 32,
    "endLineNumber" : 144,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}