{
  "id" : 454,
  "expression" : "blocks",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/io/SaveVersion.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "blocks",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 323,
      "startColumnNumber" : 48,
      "endLineNumber" : 323,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 323,
        "startColumnNumber" : 39,
        "endLineNumber" : 323,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Math.min(blocks,1000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 323,
        "startColumnNumber" : 12,
        "endLineNumber" : 323,
        "endColumnNumber" : 62
      },
      "nodeContext" : "data.blocks.ensureCapacity(Math.min(blocks,1000))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 323,
        "startColumnNumber" : 12,
        "endLineNumber" : 323,
        "endColumnNumber" : 63
      },
      "nodeContext" : "data.blocks.ensureCapacity(Math.min(blocks,1000));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 318,
        "startColumnNumber" : 38,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Team team=Team.get(stream.readInt());\n  TeamData data=team.data();\n  int blocks=stream.readInt();\n  data.blocks.clear();\n  data.blocks.ensureCapacity(Math.min(blocks,1000));\n  var reads=Reads.get(stream);\n  var set=new IntSet();\n  for (int j=0; j < blocks; j++) {\n    short x=stream.readShort(), y=stream.readShort(), rot=stream.readShort(), bid=stream.readShort();\n    var obj=TypeIO.readObject(reads);\n    if (set.add(Point2.pack(x,y))) {\n      data.blocks.addLast(new BlockPlan(x,y,rot,content.block(bid).id,obj));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 318,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < teamc; i++) {\n  Team team=Team.get(stream.readInt());\n  TeamData data=team.data();\n  int blocks=stream.readInt();\n  data.blocks.clear();\n  data.blocks.ensureCapacity(Math.min(blocks,1000));\n  var reads=Reads.get(stream);\n  var set=new IntSet();\n  for (int j=0; j < blocks; j++) {\n    short x=stream.readShort(), y=stream.readShort(), rot=stream.readShort(), bid=stream.readShort();\n    var obj=TypeIO.readObject(reads);\n    if (set.add(Point2.pack(x,y))) {\n      data.blocks.addLast(new BlockPlan(x,y,rot,content.block(bid).id,obj));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 144,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 315,
        "startColumnNumber" : 65,
        "endLineNumber" : 351,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int teamc=stream.readInt();\n  for (int i=0; i < teamc; i++) {\n    Team team=Team.get(stream.readInt());\n    TeamData data=team.data();\n    int blocks=stream.readInt();\n    data.blocks.clear();\n    data.blocks.ensureCapacity(Math.min(blocks,1000));\n    var reads=Reads.get(stream);\n    var set=new IntSet();\n    for (int j=0; j < blocks; j++) {\n      short x=stream.readShort(), y=stream.readShort(), rot=stream.readShort(), bid=stream.readShort();\n      var obj=TypeIO.readObject(reads);\n      if (set.add(Point2.pack(x,y))) {\n        data.blocks.addLast(new BlockPlan(x,y,rot,content.block(bid).id,obj));\n      }\n    }\n  }\n  int amount=stream.readInt();\n  for (int j=0; j < amount; j++) {\n    readChunk(stream,true,in -> {\n      byte typeid=in.readByte();\n      if (EntityMapping.map(typeid) == null) {\n        in.skipBytes(lastRegionLength - 1);\n        return;\n      }\n      Entityc entity=(Entityc)EntityMapping.map(typeid).get();\n      entity.read(Reads.get(in));\n      entity.add();\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 229,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1422,
        "startLineNumber" : 315,
        "startColumnNumber" : 4,
        "endLineNumber" : 351,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void readEntities(DataInput stream) throws IOException {\n  int teamc=stream.readInt();\n  for (int i=0; i < teamc; i++) {\n    Team team=Team.get(stream.readInt());\n    TeamData data=team.data();\n    int blocks=stream.readInt();\n    data.blocks.clear();\n    data.blocks.ensureCapacity(Math.min(blocks,1000));\n    var reads=Reads.get(stream);\n    var set=new IntSet();\n    for (int j=0; j < blocks; j++) {\n      short x=stream.readShort(), y=stream.readShort(), rot=stream.readShort(), bid=stream.readShort();\n      var obj=TypeIO.readObject(reads);\n      if (set.add(Point2.pack(x,y))) {\n        data.blocks.addLast(new BlockPlan(x,y,rot,content.block(bid).id,obj));\n      }\n    }\n  }\n  int amount=stream.readInt();\n  for (int j=0; j < amount; j++) {\n    readChunk(stream,true,in -> {\n      byte typeid=in.readByte();\n      if (EntityMapping.map(typeid) == null) {\n        in.skipBytes(lastRegionLength - 1);\n        return;\n      }\n      Entityc entity=(Entityc)EntityMapping.map(typeid).get();\n      entity.read(Reads.get(in));\n      entity.add();\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 323,
        "startColumnNumber" : 12,
        "endLineNumber" : 323,
        "endColumnNumber" : 63
      },
      "nodeContext" : "data.blocks.ensureCapacity(Math.min(blocks,1000));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "blocks",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 327,
      "startColumnNumber" : 31,
      "endLineNumber" : 327,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 327,
        "startColumnNumber" : 27,
        "endLineNumber" : 327,
        "endColumnNumber" : 37
      },
      "nodeContext" : "j < blocks",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 327,
        "startColumnNumber" : 12,
        "endLineNumber" : 334,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < blocks; j++) {\n  short x=stream.readShort(), y=stream.readShort(), rot=stream.readShort(), bid=stream.readShort();\n  var obj=TypeIO.readObject(reads);\n  if (set.add(Point2.pack(x,y))) {\n    data.blocks.addLast(new BlockPlan(x,y,rot,content.block(bid).id,obj));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 318,
        "startColumnNumber" : 38,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Team team=Team.get(stream.readInt());\n  TeamData data=team.data();\n  int blocks=stream.readInt();\n  data.blocks.clear();\n  data.blocks.ensureCapacity(Math.min(blocks,1000));\n  var reads=Reads.get(stream);\n  var set=new IntSet();\n  for (int j=0; j < blocks; j++) {\n    short x=stream.readShort(), y=stream.readShort(), rot=stream.readShort(), bid=stream.readShort();\n    var obj=TypeIO.readObject(reads);\n    if (set.add(Point2.pack(x,y))) {\n      data.blocks.addLast(new BlockPlan(x,y,rot,content.block(bid).id,obj));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 318,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < teamc; i++) {\n  Team team=Team.get(stream.readInt());\n  TeamData data=team.data();\n  int blocks=stream.readInt();\n  data.blocks.clear();\n  data.blocks.ensureCapacity(Math.min(blocks,1000));\n  var reads=Reads.get(stream);\n  var set=new IntSet();\n  for (int j=0; j < blocks; j++) {\n    short x=stream.readShort(), y=stream.readShort(), rot=stream.readShort(), bid=stream.readShort();\n    var obj=TypeIO.readObject(reads);\n    if (set.add(Point2.pack(x,y))) {\n      data.blocks.addLast(new BlockPlan(x,y,rot,content.block(bid).id,obj));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 144,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 315,
        "startColumnNumber" : 65,
        "endLineNumber" : 351,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int teamc=stream.readInt();\n  for (int i=0; i < teamc; i++) {\n    Team team=Team.get(stream.readInt());\n    TeamData data=team.data();\n    int blocks=stream.readInt();\n    data.blocks.clear();\n    data.blocks.ensureCapacity(Math.min(blocks,1000));\n    var reads=Reads.get(stream);\n    var set=new IntSet();\n    for (int j=0; j < blocks; j++) {\n      short x=stream.readShort(), y=stream.readShort(), rot=stream.readShort(), bid=stream.readShort();\n      var obj=TypeIO.readObject(reads);\n      if (set.add(Point2.pack(x,y))) {\n        data.blocks.addLast(new BlockPlan(x,y,rot,content.block(bid).id,obj));\n      }\n    }\n  }\n  int amount=stream.readInt();\n  for (int j=0; j < amount; j++) {\n    readChunk(stream,true,in -> {\n      byte typeid=in.readByte();\n      if (EntityMapping.map(typeid) == null) {\n        in.skipBytes(lastRegionLength - 1);\n        return;\n      }\n      Entityc entity=(Entityc)EntityMapping.map(typeid).get();\n      entity.read(Reads.get(in));\n      entity.add();\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 229,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1422,
        "startLineNumber" : 315,
        "startColumnNumber" : 4,
        "endLineNumber" : 351,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void readEntities(DataInput stream) throws IOException {\n  int teamc=stream.readInt();\n  for (int i=0; i < teamc; i++) {\n    Team team=Team.get(stream.readInt());\n    TeamData data=team.data();\n    int blocks=stream.readInt();\n    data.blocks.clear();\n    data.blocks.ensureCapacity(Math.min(blocks,1000));\n    var reads=Reads.get(stream);\n    var set=new IntSet();\n    for (int j=0; j < blocks; j++) {\n      short x=stream.readShort(), y=stream.readShort(), rot=stream.readShort(), bid=stream.readShort();\n      var obj=TypeIO.readObject(reads);\n      if (set.add(Point2.pack(x,y))) {\n        data.blocks.addLast(new BlockPlan(x,y,rot,content.block(bid).id,obj));\n      }\n    }\n  }\n  int amount=stream.readInt();\n  for (int j=0; j < amount; j++) {\n    readChunk(stream,true,in -> {\n      byte typeid=in.readByte();\n      if (EntityMapping.map(typeid) == null) {\n        in.skipBytes(lastRegionLength - 1);\n        return;\n      }\n      Entityc entity=(Entityc)EntityMapping.map(typeid).get();\n      entity.read(Reads.get(in));\n      entity.add();\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 327,
        "startColumnNumber" : 27,
        "endLineNumber" : 327,
        "endColumnNumber" : 37
      },
      "nodeContext" : "j < blocks",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 323,
    "startColumnNumber" : 48,
    "endLineNumber" : 323,
    "endColumnNumber" : 54
  }, {
    "charLength" : 6,
    "startLineNumber" : 327,
    "startColumnNumber" : 31,
    "endLineNumber" : 327,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}