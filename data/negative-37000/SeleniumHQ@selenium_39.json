{
  "id" : 39,
  "expression" : "d2",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/DimensionTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "d2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 43,
      "startColumnNumber" : 31,
      "endLineNumber" : 43,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertThat(d1).isNotSameAs(d2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertThat(d1).isNotSameAs(d2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 39,
        "startColumnNumber" : 29,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Dimension d1=new Dimension(100,200);\n  Dimension d2=new Dimension(200,200);\n  assertThat(d1).isNotSameAs(d2);\n  assertThat(d1.hashCode()).isNotEqualTo(d2.hashCode());\n  Dimension d1copy=new Dimension(100,200);\n  assertThat(d1copy).isEqualTo(d1);\n  assertThat(d1copy.hashCode()).isEqualTo(d1.hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEquality(){\n  Dimension d1=new Dimension(100,200);\n  Dimension d2=new Dimension(200,200);\n  assertThat(d1).isNotSameAs(d2);\n  assertThat(d1.hashCode()).isNotEqualTo(d2.hashCode());\n  Dimension d1copy=new Dimension(100,200);\n  assertThat(d1copy).isEqualTo(d1);\n  assertThat(d1copy.hashCode()).isEqualTo(d1.hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertThat(d1).isNotSameAs(d2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.openqa.selenium.Dimension"
  }, {
    "nodeContext" : "d2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 45,
      "startColumnNumber" : 43,
      "endLineNumber" : 45,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 45,
        "startColumnNumber" : 43,
        "endLineNumber" : 45,
        "endColumnNumber" : 56
      },
      "nodeContext" : "d2.hashCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertThat(d1.hashCode()).isNotEqualTo(d2.hashCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertThat(d1.hashCode()).isNotEqualTo(d2.hashCode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 39,
        "startColumnNumber" : 29,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Dimension d1=new Dimension(100,200);\n  Dimension d2=new Dimension(200,200);\n  assertThat(d1).isNotSameAs(d2);\n  assertThat(d1.hashCode()).isNotEqualTo(d2.hashCode());\n  Dimension d1copy=new Dimension(100,200);\n  assertThat(d1copy).isEqualTo(d1);\n  assertThat(d1copy.hashCode()).isEqualTo(d1.hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEquality(){\n  Dimension d1=new Dimension(100,200);\n  Dimension d2=new Dimension(200,200);\n  assertThat(d1).isNotSameAs(d2);\n  assertThat(d1.hashCode()).isNotEqualTo(d2.hashCode());\n  Dimension d1copy=new Dimension(100,200);\n  assertThat(d1copy).isEqualTo(d1);\n  assertThat(d1copy.hashCode()).isEqualTo(d1.hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertThat(d1.hashCode()).isNotEqualTo(d2.hashCode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.openqa.selenium.Dimension"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 43,
    "startColumnNumber" : 31,
    "endLineNumber" : 43,
    "endColumnNumber" : 33
  }, {
    "charLength" : 2,
    "startLineNumber" : 45,
    "startColumnNumber" : 43,
    "endLineNumber" : 45,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}