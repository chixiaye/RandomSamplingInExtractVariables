{
  "id" : 79,
  "expression" : "InputStream.class",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/test/java/org/apache/flink/api/common/io/InputStreamFSInputWrapperTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "InputStream.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 32,
      "startColumnNumber" : 45,
      "endLineNumber" : 32,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 32,
        "startColumnNumber" : 40,
        "endLineNumber" : 32,
        "endColumnNumber" : 63
      },
      "nodeContext" : "mock(InputStream.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 32,
        "startColumnNumber" : 20,
        "endLineNumber" : 32,
        "endColumnNumber" : 63
      },
      "nodeContext" : "mockedInputStream=mock(InputStream.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 64
      },
      "nodeContext" : "InputStream mockedInputStream=mock(InputStream.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 31,
        "startColumnNumber" : 45,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InputStream mockedInputStream=mock(InputStream.class);\n  InputStreamFSInputWrapper wrapper=new InputStreamFSInputWrapper(mockedInputStream);\n  wrapper.close();\n  verify(mockedInputStream).close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testClose() throws Exception {\n  InputStream mockedInputStream=mock(InputStream.class);\n  InputStreamFSInputWrapper wrapper=new InputStreamFSInputWrapper(mockedInputStream);\n  wrapper.close();\n  verify(mockedInputStream).close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 38,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 64
      },
      "nodeContext" : "InputStream mockedInputStream=mock(InputStream.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.io.InputStream>"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 32,
    "startColumnNumber" : 45,
    "endLineNumber" : 32,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}