{
  "id" : 108,
  "expression" : "0",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/EAN8Writer.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 62,
      "startColumnNumber" : 14,
      "endLineNumber" : 62,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 15
      },
      "nodeContext" : "pos=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 16
      },
      "nodeContext" : "int pos=0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 55,
        "startColumnNumber" : 40,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (contents.length() != 8) {\n    throw new IllegalArgumentException(\"Requested contents should be 8 digits long, but got \" + contents.length());\n  }\n  byte[] result=new byte[CODE_WIDTH];\n  int pos=0;\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  for (int i=0; i <= 3; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.MIDDLE_PATTERN,0);\n  for (int i=4; i <= 7; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],1);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @return a byte array of horizontal pixels (0 = white, 1 = black) \n */\n@Override public byte[] encode(String contents){\n  if (contents.length() != 8) {\n    throw new IllegalArgumentException(\"Requested contents should be 8 digits long, but got \" + contents.length());\n  }\n  byte[] result=new byte[CODE_WIDTH];\n  int pos=0;\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  for (int i=0; i <= 3; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.MIDDLE_PATTERN,0);\n  for (int i=4; i <= 7; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],1);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 16
      },
      "nodeContext" : "int pos=0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 66,
      "startColumnNumber" : 17,
      "endLineNumber" : 66,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 66,
        "startColumnNumber" : 13,
        "endLineNumber" : 66,
        "endColumnNumber" : 18
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 66,
        "startColumnNumber" : 9,
        "endLineNumber" : 66,
        "endColumnNumber" : 18
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i <= 3; i++) {\n  int digit=Integer.parseInt(contents.substring(i,i + 1));\n  pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 55,
        "startColumnNumber" : 40,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (contents.length() != 8) {\n    throw new IllegalArgumentException(\"Requested contents should be 8 digits long, but got \" + contents.length());\n  }\n  byte[] result=new byte[CODE_WIDTH];\n  int pos=0;\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  for (int i=0; i <= 3; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.MIDDLE_PATTERN,0);\n  for (int i=4; i <= 7; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],1);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @return a byte array of horizontal pixels (0 = white, 1 = black) \n */\n@Override public byte[] encode(String contents){\n  if (contents.length() != 8) {\n    throw new IllegalArgumentException(\"Requested contents should be 8 digits long, but got \" + contents.length());\n  }\n  byte[] result=new byte[CODE_WIDTH];\n  int pos=0;\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  for (int i=0; i <= 3; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.MIDDLE_PATTERN,0);\n  for (int i=4; i <= 7; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],1);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 66,
        "startColumnNumber" : 9,
        "endLineNumber" : 66,
        "endColumnNumber" : 18
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 68,
      "startColumnNumber" : 72,
      "endLineNumber" : 68,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 68,
        "startColumnNumber" : 13,
        "endLineNumber" : 68,
        "endColumnNumber" : 74
      },
      "nodeContext" : "appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 74
      },
      "nodeContext" : "pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 75
      },
      "nodeContext" : "pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 66,
        "startColumnNumber" : 33,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int digit=Integer.parseInt(contents.substring(i,i + 1));\n  pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i <= 3; i++) {\n  int digit=Integer.parseInt(contents.substring(i,i + 1));\n  pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 55,
        "startColumnNumber" : 40,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (contents.length() != 8) {\n    throw new IllegalArgumentException(\"Requested contents should be 8 digits long, but got \" + contents.length());\n  }\n  byte[] result=new byte[CODE_WIDTH];\n  int pos=0;\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  for (int i=0; i <= 3; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.MIDDLE_PATTERN,0);\n  for (int i=4; i <= 7; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],1);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @return a byte array of horizontal pixels (0 = white, 1 = black) \n */\n@Override public byte[] encode(String contents){\n  if (contents.length() != 8) {\n    throw new IllegalArgumentException(\"Requested contents should be 8 digits long, but got \" + contents.length());\n  }\n  byte[] result=new byte[CODE_WIDTH];\n  int pos=0;\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  for (int i=0; i <= 3; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.MIDDLE_PATTERN,0);\n  for (int i=4; i <= 7; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],1);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 75
      },
      "nodeContext" : "pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 71,
      "startColumnNumber" : 67,
      "endLineNumber" : 71,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 71,
        "startColumnNumber" : 11,
        "endLineNumber" : 71,
        "endColumnNumber" : 69
      },
      "nodeContext" : "appendPattern(result,pos,UPCEANReader.MIDDLE_PATTERN,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 69
      },
      "nodeContext" : "pos+=appendPattern(result,pos,UPCEANReader.MIDDLE_PATTERN,0)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 70
      },
      "nodeContext" : "pos+=appendPattern(result,pos,UPCEANReader.MIDDLE_PATTERN,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 55,
        "startColumnNumber" : 40,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (contents.length() != 8) {\n    throw new IllegalArgumentException(\"Requested contents should be 8 digits long, but got \" + contents.length());\n  }\n  byte[] result=new byte[CODE_WIDTH];\n  int pos=0;\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  for (int i=0; i <= 3; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.MIDDLE_PATTERN,0);\n  for (int i=4; i <= 7; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],1);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @return a byte array of horizontal pixels (0 = white, 1 = black) \n */\n@Override public byte[] encode(String contents){\n  if (contents.length() != 8) {\n    throw new IllegalArgumentException(\"Requested contents should be 8 digits long, but got \" + contents.length());\n  }\n  byte[] result=new byte[CODE_WIDTH];\n  int pos=0;\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  for (int i=0; i <= 3; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],0);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.MIDDLE_PATTERN,0);\n  for (int i=4; i <= 7; i++) {\n    int digit=Integer.parseInt(contents.substring(i,i + 1));\n    pos+=appendPattern(result,pos,UPCEANReader.L_PATTERNS[digit],1);\n  }\n  pos+=appendPattern(result,pos,UPCEANReader.START_END_PATTERN,1);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 70
      },
      "nodeContext" : "pos+=appendPattern(result,pos,UPCEANReader.MIDDLE_PATTERN,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 62,
    "startColumnNumber" : 14,
    "endLineNumber" : 62,
    "endColumnNumber" : 15
  }, {
    "charLength" : 1,
    "startLineNumber" : 66,
    "startColumnNumber" : 17,
    "endLineNumber" : 66,
    "endColumnNumber" : 18
  }, {
    "charLength" : 1,
    "startLineNumber" : 68,
    "startColumnNumber" : 72,
    "endLineNumber" : 68,
    "endColumnNumber" : 73
  }, {
    "charLength" : 1,
    "startLineNumber" : 71,
    "startColumnNumber" : 67,
    "endLineNumber" : 71,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}