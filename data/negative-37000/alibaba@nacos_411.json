{
  "id" : 411,
  "expression" : "connectIdGenerator",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/istio/src/main/java/com/alibaba/nacos/istio/mcp/NacosMcpService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "connectIdGenerator",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 202,
      "startColumnNumber" : 17,
      "endLineNumber" : 202,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 202,
        "startColumnNumber" : 17,
        "endLineNumber" : 202,
        "endColumnNumber" : 53
      },
      "nodeContext" : "connectIdGenerator.incrementAndGet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 202,
        "endColumnNumber" : 53
      },
      "nodeContext" : "id=connectIdGenerator.incrementAndGet()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 202,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 54
      },
      "nodeContext" : "int id=connectIdGenerator.incrementAndGet();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1939,
        "startLineNumber" : 200,
        "startColumnNumber" : 112,
        "endLineNumber" : 247,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int id=connectIdGenerator.incrementAndGet();\n  connnections.put(id,responseObserver);\n  return new StreamObserver<RequestResources>(){\n    private final int connectionId=id;\n    @Override public void onNext(    RequestResources value){\n      Loggers.MAIN.info(\"receiving request, sink: {}, type: {}\",value.getSinkNode(),value.getCollection());\n      if (value.getErrorDetail() != null && value.getErrorDetail().getCode() != 0) {\n        Loggers.MAIN.error(\"NACK error code: {}, message: {}\",value.getErrorDetail().getCode(),value.getErrorDetail().getMessage());\n        return;\n      }\n      if (StringUtils.isNotBlank(value.getResponseNonce())) {\n        Loggers.MAIN.info(\"ACK nonce: {}, type: {}\",value.getResponseNonce(),value.getCollection());\n        return;\n      }\n      if (!CollectionTypes.SERVICE_ENTRY.equals(value.getCollection())) {\n        Resources resources=Resources.newBuilder().setCollection(value.getCollection()).setNonce(String.valueOf(System.currentTimeMillis())).build();\n        responseObserver.onNext(resources);\n      }\n    }\n    @Override public void onError(    Throwable t){\n      Loggers.MAIN.error(\"stream error.\",t);\n      connnections.remove(connectionId);\n    }\n    @Override public void onCompleted(){\n      responseObserver.onCompleted();\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2061,
        "startLineNumber" : 199,
        "startColumnNumber" : 4,
        "endLineNumber" : 247,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public StreamObserver<RequestResources> establishResourceStream(StreamObserver<Resources> responseObserver){\n  int id=connectIdGenerator.incrementAndGet();\n  connnections.put(id,responseObserver);\n  return new StreamObserver<RequestResources>(){\n    private final int connectionId=id;\n    @Override public void onNext(    RequestResources value){\n      Loggers.MAIN.info(\"receiving request, sink: {}, type: {}\",value.getSinkNode(),value.getCollection());\n      if (value.getErrorDetail() != null && value.getErrorDetail().getCode() != 0) {\n        Loggers.MAIN.error(\"NACK error code: {}, message: {}\",value.getErrorDetail().getCode(),value.getErrorDetail().getMessage());\n        return;\n      }\n      if (StringUtils.isNotBlank(value.getResponseNonce())) {\n        Loggers.MAIN.info(\"ACK nonce: {}, type: {}\",value.getResponseNonce(),value.getCollection());\n        return;\n      }\n      if (!CollectionTypes.SERVICE_ENTRY.equals(value.getCollection())) {\n        Resources resources=Resources.newBuilder().setCollection(value.getCollection()).setNonce(String.valueOf(System.currentTimeMillis())).build();\n        responseObserver.onNext(resources);\n      }\n    }\n    @Override public void onError(    Throwable t){\n      Loggers.MAIN.error(\"stream error.\",t);\n      connnections.remove(connectionId);\n    }\n    @Override public void onCompleted(){\n      responseObserver.onCompleted();\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 202,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 54
      },
      "nodeContext" : "int id=connectIdGenerator.incrementAndGet();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.atomic.AtomicInteger"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 202,
    "startColumnNumber" : 17,
    "endLineNumber" : 202,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}