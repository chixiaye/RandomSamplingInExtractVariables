{
  "id" : 207,
  "expression" : "numErasures > numECCodewords / 2 + MAX_ERRORS",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/pdf417/decoder/Decoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "numErasures > numECCodewords / 2 + MAX_ERRORS",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 127,
      "startColumnNumber" : 8,
      "endLineNumber" : 127,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 26
      },
      "nodeContext" : "numErasures > numECCodewords / 2 + MAX_ERRORS || numECCodewords < 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 63
      },
      "nodeContext" : "numErasures > numECCodewords / 2 + MAX_ERRORS || numECCodewords < 0 || numECCodewords > MAX_EC_CODEWORDS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (numErasures > numECCodewords / 2 + MAX_ERRORS || numECCodewords < 0 || numECCodewords > MAX_EC_CODEWORDS) {\n  throw ChecksumException.getChecksumInstance();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 126,
        "startColumnNumber" : 74,
        "endLineNumber" : 133,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (numErasures > numECCodewords / 2 + MAX_ERRORS || numECCodewords < 0 || numECCodewords > MAX_EC_CODEWORDS) {\n    throw ChecksumException.getChecksumInstance();\n  }\n  errorCorrection.decode(codewords,numECCodewords);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 751,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 133,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to correct the errors in-place.</p>\n * @param codewords   data and error correction codewords\n * @throws ChecksumException if error correction fails\n */\nprivate void correctErrors(int[] codewords,int numErasures,int numECCodewords) throws ChecksumException {\n  if (numErasures > numECCodewords / 2 + MAX_ERRORS || numECCodewords < 0 || numECCodewords > MAX_EC_CODEWORDS) {\n    throw ChecksumException.getChecksumInstance();\n  }\n  errorCorrection.decode(codewords,numECCodewords);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 46,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 26
      },
      "nodeContext" : "numErasures > numECCodewords / 2 + MAX_ERRORS || numECCodewords < 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 8,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 127,
    "startColumnNumber" : 8,
    "endLineNumber" : 127,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}