{
  "id" : 219,
  "expression" : "expression.isNegated()",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alibaba-dubbo/src/test/java/com/alibaba/cloud/dubbo/http/matcher/AbstractMediaTypeExpressionTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expression.isNegated()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 51,
      "startColumnNumber" : 27,
      "endLineNumber" : 51,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assert.assertFalse(expression.isNegated())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Assert.assertFalse(expression.isNegated());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 47,
        "startColumnNumber" : 45,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AbstractMediaTypeExpression expression=createExpression(MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertEquals(MediaType.APPLICATION_JSON,expression.getMediaType());\n  Assert.assertFalse(expression.isNegated());\n  expression=createExpression(\"!\" + MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertEquals(MediaType.APPLICATION_JSON,expression.getMediaType());\n  Assert.assertTrue(expression.isNegated());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 547,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetMediaTypeAndNegated(){\n  AbstractMediaTypeExpression expression=createExpression(MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertEquals(MediaType.APPLICATION_JSON,expression.getMediaType());\n  Assert.assertFalse(expression.isNegated());\n  expression=createExpression(\"!\" + MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertEquals(MediaType.APPLICATION_JSON,expression.getMediaType());\n  Assert.assertTrue(expression.isNegated());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Assert.assertFalse(expression.isNegated());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  }, {
    "nodeContext" : "expression.isNegated()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 56,
      "startColumnNumber" : 26,
      "endLineNumber" : 56,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Assert.assertTrue(expression.isNegated())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assert.assertTrue(expression.isNegated());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 47,
        "startColumnNumber" : 45,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AbstractMediaTypeExpression expression=createExpression(MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertEquals(MediaType.APPLICATION_JSON,expression.getMediaType());\n  Assert.assertFalse(expression.isNegated());\n  expression=createExpression(\"!\" + MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertEquals(MediaType.APPLICATION_JSON,expression.getMediaType());\n  Assert.assertTrue(expression.isNegated());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 547,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetMediaTypeAndNegated(){\n  AbstractMediaTypeExpression expression=createExpression(MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertEquals(MediaType.APPLICATION_JSON,expression.getMediaType());\n  Assert.assertFalse(expression.isNegated());\n  expression=createExpression(\"!\" + MediaType.APPLICATION_JSON_VALUE);\n  Assert.assertEquals(MediaType.APPLICATION_JSON,expression.getMediaType());\n  Assert.assertTrue(expression.isNegated());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assert.assertTrue(expression.isNegated());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 51,
    "startColumnNumber" : 27,
    "endLineNumber" : 51,
    "endColumnNumber" : 49
  }, {
    "charLength" : 22,
    "startLineNumber" : 56,
    "startColumnNumber" : 26,
    "endLineNumber" : 56,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}