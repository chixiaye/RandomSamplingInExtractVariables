{
  "id" : 447,
  "expression" : "memberDatum.costAndSlots",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ai/formations/SoftRoleSlotAssignmentStrategy.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "memberDatum.costAndSlots",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 101,
      "startColumnNumber" : 12,
      "endLineNumber" : 101,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 43
      },
      "nodeContext" : "memberDatum.costAndSlots.sort()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 44
      },
      "nodeContext" : "memberDatum.costAndSlots.sort();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1240,
        "startLineNumber" : 97,
        "startColumnNumber" : 48,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MemberAndSlots memberDatum=memberData.get(i);\n  memberDatum.costAndSlots.sort();\n  int m=memberDatum.costAndSlots.size;\n  for (int j=0; j < m; j++) {\n    int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n    if (!filledSlots.get(slotNumber)) {\n      SlotAssignment slot=assignments.get(slotNumber);\n      slot.member=memberDatum.member;\n      slot.slotNumber=slotNumber;\n      filledSlots.set(slotNumber,true);\n      continue MEMBER_LOOP;\n    }\n  }\n  throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LabeledStatement,body]",
      "nodePosition" : {
        "charLength" : 1280,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < memberData.size; i++) {\n  MemberAndSlots memberDatum=memberData.get(i);\n  memberDatum.costAndSlots.sort();\n  int m=memberDatum.costAndSlots.size;\n  for (int j=0; j < m; j++) {\n    int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n    if (!filledSlots.get(slotNumber)) {\n      SlotAssignment slot=assignments.get(slotNumber);\n      slot.member=memberDatum.member;\n      slot.slotNumber=slotNumber;\n      filledSlots.set(slotNumber,true);\n      continue MEMBER_LOOP;\n    }\n  }\n  throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 109,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1301,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "MEMBER_LOOP: for (int i=0; i < memberData.size; i++) {\n  MemberAndSlots memberDatum=memberData.get(i);\n  memberDatum.costAndSlots.sort();\n  int m=memberDatum.costAndSlots.size;\n  for (int j=0; j < m; j++) {\n    int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n    if (!filledSlots.get(slotNumber)) {\n      SlotAssignment slot=assignments.get(slotNumber);\n      slot.member=memberDatum.member;\n      slot.slotNumber=slotNumber;\n      filledSlots.set(slotNumber,true);\n      continue MEMBER_LOOP;\n    }\n  }\n  throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n}\n",
      "nodeType" : "LabeledStatement",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2992,
        "startLineNumber" : 53,
        "startColumnNumber" : 70,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Seq<MemberAndSlots> memberData=new Seq<>();\n  int numberOfAssignments=assignments.size;\n  for (int i=0; i < numberOfAssignments; i++) {\n    SlotAssignment assignment=assignments.get(i);\n    MemberAndSlots datum=new MemberAndSlots(assignment.member);\n    for (int j=0; j < numberOfAssignments; j++) {\n      float cost=slotCostProvider.getCost(assignment.member,j);\n      if (cost >= costThreshold)       continue;\n      SlotAssignment slot=assignments.get(j);\n      CostAndSlot slotDatum=new CostAndSlot(cost,slot.slotNumber);\n      datum.costAndSlots.add(slotDatum);\n      datum.assignmentEase+=1f / (1f + cost);\n    }\n    memberData.add(datum);\n  }\n  if (numberOfAssignments > filledSlots.size)   filledSlots.ensureCapacity(numberOfAssignments - filledSlots.size);\n  filledSlots.size=numberOfAssignments;\n  for (int i=0; i < numberOfAssignments; i++)   filledSlots.set(i,false);\n  memberData.sort();\n  MEMBER_LOOP:   for (int i=0; i < memberData.size; i++) {\n    MemberAndSlots memberDatum=memberData.get(i);\n    memberDatum.costAndSlots.sort();\n    int m=memberDatum.costAndSlots.size;\n    for (int j=0; j < m; j++) {\n      int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n      if (!filledSlots.get(slotNumber)) {\n        SlotAssignment slot=assignments.get(slotNumber);\n        slot.member=memberDatum.member;\n        slot.slotNumber=slotNumber;\n        filledSlots.set(slotNumber,true);\n        continue MEMBER_LOOP;\n      }\n    }\n    throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 277,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3072,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateSlotAssignments(Seq<SlotAssignment> assignments){\n  Seq<MemberAndSlots> memberData=new Seq<>();\n  int numberOfAssignments=assignments.size;\n  for (int i=0; i < numberOfAssignments; i++) {\n    SlotAssignment assignment=assignments.get(i);\n    MemberAndSlots datum=new MemberAndSlots(assignment.member);\n    for (int j=0; j < numberOfAssignments; j++) {\n      float cost=slotCostProvider.getCost(assignment.member,j);\n      if (cost >= costThreshold)       continue;\n      SlotAssignment slot=assignments.get(j);\n      CostAndSlot slotDatum=new CostAndSlot(cost,slot.slotNumber);\n      datum.costAndSlots.add(slotDatum);\n      datum.assignmentEase+=1f / (1f + cost);\n    }\n    memberData.add(datum);\n  }\n  if (numberOfAssignments > filledSlots.size)   filledSlots.ensureCapacity(numberOfAssignments - filledSlots.size);\n  filledSlots.size=numberOfAssignments;\n  for (int i=0; i < numberOfAssignments; i++)   filledSlots.set(i,false);\n  memberData.sort();\n  MEMBER_LOOP:   for (int i=0; i < memberData.size; i++) {\n    MemberAndSlots memberDatum=memberData.get(i);\n    memberDatum.costAndSlots.sort();\n    int m=memberDatum.costAndSlots.size;\n    for (int j=0; j < m; j++) {\n      int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n      if (!filledSlots.get(slotNumber)) {\n        SlotAssignment slot=assignments.get(slotNumber);\n        slot.member=memberDatum.member;\n        slot.slotNumber=slotNumber;\n        filledSlots.set(slotNumber,true);\n        continue MEMBER_LOOP;\n      }\n    }\n    throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 290,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 44
      },
      "nodeContext" : "memberDatum.costAndSlots.sort();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "mindustry.ai.formations.Seq<mindustry.ai.formations.SoftRoleSlotAssignmentStrategy.CostAndSlot>"
  }, {
    "nodeContext" : "memberDatum.costAndSlots",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 102,
      "startColumnNumber" : 20,
      "endLineNumber" : 102,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 49
      },
      "nodeContext" : "memberDatum.costAndSlots.size",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 49
      },
      "nodeContext" : "m=memberDatum.costAndSlots.size",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 50
      },
      "nodeContext" : "int m=memberDatum.costAndSlots.size;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1240,
        "startLineNumber" : 97,
        "startColumnNumber" : 48,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MemberAndSlots memberDatum=memberData.get(i);\n  memberDatum.costAndSlots.sort();\n  int m=memberDatum.costAndSlots.size;\n  for (int j=0; j < m; j++) {\n    int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n    if (!filledSlots.get(slotNumber)) {\n      SlotAssignment slot=assignments.get(slotNumber);\n      slot.member=memberDatum.member;\n      slot.slotNumber=slotNumber;\n      filledSlots.set(slotNumber,true);\n      continue MEMBER_LOOP;\n    }\n  }\n  throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LabeledStatement,body]",
      "nodePosition" : {
        "charLength" : 1280,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < memberData.size; i++) {\n  MemberAndSlots memberDatum=memberData.get(i);\n  memberDatum.costAndSlots.sort();\n  int m=memberDatum.costAndSlots.size;\n  for (int j=0; j < m; j++) {\n    int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n    if (!filledSlots.get(slotNumber)) {\n      SlotAssignment slot=assignments.get(slotNumber);\n      slot.member=memberDatum.member;\n      slot.slotNumber=slotNumber;\n      filledSlots.set(slotNumber,true);\n      continue MEMBER_LOOP;\n    }\n  }\n  throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 109,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1301,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "MEMBER_LOOP: for (int i=0; i < memberData.size; i++) {\n  MemberAndSlots memberDatum=memberData.get(i);\n  memberDatum.costAndSlots.sort();\n  int m=memberDatum.costAndSlots.size;\n  for (int j=0; j < m; j++) {\n    int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n    if (!filledSlots.get(slotNumber)) {\n      SlotAssignment slot=assignments.get(slotNumber);\n      slot.member=memberDatum.member;\n      slot.slotNumber=slotNumber;\n      filledSlots.set(slotNumber,true);\n      continue MEMBER_LOOP;\n    }\n  }\n  throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n}\n",
      "nodeType" : "LabeledStatement",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2992,
        "startLineNumber" : 53,
        "startColumnNumber" : 70,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Seq<MemberAndSlots> memberData=new Seq<>();\n  int numberOfAssignments=assignments.size;\n  for (int i=0; i < numberOfAssignments; i++) {\n    SlotAssignment assignment=assignments.get(i);\n    MemberAndSlots datum=new MemberAndSlots(assignment.member);\n    for (int j=0; j < numberOfAssignments; j++) {\n      float cost=slotCostProvider.getCost(assignment.member,j);\n      if (cost >= costThreshold)       continue;\n      SlotAssignment slot=assignments.get(j);\n      CostAndSlot slotDatum=new CostAndSlot(cost,slot.slotNumber);\n      datum.costAndSlots.add(slotDatum);\n      datum.assignmentEase+=1f / (1f + cost);\n    }\n    memberData.add(datum);\n  }\n  if (numberOfAssignments > filledSlots.size)   filledSlots.ensureCapacity(numberOfAssignments - filledSlots.size);\n  filledSlots.size=numberOfAssignments;\n  for (int i=0; i < numberOfAssignments; i++)   filledSlots.set(i,false);\n  memberData.sort();\n  MEMBER_LOOP:   for (int i=0; i < memberData.size; i++) {\n    MemberAndSlots memberDatum=memberData.get(i);\n    memberDatum.costAndSlots.sort();\n    int m=memberDatum.costAndSlots.size;\n    for (int j=0; j < m; j++) {\n      int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n      if (!filledSlots.get(slotNumber)) {\n        SlotAssignment slot=assignments.get(slotNumber);\n        slot.member=memberDatum.member;\n        slot.slotNumber=slotNumber;\n        filledSlots.set(slotNumber,true);\n        continue MEMBER_LOOP;\n      }\n    }\n    throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 277,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3072,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateSlotAssignments(Seq<SlotAssignment> assignments){\n  Seq<MemberAndSlots> memberData=new Seq<>();\n  int numberOfAssignments=assignments.size;\n  for (int i=0; i < numberOfAssignments; i++) {\n    SlotAssignment assignment=assignments.get(i);\n    MemberAndSlots datum=new MemberAndSlots(assignment.member);\n    for (int j=0; j < numberOfAssignments; j++) {\n      float cost=slotCostProvider.getCost(assignment.member,j);\n      if (cost >= costThreshold)       continue;\n      SlotAssignment slot=assignments.get(j);\n      CostAndSlot slotDatum=new CostAndSlot(cost,slot.slotNumber);\n      datum.costAndSlots.add(slotDatum);\n      datum.assignmentEase+=1f / (1f + cost);\n    }\n    memberData.add(datum);\n  }\n  if (numberOfAssignments > filledSlots.size)   filledSlots.ensureCapacity(numberOfAssignments - filledSlots.size);\n  filledSlots.size=numberOfAssignments;\n  for (int i=0; i < numberOfAssignments; i++)   filledSlots.set(i,false);\n  memberData.sort();\n  MEMBER_LOOP:   for (int i=0; i < memberData.size; i++) {\n    MemberAndSlots memberDatum=memberData.get(i);\n    memberDatum.costAndSlots.sort();\n    int m=memberDatum.costAndSlots.size;\n    for (int j=0; j < m; j++) {\n      int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n      if (!filledSlots.get(slotNumber)) {\n        SlotAssignment slot=assignments.get(slotNumber);\n        slot.member=memberDatum.member;\n        slot.slotNumber=slotNumber;\n        filledSlots.set(slotNumber,true);\n        continue MEMBER_LOOP;\n      }\n    }\n    throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 290,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 50
      },
      "nodeContext" : "int m=memberDatum.costAndSlots.size;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "mindustry.ai.formations.Seq<mindustry.ai.formations.SoftRoleSlotAssignmentStrategy.CostAndSlot>"
  }, {
    "nodeContext" : "memberDatum.costAndSlots",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 104,
      "startColumnNumber" : 33,
      "endLineNumber" : 104,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 104,
        "startColumnNumber" : 33,
        "endLineNumber" : 104,
        "endColumnNumber" : 64
      },
      "nodeContext" : "memberDatum.costAndSlots.get(j)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 104,
        "startColumnNumber" : 33,
        "endLineNumber" : 104,
        "endColumnNumber" : 75
      },
      "nodeContext" : "memberDatum.costAndSlots.get(j).slotNumber",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 104,
        "startColumnNumber" : 20,
        "endLineNumber" : 104,
        "endColumnNumber" : 75
      },
      "nodeContext" : "slotNumber=memberDatum.costAndSlots.get(j).slotNumber",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 76
      },
      "nodeContext" : "int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 103,
        "startColumnNumber" : 38,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n  if (!filledSlots.get(slotNumber)) {\n    SlotAssignment slot=assignments.get(slotNumber);\n    slot.member=memberDatum.member;\n    slot.slotNumber=slotNumber;\n    filledSlots.set(slotNumber,true);\n    continue MEMBER_LOOP;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < m; j++) {\n  int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n  if (!filledSlots.get(slotNumber)) {\n    SlotAssignment slot=assignments.get(slotNumber);\n    slot.member=memberDatum.member;\n    slot.slotNumber=slotNumber;\n    filledSlots.set(slotNumber,true);\n    continue MEMBER_LOOP;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1240,
        "startLineNumber" : 97,
        "startColumnNumber" : 48,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MemberAndSlots memberDatum=memberData.get(i);\n  memberDatum.costAndSlots.sort();\n  int m=memberDatum.costAndSlots.size;\n  for (int j=0; j < m; j++) {\n    int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n    if (!filledSlots.get(slotNumber)) {\n      SlotAssignment slot=assignments.get(slotNumber);\n      slot.member=memberDatum.member;\n      slot.slotNumber=slotNumber;\n      filledSlots.set(slotNumber,true);\n      continue MEMBER_LOOP;\n    }\n  }\n  throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LabeledStatement,body]",
      "nodePosition" : {
        "charLength" : 1280,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < memberData.size; i++) {\n  MemberAndSlots memberDatum=memberData.get(i);\n  memberDatum.costAndSlots.sort();\n  int m=memberDatum.costAndSlots.size;\n  for (int j=0; j < m; j++) {\n    int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n    if (!filledSlots.get(slotNumber)) {\n      SlotAssignment slot=assignments.get(slotNumber);\n      slot.member=memberDatum.member;\n      slot.slotNumber=slotNumber;\n      filledSlots.set(slotNumber,true);\n      continue MEMBER_LOOP;\n    }\n  }\n  throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 109,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1301,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "MEMBER_LOOP: for (int i=0; i < memberData.size; i++) {\n  MemberAndSlots memberDatum=memberData.get(i);\n  memberDatum.costAndSlots.sort();\n  int m=memberDatum.costAndSlots.size;\n  for (int j=0; j < m; j++) {\n    int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n    if (!filledSlots.get(slotNumber)) {\n      SlotAssignment slot=assignments.get(slotNumber);\n      slot.member=memberDatum.member;\n      slot.slotNumber=slotNumber;\n      filledSlots.set(slotNumber,true);\n      continue MEMBER_LOOP;\n    }\n  }\n  throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n}\n",
      "nodeType" : "LabeledStatement",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2992,
        "startLineNumber" : 53,
        "startColumnNumber" : 70,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Seq<MemberAndSlots> memberData=new Seq<>();\n  int numberOfAssignments=assignments.size;\n  for (int i=0; i < numberOfAssignments; i++) {\n    SlotAssignment assignment=assignments.get(i);\n    MemberAndSlots datum=new MemberAndSlots(assignment.member);\n    for (int j=0; j < numberOfAssignments; j++) {\n      float cost=slotCostProvider.getCost(assignment.member,j);\n      if (cost >= costThreshold)       continue;\n      SlotAssignment slot=assignments.get(j);\n      CostAndSlot slotDatum=new CostAndSlot(cost,slot.slotNumber);\n      datum.costAndSlots.add(slotDatum);\n      datum.assignmentEase+=1f / (1f + cost);\n    }\n    memberData.add(datum);\n  }\n  if (numberOfAssignments > filledSlots.size)   filledSlots.ensureCapacity(numberOfAssignments - filledSlots.size);\n  filledSlots.size=numberOfAssignments;\n  for (int i=0; i < numberOfAssignments; i++)   filledSlots.set(i,false);\n  memberData.sort();\n  MEMBER_LOOP:   for (int i=0; i < memberData.size; i++) {\n    MemberAndSlots memberDatum=memberData.get(i);\n    memberDatum.costAndSlots.sort();\n    int m=memberDatum.costAndSlots.size;\n    for (int j=0; j < m; j++) {\n      int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n      if (!filledSlots.get(slotNumber)) {\n        SlotAssignment slot=assignments.get(slotNumber);\n        slot.member=memberDatum.member;\n        slot.slotNumber=slotNumber;\n        filledSlots.set(slotNumber,true);\n        continue MEMBER_LOOP;\n      }\n    }\n    throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 277,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3072,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateSlotAssignments(Seq<SlotAssignment> assignments){\n  Seq<MemberAndSlots> memberData=new Seq<>();\n  int numberOfAssignments=assignments.size;\n  for (int i=0; i < numberOfAssignments; i++) {\n    SlotAssignment assignment=assignments.get(i);\n    MemberAndSlots datum=new MemberAndSlots(assignment.member);\n    for (int j=0; j < numberOfAssignments; j++) {\n      float cost=slotCostProvider.getCost(assignment.member,j);\n      if (cost >= costThreshold)       continue;\n      SlotAssignment slot=assignments.get(j);\n      CostAndSlot slotDatum=new CostAndSlot(cost,slot.slotNumber);\n      datum.costAndSlots.add(slotDatum);\n      datum.assignmentEase+=1f / (1f + cost);\n    }\n    memberData.add(datum);\n  }\n  if (numberOfAssignments > filledSlots.size)   filledSlots.ensureCapacity(numberOfAssignments - filledSlots.size);\n  filledSlots.size=numberOfAssignments;\n  for (int i=0; i < numberOfAssignments; i++)   filledSlots.set(i,false);\n  memberData.sort();\n  MEMBER_LOOP:   for (int i=0; i < memberData.size; i++) {\n    MemberAndSlots memberDatum=memberData.get(i);\n    memberDatum.costAndSlots.sort();\n    int m=memberDatum.costAndSlots.size;\n    for (int j=0; j < m; j++) {\n      int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n      if (!filledSlots.get(slotNumber)) {\n        SlotAssignment slot=assignments.get(slotNumber);\n        slot.member=memberDatum.member;\n        slot.slotNumber=slotNumber;\n        filledSlots.set(slotNumber,true);\n        continue MEMBER_LOOP;\n      }\n    }\n    throw new ArcRuntimeException(\"SoftRoleSlotAssignmentStrategy cannot find valid slot assignment for member \" + memberDatum.member);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 290,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 76
      },
      "nodeContext" : "int slotNumber=memberDatum.costAndSlots.get(j).slotNumber;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "mindustry.ai.formations.Seq<mindustry.ai.formations.SoftRoleSlotAssignmentStrategy.CostAndSlot>"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 101,
    "startColumnNumber" : 12,
    "endLineNumber" : 101,
    "endColumnNumber" : 36
  }, {
    "charLength" : 24,
    "startLineNumber" : 102,
    "startColumnNumber" : 20,
    "endLineNumber" : 102,
    "endColumnNumber" : 44
  }, {
    "charLength" : 24,
    "startLineNumber" : 104,
    "startColumnNumber" : 33,
    "endLineNumber" : 104,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  } ]
}