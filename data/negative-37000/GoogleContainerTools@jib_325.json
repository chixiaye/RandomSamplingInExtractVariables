{
  "id" : 325,
  "expression" : "new IOException(\"'docker load' command failed with output: \" + output)",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/main/java/com/google/cloud/tools/jib/docker/DockerClient.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IOException(\"'docker load' command failed with output: \" + output)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 70,
      "startLineNumber" : 110,
      "startColumnNumber" : 14,
      "endLineNumber" : 110,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 85
      },
      "nodeContext" : "throw new IOException(\"'docker load' command failed with output: \" + output);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 109,
        "startColumnNumber" : 40,
        "endLineNumber" : 111,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  throw new IOException(\"'docker load' command failed with output: \" + output);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 111,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (dockerProcess.waitFor() != 0) {\n  throw new IOException(\"'docker load' command failed with output: \" + output);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 106,
        "startColumnNumber" : 87,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String output=CharStreams.toString(stdout);\n  if (dockerProcess.waitFor() != 0) {\n    throw new IOException(\"'docker load' command failed with output: \" + output);\n  }\n  return output;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (InputStreamReader stdout=new InputStreamReader(dockerProcess.getInputStream(),StandardCharsets.UTF_8)){\n  String output=CharStreams.toString(stdout);\n  if (dockerProcess.waitFor() != 0) {\n    throw new IOException(\"'docker load' command failed with output: \" + output);\n  }\n  return output;\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1113,
        "startLineNumber" : 81,
        "startColumnNumber" : 85,
        "endLineNumber" : 115,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Process dockerProcess=docker(\"load\");\n  try (OutputStream stdin=dockerProcess.getOutputStream()){\n    try {\n      imageTarballBlob.writeTo(stdin);\n    }\n catch (    IOException ex) {\n      String error;\n      try (InputStreamReader stderr=new InputStreamReader(dockerProcess.getErrorStream(),StandardCharsets.UTF_8)){\n        error=CharStreams.toString(stderr);\n      }\n catch (      IOException ignored) {\n        throw ex;\n      }\n      throw new IOException(\"'docker load' command failed with error: \" + error,ex);\n    }\n  }\n   try (InputStreamReader stdout=new InputStreamReader(dockerProcess.getInputStream(),StandardCharsets.UTF_8)){\n    String output=CharStreams.toString(stdout);\n    if (dockerProcess.waitFor() != 0) {\n      throw new IOException(\"'docker load' command failed with output: \" + output);\n    }\n    return output;\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1664,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 115,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Loads an image tarball into the Docker daemon.\n * @see <a\n   *     href=\"https://docs.docker.com/engine/reference/commandline/load/\">https://docs.docker.com/engine/reference/commandline/load</a>\n * @param imageTarballBlob the built container tarball.\n * @return stdout from {@code docker}.\n * @throws InterruptedException if the 'docker load' process is interrupted.\n * @throws IOException if streaming the blob to 'docker load' fails.\n */\npublic String load(Blob imageTarballBlob) throws InterruptedException, IOException {\n  Process dockerProcess=docker(\"load\");\n  try (OutputStream stdin=dockerProcess.getOutputStream()){\n    try {\n      imageTarballBlob.writeTo(stdin);\n    }\n catch (    IOException ex) {\n      String error;\n      try (InputStreamReader stderr=new InputStreamReader(dockerProcess.getErrorStream(),StandardCharsets.UTF_8)){\n        error=CharStreams.toString(stderr);\n      }\n catch (      IOException ignored) {\n        throw ex;\n      }\n      throw new IOException(\"'docker load' command failed with error: \" + error,ex);\n    }\n  }\n   try (InputStreamReader stdout=new InputStreamReader(dockerProcess.getInputStream(),StandardCharsets.UTF_8)){\n    String output=CharStreams.toString(stdout);\n    if (dockerProcess.waitFor() != 0) {\n      throw new IOException(\"'docker load' command failed with output: \" + output);\n    }\n    return output;\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 85
      },
      "nodeContext" : "throw new IOException(\"'docker load' command failed with output: \" + output);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 9,
    "type" : "java.io.IOException"
  } ],
  "positionList" : [ {
    "charLength" : 70,
    "startLineNumber" : 110,
    "startColumnNumber" : 14,
    "endLineNumber" : 110,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}