{
  "id" : 92,
  "expression" : "list",
  "projectName" : "JakeWharton@butterknife",
  "commitID" : "f89fb0f12f5a0c21d95dae234d53f590e1384557",
  "filePath" : "/butterknife/src/main/java/butterknife/ButterKnife.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 235,
      "startColumnNumber" : 28,
      "endLineNumber" : 235,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 235,
        "startColumnNumber" : 28,
        "endLineNumber" : 235,
        "endColumnNumber" : 39
      },
      "nodeContext" : "list.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 235,
        "startColumnNumber" : 20,
        "endLineNumber" : 235,
        "endColumnNumber" : 39
      },
      "nodeContext" : "count=list.size()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 235,
        "startColumnNumber" : 9,
        "endLineNumber" : 235,
        "endColumnNumber" : 39
      },
      "nodeContext" : "int i=0, count=list.size()",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 235,
        "startColumnNumber" : 4,
        "endLineNumber" : 239,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0, count=list.size(); i < count; i++) {\n  for (  Action<? super T> action : actions) {\n    action.apply(list.get(i),i);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 234,
        "startColumnNumber" : 88,
        "endLineNumber" : 240,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0, count=list.size(); i < count; i++) {\n    for (    Action<? super T> action : actions) {\n      action.apply(list.get(i),i);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 232,
        "startColumnNumber" : 2,
        "endLineNumber" : 240,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Apply the specified  {@code actions} across the {@code list} of views. \n */\n@SafeVarargs public static <T extends View>void apply(List<T> list,Action<? super T>... actions){\n  for (int i=0, count=list.size(); i < count; i++) {\n    for (    Action<? super T> action : actions) {\n      action.apply(list.get(i),i);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 235,
        "startColumnNumber" : 9,
        "endLineNumber" : 235,
        "endColumnNumber" : 39
      },
      "nodeContext" : "int i=0, count=list.size()",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<T>"
  }, {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 237,
      "startColumnNumber" : 21,
      "endLineNumber" : 237,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 237,
        "startColumnNumber" : 21,
        "endLineNumber" : 237,
        "endColumnNumber" : 32
      },
      "nodeContext" : "list.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 237,
        "startColumnNumber" : 8,
        "endLineNumber" : 237,
        "endColumnNumber" : 36
      },
      "nodeContext" : "action.apply(list.get(i),i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 237,
        "startColumnNumber" : 8,
        "endLineNumber" : 237,
        "endColumnNumber" : 37
      },
      "nodeContext" : "action.apply(list.get(i),i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 236,
        "startColumnNumber" : 47,
        "endLineNumber" : 238,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  action.apply(list.get(i),i);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 236,
        "startColumnNumber" : 6,
        "endLineNumber" : 238,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Action<? super T> action : actions) {\n  action.apply(list.get(i),i);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 235,
        "startColumnNumber" : 57,
        "endLineNumber" : 239,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Action<? super T> action : actions) {\n    action.apply(list.get(i),i);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 235,
        "startColumnNumber" : 4,
        "endLineNumber" : 239,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0, count=list.size(); i < count; i++) {\n  for (  Action<? super T> action : actions) {\n    action.apply(list.get(i),i);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 234,
        "startColumnNumber" : 88,
        "endLineNumber" : 240,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0, count=list.size(); i < count; i++) {\n    for (    Action<? super T> action : actions) {\n      action.apply(list.get(i),i);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 232,
        "startColumnNumber" : 2,
        "endLineNumber" : 240,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Apply the specified  {@code actions} across the {@code list} of views. \n */\n@SafeVarargs public static <T extends View>void apply(List<T> list,Action<? super T>... actions){\n  for (int i=0, count=list.size(); i < count; i++) {\n    for (    Action<? super T> action : actions) {\n      action.apply(list.get(i),i);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 237,
        "startColumnNumber" : 8,
        "endLineNumber" : 237,
        "endColumnNumber" : 37
      },
      "nodeContext" : "action.apply(list.get(i),i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<T>"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 235,
    "startColumnNumber" : 28,
    "endLineNumber" : 235,
    "endColumnNumber" : 32
  }, {
    "charLength" : 4,
    "startLineNumber" : 237,
    "startColumnNumber" : 21,
    "endLineNumber" : 237,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}