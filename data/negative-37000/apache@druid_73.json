{
  "id" : 73,
  "expression" : "builderUsr",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/core/src/main/java/org/apache/druid/java/util/metrics/CpuAcctDeltaMonitor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "builderUsr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 103,
      "startColumnNumber" : 42,
      "endLineNumber" : 103,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 103,
        "startColumnNumber" : 6,
        "endLineNumber" : 103,
        "endColumnNumber" : 65
      },
      "nodeContext" : "MonitorUtils.addDimensionsToBuilder(builderUsr,dimensions)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 103,
        "startColumnNumber" : 6,
        "endLineNumber" : 103,
        "endColumnNumber" : 66
      },
      "nodeContext" : "MonitorUtils.addDimensionsToBuilder(builderUsr,dimensions);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 813,
        "startLineNumber" : 96,
        "startColumnNumber" : 50,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ServiceMetricEvent.Builder builderUsr=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"usr\");\n  final ServiceMetricEvent.Builder builderSys=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"sys\");\n  MonitorUtils.addDimensionsToBuilder(builderUsr,dimensions);\n  MonitorUtils.addDimensionsToBuilder(builderSys,dimensions);\n  emitter.emit(builderUsr.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.usrTime(i) - priorSnapshotHolder.metric.usrTime(i)));\n  emitter.emit(builderSys.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.sysTime(i) - priorSnapshotHolder.metric.sysTime(i)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 859,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < snapshot.cpuCount(); ++i) {\n  final ServiceMetricEvent.Builder builderUsr=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"usr\");\n  final ServiceMetricEvent.Builder builderSys=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"sys\");\n  MonitorUtils.addDimensionsToBuilder(builderUsr,dimensions);\n  MonitorUtils.addDimensionsToBuilder(builderSys,dimensions);\n  emitter.emit(builderUsr.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.usrTime(i) - priorSnapshotHolder.metric.usrTime(i)));\n  emitter.emit(builderSys.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.sysTime(i) - priorSnapshotHolder.metric.sysTime(i)));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2141,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final CpuAcct cpuAcct=new CpuAcct(cgroupDiscoverer);\n  final CpuAcct.CpuAcctMetric snapshot=cpuAcct.snapshot();\n  final long nanoTime=System.nanoTime();\n  final DateTime dateTime=DateTimes.nowUtc();\n  final SnapshotHolder priorSnapshotHolder=this.priorSnapshot.get();\n  if (!priorSnapshot.compareAndSet(priorSnapshotHolder,new SnapshotHolder(snapshot,nanoTime))) {\n    log.debug(\"Pre-empted by another monitor run\");\n    return false;\n  }\n  if (priorSnapshotHolder == null) {\n    log.info(\"Detected first run, storing result for next run\");\n    return false;\n  }\n  final long elapsedNs=nanoTime - priorSnapshotHolder.timestamp;\n  if (snapshot.cpuCount() != priorSnapshotHolder.metric.cpuCount()) {\n    log.warn(\"Prior CPU count [%d] does not match current cpu count [%d]. Skipping metrics emission\",priorSnapshotHolder.metric.cpuCount(),snapshot.cpuCount());\n    return false;\n  }\n  for (int i=0; i < snapshot.cpuCount(); ++i) {\n    final ServiceMetricEvent.Builder builderUsr=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"usr\");\n    final ServiceMetricEvent.Builder builderSys=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"sys\");\n    MonitorUtils.addDimensionsToBuilder(builderUsr,dimensions);\n    MonitorUtils.addDimensionsToBuilder(builderSys,dimensions);\n    emitter.emit(builderUsr.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.usrTime(i) - priorSnapshotHolder.metric.usrTime(i)));\n    emitter.emit(builderSys.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.sysTime(i) - priorSnapshotHolder.metric.sysTime(i)));\n  }\n  if (snapshot.cpuCount() > 0) {\n    emitter.emit(builder().build(dateTime,\"cgroup/cpu_time_delta_ns_elapsed\",elapsedNs));\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2204,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean doMonitor(ServiceEmitter emitter){\n  final CpuAcct cpuAcct=new CpuAcct(cgroupDiscoverer);\n  final CpuAcct.CpuAcctMetric snapshot=cpuAcct.snapshot();\n  final long nanoTime=System.nanoTime();\n  final DateTime dateTime=DateTimes.nowUtc();\n  final SnapshotHolder priorSnapshotHolder=this.priorSnapshot.get();\n  if (!priorSnapshot.compareAndSet(priorSnapshotHolder,new SnapshotHolder(snapshot,nanoTime))) {\n    log.debug(\"Pre-empted by another monitor run\");\n    return false;\n  }\n  if (priorSnapshotHolder == null) {\n    log.info(\"Detected first run, storing result for next run\");\n    return false;\n  }\n  final long elapsedNs=nanoTime - priorSnapshotHolder.timestamp;\n  if (snapshot.cpuCount() != priorSnapshotHolder.metric.cpuCount()) {\n    log.warn(\"Prior CPU count [%d] does not match current cpu count [%d]. Skipping metrics emission\",priorSnapshotHolder.metric.cpuCount(),snapshot.cpuCount());\n    return false;\n  }\n  for (int i=0; i < snapshot.cpuCount(); ++i) {\n    final ServiceMetricEvent.Builder builderUsr=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"usr\");\n    final ServiceMetricEvent.Builder builderSys=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"sys\");\n    MonitorUtils.addDimensionsToBuilder(builderUsr,dimensions);\n    MonitorUtils.addDimensionsToBuilder(builderSys,dimensions);\n    emitter.emit(builderUsr.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.usrTime(i) - priorSnapshotHolder.metric.usrTime(i)));\n    emitter.emit(builderSys.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.sysTime(i) - priorSnapshotHolder.metric.sysTime(i)));\n  }\n  if (snapshot.cpuCount() > 0) {\n    emitter.emit(builder().build(dateTime,\"cgroup/cpu_time_delta_ns_elapsed\",elapsedNs));\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 255,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 103,
        "startColumnNumber" : 6,
        "endLineNumber" : 103,
        "endColumnNumber" : 66
      },
      "nodeContext" : "MonitorUtils.addDimensionsToBuilder(builderUsr,dimensions);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.java.util.emitter.service.ServiceMetricEvent.Builder"
  }, {
    "nodeContext" : "builderUsr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 105,
      "startColumnNumber" : 19,
      "endLineNumber" : 105,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 105,
        "startColumnNumber" : 19,
        "endLineNumber" : 109,
        "endColumnNumber" : 7
      },
      "nodeContext" : "builderUsr.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.usrTime(i) - priorSnapshotHolder.metric.usrTime(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 105,
        "startColumnNumber" : 6,
        "endLineNumber" : 109,
        "endColumnNumber" : 8
      },
      "nodeContext" : "emitter.emit(builderUsr.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.usrTime(i) - priorSnapshotHolder.metric.usrTime(i)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 105,
        "startColumnNumber" : 6,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "emitter.emit(builderUsr.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.usrTime(i) - priorSnapshotHolder.metric.usrTime(i)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 813,
        "startLineNumber" : 96,
        "startColumnNumber" : 50,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ServiceMetricEvent.Builder builderUsr=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"usr\");\n  final ServiceMetricEvent.Builder builderSys=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"sys\");\n  MonitorUtils.addDimensionsToBuilder(builderUsr,dimensions);\n  MonitorUtils.addDimensionsToBuilder(builderSys,dimensions);\n  emitter.emit(builderUsr.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.usrTime(i) - priorSnapshotHolder.metric.usrTime(i)));\n  emitter.emit(builderSys.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.sysTime(i) - priorSnapshotHolder.metric.sysTime(i)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 859,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < snapshot.cpuCount(); ++i) {\n  final ServiceMetricEvent.Builder builderUsr=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"usr\");\n  final ServiceMetricEvent.Builder builderSys=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"sys\");\n  MonitorUtils.addDimensionsToBuilder(builderUsr,dimensions);\n  MonitorUtils.addDimensionsToBuilder(builderSys,dimensions);\n  emitter.emit(builderUsr.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.usrTime(i) - priorSnapshotHolder.metric.usrTime(i)));\n  emitter.emit(builderSys.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.sysTime(i) - priorSnapshotHolder.metric.sysTime(i)));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2141,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final CpuAcct cpuAcct=new CpuAcct(cgroupDiscoverer);\n  final CpuAcct.CpuAcctMetric snapshot=cpuAcct.snapshot();\n  final long nanoTime=System.nanoTime();\n  final DateTime dateTime=DateTimes.nowUtc();\n  final SnapshotHolder priorSnapshotHolder=this.priorSnapshot.get();\n  if (!priorSnapshot.compareAndSet(priorSnapshotHolder,new SnapshotHolder(snapshot,nanoTime))) {\n    log.debug(\"Pre-empted by another monitor run\");\n    return false;\n  }\n  if (priorSnapshotHolder == null) {\n    log.info(\"Detected first run, storing result for next run\");\n    return false;\n  }\n  final long elapsedNs=nanoTime - priorSnapshotHolder.timestamp;\n  if (snapshot.cpuCount() != priorSnapshotHolder.metric.cpuCount()) {\n    log.warn(\"Prior CPU count [%d] does not match current cpu count [%d]. Skipping metrics emission\",priorSnapshotHolder.metric.cpuCount(),snapshot.cpuCount());\n    return false;\n  }\n  for (int i=0; i < snapshot.cpuCount(); ++i) {\n    final ServiceMetricEvent.Builder builderUsr=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"usr\");\n    final ServiceMetricEvent.Builder builderSys=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"sys\");\n    MonitorUtils.addDimensionsToBuilder(builderUsr,dimensions);\n    MonitorUtils.addDimensionsToBuilder(builderSys,dimensions);\n    emitter.emit(builderUsr.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.usrTime(i) - priorSnapshotHolder.metric.usrTime(i)));\n    emitter.emit(builderSys.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.sysTime(i) - priorSnapshotHolder.metric.sysTime(i)));\n  }\n  if (snapshot.cpuCount() > 0) {\n    emitter.emit(builder().build(dateTime,\"cgroup/cpu_time_delta_ns_elapsed\",elapsedNs));\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2204,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean doMonitor(ServiceEmitter emitter){\n  final CpuAcct cpuAcct=new CpuAcct(cgroupDiscoverer);\n  final CpuAcct.CpuAcctMetric snapshot=cpuAcct.snapshot();\n  final long nanoTime=System.nanoTime();\n  final DateTime dateTime=DateTimes.nowUtc();\n  final SnapshotHolder priorSnapshotHolder=this.priorSnapshot.get();\n  if (!priorSnapshot.compareAndSet(priorSnapshotHolder,new SnapshotHolder(snapshot,nanoTime))) {\n    log.debug(\"Pre-empted by another monitor run\");\n    return false;\n  }\n  if (priorSnapshotHolder == null) {\n    log.info(\"Detected first run, storing result for next run\");\n    return false;\n  }\n  final long elapsedNs=nanoTime - priorSnapshotHolder.timestamp;\n  if (snapshot.cpuCount() != priorSnapshotHolder.metric.cpuCount()) {\n    log.warn(\"Prior CPU count [%d] does not match current cpu count [%d]. Skipping metrics emission\",priorSnapshotHolder.metric.cpuCount(),snapshot.cpuCount());\n    return false;\n  }\n  for (int i=0; i < snapshot.cpuCount(); ++i) {\n    final ServiceMetricEvent.Builder builderUsr=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"usr\");\n    final ServiceMetricEvent.Builder builderSys=builder().setDimension(\"cpuName\",Integer.toString(i)).setDimension(\"cpuTime\",\"sys\");\n    MonitorUtils.addDimensionsToBuilder(builderUsr,dimensions);\n    MonitorUtils.addDimensionsToBuilder(builderSys,dimensions);\n    emitter.emit(builderUsr.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.usrTime(i) - priorSnapshotHolder.metric.usrTime(i)));\n    emitter.emit(builderSys.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.sysTime(i) - priorSnapshotHolder.metric.sysTime(i)));\n  }\n  if (snapshot.cpuCount() > 0) {\n    emitter.emit(builder().build(dateTime,\"cgroup/cpu_time_delta_ns_elapsed\",elapsedNs));\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 255,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 105,
        "startColumnNumber" : 19,
        "endLineNumber" : 109,
        "endColumnNumber" : 7
      },
      "nodeContext" : "builderUsr.build(dateTime,\"cgroup/cpu_time_delta_ns\",snapshot.usrTime(i) - priorSnapshotHolder.metric.usrTime(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.java.util.emitter.service.ServiceMetricEvent.Builder"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 103,
    "startColumnNumber" : 42,
    "endLineNumber" : 103,
    "endColumnNumber" : 52
  }, {
    "charLength" : 10,
    "startLineNumber" : 105,
    "startColumnNumber" : 19,
    "endLineNumber" : 105,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}