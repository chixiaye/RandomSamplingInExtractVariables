{
  "id" : 293,
  "expression" : "rawType",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-javanica/src/test/java/com/netflix/hystrix/contrib/javanica/cache/CacheInvocationParameterTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "rawType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 41,
      "startColumnNumber" : 89,
      "endLineNumber" : 41,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 41,
        "startColumnNumber" : 60,
        "endLineNumber" : 41,
        "endColumnNumber" : 127
      },
      "nodeContext" : "new CacheInvocationParameter(rawType,value,annotations,position)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 41,
        "startColumnNumber" : 33,
        "endLineNumber" : 41,
        "endColumnNumber" : 127
      },
      "nodeContext" : "cacheInvocationParameter=new CacheInvocationParameter(rawType,value,annotations,position)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 128
      },
      "nodeContext" : "CacheInvocationParameter cacheInvocationParameter=new CacheInvocationParameter(rawType,value,annotations,position);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1078,
        "startLineNumber" : 32,
        "startColumnNumber" : 87,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> rawType=String.class;\n  Object value=\"test\";\n  Method method=CacheInvocationParameterTest.class.getDeclaredMethod(\"stabMethod\",String.class);\n  method.setAccessible(true);\n  Annotation[] annotations=method.getParameterAnnotations()[0];\n  int position=0;\n  CacheInvocationParameter cacheInvocationParameter=new CacheInvocationParameter(rawType,value,annotations,position);\n  assertEquals(rawType,cacheInvocationParameter.getRawType());\n  assertEquals(value,cacheInvocationParameter.getValue());\n  assertEquals(annotations[0],cacheInvocationParameter.getCacheKeyAnnotation());\n  assertTrue(cacheInvocationParameter.hasCacheKeyAnnotation());\n  assertTrue(cacheInvocationParameter.getAnnotations().contains(annotations[0]));\n  try {\n    cacheInvocationParameter.getAnnotations().clear();\n    fail();\n  }\n catch (  Throwable e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCacheInvocationParameterConstructor() throws NoSuchMethodException {\n  Class<?> rawType=String.class;\n  Object value=\"test\";\n  Method method=CacheInvocationParameterTest.class.getDeclaredMethod(\"stabMethod\",String.class);\n  method.setAccessible(true);\n  Annotation[] annotations=method.getParameterAnnotations()[0];\n  int position=0;\n  CacheInvocationParameter cacheInvocationParameter=new CacheInvocationParameter(rawType,value,annotations,position);\n  assertEquals(rawType,cacheInvocationParameter.getRawType());\n  assertEquals(value,cacheInvocationParameter.getValue());\n  assertEquals(annotations[0],cacheInvocationParameter.getCacheKeyAnnotation());\n  assertTrue(cacheInvocationParameter.hasCacheKeyAnnotation());\n  assertTrue(cacheInvocationParameter.getAnnotations().contains(annotations[0]));\n  try {\n    cacheInvocationParameter.getAnnotations().clear();\n    fail();\n  }\n catch (  Throwable e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 128
      },
      "nodeContext" : "CacheInvocationParameter cacheInvocationParameter=new CacheInvocationParameter(rawType,value,annotations,position);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<>"
  }, {
    "nodeContext" : "rawType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 43,
      "startColumnNumber" : 21,
      "endLineNumber" : 43,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals(rawType,cacheInvocationParameter.getRawType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertEquals(rawType,cacheInvocationParameter.getRawType());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1078,
        "startLineNumber" : 32,
        "startColumnNumber" : 87,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> rawType=String.class;\n  Object value=\"test\";\n  Method method=CacheInvocationParameterTest.class.getDeclaredMethod(\"stabMethod\",String.class);\n  method.setAccessible(true);\n  Annotation[] annotations=method.getParameterAnnotations()[0];\n  int position=0;\n  CacheInvocationParameter cacheInvocationParameter=new CacheInvocationParameter(rawType,value,annotations,position);\n  assertEquals(rawType,cacheInvocationParameter.getRawType());\n  assertEquals(value,cacheInvocationParameter.getValue());\n  assertEquals(annotations[0],cacheInvocationParameter.getCacheKeyAnnotation());\n  assertTrue(cacheInvocationParameter.hasCacheKeyAnnotation());\n  assertTrue(cacheInvocationParameter.getAnnotations().contains(annotations[0]));\n  try {\n    cacheInvocationParameter.getAnnotations().clear();\n    fail();\n  }\n catch (  Throwable e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCacheInvocationParameterConstructor() throws NoSuchMethodException {\n  Class<?> rawType=String.class;\n  Object value=\"test\";\n  Method method=CacheInvocationParameterTest.class.getDeclaredMethod(\"stabMethod\",String.class);\n  method.setAccessible(true);\n  Annotation[] annotations=method.getParameterAnnotations()[0];\n  int position=0;\n  CacheInvocationParameter cacheInvocationParameter=new CacheInvocationParameter(rawType,value,annotations,position);\n  assertEquals(rawType,cacheInvocationParameter.getRawType());\n  assertEquals(value,cacheInvocationParameter.getValue());\n  assertEquals(annotations[0],cacheInvocationParameter.getCacheKeyAnnotation());\n  assertTrue(cacheInvocationParameter.hasCacheKeyAnnotation());\n  assertTrue(cacheInvocationParameter.getAnnotations().contains(annotations[0]));\n  try {\n    cacheInvocationParameter.getAnnotations().clear();\n    fail();\n  }\n catch (  Throwable e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertEquals(rawType,cacheInvocationParameter.getRawType());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 41,
    "startColumnNumber" : 89,
    "endLineNumber" : 41,
    "endColumnNumber" : 96
  }, {
    "charLength" : 7,
    "startLineNumber" : 43,
    "startColumnNumber" : 21,
    "endLineNumber" : 43,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}