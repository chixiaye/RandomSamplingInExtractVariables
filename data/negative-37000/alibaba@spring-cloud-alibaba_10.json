{
  "id" : 10,
  "expression" : "defaultFlowValue",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alibaba-sentinel-datasource/src/test/java/com/alibaba/cloud/sentinel/datasource/ApolloDataSourceFactoryBeanTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "defaultFlowValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 47,
      "startColumnNumber" : 38,
      "endLineNumber" : 47,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 55
      },
      "nodeContext" : "factoryBean.setDefaultFlowRuleValue(defaultFlowValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 56
      },
      "nodeContext" : "factoryBean.setDefaultFlowRuleValue(defaultFlowValue);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 42,
        "startColumnNumber" : 54,
        "endLineNumber" : 69,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ApolloDataSourceFactoryBean factoryBean=spy(new ApolloDataSourceFactoryBean());\n  Converter converter=mock(JsonConverter.class);\n  factoryBean.setDefaultFlowRuleValue(defaultFlowValue);\n  factoryBean.setFlowRulesKey(flowRuleKey);\n  factoryBean.setNamespaceName(namespace);\n  factoryBean.setConverter(converter);\n  ApolloDataSource apolloDataSource=mock(ApolloDataSource.class);\n  when(apolloDataSource.readSource()).thenReturn(\"{}\");\n  doReturn(apolloDataSource).when(factoryBean).getObject();\n  assertEquals(\"ApolloDataSourceFactoryBean getObject error\",apolloDataSource,factoryBean.getObject());\n  assertEquals(\"ApolloDataSource read source value was wrong\",\"{}\",factoryBean.getObject().readSource());\n  assertEquals(\"ApolloDataSource converter was wrong\",converter,factoryBean.getConverter());\n  assertEquals(\"ApolloDataSourceFactoryBean flowRuleKey was wrong\",flowRuleKey,factoryBean.getFlowRulesKey());\n  assertEquals(\"ApolloDataSourceFactoryBean namespace was wrong\",namespace,factoryBean.getNamespaceName());\n  assertEquals(\"ApolloDataSourceFactoryBean defaultFlowValue was wrong\",defaultFlowValue,factoryBean.getDefaultFlowRuleValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 41,
        "startColumnNumber" : 1,
        "endLineNumber" : 69,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testApolloFactoryBean() throws Exception {\n  ApolloDataSourceFactoryBean factoryBean=spy(new ApolloDataSourceFactoryBean());\n  Converter converter=mock(JsonConverter.class);\n  factoryBean.setDefaultFlowRuleValue(defaultFlowValue);\n  factoryBean.setFlowRulesKey(flowRuleKey);\n  factoryBean.setNamespaceName(namespace);\n  factoryBean.setConverter(converter);\n  ApolloDataSource apolloDataSource=mock(ApolloDataSource.class);\n  when(apolloDataSource.readSource()).thenReturn(\"{}\");\n  doReturn(apolloDataSource).when(factoryBean).getObject();\n  assertEquals(\"ApolloDataSourceFactoryBean getObject error\",apolloDataSource,factoryBean.getObject());\n  assertEquals(\"ApolloDataSource read source value was wrong\",\"{}\",factoryBean.getObject().readSource());\n  assertEquals(\"ApolloDataSource converter was wrong\",converter,factoryBean.getConverter());\n  assertEquals(\"ApolloDataSourceFactoryBean flowRuleKey was wrong\",flowRuleKey,factoryBean.getFlowRulesKey());\n  assertEquals(\"ApolloDataSourceFactoryBean namespace was wrong\",namespace,factoryBean.getNamespaceName());\n  assertEquals(\"ApolloDataSourceFactoryBean defaultFlowValue was wrong\",defaultFlowValue,factoryBean.getDefaultFlowRuleValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 56
      },
      "nodeContext" : "factoryBean.setDefaultFlowRuleValue(defaultFlowValue);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "defaultFlowValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 68,
      "startColumnNumber" : 4,
      "endLineNumber" : 68,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertEquals(\"ApolloDataSourceFactoryBean defaultFlowValue was wrong\",defaultFlowValue,factoryBean.getDefaultFlowRuleValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(\"ApolloDataSourceFactoryBean defaultFlowValue was wrong\",defaultFlowValue,factoryBean.getDefaultFlowRuleValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 42,
        "startColumnNumber" : 54,
        "endLineNumber" : 69,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ApolloDataSourceFactoryBean factoryBean=spy(new ApolloDataSourceFactoryBean());\n  Converter converter=mock(JsonConverter.class);\n  factoryBean.setDefaultFlowRuleValue(defaultFlowValue);\n  factoryBean.setFlowRulesKey(flowRuleKey);\n  factoryBean.setNamespaceName(namespace);\n  factoryBean.setConverter(converter);\n  ApolloDataSource apolloDataSource=mock(ApolloDataSource.class);\n  when(apolloDataSource.readSource()).thenReturn(\"{}\");\n  doReturn(apolloDataSource).when(factoryBean).getObject();\n  assertEquals(\"ApolloDataSourceFactoryBean getObject error\",apolloDataSource,factoryBean.getObject());\n  assertEquals(\"ApolloDataSource read source value was wrong\",\"{}\",factoryBean.getObject().readSource());\n  assertEquals(\"ApolloDataSource converter was wrong\",converter,factoryBean.getConverter());\n  assertEquals(\"ApolloDataSourceFactoryBean flowRuleKey was wrong\",flowRuleKey,factoryBean.getFlowRulesKey());\n  assertEquals(\"ApolloDataSourceFactoryBean namespace was wrong\",namespace,factoryBean.getNamespaceName());\n  assertEquals(\"ApolloDataSourceFactoryBean defaultFlowValue was wrong\",defaultFlowValue,factoryBean.getDefaultFlowRuleValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 41,
        "startColumnNumber" : 1,
        "endLineNumber" : 69,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testApolloFactoryBean() throws Exception {\n  ApolloDataSourceFactoryBean factoryBean=spy(new ApolloDataSourceFactoryBean());\n  Converter converter=mock(JsonConverter.class);\n  factoryBean.setDefaultFlowRuleValue(defaultFlowValue);\n  factoryBean.setFlowRulesKey(flowRuleKey);\n  factoryBean.setNamespaceName(namespace);\n  factoryBean.setConverter(converter);\n  ApolloDataSource apolloDataSource=mock(ApolloDataSource.class);\n  when(apolloDataSource.readSource()).thenReturn(\"{}\");\n  doReturn(apolloDataSource).when(factoryBean).getObject();\n  assertEquals(\"ApolloDataSourceFactoryBean getObject error\",apolloDataSource,factoryBean.getObject());\n  assertEquals(\"ApolloDataSource read source value was wrong\",\"{}\",factoryBean.getObject().readSource());\n  assertEquals(\"ApolloDataSource converter was wrong\",converter,factoryBean.getConverter());\n  assertEquals(\"ApolloDataSourceFactoryBean flowRuleKey was wrong\",flowRuleKey,factoryBean.getFlowRulesKey());\n  assertEquals(\"ApolloDataSourceFactoryBean namespace was wrong\",namespace,factoryBean.getNamespaceName());\n  assertEquals(\"ApolloDataSourceFactoryBean defaultFlowValue was wrong\",defaultFlowValue,factoryBean.getDefaultFlowRuleValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertEquals(\"ApolloDataSourceFactoryBean defaultFlowValue was wrong\",defaultFlowValue,factoryBean.getDefaultFlowRuleValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 47,
    "startColumnNumber" : 38,
    "endLineNumber" : 47,
    "endColumnNumber" : 54
  }, {
    "charLength" : 16,
    "startLineNumber" : 68,
    "startColumnNumber" : 4,
    "endLineNumber" : 68,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}