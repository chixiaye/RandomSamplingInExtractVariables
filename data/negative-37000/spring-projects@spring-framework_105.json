{
  "id" : 105,
  "expression" : "\"Subscription must not be null\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Subscription must not be null\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 240,
      "startColumnNumber" : 33,
      "endLineNumber" : 240,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 240,
        "startColumnNumber" : 4,
        "endLineNumber" : 240,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Assert.notNull(subscription,\"Subscription must not be null\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 240,
        "startColumnNumber" : 4,
        "endLineNumber" : 240,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assert.notNull(subscription,\"Subscription must not be null\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 239,
        "startColumnNumber" : 108,
        "endLineNumber" : 248,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Assert.notNull(subscription,\"Subscription must not be null\");\n  if (processor.changeState(this,REQUESTED)) {\n    processor.subscription=subscription;\n    subscription.request(1);\n  }\n else {\n    super.onSubscribe(processor,subscription);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 238,
        "startColumnNumber" : 3,
        "endLineNumber" : 248,
        "endColumnNumber" : 4
      },
      "nodeContext" : "@Override public <T>void onSubscribe(AbstractListenerWriteFlushProcessor<T> processor,Subscription subscription){\n  Assert.notNull(subscription,\"Subscription must not be null\");\n  if (processor.changeState(this,REQUESTED)) {\n    processor.subscription=subscription;\n    subscription.request(1);\n  }\n else {\n    super.onSubscribe(processor,subscription);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 240,
        "startColumnNumber" : 4,
        "endLineNumber" : 240,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assert.notNull(subscription,\"Subscription must not be null\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 240,
    "startColumnNumber" : 33,
    "endLineNumber" : 240,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}