{
  "id" : 32,
  "expression" : "pit",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/languages/sleigh/SleighSubtableTraversal.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 63,
      "startColumnNumber" : 9,
      "endLineNumber" : 63,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 63,
        "startColumnNumber" : 9,
        "endLineNumber" : 63,
        "endColumnNumber" : 22
      },
      "nodeContext" : "pit.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (pit.hasNext()) {\n  int result=visitor.visit(pit.next(),cit.next());\n  if (result != CONTINUE) {\n    return result;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 60,
        "startColumnNumber" : 73,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Iterator<DisjointPattern> pit=node.getPatterns().iterator();\n  Iterator<Constructor> cit=node.getConstructors().iterator();\n  while (pit.hasNext()) {\n    int result=visitor.visit(pit.next(),cit.next());\n    if (result != CONTINUE) {\n      return result;\n    }\n  }\n  for (  DecisionNode child : node.getChildren()) {\n    int result=traverse(child,visitor);\n    if (result != CONTINUE) {\n      return result;\n    }\n  }\n  return CONTINUE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 54,
        "startColumnNumber" : 1,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * A recursive method to descend down each branch of the decision tree for a table\n * @param node the current node\n * @param visitor the visitor to call back\n * @return a value from {@link VisitorResults}\n */\nprotected int traverse(DecisionNode node,SubtableEntryVisitor visitor){\n  Iterator<DisjointPattern> pit=node.getPatterns().iterator();\n  Iterator<Constructor> cit=node.getConstructors().iterator();\n  while (pit.hasNext()) {\n    int result=visitor.visit(pit.next(),cit.next());\n    if (result != CONTINUE) {\n      return result;\n    }\n  }\n  for (  DecisionNode child : node.getChildren()) {\n    int result=traverse(child,visitor);\n    if (result != CONTINUE) {\n      return result;\n    }\n  }\n  return CONTINUE;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 63,
        "startColumnNumber" : 9,
        "endLineNumber" : 63,
        "endColumnNumber" : 22
      },
      "nodeContext" : "pit.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Iterator<ghidra.app.plugin.processors.sleigh.pattern.DisjointPattern>"
  }, {
    "nodeContext" : "pit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 64,
      "startColumnNumber" : 30,
      "endLineNumber" : 64,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 64,
        "startColumnNumber" : 30,
        "endLineNumber" : 64,
        "endColumnNumber" : 40
      },
      "nodeContext" : "pit.next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 64,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 53
      },
      "nodeContext" : "visitor.visit(pit.next(),cit.next())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 64,
        "startColumnNumber" : 7,
        "endLineNumber" : 64,
        "endColumnNumber" : 53
      },
      "nodeContext" : "result=visitor.visit(pit.next(),cit.next())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 64,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 54
      },
      "nodeContext" : "int result=visitor.visit(pit.next(),cit.next());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 63,
        "startColumnNumber" : 24,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int result=visitor.visit(pit.next(),cit.next());\n  if (result != CONTINUE) {\n    return result;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (pit.hasNext()) {\n  int result=visitor.visit(pit.next(),cit.next());\n  if (result != CONTINUE) {\n    return result;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 60,
        "startColumnNumber" : 73,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Iterator<DisjointPattern> pit=node.getPatterns().iterator();\n  Iterator<Constructor> cit=node.getConstructors().iterator();\n  while (pit.hasNext()) {\n    int result=visitor.visit(pit.next(),cit.next());\n    if (result != CONTINUE) {\n      return result;\n    }\n  }\n  for (  DecisionNode child : node.getChildren()) {\n    int result=traverse(child,visitor);\n    if (result != CONTINUE) {\n      return result;\n    }\n  }\n  return CONTINUE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 54,
        "startColumnNumber" : 1,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * A recursive method to descend down each branch of the decision tree for a table\n * @param node the current node\n * @param visitor the visitor to call back\n * @return a value from {@link VisitorResults}\n */\nprotected int traverse(DecisionNode node,SubtableEntryVisitor visitor){\n  Iterator<DisjointPattern> pit=node.getPatterns().iterator();\n  Iterator<Constructor> cit=node.getConstructors().iterator();\n  while (pit.hasNext()) {\n    int result=visitor.visit(pit.next(),cit.next());\n    if (result != CONTINUE) {\n      return result;\n    }\n  }\n  for (  DecisionNode child : node.getChildren()) {\n    int result=traverse(child,visitor);\n    if (result != CONTINUE) {\n      return result;\n    }\n  }\n  return CONTINUE;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 64,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 54
      },
      "nodeContext" : "int result=visitor.visit(pit.next(),cit.next());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Iterator<ghidra.app.plugin.processors.sleigh.pattern.DisjointPattern>"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 63,
    "startColumnNumber" : 9,
    "endLineNumber" : 63,
    "endColumnNumber" : 12
  }, {
    "charLength" : 3,
    "startLineNumber" : 64,
    "startColumnNumber" : 30,
    "endLineNumber" : 64,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}