{
  "id" : 509,
  "expression" : "monitorJob",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/utils/RuntimeUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "monitorJob",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 226,
      "startColumnNumber" : 8,
      "endLineNumber" : 226,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 226,
        "startColumnNumber" : 8,
        "endLineNumber" : 226,
        "endColumnNumber" : 29
      },
      "nodeContext" : "monitorJob.schedule()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 226,
        "startColumnNumber" : 8,
        "endLineNumber" : 226,
        "endColumnNumber" : 30
      },
      "nodeContext" : "monitorJob.schedule();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1542,
        "startLineNumber" : 200,
        "startColumnNumber" : 124,
        "endLineNumber" : 245,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final MonitoringTask monitoringTask=new MonitoringTask(task);\n  Job monitorJob=new AbstractJob(taskName){\n{\n      setSystem(hidden);\n      setUser(!hidden);\n    }\n    @Override protected IStatus run(    DBRProgressMonitor monitor){\n      monitor.beginTask(getName(),1);\n      try {\n        monitor.subTask(\"Execute task\");\n        monitoringTask.run(monitor);\n      }\n catch (      InvocationTargetException e) {\n        log.error(getName() + \" - error\",e.getTargetException());\n        return Status.OK_STATUS;\n      }\ncatch (      InterruptedException e) {\n      }\n finally {\n        monitor.done();\n      }\n      return Status.OK_STATUS;\n    }\n  }\n;\n  monitorJob.schedule();\n  long startTime=System.currentTimeMillis();\n  while (!monitoringTask.finished) {\n    if (waitTime > 0 && System.currentTimeMillis() - startTime > waitTime) {\n      break;\n    }\n    try {\n      if (!DBWorkbench.getPlatformUI().readAndDispatchEvents()) {\n        Thread.sleep(50);\n      }\n    }\n catch (    InterruptedException e) {\n      log.debug(\"Task '\" + taskName + \"' was interrupted\");\n      break;\n    }\n  }\n  return monitoringTask.finished;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1662,
        "startLineNumber" : 200,
        "startColumnNumber" : 4,
        "endLineNumber" : 245,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static boolean runTask(final DBRRunnableWithProgress task,String taskName,final long waitTime,boolean hidden){\n  final MonitoringTask monitoringTask=new MonitoringTask(task);\n  Job monitorJob=new AbstractJob(taskName){\n{\n      setSystem(hidden);\n      setUser(!hidden);\n    }\n    @Override protected IStatus run(    DBRProgressMonitor monitor){\n      monitor.beginTask(getName(),1);\n      try {\n        monitor.subTask(\"Execute task\");\n        monitoringTask.run(monitor);\n      }\n catch (      InvocationTargetException e) {\n        log.error(getName() + \" - error\",e.getTargetException());\n        return Status.OK_STATUS;\n      }\ncatch (      InterruptedException e) {\n      }\n finally {\n        monitor.done();\n      }\n      return Status.OK_STATUS;\n    }\n  }\n;\n  monitorJob.schedule();\n  long startTime=System.currentTimeMillis();\n  while (!monitoringTask.finished) {\n    if (waitTime > 0 && System.currentTimeMillis() - startTime > waitTime) {\n      break;\n    }\n    try {\n      if (!DBWorkbench.getPlatformUI().readAndDispatchEvents()) {\n        Thread.sleep(50);\n      }\n    }\n catch (    InterruptedException e) {\n      log.debug(\"Task '\" + taskName + \"' was interrupted\");\n      break;\n    }\n  }\n  return monitoringTask.finished;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 226,
        "startColumnNumber" : 8,
        "endLineNumber" : 226,
        "endColumnNumber" : 30
      },
      "nodeContext" : "monitorJob.schedule();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.jkiss.dbeaver.utils.Job"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 226,
    "startColumnNumber" : 8,
    "endLineNumber" : 226,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}