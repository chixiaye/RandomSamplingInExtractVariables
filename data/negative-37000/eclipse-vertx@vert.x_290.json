{
  "id" : 290,
  "expression" : "Base64",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/json/JsonObject.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Base64",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 221,
      "startColumnNumber" : 36,
      "endLineNumber" : 221,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 221,
        "startColumnNumber" : 36,
        "endLineNumber" : 221,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Base64.getDecoder()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 221,
        "startColumnNumber" : 36,
        "endLineNumber" : 221,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Base64.getDecoder().decode(encoded)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 221,
        "startColumnNumber" : 11,
        "endLineNumber" : 221,
        "endColumnNumber" : 71
      },
      "nodeContext" : "encoded == null ? null : Base64.getDecoder().decode(encoded)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 221,
        "startColumnNumber" : 4,
        "endLineNumber" : 221,
        "endColumnNumber" : 72
      },
      "nodeContext" : "return encoded == null ? null : Base64.getDecoder().decode(encoded);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 218,
        "startColumnNumber" : 38,
        "endLineNumber" : 222,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Objects.requireNonNull(key);\n  String encoded=(String)map.get(key);\n  return encoded == null ? null : Base64.getDecoder().decode(encoded);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 867,
        "startLineNumber" : 205,
        "startColumnNumber" : 2,
        "endLineNumber" : 222,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Get the binary value with the specified key. <p> JSON itself has no notion of a binary, this extension complies to the RFC-7493, so this method assumes there is a String value with the key and it contains a Base64 encoded binary, which it decodes if found and returns. <p> This method should be used in conjunction with  {@link #put(String,byte[])}\n * @param key  the key to return the value for\n * @return the value or null if no value for that key\n * @throws java.lang.ClassCastException if the value is not a String\n * @throws java.lang.IllegalArgumentException if the String value is not a legal Base64 encoded value\n */\npublic byte[] getBinary(String key){\n  Objects.requireNonNull(key);\n  String encoded=(String)map.get(key);\n  return encoded == null ? null : Base64.getDecoder().decode(encoded);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 41,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 221,
        "startColumnNumber" : 4,
        "endLineNumber" : 221,
        "endColumnNumber" : 72
      },
      "nodeContext" : "return encoded == null ? null : Base64.getDecoder().decode(encoded);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Base64"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 221,
    "startColumnNumber" : 36,
    "endLineNumber" : 221,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}