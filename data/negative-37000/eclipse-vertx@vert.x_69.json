{
  "id" : 69,
  "expression" : "getClass()",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/metrics/MetricsOptions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getClass()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 93,
      "startColumnNumber" : 21,
      "endLineNumber" : 93,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 93,
        "startColumnNumber" : 21,
        "endLineNumber" : 93,
        "endColumnNumber" : 47
      },
      "nodeContext" : "getClass() != o.getClass()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 47
      },
      "nodeContext" : "o == null || getClass() != o.getClass()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 62
      },
      "nodeContext" : "if (o == null || getClass() != o.getClass()) return false;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 91,
        "startColumnNumber" : 34,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (this == o)   return true;\n  if (o == null || getClass() != o.getClass())   return false;\n  MetricsOptions that=(MetricsOptions)o;\n  if (enabled != that.enabled)   return false;\n  return !(json != null ? !json.equals(that.json) : that.json != null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean equals(Object o){\n  if (this == o)   return true;\n  if (o == null || getClass() != o.getClass())   return false;\n  MetricsOptions that=(MetricsOptions)o;\n  if (enabled != that.enabled)   return false;\n  return !(json != null ? !json.equals(that.json) : that.json != null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 62
      },
      "nodeContext" : "if (o == null || getClass() != o.getClass()) return false;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 93,
    "startColumnNumber" : 21,
    "endLineNumber" : 93,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}