{
  "id" : 284,
  "expression" : "callback.metadata",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/clients/producer/internals/ProducerBatchTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "callback.metadata",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 73,
      "startColumnNumber" : 19,
      "endLineNumber" : 73,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 37
      },
      "nodeContext" : "assertNull(callback.metadata)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertNull(callback.metadata);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 63,
        "startColumnNumber" : 50,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ProducerBatch batch=new ProducerBatch(new TopicPartition(\"topic\",1),memoryRecordsBuilder,now);\n  MockCallback callback=new MockCallback();\n  FutureRecordMetadata future=batch.tryAppend(now,null,new byte[10],Record.EMPTY_HEADERS,callback,now);\n  KafkaException exception=new KafkaException();\n  batch.abort(exception);\n  assertTrue(future.isDone());\n  assertEquals(1,callback.invocations);\n  assertEquals(exception,callback.exception);\n  assertNull(callback.metadata);\n  assertFalse(batch.complete(500L,2342342341L));\n  assertFalse(batch.completeExceptionally(new KafkaException(),index -> new KafkaException()));\n  assertEquals(1,callback.invocations);\n  assertTrue(future.isDone());\n  try {\n    future.get();\n    fail(\"Future should have thrown\");\n  }\n catch (  ExecutionException e) {\n    assertEquals(exception,e.getCause());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBatchAbort() throws Exception {\n  ProducerBatch batch=new ProducerBatch(new TopicPartition(\"topic\",1),memoryRecordsBuilder,now);\n  MockCallback callback=new MockCallback();\n  FutureRecordMetadata future=batch.tryAppend(now,null,new byte[10],Record.EMPTY_HEADERS,callback,now);\n  KafkaException exception=new KafkaException();\n  batch.abort(exception);\n  assertTrue(future.isDone());\n  assertEquals(1,callback.invocations);\n  assertEquals(exception,callback.exception);\n  assertNull(callback.metadata);\n  assertFalse(batch.complete(500L,2342342341L));\n  assertFalse(batch.completeExceptionally(new KafkaException(),index -> new KafkaException()));\n  assertEquals(1,callback.invocations);\n  assertTrue(future.isDone());\n  try {\n    future.get();\n    fail(\"Future should have thrown\");\n  }\n catch (  ExecutionException e) {\n    assertEquals(exception,e.getCause());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertNull(callback.metadata);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.apache.kafka.clients.producer.RecordMetadata"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 73,
    "startColumnNumber" : 19,
    "endLineNumber" : 73,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}