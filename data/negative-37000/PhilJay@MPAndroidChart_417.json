{
  "id" : 417,
  "expression" : "(point.y - point.dy)",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "43046425fc2ed73d0d3f177759706116e02a9053",
  "filePath" : "/MPChartLib/src/com/github/mikephil/charting/renderer/LineChartRenderer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(point.y - point.dy)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 144,
      "startColumnNumber" : 28,
      "endLineNumber" : 144,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 144,
        "startColumnNumber" : 28,
        "endLineNumber" : 144,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(point.y - point.dy) * phaseY",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 142,
        "startColumnNumber" : 20,
        "endLineNumber" : 144,
        "endColumnNumber" : 85
      },
      "nodeContext" : "spline.cubicTo(prev.x + prev.dx,(prev.y + prev.dy) * phaseY,point.x - point.dx,(point.y - point.dy) * phaseY,point.x,point.y * phaseY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 142,
        "startColumnNumber" : 20,
        "endLineNumber" : 144,
        "endColumnNumber" : 86
      },
      "nodeContext" : "spline.cubicTo(prev.x + prev.dx,(prev.y + prev.dy) * phaseY,point.x - point.dx,(point.y - point.dy) * phaseY,point.x,point.y * phaseY);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 140,
        "startColumnNumber" : 21,
        "endLineNumber" : 145,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  CPoint prev=points.get(j - 1);\n  spline.cubicTo(prev.x + prev.dx,(prev.y + prev.dy) * phaseY,point.x - point.dx,(point.y - point.dy) * phaseY,point.x,point.y * phaseY);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 145,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (j == 0) {\n  spline.moveTo(point.x,point.y * phaseY);\n}\n else {\n  CPoint prev=points.get(j - 1);\n  spline.cubicTo(prev.x + prev.dx,(prev.y + prev.dy) * phaseY,point.x - point.dx,(point.y - point.dy) * phaseY,point.x,point.y * phaseY);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1291,
        "startLineNumber" : 115,
        "startColumnNumber" : 61,
        "endLineNumber" : 146,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  CPoint point=points.get(j);\n  if (j == 0) {\n    CPoint next=points.get(j + 1);\n    point.dx=((next.x - point.x) * intensity);\n    point.dy=((next.y - point.y) * intensity);\n  }\n else   if (j == points.size() - 1) {\n    CPoint prev=points.get(j - 1);\n    point.dx=((point.x - prev.x) * intensity);\n    point.dy=((point.y - prev.y) * intensity);\n  }\n else {\n    CPoint next=points.get(j + 1);\n    CPoint prev=points.get(j - 1);\n    point.dx=((next.x - prev.x) * intensity);\n    point.dy=((next.y - prev.y) * intensity);\n  }\n  if (j == 0) {\n    spline.moveTo(point.x,point.y * phaseY);\n  }\n else {\n    CPoint prev=points.get(j - 1);\n    spline.cubicTo(prev.x + prev.dx,(prev.y + prev.dy) * phaseY,point.x - point.dx,(point.y - point.dy) * phaseY,point.x,point.y * phaseY);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1340,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 146,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < points.size() * phaseX; j++) {\n  CPoint point=points.get(j);\n  if (j == 0) {\n    CPoint next=points.get(j + 1);\n    point.dx=((next.x - point.x) * intensity);\n    point.dy=((next.y - point.y) * intensity);\n  }\n else   if (j == points.size() - 1) {\n    CPoint prev=points.get(j - 1);\n    point.dx=((point.x - prev.x) * intensity);\n    point.dy=((point.y - prev.y) * intensity);\n  }\n else {\n    CPoint next=points.get(j + 1);\n    CPoint prev=points.get(j - 1);\n    point.dx=((next.x - prev.x) * intensity);\n    point.dy=((next.y - prev.y) * intensity);\n  }\n  if (j == 0) {\n    spline.moveTo(point.x,point.y * phaseY);\n  }\n else {\n    CPoint prev=points.get(j - 1);\n    spline.cubicTo(prev.x + prev.dx,(prev.y + prev.dy) * phaseY,point.x - point.dx,(point.y - point.dy) * phaseY,point.x,point.y * phaseY);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 255,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1364,
        "startLineNumber" : 114,
        "startColumnNumber" : 31,
        "endLineNumber" : 147,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int j=0; j < points.size() * phaseX; j++) {\n    CPoint point=points.get(j);\n    if (j == 0) {\n      CPoint next=points.get(j + 1);\n      point.dx=((next.x - point.x) * intensity);\n      point.dy=((next.y - point.y) * intensity);\n    }\n else     if (j == points.size() - 1) {\n      CPoint prev=points.get(j - 1);\n      point.dx=((point.x - prev.x) * intensity);\n      point.dy=((point.y - prev.y) * intensity);\n    }\n else {\n      CPoint next=points.get(j + 1);\n      CPoint prev=points.get(j - 1);\n      point.dx=((next.x - prev.x) * intensity);\n      point.dy=((next.y - prev.y) * intensity);\n    }\n    if (j == 0) {\n      spline.moveTo(point.x,point.y * phaseY);\n    }\n else {\n      CPoint prev=points.get(j - 1);\n      spline.cubicTo(prev.x + prev.dx,(prev.y + prev.dy) * phaseY,point.x - point.dx,(point.y - point.dy) * phaseY,point.x,point.y * phaseY);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 256,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1387,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 147,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (points.size() > 1) {\n  for (int j=0; j < points.size() * phaseX; j++) {\n    CPoint point=points.get(j);\n    if (j == 0) {\n      CPoint next=points.get(j + 1);\n      point.dx=((next.x - point.x) * intensity);\n      point.dy=((next.y - point.y) * intensity);\n    }\n else     if (j == points.size() - 1) {\n      CPoint prev=points.get(j - 1);\n      point.dx=((point.x - prev.x) * intensity);\n      point.dy=((point.y - prev.y) * intensity);\n    }\n else {\n      CPoint next=points.get(j + 1);\n      CPoint prev=points.get(j - 1);\n      point.dx=((next.x - prev.x) * intensity);\n      point.dy=((next.y - prev.y) * intensity);\n    }\n    if (j == 0) {\n      spline.moveTo(point.x,point.y * phaseY);\n    }\n else {\n      CPoint prev=points.get(j - 1);\n      spline.cubicTo(prev.x + prev.dx,(prev.y + prev.dy) * phaseY,point.x - point.dx,(point.y - point.dy) * phaseY,point.x,point.y * phaseY);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 262,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2354,
        "startLineNumber" : 92,
        "startColumnNumber" : 86,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  float phaseX=mAnimator.getPhaseX();\n  float phaseY=mAnimator.getPhaseY();\n  mRenderPaint.setColor(dataSet.getColor());\n  float intensity=dataSet.getCubicIntensity();\n  Path spline=new Path();\n  ArrayList<CPoint> points=new ArrayList<CPoint>();\n  for (  Entry e : entries) {\n    if (e != null)     points.add(new CPoint(e.getXIndex(),e.getVal()));\n  }\n  if (points.size() > 1) {\n    for (int j=0; j < points.size() * phaseX; j++) {\n      CPoint point=points.get(j);\n      if (j == 0) {\n        CPoint next=points.get(j + 1);\n        point.dx=((next.x - point.x) * intensity);\n        point.dy=((next.y - point.y) * intensity);\n      }\n else       if (j == points.size() - 1) {\n        CPoint prev=points.get(j - 1);\n        point.dx=((point.x - prev.x) * intensity);\n        point.dy=((point.y - prev.y) * intensity);\n      }\n else {\n        CPoint next=points.get(j + 1);\n        CPoint prev=points.get(j - 1);\n        point.dx=((next.x - prev.x) * intensity);\n        point.dy=((next.y - prev.y) * intensity);\n      }\n      if (j == 0) {\n        spline.moveTo(point.x,point.y * phaseY);\n      }\n else {\n        CPoint prev=points.get(j - 1);\n        spline.cubicTo(prev.x + prev.dx,(prev.y + prev.dy) * phaseY,point.x - point.dx,(point.y - point.dy) * phaseY,point.x,point.y * phaseY);\n      }\n    }\n  }\n  if (dataSet.isDrawFilledEnabled()) {\n    drawCubicFill(dataSet,spline);\n  }\n else {\n    mRenderPaint.setStyle(Paint.Style.STROKE);\n  }\n  trans.pathValueToPixel(spline);\n  c.drawPath(spline,mRenderPaint);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 379,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2436,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void drawCubic(Canvas c,LineDataSet dataSet,ArrayList<Entry> entries){\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  float phaseX=mAnimator.getPhaseX();\n  float phaseY=mAnimator.getPhaseY();\n  mRenderPaint.setColor(dataSet.getColor());\n  float intensity=dataSet.getCubicIntensity();\n  Path spline=new Path();\n  ArrayList<CPoint> points=new ArrayList<CPoint>();\n  for (  Entry e : entries) {\n    if (e != null)     points.add(new CPoint(e.getXIndex(),e.getVal()));\n  }\n  if (points.size() > 1) {\n    for (int j=0; j < points.size() * phaseX; j++) {\n      CPoint point=points.get(j);\n      if (j == 0) {\n        CPoint next=points.get(j + 1);\n        point.dx=((next.x - point.x) * intensity);\n        point.dy=((next.y - point.y) * intensity);\n      }\n else       if (j == points.size() - 1) {\n        CPoint prev=points.get(j - 1);\n        point.dx=((point.x - prev.x) * intensity);\n        point.dy=((point.y - prev.y) * intensity);\n      }\n else {\n        CPoint next=points.get(j + 1);\n        CPoint prev=points.get(j - 1);\n        point.dx=((next.x - prev.x) * intensity);\n        point.dy=((next.y - prev.y) * intensity);\n      }\n      if (j == 0) {\n        spline.moveTo(point.x,point.y * phaseY);\n      }\n else {\n        CPoint prev=points.get(j - 1);\n        spline.cubicTo(prev.x + prev.dx,(prev.y + prev.dy) * phaseY,point.x - point.dx,(point.y - point.dy) * phaseY,point.x,point.y * phaseY);\n      }\n    }\n  }\n  if (dataSet.isDrawFilledEnabled()) {\n    drawCubicFill(dataSet,spline);\n  }\n else {\n    mRenderPaint.setStyle(Paint.Style.STROKE);\n  }\n  trans.pathValueToPixel(spline);\n  c.drawPath(spline,mRenderPaint);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 398,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 144,
        "startColumnNumber" : 28,
        "endLineNumber" : 144,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(point.y - point.dy) * phaseY",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 144,
    "startColumnNumber" : 28,
    "endLineNumber" : 144,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}