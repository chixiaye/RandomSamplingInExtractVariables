{
  "id" : 161,
  "expression" : "getUniqueSymbol(programTwo,\"entry\")",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/clipboard/CopyPasteFunctionInfoTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getUniqueSymbol(programTwo,\"entry\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 198,
      "startColumnNumber" : 18,
      "endLineNumber" : 198,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 198,
        "startColumnNumber" : 9,
        "endLineNumber" : 198,
        "endColumnNumber" : 54
      },
      "nodeContext" : "symbol=getUniqueSymbol(programTwo,\"entry\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 198,
        "startColumnNumber" : 2,
        "endLineNumber" : 198,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Symbol symbol=getUniqueSymbol(programTwo,\"entry\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1623,
        "startLineNumber" : 183,
        "startColumnNumber" : 57,
        "endLineNumber" : 225,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Address addr=getAddr(programOne,0x01006420);\n  goToAddr(toolOne,addr);\n  click1();\n  toolOne.firePluginEvent(new ProgramSelectionPluginEvent(\"test\",new ProgramSelection(addr,addr),programOne));\n  ClipboardPlugin plugin=getPlugin(toolOne,ClipboardPlugin.class);\n  ClipboardContentProviderService service=getCodeBrowserClipboardContentProviderService(plugin);\n  plugin.copySpecial(service,CodeBrowserClipboardProvider.LABELS_COMMENTS_TYPE);\n  Symbol symbol=getUniqueSymbol(programTwo,\"entry\");\n  Address entryAddr=symbol.getAddress();\n  goToAddr(toolTwo,entryAddr);\n  click2();\n  paste(toolTwo);\n  CodeBrowserPlugin cb=getPlugin(toolTwo,CodeBrowserPlugin.class);\n  cb.goToField(entryAddr,PlateFieldFactory.FIELD_NAME,0,0);\n  ListingTextField f=(ListingTextField)cb.getCurrentField();\n  assertEquals(4,f.getNumRows());\n  assertTrue(f.getText().indexOf(\"FUNCTION\") > 0);\n  assertTrue(f.getText().indexOf(\"My function comments for entry\") > 0);\n  undo(programTwo);\n  cb.goToField(entryAddr,PlateFieldFactory.FIELD_NAME,0,0);\n  f=(ListingTextField)cb.getCurrentField();\n  assertEquals(3,f.getNumRows());\n  assertTrue(f.getText().indexOf(\"FUNCTION\") > 0);\n  redo(programTwo);\n  cb.goToField(entryAddr,PlateFieldFactory.FIELD_NAME,0,0);\n  f=(ListingTextField)cb.getCurrentField();\n  assertEquals(4,f.getNumRows());\n  assertTrue(f.getText().indexOf(\"FUNCTION\") > 0);\n  assertTrue(f.getText().indexOf(\"My function comments for entry\") > 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1687,
        "startLineNumber" : 182,
        "startColumnNumber" : 1,
        "endLineNumber" : 225,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testPasteFunctionComment() throws Exception {\n  Address addr=getAddr(programOne,0x01006420);\n  goToAddr(toolOne,addr);\n  click1();\n  toolOne.firePluginEvent(new ProgramSelectionPluginEvent(\"test\",new ProgramSelection(addr,addr),programOne));\n  ClipboardPlugin plugin=getPlugin(toolOne,ClipboardPlugin.class);\n  ClipboardContentProviderService service=getCodeBrowserClipboardContentProviderService(plugin);\n  plugin.copySpecial(service,CodeBrowserClipboardProvider.LABELS_COMMENTS_TYPE);\n  Symbol symbol=getUniqueSymbol(programTwo,\"entry\");\n  Address entryAddr=symbol.getAddress();\n  goToAddr(toolTwo,entryAddr);\n  click2();\n  paste(toolTwo);\n  CodeBrowserPlugin cb=getPlugin(toolTwo,CodeBrowserPlugin.class);\n  cb.goToField(entryAddr,PlateFieldFactory.FIELD_NAME,0,0);\n  ListingTextField f=(ListingTextField)cb.getCurrentField();\n  assertEquals(4,f.getNumRows());\n  assertTrue(f.getText().indexOf(\"FUNCTION\") > 0);\n  assertTrue(f.getText().indexOf(\"My function comments for entry\") > 0);\n  undo(programTwo);\n  cb.goToField(entryAddr,PlateFieldFactory.FIELD_NAME,0,0);\n  f=(ListingTextField)cb.getCurrentField();\n  assertEquals(3,f.getNumRows());\n  assertTrue(f.getText().indexOf(\"FUNCTION\") > 0);\n  redo(programTwo);\n  cb.goToField(entryAddr,PlateFieldFactory.FIELD_NAME,0,0);\n  f=(ListingTextField)cb.getCurrentField();\n  assertEquals(4,f.getNumRows());\n  assertTrue(f.getText().indexOf(\"FUNCTION\") > 0);\n  assertTrue(f.getText().indexOf(\"My function comments for entry\") > 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 198,
        "startColumnNumber" : 2,
        "endLineNumber" : 198,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Symbol symbol=getUniqueSymbol(programTwo,\"entry\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "ghidra.program.model.symbol.Symbol"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 198,
    "startColumnNumber" : 18,
    "endLineNumber" : 198,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}