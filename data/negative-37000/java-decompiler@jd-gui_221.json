{
  "id" : 221,
  "expression" : "entries.size() > 0",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/service/treenode/PackageTreeNodeFactoryProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entries.size() > 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 45,
      "startColumnNumber" : 12,
      "endLineNumber" : 45,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (entries.size() > 0) {\n  node.add(new DefaultMutableTreeNode());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 931,
        "startLineNumber" : 29,
        "startColumnNumber" : 124,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int lastSlashIndex=entry.getPath().lastIndexOf(\"/\");\n  Collection<Container.Entry> entries=entry.getChildren();\n  while (entries.size() == 1) {\n    Container.Entry child=entries.iterator().next();\n    if (!child.isDirectory() || (api.getTreeNodeFactory(child) != this) || (entry.getContainer() != child.getContainer()))     break;\n    entry=child;\n    entries=entry.getChildren();\n  }\n  String label=entry.getPath().substring(lastSlashIndex + 1).replace(\"/\",\".\");\n  String location=new File(entry.getUri()).getPath();\n  T node=(T)new TreeNode(entry,new TreeNodeBean(label,\"Location: \" + location,getIcon(),getOpenIcon()));\n  if (entries.size() > 0) {\n    node.add(new DefaultMutableTreeNode());\n  }\n  return node;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public <T extends DefaultMutableTreeNode & ContainerEntryGettable & UriGettable>T make(API api,Container.Entry entry){\n  int lastSlashIndex=entry.getPath().lastIndexOf(\"/\");\n  Collection<Container.Entry> entries=entry.getChildren();\n  while (entries.size() == 1) {\n    Container.Entry child=entries.iterator().next();\n    if (!child.isDirectory() || (api.getTreeNodeFactory(child) != this) || (entry.getContainer() != child.getContainer()))     break;\n    entry=child;\n    entries=entry.getChildren();\n  }\n  String label=entry.getPath().substring(lastSlashIndex + 1).replace(\"/\",\".\");\n  String location=new File(entry.getUri()).getPath();\n  T node=(T)new TreeNode(entry,new TreeNodeBean(label,\"Location: \" + location,getIcon(),getOpenIcon()));\n  if (entries.size() > 0) {\n    node.add(new DefaultMutableTreeNode());\n  }\n  return node;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (entries.size() > 0) {\n  node.add(new DefaultMutableTreeNode());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 45,
    "startColumnNumber" : 12,
    "endLineNumber" : 45,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}