{
  "id" : 63,
  "expression" : "new TypeResolver().where(new TypeCapture<Map<List<Integer>,T>>(){\n}\n.capture(),new TypeCapture<Map<?,String>>(){\n}\n.capture()).resolveType(subtype)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/reflect/TypeResolverTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new TypeResolver().where(new TypeCapture<Map<List<Integer>,T>>(){\n}\n.capture(),new TypeCapture<Map<?,String>>(){\n}\n.capture()).resolveType(subtype)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 211,
      "startLineNumber" : 265,
      "startColumnNumber" : 8,
      "endLineNumber" : 269,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 38,
    "astHeight" : 9,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 263,
        "startColumnNumber" : 4,
        "endLineNumber" : 269,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(new TypeCapture<TypedListKeyMap<String>>(){\n}\n.capture(),new TypeResolver().where(new TypeCapture<Map<List<Integer>,T>>(){\n}\n.capture(),new TypeCapture<Map<?,String>>(){\n}\n.capture()).resolveType(subtype))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 263,
        "startColumnNumber" : 4,
        "endLineNumber" : 269,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(new TypeCapture<TypedListKeyMap<String>>(){\n}\n.capture(),new TypeResolver().where(new TypeCapture<Map<List<Integer>,T>>(){\n}\n.capture(),new TypeCapture<Map<?,String>>(){\n}\n.capture()).resolveType(subtype));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 53,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 261,
        "startColumnNumber" : 61,
        "endLineNumber" : 270,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Type subtype=new TypeCapture<TypedListKeyMap<T>>(){\n  }\n.capture();\n  assertEquals(new TypeCapture<TypedListKeyMap<String>>(){\n  }\n.capture(),new TypeResolver().where(new TypeCapture<Map<List<Integer>,T>>(){\n  }\n.capture(),new TypeCapture<Map<?,String>>(){\n  }\n.capture()).resolveType(subtype));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 261,
        "startColumnNumber" : 2,
        "endLineNumber" : 270,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public <T>void testWhere_mapFromWildcardToParameterized(){\n  Type subtype=new TypeCapture<TypedListKeyMap<T>>(){\n  }\n.capture();\n  assertEquals(new TypeCapture<TypedListKeyMap<String>>(){\n  }\n.capture(),new TypeResolver().where(new TypeCapture<Map<List<Integer>,T>>(){\n  }\n.capture(),new TypeCapture<Map<?,String>>(){\n  }\n.capture()).resolveType(subtype));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 263,
        "startColumnNumber" : 4,
        "endLineNumber" : 269,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(new TypeCapture<TypedListKeyMap<String>>(){\n}\n.capture(),new TypeResolver().where(new TypeCapture<Map<List<Integer>,T>>(){\n}\n.capture(),new TypeCapture<Map<?,String>>(){\n}\n.capture()).resolveType(subtype))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 52,
      "astHeight" : 10
    },
    "tokenLength" : 10,
    "type" : "java.lang.reflect.Type"
  } ],
  "positionList" : [ {
    "charLength" : 211,
    "startLineNumber" : 265,
    "startColumnNumber" : 8,
    "endLineNumber" : 269,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}