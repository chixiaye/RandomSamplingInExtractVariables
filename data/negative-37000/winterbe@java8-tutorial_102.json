{
  "id" : 102,
  "expression" : "e.getMessage()",
  "projectName" : "winterbe@java8-tutorial",
  "commitID" : "89a257129873974e4beb658115e854649b9204b2",
  "filePath" : "/src/com/winterbe/java8/samples/misc/Math1.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e.getMessage()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 18,
      "startColumnNumber" : 31,
      "endLineNumber" : 18,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 18,
        "endColumnNumber" : 46
      },
      "nodeContext" : "System.out.println(e.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 18,
        "endColumnNumber" : 47
      },
      "nodeContext" : "System.out.println(e.getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 17,
        "startColumnNumber" : 40,
        "endLineNumber" : 19,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.out.println(e.getMessage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (NumberFormatException e) {\n  System.out.println(e.getMessage());\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Integer.parseUnsignedInt(\"-123\",10);\n}\n catch (NumberFormatException e) {\n  System.out.println(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 13,
        "startColumnNumber" : 42,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Integer.parseUnsignedInt(\"-123\",10);\n  }\n catch (  NumberFormatException e) {\n    System.out.println(e.getMessage());\n  }\n  long maxUnsignedInt=(1l << 32) - 1;\n  System.out.println(maxUnsignedInt);\n  String string=String.valueOf(maxUnsignedInt);\n  int unsignedInt=Integer.parseUnsignedInt(string,10);\n  System.out.println(unsignedInt);\n  String string2=Integer.toUnsignedString(unsignedInt,10);\n  System.out.println(string2);\n  try {\n    Integer.parseInt(string,10);\n  }\n catch (  NumberFormatException e) {\n    System.err.println(\"could not parse signed int of \" + maxUnsignedInt);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void testUnsignedInt(){\n  try {\n    Integer.parseUnsignedInt(\"-123\",10);\n  }\n catch (  NumberFormatException e) {\n    System.out.println(e.getMessage());\n  }\n  long maxUnsignedInt=(1l << 32) - 1;\n  System.out.println(maxUnsignedInt);\n  String string=String.valueOf(maxUnsignedInt);\n  int unsignedInt=Integer.parseUnsignedInt(string,10);\n  System.out.println(unsignedInt);\n  String string2=Integer.toUnsignedString(unsignedInt,10);\n  System.out.println(string2);\n  try {\n    Integer.parseInt(string,10);\n  }\n catch (  NumberFormatException e) {\n    System.err.println(\"could not parse signed int of \" + maxUnsignedInt);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 18,
        "endColumnNumber" : 47
      },
      "nodeContext" : "System.out.println(e.getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 18,
    "startColumnNumber" : 31,
    "endLineNumber" : 18,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}