{
  "id" : 64,
  "expression" : "executionException",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/common/KafkaFutureTest.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "executionException",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 98,
      "startColumnNumber" : 40,
      "endLineNumber" : 98,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 98,
        "startColumnNumber" : 40,
        "endLineNumber" : 98,
        "endColumnNumber" : 69
      },
      "nodeContext" : "executionException.getCause()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 98,
        "startColumnNumber" : 40,
        "endLineNumber" : 98,
        "endColumnNumber" : 80
      },
      "nodeContext" : "executionException.getCause().getClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(expectedException,executionException.getCause().getClass())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertEquals(expectedException,executionException.getCause().getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 96,
        "startColumnNumber" : 68,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Throwable awaitAndAssertFailure(KafkaFuture<?> future,Class<? extends Throwable> expectedException,String expectedMessage){\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertEquals(expectedException,executionException.getCause().getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.ExecutionException"
  }, {
    "nodeContext" : "executionException",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 99,
      "startColumnNumber" : 38,
      "endLineNumber" : 99,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 99,
        "startColumnNumber" : 38,
        "endLineNumber" : 99,
        "endColumnNumber" : 67
      },
      "nodeContext" : "executionException.getCause()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 99,
        "startColumnNumber" : 38,
        "endLineNumber" : 99,
        "endColumnNumber" : 80
      },
      "nodeContext" : "executionException.getCause().getMessage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(expectedMessage,executionException.getCause().getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertEquals(expectedMessage,executionException.getCause().getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 96,
        "startColumnNumber" : 68,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Throwable awaitAndAssertFailure(KafkaFuture<?> future,Class<? extends Throwable> expectedException,String expectedMessage){\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertEquals(expectedMessage,executionException.getCause().getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.ExecutionException"
  }, {
    "nodeContext" : "executionException",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 102,
      "startColumnNumber" : 40,
      "endLineNumber" : 102,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 102,
        "startColumnNumber" : 40,
        "endLineNumber" : 102,
        "endColumnNumber" : 69
      },
      "nodeContext" : "executionException.getCause()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 102,
        "startColumnNumber" : 40,
        "endLineNumber" : 102,
        "endColumnNumber" : 80
      },
      "nodeContext" : "executionException.getCause().getClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(expectedException,executionException.getCause().getClass())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertEquals(expectedException,executionException.getCause().getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 96,
        "startColumnNumber" : 68,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Throwable awaitAndAssertFailure(KafkaFuture<?> future,Class<? extends Throwable> expectedException,String expectedMessage){\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertEquals(expectedException,executionException.getCause().getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.ExecutionException"
  }, {
    "nodeContext" : "executionException",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 103,
      "startColumnNumber" : 38,
      "endLineNumber" : 103,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 103,
        "startColumnNumber" : 38,
        "endLineNumber" : 103,
        "endColumnNumber" : 67
      },
      "nodeContext" : "executionException.getCause()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 103,
        "startColumnNumber" : 38,
        "endLineNumber" : 103,
        "endColumnNumber" : 80
      },
      "nodeContext" : "executionException.getCause().getMessage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(expectedMessage,executionException.getCause().getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertEquals(expectedMessage,executionException.getCause().getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 96,
        "startColumnNumber" : 68,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Throwable awaitAndAssertFailure(KafkaFuture<?> future,Class<? extends Throwable> expectedException,String expectedMessage){\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertEquals(expectedMessage,executionException.getCause().getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.ExecutionException"
  }, {
    "nodeContext" : "executionException",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 106,
      "startColumnNumber" : 40,
      "endLineNumber" : 106,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 106,
        "startColumnNumber" : 40,
        "endLineNumber" : 106,
        "endColumnNumber" : 69
      },
      "nodeContext" : "executionException.getCause()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 106,
        "startColumnNumber" : 40,
        "endLineNumber" : 106,
        "endColumnNumber" : 80
      },
      "nodeContext" : "executionException.getCause().getClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(expectedException,executionException.getCause().getClass())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertEquals(expectedException,executionException.getCause().getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 96,
        "startColumnNumber" : 68,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Throwable awaitAndAssertFailure(KafkaFuture<?> future,Class<? extends Throwable> expectedException,String expectedMessage){\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertEquals(expectedException,executionException.getCause().getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.ExecutionException"
  }, {
    "nodeContext" : "executionException",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 107,
      "startColumnNumber" : 38,
      "endLineNumber" : 107,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 107,
        "startColumnNumber" : 38,
        "endLineNumber" : 107,
        "endColumnNumber" : 67
      },
      "nodeContext" : "executionException.getCause()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 107,
        "startColumnNumber" : 38,
        "endLineNumber" : 107,
        "endColumnNumber" : 80
      },
      "nodeContext" : "executionException.getCause().getMessage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(expectedMessage,executionException.getCause().getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertEquals(expectedMessage,executionException.getCause().getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 96,
        "startColumnNumber" : 68,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Throwable awaitAndAssertFailure(KafkaFuture<?> future,Class<? extends Throwable> expectedException,String expectedMessage){\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertEquals(expectedMessage,executionException.getCause().getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.ExecutionException"
  }, {
    "nodeContext" : "executionException",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 108,
      "startColumnNumber" : 15,
      "endLineNumber" : 108,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 108,
        "startColumnNumber" : 15,
        "endLineNumber" : 108,
        "endColumnNumber" : 44
      },
      "nodeContext" : "executionException.getCause()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 45
      },
      "nodeContext" : "return executionException.getCause();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 96,
        "startColumnNumber" : 68,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Throwable awaitAndAssertFailure(KafkaFuture<?> future,Class<? extends Throwable> expectedException,String expectedMessage){\n  ExecutionException executionException=assertThrows(ExecutionException.class,() -> future.get(5,TimeUnit.MINUTES));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.get());\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  executionException=assertThrows(ExecutionException.class,() -> future.getNow(null));\n  assertEquals(expectedException,executionException.getCause().getClass());\n  assertEquals(expectedMessage,executionException.getCause().getMessage());\n  return executionException.getCause();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 45
      },
      "nodeContext" : "return executionException.getCause();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.ExecutionException"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 98,
    "startColumnNumber" : 40,
    "endLineNumber" : 98,
    "endColumnNumber" : 58
  }, {
    "charLength" : 18,
    "startLineNumber" : 99,
    "startColumnNumber" : 38,
    "endLineNumber" : 99,
    "endColumnNumber" : 56
  }, {
    "charLength" : 18,
    "startLineNumber" : 102,
    "startColumnNumber" : 40,
    "endLineNumber" : 102,
    "endColumnNumber" : 58
  }, {
    "charLength" : 18,
    "startLineNumber" : 103,
    "startColumnNumber" : 38,
    "endLineNumber" : 103,
    "endColumnNumber" : 56
  }, {
    "charLength" : 18,
    "startLineNumber" : 106,
    "startColumnNumber" : 40,
    "endLineNumber" : 106,
    "endColumnNumber" : 58
  }, {
    "charLength" : 18,
    "startLineNumber" : 107,
    "startColumnNumber" : 38,
    "endLineNumber" : 107,
    "endColumnNumber" : 56
  }, {
    "charLength" : 18,
    "startLineNumber" : 108,
    "startColumnNumber" : 15,
    "endLineNumber" : 108,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  } ]
}