{
  "id" : 305,
  "expression" : "xml.split(\"\\n\")",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/test/java/hudson/slaves/NodeListTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "xml.split(\"\\n\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 61,
      "startColumnNumber" : 23,
      "endLineNumber" : 61,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 61,
        "startColumnNumber" : 23,
        "endLineNumber" : 61,
        "endColumnNumber" : 45
      },
      "nodeContext" : "xml.split(\"\\n\").length",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 61,
        "startColumnNumber" : 23,
        "endLineNumber" : 61,
        "endColumnNumber" : 49
      },
      "nodeContext" : "xml.split(\"\\n\").length > 6",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertTrue(xml.split(\"\\n\").length > 6)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertTrue(xml.split(\"\\n\").length > 6);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  XmlFile x=new XmlFile(Jenkins.XSTREAM,tmp);\n  x.write(nl);\n  String xml=FileUtils.readFileToString(tmp,Charset.defaultCharset());\n  assertTrue(xml.split(\"\\n\").length > 6);\n  NodeList back=(NodeList)x.read();\n  assertEquals(1,back.size());\n  assertEquals(dummyNode.getClass(),back.get(0).getClass());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  XmlFile x=new XmlFile(Jenkins.XSTREAM,tmp);\n  x.write(nl);\n  String xml=FileUtils.readFileToString(tmp,Charset.defaultCharset());\n  assertTrue(xml.split(\"\\n\").length > 6);\n  NodeList back=(NodeList)x.read();\n  assertEquals(1,back.size());\n  assertEquals(dummyNode.getClass(),back.get(0).getClass());\n}\n  finally {\n  if (!tmp.delete()) {\n    System.out.println(\"unable to delete File: \" + tmp.getName());\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1254,
        "startLineNumber" : 46,
        "startColumnNumber" : 49,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Node dummyNode=mock(Node.class,withSettings().serializable().defaultAnswer(CALLS_REAL_METHODS));\n  when(dummyNode.getNodeName()).thenReturn(\"node1\");\n  Node ephemeralNode=mock(Node.class,withSettings().extraInterfaces(EphemeralNode.class).defaultAnswer(CALLS_REAL_METHODS));\n  when(ephemeralNode.getNodeName()).thenReturn(\"node2\");\n  NodeList nl=new NodeList(dummyNode,ephemeralNode);\n  File tmp=File.createTempFile(\"test\",\"test\");\n  try {\n    XmlFile x=new XmlFile(Jenkins.XSTREAM,tmp);\n    x.write(nl);\n    String xml=FileUtils.readFileToString(tmp,Charset.defaultCharset());\n    assertTrue(xml.split(\"\\n\").length > 6);\n    NodeList back=(NodeList)x.read();\n    assertEquals(1,back.size());\n    assertEquals(dummyNode.getClass(),back.get(0).getClass());\n  }\n  finally {\n    if (!tmp.delete()) {\n      System.out.println(\"unable to delete File: \" + tmp.getName());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1310,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void serialization() throws Exception {\n  Node dummyNode=mock(Node.class,withSettings().serializable().defaultAnswer(CALLS_REAL_METHODS));\n  when(dummyNode.getNodeName()).thenReturn(\"node1\");\n  Node ephemeralNode=mock(Node.class,withSettings().extraInterfaces(EphemeralNode.class).defaultAnswer(CALLS_REAL_METHODS));\n  when(ephemeralNode.getNodeName()).thenReturn(\"node2\");\n  NodeList nl=new NodeList(dummyNode,ephemeralNode);\n  File tmp=File.createTempFile(\"test\",\"test\");\n  try {\n    XmlFile x=new XmlFile(Jenkins.XSTREAM,tmp);\n    x.write(nl);\n    String xml=FileUtils.readFileToString(tmp,Charset.defaultCharset());\n    assertTrue(xml.split(\"\\n\").length > 6);\n    NodeList back=(NodeList)x.read();\n    assertEquals(1,back.size());\n    assertEquals(dummyNode.getClass(),back.get(0).getClass());\n  }\n  finally {\n    if (!tmp.delete()) {\n      System.out.println(\"unable to delete File: \" + tmp.getName());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertTrue(xml.split(\"\\n\").length > 6);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 61,
    "startColumnNumber" : 23,
    "endLineNumber" : 61,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}