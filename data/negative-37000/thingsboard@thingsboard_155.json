{
  "id" : 155,
  "expression" : "getCurrentUser()",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/main/java/org/thingsboard/server/controller/EntityRelationController.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getCurrentUser()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 89,
      "startColumnNumber" : 54,
      "endLineNumber" : 89,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 89,
        "startColumnNumber" : 54,
        "endLineNumber" : 89,
        "endColumnNumber" : 86
      },
      "nodeContext" : "getCurrentUser().getCustomerId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 70
      },
      "nodeContext" : "logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 90,
        "endColumnNumber" : 71
      },
      "nodeContext" : "logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 800,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  checkNotNull(relation);\n  checkEntityId(relation.getFrom(),Operation.WRITE);\n  checkEntityId(relation.getTo(),Operation.WRITE);\n  if (relation.getTypeGroup() == null) {\n    relation.setTypeGroup(RelationTypeGroup.COMMON);\n  }\n  relationService.saveRelation(getTenantId(),relation);\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n  sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1186,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  checkNotNull(relation);\n  checkEntityId(relation.getFrom(),Operation.WRITE);\n  checkEntityId(relation.getTo(),Operation.WRITE);\n  if (relation.getTypeGroup() == null) {\n    relation.setTypeGroup(RelationTypeGroup.COMMON);\n  }\n  relationService.saveRelation(getTenantId(),relation);\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n  sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n}\n catch (Exception e) {\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  throw handleException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 79,
        "startColumnNumber" : 95,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    checkNotNull(relation);\n    checkEntityId(relation.getFrom(),Operation.WRITE);\n    checkEntityId(relation.getTo(),Operation.WRITE);\n    if (relation.getTypeGroup() == null) {\n      relation.setTypeGroup(RelationTypeGroup.COMMON);\n    }\n    relationService.saveRelation(getTenantId(),relation);\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n  }\n catch (  Exception e) {\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    throw handleException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ApiOperation(value=\"Create Relation (saveRelation)\",notes=\"Creates or updates a relation between two entities in the platform. \" + \"Relations unique key is a combination of from/to entity id and relation type group and relation type. \" + SECURITY_CHECKS_ENTITIES_DESCRIPTION) @PreAuthorize(\"hasAnyAuthority('SYS_ADMIN', 'TENANT_ADMIN', 'CUSTOMER_USER')\") @RequestMapping(value=\"/relation\",method=RequestMethod.POST) @ResponseStatus(value=HttpStatus.OK) public void saveRelation(@ApiParam(value=\"A JSON value representing the relation.\",required=true) @RequestBody EntityRelation relation) throws ThingsboardException {\n  try {\n    checkNotNull(relation);\n    checkEntityId(relation.getFrom(),Operation.WRITE);\n    checkEntityId(relation.getTo(),Operation.WRITE);\n    if (relation.getTypeGroup() == null) {\n      relation.setTypeGroup(RelationTypeGroup.COMMON);\n    }\n    relationService.saveRelation(getTenantId(),relation);\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n  }\n catch (  Exception e) {\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    throw handleException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 89,
        "startColumnNumber" : 54,
        "endLineNumber" : 89,
        "endColumnNumber" : 86
      },
      "nodeContext" : "getCurrentUser().getCustomerId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.server.service.security.model.SecurityUser"
  }, {
    "nodeContext" : "getCurrentUser()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 91,
      "startColumnNumber" : 52,
      "endLineNumber" : 91,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 91,
        "startColumnNumber" : 52,
        "endLineNumber" : 91,
        "endColumnNumber" : 84
      },
      "nodeContext" : "getCurrentUser().getCustomerId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 70
      },
      "nodeContext" : "logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 71
      },
      "nodeContext" : "logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 800,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  checkNotNull(relation);\n  checkEntityId(relation.getFrom(),Operation.WRITE);\n  checkEntityId(relation.getTo(),Operation.WRITE);\n  if (relation.getTypeGroup() == null) {\n    relation.setTypeGroup(RelationTypeGroup.COMMON);\n  }\n  relationService.saveRelation(getTenantId(),relation);\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n  sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1186,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  checkNotNull(relation);\n  checkEntityId(relation.getFrom(),Operation.WRITE);\n  checkEntityId(relation.getTo(),Operation.WRITE);\n  if (relation.getTypeGroup() == null) {\n    relation.setTypeGroup(RelationTypeGroup.COMMON);\n  }\n  relationService.saveRelation(getTenantId(),relation);\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n  sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n}\n catch (Exception e) {\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  throw handleException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 79,
        "startColumnNumber" : 95,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    checkNotNull(relation);\n    checkEntityId(relation.getFrom(),Operation.WRITE);\n    checkEntityId(relation.getTo(),Operation.WRITE);\n    if (relation.getTypeGroup() == null) {\n      relation.setTypeGroup(RelationTypeGroup.COMMON);\n    }\n    relationService.saveRelation(getTenantId(),relation);\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n  }\n catch (  Exception e) {\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    throw handleException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ApiOperation(value=\"Create Relation (saveRelation)\",notes=\"Creates or updates a relation between two entities in the platform. \" + \"Relations unique key is a combination of from/to entity id and relation type group and relation type. \" + SECURITY_CHECKS_ENTITIES_DESCRIPTION) @PreAuthorize(\"hasAnyAuthority('SYS_ADMIN', 'TENANT_ADMIN', 'CUSTOMER_USER')\") @RequestMapping(value=\"/relation\",method=RequestMethod.POST) @ResponseStatus(value=HttpStatus.OK) public void saveRelation(@ApiParam(value=\"A JSON value representing the relation.\",required=true) @RequestBody EntityRelation relation) throws ThingsboardException {\n  try {\n    checkNotNull(relation);\n    checkEntityId(relation.getFrom(),Operation.WRITE);\n    checkEntityId(relation.getTo(),Operation.WRITE);\n    if (relation.getTypeGroup() == null) {\n      relation.setTypeGroup(RelationTypeGroup.COMMON);\n    }\n    relationService.saveRelation(getTenantId(),relation);\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n  }\n catch (  Exception e) {\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    throw handleException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 91,
        "startColumnNumber" : 52,
        "endLineNumber" : 91,
        "endColumnNumber" : 84
      },
      "nodeContext" : "getCurrentUser().getCustomerId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.server.service.security.model.SecurityUser"
  }, {
    "nodeContext" : "getCurrentUser()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 96,
      "startColumnNumber" : 54,
      "endLineNumber" : 96,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 96,
        "startColumnNumber" : 54,
        "endLineNumber" : 96,
        "endColumnNumber" : 86
      },
      "nodeContext" : "getCurrentUser().getCustomerId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 67
      },
      "nodeContext" : "logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 68
      },
      "nodeContext" : "logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 361,
        "startLineNumber" : 95,
        "startColumnNumber" : 30,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  throw handleException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 95,
        "startColumnNumber" : 10,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  throw handleException(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1186,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  checkNotNull(relation);\n  checkEntityId(relation.getFrom(),Operation.WRITE);\n  checkEntityId(relation.getTo(),Operation.WRITE);\n  if (relation.getTypeGroup() == null) {\n    relation.setTypeGroup(RelationTypeGroup.COMMON);\n  }\n  relationService.saveRelation(getTenantId(),relation);\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n  sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n}\n catch (Exception e) {\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  throw handleException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 79,
        "startColumnNumber" : 95,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    checkNotNull(relation);\n    checkEntityId(relation.getFrom(),Operation.WRITE);\n    checkEntityId(relation.getTo(),Operation.WRITE);\n    if (relation.getTypeGroup() == null) {\n      relation.setTypeGroup(RelationTypeGroup.COMMON);\n    }\n    relationService.saveRelation(getTenantId(),relation);\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n  }\n catch (  Exception e) {\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    throw handleException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ApiOperation(value=\"Create Relation (saveRelation)\",notes=\"Creates or updates a relation between two entities in the platform. \" + \"Relations unique key is a combination of from/to entity id and relation type group and relation type. \" + SECURITY_CHECKS_ENTITIES_DESCRIPTION) @PreAuthorize(\"hasAnyAuthority('SYS_ADMIN', 'TENANT_ADMIN', 'CUSTOMER_USER')\") @RequestMapping(value=\"/relation\",method=RequestMethod.POST) @ResponseStatus(value=HttpStatus.OK) public void saveRelation(@ApiParam(value=\"A JSON value representing the relation.\",required=true) @RequestBody EntityRelation relation) throws ThingsboardException {\n  try {\n    checkNotNull(relation);\n    checkEntityId(relation.getFrom(),Operation.WRITE);\n    checkEntityId(relation.getTo(),Operation.WRITE);\n    if (relation.getTypeGroup() == null) {\n      relation.setTypeGroup(RelationTypeGroup.COMMON);\n    }\n    relationService.saveRelation(getTenantId(),relation);\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n  }\n catch (  Exception e) {\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    throw handleException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 96,
        "startColumnNumber" : 54,
        "endLineNumber" : 96,
        "endColumnNumber" : 86
      },
      "nodeContext" : "getCurrentUser().getCustomerId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.server.service.security.model.SecurityUser"
  }, {
    "nodeContext" : "getCurrentUser()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 98,
      "startColumnNumber" : 52,
      "endLineNumber" : 98,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 98,
        "startColumnNumber" : 52,
        "endLineNumber" : 98,
        "endColumnNumber" : 84
      },
      "nodeContext" : "getCurrentUser().getCustomerId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 99,
        "endColumnNumber" : 67
      },
      "nodeContext" : "logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 99,
        "endColumnNumber" : 68
      },
      "nodeContext" : "logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 361,
        "startLineNumber" : 95,
        "startColumnNumber" : 30,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  throw handleException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 95,
        "startColumnNumber" : 10,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  throw handleException(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1186,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  checkNotNull(relation);\n  checkEntityId(relation.getFrom(),Operation.WRITE);\n  checkEntityId(relation.getTo(),Operation.WRITE);\n  if (relation.getTypeGroup() == null) {\n    relation.setTypeGroup(RelationTypeGroup.COMMON);\n  }\n  relationService.saveRelation(getTenantId(),relation);\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n  sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n}\n catch (Exception e) {\n  logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n  throw handleException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 79,
        "startColumnNumber" : 95,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    checkNotNull(relation);\n    checkEntityId(relation.getFrom(),Operation.WRITE);\n    checkEntityId(relation.getTo(),Operation.WRITE);\n    if (relation.getTypeGroup() == null) {\n      relation.setTypeGroup(RelationTypeGroup.COMMON);\n    }\n    relationService.saveRelation(getTenantId(),relation);\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n  }\n catch (  Exception e) {\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    throw handleException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ApiOperation(value=\"Create Relation (saveRelation)\",notes=\"Creates or updates a relation between two entities in the platform. \" + \"Relations unique key is a combination of from/to entity id and relation type group and relation type. \" + SECURITY_CHECKS_ENTITIES_DESCRIPTION) @PreAuthorize(\"hasAnyAuthority('SYS_ADMIN', 'TENANT_ADMIN', 'CUSTOMER_USER')\") @RequestMapping(value=\"/relation\",method=RequestMethod.POST) @ResponseStatus(value=HttpStatus.OK) public void saveRelation(@ApiParam(value=\"A JSON value representing the relation.\",required=true) @RequestBody EntityRelation relation) throws ThingsboardException {\n  try {\n    checkNotNull(relation);\n    checkEntityId(relation.getFrom(),Operation.WRITE);\n    checkEntityId(relation.getTo(),Operation.WRITE);\n    if (relation.getTypeGroup() == null) {\n      relation.setTypeGroup(RelationTypeGroup.COMMON);\n    }\n    relationService.saveRelation(getTenantId(),relation);\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,null,relation);\n    sendRelationNotificationMsg(getTenantId(),relation,EdgeEventActionType.RELATION_ADD_OR_UPDATE);\n  }\n catch (  Exception e) {\n    logEntityAction(relation.getFrom(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    logEntityAction(relation.getTo(),null,getCurrentUser().getCustomerId(),ActionType.RELATION_ADD_OR_UPDATE,e,relation);\n    throw handleException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 98,
        "startColumnNumber" : 52,
        "endLineNumber" : 98,
        "endColumnNumber" : 84
      },
      "nodeContext" : "getCurrentUser().getCustomerId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.server.service.security.model.SecurityUser"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 89,
    "startColumnNumber" : 54,
    "endLineNumber" : 89,
    "endColumnNumber" : 70
  }, {
    "charLength" : 16,
    "startLineNumber" : 91,
    "startColumnNumber" : 52,
    "endLineNumber" : 91,
    "endColumnNumber" : 68
  }, {
    "charLength" : 16,
    "startLineNumber" : 96,
    "startColumnNumber" : 54,
    "endLineNumber" : 96,
    "endColumnNumber" : 70
  }, {
    "charLength" : 16,
    "startLineNumber" : 98,
    "startColumnNumber" : 52,
    "endLineNumber" : 98,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}