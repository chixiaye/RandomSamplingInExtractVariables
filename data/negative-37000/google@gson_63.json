{
  "id" : 63,
  "expression" : "json.contains(classWithObjectsJson)",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/functional/ObjectTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "json.contains(classWithObjectsJson)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 224,
      "startColumnNumber" : 15,
      "endLineNumber" : 224,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 224,
        "startColumnNumber" : 4,
        "endLineNumber" : 224,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertTrue(json.contains(classWithObjectsJson))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 224,
        "startColumnNumber" : 4,
        "endLineNumber" : 224,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertTrue(json.contains(classWithObjectsJson));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 651,
        "startLineNumber" : 213,
        "startColumnNumber" : 60,
        "endLineNumber" : 227,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ClassWithObjects classWithObjects=new ClassWithObjects();\n  BagOfPrimitives bagOfPrimitives=new BagOfPrimitives();\n  String stringValue=\"someStringValueInArray\";\n  String classWithObjectsJson=gson.toJson(classWithObjects);\n  String bagOfPrimitivesJson=gson.toJson(bagOfPrimitives);\n  ClassWithArray classWithArray=new ClassWithArray(new Object[]{stringValue,classWithObjects,bagOfPrimitives});\n  String json=gson.toJson(classWithArray);\n  assertTrue(json.contains(classWithObjectsJson));\n  assertTrue(json.contains(bagOfPrimitivesJson));\n  assertTrue(json.contains(\"\\\"\" + stringValue + \"\\\"\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 709,
        "startLineNumber" : 213,
        "startColumnNumber" : 2,
        "endLineNumber" : 227,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testArrayOfObjectsAsFields() throws Exception {\n  ClassWithObjects classWithObjects=new ClassWithObjects();\n  BagOfPrimitives bagOfPrimitives=new BagOfPrimitives();\n  String stringValue=\"someStringValueInArray\";\n  String classWithObjectsJson=gson.toJson(classWithObjects);\n  String bagOfPrimitivesJson=gson.toJson(bagOfPrimitives);\n  ClassWithArray classWithArray=new ClassWithArray(new Object[]{stringValue,classWithObjects,bagOfPrimitives});\n  String json=gson.toJson(classWithArray);\n  assertTrue(json.contains(classWithObjectsJson));\n  assertTrue(json.contains(bagOfPrimitivesJson));\n  assertTrue(json.contains(\"\\\"\" + stringValue + \"\\\"\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 224,
        "startColumnNumber" : 4,
        "endLineNumber" : 224,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertTrue(json.contains(classWithObjectsJson));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 224,
    "startColumnNumber" : 15,
    "endLineNumber" : 224,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}