{
  "id" : 345,
  "expression" : "x",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/entities/comp/PuddleComp.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "x",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 68,
      "startColumnNumber" : 96,
      "endLineNumber" : 68,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 68,
        "startColumnNumber" : 25,
        "endLineNumber" : 68,
        "endColumnNumber" : 101
      },
      "nodeContext" : "rect.setSize(Mathf.clamp(amount / (maxLiquid / 1.5f)) * 10f).setCenter(x,y)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 529,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 14
      },
      "nodeContext" : "Units.nearby(rect.setSize(Mathf.clamp(amount / (maxLiquid / 1.5f)) * 10f).setCenter(x,y),unit -> {\n  if (unit.isGrounded() && !unit.hovering) {\n    unit.hitbox(rect2);\n    if (rect.overlaps(rect2)) {\n      unit.apply(liquid.effect,60 * 2);\n      if (unit.vel.len() > 0.1) {\n        Fx.ripple.at(unit.x,unit.y,unit.type.rippleScale,liquid.color);\n      }\n    }\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 85,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 15
      },
      "nodeContext" : "Units.nearby(rect.setSize(Mathf.clamp(amount / (maxLiquid / 1.5f)) * 10f).setCenter(x,y),unit -> {\n  if (unit.isGrounded() && !unit.hovering) {\n    unit.hitbox(rect2);\n    if (rect.overlaps(rect2)) {\n      unit.apply(liquid.effect,60 * 2);\n      if (unit.vel.len() > 0.1) {\n        Fx.ripple.at(unit.x,unit.y,unit.type.rippleScale,liquid.color);\n      }\n    }\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 86,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 67,
        "startColumnNumber" : 56,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Units.nearby(rect.setSize(Mathf.clamp(amount / (maxLiquid / 1.5f)) * 10f).setCenter(x,y),unit -> {\n    if (unit.isGrounded() && !unit.hovering) {\n      unit.hitbox(rect2);\n      if (rect.overlaps(rect2)) {\n        unit.apply(liquid.effect,60 * 2);\n        if (unit.vel.len() > 0.1) {\n          Fx.ripple.at(unit.x,unit.y,unit.type.rippleScale,liquid.color);\n        }\n      }\n    }\n  }\n);\n  if (liquid.temperature > 0.7f && (tile.build != null) && Mathf.chance(0.5)) {\n    Fires.create(tile);\n  }\n  updateTime=40f;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 772,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (amount >= maxLiquid / 2f && updateTime <= 0f) {\n  Units.nearby(rect.setSize(Mathf.clamp(amount / (maxLiquid / 1.5f)) * 10f).setCenter(x,y),unit -> {\n    if (unit.isGrounded() && !unit.hovering) {\n      unit.hitbox(rect2);\n      if (rect.overlaps(rect2)) {\n        unit.apply(liquid.effect,60 * 2);\n        if (unit.vel.len() > 0.1) {\n          Fx.ripple.at(unit.x,unit.y,unit.type.rippleScale,liquid.color);\n        }\n      }\n    }\n  }\n);\n  if (liquid.temperature > 0.7f && (tile.build != null) && Mathf.chance(0.5)) {\n    Fires.create(tile);\n  }\n  updateTime=40f;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 125,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1738,
        "startLineNumber" : 41,
        "startColumnNumber" : 24,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float addSpeed=accepting > 0 ? 3f : 0f;\n  amount-=Time.delta * (1f - liquid.viscosity) / (5f + addSpeed);\n  amount+=accepting;\n  accepting=0f;\n  if (amount >= maxLiquid / 1.5f && generation < maxGeneration) {\n    float deposited=Math.min((amount - maxLiquid / 1.5f) / 4f,0.3f) * Time.delta;\n    for (    Point2 point : Geometry.d4) {\n      Tile other=world.tile(tile.x + point.x,tile.y + point.y);\n      if (other != null && other.block() == Blocks.air) {\n        Puddles.deposit(other,tile,liquid,deposited,generation + 1);\n        amount-=deposited / 2f;\n      }\n    }\n  }\n  amount=Mathf.clamp(amount,0,maxLiquid);\n  if (amount <= 0f) {\n    remove();\n  }\n  if (amount >= maxLiquid / 2f && updateTime <= 0f) {\n    Units.nearby(rect.setSize(Mathf.clamp(amount / (maxLiquid / 1.5f)) * 10f).setCenter(x,y),unit -> {\n      if (unit.isGrounded() && !unit.hovering) {\n        unit.hitbox(rect2);\n        if (rect.overlaps(rect2)) {\n          unit.apply(liquid.effect,60 * 2);\n          if (unit.vel.len() > 0.1) {\n            Fx.ripple.at(unit.x,unit.y,unit.type.rippleScale,liquid.color);\n          }\n        }\n      }\n    }\n);\n    if (liquid.temperature > 0.7f && (tile.build != null) && Mathf.chance(0.5)) {\n      Fires.create(tile);\n    }\n    updateTime=40f;\n  }\n  updateTime-=Time.delta;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 277,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1772,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void update(){\n  float addSpeed=accepting > 0 ? 3f : 0f;\n  amount-=Time.delta * (1f - liquid.viscosity) / (5f + addSpeed);\n  amount+=accepting;\n  accepting=0f;\n  if (amount >= maxLiquid / 1.5f && generation < maxGeneration) {\n    float deposited=Math.min((amount - maxLiquid / 1.5f) / 4f,0.3f) * Time.delta;\n    for (    Point2 point : Geometry.d4) {\n      Tile other=world.tile(tile.x + point.x,tile.y + point.y);\n      if (other != null && other.block() == Blocks.air) {\n        Puddles.deposit(other,tile,liquid,deposited,generation + 1);\n        amount-=deposited / 2f;\n      }\n    }\n  }\n  amount=Mathf.clamp(amount,0,maxLiquid);\n  if (amount <= 0f) {\n    remove();\n  }\n  if (amount >= maxLiquid / 2f && updateTime <= 0f) {\n    Units.nearby(rect.setSize(Mathf.clamp(amount / (maxLiquid / 1.5f)) * 10f).setCenter(x,y),unit -> {\n      if (unit.isGrounded() && !unit.hovering) {\n        unit.hitbox(rect2);\n        if (rect.overlaps(rect2)) {\n          unit.apply(liquid.effect,60 * 2);\n          if (unit.vel.len() > 0.1) {\n            Fx.ripple.at(unit.x,unit.y,unit.type.rippleScale,liquid.color);\n          }\n        }\n      }\n    }\n);\n    if (liquid.temperature > 0.7f && (tile.build != null) && Mathf.chance(0.5)) {\n      Fires.create(tile);\n    }\n    updateTime=40f;\n  }\n  updateTime-=Time.delta;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 68,
        "startColumnNumber" : 25,
        "endLineNumber" : 68,
        "endColumnNumber" : 101
      },
      "nodeContext" : "rect.setSize(Mathf.clamp(amount / (maxLiquid / 1.5f)) * 10f).setCenter(x,y)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 68,
    "startColumnNumber" : 96,
    "endLineNumber" : 68,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}