{
  "id" : 146,
  "expression" : "y < height",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/common/GlobalHistogramBinarizer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "y < height",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 111,
      "startColumnNumber" : 20,
      "endLineNumber" : 111,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int y=0; y < height; y++) {\n  int offset=y * width;\n  for (int x=0; x < width; x++) {\n    int pixel=localLuminances[offset + x] & 0xff;\n    if (pixel < blackPoint) {\n      matrix.set(x,y);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1400,
        "startLineNumber" : 86,
        "startColumnNumber" : 61,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  LuminanceSource source=getLuminanceSource();\n  int width=source.getWidth();\n  int height=source.getHeight();\n  BitMatrix matrix=new BitMatrix(width,height);\n  initArrays(width);\n  int[] localBuckets=buckets;\n  for (int y=1; y < 5; y++) {\n    int row=height * y / 5;\n    byte[] localLuminances=source.getRow(row,luminances);\n    int right=(width << 2) / 5;\n    for (int x=width / 5; x < right; x++) {\n      int pixel=localLuminances[x] & 0xff;\n      localBuckets[pixel >> LUMINANCE_SHIFT]++;\n    }\n  }\n  int blackPoint=estimateBlackPoint(localBuckets);\n  byte[] localLuminances=source.getMatrix();\n  for (int y=0; y < height; y++) {\n    int offset=y * width;\n    for (int x=0; x < width; x++) {\n      int pixel=localLuminances[offset + x] & 0xff;\n      if (pixel < blackPoint) {\n        matrix.set(x,y);\n      }\n    }\n  }\n  return matrix;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1472,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public BitMatrix getBlackMatrix() throws NotFoundException {\n  LuminanceSource source=getLuminanceSource();\n  int width=source.getWidth();\n  int height=source.getHeight();\n  BitMatrix matrix=new BitMatrix(width,height);\n  initArrays(width);\n  int[] localBuckets=buckets;\n  for (int y=1; y < 5; y++) {\n    int row=height * y / 5;\n    byte[] localLuminances=source.getRow(row,luminances);\n    int right=(width << 2) / 5;\n    for (int x=width / 5; x < right; x++) {\n      int pixel=localLuminances[x] & 0xff;\n      localBuckets[pixel >> LUMINANCE_SHIFT]++;\n    }\n  }\n  int blackPoint=estimateBlackPoint(localBuckets);\n  byte[] localLuminances=source.getMatrix();\n  for (int y=0; y < height; y++) {\n    int offset=y * width;\n    for (int x=0; x < width; x++) {\n      int pixel=localLuminances[offset + x] & 0xff;\n      if (pixel < blackPoint) {\n        matrix.set(x,y);\n      }\n    }\n  }\n  return matrix;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int y=0; y < height; y++) {\n  int offset=y * width;\n  for (int x=0; x < width; x++) {\n    int pixel=localLuminances[offset + x] & 0xff;\n    if (pixel < blackPoint) {\n      matrix.set(x,y);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 10
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 111,
    "startColumnNumber" : 20,
    "endLineNumber" : 111,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}