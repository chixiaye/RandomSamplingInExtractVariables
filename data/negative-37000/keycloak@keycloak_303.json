{
  "id" : 303,
  "expression" : "OPTIONAL",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/services/clientpolicy/condition/ClientScopesConditionFactory.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "OPTIONAL",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 50,
      "startColumnNumber" : 50,
      "endLineNumber" : 50,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 47,
        "startColumnNumber" : 19,
        "endLineNumber" : 50,
        "endColumnNumber" : 59
      },
      "nodeContext" : "new ProviderConfigProperty(TYPE,\"Scope Type\",\"If set to 'Default', condition evaluates to true if client has some default scopes of the values specified by the 'Expected Scopes' property. \" + \"If set to 'Optional', condition evaluates to true if client has some optional scopes of the values specified by the 'Expected Scopes' property and at the same time, the scope were used as a value of 'scope' parameter in the request\",ProviderConfigProperty.LIST_TYPE,OPTIONAL)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 539,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 59
      },
      "nodeContext" : "property=new ProviderConfigProperty(TYPE,\"Scope Type\",\"If set to 'Default', condition evaluates to true if client has some default scopes of the values specified by the 'Expected Scopes' property. \" + \"If set to 'Optional', condition evaluates to true if client has some optional scopes of the values specified by the 'Expected Scopes' property and at the same time, the scope were used as a value of 'scope' parameter in the request\",ProviderConfigProperty.LIST_TYPE,OPTIONAL)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 60
      },
      "nodeContext" : "property=new ProviderConfigProperty(TYPE,\"Scope Type\",\"If set to 'Default', condition evaluates to true if client has some default scopes of the values specified by the 'Expected Scopes' property. \" + \"If set to 'Optional', condition evaluates to true if client has some optional scopes of the values specified by the 'Expected Scopes' property and at the same time, the scope were used as a value of 'scope' parameter in the request\",ProviderConfigProperty.LIST_TYPE,OPTIONAL);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Initializer,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 42,
        "startColumnNumber" : 11,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  addCommonConfigProperties(configProperties);\n  ProviderConfigProperty property=new ProviderConfigProperty(SCOPES,PROVIDER_ID + \"-condition.label\",PROVIDER_ID + \"-condition.tooltip\",ProviderConfigProperty.MULTIVALUED_STRING_TYPE,OAuth2Constants.OFFLINE_ACCESS);\n  configProperties.add(property);\n  property=new ProviderConfigProperty(TYPE,\"Scope Type\",\"If set to 'Default', condition evaluates to true if client has some default scopes of the values specified by the 'Expected Scopes' property. \" + \"If set to 'Optional', condition evaluates to true if client has some optional scopes of the values specified by the 'Expected Scopes' property and at the same time, the scope were used as a value of 'scope' parameter in the request\",ProviderConfigProperty.LIST_TYPE,OPTIONAL);\n  property.setOptions(Arrays.asList(DEFAULT,OPTIONAL));\n  configProperties.add(property);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static {\n  addCommonConfigProperties(configProperties);\n  ProviderConfigProperty property=new ProviderConfigProperty(SCOPES,PROVIDER_ID + \"-condition.label\",PROVIDER_ID + \"-condition.tooltip\",ProviderConfigProperty.MULTIVALUED_STRING_TYPE,OAuth2Constants.OFFLINE_ACCESS);\n  configProperties.add(property);\n  property=new ProviderConfigProperty(TYPE,\"Scope Type\",\"If set to 'Default', condition evaluates to true if client has some default scopes of the values specified by the 'Expected Scopes' property. \" + \"If set to 'Optional', condition evaluates to true if client has some optional scopes of the values specified by the 'Expected Scopes' property and at the same time, the scope were used as a value of 'scope' parameter in the request\",ProviderConfigProperty.LIST_TYPE,OPTIONAL);\n  property.setOptions(Arrays.asList(DEFAULT,OPTIONAL));\n  configProperties.add(property);\n}\n",
      "nodeType" : "Initializer",
      "astNodeNumber" : 62,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 47,
        "startColumnNumber" : 19,
        "endLineNumber" : 50,
        "endColumnNumber" : 59
      },
      "nodeContext" : "new ProviderConfigProperty(TYPE,\"Scope Type\",\"If set to 'Default', condition evaluates to true if client has some default scopes of the values specified by the 'Expected Scopes' property. \" + \"If set to 'Optional', condition evaluates to true if client has some optional scopes of the values specified by the 'Expected Scopes' property and at the same time, the scope were used as a value of 'scope' parameter in the request\",ProviderConfigProperty.LIST_TYPE,OPTIONAL)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "OPTIONAL",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 51,
      "startColumnNumber" : 51,
      "endLineNumber" : 51,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 51,
        "startColumnNumber" : 28,
        "endLineNumber" : 51,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Arrays.asList(DEFAULT,OPTIONAL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 61
      },
      "nodeContext" : "property.setOptions(Arrays.asList(DEFAULT,OPTIONAL))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 62
      },
      "nodeContext" : "property.setOptions(Arrays.asList(DEFAULT,OPTIONAL));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Initializer,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 42,
        "startColumnNumber" : 11,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  addCommonConfigProperties(configProperties);\n  ProviderConfigProperty property=new ProviderConfigProperty(SCOPES,PROVIDER_ID + \"-condition.label\",PROVIDER_ID + \"-condition.tooltip\",ProviderConfigProperty.MULTIVALUED_STRING_TYPE,OAuth2Constants.OFFLINE_ACCESS);\n  configProperties.add(property);\n  property=new ProviderConfigProperty(TYPE,\"Scope Type\",\"If set to 'Default', condition evaluates to true if client has some default scopes of the values specified by the 'Expected Scopes' property. \" + \"If set to 'Optional', condition evaluates to true if client has some optional scopes of the values specified by the 'Expected Scopes' property and at the same time, the scope were used as a value of 'scope' parameter in the request\",ProviderConfigProperty.LIST_TYPE,OPTIONAL);\n  property.setOptions(Arrays.asList(DEFAULT,OPTIONAL));\n  configProperties.add(property);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static {\n  addCommonConfigProperties(configProperties);\n  ProviderConfigProperty property=new ProviderConfigProperty(SCOPES,PROVIDER_ID + \"-condition.label\",PROVIDER_ID + \"-condition.tooltip\",ProviderConfigProperty.MULTIVALUED_STRING_TYPE,OAuth2Constants.OFFLINE_ACCESS);\n  configProperties.add(property);\n  property=new ProviderConfigProperty(TYPE,\"Scope Type\",\"If set to 'Default', condition evaluates to true if client has some default scopes of the values specified by the 'Expected Scopes' property. \" + \"If set to 'Optional', condition evaluates to true if client has some optional scopes of the values specified by the 'Expected Scopes' property and at the same time, the scope were used as a value of 'scope' parameter in the request\",ProviderConfigProperty.LIST_TYPE,OPTIONAL);\n  property.setOptions(Arrays.asList(DEFAULT,OPTIONAL));\n  configProperties.add(property);\n}\n",
      "nodeType" : "Initializer",
      "astNodeNumber" : 62,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 62
      },
      "nodeContext" : "property.setOptions(Arrays.asList(DEFAULT,OPTIONAL));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 50,
    "startColumnNumber" : 50,
    "endLineNumber" : 50,
    "endColumnNumber" : 58
  }, {
    "charLength" : 8,
    "startLineNumber" : 51,
    "startColumnNumber" : 51,
    "endLineNumber" : 51,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}