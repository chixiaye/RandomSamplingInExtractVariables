{
  "id" : 226,
  "expression" : "i + 3",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/main/java/org/apache/dubbo/common/URLStrParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i + 3",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 250,
      "startColumnNumber" : 20,
      "endLineNumber" : 250,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 250,
        "startColumnNumber" : 20,
        "endLineNumber" : 250,
        "endColumnNumber" : 31
      },
      "nodeContext" : "i + 3 > len",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 252,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i + 3 > len) {\n  throw new IllegalArgumentException(\"unterminated escape sequence at index \" + i + \" of: \"+ str);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 249,
        "startColumnNumber" : 27,
        "endLineNumber" : 255,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i + 3 > len) {\n    throw new IllegalArgumentException(\"unterminated escape sequence at index \" + i + \" of: \"+ str);\n  }\n  ch=(char)decodeHexByte(str,i + 1);\n  i+=2;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 249,
        "startColumnNumber" : 12,
        "endLineNumber" : 255,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ch == '%') {\n  if (i + 3 > len) {\n    throw new IllegalArgumentException(\"unterminated escape sequence at index \" + i + \" of: \"+ str);\n  }\n  ch=(char)decodeHexByte(str,i + 1);\n  i+=2;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 247,
        "startColumnNumber" : 37,
        "endLineNumber" : 273,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char ch=str.charAt(i);\n  if (ch == '%') {\n    if (i + 3 > len) {\n      throw new IllegalArgumentException(\"unterminated escape sequence at index \" + i + \" of: \"+ str);\n    }\n    ch=(char)decodeHexByte(str,i + 1);\n    i+=2;\n  }\nswitch (ch) {\ncase '=':    if (nameStart == i) {\n      nameStart=i + 1;\n    }\n else     if (valueStart < nameStart) {\n      valueStart=i + 1;\n    }\n  break;\ncase ';':case '&':addParam(str,true,nameStart,valueStart,i - 2,params,tempBuf);\nnameStart=i + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 935,
        "startLineNumber" : 247,
        "startColumnNumber" : 8,
        "endLineNumber" : 273,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (i=from; i < len; i++) {\n  char ch=str.charAt(i);\n  if (ch == '%') {\n    if (i + 3 > len) {\n      throw new IllegalArgumentException(\"unterminated escape sequence at index \" + i + \" of: \"+ str);\n    }\n    ch=(char)decodeHexByte(str,i + 1);\n    i+=2;\n  }\nswitch (ch) {\ncase '=':    if (nameStart == i) {\n      nameStart=i + 1;\n    }\n else     if (valueStart < nameStart) {\n      valueStart=i + 1;\n    }\n  break;\ncase ';':case '&':addParam(str,true,nameStart,valueStart,i - 2,params,tempBuf);\nnameStart=i + 1;\nbreak;\ndefault:}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1339,
        "startLineNumber" : 236,
        "startColumnNumber" : 80,
        "endLineNumber" : 276,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int len=str.length();\n  if (from >= len) {\n    return Collections.emptyMap();\n  }\n  TempBuf tempBuf=DECODE_TEMP_BUF.get();\n  Map<String,String> params=new UnifiedMap<>();\n  int nameStart=from;\n  int valueStart=-1;\n  int i;\n  for (i=from; i < len; i++) {\n    char ch=str.charAt(i);\n    if (ch == '%') {\n      if (i + 3 > len) {\n        throw new IllegalArgumentException(\"unterminated escape sequence at index \" + i + \" of: \"+ str);\n      }\n      ch=(char)decodeHexByte(str,i + 1);\n      i+=2;\n    }\nswitch (ch) {\ncase '=':      if (nameStart == i) {\n        nameStart=i + 1;\n      }\n else       if (valueStart < nameStart) {\n        valueStart=i + 1;\n      }\n    break;\ncase ';':case '&':  addParam(str,true,nameStart,valueStart,i - 2,params,tempBuf);\nnameStart=i + 1;\nbreak;\ndefault:}\n}\naddParam(str,true,nameStart,valueStart,i,params,tempBuf);\nreturn params;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1415,
        "startLineNumber" : 236,
        "startColumnNumber" : 4,
        "endLineNumber" : 276,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Map<String,String> parseEncodedParams(String str,int from){\n  int len=str.length();\n  if (from >= len) {\n    return Collections.emptyMap();\n  }\n  TempBuf tempBuf=DECODE_TEMP_BUF.get();\n  Map<String,String> params=new UnifiedMap<>();\n  int nameStart=from;\n  int valueStart=-1;\n  int i;\n  for (i=from; i < len; i++) {\n    char ch=str.charAt(i);\n    if (ch == '%') {\n      if (i + 3 > len) {\n        throw new IllegalArgumentException(\"unterminated escape sequence at index \" + i + \" of: \"+ str);\n      }\n      ch=(char)decodeHexByte(str,i + 1);\n      i+=2;\n    }\nswitch (ch) {\ncase '=':      if (nameStart == i) {\n        nameStart=i + 1;\n      }\n else       if (valueStart < nameStart) {\n        valueStart=i + 1;\n      }\n    break;\ncase ';':case '&':  addParam(str,true,nameStart,valueStart,i - 2,params,tempBuf);\nnameStart=i + 1;\nbreak;\ndefault:}\n}\naddParam(str,true,nameStart,valueStart,i,params,tempBuf);\nreturn params;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 250,
        "startColumnNumber" : 20,
        "endLineNumber" : 250,
        "endColumnNumber" : 31
      },
      "nodeContext" : "i + 3 > len",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 250,
    "startColumnNumber" : 20,
    "endLineNumber" : 250,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}