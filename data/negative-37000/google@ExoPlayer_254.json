{
  "id" : 254,
  "expression" : "5",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/common/src/test/java/com/google/android/exoplayer2/text/span/SpanUtilTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 40,
      "startColumnNumber" : 19,
      "endLineNumber" : 40,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 41
      },
      "nodeContext" : "spannable.setSpan(new ForegroundColorSpan(Color.CYAN),2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 42
      },
      "nodeContext" : "spannable.setSpan(new ForegroundColorSpan(Color.CYAN),2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 35,
        "startColumnNumber" : 60,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Spannable spannable=SpannableString.valueOf(\"test text\");\n  spannable.setSpan(new ForegroundColorSpan(Color.CYAN),2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  ForegroundColorSpan newSpan=new ForegroundColorSpan(Color.BLUE);\n  SpanUtil.addOrReplaceSpan(spannable,newSpan,2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  Object[] spans=spannable.getSpans(0,spannable.length(),Object.class);\n  assertThat(spans).asList().containsExactly(newSpan);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 624,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void addOrReplaceSpan_replacesSameTypeAndIndexes(){\n  Spannable spannable=SpannableString.valueOf(\"test text\");\n  spannable.setSpan(new ForegroundColorSpan(Color.CYAN),2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  ForegroundColorSpan newSpan=new ForegroundColorSpan(Color.BLUE);\n  SpanUtil.addOrReplaceSpan(spannable,newSpan,2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  Object[] spans=spannable.getSpans(0,spannable.length(),Object.class);\n  assertThat(spans).asList().containsExactly(newSpan);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 41
      },
      "nodeContext" : "spannable.setSpan(new ForegroundColorSpan(Color.CYAN),2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 45,
      "startColumnNumber" : 55,
      "endLineNumber" : 45,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 91
      },
      "nodeContext" : "SpanUtil.addOrReplaceSpan(spannable,newSpan,2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 92
      },
      "nodeContext" : "SpanUtil.addOrReplaceSpan(spannable,newSpan,2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 35,
        "startColumnNumber" : 60,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Spannable spannable=SpannableString.valueOf(\"test text\");\n  spannable.setSpan(new ForegroundColorSpan(Color.CYAN),2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  ForegroundColorSpan newSpan=new ForegroundColorSpan(Color.BLUE);\n  SpanUtil.addOrReplaceSpan(spannable,newSpan,2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  Object[] spans=spannable.getSpans(0,spannable.length(),Object.class);\n  assertThat(spans).asList().containsExactly(newSpan);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 624,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void addOrReplaceSpan_replacesSameTypeAndIndexes(){\n  Spannable spannable=SpannableString.valueOf(\"test text\");\n  spannable.setSpan(new ForegroundColorSpan(Color.CYAN),2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  ForegroundColorSpan newSpan=new ForegroundColorSpan(Color.BLUE);\n  SpanUtil.addOrReplaceSpan(spannable,newSpan,2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n  Object[] spans=spannable.getSpans(0,spannable.length(),Object.class);\n  assertThat(spans).asList().containsExactly(newSpan);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 91
      },
      "nodeContext" : "SpanUtil.addOrReplaceSpan(spannable,newSpan,2,5,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 40,
    "startColumnNumber" : 19,
    "endLineNumber" : 40,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 45,
    "startColumnNumber" : 55,
    "endLineNumber" : 45,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}