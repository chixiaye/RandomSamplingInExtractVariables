{
  "id" : 96,
  "expression" : "entityId == null",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/query/MetricsQueryEsDAO.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entityId == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 230,
      "startColumnNumber" : 12,
      "endLineNumber" : 230,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 230,
        "startColumnNumber" : 12,
        "endLineNumber" : 230,
        "endColumnNumber" : 103
      },
      "nodeContext" : "entityId == null && IndexController.LogicIndicesRegister.isMetricTable(condition.getName())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1303,
        "startLineNumber" : 230,
        "startColumnNumber" : 8,
        "endLineNumber" : 253,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (entityId == null && IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n  BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n  boolQuery.must().add(rangeQueryBuilder);\n  boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n}\n else if (entityId == null) {\n  sourceBuilder.query(rangeQueryBuilder);\n}\n else if (IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n  BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n  boolQuery.must().add(rangeQueryBuilder);\n  boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n  boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n  sourceBuilder.query(boolQuery);\n}\n else {\n  BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n  boolQuery.must().add(rangeQueryBuilder);\n  boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n  sourceBuilder.query(boolQuery);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 150,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1974,
        "startLineNumber" : 217,
        "startColumnNumber" : 118,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<PointOfTime> pointOfTimes=duration.assembleDurationPoints();\n  List<String> ids=new ArrayList<>(pointOfTimes.size());\n  pointOfTimes.forEach(pointOfTime -> {\n    ids.add(pointOfTime.id(condition.getEntity().buildId()));\n  }\n);\n  RangeQueryBuilder rangeQueryBuilder=QueryBuilders.rangeQuery(Metrics.TIME_BUCKET).gte(duration.getStartTimeBucket()).lte(duration.getEndTimeBucket());\n  final String entityId=condition.getEntity().buildId();\n  if (entityId == null && IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n    BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n    boolQuery.must().add(rangeQueryBuilder);\n    boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n  }\n else   if (entityId == null) {\n    sourceBuilder.query(rangeQueryBuilder);\n  }\n else   if (IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n    BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n    boolQuery.must().add(rangeQueryBuilder);\n    boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n    boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n    sourceBuilder.query(boolQuery);\n  }\n else {\n    BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n    boolQuery.must().add(rangeQueryBuilder);\n    boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n    sourceBuilder.query(boolQuery);\n  }\n  sourceBuilder.size(0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2088,
        "startLineNumber" : 217,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected final void buildQuery(SearchSourceBuilder sourceBuilder,MetricsCondition condition,Duration duration){\n  final List<PointOfTime> pointOfTimes=duration.assembleDurationPoints();\n  List<String> ids=new ArrayList<>(pointOfTimes.size());\n  pointOfTimes.forEach(pointOfTime -> {\n    ids.add(pointOfTime.id(condition.getEntity().buildId()));\n  }\n);\n  RangeQueryBuilder rangeQueryBuilder=QueryBuilders.rangeQuery(Metrics.TIME_BUCKET).gte(duration.getStartTimeBucket()).lte(duration.getEndTimeBucket());\n  final String entityId=condition.getEntity().buildId();\n  if (entityId == null && IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n    BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n    boolQuery.must().add(rangeQueryBuilder);\n    boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n  }\n else   if (entityId == null) {\n    sourceBuilder.query(rangeQueryBuilder);\n  }\n else   if (IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n    BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n    boolQuery.must().add(rangeQueryBuilder);\n    boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n    boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n    sourceBuilder.query(boolQuery);\n  }\n else {\n    BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n    boolQuery.must().add(rangeQueryBuilder);\n    boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n    sourceBuilder.query(boolQuery);\n  }\n  sourceBuilder.size(0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 230,
        "startColumnNumber" : 12,
        "endLineNumber" : 230,
        "endColumnNumber" : 103
      },
      "nodeContext" : "entityId == null && IndexController.LogicIndicesRegister.isMetricTable(condition.getName())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "entityId == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 237,
      "startColumnNumber" : 19,
      "endLineNumber" : 237,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 237,
        "startColumnNumber" : 15,
        "endLineNumber" : 253,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (entityId == null) {\n  sourceBuilder.query(rangeQueryBuilder);\n}\n else if (IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n  BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n  boolQuery.must().add(rangeQueryBuilder);\n  boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n  boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n  sourceBuilder.query(boolQuery);\n}\n else {\n  BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n  boolQuery.must().add(rangeQueryBuilder);\n  boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n  sourceBuilder.query(boolQuery);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1303,
        "startLineNumber" : 230,
        "startColumnNumber" : 8,
        "endLineNumber" : 253,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (entityId == null && IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n  BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n  boolQuery.must().add(rangeQueryBuilder);\n  boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n}\n else if (entityId == null) {\n  sourceBuilder.query(rangeQueryBuilder);\n}\n else if (IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n  BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n  boolQuery.must().add(rangeQueryBuilder);\n  boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n  boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n  sourceBuilder.query(boolQuery);\n}\n else {\n  BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n  boolQuery.must().add(rangeQueryBuilder);\n  boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n  sourceBuilder.query(boolQuery);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 150,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1974,
        "startLineNumber" : 217,
        "startColumnNumber" : 118,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<PointOfTime> pointOfTimes=duration.assembleDurationPoints();\n  List<String> ids=new ArrayList<>(pointOfTimes.size());\n  pointOfTimes.forEach(pointOfTime -> {\n    ids.add(pointOfTime.id(condition.getEntity().buildId()));\n  }\n);\n  RangeQueryBuilder rangeQueryBuilder=QueryBuilders.rangeQuery(Metrics.TIME_BUCKET).gte(duration.getStartTimeBucket()).lte(duration.getEndTimeBucket());\n  final String entityId=condition.getEntity().buildId();\n  if (entityId == null && IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n    BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n    boolQuery.must().add(rangeQueryBuilder);\n    boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n  }\n else   if (entityId == null) {\n    sourceBuilder.query(rangeQueryBuilder);\n  }\n else   if (IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n    BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n    boolQuery.must().add(rangeQueryBuilder);\n    boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n    boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n    sourceBuilder.query(boolQuery);\n  }\n else {\n    BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n    boolQuery.must().add(rangeQueryBuilder);\n    boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n    sourceBuilder.query(boolQuery);\n  }\n  sourceBuilder.size(0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2088,
        "startLineNumber" : 217,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected final void buildQuery(SearchSourceBuilder sourceBuilder,MetricsCondition condition,Duration duration){\n  final List<PointOfTime> pointOfTimes=duration.assembleDurationPoints();\n  List<String> ids=new ArrayList<>(pointOfTimes.size());\n  pointOfTimes.forEach(pointOfTime -> {\n    ids.add(pointOfTime.id(condition.getEntity().buildId()));\n  }\n);\n  RangeQueryBuilder rangeQueryBuilder=QueryBuilders.rangeQuery(Metrics.TIME_BUCKET).gte(duration.getStartTimeBucket()).lte(duration.getEndTimeBucket());\n  final String entityId=condition.getEntity().buildId();\n  if (entityId == null && IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n    BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n    boolQuery.must().add(rangeQueryBuilder);\n    boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n  }\n else   if (entityId == null) {\n    sourceBuilder.query(rangeQueryBuilder);\n  }\n else   if (IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n    BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n    boolQuery.must().add(rangeQueryBuilder);\n    boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n    boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n    sourceBuilder.query(boolQuery);\n  }\n else {\n    BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n    boolQuery.must().add(rangeQueryBuilder);\n    boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n    sourceBuilder.query(boolQuery);\n  }\n  sourceBuilder.size(0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 237,
        "startColumnNumber" : 15,
        "endLineNumber" : 253,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (entityId == null) {\n  sourceBuilder.query(rangeQueryBuilder);\n}\n else if (IndexController.LogicIndicesRegister.isMetricTable(condition.getName())) {\n  BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n  boolQuery.must().add(rangeQueryBuilder);\n  boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n  boolQuery.must().add(QueryBuilders.termQuery(IndexController.LogicIndicesRegister.METRIC_TABLE_NAME,condition.getName()));\n  sourceBuilder.query(boolQuery);\n}\n else {\n  BoolQueryBuilder boolQuery=QueryBuilders.boolQuery();\n  boolQuery.must().add(rangeQueryBuilder);\n  boolQuery.must().add(QueryBuilders.termsQuery(Metrics.ENTITY_ID,entityId));\n  sourceBuilder.query(boolQuery);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 9
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 230,
    "startColumnNumber" : 12,
    "endLineNumber" : 230,
    "endColumnNumber" : 28
  }, {
    "charLength" : 16,
    "startLineNumber" : 237,
    "startColumnNumber" : 19,
    "endLineNumber" : 237,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}